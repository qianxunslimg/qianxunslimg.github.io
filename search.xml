<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树</title>
      <link href="/2022/04/04/shu/"/>
      <url>/2022/04/04/shu/</url>
      
        <content type="html"><![CDATA[<h1 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h1><h2 id="1-从遍历数据重建二叉树"><a href="#1-从遍历数据重建二叉树" class="headerlink" title="1. 从遍历数据重建二叉树"></a>1. 从遍历数据重建二叉树</h2><ul><li><p>重建方式 递归</p></li><li><p>三种遍历的数组分布</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/2.jpeg" alt="img" style="zoom:67%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/6.jpeg" alt="img" style="zoom:67%;"></li></ul><h3 id="105-从前序与中序遍历序列构造二叉树"><a href="#105-从前序与中序遍历序列构造二叉树" class="headerlink" title="105. 从前序与中序遍历序列构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/">105. 从前序与中序遍历序列构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// 又臭又长的就 不看了</span></span><br><span class="line">    <span class="comment">// TreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {</span></span><br><span class="line">    <span class="comment">//   if(preorder.size() == 0) return nullptr;</span></span><br><span class="line">    <span class="comment">//   int rootVal = preorder[0];</span></span><br><span class="line">    <span class="comment">//   int inorder_rootPos = find(inorder.begin(), inorder.end(), rootVal) - inorder.begin();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//   //前序左右子树</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; preorderL = vector&lt;int&gt;(preorder.begin()+1, preorder.begin()+1+inorder_rootPos);</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; preorderR =vector&lt;int&gt;(preorder.begin()+1+inorder_rootPos, preorder.end());</span></span><br><span class="line">    <span class="comment">//   //中序左右子树</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; inorderL = vector&lt;int&gt;(inorder.begin(), inorder.begin()+inorder_rootPos);</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; inorderR = vector&lt;int&gt;(inorder.begin() + inorder_rootPos + 1, inorder.end());</span></span><br><span class="line">    <span class="comment">//   //cout&lt;&lt;inorder_rootPos;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//   TreeNode* root = new TreeNode(rootVal);</span></span><br><span class="line">    <span class="comment">//   root-&gt;left = buildTree(preorderL, inorderL);</span></span><br><span class="line">    <span class="comment">//   root-&gt;right = buildTree(preorderR, inorderR);</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">//   return root;</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">buildTree</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, vector&lt;<span class="keyword">int</span>&gt;&amp; inorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(preorder, <span class="number">0</span> ,preorder.<span class="built_in">size</span>()<span class="number">-1</span>, inorder, <span class="number">0</span>, inorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, <span class="keyword">int</span> preS, <span class="keyword">int</span> preE, vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, <span class="keyword">int</span> inS, <span class="keyword">int</span> inE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(preS&gt;preE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">int</span> rootVal = preorder[preS];</span><br><span class="line">      <span class="keyword">int</span> index;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = inS; i&lt;=inE; i++){   <span class="comment">//注意这里是小于等于</span></span><br><span class="line">        <span class="keyword">if</span>(inorder[i] == rootVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index - inS;</span><br><span class="line">      TreeNode* root = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      root-&gt;left = <span class="built_in">build</span>(preorder,preS + <span class="number">1</span>, preS + leftSize, inorder, inS, index<span class="number">-1</span>);</span><br><span class="line">      root-&gt;right = <span class="built_in">build</span>(preorder, preS + <span class="number">1</span> + leftSize, preE, inorder, index+ <span class="number">1</span>, inE);</span><br><span class="line">      <span class="keyword">return</span> root;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="106-从中序与后序遍历序列构造二叉树"><a href="#106-从中序与后序遍历序列构造二叉树" class="headerlink" title="106. 从中序与后序遍历序列构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/">106. 从中序与后序遍历序列构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">buildTree</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(inorder, <span class="number">0</span>, inorder.<span class="built_in">size</span>()<span class="number">-1</span>, postorder, <span class="number">0</span>, postorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, <span class="keyword">int</span> inS, <span class="keyword">int</span> inE, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder, <span class="keyword">int</span> posS, <span class="keyword">int</span> posE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(inS&gt;inE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">int</span> rootVal = postorder[posE];</span><br><span class="line">      <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = inS; i&lt;=inE; i++){  <span class="comment">//注意这里是&lt;= 需要全部遍历</span></span><br><span class="line">        <span class="keyword">if</span>(inorder[i] == rootVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index - inS;</span><br><span class="line">      TreeNode* root = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      root-&gt;left = <span class="built_in">build</span>(inorder, inS, index<span class="number">-1</span>, postorder, posS, posS + leftSize<span class="number">-1</span>);</span><br><span class="line">      root-&gt;right = <span class="built_in">build</span>(inorder, index+<span class="number">1</span>, inE, postorder, posS + leftSize, posE<span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> root;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="889-根据前序和后序遍历构造二叉树"><a href="#889-根据前序和后序遍历构造二叉树" class="headerlink" title="889. 根据前序和后序遍历构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/">889. 根据前序和后序遍历构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode {</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() : val(0), left(nullptr), right(nullptr) {}</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}</span></span><br><span class="line"><span class="comment"> * };</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">constructFromPrePost</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(preorder, <span class="number">0</span>, preorder.<span class="built_in">size</span>()<span class="number">-1</span>, postorder, <span class="number">0</span>, postorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, <span class="keyword">int</span> preS, <span class="keyword">int</span> preE, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder, <span class="keyword">int</span> posS, <span class="keyword">int</span> posE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(preS&gt;preE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">if</span>(preS == preE) <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">TreeNode</span>(preorder[preS]);</span><br><span class="line">      <span class="keyword">int</span> rootVal = preorder[preS];</span><br><span class="line">      <span class="keyword">int</span> secVal = preorder[preS + <span class="number">1</span>];</span><br><span class="line">      <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = posS; i&lt;posE; i++){</span><br><span class="line">        <span class="keyword">if</span>(postorder[i] == secVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index-posS;</span><br><span class="line">      TreeNode* node = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      node-&gt;left = <span class="built_in">build</span>(preorder, preS+<span class="number">1</span>, preS+<span class="number">1</span>+leftSize, postorder, posS, posS + leftSize);</span><br><span class="line">      node-&gt;right = <span class="built_in">build</span>(preorder, preS+<span class="number">1</span>+leftSize+ <span class="number">1</span>, preE, postorder, posS + leftSize+<span class="number">1</span>, posE <span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> node;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="2-递归改迭代"><a href="#2-递归改迭代" class="headerlink" title="2. 递归改迭代"></a>2. <a href="https://labuladong.gitee.io/algo/2/19/34/">递归改迭代</a></h2><p>简单说就是这样一个流程：</p><p><strong>1、拿到一个节点，就一路向左遍历（因为 <code>traverse(root.left)</code> 排在前面），把路上的节点都压到栈里</strong>。</p><p><strong>2、往左走到头之后就开始退栈，看看栈顶节点的右指针，非空的话就重复第 1 步</strong>。</p><p>写成迭代代码就是这样：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Stack&lt;TreeNode*&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">traverse</span><span class="params">(TreeNode* root)</span> </span>{</span><br><span class="line">    <span class="built_in">pushLeftBranch</span>(root);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!stk.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        TreeNode p = stk.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="built_in">pushLeftBranch</span>(p.right);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左侧树枝一撸到底，都放入栈中</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushLeftBranch</span><span class="params">(TreeNode* p)</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (p != null) {</span><br><span class="line">        stk.<span class="built_in">push</span>(p);</span><br><span class="line">        p = p.left;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="迭代代码框架"><a href="#迭代代码框架" class="headerlink" title="迭代代码框架"></a>迭代代码框架</h4><p>想在迭代代码中体现前中后序遍历，关键点在哪里？</p><p><strong>当我从栈中拿出一个节点 <code>p</code>，我应该想办法搞清楚这个节点 <code>p</code> 左右子树的遍历情况</strong>。</p><p>如果 <code>p</code> 的左右子树都没有被遍历，那么现在对 <code>p</code> 进行操作就属于前序遍历代码。</p><p>如果 <code>p</code> 的左子树被遍历过了，而右子树没有被遍历过，那么现在对 <code>p</code> 进行操作就属于中序遍历代码。</p><p>如果 <code>p</code> 的左右子树都被遍历过了，那么现在对 <code>p</code> 进行操作就属于后序遍历代码。</p><p>上述逻辑写成伪码如下：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模拟函数调用栈</span></span><br><span class="line"><span class="keyword">private</span> :</span><br><span class="line">stack&lt;TreeNode*&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左侧树枝一撸到底</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushLeftBranch</span><span class="params">(TreeNode* p)</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">nullptr</span>) {</span><br><span class="line">        <span class="comment">/*******************/</span></span><br><span class="line">        <span class="comment">/** 前序遍历代码位置 **/</span></span><br><span class="line">        <span class="comment">/*******************/</span></span><br><span class="line">        stk.<span class="built_in">push</span>(p);</span><br><span class="line">        p = p-&gt;left;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">traverse</span><span class="params">(TreeNode* root)</span> </span>{</span><br><span class="line">    <span class="comment">// 指向上一次遍历完的子树根节点</span></span><br><span class="line">    TreeNode* visited = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(<span class="number">-1</span>);</span><br><span class="line">    <span class="comment">// 开始遍历整棵树</span></span><br><span class="line">    <span class="built_in">pushLeftBranch</span>(root);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!stk.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        TreeNode* p = stk.<span class="built_in">top</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// p 的左子树被遍历完了，且右子树没有被遍历过</span></span><br><span class="line">        <span class="keyword">if</span> ((p-&gt;left == <span class="literal">nullptr</span> || p.left == visited) </span><br><span class="line">          &amp;&amp; p-&gt;right != visited) {</span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">/** 中序遍历代码位置 **/</span></span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">// 去遍历 p 的右子树</span></span><br><span class="line">            <span class="built_in">pushLeftBranch</span>(p-&gt;right);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// p 的右子树被遍历完了</span></span><br><span class="line">        <span class="keyword">if</span> (p-&gt;right == <span class="literal">nullptr</span> || p-&gt;right == visited) {</span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">/** 后序遍历代码位置 **/</span></span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">// 以 p 为根的子树被遍历完了，出栈</span></span><br><span class="line">            <span class="comment">// visited 指针指向 p</span></span><br><span class="line">            visited = stk.<span class="built_in">pop</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="字典树-Trie"><a href="#字典树-Trie" class="headerlink" title="字典树 (Trie)"></a><a href="https://oi-wiki.org/string/trie/">字典树 (Trie)</a></h1><p><code>Trie 树又叫字典树、前缀树、单词查找树，是一种二叉树衍生出来的高级数据结构，主要应用场景是处理字符串前缀相关的操作。</code></p><p>为什么说非典型呢？因为它和一般的多叉树不一样，尤其在结点的数据结构设计上，比如一般的多叉树的结点是这样的：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span> {</span></span><br><span class="line">    VALUETYPE value;    <span class="comment">//结点值</span></span><br><span class="line">    vector&lt;TreeNode*&gt; children;    <span class="comment">//指向孩子结点</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>而 Trie 的结点是这样的(假设只包含’a’~’z’中的字符)：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TrieNode</span> {</span></span><br><span class="line">    <span class="keyword">bool</span> isEnd; <span class="comment">//该结点是否是一个串的结束</span></span><br><span class="line">    vector&lt;TrieNode*&gt; next; <span class="comment">//字母映射表 26 or 其他</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="包含三个单词-“sea”-”sells”-”she”-的-Trie"><a href="#包含三个单词-“sea”-”sells”-”she”-的-Trie" class="headerlink" title="包含三个单词 “sea”,”sells”,”she” 的 Trie"></a>包含三个单词 “sea”,”sells”,”she” 的 Trie</h4><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220405131024751.png" alt="image-20220405131024751" style="zoom:50%;"><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>){}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//树中插入单词</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含单词word</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">contianWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含以word为前缀的单词</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">containWordStartsWith</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在树中查找word的最短前缀 没有则返回为空</span></span><br><span class="line">    <span class="function">string <span class="title">shortestPrefixOf</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span>  </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        string res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> ch : word){</span><br><span class="line">            <span class="keyword">if</span> (node-&gt;isEnd || node-&gt;next[ch - <span class="string">'a'</span>] == <span class="literal">nullptr</span>) <span class="keyword">break</span>;</span><br><span class="line">            res += ch;</span><br><span class="line">            node = node-&gt;next[ch - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd ? res : <span class="string">""</span>;         <span class="comment">//有前缀返回前缀，没有则返回空字符串</span></span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//带通配符.的匹配 例如 a.c 匹配 abc</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasKeyWithPattern</span><span class="params">(<span class="keyword">const</span> string&amp; word, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="comment">//字符串到头 检测树枝是否到头</span></span><br><span class="line">        <span class="keyword">if</span>(index &gt;= word.<span class="built_in">size</span>()) <span class="keyword">return</span> node-&gt;isEnd == <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> ch = word[index];</span><br><span class="line">        <span class="comment">//没有遇到通配符</span></span><br><span class="line">        <span class="keyword">if</span>(ch != <span class="string">'.'</span> )</span><br><span class="line">            <span class="keyword">return</span> node-&gt;next[ch - <span class="string">'a'</span>] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[ch -  <span class="string">'a'</span>]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遇到通配符</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">26</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[i] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[i]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//没有找到</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="前缀树算法模板秒杀-5-道算法题-qq-com"><a href="#前缀树算法模板秒杀-5-道算法题-qq-com" class="headerlink" title="前缀树算法模板秒杀 5 道算法题 (qq.com)"></a><a href="https://mp.weixin.qq.com/s/hGrTUmM1zusPZZ0nA9aaNw">前缀树算法模板秒杀 5 道算法题 (qq.com)</a></h3><h4 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h4><p>描述：向 Trie 中插入一个单词 word</p><p>实现：这个操作和构建链表很像。首先从根结点的子结点开始与 word 第一个字符进行匹配，一直匹配到前缀链上没有对应的字符，这时开始不断开辟新的结点，直到插入完 word 的最后一个字符，同时还要将最后一个结点isEnd = true;，表示它是一个单词的末尾。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">        <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">            node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">        node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">    }</span><br><span class="line">    node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4><p>描述：查找 Trie 中是否存在单词 word</p><p>实现：从根结点的子结点开始，一直向下匹配即可，如果出现结点值为空就返回 false，如果匹配到了最后一个字符，那我们只需判断 node-&gt;isEnd即可。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">contianWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">        node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="前缀匹配"><a href="#前缀匹配" class="headerlink" title="前缀匹配"></a>前缀匹配</h4><p>描述：判断 Trie 中是或有以 word为前缀的单词</p><p>实现：和 search 操作类似，只是不需要判断最后一个字符结点的isEnd，因为既然能匹配到最后一个字符，那后面一定有单词是以它为前缀的。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">containWordStartsWith</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">        node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="最短词根"><a href="#最短词根" class="headerlink" title="最短词根"></a>最短词根</h4><p>描述：判断 string str在Trie 中的最短词根 （满足 isEnd）</p><p>实现：在前缀树上遍历单词，如果当前isEnd（表示找到了一个词根）或者 遍历到树尖，停止遍历</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找并返回前缀</span></span><br><span class="line"><span class="function">string <span class="title">shortestPrefixOf</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span>  </span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    string res = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> ch : word){</span><br><span class="line">        <span class="keyword">if</span> (node-&gt;isEnd || node-&gt;next[ch - <span class="string">'a'</span>] == <span class="literal">nullptr</span>) <span class="keyword">break</span>;</span><br><span class="line">        res += ch;</span><br><span class="line">        node = node-&gt;next[ch - <span class="string">'a'</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> node-&gt;isEnd ? res : <span class="string">""</span>;         <span class="comment">//有前缀返回前缀，没有则返回空字符串</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="带通配符的查找"><a href="#带通配符的查找" class="headerlink" title="带通配符的查找"></a>带通配符的查找</h4><p>描述：使用通配符来匹配多个键，其关键就在于通配符<code>.</code>可以匹配所有字符。</p><p>实现：见代码</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//带通配符.的匹配 例如 a.c 匹配 abc</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">hasKeyWithPattern</span><span class="params">(<span class="keyword">const</span> string&amp; word, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">//字符串到头 检测树枝是否到头</span></span><br><span class="line">    <span class="keyword">if</span>(index &gt;= word.<span class="built_in">size</span>()) <span class="keyword">return</span> node-&gt;isEnd == <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> ch = word[index];</span><br><span class="line">    <span class="comment">//没有遇到通配符</span></span><br><span class="line">    <span class="keyword">if</span>(ch != <span class="string">'.'</span> )</span><br><span class="line">        <span class="keyword">return</span> node-&gt;next[ch - <span class="string">'a'</span>] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[ch -  <span class="string">'a'</span>]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遇到通配符</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">26</span>; i++){</span><br><span class="line">        <span class="keyword">if</span>(node-&gt;next[i] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[i]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//没有找到</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="208-实现-Trie-前缀树"><a href="#208-实现-Trie-前缀树" class="headerlink" title="208. 实现 Trie (前缀树)"></a><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=208">labuladong 题解</a></p><p>难度中等1135收藏分享切换为英文接收动态反馈</p><p>**<a href="https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E6%A0%91/9825209?fr=aladdin">Trie</a>**（发音类似 “try”）或者说 <strong>前缀树</strong> 是一种树形数据结构，用于高效地存储和检索字符串数据集中的键。这一数据结构有相当多的应用情景，例如自动补完和拼写检查。</p><p>请你实现 Trie 类：</p><ul><li><code>Trie()</code> 初始化前缀树对象。</li><li><code>void insert(String word)</code> 向前缀树中插入字符串 <code>word</code> 。</li><li><code>boolean search(String word)</code> 如果字符串 <code>word</code> 在前缀树中，返回 <code>true</code>（即，在检索之前已经插入）；否则，返回 <code>false</code> 。</li><li><code>boolean startsWith(String prefix)</code> 如果之前已经插入的字符串 <code>word</code> 的前缀之一为 <code>prefix</code> ，返回 <code>true</code> ；否则，返回 <code>false</code> 。</li></ul><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">输入</span><br><span class="line">["Trie", "insert", "search", "search", "startsWith", "insert", "search"]</span><br><span class="line">[[], ["apple"], ["apple"], ["app"], ["app"], ["app"], ["app"]]</span><br><span class="line">输出</span><br><span class="line">[null, null, true, false, true, null, true]</span><br><span class="line"></span><br><span class="line">解释</span><br><span class="line">Trie trie = new Trie();</span><br><span class="line">trie.insert("apple");</span><br><span class="line">trie.search("apple");   // 返回 True</span><br><span class="line">trie.search("app");     // 返回 False</span><br><span class="line">trie.startsWith("app"); // 返回 True</span><br><span class="line">trie.insert("app");</span><br><span class="line">trie.search("app");     // 返回 True</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>构建前缀树</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>() : <span class="built_in">isEnd</span>(<span class="number">0</span>), <span class="built_in">next</span>(<span class="number">26</span>){}</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(string word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">startsWith</span><span class="params">(string prefix)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : prefix){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="648-单词替换-查找最短前缀"><a href="#648-单词替换-查找最短前缀" class="headerlink" title="648. 单词替换 查找最短前缀"></a><a href="https://leetcode-cn.com/problems/replace-words/">648. 单词替换 查找最短前缀</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=648">labuladong 题解</a></p><p>难度中等163收藏分享切换为英文接收动态反馈</p><p>在英语中，我们有一个叫做 <code>词根</code>(root) 的概念，可以词根<strong>后面</strong>添加其他一些词组成另一个较长的单词——我们称这个词为 <code>继承词</code>(successor)。例如，词根<code>an</code>，跟随着单词 <code>other</code>(其他)，可以形成新的单词 <code>another</code>(另一个)。</p><p>现在，给定一个由许多<strong>词根</strong>组成的词典 <code>dictionary</code> 和一个用空格分隔单词形成的句子 <code>sentence</code>。你需要将句子中的所有<strong>继承词</strong>用<strong>词根</strong>替换掉。如果<strong>继承词</strong>有许多可以形成它的<strong>词根</strong>，则用<strong>最短</strong>的词根替换它。</p><p>你需要输出替换之后的句子。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：dictionary = ["cat","bat","rat"], sentence = "the cattle was rattled by the battery"</span><br><span class="line">输出："the cat was rat by the bat"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：dictionary = ["a","b","c"], sentence = "aadsfasf absbs bbab cadsfafs"</span><br><span class="line">输出："a a b c"</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>){}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//树中插入单词</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含单词word</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">contianWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含以word为前缀的单词</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">containWordStartsWith</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在树中查找word的最短前缀 没有则返回为空</span></span><br><span class="line">    <span class="function">string <span class="title">shortestPrefixOf</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span>  </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        string res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> ch : word){</span><br><span class="line">            <span class="keyword">if</span> (node-&gt;isEnd || node-&gt;next[ch - <span class="string">'a'</span>] == <span class="literal">nullptr</span>) <span class="keyword">break</span>;</span><br><span class="line">            res += ch;</span><br><span class="line">            node = node-&gt;next[ch - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd ? res : <span class="string">""</span>;         <span class="comment">//有前缀返回前缀，没有则返回空字符串</span></span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">replaceWords</span><span class="params">(vector&lt;string&gt;&amp; dictionary, string sentence)</span> </span>{</span><br><span class="line">        Trie* trie = <span class="keyword">new</span> Trie;</span><br><span class="line">        <span class="function">stringstream <span class="title">ss</span><span class="params">(sentence)</span></span>;</span><br><span class="line">        string s;</span><br><span class="line">        <span class="built_in">sort</span>(dictionary.<span class="built_in">begin</span>(), dictionary.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//词根存入字典树</span></span><br><span class="line">        <span class="keyword">for</span>(string str : dictionary)</span><br><span class="line">            trie-&gt;<span class="built_in">insert</span>(str);</span><br><span class="line"></span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        vector&lt;string&gt; all;</span><br><span class="line">        <span class="keyword">while</span>(ss &gt;&gt; s)</span><br><span class="line">            all.<span class="built_in">push_back</span>(s);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(string word : all){</span><br><span class="line">            string prefix = trie-&gt;<span class="built_in">shortestPrefixOf</span>(word);</span><br><span class="line">            <span class="keyword">if</span>(prefix.<span class="built_in">size</span>() != <span class="number">0</span>){</span><br><span class="line">                ans += prefix;</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                ans += word;</span><br><span class="line">            }</span><br><span class="line">            ans += <span class="string">" "</span>;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        ans.<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="211-添加与搜索单词-数据结构设计-带通配符的查找"><a href="#211-添加与搜索单词-数据结构设计-带通配符的查找" class="headerlink" title="211. 添加与搜索单词 - 数据结构设计 带通配符的查找"></a><a href="https://leetcode-cn.com/problems/design-add-and-search-words-data-structure/">211. 添加与搜索单词 - 数据结构设计 带通配符的查找</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=211">labuladong 题解</a></p><p>难度中等416英文版讨论区</p><p>请你设计一个数据结构，支持 添加新单词 和 查找字符串是否与任何先前添加的字符串匹配 。</p><p>实现词典类 <code>WordDictionary</code> ：</p><ul><li><code>WordDictionary()</code> 初始化词典对象</li><li><code>void addWord(word)</code> 将 <code>word</code> 添加到数据结构中，之后可以对它进行匹配</li><li><code>bool search(word)</code> 如果数据结构中存在字符串与 <code>word</code> 匹配，则返回 <code>true</code> ；否则，返回 <code>false</code> 。<code>word</code> 中可能包含一些 <code>'.'</code> ，每个 <code>.</code> 都可以表示任何一个字母。</li></ul><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["WordDictionary","addWord","addWord","addWord","search","search","search","search"]</span><br><span class="line">[[],["bad"],["dad"],["mad"],["pad"],["bad"],[".ad"],["b.."]]</span><br><span class="line">输出：</span><br><span class="line">[null,null,null,null,false,true,true,true]</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">WordDictionary wordDictionary = new WordDictionary();</span><br><span class="line">wordDictionary.addWord("bad");</span><br><span class="line">wordDictionary.addWord("dad");</span><br><span class="line">wordDictionary.addWord("mad");</span><br><span class="line">wordDictionary.search("pad"); // 返回 False</span><br><span class="line">wordDictionary.search("bad"); // 返回 True</span><br><span class="line">wordDictionary.search(".ad"); // 返回 True</span><br><span class="line">wordDictionary.search("b.."); // 返回 True</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>前缀树带通配符的匹配 加入startIndex进行递归</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>) {}</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span></span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> ch : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[ch - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[ch - <span class="string">'a'</span>] = <span class="keyword">new</span> Trie;</span><br><span class="line">            node = node-&gt;next[ch - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasKeyWithPattern</span><span class="params">(<span class="keyword">const</span> string&amp; word, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="comment">//字符串到头 检测树枝是否到头</span></span><br><span class="line">        <span class="keyword">if</span>(index &gt;= word.<span class="built_in">size</span>()) <span class="keyword">return</span> node-&gt;isEnd == <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> ch = word[index];</span><br><span class="line">        <span class="comment">//没有遇到通配符</span></span><br><span class="line">        <span class="keyword">if</span>(ch != <span class="string">'.'</span> )</span><br><span class="line">            <span class="keyword">return</span> node-&gt;next[ch - <span class="string">'a'</span>] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[ch -  <span class="string">'a'</span>]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遇到通配符</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">26</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[i] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[i]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//没有找到</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WordDictionary</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Trie* trie;</span><br><span class="line">    <span class="built_in">WordDictionary</span>() {</span><br><span class="line">        trie = <span class="keyword">new</span> Trie;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addWord</span><span class="params">(string word)</span> </span>{</span><br><span class="line">        trie-&gt;<span class="built_in">insert</span>(word);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(string word)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> trie-&gt;<span class="built_in">hasKeyWithPattern</span>(word, <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="720-词典中最长的单词-经典"><a href="#720-词典中最长的单词-经典" class="headerlink" title="720. 词典中最长的单词 经典"></a><a href="https://leetcode-cn.com/problems/longest-word-in-dictionary/">720. 词典中最长的单词 经典</a></h3><p>难度简单301</p><p>给出一个字符串数组 <code>words</code> 组成的一本英语词典。返回 <code>words</code> 中最长的一个单词，该单词是由 <code>words</code> 词典中其他单词逐步添加一个字母组成。</p><p>若其中有多个可行的答案，则返回答案中字典序最小的单词。若无答案，则返回空字符串。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：words = ["w","wo","wor","worl", "world"]</span><br><span class="line">输出："world"</span><br><span class="line">解释： 单词"world"可由"w", "wo", "wor", 和 "worl"逐步添加一个字母组成。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：words = ["a", "banana", "app", "appl", "ap", "apply", "apple"]</span><br><span class="line">输出："apple"</span><br><span class="line">解释："apply" 和 "apple" 都能由词典中的单词组成。但是 "apple" 的字典序小于 "apply" </span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>哈希解法 sort后 依次substr检查是否存在 存在则压入</li><li>字典树  需要自己构建函数 isGoodWord查找单词路径上每个节点 是否都是isEnd</li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>){}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//树中插入单词</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含单词word</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isGoodWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span> || node-&gt;isEnd == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestWord</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>{</span><br><span class="line">        Trie trie;</span><br><span class="line">        <span class="keyword">for</span>(string word : words)  trie.<span class="built_in">insert</span>(word);</span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(string word : words){</span><br><span class="line">            <span class="keyword">if</span>(trie.<span class="built_in">isGoodWord</span>(word)){</span><br><span class="line">                <span class="keyword">if</span>(word.<span class="built_in">size</span>()&gt;ans.<span class="built_in">size</span>() || (word.<span class="built_in">size</span>() == ans.<span class="built_in">size</span>() &amp;&amp; word&lt;ans))</span><br><span class="line">                    ans = word;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>){}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//树中插入单词</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含单词word</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isGoodWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span> || node-&gt;isEnd == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestWord</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>{</span><br><span class="line">        Trie trie;</span><br><span class="line">        <span class="keyword">for</span>(string word : words)  trie.<span class="built_in">insert</span>(word);</span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(string word : words){</span><br><span class="line">            <span class="keyword">if</span>(trie.<span class="built_in">isGoodWord</span>(word)){</span><br><span class="line">                <span class="keyword">if</span>(word.<span class="built_in">size</span>()&gt;ans.<span class="built_in">size</span>() || (word.<span class="built_in">size</span>() == ans.<span class="built_in">size</span>() &amp;&amp; word&lt;ans))</span><br><span class="line">                    ans = word;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//哈希解法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestWord</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>{</span><br><span class="line">        <span class="built_in">sort</span>(words.<span class="built_in">begin</span>(), words.<span class="built_in">end</span>());</span><br><span class="line">        unordered_set&lt;string&gt; sett;</span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        sett.<span class="built_in">insert</span>(ans);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;words.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(sett.<span class="built_in">count</span>(words[i].<span class="built_in">substr</span>(<span class="number">0</span>, words[i].<span class="built_in">size</span>() <span class="number">-1</span>))){</span><br><span class="line">                <span class="keyword">if</span>(words[i].<span class="built_in">size</span>()&gt;ans.<span class="built_in">size</span>())</span><br><span class="line">                    ans = words[i];</span><br><span class="line">                sett.<span class="built_in">insert</span>(words[i]); <span class="comment">//满足条件才会insert</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h1 id="线段树和树状数组"><a href="#线段树和树状数组" class="headerlink" title="线段树和树状数组"></a><a href="https://oi-wiki.org/ds/seg/">线段树</a>和树状数组</h1><h3 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h3><p>线段树是算法竞赛中常用的用来维护 <strong>区间信息</strong> 的数据结构。</p><p>线段树可以在Ologn 的时间复杂度内实现单点修改、区间修改、区间查询（区间求和，求区间最大值，求区间最小值）等操作。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220405022002717.png" alt="image-20220405022002717"></p><h3 id="线段树-1"><a href="#线段树-1" class="headerlink" title="线段树"></a>线段树</h3><p>树状数组和线段树具有相似的功能，但他俩毕竟还有一些区别：树状数组能有的操作，线段树一定有；线段树有的操作，树状数组不一定有。但是树状数组的代码要比线段树短，思维更清晰，速度也更快，在解决一些单点修改的问题时，树状数组是不二之选。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220405024155141.png" alt="image-20220405024155141"></p><h3 id="307-区域和检索-数组可修改"><a href="#307-区域和检索-数组可修改" class="headerlink" title="307. 区域和检索 - 数组可修改"></a><u><a href="https://leetcode-cn.com/problems/range-sum-query-mutable/">307. 区域和检索 - 数组可修改</a></u></h3><p>难度中等470英文版讨论区</p><p>给你一个数组 <code>nums</code> ，请你完成两类查询。</p><ol><li>其中一类查询要求 <strong>更新</strong> 数组 <code>nums</code> 下标对应的值</li><li>另一类查询要求返回数组 <code>nums</code> 中索引 <code>left</code> 和索引 <code>right</code> 之间（ <strong>包含</strong> ）的nums元素的 <strong>和</strong> ，其中 <code>left &lt;= right</code></li></ol><p>实现 <code>NumArray</code> 类：</p><ul><li><code>NumArray(int[] nums)</code> 用整数数组 <code>nums</code> 初始化对象</li><li><code>void update(int index, int val)</code> 将 <code>nums[index]</code> 的值 <strong>更新</strong> 为 <code>val</code></li><li><code>int sumRange(int left, int right)</code> 返回数组 <code>nums</code> 中索引 <code>left</code> 和索引 <code>right</code> 之间（ <strong>包含</strong> ）的nums元素的 <strong>和</strong> （即，<code>nums[left] + nums[left + 1], ..., nums[right]</code>）</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["NumArray", "sumRange", "update", "sumRange"]</span><br><span class="line">[[[1, 3, 5]], [0, 2], [1, 2], [0, 2]]</span><br><span class="line">输出：</span><br><span class="line">[null, 9, null, 8]</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">NumArray numArray = new NumArray([1, 3, 5]);</span><br><span class="line">numArray.sumRange(0, 2); // 返回 1 + 3 + 5 = 9</span><br><span class="line">numArray.update(1, 2);   // nums = [1,2,5]</span><br><span class="line">numArray.sumRange(0, 2); // 返回 1 + 2 + 5 = 8</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线段树</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; segmentTree;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> node, <span class="keyword">int</span> s, <span class="keyword">int</span> e, vector&lt;<span class="keyword">int</span>&gt; &amp;nums)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (s == e) {</span><br><span class="line">            segmentTree[node] = nums[s];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> m = s + (e - s) / <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">build</span>(node * <span class="number">2</span> + <span class="number">1</span>, s, m, nums);</span><br><span class="line">        <span class="built_in">build</span>(node * <span class="number">2</span> + <span class="number">2</span>, m + <span class="number">1</span>, e, nums);</span><br><span class="line">        segmentTree[node] = segmentTree[node * <span class="number">2</span> + <span class="number">1</span>] + segmentTree[node * <span class="number">2</span> + <span class="number">2</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> val, <span class="keyword">int</span> node, <span class="keyword">int</span> s, <span class="keyword">int</span> e)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (s == e) {</span><br><span class="line">            segmentTree[node] = val;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> m = s + (e - s) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (index &lt;= m) {</span><br><span class="line">            <span class="built_in">change</span>(index, val, node * <span class="number">2</span> + <span class="number">1</span>, s, m);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">change</span>(index, val, node * <span class="number">2</span> + <span class="number">2</span>, m + <span class="number">1</span>, e);</span><br><span class="line">        }</span><br><span class="line">        segmentTree[node] = segmentTree[node * <span class="number">2</span> + <span class="number">1</span>] + segmentTree[node * <span class="number">2</span> + <span class="number">2</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">range</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span> node, <span class="keyword">int</span> s, <span class="keyword">int</span> e)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (left == s &amp;&amp; right == e) {</span><br><span class="line">            <span class="keyword">return</span> segmentTree[node];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> m = s + (e - s) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (right &lt;= m) {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">range</span>(left, right, node * <span class="number">2</span> + <span class="number">1</span>, s, m);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (left &gt; m) {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">range</span>(left, right, node * <span class="number">2</span> + <span class="number">2</span>, m + <span class="number">1</span>, e);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">range</span>(left, m, node * <span class="number">2</span> + <span class="number">1</span>, s, m) + <span class="built_in">range</span>(m + <span class="number">1</span>, right, node * <span class="number">2</span> + <span class="number">2</span>, m + <span class="number">1</span>, e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) : <span class="built_in">n</span>(nums.<span class="built_in">size</span>()), <span class="built_in">segmentTree</span>(nums.<span class="built_in">size</span>() * <span class="number">4</span>) {</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">0</span>, <span class="number">0</span>, n - <span class="number">1</span>, nums);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">        <span class="built_in">change</span>(index, val, <span class="number">0</span>, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">range</span>(left, right, <span class="number">0</span>, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//树状数组</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; A;<span class="comment">// 原数组</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; C;   <span class="comment">// 树状数组</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lowBit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums):<span class="built_in">A</span>(nums) {</span><br><span class="line">        C = vector&lt;<span class="keyword">int</span>&gt; (A.<span class="built_in">size</span>() + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//构造树形数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=A.<span class="built_in">size</span>(); i++) {</span><br><span class="line">            C[i] += A[i - <span class="number">1</span>];</span><br><span class="line">            <span class="comment">//父结点要加上子结点的值</span></span><br><span class="line">            <span class="keyword">if</span>(i + <span class="built_in">lowBit</span>(i) &lt;= A.<span class="built_in">size</span>()) </span><br><span class="line">                C[i + <span class="built_in">lowBit</span>(i)] += C[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> d = val - A[index];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index + <span class="number">1</span>; i &lt; C.<span class="built_in">size</span>(); i += <span class="built_in">lowBit</span>(i)) </span><br><span class="line">            C[i] += d; <span class="comment">// 更新树状数组       </span></span><br><span class="line">        A[index] = val; <span class="comment">// 更新原数组</span></span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> r = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//求right的前缀和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = right + <span class="number">1</span>; i &gt;= <span class="number">1</span>; i -= <span class="built_in">lowBit</span>(i)) r += C[i];</span><br><span class="line">        <span class="comment">//求left的前缀和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = left; i &gt;= <span class="number">1</span>; i -= <span class="built_in">lowBit</span>(i)) l += C[i];</span><br><span class="line">        <span class="keyword">return</span> r - l;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window开机内存占用高</title>
      <link href="/2022/04/04/window-kai-ji-nei-cun-zhan-yong-gao/"/>
      <url>/2022/04/04/window-kai-ji-nei-cun-zhan-yong-gao/</url>
      
        <content type="html"><![CDATA[<p>16g的内存，开机动不动就飙过50%</p><p>尤其是之前发现但从未去解决的 Lenovo.Modern.ImController.exe 服务 不断跑内存的情况 下定决心处理一下</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol><li><p>win + r  msconfig</p><p>服务-&gt;隐藏所有Microsoft服务  然后剩余的服务 感觉用不到的该关关 </p><p>不建议全部禁用 影响一些自己设置的开机启动项，个人就是lenovo全部禁用 解决了Lenovo.Modern.ImController.exe的问题</p><p>其他的 也多多少少禁用下 很多没用的服务</p></li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220404164932465.png" alt="image-20220404164932465" style="zoom: 67%;"><ol start="2"><li><p>任务管理器的 启动项 该关关</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220404165413230.png" alt="image-20220404165413230" style="zoom: 67%;"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 开发随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针</title>
      <link href="/2022/04/03/shuang-zhi-zhen/"/>
      <url>/2022/04/03/shuang-zhi-zhen/</url>
      
        <content type="html"><![CDATA[<h3 id="剑指-Offer-II-007-数组中和为-0-的三个数"><a href="#剑指-Offer-II-007-数组中和为-0-的三个数" class="headerlink" title="剑指 Offer II 007. 数组中和为 0 的三个数"></a><a href="https://leetcode-cn.com/problems/1fGaJU/">剑指 Offer II 007. 数组中和为 0 的三个数</a></h3><p>难度中等50收藏分享切换为英文接收动态反馈英文版讨论区</p><p>给定一个包含 <code>n</code> 个整数的数组 <code>nums</code>，判断 <code>nums</code> 中是否存在三个元素 <code>a</code> ，<code>b</code> ，<code>c</code> <em>，</em>使得 <code>a + b + c = 0</code> ？请找出所有和为 <code>0</code> 且 <strong>不重复</strong> 的三元组。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [-1,0,1,2,-1,-4]</span><br><span class="line">输出：[[-1,-1,2],[-1,0,1]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0]</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>遍历起始点 然后双指针遍历</li><li>注意 去重去重 每一个数 都需要去重</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">threeSum</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">3</span> || n == <span class="number">0</span>) <span class="keyword">return</span> {}; <span class="comment">//特判</span></span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历 然后双指针</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>) <span class="keyword">break</span>; <span class="comment">//剪枝</span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span> &amp;&amp; nums[i] == nums[i<span class="number">-1</span>]) <span class="keyword">continue</span>; <span class="comment">//去重</span></span><br><span class="line">            <span class="keyword">int</span> left = i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> right = n<span class="number">-1</span>;</span><br><span class="line">            <span class="comment">//注意 这里并不是二分判定 而是双指针</span></span><br><span class="line">            <span class="keyword">while</span>(left &lt; right){ </span><br><span class="line">                <span class="keyword">int</span> sum = nums[i] + nums[left] + nums[right];</span><br><span class="line">                <span class="keyword">if</span>(sum &gt; <span class="number">0</span>){</span><br><span class="line">                    right--;</span><br><span class="line">                }<span class="keyword">else</span> <span class="keyword">if</span>(sum&lt;<span class="number">0</span>){</span><br><span class="line">                    left++;</span><br><span class="line">                }<span class="keyword">else</span>{</span><br><span class="line">                    ans.<span class="built_in">push_back</span>({nums[i], nums[left], nums[right]});</span><br><span class="line">                    <span class="comment">//很重要的去重</span></span><br><span class="line">                    <span class="keyword">while</span>(left&lt;right &amp;&amp; nums[left] == nums[left+<span class="number">1</span>]) left++;</span><br><span class="line">                    <span class="keyword">while</span>(left&lt;right &amp;&amp; nums[right] == nums[right<span class="number">-1</span>]) right--;</span><br><span class="line">                    left++;right--;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回文</title>
      <link href="/2022/04/02/hui-wen/"/>
      <url>/2022/04/02/hui-wen/</url>
      
        <content type="html"><![CDATA[<h3 id="剑指-Offer-II-018-有效的回文"><a href="#剑指-Offer-II-018-有效的回文" class="headerlink" title="剑指 Offer II 018. 有效的回文"></a><a href="https://leetcode-cn.com/problems/XltzEq/">剑指 Offer II 018. 有效的回文</a></h3><p>难度简单18</p><p>给定一个字符串 <code>s</code> ，验证 <code>s</code> 是否是 <strong>回文串</strong> ，只考虑字母和数字字符，可以忽略字母的大小写。</p><p>本题中，将空字符串定义为有效的 <strong>回文串</strong> 。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "A man, a plan, a canal: Panama"</span><br><span class="line">输出: true</span><br><span class="line">解释："amanaplanacanalpanama" 是回文串</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "race a car"</span><br><span class="line">输出: false</span><br><span class="line">解释："raceacar" 不是回文串</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>开辟新string 判断是否回文</li><li>原地判断 一次遍历</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>开辟新string 判断是否回文</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        string ss;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;s.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">tolower</span>(s[i])&gt;=<span class="string">'a'</span> &amp;&amp; <span class="built_in">tolower</span>(s[i])&lt;=<span class="string">'z'</span>  ||(s[i]&gt;=<span class="string">'0'</span> &amp;&amp;s[i]&lt;=<span class="string">'9'</span>))</span><br><span class="line">                ss += <span class="built_in">tolower</span>(s[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isHuiWen</span>(ss);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isHuiWen</span><span class="params">(string s)</span></span>{</span><br><span class="line">        string ss = s;</span><br><span class="line">        <span class="built_in">reverse</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">        cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> ss == s;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>原地判断 一次遍历</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">            <span class="keyword">while</span>(left&lt;s.<span class="built_in">size</span>() &amp;&amp; !<span class="built_in">isValid</span>(s[left])){</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">while</span>(right&gt;=<span class="number">0</span> &amp;&amp; !<span class="built_in">isValid</span>(s[right])){</span><br><span class="line">                right--;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//越界 为空 直接返回1</span></span><br><span class="line">            <span class="keyword">if</span>(left&gt;=s.<span class="built_in">size</span>()|| right&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">tolower</span>(s[left]) != <span class="built_in">tolower</span>(s[right]))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValid</span><span class="params">(<span class="keyword">char</span>&amp; ch)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">tolower</span>(ch)&gt;=<span class="string">'a'</span> &amp;&amp; <span class="built_in">tolower</span>(ch)&lt;=<span class="string">'z'</span>  ||(ch&gt;=<span class="string">'0'</span> &amp;&amp;ch&lt;=<span class="string">'9'</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-027-回文链表"><a href="#剑指-Offer-II-027-回文链表" class="headerlink" title="剑指 Offer II 027. 回文链表"></a><a href="https://leetcode-cn.com/problems/aMhZSa/">剑指 Offer II 027. 回文链表</a></h3><p>难度简单42</p><p>给定一个链表的 <strong>头节点</strong> <code>head</code> <strong>，</strong>请判断其是否为回文链表。</p><p>如果一个链表是回文，那么链表节点序列从前往后看和从后往前看是相同的。</p><p><strong>示例 1：</strong></p><p><strong><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626421737-LjXceN-image.png" alt="img"></strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: head = [1,2,3,3,2,1]</span><br><span class="line">输出: true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><strong><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626422231-wgvnWh-image.png" alt="img"></strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: head = [1,2]</span><br><span class="line">输出: false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比vector</li><li>快慢指针 反转一半</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; nums;</span><br><span class="line">        <span class="keyword">while</span>(head){</span><br><span class="line">            nums.<span class="built_in">push_back</span>(head-&gt;val);</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isPalindrome</span>(nums);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">            <span class="keyword">if</span>(nums[left]!=nums[right])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>快慢指针 反转一半</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">nullptr</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找到前半部分链表的尾节点并反转后半部分链表</span></span><br><span class="line">        ListNode* firstHalfEnd = <span class="built_in">endOfFirstHalf</span>(head);</span><br><span class="line">        ListNode* secondHalfStart = <span class="built_in">reverseList</span>(firstHalfEnd-&gt;next);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否回文</span></span><br><span class="line">        ListNode* p1 = head;</span><br><span class="line">        ListNode* p2 = secondHalfStart;</span><br><span class="line">        <span class="keyword">bool</span> result = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (result &amp;&amp; p2 != <span class="literal">nullptr</span>) {</span><br><span class="line">            <span class="keyword">if</span> (p1-&gt;val != p2-&gt;val) {</span><br><span class="line">                result = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">        }        </span><br><span class="line"></span><br><span class="line">        <span class="comment">// 还原链表并返回结果</span></span><br><span class="line">        firstHalfEnd-&gt;next = <span class="built_in">reverseList</span>(secondHalfStart);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        ListNode* prev = <span class="literal">nullptr</span>;</span><br><span class="line">        ListNode* curr = head;</span><br><span class="line">        <span class="keyword">while</span> (curr != <span class="literal">nullptr</span>) {</span><br><span class="line">            ListNode* nextTemp = curr-&gt;next;</span><br><span class="line">            curr-&gt;next = prev;</span><br><span class="line">            prev = curr;</span><br><span class="line">            curr = nextTemp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> prev;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">endOfFirstHalf</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        ListNode* fast = head;</span><br><span class="line">        ListNode* slow = head;</span><br><span class="line">        <span class="keyword">while</span> (fast-&gt;next != <span class="literal">nullptr</span> &amp;&amp; fast-&gt;next-&gt;next != <span class="literal">nullptr</span>) {</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="9-回文数"><a href="#9-回文数" class="headerlink" title="9. 回文数"></a><a href="https://leetcode-cn.com/problems/palindrome-number/">9. 回文数</a></h3><p>难度简单1921</p><p>给你一个整数 <code>x</code> ，如果 <code>x</code> 是一个回文整数，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><ul><li>例如，<code>121</code> 是回文，而 <code>123</code> 不是。</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 121</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：x = -121</span><br><span class="line">输出：false</span><br><span class="line">解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</span><br></pre></td></tr></tbody></table></figure><p><strong>进阶：</strong>你能不将整数转为字符串来解决这个问题吗？</p><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>难点在于不转换为字符串或者数组</li><li>反转一半 反转后的数字为大半 剩余的为小半</li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line">        <span class="comment">// 特殊情况：</span></span><br><span class="line">        <span class="comment">// 如上所述，当 x &lt; 0 时，x 不是回文数。</span></span><br><span class="line">        <span class="comment">// 同样地，如果数字的最后一位是 0，为了使该数字为回文，</span></span><br><span class="line">        <span class="comment">// 则其第一位数字也应该是 0</span></span><br><span class="line">        <span class="comment">// 只有 0 满足这一属性</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> revertedNumber = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x &gt; revertedNumber) {</span><br><span class="line">            revertedNumber = revertedNumber * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。</span></span><br><span class="line">        <span class="comment">// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，</span></span><br><span class="line">        <span class="comment">// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。</span></span><br><span class="line">        <span class="keyword">return</span> x == revertedNumber || x == revertedNumber / <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="面试题-01-04-回文排列"><a href="#面试题-01-04-回文排列" class="headerlink" title="面试题 01.04. 回文排列"></a><a href="https://leetcode-cn.com/problems/palindrome-permutation-lcci/">面试题 01.04. 回文排列</a></h3><p>难度简单78英文版讨论区</p><p>给定一个字符串，编写一个函数判定其是否为某个回文串的排列之一。</p><p>回文串是指正反两个方向都一样的单词或短语。排列是指字母的重新排列。</p><p>回文串不一定是字典当中的单词。</p><p><strong>示例1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入："tactcoa"</span><br><span class="line">输出：true（排列有"tacocat"、"atcocta"，等等）</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><p>用到回文一个性质 奇数个数的元素 只可能存在一个 或 0个</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canPermutePalindrome</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        <span class="keyword">int</span> jishuCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> ch:s)</span><br><span class="line">            mapp[ch]++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> it = mapp.<span class="built_in">begin</span>(); it!=mapp.<span class="built_in">end</span>(); it++){</span><br><span class="line">            <span class="keyword">if</span>(it-&gt;second%<span class="number">2</span>)</span><br><span class="line">                jishuCount++;</span><br><span class="line">            <span class="keyword">if</span>(jishuCount&gt;<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-019-最多删除一个字符得到回文"><a href="#剑指-Offer-II-019-最多删除一个字符得到回文" class="headerlink" title="剑指 Offer II 019. 最多删除一个字符得到回文"></a><a href="https://leetcode-cn.com/problems/RQku0D/">剑指 Offer II 019. 最多删除一个字符得到回文</a></h3><p>难度简单28英文版讨论区</p><p>给定一个非空字符串 <code>s</code>，请判断如果 <strong>最多</strong> 从字符串中删除一个字符能否得到一个回文字符串。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "aba"</span><br><span class="line">输出: true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "abca"</span><br><span class="line">输出: true</span><br><span class="line">解释: 可以删除 "c" 字符 或者 "b" 字符</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "abc"</span><br><span class="line">输出: false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><p>不等的时候 判断两次字串</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">validPalindrome</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">bool</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">if</span>(s[left] != s[right]){</span><br><span class="line">                <span class="comment">//cout&lt;&lt;s.substr(left + 1, right-left)&lt;&lt;endl;</span></span><br><span class="line">                <span class="comment">//cout&lt;&lt;s.substr(left, right-left)&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">isPalidromee</span>(s.<span class="built_in">substr</span>(left + <span class="number">1</span>, right-left)) || </span><br><span class="line">                <span class="built_in">isPalidromee</span>(s.<span class="built_in">substr</span>(left, right-left));</span><br><span class="line">                <span class="comment">//return isPalidrome(s, left) || isPalidrome(s, right);</span></span><br><span class="line">            }</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalidrome</span><span class="params">(string&amp; s, <span class="keyword">int</span> pos)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">            <span class="keyword">if</span>(left == pos || right == pos){</span><br><span class="line">                <span class="keyword">if</span>(left == pos)</span><br><span class="line">                    left++;</span><br><span class="line">                <span class="keyword">else</span> right--;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(s[left] != s[right]){</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalidromee</span><span class="params">(string s)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">if</span>(s[left] != s[right])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="866-回文素数-构造回文数"><a href="#866-回文素数-构造回文数" class="headerlink" title="866. 回文素数 构造回文数"></a><a href="https://leetcode-cn.com/problems/prime-palindrome/">866. 回文素数</a> 构造回文数</h3><p>难度中等77英文版讨论区</p><p>求出大于或等于 <code>N</code> 的最小回文素数。</p><p>回顾一下，如果一个数大于 1，且其因数只有 1 和它自身，那么这个数是<em>素数</em>。</p><p>例如，2，3，5，7，11 以及 13 是素数。</p><p>回顾一下，如果一个数从左往右读与从右往左读是一样的，那么这个数是<em>回文数。</em></p><p>例如，12321 是回文数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：6</span><br><span class="line">输出：7</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：8</span><br><span class="line">输出：11</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：13</span><br><span class="line">输出：101</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>枚举所有回文数, 并判断是否为质数;<br>模拟回文数的方法, 计算回文根, 再生成回文数;<br>举例: 回文根为123, 可以构成的回文数为12321, 123321; </p><blockquote><p>left - right 1-10 一次while生成的回文数 1-9 和11 22 33 44 55…99</p><p>left - right 10-100 一次while生成的回文数 101 111 121 131…999 和 1001 1111 1221 1331…9999</p><p>……</p></blockquote><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPrim</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{ <span class="comment">/* 质数判断 */</span></span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">1</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(x); i++) {</span><br><span class="line">            <span class="keyword">if</span> (x % i == <span class="number">0</span>) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重点函数 背一下</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">primePalindrome</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) {</span><br><span class="line">            <span class="keyword">int</span> right = left * <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> op = <span class="number">0</span>; op &lt; <span class="number">2</span>; op++) {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = left; i &lt; right; i++) {</span><br><span class="line">                    <span class="keyword">int</span> sum = i;</span><br><span class="line">                    <span class="keyword">int</span> x = (op == <span class="number">0</span>) ? i / <span class="number">10</span> : i;</span><br><span class="line">                    <span class="keyword">while</span> (x &gt; <span class="number">0</span>) { <span class="comment">/* 构造回文数 */</span></span><br><span class="line">                        sum = sum * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">                        x /= <span class="number">10</span>;</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">if</span> (sum &gt;= n &amp;&amp; <span class="built_in">isPrim</span>(sum)) { <span class="comment">/* 判断是否&gt;=n且为质数 */</span></span><br><span class="line">                        <span class="keyword">return</span> sum;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            left = right;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="剑指-Offer-II-020-回文子字符串的个数"><a href="#剑指-Offer-II-020-回文子字符串的个数" class="headerlink" title="剑指 Offer II 020. 回文子字符串的个数"></a><a href="https://leetcode-cn.com/problems/a7VOhD/">剑指 Offer II 020. 回文子字符串的个数</a></h4><p>难度中等40</p><p>给定一个字符串 <code>s</code> ，请计算这个字符串中有多少个回文子字符串。</p><p>具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被视作不同的子串。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "abc"</span><br><span class="line">输出：3</span><br><span class="line">解释：三个回文子串: "a", "b", "c"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "aaa"</span><br><span class="line">输出：6</span><br><span class="line">解释：6个回文子串: "a", "a", "a", "aa", "aa", "aaa"</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><ol><li>假设size = 4 一个循环解决回文中心奇数 偶数两种情况</li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220406112344685.png" alt="image-20220406112344685" style="zoom: 67%;"><ol start="2"><li>马拉车算法，我选择放弃<a href="https://www.zhihu.com/question/37289584">有什么浅显易懂的Manacher Algorithm讲解？ - 知乎 (zhihu.com)</a></li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一次</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;s.<span class="built_in">size</span>()*<span class="number">2</span><span class="number">-1</span>; i++){</span><br><span class="line">            <span class="keyword">int</span> left = i/<span class="number">2</span>, right = left + i%<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span>(left&gt;=<span class="number">0</span> &amp;&amp; right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">                <span class="keyword">if</span>(s[left] == s[right])</span><br><span class="line">                    ans++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">                left--;</span><br><span class="line">                right++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//两次好理解</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;s.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">int</span> left = i, right = i;</span><br><span class="line">            <span class="keyword">while</span>(left&gt;=<span class="number">0</span> &amp;&amp; right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">                <span class="keyword">if</span>(s[left] == s[right])</span><br><span class="line">                    ans++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">                left--;</span><br><span class="line">                right++;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            left = i, right = i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(left&gt;=<span class="number">0</span> &amp;&amp; right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">                <span class="keyword">if</span>(s[left] == s[right])</span><br><span class="line">                    ans++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">                left--;</span><br><span class="line">                right++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//马拉车算法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        string t = <span class="string">"$#"</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">char</span> &amp;c: s) {</span><br><span class="line">            t += c;</span><br><span class="line">            t += <span class="string">'#'</span>;</span><br><span class="line">        }</span><br><span class="line">        n = t.<span class="built_in">size</span>();</span><br><span class="line">        t += <span class="string">'!'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> f = vector &lt;<span class="keyword">int</span>&gt; (n);</span><br><span class="line">        <span class="keyword">int</span> iMax = <span class="number">0</span>, rMax = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) {</span><br><span class="line">            <span class="comment">// 初始化 f[i]</span></span><br><span class="line">            f[i] = (i &lt;= rMax) ? <span class="built_in">min</span>(rMax - i + <span class="number">1</span>, f[<span class="number">2</span> * iMax - i]) : <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 中心拓展</span></span><br><span class="line">            <span class="keyword">while</span> (t[i + f[i]] == t[i - f[i]]) ++f[i];</span><br><span class="line">            <span class="comment">// 动态维护 iMax 和 rMax</span></span><br><span class="line">            <span class="keyword">if</span> (i + f[i] - <span class="number">1</span> &gt; rMax) {</span><br><span class="line">                iMax = i;</span><br><span class="line">                rMax = i + f[i] - <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 统计答案, 当前贡献为 (f[i] - 1) / 2 上取整</span></span><br><span class="line">            ans += (f[i] / <span class="number">2</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window下添加右键操作</title>
      <link href="/2022/04/02/window-xia-tian-jia-you-jian-cao-zuo/"/>
      <url>/2022/04/02/window-xia-tian-jia-you-jian-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h3 id="以sublime为例"><a href="#以sublime为例" class="headerlink" title="以sublime为例"></a>以sublime为例</h3><h4 id="右键打开文件"><a href="#右键打开文件" class="headerlink" title="右键打开文件"></a>右键打开文件</h4><ol><li>Win + R，输入regedit,打开注册表</li><li>找到如图路径，做成我的目录结构就可以了</li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220402160540332.png" style="zoom: 67%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220402160516575.png" alt="image-20220402160516575" style="zoom: 67%;"><h4 id="右键打开文件夹"><a href="#右键打开文件夹" class="headerlink" title="右键打开文件夹"></a>右键打开文件夹</h4><h5 id="和上面差不多-做成类似如图的目录结构-简简单单"><a href="#和上面差不多-做成类似如图的目录结构-简简单单" class="headerlink" title="和上面差不多 做成类似如图的目录结构 简简单单"></a>和上面差不多 做成类似如图的目录结构 简简单单</h5><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220402160806130.png" alt="image-20220402160806130" style="zoom: 67%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220402160823636.png" alt="image-20220402160823636" style="zoom: 67%;">]]></content>
      
      
      
        <tags>
            
            <tag> 开发随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模拟加减乘除</title>
      <link href="/2022/04/01/mo-ni-yun-suan/"/>
      <url>/2022/04/01/mo-ni-yun-suan/</url>
      
        <content type="html"><![CDATA[<h3 id="剑指-Offer-II-002-二进制加法"><a href="#剑指-Offer-II-002-二进制加法" class="headerlink" title="剑指 Offer II 002. 二进制加法"></a><a href="https://leetcode-cn.com/problems/JFETK5/">剑指 Offer II 002. 二进制加法</a></h3><p>难度简单27</p><p>给定两个 01 字符串 <code>a</code> 和 <code>b</code> ，请计算它们的和，并以二进制字符串的形式输出。</p><p>输入为 <strong>非空</strong> 字符串且只包含数字 <code>1</code> 和 <code>0</code>。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: a = "11", b = "10"</span><br><span class="line">输出: "101"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: a = "1010", b = "1011"</span><br><span class="line">输出: "10101"</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>模拟相加 注意下写法</li><li>位运算</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>模拟</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">addBinary</span><span class="params">(string a, string b)</span> </span>{</span><br><span class="line">        string ans;</span><br><span class="line">        <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">reverse</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">max</span>(a.<span class="built_in">size</span>(), b.<span class="built_in">size</span>()), carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            carry+= i&lt;a.<span class="built_in">size</span>()?a[i] ==<span class="string">'1'</span>:<span class="number">0</span>;</span><br><span class="line">            carry+= i&lt;b.<span class="built_in">size</span>()?b[i] ==<span class="string">'1'</span>:<span class="number">0</span>;</span><br><span class="line">            ans += <span class="built_in">to_string</span>(carry%<span class="number">2</span>);</span><br><span class="line">            carry/=<span class="number">2</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (carry) {</span><br><span class="line">            ans.<span class="built_in">push_back</span>(<span class="string">'1'</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="989-数组形式的整数加法"><a href="#989-数组形式的整数加法" class="headerlink" title="989. 数组形式的整数加法"></a><a href="https://leetcode-cn.com/problems/add-to-array-form-of-integer/">989. 数组形式的整数加法</a></h3><p>难度简单191</p><p>整数的 <strong>数组形式</strong> <code>num</code> 是按照从左到右的顺序表示其数字的数组。</p><ul><li>例如，对于 <code>num = 1321</code> ，数组形式是 <code>[1,3,2,1]</code> 。</li></ul><p>给定 <code>num</code> ，整数的 <strong>数组形式</strong> ，和整数 <code>k</code> ，返回 <em>整数 <code>num + k</code> 的 <strong>数组形式</strong></em> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：num = [1,2,0,0], k = 34</span><br><span class="line">输出：[1,2,3,4]</span><br><span class="line">解释：1200 + 34 = 1234</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：num = [2,7,4], k = 181</span><br><span class="line">输出：[4,5,5]</span><br><span class="line">解释：274 + 181 = 455</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：num = [2,1,5], k = 806</span><br><span class="line">输出：[1,0,2,1]</span><br><span class="line">解释：215 + 806 = 1021</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>k转为vector 按位相加</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">addToArrayForm</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; num, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; num2;</span><br><span class="line">        <span class="keyword">while</span>(k){</span><br><span class="line">            <span class="keyword">int</span> temp = k%<span class="number">10</span>;</span><br><span class="line">            k/=<span class="number">10</span>;</span><br><span class="line">            num2.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">reverse</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> maxSize = <span class="built_in">max</span>(num.<span class="built_in">size</span>(), num2.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;maxSize; i++){</span><br><span class="line">            carry+=i&lt;num.<span class="built_in">size</span>()?num[i]:<span class="number">0</span>;</span><br><span class="line">            carry+=i&lt;num2.<span class="built_in">size</span>()?num2[i]:<span class="number">0</span>;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(carry%<span class="number">10</span>);</span><br><span class="line">            carry/=<span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(carry) ans.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="66-加一"><a href="#66-加一" class="headerlink" title="66. 加一"></a><a href="https://leetcode-cn.com/problems/plus-one/">66. 加一</a></h3><p>难度简单972</p><p>给定一个由 <strong>整数</strong> 组成的 <strong>非空</strong> 数组所表示的非负整数，在该数的基础上加一。</p><p>最高位数字存放在数组的首位， 数组中每个元素只存储<strong>单个</strong>数字。</p><p>你可以假设除了整数 0 之外，这个整数不会以零开头。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：digits = [1,2,3]</span><br><span class="line">输出：[1,2,4]</span><br><span class="line">解释：输入数组表示数字 123。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：digits = [4,3,2,1]</span><br><span class="line">输出：[4,3,2,2]</span><br><span class="line">解释：输入数组表示数字 4321。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：digits = [0]</span><br><span class="line">输出：[1]</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//统一写法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">plusOne</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; digits)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(digits.size())</span></span>;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = digits.<span class="built_in">size</span>()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--){</span><br><span class="line">            <span class="keyword">if</span>(i == digits.<span class="built_in">size</span>()<span class="number">-1</span>){</span><br><span class="line">                carry++;</span><br><span class="line">            }</span><br><span class="line">            carry+=digits[i];</span><br><span class="line">            ans[i] = (carry%<span class="number">10</span>);</span><br><span class="line">            carry/=<span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(carry) ans.<span class="built_in">insert</span>(ans.<span class="built_in">begin</span>(), <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//原地修改</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">plusOne</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; digits)</span> </span>{</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = digits.<span class="built_in">size</span>()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--){</span><br><span class="line">            <span class="keyword">if</span> (digits[i] == <span class="number">9</span>){</span><br><span class="line">                digits[i] = <span class="number">0</span>;</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                digits[i]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(digits[<span class="number">0</span>] == <span class="number">0</span>){</span><br><span class="line">            digits[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            digits.<span class="built_in">push_back</span>(<span class="number">0</span>); </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> digits;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="415-字符串相加"><a href="#415-字符串相加" class="headerlink" title="415. 字符串相加"></a><a href="https://leetcode-cn.com/problems/add-strings/">415. 字符串相加</a></h3><p>难度简单534</p><p>给定两个字符串形式的非负整数 <code>num1</code> 和<code>num2</code> ，计算它们的和并同样以字符串形式返回。</p><p>你不能使用任何內建的用于处理大整数的库（比如 <code>BigInteger</code>）， 也不能直接将输入的字符串转换为整数形式。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：num1 = "11", num2 = "123"</span><br><span class="line">输出："134"</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">addStrings</span><span class="params">(string num1, string num2)</span> </span>{</span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> maxSize = <span class="built_in">max</span>(num1.<span class="built_in">size</span>(), num2.<span class="built_in">size</span>());</span><br><span class="line">        <span class="built_in">reverse</span>(num1.<span class="built_in">begin</span>(), num1.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">reverse</span>(num2.<span class="built_in">begin</span>(), num2.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;maxSize; i++){</span><br><span class="line">            carry+=i&lt;num1.<span class="built_in">size</span>()?(num1[i] - <span class="string">'0'</span>):<span class="number">0</span>;</span><br><span class="line">            carry+=i&lt;num2.<span class="built_in">size</span>()?(num2[i] - <span class="string">'0'</span>):<span class="number">0</span>;</span><br><span class="line">            ans+=<span class="built_in">to_string</span>(carry%<span class="number">10</span>);a</span><br><span class="line">            carry/=<span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(carry) ans+=<span class="string">"1"</span>;</span><br><span class="line">        <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="2-两数相加-链表"><a href="#2-两数相加-链表" class="headerlink" title="2. 两数相加 链表"></a><a href="https://leetcode-cn.com/problems/add-two-numbers/">2. 两数相加</a> 链表</h3><p><a href="https://leetcode-cn.com/problems/add-two-numbers/#">思路</a></p><p>难度中等7812</p><p>给你两个 <strong>非空</strong> 的链表，表示两个非负的整数。它们每位数字都是按照 <strong>逆序</strong> 的方式存储的，并且每个节点只能存储 <strong>一位</strong> 数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/addtwonumber1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class="line">输出：[7,0,8]</span><br><span class="line">解释：342 + 465 = 807.</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [0], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</span><br><span class="line">输出：[8,9,9,9,0,0,0,1]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>就模拟吗</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>{</span><br><span class="line">        ListNode* ans = <span class="keyword">new</span> <span class="built_in">ListNode</span>();</span><br><span class="line">        ListNode* temp = ans;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l1 || l2){</span><br><span class="line">            carry+= l1?l1-&gt;val:<span class="number">0</span>;</span><br><span class="line">            carry+= l2?l2-&gt;val:<span class="number">0</span>;</span><br><span class="line">            l1 = l1?l1-&gt;next:l1;</span><br><span class="line">            l2 = l2?l2-&gt;next:l2;</span><br><span class="line">            temp-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(carry%<span class="number">10</span>);</span><br><span class="line">            temp = temp-&gt;next;</span><br><span class="line">            carry/=<span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(carry) temp-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> ans-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-025-链表中的两数相加"><a href="#剑指-Offer-II-025-链表中的两数相加" class="headerlink" title="剑指 Offer II 025. 链表中的两数相加"></a><a href="https://leetcode-cn.com/problems/lMSNwu/">剑指 Offer II 025. 链表中的两数相加</a></h3><p>难度中等42</p><p>给定两个 <strong>非空链表</strong> <code>l1</code>和 <code>l2</code> 来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。</p><p>可以假设除了数字 0 之外，这两个数字都不会以零开头。</p><p><strong>示例1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626420025-fZfzMX-image.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [7,2,4,3], l2 = [5,6,4]</span><br><span class="line">输出：[7,8,0,7]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class="line">输出：[8,0,7]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><p>反转 套上面 再反转</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">nullptr</span> || head-&gt;next == <span class="literal">nullptr</span>)</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        ListNode* last = <span class="built_in">reverseList</span>(head-&gt;next);</span><br><span class="line">        head-&gt;next-&gt;next = head;</span><br><span class="line">        head-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>{</span><br><span class="line">        ListNode* L1 = <span class="built_in">reverseList</span>(l1);</span><br><span class="line">        ListNode* L2 = <span class="built_in">reverseList</span>(l2);</span><br><span class="line">        <span class="comment">//这样写 不存在内存泄漏 同时 又有了一个可以直接移动的指针</span></span><br><span class="line">        ListNode dumpyHead;  </span><br><span class="line">        ListNode* pre = &amp;dumpyHead;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(L1 || L2){</span><br><span class="line">            carry += L1?L1-&gt;val:<span class="number">0</span>;</span><br><span class="line">            carry += L2?L2-&gt;val:<span class="number">0</span>;</span><br><span class="line">            pre-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(carry%<span class="number">10</span>);</span><br><span class="line">            carry /= <span class="number">10</span>;         </span><br><span class="line">            pre = pre-&gt;next;</span><br><span class="line">            L1 = L1?L1-&gt;next:L1;</span><br><span class="line">            L2 = L2?L2-&gt;next:L2;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//md又忘了</span></span><br><span class="line">        <span class="keyword">if</span>(carry) pre-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">reverseList</span>(dumpyHead.next);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单调栈</title>
      <link href="/2022/03/30/dan-diao-zhan/"/>
      <url>/2022/03/30/dan-diao-zhan/</url>
      
        <content type="html"><![CDATA[<p><u><strong>通常是一维数组，要寻找任一个元素的右边或者左边第一个比自己大或者小的元素的位置，此时我们就要想到可以用单调栈了</strong>。</u></p><p>时间复杂度为$O(n)$。</p><p>例如本题其实就是找找到一个元素右边第一个比自己大的元素。</p><p>此时就应该想到用单调栈了。</p><p>那么单调栈的原理是什么呢？为什么时间复杂度是$O(n)$就可以找到每一个元素的右边第一个比它大的元素位置呢？</p><p>单调栈的本质是空间换时间，因为在遍历的过程中需要用一个栈来记录右边第一个比当前元素的元素，优点是只需要遍历一次。</p><p>在使用单调栈的时候首先要明确如下几点：</p><ol><li>单调栈里存放的元素是什么？</li></ol><p>单调栈里只需要存放元素的<code>下标i</code>就可以了，如果需要使用对应的元素，直接T[i]就可以获取。</p><ol start="2"><li>单调栈里元素是递增呢？ 还是递减呢？</li></ol><p><strong>注意一下顺序为 从栈头到栈底的顺序</strong>，因为单纯的说从左到右或者从前到后，不说栈头朝哪个方向的话，大家一定会越看越懵。</p><p>这里我们要使用递增循序（再强调一下是指从栈头到栈底的顺序），因为只有递增的时候，加入一个元素i，才知道栈顶元素在数组中右面第一个比栈顶元素大的元素是i。</p><p>使用单调栈主要有三个判断条件。</p><ul><li>当前遍历的元素T[i]小于栈顶元素T[st.top()]的情况</li><li>当前遍历的元素T[i]等于栈顶元素T[st.top()]的情况</li><li>当前遍历的元素T[i]大于栈顶元素T[st.top()]的情况</li></ul><p>==<u>约定： 递增栈为头到底递增</u>==</p><h3 id="739-每日温度"><a href="#739-每日温度" class="headerlink" title="739. 每日温度"></a><a href="https://leetcode-cn.com/problems/daily-temperatures/">739. 每日温度</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=739">labuladong 题解</a></p><p>难度中等1081收藏分享切换为英文接收动态反馈</p><p>给定一个整数数组 <code>temperatures</code> ，表示每天的温度，返回一个数组 <code>answer</code> ，其中 <code>answer[i]</code> 是指在第 <code>i</code> 天之后，才会有更高的温度。如果气温在这之后都不会升高，请在该位置用 <code>0</code> 来代替。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [73,74,75,71,69,72,76,73]</span><br><span class="line">输出: [1,1,4,2,1,1,0,0]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [30,40,50,60]</span><br><span class="line">输出: [1,1,1,0]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [30,60,90]</span><br><span class="line">输出: [1,1,0]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a><a href="https://programmercarl.com/0739.%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6.html#%E6%80%9D%E8%B7%AF">思路</a></h4><p>递增单调栈  （元素&lt;=栈顶元素时 入栈）</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dailyTemperatures</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="comment">//0特判</span></span><br><span class="line">            <span class="keyword">if</span>(stk.<span class="built_in">empty</span>()){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//元素&lt;=栈顶元素时 入栈</span></span><br><span class="line">            <span class="keyword">if</span>(nums[i]&lt;=nums[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; nums[stk.<span class="built_in">top</span>()]&lt;nums[i]){</span><br><span class="line">                    <span class="keyword">int</span> now = stk.<span class="built_in">top</span>();</span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                    ans[now] = (i - now);                    </span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="496-下一个更大元素-I"><a href="#496-下一个更大元素-I" class="headerlink" title="496. 下一个更大元素 I"></a><a href="https://leetcode-cn.com/problems/next-greater-element-i/">496. 下一个更大元素 I</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=496">labuladong 题解</a></p><p>难度简单676英文版讨论区</p><p><code>nums1</code> 中数字 <code>x</code> 的 <strong>下一个更大元素</strong> 是指 <code>x</code> 在 <code>nums2</code> 中对应位置 <strong>右侧</strong> 的 <strong>第一个</strong> 比 <code>x</code> 大的元素。</p><p>给你两个 <strong>没有重复元素</strong> 的数组 <code>nums1</code> 和 <code>nums2</code> ，下标从 <strong>0</strong> 开始计数，其中<code>nums1</code> 是 <code>nums2</code> 的子集。</p><p>对于每个 <code>0 &lt;= i &lt; nums1.length</code> ，找出满足 <code>nums1[i] == nums2[j]</code> 的下标 <code>j</code> ，并且在 <code>nums2</code> 确定 <code>nums2[j]</code> 的 <strong>下一个更大元素</strong> 。如果不存在下一个更大元素，那么本次查询的答案是 <code>-1</code> 。</p><p>返回一个长度为 <code>nums1.length</code> 的数组 <code>ans</code> 作为答案，满足 <code>ans[i]</code> 是如上所述的 <strong>下一个更大元素</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 = [4,1,2], nums2 = [1,3,4,2].</span><br><span class="line">输出：[-1,3,-1]</span><br><span class="line">解释：nums1 中每个值的下一个更大元素如下所述：</span><br><span class="line">- 4 ，用加粗斜体标识，nums2 = [1,3,4,2]。不存在下一个更大元素，所以答案是 -1 。</span><br><span class="line">- 1 ，用加粗斜体标识，nums2 = [1,3,4,2]。下一个更大元素是 3 。</span><br><span class="line">- 2 ，用加粗斜体标识，nums2 = [1,3,4,2]。不存在下一个更大元素，所以答案是 -1 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 = [2,4], nums2 = [1,2,3,4].</span><br><span class="line">输出：[3,-1]</span><br><span class="line">解释：nums1 中每个值的下一个更大元素如下所述：</span><br><span class="line">- 2 ，用加粗斜体标识，nums2 = [1,2,3,4]。下一个更大元素是 3 。</span><br><span class="line">- 4 ，用加粗斜体标识，nums2 = [1,2,3,4]。不存在下一个更大元素，所以答案是 -1 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>这道题虽然是简单题 但是难度比每日温度大</li><li>用一个哈希记录nums1，再对nums2使用单调栈</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nextGreaterElement</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums1, vector&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = nums1.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(m, <span class="number">-1</span>)</span></span>;</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">            mapp[nums1[i]] = i;</span><br><span class="line">        <span class="keyword">int</span> n = nums2.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(stk.<span class="built_in">empty</span>()){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(nums2[stk.<span class="built_in">top</span>()]&gt;= nums2[i])</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; nums2[stk.<span class="built_in">top</span>()] &lt; nums2[i]){</span><br><span class="line">                    <span class="keyword">int</span> nowI = stk.<span class="built_in">top</span>();</span><br><span class="line">                    <span class="comment">//判断是否是nums1中的元素</span></span><br><span class="line">                    <span class="keyword">if</span>(mapp.<span class="built_in">count</span>(nums2[nowI])){</span><br><span class="line">                        <span class="keyword">int</span> index = mapp[nums2[nowI]];</span><br><span class="line">                        ans[index] = nums2[i];</span><br><span class="line">                    }</span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="503-下一个更大元素-II"><a href="#503-下一个更大元素-II" class="headerlink" title="503. 下一个更大元素 II"></a><a href="https://leetcode-cn.com/problems/next-greater-element-ii/">503. 下一个更大元素 II</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=503">labuladong 题解</a></p><p>难度中等586英文版讨论区</p><p>给定一个循环数组 <code>nums</code> （ <code>nums[nums.length - 1]</code> 的下一个元素是 <code>nums[0]</code> ），返回 <em><code>nums</code> 中每个元素的 <strong>下一个更大元素</strong></em> 。</p><p>数字 <code>x</code> 的 <strong>下一个更大的元素</strong> 是按数组遍历顺序，这个数字之后的第一个比它更大的数，这意味着你应该循环地搜索它的下一个更大的数。如果不存在，则输出 <code>-1</code> 。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,1]</span><br><span class="line">输出: [2,-1,2]</span><br><span class="line">解释: 第一个 1 的下一个更大的数是 2；</span><br><span class="line">数字 2 找不到下一个更大的数； </span><br><span class="line">第二个 1 的下一个最大的数需要循环搜索，结果也是 2。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,3,4,3]</span><br><span class="line">输出: [2,3,4,-1,4]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>再拼接一个数组 对二倍长度的数组进行统计 最后将结果resize为原大小</li><li>循环起来，遍历的时候遍历二倍大小 用%n来进行循环</li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><h5 id="二倍数组拼接"><a href="#二倍数组拼接" class="headerlink" title="二倍数组拼接"></a>二倍数组拼接</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nextGreaterElements</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        n*=<span class="number">2</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nums1</span><span class="params">(nums.begin(), nums.end())</span></span>;</span><br><span class="line">        nums.<span class="built_in">insert</span>(nums.<span class="built_in">end</span>(), nums1.<span class="built_in">begin</span>(), nums1.<span class="built_in">end</span>());</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n, <span class="number">-1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(stk.<span class="built_in">empty</span>()){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(nums[stk.<span class="built_in">top</span>()]&gt;=nums[i]){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; nums[stk.<span class="built_in">top</span>()]&lt;nums[i]){</span><br><span class="line">                    ans[stk.<span class="built_in">top</span>()] = nums[i];</span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        ans.<span class="built_in">resize</span>(n/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="二倍循环-n"><a href="#二倍循环-n" class="headerlink" title="二倍循环%n"></a>二倍循环%n</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nextGreaterElements</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n, <span class="number">-1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n*<span class="number">2</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(stk.<span class="built_in">empty</span>()){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; nums[stk.<span class="built_in">top</span>()]&lt;nums[i%n]){</span><br><span class="line">                ans[stk.<span class="built_in">top</span>()] = nums[i%n];</span><br><span class="line">                stk.<span class="built_in">pop</span>();</span><br><span class="line">            }</span><br><span class="line">            stk.<span class="built_in">push</span>(i%n);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="42-接雨水"><a href="#42-接雨水" class="headerlink" title="42. 接雨水"></a><a href="https://leetcode-cn.com/problems/trapping-rain-water/">42. 接雨水</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=42">labuladong 题解</a><a href="https://leetcode-cn.com/problems/trapping-rain-water/#">思路</a></p><p>难度困难3289英文版讨论区</p><p>给定 <code>n</code> 个非负整数表示每个宽度为 <code>1</code> 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/rainwatertrap.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：height = [0,1,0,2,1,0,1,3,2,1,2,1]</span><br><span class="line">输出：6</span><br><span class="line">解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。 </span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：height = [4,2,0,3,2,5]</span><br><span class="line">输出：9</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li>On2暴力 </li><li>dp 多次遍历 保存最值</li><li>最小栈</li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><h5 id="On2暴力"><a href="#On2暴力" class="headerlink" title="On2暴力"></a>On2暴力</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//暴力超时</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = height.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span> || i == n<span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> rHeight = height[i];</span><br><span class="line">            <span class="keyword">int</span> lHeight = height[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> r = i+<span class="number">1</span>; r&lt;n; r++){</span><br><span class="line">                <span class="keyword">if</span>(height[r]&gt;rHeight) rHeight = height[r];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> l = i<span class="number">-1</span>; l&gt;=<span class="number">0</span>; l--){</span><br><span class="line">                <span class="keyword">if</span>(height[l]&gt;lHeight) lHeight = height[l];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">int</span> h = <span class="built_in">min</span>(lHeight, rHeight) - height[i];</span><br><span class="line">            <span class="keyword">if</span>(h&gt;<span class="number">0</span>) sum+=h;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="dp-多次遍历-保存最值"><a href="#dp-多次遍历-保存最值" class="headerlink" title="dp 多次遍历 保存最值"></a>dp 多次遍历 保存最值</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dp解法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = height.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">leftH</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">rightH</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        leftH[<span class="number">0</span>] = height[<span class="number">0</span>];</span><br><span class="line">        rightH[n<span class="number">-1</span>] = height[n<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n; i++){</span><br><span class="line">            leftH[i] = <span class="built_in">max</span>(height[i], leftH[i<span class="number">-1</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n<span class="number">-2</span>; i&gt;=<span class="number">0</span>; i--){</span><br><span class="line">            rightH[i] = <span class="built_in">max</span>(height[i], rightH[i+<span class="number">1</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> h = <span class="built_in">min</span>(leftH[i], rightH[i]) - height[i];</span><br><span class="line">            <span class="keyword">if</span>(h&gt;<span class="number">0</span>) sum+=h;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="最小栈"><a href="#最小栈" class="headerlink" title="最小栈"></a>最小栈</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最小栈</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = height.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        stk.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(height[i]&lt;height[stk.<span class="built_in">top</span>()])</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(height[i] == height[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                stk.<span class="built_in">pop</span>();</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="comment">//每个坑坑洼洼的地方计算一次</span></span><br><span class="line">                <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; height[i]&gt;height[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                    <span class="keyword">int</span> mid = stk.<span class="built_in">top</span>();</span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                    <span class="keyword">if</span>(!stk.<span class="built_in">empty</span>()){</span><br><span class="line">                        <span class="keyword">int</span> h = <span class="built_in">min</span>(height[stk.<span class="built_in">top</span>()], height[i]) - height[mid];</span><br><span class="line">                        <span class="keyword">int</span> w = i - stk.<span class="built_in">top</span>() - <span class="number">1</span>;</span><br><span class="line">                        sum += h*w;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="84-柱状图中最大的矩形"><a href="#84-柱状图中最大的矩形" class="headerlink" title="84. 柱状图中最大的矩形"></a><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram/">84. 柱状图中最大的矩形</a></h3><p>难度困难1849</p><p>给定 <em>n</em> 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。</p><p>求在该柱状图中，能够勾勒出来的矩形的最大面积。</p><p><strong>示例 1:</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/histogram.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：heights = [2,1,5,6,2,3]</span><br><span class="line">输出：10</span><br><span class="line">解释：最大的矩形为图中红色区域，面积为 10</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/histogram-1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入： heights = [2,4]</span><br><span class="line">输出： 4</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li><p>动态规划</p><p>本题动态规划的写法整体思路和<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>是一致的，但要比<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>难一些。难就难在本题要记录记录每个柱子 左边第一个小于该柱子的下标，而不是左边第一个小于该柱子的高度。所以需要循环查找，也就是下面在寻找的过程中使用了while</p></li><li><p>单调栈</p><p>本地单调栈的解法和接雨水的题目是遥相呼应的。</p><p>为什么这么说呢，<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>是找每个柱子左右两边第一个大于该柱子高度的柱子，而本题是找每个柱子左右两边第一个小于该柱子的柱子。</p><p><strong>这里就涉及到了单调栈很重要的性质，就是单调栈里的顺序，是从小到大还是从大到小</strong>。</p><p>在题解<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>中我讲解了接雨水的单调栈从栈头（元素从栈头弹出）到栈底的顺序应该是从小到大的顺序。</p><p>那么因为本题是要找每个柱子左右两边第一个小于该柱子的柱子，所以从栈头（元素从栈头弹出）到栈底的顺序应该是从大到小的顺序！</p><p>我来举一个例子，如图：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/20210223155303971.jpg" alt="84.柱状图中最大的矩形" style="zoom:50%;"><p>只有栈里从大到小的顺序，才能保证栈顶元素找到左右两边第一个小于栈顶元素的柱子。</p><p>所以本题单调栈的顺序正好与接雨水反过来。</p><p>此时大家应该可以发现其实就是<strong>栈顶和栈顶的下一个元素以及要入栈的三个元素组成了我们要求最大面积的高度和宽度</strong></p><p>理解这一点，对单调栈就掌握的比较到位了。</p><p>除了栈内元素顺序和接雨水不同，剩下的逻辑就都差不多了，在题解<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>我已经对单调栈的各个方面做了详细讲解，这里就不赘述了。</p><p>剩下就是分析清楚如下三种情况：</p><ul><li>情况一：当前遍历的元素heights[i]小于栈顶元素heights[st.top()]的情况</li><li>情况二：当前遍历的元素heights[i]等于栈顶元素heights[st.top()]的情况</li><li>情况三：当前遍历的元素heights[i]大于栈顶元素heights[st.top()]的情况</li></ul></li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220331164646464.png" alt="image-20220331164646464" style="zoom: 67%;"><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><h5 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h5><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">largestRectangleArea</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; heights)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">minLeftIndex</span><span class="params">(heights.size())</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">minRightIndex</span><span class="params">(heights.size())</span></span>;</span><br><span class="line">        <span class="keyword">int</span> size = heights.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录每个柱子 左边第一个小于该柱子的下标</span></span><br><span class="line">        minLeftIndex[<span class="number">0</span>] = <span class="number">-1</span>; <span class="comment">// 注意这里初始化，防止下面while死循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; size; i++) {</span><br><span class="line">            <span class="keyword">int</span> t = i - <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 这里不是用if，而是不断向左寻找的过程</span></span><br><span class="line">            <span class="keyword">while</span> (t &gt;= <span class="number">0</span> &amp;&amp; heights[t] &gt;= heights[i]) t = minLeftIndex[t];</span><br><span class="line">            minLeftIndex[i] = t;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 记录每个柱子 右边第一个小于该柱子的下标</span></span><br><span class="line">        minRightIndex[size - <span class="number">1</span>] = size; <span class="comment">// 注意这里初始化，防止下面while死循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) {</span><br><span class="line">            <span class="keyword">int</span> t = i + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 这里不是用if，而是不断向右寻找的过程</span></span><br><span class="line">            <span class="keyword">while</span> (t &lt; size &amp;&amp; heights[t] &gt;= heights[i]) t = minRightIndex[t];</span><br><span class="line">            minRightIndex[i] = t;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 求和</span></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) {</span><br><span class="line">            <span class="keyword">int</span> sum = heights[i] * (minRightIndex[i] - minLeftIndex[i] - <span class="number">1</span>);</span><br><span class="line">            result = <span class="built_in">max</span>(sum, result);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="单调栈-略微背一下吧"><a href="#单调栈-略微背一下吧" class="headerlink" title="单调栈  略微背一下吧"></a>单调栈  略微背一下吧</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">largestRectangleArea</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; heights)</span> </span>{</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        heights.<span class="built_in">insert</span>(heights.<span class="built_in">begin</span>(), <span class="number">0</span>);</span><br><span class="line">        heights.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">        stk.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;heights.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(heights[i]&gt;heights[stk.<span class="built_in">top</span>()])</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(heights[i] == heights[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                stk.<span class="built_in">pop</span>();</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">while</span>(heights[i] &lt; heights[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                    <span class="keyword">int</span> mid = stk.<span class="built_in">top</span>(); <span class="comment">//当前矩形高的位置</span></span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                    <span class="keyword">int</span> left = stk.<span class="built_in">top</span>();</span><br><span class="line">                    <span class="keyword">int</span> right = i;  <span class="comment">//记录当前值以计算宽</span></span><br><span class="line">                    <span class="keyword">int</span> w = right - left - <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">int</span> h = heights[mid];</span><br><span class="line">                    ans = <span class="built_in">max</span>(ans, w*h);</span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++STL</title>
      <link href="/2022/03/30/c-stl-duan/"/>
      <url>/2022/03/30/c-stl-duan/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0c4a8247fbcf826e1cf2d258ac2059d7148ae8c6d9fb3ffd39c8f6786e71020e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目问题</title>
      <link href="/2022/03/26/xiang-mu-wen-ti/"/>
      <url>/2022/03/26/xiang-mu-wen-ti/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0e4b1715c70996eb5bf39b2a33cf53b57cbac88482c5e87754cd8fee27babb90"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode常用库函数</title>
      <link href="/2022/03/24/c-leetcode-chang-yong-ku-han-shu/"/>
      <url>/2022/03/24/c-leetcode-chang-yong-ku-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="c-leetcode-常用库函数"><a href="#c-leetcode-常用库函数" class="headerlink" title="c++ leetcode 常用库函数"></a>c++ leetcode 常用库函数</h1><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><h2 id="2-字符-串-相关"><a href="#2-字符-串-相关" class="headerlink" title="2. 字符(串)相关"></a>2. 字符(串)相关</h2><ol><li><p>判断字符是否为数字、字母</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">isalpha</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为字母</span></span><br><span class="line"><span class="built_in">isdigit</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为数字</span></span><br><span class="line"><span class="built_in">isalnum</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为数字或字母</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>字母的大小写转换</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tolower</span>(<span class="keyword">char</span> c)<span class="comment">//变成小写字母</span></span><br><span class="line"><span class="built_in">toupper</span>(<span class="keyword">char</span> c)<span class="comment">//变成大写字母</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>字符串转整型 stoi:</p><p>stoi(s,start,base)//s是要转换的字符串，start是起始位置，base是要转换的整数进制，默认是从0位置开始，转换为10进制</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">string str = <span class="string">"123"</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="built_in">stoi</span>(str);</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>数值转字符串 to_string</p><p>to_string(val)//val可以是任何数值类型</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">123</span>;</span><br><span class="line">string res = <span class="built_in">to_string</span>(num);</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>分割字符串 分割字符串可以使用getline和istringstream联合实现。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据','号分割字符串，getline默认的是按照行读取，但是指定就按照给定的标志分割。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">string str = <span class="string">"1,2,3,4,5"</span>;</span><br><span class="line"><span class="function">istringstream <span class="title">s_in</span><span class="params">(str)</span></span>;</span><br><span class="line">string c;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(s_in, c, <span class="string">','</span>)) {</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="3-有序查找"><a href="#3-有序查找" class="headerlink" title="3. 有序查找"></a>3. 有序查找</h2><ol><li><p>lower_bound()  大于等于<br>用于在指定区域内(左闭右开)查找<strong>不小于目标值的第一个元素</strong>，也就是说最终查找的不一定是和目标值想等的元素，也可能是比目标值大的元素。其底层实现是二分查找。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;nums{ <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span> };</span><br><span class="line"><span class="keyword">auto</span> it1 = <span class="built_in">lower_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">3</span>);</span><br><span class="line">cout &lt;&lt; *it1&lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="keyword">auto</span> it2 = <span class="built_in">lower_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">4</span>);</span><br><span class="line">cout &lt;&lt; *it2 &lt;&lt; endl; <span class="comment">//5</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>upper_bound() 大于<br>在指定目标区域中查找<strong>大于目标值的第一个元素</strong>，返回该元素所在位置的迭代器。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;nums{ <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span> };</span><br><span class="line"><span class="keyword">auto</span> it1 = <span class="built_in">upper_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">3</span>);</span><br><span class="line">cout &lt;&lt; it1-nums.<span class="built_in">begin</span>()&lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="keyword">auto</span> it2 = <span class="built_in">upper_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">4</span>);</span><br><span class="line">cout &lt;&lt; it2-nums.<span class="built_in">begin</span>() &lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dp</title>
      <link href="/2022/03/18/dp/"/>
      <url>/2022/03/18/dp/</url>
      
        <content type="html"><![CDATA[<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 状态<span class="number">1</span> in 状态<span class="number">1</span>的所有取值：</span><br><span class="line">    <span class="keyword">for</span> 状态<span class="number">2</span> in 状态<span class="number">2</span>的所有取值：</span><br><span class="line">        <span class="keyword">for</span> ...</span><br><span class="line">            dp[状态<span class="number">1</span>][状态<span class="number">2</span>][...] = 择优(选择<span class="number">1</span>，选择<span class="number">2.</span>..)</span><br></pre></td></tr></tbody></table></figure><h2 id="一些dp问题"><a href="#一些dp问题" class="headerlink" title="一些dp问题"></a>一些dp问题</h2><h3 id="322-零钱兑换"><a href="#322-零钱兑换" class="headerlink" title="322. 零钱兑换"></a><a href="https://leetcode-cn.com/problems/coin-change/">322. 零钱兑换</a></h3><blockquote><p>给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。</p><p>计算并返回可以凑成总金额所需的 最少的硬币个数 。如果没有任何一种硬币组合能组成总金额，返回 -1 。</p><p>你可以认为每种硬币的数量是无限的。</p><p>示例 1：</p><p>输入：coins = [1, 2, 5], amount = 11<br>输出：3<br>解释：11 = 5 + 5 + 1<br>示例 2：</p><p>输入：coins = [2], amount = 3<br>输出：-1<br>示例 3：</p><p>输入：coins = [1], amount = 0<br>输出：0</p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归暴力</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">int</span> res = INT_MAX;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;coins.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> subproblem = <span class="built_in">coinChange</span>(coins, amount - coins[i]);</span><br><span class="line">        <span class="keyword">if</span>(subproblem == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        res = <span class="built_in">min</span>(res, subproblem+<span class="number">1</span>);</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> res==INT_MAX?<span class="number">-1</span>:res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// //递归优化</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; memo;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      memo = vector&lt;<span class="keyword">int</span>&gt;(amount+<span class="number">1</span>, <span class="number">-666</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">dp</span>(coins, amount);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">dp</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 查备忘录，防止重复计算</span></span><br><span class="line">      <span class="keyword">if</span> (memo[amount] != <span class="number">-666</span>)</span><br><span class="line">        <span class="keyword">return</span> memo[amount];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> res = INT_MAX;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;coins.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> subproblem = <span class="built_in">dp</span>(coins, amount - coins[i]);</span><br><span class="line">        <span class="keyword">if</span>(subproblem == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        res = <span class="built_in">min</span>(res, subproblem+<span class="number">1</span>);</span><br><span class="line">      }</span><br><span class="line">      memo[amount] = res==INT_MAX?<span class="number">-1</span>:res;</span><br><span class="line">      <span class="keyword">return</span> memo[amount];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//dp</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(amount + <span class="number">1</span>, amount+<span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">      dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">// 外层 for 循环在遍历所有状态的所有取值</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;dp.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="comment">// 内层 for 循环在求所有选择的最小值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> coin : coins){</span><br><span class="line">          <span class="comment">//子问题无解 跳过</span></span><br><span class="line">          <span class="keyword">if</span>(i - coin &lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">          dp[i] = <span class="built_in">min</span>(dp[i], <span class="number">1</span>+dp[i-coin]);</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> (dp[amount] == amount + <span class="number">1</span>) ? <span class="number">-1</span> : dp[amount];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="279-完全平方数"><a href="#279-完全平方数" class="headerlink" title="279. 完全平方数"></a><a href="https://leetcode-cn.com/problems/perfect-squares/">279. 完全平方数</a></h3><p>给你一个整数 <code>n</code> ，返回 <em>和为 <code>n</code> 的完全平方数的最少数量</em> 。</p><p><strong>完全平方数</strong> 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。例如，<code>1</code>、<code>4</code>、<code>9</code> 和 <code>16</code> 都是完全平方数，而 <code>3</code> 和 <code>11</code> 不是。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 12</span><br><span class="line">输出：3 </span><br><span class="line">解释：12 = 4 + 4 + 4</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 13</span><br><span class="line">输出：2</span><br><span class="line">解释：13 = 4 + 9</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSquares</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">int</span> minVal = INT_MAX;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j*j&lt;=i; j++){</span><br><span class="line">                <span class="comment">//i-j*j是从大到小的遍历dp,这样才可以保证最小次数</span></span><br><span class="line">                minVal = <span class="built_in">min</span>(minVal, dp[i-j*j]);  </span><br><span class="line">            }</span><br><span class="line">            dp[i] = minVal + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//相比上面 耗时较多 难度是数组的赋值比较费时间？</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSquares</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(n + <span class="number">1</span>, n + <span class="number">1</span>)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j*j&lt;=i; j++){</span><br><span class="line">                <span class="comment">//i-j*j是从大到小的遍历dp,这样才可以保证最小次数</span></span><br><span class="line">                dp[i] = <span class="built_in">min</span>(dp[i], dp[i-j*j] + <span class="number">1</span>);  </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="300-最长递增子序列"><a href="#300-最长递增子序列" class="headerlink" title="300. 最长递增子序列"></a><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">300. 最长递增子序列</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=300">labuladong 题解</a><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/#">思路</a></p><p>难度中等2362收藏分享切换为英文接收动态反馈</p><p>给你一个整数数组 <code>nums</code> ，找到其中最长严格递增子序列的长度。</p><p><strong>子序列</strong> 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，<code>[3,6,2,7]</code> 是数组 <code>[0,3,1,6,2,2,7]</code> 的子序列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [10,9,2,5,3,7,101,18]</span><br><span class="line">输出：4</span><br><span class="line">解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1,0,3,2,3]</span><br><span class="line">输出：4</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>dp数组：注意 递增子序列与当前数字的大小有关 所以dp的含义为 以当前数结尾的最长子序列长度</li><li>状态转移：当前比之前的大  则更新dp[i] 为max(dp[j+1] , dp[i])</li><li>base case: 所有单个数字的序列dp均为1</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//主要是注意dp数组的含义</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(n, <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> nowI = nums[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;i; j++){</span><br><span class="line">                <span class="keyword">if</span>(nowI&gt;nums[j]){</span><br><span class="line">                    dp[i] = <span class="built_in">max</span>(dp[j] + <span class="number">1</span>, dp[i]);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(dp[i], ans);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h2><h4 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h4><p>背包最大重量为4， 每个物品只能用一次，问背包能装的最大价值？</p><table><thead><tr><th>物品</th><th>重量</th><th>价值</th></tr></thead><tbody><tr><td>物品0</td><td>1</td><td>15</td></tr><tr><td>物品1</td><td>3</td><td>20</td></tr><tr><td>物品2</td><td>4</td><td>30</td></tr></tbody></table><p>对于背包问题，有一种写法， 是使用二维数组，即<strong>dp[i] [j] 表示从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少</strong>。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202101101032124.png" alt="动态规划-背包问题5"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_2_wei_bag_problem1</span><span class="params">()</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; weight = {<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>};</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; value = {<span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>};</span><br><span class="line">    <span class="keyword">int</span> bagweight = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二维数组</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(weight.<span class="built_in">size</span>(), vector&lt;<span class="keyword">int</span>&gt;(bagweight + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = weight[<span class="number">0</span>]; j &lt;= bagweight; j++) {</span><br><span class="line">        dp[<span class="number">0</span>][j] = value[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// weight数组的大小 就是物品个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; weight.<span class="built_in">size</span>(); i++) { <span class="comment">// 遍历物品</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= bagweight; j++) { <span class="comment">// 遍历背包容量</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">else</span> dp[i][j] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; dp[weight.<span class="built_in">size</span>() - <span class="number">1</span>][bagweight] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">test_2_wei_bag_problem1</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="滚动一维数组"><a href="#滚动一维数组" class="headerlink" title="滚动一维数组"></a>滚动一维数组</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_1_wei_bag_problem</span><span class="params">()</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; weight = {<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>};</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; value = {<span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>};</span><br><span class="line">    <span class="keyword">int</span> bagWeight = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(bagWeight + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; weight.<span class="built_in">size</span>(); i++) { <span class="comment">// 遍历物品</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="comment">// 遍历背包容量</span></span><br><span class="line">            dp[j] = <span class="built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);  <span class="comment">//dp复用</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">test_1_wei_bag_problem</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="分割等和子集"><a href="#分割等和子集" class="headerlink" title="分割等和子集"></a><a href="https://leetcode-cn.com/problems/partition-equal-subset-sum/">分割等和子集</a></h3><p>给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。</p><blockquote><p>示例 1：</p><p>输入：nums = [1,5,11,5]<br>输出：true<br>解释：数组可以分割成 [1, 5, 5] 和 [11] 。</p><p>示例 2：</p><p>输入：nums = [1,2,3,5]<br>输出：false<br>解释：数组不能分割成两个元素和相等的子集。</p></blockquote><p>这也是一道经典的背包题</p><p>理解：</p><blockquote><p>背包的最大重量为sum/2</p><p>物品的重量为nums[i]</p><p>物品的价值为nums[i]</p><p><code>每个物品只有一个 求背包装最大的价值</code></p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canPartition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> allSum = <span class="built_in">accumulate</span>(<span class="built_in">begin</span>(nums), <span class="built_in">end</span>(nums), <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span>(allSum%<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> target = allSum/<span class="number">2</span>;</span><br><span class="line">      vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(nums.<span class="built_in">size</span>(), vector&lt;<span class="keyword">int</span>&gt;(target+<span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = nums[<span class="number">0</span>]; j&lt;=target; j++){</span><br><span class="line">        dp[<span class="number">0</span>][j] = nums[<span class="number">0</span>];</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;=target; j++){</span><br><span class="line">          <span class="keyword">if</span>(j &lt; nums[i]) dp[i][j] = dp[i<span class="number">-1</span>][j];</span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">            dp[i][j] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][j], dp[i<span class="number">-1</span>][j-nums[i]] + nums[i]);            </span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> dp[nums.<span class="built_in">size</span>()<span class="number">-1</span>][target] == target;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canPartition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> allSum = <span class="built_in">accumulate</span>(<span class="built_in">begin</span>(nums), <span class="built_in">end</span>(nums), <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span>(allSum%<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> target = allSum/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// dp[i]中的i表示背包内总和</span></span><br><span class="line">      <span class="comment">// 题目中说：每个数组中的元素不会超过 100，数组的大小不会超过 200</span></span><br><span class="line">      <span class="comment">// 总和不会大于20000，背包最大只需要其中一半，所以10001大小就可以</span></span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(<span class="number">10001</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="comment">//begin 0/1</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = target; j&gt;=nums[i]; j--){</span><br><span class="line">          dp[j] = <span class="built_in">max</span>(dp[j], dp[j-nums[i]] + nums[i]);</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> dp[target] == target;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="118-杨辉三角"><a href="#118-杨辉三角" class="headerlink" title="118. 杨辉三角"></a><a href="https://leetcode-cn.com/problems/pascals-triangle/">118. 杨辉三角</a></h3><p>给定一个非负整数 <em><code>numRows</code>，</em>生成「杨辉三角」的前 <em><code>numRows</code></em> 行。</p><p>在「杨辉三角」中，每个数是它左上方和右上方的数的和。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203132135089.gif" alt="img"></p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: numRows = 5</span><br><span class="line">输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>dp迭代 生成二维ans数组</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">generate</span>(<span class="keyword">int</span> numRows) {</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numRows; i++){</span><br><span class="line">            <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(i+<span class="number">1</span>)</span></span>;</span><br><span class="line">            temp[<span class="number">0</span>] = temp[i] = <span class="number">1</span>;  <span class="comment">//首位数据是确定的 base case</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;i; j++){</span><br><span class="line">                <span class="comment">//状态转移方程</span></span><br><span class="line">                temp[j] = ans[i<span class="number">-1</span>][j<span class="number">-1</span>] + ans[i<span class="number">-1</span>][j];</span><br><span class="line">            }</span><br><span class="line">            ans.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="119-杨辉三角-II"><a href="#119-杨辉三角-II" class="headerlink" title="119. 杨辉三角 II "></a><a href="https://leetcode-cn.com/problems/pascals-triangle-ii/">119. 杨辉三角 II </a></h3><p>给定一个非负索引 rowIndex，返回「杨辉三角」的第 rowIndex 行。</p><p>在「杨辉三角」中，每个数是它左上方和右上方的数的和。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203132138328.gif" alt="img"></p><p>示例 1:</p><p>输入: rowIndex = 3<br>输出: [1,3,3,1]</p><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>注意 此处的rowIndex 从0开始</li></ol><h4 id="朴素的dp解法"><a href="#朴素的dp解法" class="headerlink" title="朴素的dp解法"></a>朴素的dp解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp解法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">C</span>(rowIndex + <span class="number">1</span>); <span class="comment">//这道题rowindex从0开始</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            C[i].<span class="built_in">resize</span>(i + <span class="number">1</span>);</span><br><span class="line">            C[i][<span class="number">0</span>] = C[i][i] = <span class="number">1</span>; <span class="comment">//base case 首尾必定是1</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) {</span><br><span class="line">                C[i][j] = C[i - <span class="number">1</span>][j - <span class="number">1</span>] + C[i - <span class="number">1</span>][j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> C[rowIndex];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="滚动数组优化"><a href="#滚动数组优化" class="headerlink" title="滚动数组优化"></a>滚动数组优化</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; pre, cur;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            cur.<span class="built_in">resize</span>(i + <span class="number">1</span>);</span><br><span class="line">            cur[<span class="number">0</span>] = cur[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) {</span><br><span class="line">                cur[j] = pre[j - <span class="number">1</span>] + pre[j];</span><br><span class="line">            }</span><br><span class="line">            pre = cur;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="继续优化-从后到前"><a href="#继续优化-从后到前" class="headerlink" title="继续优化 从后到前"></a>继续优化 从后到前</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">row</span><span class="params">(rowIndex + <span class="number">1</span>)</span></span>;</span><br><span class="line">        row[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span>; --j) {</span><br><span class="line">                row[j] += row[j - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> row;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="线性递推"><a href="#线性递推" class="headerlink" title="线性递推"></a>线性递推</h4><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203132145601.jpeg" alt="img" style="zoom: 67%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/202203132150495.png" alt="image-20220313215002446" style="zoom:50%;"><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">row</span><span class="params">(rowIndex + <span class="number">1</span>)</span></span>;</span><br><span class="line">        row[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">          <span class="comment">//杨辉三角 组合数规律</span></span><br><span class="line">            row[i] = <span class="number">1LL</span> * row[i - <span class="number">1</span>] * (rowIndex - i + <span class="number">1</span>) / i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> row;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="72-编辑距离"><a href="#72-编辑距离" class="headerlink" title="72. 编辑距离"></a><a href="https://leetcode-cn.com/problems/edit-distance/">72. 编辑距离</a></h4><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=72&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/edit-distance/#">思路</a></p><p>难度困难2239英文版讨论区</p><p>给你两个单词 <code>word1</code> 和 <code>word2</code>， <em>请返回将 <code>word1</code> 转换成 <code>word2</code> 所使用的最少操作数</em> 。</p><p>你可以对一个单词进行如下三种操作：</p><ul><li>插入一个字符</li><li>删除一个字符</li><li>替换一个字符</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：word1 = "horse", word2 = "ros"</span><br><span class="line">输出：3</span><br><span class="line">解释：</span><br><span class="line">horse -&gt; rorse (将 'h' 替换为 'r')</span><br><span class="line">rorse -&gt; rose (删除 'r')</span><br><span class="line">rose -&gt; ros (删除 'e')</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：word1 = "intention", word2 = "execution"</span><br><span class="line">输出：5</span><br><span class="line">解释：</span><br><span class="line">intention -&gt; inention (删除 't')</span><br><span class="line">inention -&gt; enention (将 'i' 替换为 'e')</span><br><span class="line">enention -&gt; exention (将 'n' 替换为 'x')</span><br><span class="line">exention -&gt; exection (将 'n' 替换为 'c')</span><br><span class="line">exection -&gt; execution (插入 'u')</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li><p>dp含义：由于我们的目的求将 word1 转换成 word2 所使用的最少操作数 。那我们就定义 dp[i] [j]的含义为：**当字符串 word1 的长度为 i，字符串 word2 的长度为 j 时，将 word1 转化为 word2 所使用的最少操作次数为 dp[i] [j]**。</p></li><li><p>状态方程：</p><ul><li><p>如果我们 word1[i] 与 word2 [j] 相等，这个时候不需要进行任何操作，显然有 dp[i] [j] = dp[i-1] [j-1]。</p></li><li><p>如果我们 word1[i] 与 word2 [j] 不相等，这个时候我们就必须进行调整，而调整的操作有 3 种，我们要选择一种。三种操作对应的关系试如下（注意字符串与字符的区别）：</p><ul><li>如果把字符 word1[i] 替换成与 word2[j] 相等，则有 dp[i] [j] = dp[i-1] [j-1] + 1;</li><li>如果在字符串 word1末尾插入一个与 word2[j] 相等的字符，则有 dp[i] [j] = dp[i] [j-1] + 1;</li><li>如果把字符 word1[i] 删除，则有 dp[i] [j] = dp[i-1] [j] + 1;那么我们应该选择一种操作，使得 dp[i] [j] 的值最小，显然有<strong>dp[i] [j] = min(dp[i-1] [j-1]，dp[i] [j-1]，dp[[i-1] [j]]) + 1;</strong></li></ul></li></ul></li><li><p>base case: 当 dp[i] [j] 中，如果 i 或者 j 有一个为 0，这个时候把 i - 1 或者 j - 1，就变成负数了，数组就会出问题了，所以我们的初始值是计算出所有的 dp[0] [0….n] 和所有的 dp[0….m] [0]。这个还是非常容易计算的，因为当有一个字符串的长度为 0 时，转化为另外一个字符串，那就只能一直进行插入或者删除操作了。</p></li></ol><blockquote><p>大佬：90%的字符串问题都可以用dp解决</p><p>我：** * **</p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minDistance</span><span class="params">(string word1, string word2)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = word1.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> n = word2.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(m+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(n+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">            dp[i][<span class="number">0</span>] = dp[i<span class="number">-1</span>][<span class="number">0</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            dp[<span class="number">0</span>][i] = dp[<span class="number">0</span>][i<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;=n; j++){</span><br><span class="line">                <span class="keyword">if</span>(word1[i<span class="number">-1</span>] == word2[j<span class="number">-1</span>])</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = <span class="built_in">min</span>(<span class="built_in">min</span>(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]), dp[i<span class="number">-1</span>][j<span class="number">-1</span>]) + <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="10-正则表达式匹配"><a href="#10-正则表达式匹配" class="headerlink" title="10. 正则表达式匹配"></a><a href="https://leetcode-cn.com/problems/regular-expression-matching/">10. 正则表达式匹配</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=10&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/regular-expression-matching/#">思路</a></p><p>难度困难2842英文版讨论区</p><p>给你一个字符串 <code>s</code> 和一个字符规律 <code>p</code>，请你来实现一个支持 <code>'.'</code> 和 <code>'*'</code> 的正则表达式匹配。</p><ul><li><code>'.'</code> 匹配任意单个字符</li><li><code>'*'</code> 匹配零个或多个前面的那一个元素</li></ul><p>所谓匹配，是要涵盖 <strong>整个</strong> 字符串 <code>s</code>的，而不是部分字符串。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//背这个</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (p.<span class="built_in">empty</span>()) <span class="keyword">return</span> s.<span class="built_in">empty</span>();</span><br><span class="line">        <span class="comment">//当前位置匹配</span></span><br><span class="line">        <span class="keyword">auto</span> first_match = !s.<span class="built_in">empty</span>() &amp;&amp; (s[<span class="number">0</span>] == p[<span class="number">0</span>] || p[<span class="number">0</span>] == <span class="string">'.'</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (p.<span class="built_in">length</span>() &gt;= <span class="number">2</span> &amp;&amp; p[<span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">            <span class="comment">//通配符匹配0次 || 通配符匹配多次</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">isMatch</span>(s, p.<span class="built_in">substr</span>(<span class="number">2</span>)) || (first_match &amp;&amp; <span class="built_in">isMatch</span>(s.<span class="built_in">substr</span>(<span class="number">1</span>), p));</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="comment">//无通配符，向前匹配</span></span><br><span class="line">            <span class="keyword">return</span> first_match &amp;&amp; <span class="built_in">isMatch</span>(s.<span class="built_in">substr</span>(<span class="number">1</span>), p.<span class="built_in">substr</span>(<span class="number">1</span>));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    unordered_map&lt;string, <span class="keyword">int</span>&gt; memo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dp</span>(s, <span class="number">0</span>, p, <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line"><span class="comment">/* 计算 p[j..] 是否匹配 s[i..] */</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">dp</span><span class="params">(string&amp; s, <span class="keyword">int</span> i, string&amp; p, <span class="keyword">int</span> j)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = s.<span class="built_in">size</span>(), n = p.<span class="built_in">size</span>();</span><br><span class="line">        <span class="comment">// base case</span></span><br><span class="line">        <span class="keyword">if</span> (j == n) {</span><br><span class="line">            <span class="keyword">return</span> i == m;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (i == m) {</span><br><span class="line">            <span class="comment">// 如果能匹配空串，一定是字符和 * 成对儿出现</span></span><br><span class="line">            <span class="keyword">if</span> ((n - j) % <span class="number">2</span> == <span class="number">1</span>) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 检查是否为 x*y*z* 这种形式</span></span><br><span class="line">            <span class="keyword">for</span> (; j + <span class="number">1</span> &lt; n; j += <span class="number">2</span>) {</span><br><span class="line">                <span class="keyword">if</span> (p[j + <span class="number">1</span>] != <span class="string">'*'</span>) {</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 记录状态 (i, j)，消除重叠子问题</span></span><br><span class="line">        string key = <span class="built_in">to_string</span>(i) + <span class="string">","</span> + <span class="built_in">to_string</span>(j);</span><br><span class="line">        <span class="keyword">if</span> (memo.<span class="built_in">count</span>(key)) <span class="keyword">return</span> memo[key];</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">bool</span> res = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (s[i] == p[j] || p[j] == <span class="string">'.'</span>) {</span><br><span class="line">            <span class="comment">// 匹配</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; n - <span class="number">1</span> &amp;&amp; p[j + <span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">   <span class="comment">// 1.1 通配符匹配 0 次或多次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i, p, j + <span class="number">2</span>) || <span class="built_in">dp</span>(s, i + <span class="number">1</span>, p, j);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">// 1.2 常规匹配 1 次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i + <span class="number">1</span>, p, j + <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">             <span class="comment">// 不匹配</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; n - <span class="number">1</span> &amp;&amp; p[j + <span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">                <span class="comment">// 2.1 通配符匹配 0 次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i, p, j + <span class="number">2</span>);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">// 2.2 无法继续匹配</span></span><br><span class="line">                res = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 将当前结果记入备忘录</span></span><br><span class="line">        memo[key] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="炒股专题"><a href="#炒股专题" class="headerlink" title="炒股专题"></a>炒股专题</h2><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/1.png" alt="img" style="zoom:67%;"><h3 id="121-买卖股票的最佳时机-一次买卖"><a href="#121-买卖股票的最佳时机-一次买卖" class="headerlink" title="121. 买卖股票的最佳时机 一次买卖"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/">121. 买卖股票的最佳时机 一次买卖</a></h3><p>给定一个数组 <code>prices</code> ，它的第 <code>i</code> 个元素 <code>prices[i]</code> 表示一支给定股票第 <code>i</code> 天的价格。</p><p>你只能选择 <strong>某一天</strong> 买入这只股票，并选择在 <strong>未来的某一个不同的日子</strong> 卖出该股票。设计一个算法来计算你所能获取的最大利润。</p><p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 <code>0</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：[7,1,5,3,6,4]</span><br><span class="line">输出：5</span><br><span class="line">解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。</span><br><span class="line">     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [7,6,4,3,1]</span><br><span class="line">输出：0</span><br><span class="line">解释：在这种情况下, 没有交易完成, 所以最大利润为 0。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li><p>贪心 一次遍历 得到 当前值和当前之前的最小值做差 取max</p></li><li><p>动态规划</p><blockquote><p>dp数组的含义</p><ol><li><p>dp{i}{0}表述第i天手中==没有==股票 时 的最大利润    = max(昨天手中就没有股票， 昨天手中有股票但是今天(i)给==卖==了)</p></li><li><p>dp{i}{1}表述第i天手中==有==股票 时 的最大利润       = max(昨天手中就有股票， 昨天手中没有股票但是今天(i)==买==了)</p></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp[i][<span class="number">0</span>]= <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br></pre></td></tr></tbody></table></figure></blockquote></li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                <span class="comment">//base case</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = INT_MIN;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>]= <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            <span class="comment">//注意这里不能时dp[i-1][0],因为只有一次操作</span></span><br><span class="line">            <span class="comment">//前面没有股票买卖 没有利润</span></span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="comment">// dp[i][0] = max(dp[i-1][0], dp[i-1][1] + prices[i])</span></span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            <span class="comment">// dp[i][1] = max(dp[i-1][1], -prices[i])</span></span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, -prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//贪心</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n =prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>; <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            <span class="keyword">if</span>(prices[left]&lt;prices[right])</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, prices[right] - prices[left]);</span><br><span class="line">            <span class="keyword">else</span> left = right;</span><br><span class="line">            right++;            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{    </span><br><span class="line">        <span class="keyword">int</span> mmin = INT_MAX;<span class="comment">//遇到最小的数</span></span><br><span class="line">        <span class="keyword">int</span> mmax = <span class="number">0</span>;<span class="comment">//差值最大数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i : prices) {</span><br><span class="line">            mmin = <span class="built_in">min</span>(i, mmin); </span><br><span class="line">            mmax = <span class="built_in">max</span>(i - mmin, mmax);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> mmax ;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="122-买卖股票的最佳时机-无限次买卖"><a href="#122-买卖股票的最佳时机-无限次买卖" class="headerlink" title="122. 买卖股票的最佳时机 无限次买卖"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/">122. 买卖股票的最佳时机 无限次买卖</a></h3><p>给定一个数组 <code>prices</code> ，其中 <code>prices[i]</code> 表示股票第 <code>i</code> 天的价格。</p><p>在每一天，你可能会决定购买和/或出售股票。你在任何时候 <strong>最多</strong> 只能持有 <strong>一股</strong> 股票。你也可以购买它，然后在 <strong>同一天</strong> 出售。<br>返回 <em>你能获得的 <strong>最大</strong> 利润</em> 。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [7,1,5,3,6,4]</span><br><span class="line">输出: 7</span><br><span class="line">解释: 在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。</span><br><span class="line">随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6-3 = 3 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [1,2,3,4,5]</span><br><span class="line">输出: 4</span><br><span class="line">解释: 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。</span><br><span class="line">注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><ol><li><p>贪心 每次相邻两天涨价都卖股票</p></li><li><p>dp 同上 但是更为贴近经典模板 允许多次买卖 注意状态方程</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br></pre></td></tr></tbody></table></figure></li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//没有购买次数的限制</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//滚动优化</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_i_0; <span class="comment">//临时存储上个dp_i_0     dp_i_1写在dp_i_0之前则无需temp </span></span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, temp - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//贪心 每次相邻两天涨价都卖股票</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; prices.<span class="built_in">size</span>()<span class="number">-1</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(prices[i]&lt;prices[i+<span class="number">1</span>]){</span><br><span class="line">                max+=prices[i+<span class="number">1</span>]-prices[i];</span><br><span class="line">            }  </span><br><span class="line">        }   </span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="714-买卖股票的最佳时机-含手续费"><a href="#714-买卖股票的最佳时机-含手续费" class="headerlink" title="714. 买卖股票的最佳时机 含手续费"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/">714. 买卖股票的最佳时机 含手续费</a></h3><p>给定一个整数数组 <code>prices</code>，其中 <code>prices[i]</code>表示第 <code>i</code> 天的股票价格 ；整数 <code>fee</code> 代表了交易股票的手续费用。</p><p>你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。</p><p>返回获得利润的最大值。</p><p><strong>注意：</strong>这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1, 3, 2, 8, 4, 9], fee = 2</span><br><span class="line">输出：8</span><br><span class="line">解释：能够达到的最大利润:  </span><br><span class="line">在此处买入 prices[0] = 1</span><br><span class="line">在此处卖出 prices[3] = 8</span><br><span class="line">在此处买入 prices[4] = 4</span><br><span class="line">在此处卖出 prices[5] = 9</span><br><span class="line">总利润: ((8 - 1) - 2) + ((9 - 4) - 2) = 8</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1,3,7,5,10,3], fee = 3</span><br><span class="line">输出：6</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>一样的套路 只是注意 -fee -fee…….在dp0上可能引发的越界问题 除非给定特别合适的初始值（-1？错）</p><blockquote><p>[9,8,7,1,2] 3</p><p>例如上面那个 会导致dp1错误  老老实实放在dp1上吧   -1000000是可以通过的</p></blockquote><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_0;</span><br><span class="line">            <span class="comment">//注意 这里-fee最好不要写在dp0上 不然INT_MIN可能越界，不好控制初始值</span></span><br><span class="line">            dp_0 = <span class="built_in">max</span>(dp_0, dp_1 + prices[i]);</span><br><span class="line">            dp_1 = <span class="built_in">max</span>(dp_1, temp - prices[i] - fee);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="309-最佳买卖股票时机-含冷冻期"><a href="#309-最佳买卖股票时机-含冷冻期" class="headerlink" title="309. 最佳买卖股票时机 含冷冻期"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">309. 最佳买卖股票时机 含冷冻期</a></h3><p>给定一个整数数组<code>prices</code>，其中第 <code>prices[i]</code> 表示第 <code>*i*</code> 天的股票价格 。</p><p>设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:</p><ul><li>卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。</li></ul><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [1,2,3,0,2]</span><br><span class="line">输出: 3 </span><br><span class="line">解释: 对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><p>0 1单独判断  注意代码中的状态方程</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;prices.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">1</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-2</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">int</span> dp_pre_0 = <span class="number">0</span>; <span class="comment">//代表dp[i-2][0];</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_i_0;</span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, dp_pre_0 - prices[i]);       </span><br><span class="line">            dp_pre_0 = temp;    </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="123-买卖股票的最佳时机-限制两笔交易"><a href="#123-买卖股票的最佳时机-限制两笔交易" class="headerlink" title="123. 买卖股票的最佳时机 限制两笔交易"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">123. 买卖股票的最佳时机 限制两笔交易</a></h3><p>给定一个数组，它的第 <code>i</code> 个元素是一支给定的股票在第 <code>i</code> 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>两笔</strong> 交易。</p><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [3,3,5,0,0,3,1,4]</span><br><span class="line">输出：6</span><br><span class="line">解释：在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。</span><br><span class="line">     随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1,2,3,4,5]</span><br><span class="line">输出：4</span><br><span class="line">解释：在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。   </span><br><span class="line">     注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。   </span><br><span class="line">     因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h4><ol><li>有次数限制k for循环加一层k</li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> maxk = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                    dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                    dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//滚动优化</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> dp_i10 = <span class="number">0</span>, dp_i20 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i11 = INT_MIN, dp_i21 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> price: prices){</span><br><span class="line">            dp_i20 = <span class="built_in">max</span>(dp_i20, dp_i21 + price);</span><br><span class="line">            dp_i21 = <span class="built_in">max</span>(dp_i21, dp_i10 - price);</span><br><span class="line">            dp_i10 = <span class="built_in">max</span>(dp_i10, dp_i11 + price);</span><br><span class="line">            dp_i11 = <span class="built_in">max</span>(dp_i11, -price);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i20;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="188-买卖股票的最佳时机-限制k笔交易"><a href="#188-买卖股票的最佳时机-限制k笔交易" class="headerlink" title="188. 买卖股票的最佳时机 限制k笔交易"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/">188. 买卖股票的最佳时机 限制k笔交易</a></h3><p>给定一个整数数组 <code>prices</code> ，它的第 <code>i</code> 个元素 <code>prices[i]</code> 是一支给定的股票在第 <code>i</code> 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>k</strong> 笔交易。</p><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：k = 2, prices = [2,4,1]</span><br><span class="line">输出：2</span><br><span class="line">解释：在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：k = 2, prices = [3,2,6,5,0,3]</span><br><span class="line">输出：7</span><br><span class="line">解释：在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出, 这笔交易所能获得利润 = 6-2 = 4 。</span><br><span class="line">     随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出, 这笔交易所能获得利润 = 3-0 = 3 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h4><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span> maxk, vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(maxk&gt;n/<span class="number">2</span>){<span class="comment">//一次交易完成需要两天</span></span><br><span class="line">            <span class="comment">//复用之前交易次数k没有限制的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">maxProfit_k_inf</span>(prices);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                    dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                    dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不限制次数k的买卖</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_k_inf</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, dp_i_0 - prices[i]);</span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="万法归一"><a href="#万法归一" class="headerlink" title="万法归一"></a><code>万法归一</code></h3><p>输入股票价格数组 <code>prices</code>，你最多进行 <code>max_k</code> 次交易，每次交易需要额外消耗 <code>fee</code> 的手续费，而且每次交易之后需要经过 <code>cooldown</code> 天的冷冻期才能进行下一次交易，请你计算并返回可以获得的最大利润。</p><p>怎么样，有没有被吓到？如果你直接给别人出一道这样的题目，估计对方要当场吐血，不过我们这样一步步做过来，你应该很容易发现这道题目就是之前我们探讨的几种情况的组合体嘛。</p><p>所以，我们只要把之前实现的几种代码掺和到一块，<strong>在 base case 和状态转移方程中同时加上 <code>cooldown</code> 和 <code>fee</code> 的约束就行了</strong>：</p><p>==怕难以理解 此处全用完整dp数组==</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_all_in_one</span><span class="params">(<span class="keyword">int</span> maxk, vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> cooldown, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(maxk&gt;n/<span class="number">2</span>){<span class="comment">//一次交易完成需要两天</span></span><br><span class="line">            <span class="comment">//复用之前交易次数k没有限制的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">maxProfit_k_inf_cool</span>(prices, cooldown, fee);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> == <span class="number">-1</span>){</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 包含 cooldown 的 base case</span></span><br><span class="line">            <span class="keyword">if</span>(i-cooldown <span class="number">-1</span>&lt; <span class="number">0</span>){</span><br><span class="line">            dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                <span class="comment">// 别忘了减 fee</span></span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], -prices[i]- fee);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i-cooldown<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i] -fee);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// k 无限制，包含手续费和冷冻期</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_k_inf_cool</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> cooldown, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;prices.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> == <span class="number">-1</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 包含 cooldown 的 base case</span></span><br><span class="line">            <span class="keyword">if</span>(i-cooldown <span class="number">-1</span>&lt; <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                <span class="comment">// 别忘了减 fee</span></span><br><span class="line">                dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]- fee);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            <span class="comment">// 同时考虑 cooldown 和 fee</span></span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i-cooldown<span class="number">-1</span>][<span class="number">0</span>] - prices[i]- fee);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="二维矩阵dp"><a href="#二维矩阵dp" class="headerlink" title="二维矩阵dp"></a>二维矩阵dp</h2><h3 id="62-不同路径-经典简单的二维dp"><a href="#62-不同路径-经典简单的二维dp" class="headerlink" title="62. 不同路径 经典简单的二维dp"></a><a href="https://leetcode-cn.com/problems/unique-paths/">62. 不同路径 经典简单的二维dp</a></h3><p>一个机器人位于一个 <code>m x n</code> 网格的左上角 （起始点在下图中标记为 “Start” ）。</p><p>机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。</p><p>问总共有多少条不同的路径？</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/robot_maze.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：m = 3, n = 7</span><br><span class="line">输出：28</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h4><ol><li><p>dp的含义：当前位置可以到达的路径数</p><p>所以base case为横竖1</p></li><li><p>状态转移方程 dp [i] [j] = dp[i-1] [j] + dp[i] [j-1]</p></li></ol><h4 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">uniquePaths</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(m, vector&lt;<span class="keyword">int</span>&gt;(n));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            dp[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;n; j++){</span><br><span class="line">                dp[i][j] = dp[i<span class="number">-1</span>][j] + dp[i][j<span class="number">-1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[m<span class="number">-1</span>][n<span class="number">-1</span>];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="64-最小路径和"><a href="#64-最小路径和" class="headerlink" title="64. 最小路径和"></a><a href="https://leetcode-cn.com/problems/minimum-path-sum/">64. 最小路径和</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=64&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/minimum-path-sum/#">思路</a></p><p>难度中等1191</p><p>给定一个包含非负整数的 <code>*m* x *n*</code> 网格 <code>grid</code> ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。</p><p><strong>说明：</strong>每次只能向下或者向右移动一步。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/minpath.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [[1,3,1],[1,5,1],[4,2,1]]</span><br><span class="line">输出：7</span><br><span class="line">解释：因为路径 1→3→1→1→1 的总和最小。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [[1,2,3],[4,5,6]]</span><br><span class="line">输出：12</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h4><ol><li>可以记一下这个短路的万能写法</li><li>横 竖的 路径和是确定的 所以 这是base case</li><li>状态转移方程 dp[i] [j] = min(dp[i-1] [j], dp[i] [j-1]) + grid[i] [j];</li></ol><h4 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h4><ol><li>回溯超时</li><li>dp</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// vector&lt;int&gt; allAns;</span></span><br><span class="line">    <span class="comment">// int minPathSum(vector&lt;vector&lt;int&gt;&gt;&amp; grid) {</span></span><br><span class="line">    <span class="comment">//   int ans = 0;</span></span><br><span class="line">    <span class="comment">//   int m = grid.size();</span></span><br><span class="line">    <span class="comment">//   int n = grid[0].size();</span></span><br><span class="line">    <span class="comment">//   goWay(ans, grid, 0 , 0);</span></span><br><span class="line">    <span class="comment">//   return *std::min_element(allAns.begin(), allAns.end());</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// void goWay(int tempans, vector&lt;vector&lt;int&gt;&gt; grid, int x, int y){</span></span><br><span class="line">    <span class="comment">//   if(x == grid.size()-1 &amp;&amp; y == grid[0].size()-1){</span></span><br><span class="line">    <span class="comment">//     tempans+=grid[x][y];</span></span><br><span class="line">    <span class="comment">//     allAns.push_back(tempans);       </span></span><br><span class="line">    <span class="comment">//   }</span></span><br><span class="line">    <span class="comment">//   if(x &gt;= grid.size() || y &gt;= grid[0].size())</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">//   tempans += grid[x][y];</span></span><br><span class="line">    <span class="comment">//   goWay(tempans, grid, x+1, y);</span></span><br><span class="line">    <span class="comment">//   goWay(tempans, grid, x, y+1);</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minPathSum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; grid)</span> </span>{</span><br><span class="line">        <span class="comment">//这个判断应该比较万能</span></span><br><span class="line">        <span class="keyword">if</span> (grid.<span class="built_in">size</span>() == <span class="number">0</span> || grid[<span class="number">0</span>].<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> m = grid.<span class="built_in">size</span>(), n = grid[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">auto</span> dp = vector &lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(m, vector &lt;<span class="keyword">int</span>&gt; (n));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = grid[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) {</span><br><span class="line">            dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>] + grid[i][<span class="number">0</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) {</span><br><span class="line">            dp[<span class="number">0</span>][j] = dp[<span class="number">0</span>][j - <span class="number">1</span>] + grid[<span class="number">0</span>][j];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) {</span><br><span class="line">                dp[i][j] = <span class="built_in">min</span>(dp[i - <span class="number">1</span>][j], dp[i][j - <span class="number">1</span>]) + grid[i][j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="120-三角形最小路径和"><a href="#120-三角形最小路径和" class="headerlink" title="120. 三角形最小路径和"></a><a href="https://leetcode-cn.com/problems/triangle/">120. 三角形最小路径和</a></h3><p>难度中等995</p><p>给定一个三角形 <code>triangle</code> ，找出自顶向下的最小路径和。</p><p>每一步只能移动到下一行中相邻的结点上。<strong>相邻的结点</strong> 在这里指的是 <strong>下标</strong> 与 <strong>上一层结点下标</strong> 相同或者等于 <strong>上一层结点下标 + 1</strong> 的两个结点。也就是说，如果正位于当前行的下标 <code>i</code> ，那么下一步可以移动到下一行的下标 <code>i</code> 或 <code>i + 1</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]</span><br><span class="line">输出：11</span><br><span class="line">解释：如下面简图所示：</span><br><span class="line">   2</span><br><span class="line">  3 4</span><br><span class="line"> 6 5 7</span><br><span class="line">4 1 8 3</span><br><span class="line">自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 = 11）。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：triangle = [[-10]]</span><br><span class="line">输出：-10</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h4><p>同上</p><h4 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; &amp;nums)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> ans = INT_MAX;</span><br><span class="line"><span class="keyword">int</span> m = nums.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) {</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(i + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="comment">// base case</span></span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>) {</span><br><span class="line">temp[<span class="number">0</span>] = nums[i][<span class="number">0</span>];</span><br><span class="line">dp[i] = temp;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i + <span class="number">1</span>; j++) {</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">temp[j] = dp[i - <span class="number">1</span>][j] + nums[i][j];</span><br><span class="line"><span class="keyword">if</span> (j == i)</span><br><span class="line">temp[j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + nums[i][j];</span><br><span class="line"><span class="keyword">if</span> (j != <span class="number">0</span> &amp;&amp; j != i)</span><br><span class="line">temp[j] = <span class="built_in">min</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - <span class="number">1</span>]) + nums[i][j];</span><br><span class="line">}</span><br><span class="line">dp[i] = temp;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dp[m - <span class="number">1</span>].<span class="built_in">size</span>(); i++) {</span><br><span class="line"><span class="comment">//cout &lt;&lt; dp[m - 1][i] &lt;&lt; endl;</span></span><br><span class="line">ans = <span class="built_in">min</span>(ans, dp[m - <span class="number">1</span>][i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h3 id="221-最大正方形"><a href="#221-最大正方形" class="headerlink" title="221. 最大正方形"></a><a href="https://leetcode-cn.com/problems/maximal-square/">221. 最大正方形</a></h3><p>难度中等1091英文版讨论区</p><p>在一个由 <code>'0'</code> 和 <code>'1'</code> 组成的二维矩阵内，找到只包含 <code>'1'</code> 的最大正方形，并返回其面积。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/max1grid.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：matrix = [["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]]</span><br><span class="line">输出：4</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h4><ol><li>dp含义： 当前点 之上 的最大正方形的面积</li><li>状态转移：之前三方向的 最小dp值（最小说明受这个方向的限制） + 1</li><li>base case: 第一行第一列 为1的位置</li></ol><h4 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maximalSquare</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; matrix)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> maxSide = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(matrix.<span class="built_in">size</span>() == <span class="number">0</span> || matrix[<span class="number">0</span>].<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(m, vector&lt;<span class="keyword">int</span>&gt;(n));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(matrix[i][j] == <span class="string">'1'</span>){</span><br><span class="line">                    <span class="keyword">if</span>(i == <span class="number">0</span> || j == <span class="number">0</span>){</span><br><span class="line">                        dp[i][j] = <span class="number">1</span>;</span><br><span class="line">                    }<span class="keyword">else</span>{</span><br><span class="line">                        dp[i][j] = <span class="built_in">min</span>(<span class="built_in">min</span>(dp[i<span class="number">-1</span>][j], dp[i<span class="number">-1</span>][j<span class="number">-1</span>]), dp[i][j<span class="number">-1</span>]) + <span class="number">1</span>;</span><br><span class="line">                    }</span><br><span class="line">                    maxSide = <span class="built_in">max</span>(maxSide, dp[i][j]);</span><br><span class="line">                }     </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> maxSide* maxSide;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针数组赋值越界引发的bug</title>
      <link href="/2022/03/16/zhi-zhen-shu-zu-fu-zhi-yue-jie-yin-fa-de-bug/"/>
      <url>/2022/03/16/zhi-zhen-shu-zu-fu-zhi-yue-jie-yin-fa-de-bug/</url>
      
        <content type="html"><![CDATA[<h2 id="指针数组赋值越界引发的bug"><a href="#指针数组赋值越界引发的bug" class="headerlink" title="指针数组赋值越界引发的bug"></a>指针数组赋值越界引发的bug</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><ul><li>项目中写了这么一段代码，整段代码在while循环中循环读取数据</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">if</span> (!<span class="built_in">GetAveData</span>(strFilePath, m_ppHVFreq[i], m_ppHV[i], m_pnHVSize[i]))  <span class="comment">//读取hv数据</span></span><br><span class="line">     <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">   nSize = m_pnHVSize[i];  <span class="comment">//nSize为300</span></span><br><span class="line">   m_ppdHVFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize];</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nSize; m++) {</span><br><span class="line">     m_ppdHVFreqLog[i][m] = <span class="built_in">log</span>(m_ppHVFreq[i][m]);</span><br><span class="line">     allHvFreMax =</span><br><span class="line">         allHvFreMax &gt; m_ppHVFreq[i][m] ? allHvFreMax : m_ppHVFreq[i][m];</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">//读取spec数据</span></span><br><span class="line">   <span class="keyword">if</span> (!<span class="built_in">ReadSpecFile</span>(m_arrDataFiles[i], m_ppdSpecFreq[i], m_ppdSpecV[i],</span><br><span class="line">                     m_pnSpecSize[i]))</span><br><span class="line">     <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//保存spec 的 log frequency</span></span><br><span class="line">   <span class="keyword">int</span> nnSize = m_pnSpecSize[i];</span><br><span class="line"><span class="comment">//命名不规范，调试两行泪</span></span><br><span class="line">   m_ppdSpecFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize]; <span class="comment">// 100 hv 300 spec</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nnSize; m++) {</span><br><span class="line">     m_ppdSpecFreqLog[i][m] = <span class="built_in">log</span>(m_ppdSpecFreq[i][m]);</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><ul><li>在代码的第21行<code>m_ppdSpecFreqLog[i] = new double[nSize]; // 100 hv 300 spec</code>，这段代码中想着用nnSize(300)开辟，结果开辟成了nSize(100)大小，导致在后续的处理中，对数组进行了越界的赋值</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">m_ppdSpecFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize]; <span class="comment">// 100 hv 300 spec</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nnSize; m++) {</span><br><span class="line">  m_ppdSpecFreqLog[i][m] = <span class="built_in">log</span>(m_ppdSpecFreq[i][m]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>开辟了一百的大小却赋了300的值，这样的直接后果就是后面用new开辟指针数组 ==疯狂中断== 报访问异常，难以定位，难以排查</p><p><img src="https://github.com/qianxunslimg/cloudimg/blob/main/img/image-20220316192700569.png?raw=true" alt="image-20220316192700569.png"></p></li></ul><h3 id="教训"><a href="#教训" class="headerlink" title="教训"></a>教训</h3><ol><li>命名不规范，调试两行泪</li><li>认真认真认真</li><li>new出错，优先查找这个bug</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 开发随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络面试</title>
      <link href="/2022/03/16/ji-suan-ji-wang-luo-ba-gu/"/>
      <url>/2022/03/16/ji-suan-ji-wang-luo-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f40c6c3bc6281847bfdab8f83639821e8176cc19458b4ffcab66f1fa5d6d2be9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++面试</title>
      <link href="/2022/03/16/c-ba-gu/"/>
      <url>/2022/03/16/c-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c99452329f178a104071ff6381f3746010acfba593b5b39c147d74105f97c38d">35a9ddd7c9100bf1388697aeb95c0eecb7f421e1c3515f6bd78ed3d301a6cd0ed4c2ea017c67f0c8386b3d0eab34d8c9b708dfd09963e4109483a8eff15b9b2bf9c235ea4e8180729448c7239e62c460f928dde85a7641cdf7286429d1eef32b1dc707a5ac6abd1ff692ef707c63af9cecd9e544b3722c7d66b1cc7edf79b4211565d41d6457895307e7b40b4632b358f58d75521005b49bbae4073bb481895b9f366dc1a5820b68fb9a99128b4e9327661d376189ddbe27f5aebfc238be1a79cbd9a9a905ae9e8840597144a5ce5f60b951b23820c7e63ff24c408135cbba4a7cdcb5e19cec85832f581684351f3c1660a18ff02a21f00a8dd0a7c5f7fcb4bdc8cc391818d27adfdd3b84c953cb39c176bbc9325a53ef0ac42e0ff226f29364fd5ad62203c7dc9072d6ec9fe04ce4a47fb0277c9ff80656c198cab3494bd42dc9bedbe63858e5040148967aa5808605f58299055eff283ded106e4168d139653a4ef850d6cf6febfe30308475356d74414252ab45e734aa9c670913184c97350db124220ca3257c7dbfc59190be7c3a3776902fbd28d78ebace56ae95f915d6c2af3cd38301350f849612eb4fc8db025c9a163acf65094b0abb3923955e0f2c3f812e018326e7d576dd60fd021f4dad7b36119d28b7dc5f0102525351c8afa9df9119bb2c3787d7587a23da768eefc4f0097eb86f30d1a61fa66881ccd43b6b1905576ccfc3f11c332f8e57b6a714187908d31306c39a7a4eea3ee8bdb17cfff4757b6808dbf6fe5bbfcae6f48a5da8a68f0cdb8e2116e967b22f609b7cdbaa006abb0031c6f575c71ddaef3a9f70b3615f170240b74ddabedc9911ab690ec227cff0ddf4b5d1c3d0754e3914e1a960a51313ff7563f2216c8e525138f75e2e6d17adedd7ac5ee319a6b3112e12a172113f7abf1351bc601f00da5b6d4a1af6a559aa44990375f23db90b7d6dbf5f602aa7419220f5d198fe7217c6caf71798959fb4b0441211a48e5eeed06f9433229e773b2da3b9752a1b7e9d8675577bcf003c7c26e085311d64c0820ed1cf6f7204d2ff576235a48b1e807f0565eb87d54988fb34f674e7f0eba38f7693c1a4347d4fe3d397e5bff913c61003576161bdd1b399007d3bd7193c7e5f3faa28c4e57d79b33b901bc2ffdd27163da4549a07f4e15586a79e717b44b1785b5ba101d24a489eab7f8b31b69675b2a542347be812d7ed34b6da7d8f76a8bc9775088f42a296d7eb8ae5bb42439ce91b0fe5ac7172a125032bfedc97b5bed1a0d7d6ddcb15bf79ce6b96a23fc9d4c09ae68b08a53e522ce3328bee4cddc31e20579d493e559205322b42779f97c2270eed89916882eb4dfe5d2453f06929bccc8e179b3301fa95e9f5b9f7d5a6d7b5e2133200743b00fe09be7f515b4e3d4bfe4d02d3458d84ea351ea191692f39023bc97ce5c3fc94937a37f6120a4e50481b1db82649fd75643ec2f1fcc5aca9524ffcd7819578e1b5280d4fa80d446ba4299302ca32153a8b71f5ecfd53445de5ae2f705cfecf4c659329a166f7ade3a55c425f54e0bb5ac8bb077919144c3afaba35e743c89b6fbab14a0e977f9822bf38a2f8ff0fe23d201a22f5180eede40e7f36a863e9b8f34b2c8717104bec2b8036e3fd910b0cb2dd0895b6b0797ffa28b4dc6f593b27cc712c9567f3b16e068a43716df53529f2c0c18fac2306c9b4559e7d5e70799f42e1ec950f252b2e1ae0f38577236247f9752d1f566bc32b4fe08d397ec5157710fd182d16f7c7e4e62264349a8ecd6c2f58bd3e13b7b75e9495f8f8bd7880d64222c7ad5ba73fc008884cdba7fbefc83d94b4f6f26761b327807ca7a98baa9f7eb1bef367d2edac0399479dbc8b352a1bd75f1c25130c3558d50c555c71e14cb7c9fea9f398daaea20d003cdd3b3913e814d893dd1459febedb3a88d14c2ca5c005ae4fd5b41131fe9e8f3e7419392580be93de236050a106f44a2e234c0c247b7a5a5a1a20cf4088a8c75fb3ea8951be569b55ba63fbfe9dc949ff155fb041dc730680c74a1931ac486681b55e5c4b1795d34759a92e012cfdf1199a09403528bb777c6920fcc8436eaf03ec12a61475b168cb7e77e9855b2b046842d3a346db68a918425cee1cb2ddf240fdc35bd36ab4763e81e85760900584bfc0f2914e843e79e6084be4f902741d13ddf0a3fafdd0852435ab7db19e8756d58990153df4d7771f46c57038fc3a76d07ac00a1f60997477dd5c694e147384a0223647a22bd04c9bbd42469838bf05f5f8042cc0bcc998c60e5320957d11675fda193298b42613b2771121e8e8cd13735701531757571959342910c8f5eaa0c56a88f1ea9f27511dfd1b5d32ecdf0a0d780ecae4fc5f129f7022d2bdae18229378a700aa24fd1ef63a9e37aefbca9b81453d31c963b1dcc09e05f358162eddde1fe7507edf434e1974baef770818e43d2e6b8c1b1e74869d327be2ec8c303be422cadd3e1d2708b1ea174ff3903514f2215e24577dffa88b154df59855f498bdccaa9ca954a0608de888a2345c384c1ff6cd75847984035cf9da210d082a0db2ff32a239a9f5246b447d8f56a0944df77331d1826636c40576e384538aad7fa18d2e10077d0c0d89abd491fedfd6a6feb166af86f08b96d21fc0c7853f65dc1d5a9a7a286e47c35d9e24b55ca72db55b6fa0c1c6d1ec9004adc457987003e31909af2eab815e4bb00042143d7dfc0626dd9d11ff1b59079e1675ac76538567a0a896ee448feeb345707a7c3ede998d9ad9169ead31fdc923459b9d392c7745b749c7d638c6b0032e2599083d72bd78547a596b3db9e8b4b989c2cc7baf1550e99d101cd451dc6aca0de45a62a0b25d2b68923d24ca060b126cd64c57fae4937ebb71aad3de4ad8a2aa7cc143fd6fb9bd77a539ba17038c334bfd411dcb9d3f5373e518c20d47816b420a879f35afe1764d556c329558545550402e482a770f629c98cb320e00779056b0f7e69b93c136c3ece44bd46efc1795d1fe65d36b97a7c7075afd997c472746bf5aa4fa091f6b4a44c084a7f599fb4174a3bfdd58da9a25e1e900fef43a81a5518f497db8c130c956e461575edaab18ad426f970a877bc5835d2cbcb8939089fc1ef1facab4e2c9a2026375077e23b73c042fa95bb54943f1561d8224002366de81f8bceabcb8b3c41b3bb639e13e520117240eda38a8b016354ec8b77041098ea0ea658dc8a9a63bb70be31bd5340f3f2241f1d3c29bab92fe8a566333d45554c8fdb7b84e6e1e10a7dcf9c3fcd4329d13c5fb37b7c1a9538e1bbfe20850f0f54a94c09a3a8a54c10cba4abac0f355355418d22d708f20083546e4818dca68d7ca531f5b104e6d47485cf5874ebf37438e210339e69d2df430b6270ffedf8ba77111dbb38b27ce711a015789235ae9ccc94b5b82ae48bb0d2b7b8d0533f00ad6818275017e7b566fea8bf89efe1ff3592ff3b5d570de48c9c936dfeeeaad3bd7ecd4f8979fada1235665d3008a9b90a2e62964fec0141c4bd5769688445720c72d3823ce791143eab04a62af403ffbe355e321b934e8356a3ee8e4ff1d7862fdc09fd6eb8e442d06cc3aad1f3e6f60673b9cfbad531b57ec52a2d37853211f388d62354eac3fa3b5bb8042490d59d9152da1ef5a7c0429c7b33415366158479a87a95011b3937466e43596ccbb536a084db60d6a93609900234bb2a0958a6de14728d2531ccda7a5dc5fbbc6075225a9c8e9ecd4228c794c4faba6739fdde7cf9e45f362c7a71727e4a9c584065525e3293a7f1affff177710b8ca4121d6957feb2a49d72e9aadc0d852994b70927eddc40c1d43f5766cea6f7b7dc25835041a1a9bde9882213fb57fd530f656d2b2181964291ff87c1455e819cfc4b3fa6bc75fb9944d259c82426961861e07f7d37502255df0e8f14e306313333c9872cb46af979acc386708a683e4b0ae51fa86f1cf049f46dbaf6d029a347124d6a6d2de1f7bdfec244f49e1a9fb6f545def3fc1f71b48210a2ef155a2b6f967f0bd4de310207c00e6f20281f3faebed808208cd1358a3f0dd1714e951a58f208bb997cdbfc5974d929be30fe143b80b9693a3c8e69ac5f2bf39adcc62955ffef386427ab92cd739d7c2609a674db18a54fae911732cc43d14185bdd1a682e2e5a84ca987a17ae0312fad51fd6208044000aef22ff0527b23e937fb2ec7bd5546bf1b84d20c83966cd98671e4cf60cbd9f7985fc7d44e3d20a5d8846a4bd98db05afed9c04585b93a913804d0203519e8f988aa0c09ea4431f65456ffd89a1d8e3fac4ca4e98bfded7bbbf2c2048601e1ff8155e3782ff1adc6afd29e7caa053e3cf8cd21860898a914c9e0cae957d4c5ffdae05920389558ba6e2715d5b9dbcb60ccddc67a48a1c21c159d608ff21d6fc7ec51af9432bfb2b3fee0bed7e7f2e41c362468d681279e6e710cb44fc6c53d986e13d0630fcfcb187288899f6d0d89fa874a9ea2ba76b0e9ca7a30710e6b830c52fdc021bed24b491193af16b8c10ac94b2db3aa31417d86c13e66d5eb45df26b5c9b3bb100eba123eea4cbc66ae1dcf6e15da7986c090d238b10d0f767823d731861c917022bd962368d383821dadb29a3e17587dbac249fb599b0af79297a6d193f79035241841d40c0333169c98bfc6576f070346bd8693de17634ac94ea97dee89af5c64785bebeef57bc3a377b88aa2b4ffaea153d042b13f62e24e473eb77f6f934184642a5255e2058332bd25b42600b2112f326bebd6070fdd47360009cb5bbda8f685af88ca352d4bec2fb242a62ddc3d2103c3cf3c73611c4b4b988acfea5c241ecb74723058158e5efd2165cd1477eccca94045efef80b7b42681bb5c1f01d3eec87e73dce567495527017d02d4e2c148f78df418c6782527d3d18a84233519da12a0afa9a2f59452ec5e551ad7fcb51bf01cc5b00d57e4486bcab8b2659eb2b6b48f080adde689d1ea5683f8c0bef188ce5a05222fe88cf782e5ee1650d201a9f114f7fbaf485d000dc80c1478c680329eb3568e088c9a22f1df7af499d6091a746f0112b2f7086a5aff53089b495b4f4fc431f6149060760eadc82692550aacd4e8e22908b1c3e2928d0df2d2c6e02d4dc63e96d4b24cb07cb735ce75929b56cc13d5a0603f5040d54fe015702edf3ed50bea6e582beec55a6c6e477bfb35d90348e345c3f877f18be7f69b363b4b89a3ab6cf7e9774d159a295b8302f7c343e7eb799c3f8e51c28ea83af240aa56cfd927d9720c12e6836300b7764c0d49fd20f87f96649eacbd086c0769a901c9a5be9a1d204d3ce0751344f5a9ae28db416fefb80559b062da5864875460fc685fe67034dc2f9a169bb11d508dbb9579f6664b7b379df67f77201a2082fd3a90284fca8a6ecda78b3036b4a3048b284805545a4e9ed8923e81ab03b5d0aa4195446f5bff1121ba1176364e5e2257cc3d5c4d7ea39f9b739e71db66bd9a1ee6584a12a885145f989f69b0a3bb8141f60caf982da4859a5a384d4f697df8caf93c68566692dbcb9f2f0c61f5a41469c36c6233b8b9d9937ce56cffc7f6a477f3a9780049d9c571f78544cbe7539ab409cf5f602a5ab8ee5f62f641a531a8d638955e759e3ccee0aa2c851264e490adc69f3ee1636eb2cc8d8bd2850329316d75c511d79c2353500da73a22aa3907a465088b0f054f7b37c525ab9ec3e41d1a17217104095cbc9f715a507724702a24f7d08c849117dea21fe38341cbe48ec61767b25d399c9d3bce16df8dacd578930e2082c0e4378ec0b543063399393fd1e3dca5e6fbd880b66f106ffbe0baa506f3a7acd86f6b6973408e5a6286f7ec03446ed112c238a16abc07552633b10134bc966ed51951ebba0a03f033dea0bf02e8e68e5c59184cd2babef04ef03895c808a2ef140a9164827feb19fc4309fa25c3f5437f4a305aa8a168dca7fee2887978f09808d9c0d320f4dbf58163a94fa2fdf389f0cc986fa50049f2e4b209d1e599acee283c4cf9ce8cb2c88fda4caa591c83b87e728da4eaa8e10d431733f1ebde04d2cd9b93383562559036f68211e8600a61ee79802fba0b04845c609b3d93782a9ac8e2d8697ad78f4a15e416231450e046927dd557bf39069027963e30a40d6e9bf9bc6bc54c4cabc9b50925f155aa8c598332b3299864db3dbdb4cc747ee0c858768b97bc2a2489b0f37fb1ca1fb6791e89916d5b477799a49b7951bef50c89b903c1f3f30cc9163eb901104494c1d03df90337a4e2ff1b134655112c32440610468229f4900bcb3fde990d877c39122d1eb8b15191fce2b5f6949b33a56b3baa2fefb78ec28ca4864eac85ce311ebb5ce629357f6d9c9d59b34fcbeb6b4a25b9dd3307dc07183d99dc71e5c1dda907deb521d2dbfe700f8e10bd7a7f6362cfdb062c9a7d4a9f8f0fd06f64269762230749b8c88ee297b84ab9826255bbd6a37c23595bd823e6aa8039114637984d428cb585b4904ad711b7c81b74e6dda2840bdd1f100f757633f5d17db2e79362a86353f9d22807f44bd865ab225c5d29a28e173a84c27336c80d22f1c0a92fbbaad0167e8371a284fd1f344e1ed0818ce58f100bdf57dbd8f1965757e87586cfd34a309c3dff83d226b19b8f260dd575d7241bb5f766b26ce6a81a0e875682c26313fe047b71db90447737351d752fd0eb45463ef64cfedaf3f84c1ec0f26b9eec880bbf0f7a47ea6025e91e8ec67eb777bc65edd0a39759dff6e5668d0904f289ad20530469884feeb30aeb89d92808a67f2931dfeba25e33bd0add12ce7f46ef416fb19f17ba084814f81e17586c2468f2c967b69247696810ff2efab537af6da4ec54c8e4d775c1b24a1f04e97167131c7431a89cad6cfd949e15c6e862cbce8cfefad7902aea18e8047ed2d5600c0bb30cd26f8ebbab9bcd7f3a73d1ae5c5d6cdadc24eb00e0686cecb991ffc068c134ec8aa9f7647f6f4f4f85543b9440a6fc8c809a0123e10a04975f852bcd5174d8d0c8989a7010bd0548d28d3a89bd67ef95a0392246ef619a34fa5ebd54a176af12e795817d97e6ab7751a0d4477427058988eaf98d28223873e5fe20acdf435a271d25c555fb64f28449e9de0c60e15fcabbf5bd503a938d8065edcce0873a9f3cab98974f192b204705884cef8f5dd7bae40156a407255a3433d15f2d891fcfde8ab8d5d3c5ea6d678dcb5b98ef7004de7cb419dc91d661c397395a13dcd8733cac0c324121dcb83ab6c9b6a4edb263748b9fc1d69a653c7731e8b138f783edfb1b0d9d8c1189f0f663aebdb46ebc60a4c7392998006ad867a4e11f7dc83e3a9dda98aedca7024ac83a309ae8edf415b2366e4e2b49905a04c6e458168c5d9e56526c6baa8ef04d175a384662d94702366571037858fe210a8ca53db91b1b2ab2337c17c86bf2b4924f1af3a54c289a41ca083129bac9faf30f4762593bbe5858679d17a3e906c0aa06ebd9449c2a5e9371f10df111137cafd350890225f420ac2f315150292ad461f3aa6d687d4e17f5c99673e0936a76718c37b451e99d08a0dd5554d4901f9b018966c0a6d2376404c377340ec6bf3ae387fdfc1826effc9e4d69a720d03fc626063c75a5d73d8ec8e6fc1bed92e42015d3a3825b3e9d07006a429f5997f34acd7dc6b0dd688aaf464dc63080a7e30eb7963ca4159cdb0ef596eba5c3ed4fdec652fd7268f4d9b44ea227aaaec5969c4c04eb962195f6d8c21f471bd08a65b8e90f22f633a102168a2b81b8f536aedafbbc0e4cf4d3d96b9b03c35aeb9a2b379be44b6d996ac2550319516378535c497b9dee63bae0ad0d40d4de2909a9718112bc2deb0c6f55d50a184645c67323b8305378b97ff0fb3e1033ed5df5651de7d2ffb272016c3dcef58bcb8cc6282de15430c0418d76b5112bbfbea6e670d92de0926a8df59b115f193d17b85c2e60d9189efe0507598418620358feea11931eaceef2a0233e60edab4a94d0837b4dda617f7399146ec8509c664537b54d62fd18f810c0d56ed7955b23b17d2e46a4fd896c32b057b7d2dc38f975883d6d34d71b9bb969e022f3db6b79717fa3967ba34eceb8c3cd4249ea87026a3985bc50cb6bd832eb891587714fe7423ab396da51f6493ec8f4d681f85b15859d5e0f4ea271bfc9e3bab47d16cc01eab6fc4c3ad7067f12730717fa79d9afde746ee0b851c535dbfad1ac105f0bbf383f87bbafa93e1aa8d382dfcc25093357ef2f3fb783d63f36166a99615276b2818821d90879da3c3b94612428ce41d87ad3b892528af247bb3c751efbd61167e2a3d9b75e8503607eeb7a26fa5da333aa88089947c4b267c97283c1890fa82f0f6f17a90036a2248de3d0d45e33bf22fa7c7c97c0e58d903c662a651307e17e156e9ec2a65c2c3ee86c39a161ed6e686e1c08c5834a4ff5a71151ecdd0b6e0ed4fc9862ac36e3d6fe311284a896af6264082663bc28ec70360cfb1a1bacb145b9737a072930fa64b8fbecaf2143c76c7711f85183a139494fb60472cf258dc03b16f1c491174addfe86ab95730eb74e2a3e7c7edfd3fda52abba64b8bfa036f6d66c80e5ba13f088f1e10df6ee4135070fa9658682b26b2694878a3729b2ff64736c6592c972f1916ecf9e85ea3478680420ef434ef515036f77c7fb7d8fd48c2ef2a263af867ab1926e5f9a69fcc0b887ee2956dfcaa90f7f725a169eae6e147bca02a26cb662c4f39bef5d26c7e35f8e72eca54399242630ffa4f3b5257d3c36f04e955af2a54bbbc2bca24ae62bd83f9c9e6172755c7da5ad6a1b341ddd16e29dd24cffdfec3d3f789aa5a4e9ae55f1745234c73f5bf78f9720376e41ae37640ed7d33f31345d5523905d5b573eaa32550c75f79ed91e0449429709c4a76ea2ec7d3bcbae01c34b4a3361e950a32792f35b2892b7fb2913a348130e70851e27d39e7e6f77c7f719f2358bef62c7c0655f5c2f23cab68efde112b50772cc7865bea474e41ac109c4a3c5f82c803f5274daeb448c05ee2fab362c216e9708360dd9d5bef09d12253b64ea3e60082e1c91ca7e406ceb0a0527d39fd6669f67d294bed75c7c2a7942d0ab32d24f9a6898bace5f07fff679fb85d5400a7fc86285dea6bd89212eb309b70fb3d8eaea84f5ee91f80d69eb2ce8682c19a440b17af6cc165ce2543d6b64147b0698f81ca7f20aee793fe5a5b3c6516f53e7b8526892a0a751815f13226ce17ef7e5b985306cfeec3d8fa98e49be87f2a75d4542b9c4c748553b5f04a33ac891c6a9a66bd492c5545a1a6e448e60a6f5d7b442ef4e8dd1e77cebac3ad62503c55d36f0813ae3c45089129937ef263134fec21b7d31c6ad8806576637dd73621d3903fde6465016bbf8f844a1168a69be93761be16995322357ba75b44b512c2d2fdffb79fa0571eb942abc3d1ee85b2b7d7bd373683c9988bff03709ff65c2d72810f10e9b70a9c385bf72efecf4f3131a3e043d48a3280a4b13774bc23f72e10b7166af5ce347af57d11879c350ac92c9657715189ab984b471353f787d66172621f0677710f29cb5067b298bca337a8ffd99fbed2ce689916327670a70e1372d4a306b025c99be7c3dd611cffa6e1b50c43be860026df25771b3c3a53d8710937752ca9138dc5efc0799989187c565ff514d271b61adec50bf1375b38a8e0696dcc39a36d1946a10ab3f9c3fdff4b8ca1240395053340f8533ef14e68dc86328ece9e430e94f4f568f70a9ee2682c7c1025d086e7f0f3ed51419dd756435e2a090b3f636c1555b394f9cedfed3c460baf6af9a715900382107b2ce3a2085bcb08a6a61f4bef18116de067417bd0f7399cb78686096f9b61406be18680623e7d94aeaaf3cd4fb5b9838a9f5667435c0384628d2c5a0fdac05723bdd7c9c2ea201ce060c502004a15e851495f59290b4227b408f2e3e3df013661644d06b238c4e00649b97a3db060864e2e8fc199b5b7f13f33e65422dbdc535f3acf24a0f00415b56be823f3d157294c522949022ab78ae89328a981a57e22a22af774eb3d66571f70cf582c5134beb84b68935a4604f05db4a2e6388c4cf1f1c2df431603cc52e4575974cf256f545e39d43d386dd3a0b0365272a62861e18488228a3eb19fb1e95107f4222e74cb24530251aeac56b289b5b1214565e170332e2c5e5b3250b67a84135322799c4f284c7fcb197193960d56a5df88322cf2aa9bae75e99ca963882a156cdfd9a90fc52da2b638a483c97561f36e9823a0f2c2cc8f0bb1aee190eca150ab1421bb5bfbd2b83470058a582507d2efea5d3ea683019f91e73c80aef97f1898efca503be6e997954a3952a8bc8592e760dad1edf438b03f32a4dd9128d2846fdc73a0e602a0dc9fd792437d4d9204f13df74164a483e255c34fd4bf42b8a5c4e8ed7e6d6e78c0f3aa8ec726b256526776b739d0cdb5231a7012900e0dbb9074edd2ad8a76553a40c8b833bc5feeb1399f87291dd3c61e86d7877c992a1ff5e9b30d2739c9366d2d5f342a5551c24ef4ae00c60907abbf8ebd67812121fea52502543490e60c483ad6c36f591c674bf253f7a64dd1ebd66ddf04d5711141f39068443a3ad0da53f57dba494a1a59abd41284b79bfc70014c8b14e3d31b350d1ee994c5e65c0e7f085d5a1f2ac7c325ab196b7454c31477b4f1607a164f0f9b5d65161dfa4eed52044236f46ca157692b8884a3288b15f272ce85cf79342313cd7f1ea76dab573240541589ceb86662b7e06c1fa85c85f4c30b91dc681f6c637a88d403d01b701b638383dd5d82bf948af715c81f900b6d50961a1eb88fd321d88e7bacba7dbea9fafd19fc0751cd53980477a1a872d82610d46b8d3db52a8f9376575118a0ce5f804c5890af536e6db6ae29db1a17689fc9fe023a49cdc67c1c36ac0c8cf12240536911bd000c7abb178ce19c07f4c71cdd68d22234512593eb7d75de864013639264ea166e4cd121366cfdd92796750e3d3a0a63bdaa57dbdfcc5501086e414391c75629d790c300625fd28110407bb9449dad5ee30b9ef97a818e6e80ad159d44f93b5d7af40b2041d48d5ed2c5d6c0b28867b4d9b53a258397f6ef745b65869df70fc9ca0f15c0aff9d7f4ef97ea95f338846e156c7788f8921413b985f1a4b2367ce2dd3a26f961f559423047113820d58f8750db1b656084e664c101e32d7f203765089d8c9ca8e5f03a0d885429452049cad56393a1b339c554af02de11e46cda1c0f4418d7d9d4703cf54599c4ae07b540c5937577484df846d514b5a639319bbf5606fb5f8b720024c879fcf2fb005da4bf58efc7799c783a96fd76dcf61663ac1e7b00b73a552c1617ce41e8c55e745f1d346df09d0a1b78830a94abfef9a0e9a367833a959aa4b882d41ef94ed959e6811e3de739927b6144e992326291bfd5a4a157bfca4523ff7b587a80c56b35d342980b3b6a71995e420d3d2579a4b8c0136568eb69c1e613bbf7032c37ec84156f401f48e91edb16e91536880c376d503d64c5c979db148f90376049a41575f7afdeaf22d153a8ebec5e6ea00e37e0378120fe9c0d699ac6ab6e856842a4f0243e4658a426a1ff983ee36880546b20fd0a8d29fba587a9e35536c8ecb85448b1ca9ca94568fd2effd02d4efb6aa849d055be6b91a0e94e32252a56bea139c72abca8be1c86aceedb2e94d771c3a380dbeca14431020e88c6e89c58c7b9f8f417e30392d3b8d1268bd933c571d0a31eb2002aee48d3c6e89c03f4b6559656b6e3a661556b73817bee7cdfaabc9a222ff3e070e4ac10514bd8332d640bc6cc4a0b48e29eaeb181af0af03bee84e3cfb8eb5aac7b73407efe63a4b8684a9ca9e79f91c3ac2908ca8346c534ae91e65bf4220a09bba7fb813c5d960fa51644e9f168b71d75f4b44b275eea0c07174856b8f58ad14981dfbbd58b6b8ce577c5d14bfcef0492fbc1ba7b90b6117b256195d90ab6efc0b8867390232a2a3f17c49681ca9e5551351f40949aa45c7339a71a7d280a392fbf2bb36ccb94413fd42b6123cae1a1847bceb280cdb0a9e349a9f673022aec83b403d23fc01c13c94fe72d8b54baab49f021148e0c2873573ded606d6a9411f2c8fac99e783877e6158e2e270a2d11912401e12a56b8927d875f70c471d284eb23ff7f67009605a6552ef7c30191e67c26fc4d50e398a67bc538e805dbc9560836f1a1cddef38a4d03814e29111ad495ffdc25759e68b4e1ef2b4981ec93324edbb8077e9d66cbb5b35a7fec6fd63b86f4d46e96fef1ab17e537a68adcf9e8c941778fcf332596634869024726a0adae475270324d4898e53b1fa20ef73c8434f4b664e5955cb58fb67b59d6f628358ba6c50b1ca1bd5405caddf5282e59c998f5d5118bae65d3409d17476b82a685fc124cbea5cce9e12cdf6dcc25b37d9ebec845fb67795b9fe7e4d6a9b728da483763656706cbd36830de25e1c6c937477f9fda85a57ce7ffc0a4bcf7ca773cd769d581ec309ba4eed0a9ee9c8b6f09f3d17ed0a35ade77b66ac6078828b77276a421deb6bdb5c682ea6605f974014e821d3877298239189723f0ab81fa8494ff819e1af4cb13f8271cb89c0a83d18e200fdc118c15456f4a3a6366051c693bd1ea55764dce848409872e7a33b7ce7a753a291f08f34390f159f2d680bd054a3d47c159f55c90b62d06b761d63de9d69fb919c7c453b2dc42380d93afdb88583af8a1bd3e483941246e97d648369d76b8da7ed745cb0f8aa09612439c44eb041981d20806877b8f00a173331fd86efd661846eabf82195e10bf10dff3117dfdf104ac772712a50189e66ffa5d608a4c0d214a1de69f00a62d7d8d7c123671cd0c210ad3de898955af41ee392f4c1479b2e73d1cb6ca0f6eb65f49e55552f1c4ab9204cc6b6190dcd375f0e09b92b7cfe993ab01b8caf01582282fd1b5d6528bffe3e0fed981467594bed94f9d71f5aab1e0585d9eedcc42ef772a46ef879816d2fd810f3c39708536bcf6ddfad561b651cb2989322a26552f0c1997249c3318a3d553911d99f560aac4757fae1095bc38deb9f66f081d36ddde4e78a2993a7d99a682c7f51d1f7a4a0a89e2ccacb6e4538833ac65dc667060fb85d1d0881d3b41cf4a0c563e8bcaf84c3a5c2033cc19f2cc2334495d4e97ba320b159fc0e76de131320fdd6f43573cf7cfa8185037bcc25818a35bc8d111b2c11310fe2dae0373c3e1cc61644592e6a35c191235481e650b4c57c8dc91b86e86909036d96194f136c40b2336d36cc2561597eb2a546ddeb0b0028a6b45d322b633a78e065ffd73e8e6843f6e7fd26b217ff36905421108c239ba720626e2aceb97a92644dd859696624bb7c0bb60a8192a45af8c704dc2de0f9eba475698f434f97e7307b95a64725474dc87dea570a98b374a6fdb46c8e357b59a5bade7f93486369ddd69cad9555827c7e2a1950a16812841ee977b74d04c1a03d6f1f724cbd3f807f0853e6a131f8f7564e5df361bdc4e955be8b49e0a40bd633a780c4d1b78ca5121ffb9893831ccdccea8fa28c6a5ddfdb75b1dda446be70b6a3755f9ce416030c37b4a7bd01fcfea3f89535c4f1bf8dbef9d6805c4574b7c6060ade58156f68a2e3f47773586f8b7baa75a147eaa28d2b5826407c29cbf373f5245fda8e39197b78e1a6545661f13b95509d06f59bbd884487cc73ace22810c3361f707a78ffb62c1d795e2a4db6c1ac09987650099a06a40da647ec6a41bbb5e4a2195a9c4db0ef7a31c3a88f42c554bf94b1bb72940c27cdd9ee600d738dc7eb00b215210df9aa1eaa7590fd978a35cd0dfa082924e3cea5084b819968dd2b69ac2b915c758f51cef682f45a2eeadd6ad829b39043174741197378c8376a0ee2d0ceafa53ed437756a7749f19234b1de547a13cb46d8de6bdbfa725f69571c67812ac4dc8bcc08a26433133a7bb5e02d1b400f888f9d0bc43a5778c6c1ac5b56f67504b3560b85d9c2cf6d91a9cabfa90e1def706a7ebcc6c15069be4ea645791bc7d76c08f12d16bbc811399dfe1ad3746d393f1fe75a25a63bd34fcbcdff04e1f535b0d07a70c01f097bd2741476b33352abdf8e558460e8f450f98c50ada19b55220667caab3bb3107c2a83719a0ed9cff16c81f09e60f552098b1eb57e33314f5938040c444695698f6d37e11a18e6ecfad94b2732137fa063e58dfaa18d8a5309946fe64bb0e0c9e9f0410071f1a57d5eeafcfd53b24067e3458b2e31e2c79081bfdc4deb4526084a64693736d73c61423c708ad00a052966303cb6cf66a9a3fbb01f7b673487292379cad5fb5ca816c0145df671ebbc610253b74613d094088407f8cd5621673a4d37397298a40a9b1243a8469ded1160afa4eaebe7aaf7fb58aaf5d81a2461b242aa6b90f4ec2ba9a7f05135bae00e1d536b026ecff807d6a5aecea1759070f4bb220f96d0f707169c577b1cbfbd607e25261ff686a83c20f21da21729e87c02885dc809a6032bc4afe2b74de0145fd93e6a4354d3d67e35d6178f580827b9fd772c67afd4aa76bc29abf8165382c1815607d42ab9b48e102864dbeacc2f995a776dbc19c19bae808c2886f4d9b51ec4815e8d6cfd32c7deaf232b5eff50b049b836263c3163b6e0f0f8a72abb1f3d00093901740eed31f4495d78438e07603e93eaea681e709a5e7fdee0a30ed8f994689c3055ae83bfa839439b74991b9192768d251bb40cc052ed6b8b1b5bd2570e64ca49ed23b87e2706cf808b5d0c09b933ce07b45079fadd66c49b9e90f2fb877de6f47a9f2dd4db07593c9c5dd631d2e27671e56ae413c74a1933d51b65f79cc6c1d2f5e2a04c4ad1b1aa4c7013499886ba59ec96fb46cef98c9dc4116987daa4db301a77c99fa4b95647865b01ddfbde06e64e0e07a5c965c3b28217c2f27a74aeda5f906a39026c85466ab3c8f4322a404d1fd7fef5fa664e9b4eadef0483e80c165f150c364bd135f3223a02ca61ce354fe5deece9d98f3b8812364aa0166f06af4e39c8a9935385febfc4b9f769f6e49a15a7318776650f5673864ba89116793b8c211261b7e58fe775fa624a999f1462151047b2db373009250e2082074f00f0e099945f476105d4e7fb5fbc38a623c0371802f0bb4e1d63ffac2db44e2d628d41115bdfb6433d9c9bb30eb45ac19b0f012e3e5d9a39c4bc3ac489239cf9d952e0b8ad16d4839948e78eeb22444f82f3c15efb87ec856058b1df620e3507144f28ea2e52a93bb0775164ed46c4192ad60c39ccc9539802aecd5489899f8af1b82227982dbfa572ee4dd81ce4a4d9520e3779a98c71e0c46a6150d9671d70d1af34b8e0905c8ccfa0f950db1a4b569842624e2194322996f82a127585e5e371b26129c7a750f03ff0bb134b0e8219ae070d99c921e78d57555082dc61a816dab4a5e8a7c98e672cc2eb9c297a494693b02ca073eb29d8ee337d818da2284f6d20546c93598dbccb637d2c4a1d00c346d686d87ab80690f60d18f672b5ee85d2f934ff416a84b39678de9eafbd05220aed80ed3f08efe4ab4514ce81426e72fce75d76cac81d295a2dab9e4a11c983e87946a012ee48d6d4d3ec4cd6be4f386aca1fcd5a48ddf7819c4cea267a9228e2437fc9932a89dcc8fc74ad8b577ca4df61cb5808a9326eb94d6e68240e20c888942d3b03d8e1fef5f964800c2f8f1704f4d81e57838aeb2dc565c083ca1da3144df19b4ec8bd73245a5fae79897b9800f46b061ec6e470ac845ccaccc987cb8b811e4e9907697d717f2b55a30df2184c3ea4113a2586a35c56496945f7298f8a3167ed998ca5bf7ec1e1f68b49640b7150742f10155ba6d76e8d203789e075e39721878fa6912bbc0160684b1f723e13882819300cbb714de457d7042eb32988dfae65e5089eb5b5568233a5ec88299816cbfb7f0057be0a27e20ecdd6a7e5019cca47f1e10aa1d9970c8216e2e352ce4cb7437f391d0fa218a05ebf33d9fe01830430006f6131972be01f8b75e5a180e82b0424660891d75fc91b91d5da8c11e5831fbc771c8125d5564ce25ae634c1ea0acc5097713930b05ffa1fae3dc7129472e16601cf2a21a64287b4cd79f527a1c2f1bb4c100716b14fc9195fda89a41fd2a4438192c47dec05692540438f9dbda87f686d3f0002dc2e88b730276aa9bfdfb222153e1a29b24e9f8cd58e503bb4c0ac0fd457c443b66e9d893ef77f480aefa358218530c2797b69266aa2ca6964a24508d64131c848ec527615c2f758ffa4063e0a683cd86a4dabe420e0d8ea57d47783926ccbbbeaf87deb367d89d5775598091c6a2cbb807e6d94d93b2f776c23b7dd440bf123e68cbf98975c8dcb6ed8f611c2a911aceaa0446fd7ac4189b06ec8148eeb9ecae5e4e5d014998cef05bdc8adcd9c385b9eec10723022b6a617e045bc8ad09f73b876cfed4e0b0a788d675e445c36b02290578bc2d3f06bce8d47992765eee1fe0a4a7124efbb2b261b7acaa4c8da0cbde645b15b43e8cb17baca117bfe5e549671a0f97a9b6588fe1478df519fb86a60dbf5519a9177acbf86fbbffa3052a690f74cffbab65f99b261b77f09d3bff030c342c265ed4095c31caefbee2f00ba8f3b7f5d7c01cc7e77cde96af42f62f164d1acac598e02ccdad236431d00bc172f35304238df71e4bf04b0dd47272256730d07f27b5897255d6e765d38e4cf9bd4731e4a5ba78c74d631d7cb08fbbf72c10644db2326ddac5f8bf09a56876cfccc6070cb2e1bab77d9156c76979842e279f74db248957edded183713bc2e8265a0f3e643cb25458936b06105ce15b752d40f9836821adc5bdd119b13709072fc55349a27a735e48dd31dbe812bbb39204fd927451ea7b434005d60c701e7ae5e58f8a3b04c5e806eb95379455dd1a95a7e7605e531805ddfe8f578ec920247c6b88e63e1f7a5ccd3e4358363a1b006536893f5f8493cf20f939aec30ee71cebf9f3f4052373d3900b187cbbe70babecd0d0e71386e2e581f1c5b75ca4f0211dc8f593eef206930344a8e5ca0b1c15b17774b003fd59470afa541a174f957ed8ca9b73464209a59644b1423b4eadffac9bf232916030212f7d28fbca357f21a2fd8bd4ac1658aef8f5255ce4a3712c66b2bf72171ef09747fd5a99ef8a71ac7e49aafc088ccfc2ecada458996816a70a485fef79eb2b95029dac5f2d2eeefada4bb41193fd8c60003b06bd9c433efba0d8610f7fef50dfae14c93e07b384233189da8736bb4d5dee73f8a53766037a183e280aed2b7bd6db7af5b75c60b3b05fc0f29be0975331fcb5499032ebe1046193aaafbd7ffa5e294aee4f2ef04270ec019a0497365d8ff74a100d63e127be569d0750acc074657c6fcbf50ecd67153015f2a57fd5aee267124308882fb1d8fbfdbf861c3b51b981156166cff4e744d45a20ab4a7801f85ff426c5ae341a2e10a088ea3e26c9990a9cfc50487151a1f32c755bf54d8b4b3c5d598eead4875179f9216d9ba6860d6eb23a3e15797fa84a6a57aed0c321d5fc0b3a9dd28f6ceabc2077f591be2c414e2e8564f579549fe639c61915436e33865c869492edc2288a7017f8d05dba3bdb67d3c37440510837a41f96b91c6ea8e722ffe22565a3b0f796d2c6b3841c9acb7d19671ed0955e5e22b94a8a08272af66d75cd3fed165f3db27585c8653c707ae031b537242df073afa84282d1851f27b6bc09828c0475b8ef8dd7a8138f95a400628c8d6f5a6ee77b6469b26445e935bf1e99e7d6802fb595e509c2402caaf750b193c0177def8d439d845c1f68206f8ccb3735c2751d48c2845b5e9dbd6a4078d44c5706f182bb1bb6a8b133951d21792547f1e92f8e9ffdce6724c283c5a105afd858884c04ed6f266c68a7d48dbdaed356599d5fa93d02142b40189cee3661a3833b0ee810f18100995b754302cbbf3d2a3be5b1f88f655c23ba3988fd0f727f55f2e876c40f7de35b16fc1e966f54885485141c576e3cd49f00dd6e4bebcb10db3cf86d6745de7b67c4228a8270f7381b35f1912d224e22d3d08830da458886cd89e71e2a0dd86a3b6a93b8361a662f2c942d709a05c814e3b92dd94f1d0d96219bc9e0abf685f410c4233ef560fe98a1af8b97547dd5929c92a5cb79c5ecbfb6e04c69a6a966571240a982e628c9dde8fbbd6cb498b016165f190023bcf44c563b9d84df62c9bd0b680638cb89357b39cb4bbae71ec346563cc54f35bd7b251ad4f87c4c71680cfdf43be083b747515ef0e4014e29707c35eef31e7940f4df2954385e587d4d70ca53c3b3b216d342ca9a3e5695cb4049476d118f90b3ebf68d4013753d6a58ac9df4f362399a55db1446ab3a3b65e31955659b54bea3912cec539b89d287c52a060ec9f147d5a8f57a4988d3d400f023f006139030d6d479094b9eb22826206fc47dd72217ae7fa2d687f2ffc20daf7ca9d8022be228b2d36b8f55ee9ce79f2dd1cbc2d3c52bf41e97f7187a332d1ccc408a50597a2eaffa3011342864094048844155aa3ddcd116345fef132794d4a6d1e610606cd079614bd814cf6c823f1d00f5f7b75a625f30ef88eb52eb9bd6799e2872b9177238f08ba85e8b582e469105f56d29b11e2c52bc7cd416eb1520401c47fe4b7495a110210ea7fd8f35051ce4bf45d866f30f74276e7a4e047bb2fae77ea931ef29c52f561364dfededa7615c79dae29096bd56c78ff357eedbd891643fcf3dbdf66b94d8f9ae2e97232a7049d5a236e37bf748fc2580d8c6f16ddb0185887cc5ede144f921665506dd8c1f4a7091e6a842032aa7c68d331f0a78e237e3e6b6b4d396f51d244da79790bf70b3525ddee5f38eb5996141bb8d597b87dc982387c90d78a174d465bb1b20dd115494d482d5e2409d3fdaf62a8248e57fac478211e3c7abf63a4fb71eff028701ce250b9a2156ef96a4bdd0ef77459acb247aa4d511cad1ca17164faf85316468e7baa24d2e2e183fe4ad4c390eee0207ac39628062def4c1e80794058b3d20e4f5706d7fe5ed9734f5901a172a0275595b866fa6966737bb748836166662bd2eac193f95c835375141a90b92e2c6be2142fa7281a4022dc3ddc07be6d7a6b5f86df31539f5260c2393e91d8dbdf4636e789050b6d7ff308b4317f30bf586ae669a216eae0236dc990cf648365db65cb3f3b951733220c7524d9f69b1df7fe3f7ab294c93515780a8f496292b0fba6236f1d8f69db42e627363404fa94571fd96ba5c14bdb61c4d508e43d109b8790ed6b2a78af3ffa96ae973f4859307c4fad71679de424db31d532c4ea0a882c3e99a536b09def803c11bcbd7a3a6044f8944dc0a2e5b5fd014385511f5417c66806c38f8ce6006da1e317ca77c6ba6f34ade9bece5cc40ed93e49a14b5c41fd061820299f0dc13ea8333d54875983a746251be47470a35ddabdbbcb15a71f950a0dca3238e7e3268eeab03fdf1304970cb62675a0c631e711448d79ddf9b48a5ba606c0026a1fc5d6dd5b58f08c9463e39b07b4421703356b85cf35bffc28abf49825e7ee0201bc7cb69b6e924c03642178740c1b78ceb429c8f1b55f15579d9aaad148d3d9a8cd680ac812721df9350a92166df161acc0fd4c7c07073d5f7c31a4381fbecf12f2cd27db9ae2323327da95cbad7fa88240aea08dd55e9d7297cddbdd2859d7b56aec7286004fe6227c42deee9c68e8053c46fd44218627d37f74ae832ff8816d95e5b2e5d9f97487a5a722fe8b5cac21887cb14591824c2e80545a9bfba7b2a95065ddfc7bdb4a9510efdc37f22f6cd8cca83b22a5399fbe9298b659759fe3ecfe9dbeca8a1e37ed7580b4df77a1fdb5ce6f67a7bd9f91cb4ec9dc6aaacdecfb9e16928fcedce6bf1f0a100127b6b86bab21beec52824f6f6a57d8204a3b7e857e2f4dfc6fa84ab1a965352b60558708597e443c700df712816fcb202b7524e5f09c4ff19e2f91e5931c8d9101b94cd731e26c82d69743931a4caac81a0ffd90b72b5dbd56b6632899a7fd0f0cef682b9123670858df413b4e86f88efb0c2f6b25f55ffb3963fa8bfba2375d17f81d16bf1a6ad40a8b7ed0c32510bdf5492a55294ce3fc2e67670e9278607305736cba836cb03af8ac247f9bfc8f34c60d443be985c459ba3514d420b23dafaf9fbada3c32b48dd912cbd615e41732a87bd83d82c1625846d8f1cec0c5dea34480f76eb0356de5d8caa806cad2bc0c8380b640e8ab938246482a52a60bbc240c4af8f94891a077707bc80c579ecdf648c6e77e02d0e9c0d20e16d3b22b72f09bdcd7dffff190e51da7acfef92df36f52226d7c306809dc3eb6a47d5967c473ceb2e3c62940439356ccd329b3111d8af3046b0d196e0e950bd79b69f6f1b5f9e83480437c0d06db4394acb6da82b8f8e48b0279e5b25a2bdfe14cc0050506467630e12ce034f0949b04abd8100ab477af685f428c20281060f07dd75223d505c32fed011a73d388f23731c5cb36d3e138ca30303ea743d4ceccfdde318d2ff98323d1667117aacd0ed44d1af3a1b3b71d0de3855d9f68a0d8b80d925fb188781e02357b55a1acfdc1b06836a56ba1c6de32d397e89cf37a9ba8649185594f2cb0f1c33f20ee380c5bf8281a404eb8eaa2a93195a59db4d87a311e9a82218dfb846d878ee5dbaa3ada54030993dcf0580a9b9e08122ee16c8e0e805c7c5632d662580eab6442d926379ae2c938823fc4e706ce18ea4599d2fd8e9580c19eef4b822463e24c3abd63da43efe26f0a5efa2609c059573a868d95ef603c4e11626ac377ea1572b195c367faae79e2abb624d207a12d896ddedc50b4800ed21caa983b519c0550c226ca0b98f9bebd086082bc2b87c9b82c39b35154613cedbb01c8199dfdc95a67421f40000417bf5d48b7b0421b3aca95452a9d2fc320e1eeb65632b11e8077f81af63d35baa3fe09ca7532d64453c68d884d37463533172b4e4a2b3c86dc6eed7d4f044ef0d33506836265056988825e782619d0edf92b839c8b150640f562de3386dcd848cf3a5498a1bc85aba0a225cb27fcf94bf8fa8862d1c40225d7af52d0ac2860ecacde740c9a091067583372194cae4b29ff6b4550938be41bac050a8e96b24f195c20cc14a2fdf24f4b185f74092b6a8902d6e8a968acff9a25e67d98f35ff43efbccd1bff203ec3c9dce9c16faa05605c62a8482d00cacd05b168b4b70e5c65e9a25a474d62b73d9e461b4a0144a2e7f233060936354c36f1244e0a9e041257d42a1f3c9be41f1888538017e2b45398bc917b5f909be942614a5fb32c6babf86344c14265e0dea1aaa805ee8f0397c70bfad91d3748d14b16eb3ed05d226901b12c3e811675a88b87030046ed1d71009ab3a14dc9c3d1742a506582ddfae973839ae9df9b037361afb38371ef4fe41ecb8da7bef177c1fb2f0cffdee473d95469f5332d1833ff86ea13a0ac39d19ba2e5fae4b37cb0fe244583da965266ecac94b1a5f96dd22f8eaaea876341b0c23115c0ae7bf326178bc95ec362957f529aa0e8db5d63ea2bfe792b9d2c3c6a24c4dca9deb2af3e24d4d98d81aa91074eb40434b4cdfc8b6d027e8253da5ef2b264e14352ce48eee75c58fbb72ced15036d9bba6ea7490a4d38ec2df1b420f9ad8fbf078754f0d974ac22a3b34f6f62113071d0f9bff719c91d2381b3fc0d1e4e76ed1644ba65cc7e71c95af6f3d0b9a56d972f9d86ffdcfda97b7415e285a4375087f09ce59db4f2a8d198897e4722a3fccd925a0c56c2507325a38bc0435ecfcc645606c61d56c10409ce54eb3cb124108e3dc1aed908d995c243dcb11dfccd7ad89ee93f139743e35e271f2ffdb68b8d820d71a7b51d42fd5d5f1e4aa8b674b252475d6f0c5fdf80438a9a2a1b90acbfed9cbe0eb3076f2e089a9e6e20f4fd6b04c8bb23797277b956fd9b7b8e2710034584804fe244e212835572f29dda0edb595c30c550765754e6fbf34cc01a0cb854fbb5647929d5a50b41f7544f34bb6a1409e37e7ba2c6b98cce252a1d94649157ea5222a2beb400dcabb933271f9cc8277c42e74673747df786f5b014e248233ccd0a8036c2e70de1dfe380f9fd766844c4039725011fa6255a12acacec070b54d4c573185b690e3e084e26777c9a1f7b86ab4a064d7dc201837fe0f8770a56ad4edac0d4dc5789f59568fee2f026e9c5c5315929fa540bb3687340b7a6f61ebcce65000d798a7fec84933343c77a7bc4f9332aa888c9368a9c535412b69d07e4660e54ac3cfa23d169027f18421e5baf9b185cb40f4a6eccfe99086dc89e6f5657b00ce7daef61e90b42c0731876ce35324a84079f4bee395985f3c1b4eb77b523b73776d5a03a34e9e47fae4126eda87ea252865c9ff818218e275782c6f2359a7603c9e416fdfa5b35c598c6330f7eec844a0b7c48b9d86140bb9dbc9896cfce8fea34dfb4ea24d235099cd7f479199027204e6607779ef24857ea15bee9349b6bbc0368257ed1efe1cc8efb9798004aff3760a1d7b0931f88f12382791a21611fb3934482d65499be28aaaa610a5a28fbde3ecb5c9781b0a7b16ad8e4948060880238897b9ed14309dffce1c8313cd8fca94e7a388a8a275987d48ef8d0488a8ef7a91fa57905a267faeaad2cdb5515307f98f9fb3cc4a438a6e713cc78325d918a6aeb1868b5c79d790957b86b1b53ecfff66cf94defc30b6669c4339942320b15ee196aa69f87510a6b79082044341869979dc53c80bf65d7f1b75deecc74b9cc07ef54ff68ca7e9a9508f937e34b7ad768d0d6e744bb6f0092f0d71cc27d2c39033c91aec9b650a5cf7ca44525082262cdf594e905f665cf4b0ed7d577a2e8084a626a6ae6eaa4863fae8b667b1cc9649c35d3a9b199d83ff99ea6673870b1cb0df875392f008cb6da276b9cfdf26c3a991c4a5d90fe34e78fe5eff18a6e7a3f9037145fad3222097e17d49bdbb42074e359ce3e65185ed29a81a5bf004ca632a047dea9ee4be67bdb1586f13053e2273c6d225e3e1a173897810f30f0c3e07f6502ca354f852bc46371cd1835e8249b59825a008b1486cfdb832b627e19f35775ac959acdafc048627244686a28e4350cfd04d2c7d81c6c426f45a89b99b4d7ffd17ae516f3f692f92bfa3a1b3006ed8472ebcc8af2e820bc032a64b173faf1eaafdc093b7a993f8bc1986dc6472d06b21fdfe1443b3f750840190f569a1ae9b298252bd0beadd4e20621021a11a1e2f00b593ae0c2d42e802e392139ef06f21624aac7723c03646d81d5277b2816b6cf63fb61cf387981927a21e9bcd95245eb979cab855888a1e3a92df6ceff8c8eee76e46bb8b2e6e2ddfa61744d54bf24fb29c688d8f9cffe73f427be3bb735b64ce2d5c7adeb21e6842236c0e456120d798d593476f6c80b8c7e0369930466e095dcc0dbf27b65d08e7e6ea535d01e560a770b83417493a176a5937437ef5c7b6d8082baa43ac27cb08243b60883f90914c0a82931b1861b81bf32982bb48ee3c31cc142b5ff888ed36f3d8ba16d5d2d9e566f92844648f4eb9dc9780e677c5ad7a65325257e6f9e36d9e9e2aa15872a180368f90c27fda512ed3051967a57dd3e496c565d78d68bc9ebd36c80ad938ce3fb47a9ff2429bfd941bd9a6f547f48afbc494cd7802af5c72720f7897760b7e33de5ecab20e7bfa7467ab2d00032afe705ae285a7719e58b63629e28e5f0ca03fe9c6a44cbdaa1c044591e064d98cf3d9ce929a5bc00ac9f190569d0d96b024237ace23295f51d6fa822f17400a5a963fff0bba3fd532d43854fcc1f21adc353e562aa6a9f2b3edd0745b16fd8ac8c5a85b825bf7ccd01e285bda214b7f5f2b5380456c64cdf711b899164d4965750fc1b423b28152508fb37bb9ab2e656e9f484d2b7a98e3909f50e0d64f16bdbf94bf3dc0feb26e1d372db6eb5b217da776d507458efc7a25d722d31ef5f426a48b6a4902fc221f3db9f4af356528b129f05889e9716fa105e033ad0f402fb667b44e633fb175fd35df393649f8dc11566fa1746428cee96eb0ca96c3a13ca80a69305a87380e7e610453576f473e5777b5517911ff9f6323579589828713905c07f6e2dff42e50ca7e2909cdf93a459da56d820541df7b14fc31433e0ccc1f2ad841b166e7e1503a8bae899ef04454fcdd92836e5539750b3026e243314d23f45b88c564f50df460bad76df858bfc9c9566c8d7224d72fcdc749cbc712f2dd0c67cdd8927812ba2cb16478c0fd976b67b2c138f6b3b167e67a4a509d169ce8c0ab8db4ec6e7bf240568b003d3f2cf78da8c75cdf96a75defbb02d69e86161569696a6f45c5e38b79b7213814051d1658a138fe4b225f2366668365f3b5d7793a83671aadc7fc97923243cf643f4717377ca2f857ad7f4cdafeeb9569890f2156cca889686310869c049bc4e067ec1f1c07d15e4da07e4783ac1cc2eac136abb4e4505f097b0c27e445bd12ff8b90347beac76f11d797f6f65d30414dfd9996522c5be23be6391f9be7c1a7e3e20d52f58e52257cb8faa51600a58de562082e1bcaf3ccaf41d4624a31825c4ed05883554f77cd70ce3c8cd9f7fcca630c0d2f2d285c2171a0d5ddce4d4b1c8a72c810f5cd730f7318e6a5ce3b65f64c36490413b3e8dc28d3c3ba2970b73e47abbf20358ec07fd99b412aedb6b38499b74b0173faa746def18d6817b2c5b09b2cef25f0544501347329864bfad0faa82fe30a4d1f0526d7f48caea2a8b116ef8241cc060cfb4d83c7316172cab3b67705a49817b62d04a626cb324c70893765a221b4f118e318eea4123213335220521b30658a574b9d65ecf0d7426aad8d1c3e70412fc782db8f57d4e246899af553549ef2ff89badd53ccb2c88edcb0260a0d5f44eef5c6fb5eb1d92eb14831f7b44124187828181a8d55bd232ae443cc3bf643204c0569cf95ece0d4963e3290170028ceee003f8e29d14926b35ee422917c51b56946af5c57e661641901f9d7489c86ee26810d89a730439568d3058e000746a53fc30bac8a9500cb95544c7bcf8931c826d6ee495e19b553fcd0d963eba1d98efe08d77f28af03b18f268392c17c20c87e8c7c7573bea1a80c2c4315a0ada5d80516b133e7e75dea8f1569a3a20cdd839219243bf045214c14cc2c444de4153ade6686faf45421a01f3c17dabac9c95c0712590f2e1193d0f0e01ad3fba1bf418ac93ee977a90e1e342663bb49139c97c31d1e6eb58de7584298e3901891f4b64bd0e96d141ba87045614a18b935da440eb372f22f05b15b09316d628767ac33b6cf7f3e89cc2320927d122f70864d99cb5cbde5fd53c345aea576928055374514ae2c0da9cb3d43bd5970a1e71848c3bce0617cfe603939e4b486535c880fbcf12b242d189fb9cf640868119899df5e920c3607e761d9d14c5bfac8713abc090fe560c149d720664e7484c12693cbe9bc3291a979dc11a50ec52e6f272b32f515e749cf20f656d3a5c79f3f3ca6d1d71cffe57074dd1a31bc944261d2e47b6458d94b2fcd563516a9e61e6ef04ab9bd0507d5ad8a2b949c0007fb06bb96477437154f2691ecee258aee7931d0e066ccbd330489ba11d26762e9d1a84e9c789b7cff0fe266dfe83f859f2318ada05ea3ea40d89b33d3667f47797b577745c95c4e69b9842203cdf9347159396ead6549b8c7916a0dd521471390a1025acbd6eeb518b987ff5567c3008fe44674bde2c53fab6e17bf56850de37dc54df28aaa730113315adee9a12035a6d8c182b7673be058b4e86fe10465a56f9ccdea6761e77b9cb31fbf75831aebc76dbd92bf4058a4132851a91f97999b5119a42105f570d22a45784fc99177b7ecf97bf3b7fac21ccec30d99d4be06c3911e17bc13cd3a913c5d1a63e19b1bf325cfb1371e8efb8d9e557c82f47c4d994cdd4f6ffbf97cf8047ceac977f4803ba1cab59470e7b6f1f4ef37ac583f9655127a6235d3c9f4bcfd1b00133c18732e759848a3c2de035136fe2cf6493067e2503219434d5778a073aa8d4ef18f8f2e6d25767f46ff4b3f93da591791da36cf1605d204a312c79cd38befc3de92ccb74ccecf1123728fa08b24df92e55ff9a2e2db998be2cd143e577506fada512ccfaefe5dfda5fdd810e6380fad4c1f7ab1714d93037c5bf48f52e2009e427dac213668748c4d75c7e2e35acb26b34b018184d4ac242c88a3b0679570eacf1f4914d33864cb3163a6fe3f54928d07c3bc32e9396ce5162f8313cd42f1bbc1b107abf2ee2be46f97b5e8a3048537cb3df678fdd5adaf945a44c2244511a1fa9c1f2ccd634360cd92f8be0f58345ed018f07d730048ac5c193fb06f767cf3ecdcd428ebd3525758c564e629f4d247d209603c21aa2d125d5db01caaf808eac072e1e8ff62d46d96dd2682fd36a4a9f70c4e02c542b20e23ed7165652b28f3cb41971bee669ddcd23c0ff5875a74e9e8957511d862ec7a17973342d0dd851d962a168353bb826608476ac8e198238a1cac4ca9d1e0098d78bfc512f4c447791e0ff822b6ddec3bf703771e8fa4acee06f1d26210f9124508866dd7dd3a48a9480e6e1f936cdc4a70009fd1aede1224864a139fad2fe114726eb22f15dd1fddafc9c189c91e8a4ea62ce70325a682a3d3721d6dfe6cc492a921033cfb7822067921962593b23753515ee8ddc726e431935b75e4842d386883050e38cd51429ffb2c21ef4103922cb9adaf42aed8c92fc2e5a8688b849defc8b638aa1cbe2a314475b95b47764c5ba1eb0eb6abab64a895aec48d9f7446d10d31f0aa97477150f11e57ff9e4731466522ead3ae528b73efab44a43b674c909f1465f778f3868157a27fe2811303b0d3f2ffcc898755bc4e1f78d560c8e59a1e39ceb33116d53a580841f23dc0c4ca873db4200eeba966f182671c055721bb4a98007bb446e149d3b25277d733a84ca936c8f535a1c12f2d22dca4898ba569b6324474a476b75aca842dc104b7b8060e259cd2dbf2e192decb020688d1ae3176c953dfca9b0553e2c6f0e1bf1167184423019402b20dc24c63f3add7049bea4a2daa09721529f200e2b9f9959ba7831a614b8f2c34446d00c5d64c07fbbb0e1c4811572a6a39c79895aad49758a78bab2d0b7a80df78b8745c5da807e6a3e959fee35241d2229d1c7bf64b2105b7a5079bbc0a0d2b94e817a0ff5ffd00018927cf41acf042d538a1ecc20e6dd065331b265aa5da7f6a1f4832cf218a7ab75c7e0658a0897613be1dd7fea93d0fd17c0bc0750c69720fbc7aad161c5593976bd57ce110fd41b5565da0d7de9d1dfcfbb229440f1ecf943f276383d8098182af3fa072b66359a31037f80929190424efff2b3ebe4f42121801c56ed7459cb1bb331f66836237d67c99fefa9b3bfce5311c55bb9d53952394ec5ef8cb6ec9685e880b1626a24387fde9f5355c304558f29a90bcd07dece4fb69c1189bf44ab8cdba6484940777abdd42b1c18250b00a4a6def9afa22700acdc534eb50bfe66c81f5a582ba0b50dc5e811342af17dc180d5ff1227345c6caf1003bcf971b89f33ec131e1b42ebd41ec1fd191f88c200fc887ae463674c742dce98cff0f5a5a41955d0ea14e0ea5bd9da4f069752abfc8b82713044fa9afea572be2afd2cc3eb4f53fa087ff1327b46faec6adeda6a9686480ea7d01e0e6129eb9fe4f80a9a0a4217beb88c593967e1b18015db98334bd1a80757f12b6766de5c9506315695dc0e470cb7827ba1d41b014a0ef8381f022a3ebde1d470b6f8800924c65e5fc68d202d953e4b516924432564dc676b76bc1b967d5014d5295a5296ed3039b8327c04f858759661795755f2e62fe74f45f394ba19323f821d9567c5e2ce86ef2a0f2f153bfadf295ee5762987ce75948adf3c3dd3fd9dcbd2e5ad356d6a60dd58fd2739cb74e8b1a6f74f566c651456ffe03cae173cc722b509b292b3fc5010845c110553564a88e62c2fc49505c55c9f86dcf6d80cfd19d05ce5df66ea7d50cda4686b76cd808733868ad321643491a364a825edfe63a124ed923d432f1bb721e647c0a31a5388095d9d36133505e82d015643f58d2db79035b0cb1a356a2bad763866756dceba71dae9004b5013d7a1aa9d4aa4df71cd3994f52e323cbac91c2a63c8853ccf5dcb20702dce7fca7457eb10091cfdb5acdf828f29b7211becdbdc9bda2a5d2363eb867b131aa8922e9cf902329fe0294c46601b583f014eca02ad9393cb6b27b2fea4f64d45467a58e51d04f05c23e8e206afded1440e8370cb7f404f9c7e263fd9850b9f53f5f47c95930be086c2092c7389eafdc16c22acba89d0c722dfd85623a05814631648d307e012d73b5fcbd31e4fa6e58d08fae8adfc194ae606506c55228004dab879c4189b0947e9e2bdb076088fcb47f993f719dc3240314cc4bdc54d54935d1245167dfa0f72714c5510d0bd6176da0ca6e9b4a0861912004b2d5498a5aa30c53d49bea71bc0b179849231ed8bf69f1dcd91fec137ab582b945334fcd964d74d9de636b5608c8a191ae337b834beee0cd0f2751a991fe69bd732044c39bb674efaf7710d67aecc49e5d00cce1477ee6cb925d5661c2bc41c4caa0ee25a96c1d4eae1cd3f40af62318267208f0d07821a3c89fba364aa74f1e7bf1fecc9b776b514f372cb5d2604f4e7c801bd3784b12b8d672581d509e93a5b66d4b41dbf1895362191ab4df0c8e76a2bda266ef78cefa008dbc87161fe0dc3586e72c66b114824fb2417b160e944b4a2bfe0be25081cde37bc8b56ac85ad235c6c420232acc75d4d061413fd6878f1e68f2feaf3a064d93581ebd7e644bfc22dee225e4c809178b1896dcc9ebc843c566c6db5d202f26c9418eaff5852f6461d95f850754e3885a4f09725e54d43ec3e9ac7a96edb05a02caa8f0ebdb69f56c4e3193a588f08f29e1274068b76def3bb182d45514c96f4de5144c28305427579c10a60c023ccb3ceeb0eecb2190d5e72ae5ced480c521043af14a13da45c1122aa9c54b0194457a67a60dd059df86ab603322344bdc29c09764647710f2731087e27aaa36ca11335e2a33d19fe76400b985a9d4a3897d8457162f676fe3732733184f9ed4b512186a067df8ed66a28451e5877f467d5171f8555458c6fb2dcae1ef9c6679c235779b74effe8c8c516959e2fe539be1b1fe20c3ebec3cae7ba403402f802d068e39bc49c4acd32917576eda0f9145a1843d6058a26f5ed873fe3ab195beb122564141dc592d384a373d3935ba0751add0225d520f2611088f5cda0d06dc27ebae06eb99d905f1ae7995181e3ed9bb6ac76fdd8abc5f5e3f1d93e5ec6d8c4379d9bfd5e5845705a3ccdad7e99e42e0c9a53d03929ca711299a492efc609f59592c5571e8df30f90565ba94f74add05c24ad712cf66ff418f952ece86f3790b1527092752d7c5adff3863ecaae05ee172d1cacc8c467a90e4604e825bb7e674085794e29ac891119306c27af4cb88a63223ec88ef2aaae715122c98eb20e6072ee7cc753b350024a548b27647a1acb2858471b22b158a74de03d6a9bfc0bddd77bdd9e2ddb81d899cc57757f50d98a96c780d5e9e8f6407082aac75deedaf202603525eeddf67e6ca84c424194ddb3e3f9cab8a77ffeb3c0a3756310997dca7cf72c91bb8be4fb650a4c62faf62dcc94a32f508b255e70457ea36ae570fdfa7b62d23424cb536febd71723005cfaf5aaa0a4d1ac624192eba7f6150e44a961b1a78ae80311d43ebbaa4560c79d090c3dd846c557e6d5661689d90a888e058e813cebbc1d9b625a132769b85d47096fb2211b32a3e08fd094b15f7ddc8877ee2f50ad2895036faa9f56028b2a58a75eb33b9a1cb9c3157baa222889b92b552092f31a7f5a888b39f812f4d07d052d0633e19264124e3fcd7ef91e085fed43a16061469e9438b1c861f08c8a528f2b94ddcb48b2336f46b00ae0cf4cab00d15f8b55165e7d6c876eea8a98e6fe745115320de5160bb9e7e6581d1d26785ba3039a4058f366fdb8156a30310a13f7a2d992acf90170562ee56131704b6bb44105ba13be9de35d3293a30b679ebaa98bdf307910af4b6c33c2723ac518678b7de1dd9f4f446282bf67490d7643fbc553d737b9cd562164be8c3e4c2e8cbeaa1e10c0217febf5ab7e727e76cb4ba10b92c37dbb8f21b65cecd74ff6f204ca593827cfd2b6954f34d51b6df2f0fef97ede7a9b1cfdd4e15279cd75e9dfbf1aba0b29c690d6bb98fd3f446677829e5a6e0648397bfb0ffd72a30e0bc63c4c474afb510216fd782305a8793ef5fe6acdd1533717c90075271112eebe9d7d9cff7f75458e711d73c9dde78be6c428187c7a8da11db2c2fd68e1e5bfc9f5f16fa4bd9fa28f4475cc470f947727ff932dcb11950c2a986afc861147e7b42f693bb61d38acd72f4e8fca23922d217836e9339daa0a1f22122524fba7a171a6f31093e81240cf201d63623ab1834d2d26c4a5d8f752d07e24990f605c1cd4bc934ea0cc67ae260016b756ceed971ece4be2f41ab03dd32ed53088eb58c2baaf1586e595bf468db4214a927cea99db08e936c16c8c0e25d42c6cf5584237337934827ae5f84ebdbe2bc00552c34b7380db6fc15d25adfe5e4ab84ae79c4d77c2c260816af058549030f0db5a18fe0c71fec7c1fb2cafc64ffe08a3eb3e3ad22d9d768cd77d0588a39f801429c1f77a8b6c0cd315b80c982ebec4af2e4e717fa489bbda5e3f8fc8bd19b6bf5d25865ea7c187c5a235f628f1e0287e1618ee1960a9f2a8d5f5704f158138b809c6107b2be1fefd3037a8232903fa90177aaa98ad6c3f335d5dbada21ed2b1fbc0faa0f48feb517d1dd662c43ed6b647be6d7d6608d79f507054cfe2018db422104a223bad476ef6a431ffa49118abfb64386d7287a9190607101a2aa6afe2a8e272aad5e702d8202bdab1264f7f90a9964ce1891f2503d609ba52cd810da3b8417be6db1c5a0616f1e44d829e5fc0768c1143992b06f39a40a2af4b3def7f8b4356af83f6cd6bf778fd102045265963ed5f5ce24ffcff88b480e9131613c614b74fb824384cbd8f3d3b109d229b624384ff3e30975bd0359d47627e0e49a7561fb448103ad01e683a2d3b172fafa3134d7649e137ebc6146c2cac2931d0800dc7c682a4b39fd8aff7e4c9e9a330a06f832bcada398e6627c5c301648ae5804784ed57867ab2b6e7d9b9279b4b491a672f4e12df21e55710fd9dfa08826d12c49b36b234fb0f25c087e740629edcd8c0d2c0a23caa1e149c72bfa9413437d4d53aaaf9d5fe4dda64e98d6e65dd00f3f5e92ce73beb36be59616c8eb5df71d52584975f82caf2d9a13a21bf077f3bd86967b427a0f295b17d8ff9686b4791dba6d3be771b8b3944e2d71654dcd5ddb9e538ddc800a1247ac1d3711019da14e887c0d04c01661929369d8683a3b47b872832b22559333d3844aae40e14a1eee8ba79fc559cc18e090d70be233279bb1239914f363017b0e2c033314d41ba839f98ce9bbe726d9c108b0197f6def83ca6aa1a1180d8cf250ab22a3fcb87cb84feec6250286ebe68add6704701f23d4bc5143ec6859fa1843b023504d4576a29d6e2c55a594c9d23fe5c518bbd30516b48294fcad2735e763d692995e95dddca309ffcf27ed487864dc5e8995d5b09af93d47fa5929a84f0097ba2159baa0a444c9e83fa9204ff19d47899832a927f89ab0eab5953e441440101c24d019c267a7c5a15feaadd2397f791bbbf6e3d129b3dd3032d9d162aabff28ca2543203157e75e037fdf059b0f27de0fe4e9e588d7bfdae3def75fb547a29c753e0170c84dd078cac4129bea1760c6ceaab682a7b30c509e76157339b53bfbb04ea30c47067c672a955aeea9ce18482d1d0b0657e788071eb74f75683260931b20efd0fa0e9be5025c328ed9716ee93380c4312376729ed8f70cacd5404d90c8bef17c38409054a5cc69888f4ed1fe2e386c45dc7f044ab4138e789d41acd11b8a6ebfb058f13e5aa5fce52563750e1bf553548cc5ce28d2436649a60b7a8a5ec28f583957d2500047c10f08450b835da3be192e41b992dfb00ffb6ff658cb067a518867278cf3f37d48d666ebde76ee980935ef2496948be363a40e860374c74fec86aa138dd5096112b85eb3339c072598206b9b4ad81d017efcf5f97db61513896268fc38bfba12c15681f7fb10643df4d4fb8b207acb7a0ce9060eb2816460e8878d90b184a5d659a4444981ec6784fdfff907ba1fc45f7c42c858d5d08175b91749cd9016a2ae62ca6585b4a3b78ce6a4c9581dc7720c8e8bfae48a6cfb8eea3746cd00447c89ee7aeaad458fd38dffa53695513e00c6b7665538f8fcdc31f3ac97aedc7b5367cf405d6cd3d932337423c7af1675e2816cad6c056c05ccb1fd5350e6a316f773760c5954c448fb99a52ccfacf541199f8836f398dfe7b12b23a2aa8a13f10f4b0ab5479c34b55f833bc06339ca6174ae43ff44e58fea96a068ae7c492002b03a8cdcfba4d73811b6927577a491d5e7dcc01e3a28ebac795ca1c66f7a879d4e51430ac7688ac364bbe2661c0eae24137d1640c6adae6f09473546bd62e7808e0ac8e6e6076c5a463037442dc3f2982ede1920b4af13229ae3ea447652c08d865312725e0b8d33fe570e024409d1b401b823a0d9721bef503b9c76571f6122bfca8c36779a1655b062a86f1af57ddaad30eccac62945e48a495ac0deab0d43530b34b8adf7c26643447fb7a94a68fe405e8f916724d054c4b481b6da1b230a1962ad4fd2f55e65e766f957329350ef0f8fabec5e7b2696fa54d15628b37729338b278466cb64ff225776eefbf2591c4f298b397b223f6e3858858d4b9be98e20ebf606a676b778fbb49288d53d7184897570b1b0d41b882f5bbc61ae9ae532ec1f65dfe4426b026d8dc4c61c10e439a08a5655303b5c042403a55735518f86e47209b9804ceaf74a72f8cfabd5a2b5c5d471241de82d73348c74596506ad232cd6d78f872d81bd3428eedc3f57e00d5d43ac66aa16e49e3f1d809b09d27d33619ac2e28a9e44af8ffa525051ec844607c71944036e709261de27902e6c4c7ac17204a0eab5566f0c526f6c2113fe02cd170296eaf73cfaf9afce6cc894264eb61864e82593f2263efb7fdbefee33f095a7b3d50fc6523c6c0ceaee4a9e388e0e2fc366faac8ce0c0a1b48ea1c6fcaab3a1de7a735f70462f984ace32805986c1b0c6485bec6997f88825fb8298c21808785049e017693ffa35d35925022edaa6f4f0c1c4cd56d5041d0bfc952e5c6aa8ffd99db2b4bb1b503dfdcce9a13da3968b420ca2d09d96a4a0931dc7f7753fae22ed125e281df98f87ca40649477fe762b1f1ecb9061ffa2f4e07eb35f66b7e5b1718e4e35f8478985a8b482a29da6158b3dcb9b4fe1870e6abd933fef17e4eb955376205cc81e77e15253b4514eb9e85e205b3fdda93cb52cc2c100bdcd3aa3ee165ccffff033629a805009b57855a362fbdbf1b281d1a9f8366f16dbecce776b48c04ce7cc40657903cf19f1318659c48ee39244943fa51ff8ae3f07fe58d21a0ca234dc1ea01443cbd156caa19807751d85f925136fa415c5efb250856111c2d6496812b89c8c733f24a32cd94590076b8324ca70e1ac9bc11d22915e8bca875672055fcc42996083599c12db94ae086e5d2a87b2b1c4585323491c0a2b90cdca995f33adfea2bf76887b272f58c6b694e05a150175ee69b098054f43875e5d5a25c7c75fdf5ae7c25c99a53bbd1d1760d9014debdde6839cee8331d7366ac595912f8d31ae26d9dce0e9819efd7db74e208c0f338591a28aa34773f820e60bc69a86e9880606161d082d0ed8c66046950640813277af0d1796f6955b4f639ec7ee5c560a105a52feed58253e238970c69be1600f1d3886d9f3239e498caf1c27a9a310af9c74db668da3659ad0c66c9b8c47f293bccdc0cf3a58913140da4130ff70d8e6c51d71793b9f28fbd065fe77cc2b900c5d1ca35e5418642f30aeae1335fa430a95ff7985932c7f4fda14ad02a0ea61edbcd43c02cb10d60cc623b0b38cf9b0a2710d956cd44d79aab5ab98190ddecb1214e0eb4d41619488edd2415142f55f1255151fbf3517acb7d55af6ca57adfedec3c11d900526511722920e86c0d5eed9c67c4b5e812bd972bca10dbf64a5018d9137a57e0f2b36e2e9543a68233ffa01332576aabf415d2818f596e6f6100ff6fe42035f6d826ef2c51506b3d9b3326d66d0f87d56280fa3b422db5ad127001ad76536c107c0a480e73a3bf58c19da2bee86cb7611619f7ed50684c9b8e37a415023944d83babc950c06a7bfb39c668eb965e7fb5b0a6f987a5b36f8b74d5b66891c421e1686ee8f39e4ed9ee9e8337ae094ad812a292a7a44c53ca24444d6585688fe9aed13d7da8ebc953f8477d19f09c956dcbafa90830d6bef67565690599ea31c68482d6995e0c91ce9c227e64d6599f7366a0d6faa1eac0f0d7fb255a578a60a8973f49f90bc96003c2f0ce7b98429009333f306f546d90f49d52a4bb0d2100cab7840f9bc29aab88ecb6af3cef68257203307e48bcbbbd87dc2388de65290c389df6bf8147ddb2482cee8e0fed6aec34835efaa839e3a3cee49f246d0d6adbb54e9d1f1d32f83c4ce077d0b4d7177e5e60f15059f8487063083f9d8d405dc1c713dbddd459daf09d39003d2ccab4e0b7a668a113588137f734eda4f6bab234868ce6324b3c51c0965c73c2eef463e419a338a51a832bcc8c9cbc7f457344d6ecc240aeb9bb25c28b3534fb103bf38f283042a9451e8ecf48d3ca30a272a9551f9b2ece5a90f142ea13a7851fd3775c27ccbcb9986e7e297603cb049d35dbf4e91898b0e5b40b4d2787b1748b7d0cea7f40897d147816ca1da690b6340e3ba4c304854fce940426851a22f3cb93585219651d9df4df6ef7cf1bb1a030265d1d57dec0bcb53c6da999be34598e75a2a36f7e24416b0660599f62abb2e83968ed59a9e17e71a43e31358aef31520e7a3b95d0af5ea1eac60ff379a7014621387d9f4b6078983627a206737289dcb75b56956ccf963954e3c3fc2444b71742b4935ff14ea491d8f85e9697fda1f879c9ccd07e8a0574b0eb6af2a75a70509b92e45093c54c1556abce0c052ccee328c536bef07345e75e4e91d38446fcbbab964931749477e40eac2b185f5d24185fef717392a461b3370d54836fb4ed8cebdb5b0c6908866912398e711704036b559d43818e20a5369428b0f43b8ed8c8fc5009cdfe3d480f87bba3a2888930c9e1eb6fbbd928ef4db19b053ccac49b69ccc0443f41be5da72a5f85ab4c6c9d65ed41312cc24effbd299bd99b5dec2d02afeb501d383fc85b9f0c2d5182ce14d6faeec10628b57374c85afdf452c3d975beb4cca0e5671c7f99c64006735d795827186be76dbb1dd3893a67cd19131ddf62e29d4298501f950af32aa718254b31fb4ee36f942c26fc498dbef92862ea1372c04b7e5e41a6750ea8fa31516b6ba19ffec57795e38e31c005af01286b5f46f495b2562adff9d4428b12c844aa2691028fe713448389f586d1c3625099f07cb81b92d013f7a7af231a94978c7eff3959ae0be3628f9e984d939376316debc24492ef57f752ca4b8a00212557e6b75fca822afe92e805024dc04ba28e9d708e7a6d1a7a5b4a9879f5f710f441837f0574bfd1e919042ce26b7988f0c8744893c88ff8e5a7d50e77de8a35ecc269a64224be1c16c58b48d7794fa79255238762a6f2a0293a7a0ed13d7d349f5af99c8d5e249dfa26b20cc03c0dbf849103a6048d4a830be532a73cd94eb8f0ec05d1c65b1d4c9bb106f21c5c2c635ade9f1dd9a2446a0bfd1f2373948f6888b2d97b142efc6b150a17c67433db3ccd423b2e3e40544c4756f07b6b6ac94bb4fe6f0323558c9426f096adc4b4ef5647bb099cdc934ccf748acf706c45ff0bb0e2f85e1a2ac1c59619cb58bdeaf6c68e305e9e646b54ae57632359bbbb9a666315f677b4fac4e35787c1bcbc68de625fc54e6a59dfc52e9141349ce91a4ed86b23cebd47033a490016197eb0f8d3b50993de32215cac288e6e1d057f20b08719aeaf4f1140b2f37bce31b169c541f5c4157878ec939ad4193eee4ab45fb8a7c279beb50d44d5c24d863bebc2a78e58d6f38053be0e2398932ed5cc294c9e00c7cf88dcf51f6a76241425751002aee1319918e2ad85e5057b38684b60d339418e365d04c9567f0c41c8a76978352b8c80a4308f637969ca7558d9fc0a1feb2d24ae6dbe58dbe1faddb4684b8b8ac29cfa9fd89aef14a52926c61528da91d00dedc548e633802d67f96b258bbb856d025ff2ca36b63003ec7094f04cecadccf55d7eece2f7a353be6e50ae4e635127ad3964a958038099b476343954e1f9e501962eb69528e59398530262c71131330701e5e9693c1c34e8b1d75b4d2da04ebfcdec453b9da887bb243b67687e060f9d3e6141e88b2e1758b281f7811340c990957f5bde3c2d565a776434f9dfb92c2da5e95e24baf039ea92ce2b925b0680c393df799537e973f75387cee1f485540a65cd1f5e6d8ad14db8c030acb330f7006249e1c72dba3ab552a534161989c010fa0f7dd1026d27dec8445ccecae27dd10c1d2d38aeab29a50e58a0374dcde56d1973a9f549dd11ffc3987652c6bdd350ded4f299c8912d19a681663efb73faf1c42ada209cc916a1fb139428655e224eb05588bbf5d8873d59425ec2491c93549a420714515b2d6ca10c6c488b0dbe5d55e1ccaa80110a649e95870333a528ff583a1267d6fd906557da2b67ad01cac61b20324ac1acba9e46557f499ce63108756b4c0961ce9ea9e5222f9ae6fd1eb30aa97ef1596a27c79655f39fc189c4f3c1422687db80c647a1ecb116a937f9d75e50074611ee47d51531e6e37363f1ba1bd6201f42687ff6b8392dae3a05accd4c1b85ff9349494ca9246dc785d8c59d50330c089e109dcba13448172e83d06dc83a645ad808ebfb10c38b60c5fa83f883082547dfd11f18cefb2b19bc63efc89abd251043e156f5395902fa46125d492d465eb8caaec6770e40041ab400bc51607f4be3b63503c198fc0b55e198c429c8bb4e778107a8f363c5a8069dd9d36d2b84cba08f3c6fe37ee471d0025423a64cadd085bcace782954106308d043dc4eb36d8f89a6e906cec61e80f1521134dc4ce6368d9f8cd20f076333fc625b8ef0f95616bcca93f782d06aa3393162b40f6491b80624a3651ba90b8467b90f6f8b9edce35ddfb779f1fc01d78ad59f4718029bdfc71326eb2285286eb73320319234bd6f8d8969a64582537ba59e4e0c0dac9063dc9aa0fa99d4fbc7db78b26559de3aefbe33ab50b750115bac505e23d9e1a26bf29448cfc858f4f9018d2214b21a171381f1f0c1d7687888b7464af8066b7f8b6631d4352ea2634ab734ad6ebebf6571bf14217227d6bb877741c2ce132b16c74b04483f1ef37d459f5382aab89ecd0f838cf2f981bbc47eb914a53d02ae08559227a4ea5351c39354916715366a401db65c6fc19809ab56c82d1038325d874a2ccab320bc50cd72af8ae8e364f586575531099bf16437fdb1535b26a3d850d6270f2a209cd7465278f4d95443d809b941250778b0b1c2254f75e2779a6a1075436bc0717ea96c833b1e32de60beb9e7174109093139313ddebfd4f378c929596eafb8174b7df43c57ae36596ae22f7be487176aad168687f65e5a3da97cad5fe08016bd899214a834f70d3fa0396330bac94dd3c65ad0ef59987f6fa21608cd05ec293916c7815e23e5d6fa4c35186be3ddc7f36c36f36bfc27691f53378b7f5ee28c2746dc2a40f24e51bc902971231ac4c71fc32a67b762155cfc87e6ed25573930cdf11839f93ae54d58c01d5f232861c11173f93fe16f914e25e5b5b83c7d97f9aafbe2e11ddddaeed863dac8a7136ecaa26ce2f498ce47fc994af14b24c67715ee334881a476217434a165e81d21269c61d46637128dc561cedeee3c890d55610e6ef584dc52447e076af79f8a7de95b41b0164d2bdf3571d65fcad970670853f3eb0de6a588a659f608faa859072cbb78b866becbedb0717f2dc8df8f95fae10294666ef723010b22704322703aa0fe704e376980a6228eb1db71a698062d72e9d41e4fdcadaa3db45b5f9916e34bd7ff47cb96105cbeba09fe2368f6123db687e8428aa09f0ded8c4186a4b7f8e401eb3486a6ea00bd02a5b9a0d4aef53fd717c50101f9daaab0b473438e4a9a69ae02dd3ec80c56b608eb23cadceaf7f77a68ec48f31cdaa9192ed2ce94bf954008e58048379b0c9c41913e1a0823fef6b76ae4b993ff3fd4e89e5b8a044e83db1efb223d445877eac1cd65e9d7388b8a059aaa713d89181d7fc58ce629af034b7b5ff0ca0a0e57a0269e4e0fa4774f5cb5b45682abd861f10d681d56ddc85d2749704283cac3baafbee9f3bb17a0b812297c2dc5e9dff0f94edb1384e344b7130842f289b2c02ac94070090774d7c57ca4d7853bc4691828c1fdca86b52d1c820e7f19d6c74fa6475106b902c6a2fd0891e06b4cf2c2ade47dbe21d65792cd85895dba065ae726a922a796a8b12bd03d07ceba62d96cb2c5f22fd81358826f958d7bbf76785dc5b47e3a0b235666c05c659e2e5beec5f71c06e6ae4ce9b79022fc04811372797207635ba8aa42c530bf19d77ba3f54ae6bff8aeb7e21f7ab61186914a92c1801412b00c6fb14b1fa3da461593f6930540d223f5e9d35d0a7522d0951e0bb21c3987a24d8d0a9c7c779a14ba629f1d27e7a0e14991ed3e6f4e94400a3d560aa9881d592d15b16a68b4e3fdb5322e68d48fdd152f232b6bda6c7e6de455604e8e3d9e1ac6c57a81e3094f0ff003ed4fbf2622776245d8a8ceb80103a4ead3c23123d088e6c4934e55c81166df44feb5ecd35aae56fb5fdd4993b64a2c65440d1dd7c7e35a236c402c711aea4f35cc400bc9e57ed8e4cd72c455e482b4918d677829ebd6c9026787cedf969c234bdfb710722bbcb1154e4b0b26dbead2710ecd8cebc7cf4960afaab8be4fa125d420d0f768430240d320f1d2dc64ed2c18200148bdda7f4dc7d99d137c4c081a90fdab530016ceaa5ba5fa3f3748383a40391bf02c6a5da50e01fd10232a79cad57932565ee5e47baf0f7f06b792b651700b6ce72a7bc8874e60ed44a91a68295b5e19ba9e664a884297356c0486885c43d8ec01e6709a9dfa0b1a5572edb42e9f4f1cf38a3a4fed52a763c16b5c0e11d009fb476d424cefed4c14275b2d4857c70ebbfec2e713e14f8142193d62f4f073aefaed1e69f6584898a75fb9d67428ddcac0ee273d81d57712aad6da4ec3985e61e4cec1e05f16b6103f4df98cac4feb2e853faabfb38879464696f325ecbcbb99b03c55a440ec3cc6455bf08640d77351aebe4f79143ab70621ac2936fb1e0376be1b90b7faf7a5bb1512a318ef9539eafc94c21a410a4a7e218a0d7b868a129dcedf6e09fad3d1f567146ca4224ca41311803a5564afcc1605722824e365d0ad8c5f34f2de9e73f225e2fc798efcb3b1c0e6cf6d6f31eb85accf2f31dd32b4e06af25c87a445082319567a8a19216d8b6433722c4402ff738c35c54447ee60f18464b76351d4a57f9a9bb585ac758d4d8a5bc4b17a3e50f59502f8241a3bad85000e74593a97975800957493cfd061f46d695648ab72d03f0775c604397a7fe4de92ab0de61a93862a4640426f4798d7cc6dd6fda562b7c39eb948740f36f5737c7583e6a19599e95e0585d8891827b99a5fafff75ed85f35142ae9d0fcc7908119874295a051ee2d8fa0ca5a68d43589203551525e236f37a06970bc80f7119f89167f9408685b686cc386976f1a8508d8eb0d9816e595b5c3673d963d4c6fd9a53b3a33079aab4d80dc4fd4f80296057c32ff1417f0132b31e4f503f52ce162067e71224915523cf9922d5219c5b24cf6751f4dfb8446204cc235ac5cfbefd5ec2f47d6b406000e9ccfa96a3db2092120b9caedb7309465fb6fce51af4b0cf5262c896e050678aa04222ef47bff5708ff8846b903a0cbdd428d4b93e495c18d6d51864ef5f8a5e422b20ca2063553c390f4732364dc79172527e0fab25896a015afd6de8ad62ac6babf70139e10885b024bd41d4b3426a37fd6a06f72dd2625e28e10b83beef63b120f4eca5fe20de4f73f2a325b5f22bc6e86545cb77585153644ee7437049f356307bff0b06e5b749ae61438ffd7e05956f1b3ab362652055742d2bde85864b420fcb90baa2a9ef270096fbccc3d86778710e2010a216396a6fc8ddfcf0590d10a36b11166ae103e93eeab47a6e644df65c88b776ae5ea54dc28350eeb0facb875594b5518412003f0f2e3a4d07354a89ecebd62fa2fa92bec98391a8ae7d8d8ab4b695c95b49198e3c947e61d81b2c09daa6cadc2a80349b7bf2193fa6b8b2475d5c2162ae437d243932286f0070af53d4c01d55a6926009bf2423bf785b07e18ed5ae095ded7263ad2b777eca79f00f73a6623fe9e1db15c79658f0ba15d1307385b2ff4772909e2ee347907ee3376cd60c2897757d668478c142339eb7bc13b4ca27c37fb0e48a86d86fc77c87b2fbd296d345fead4155c733b77bb1f9145283bec6dc45e59fbeeaebc4931b534357fcef469e3e0e9e8779831e39b84ddd4de4979b0b35d26013c05eb61a3a99ae6ec2921f6b59abba42d0f8ef873c7a7cfa338ebbf913dbe5f9247ebed3a1c9be13b9c1f750ef21c7d31cf60937f6de98736cf00d6f83c408110740762a5cfb1176cbb2d9a80d9238536699de0ddb15622a09d29f9f446aab7c76e8f5d89e05a765109ec9c11994cee989b50c9d9d000ad0b987db56be81ee5588aafd760d8fbce378d6e9b7a133e01417d9e5f0f567666f93a40263470b9e9e95348aa4abc2ab200b9a66336d5b205a5cedc54f95e80d53ac309589537c4e15dc1f97f8f7a81216d21d8252342418dae0b23c44a9998803968c005d7c3d1450d8f5de33beaa701b502d35ad583fc11e6a92e1b32e67622bcf1d4739dee5c41f48e20152876b3acf2b87953506465f3ca14edc370b9de0fcfca4b1df9b4790043af99c1ceaefe31b2442102768b074c1f101f8de8e56257ebd2bc515e602e217b4eedb79c854d0db67161e78cc2988dc720e1f53b059cee4026e6c80e3e31b6106e02d2933ef325ff0ef38bbc86239aaa3ca80bc3d189013dcea6534044a63274cce121b6a191b9fb2cb165d2eb16518b8dff0e5ff761343f0a729593ea47704e8eed1d2fc643547eeab99380514170501597d4d6380f06067f57e69e4318a77d0122459756b96775cce9e3b0f55db52a8e772b4cd82021166200a58b1e0463ac4a269aa3f9c22de77dd5f71ac3d3faeef0e54e97baa3adcfba160b3a6a11917cc7b9f99942b456a3c9bae415b44302c22e33455a817a1eb01b6dd9d35acf54c5d8e72df09915348c781f4643ed2d8eced27ed78f5607efcae414d2222ccc12f164fb3a26309908020eeabd1de567fe4552c62e730c960eaceef08645c41ed28a9cb01c963a5d427443eb17b74c2a7319b92c8a389b2b409bfff24c9627dc247f86961113877bc964191aafe9dd6d05a6020785cea99831cda6493d3eb8a2b88d7e4fcb0197ffa6dfa1189ddc011d672b833f6cf1fda2bb9346f310fef2ad93dfd5dbad131ac5b2b3c07dca92f4243085143a3c46edda97d2dc5a94cf22e1c64c501564968286401ab92e79d218265da3b057c717d8df00972435846eed35b20f8b5bc83291d033c61c5b10ca4966bdf9bb8992f376d01e72295c1769e9541b8c30cae472fcc3dce375968d882013076909375969fcbddbe50ae4b1b4039f75ed89edd6183cec506471ad994b47ed62674051e7b29051493ab9d804b943c4445bc8cb20254a1546ff3fa469658b0e58b9daf6b59997a7a0c7b6eff336c26cf6e50513f9eb2b9589003f7d111743a13117a3a59908822da0f49f4b6842e2f318a9e8206598106d7e0ba2e85b5a3d43920ba99b0f05bee007baf590dc45637308b7eb9439a9a4e614e92191d8decc815ec572b626df0d42d43cfc5591890c9c53734b2be642fc3c01f08bbcc1354e5a1e163a1f3f046628908e85d26b4a842b49e69b6fa1dd3a447ca9ce69f46a56f0806e774dd335003c557f14e96ff602d714eec85fe86dabeb1324ec8cf3edf741ad4354ab1f6c21ce83eeb7c6e2d0c26af118bb2a29b2058d0d9a5148b4afa8dfc5e31fdc9cd67dbb36283df08e6330ee503e8fc1db276649acb46ddf11e4c2b97e9871d5a68688d100cb008eb2449cc565ec53c93733fd234c15061aa13ef0f55ed5a04159984b7e678b8d53952fcd4814dc6adbb1da749158013986011883d4199588997146003be174aceae6bfc5835331f1c1aae661b063432de868e69d3aede791632a0d5aa8cfa14abef2c70b8e12ac79cfef3a984dda9e3f6fbf60b7581dabc70307f7669d95cfd40936d6d4a34867e0b994a114a72c77fa86f7193c43c5dab47b3f98e9c1e2c25037c6b123fda6b75e35ee65ca74935b2796e99593b2fb23750b5f1198ae465bc6e1080f19ce29ccc8c527206f7b6318910d8c90538d9e5d581960259e098e149e368b73e904366c4cc610b41f0a22ecd36420dd785b624e59de7d536e2e33b9ce337a0bf775a00a5aec0970b972c9a549ca5cb0923fe99f02bea08af170e366a6331b8828be335a6eb850e80b18a22213fa8bc966a92132233201d65d63543756fbb6cba9435634fb5ee4acd384bb03cfe531c656a5efcb273ed93ec35a21dca6e893063cf045114a073a384a69f42cb3823cccabbbc665f35860e8d62ef1ab5689134b5e8f86af47655722b13e4a55b970b059f631e098f3c817a60e66e845f34c78aa19051d43666053f261b6528033d2fb8fee369811e25b686f4a6befd5ecf63a7c57b262e23da74f2bfd2d6a9786561557fd76a6ad11c936a48432d52236ef2120935f9451d9afb235b17570e52bf21cf978ef2f86a985774f402b75a1b7140a67474af62b89d12115a3a9e7f9e8faf7c410d14fea535b496e22b408460029c4b2eb1e36eeae0838f04859b6e3fe44d2bbe1229193e8f2065e88e1d93d34bbcf65265310701132646cee692de1842e40efc735ffc8625d948cbe1a831a6f5177ae813074eca8411a3640006c4a3ad6d85fa870bfe3db61460217815ef2620b5f10f86451d8e5f830ebc10546849d55d8bd3e3ea9e77d49911fb74f8e493af01bc02d6dddba636834ad3246b32ea42e4945ee542e40e57224998e721249a5d92c78552c0a3ebdb717e36b7a47fb57e6864a19eb2e18ebb1ab3e34f420c868b8e7ef4d55843b37a804ab9e1c02eb939b7d9ee1c79b4bc49dc9ed07715dfe95e409859560f753cb608894c352013a418fb6941ac32651633d05d9c7c954327f65bdfaaf9c8e116c3a811e40cbbfa610e9eb6694cc71bc4f9630469cd8ab93340614f6846590d6f8d5ec46c1914e4b979402c4210f3db85e5d8e0d060c435c54a5509065a89616220bee8bde7ad55705d3d702d71d102a438ac53fbb16c40fe82a52f40e55711eebfa78caddbc9a103ed0e56a007ec9333fc643bb61f69c0d88d5dbed7c02f27b74cf982333c3776f0398e0c06f2b030864772803e944dfdfe3219b34d462b34f57057b48399fe9a78994b0af6e41ac2ec5a075fbf3c4564067056a542dd32dfa0cf9f57f0b6fa567298c1e8888cb2fd76cc94ebe61c9ca5ea31ec3723e393f2272d75d4a7237ff62790fcb7f58f70fb423eaf1d70d2f981884135e6544d4f40594531f5a84e2060c5e17eafa7a334991a6330f75b8a41aa6e8bee1ce27d7a899f5418ad035b1313addd8ca3e4688244c9bbb1e0d29b07155fb2845d2cf2aaaef81bffac16286cec46e926ce38a640e442bc278079a037999a465061f68fee03eaab17c7580cf95401ce2db388c4d42d0d206b5dce8aa248ada3de82111c35d032c714f84e2b9db17430fcbdc20c21c510bd0d9f3fa0a5b5e16532d4575381753a5d8b4f2cd483b535793e8aeaa2514af94a9677090de10c0274b659d7683facca3786afab9b214c05252b09b075ed372da0f3d29da941bc801082c7d30167c58aba0747b7321c0b64466c528b279106d00973e6f8d12dcdf2d15b8dba07fe485d6586f673f005ddb9716b22dea32eef22543c5f82372a05d26bb9de63eddb0c5de1dd19833e2278a14bf134af66c6df4545edd6ffe5a077d7138f1a28bad6a5755bcb7d8a360092338c52b5d81c7f53b383e378dffa5db478031069a438f97b340fd4c631f50245bd2a7cc7cdc02700c00dc501840c043a0f8811123a558424584485eff9a04e8f3ee1cfcc9cbe0b62611eec26aafd38f2a92ca25ca7c0e6ab28df3cdd3b3c94bd0a288b47333671ba8d3421dfedaeeb71a251823b9bdc6822f9a94f8c986939e35d5ce9ae75f73729708a5ba4eeebde333ea38f6bb5b75ba130133f9e19c20a1994b950cc2d635bfdfdbaf457af676a10fe56a4f38a0c8fcb75d558555cd0efc030603b8becc95a22c21f99d4464440b66d49bab3ca91ef5b9754955029032ac838f8dd279cedc56ad3959cf9bbc583fe83c52dfd52b84a322270fc9b596fdff63c406ad084819afb170d941cac6a2b535804f47220b1c840e0ecf9d6805a3417312667a5d7c40017a99e8c8f1e5cccc7554424d1f5a6dab90598175085002871949685f36d28edd820a5b19ae75f9c982845c6db1c257d6d077afd4bfd3ec0a98d839b8e6d27dbc50e66f9818fb17e1f1fa592a5c2f45c61acd62a8aacb9000f92235d6588612a9db0666e1ed48e9fc349901b8a1b60596562f3261298e5657596ae9fd4ab6c972f227226094347e0d149b85ec214e918f588440863867d5ec5d16a057b1c28cf3f6d811f9f8051b9e9e78bd1da0108381fd9eb7146550c3b202a3c444bb5a58a2615350c4234f1df9d883e5426a82c91186a397ec33d1b0eb728bb9d29b1a97b8a9d02702c6460818ff15de020034ae38f0298602baa656884997d954d72e86c4b1db2e557338361342aeca78d0ec3d31e363d587baab5069594b1d0ce3615361798a1beb3a623dbbef5bf66a9c16ec025f5afb68a04d970e4770fe9f71fd5ead7a77496cd3bbb75b556340bb6db8681817877f31749a2f9cbbac2f1c458321bf45c0dda07667cd37b17934ea3bb4f0cb015bd6504fd573a27faa56d7872d41f5545a5b55cdff77af0f05e35777dff5384ad8945c74a80361f793340343021d64b28db08ce79b93876abbe17ea313af2763f7eaeb861e8e9ef661f2730cc1e05c0c6aeb8be8fc59703bdd66739f945e4f82f5d791989a9308a827181534496900ef2fc58dfe3ea9df11d3c26c4d73551198bec5c335b277340c0bf0d91c239ed5143f64feeefc00b932902456b5c699d070aa0f7c98299635cb3f098cb87ec1b3624d6390448d6c1a84f9806f77740d371369f5e6b58179bd3be02add9604074bff0afdf5c2db62d54fb0c3c9d17736225d525646a1d8da56640f7b2e70ef954992422061dec8a88860e3e14a916daf7a7eac8dec32d8c153d6bd00757f695dd09fd93af9068fa7e2ff6c40083e057c2a5fe9d07da7e41f6cccc00bc6125832771233243daf4d111baebca15786e8bf76f781a195ddb7ab9b4c6a30d3234c8c745cb644cb53c7958662762257b31d949d96be36369bfe4e71a7988d85f3dce60aecde0d568232f734a2356bd5379237c89f87548257544c0d747672d2124685b11add1d5b0552dd47d2006a8f0da67aa51137afb88e4f57f956ba0795c80033bd6bc77e249afd754a8cf7a5d70063241366cfaa15a8d6a2b66c0c7fdff90b9ca0d2a9383558ac7e10abec979a95045cf79ae6e629545c5ed2e5e39bcfa7b2378b8a45ec3bd6d1d97b09cc4be44a25e88e2fc1f3f5e5c578b1b681b3b375a4d1a7379da0cd5dbf1a5c6ea28deb7faadf5f47c2c84333b26407d4760a5341e11eb1539b93e492ac1e6bff8ab12c874cd348f1e4f4fd1b295d5802032ff960218c81d9ae0fbf274309ec532298468cbc7a49f1c17284e14c6ba3b3de5d6ac66a1673e29c62ae6bd997cc0c3815038e797db2b8889a47e9f743bc63fdbc347ae8e2c53e328a3eae5019092d72b66c55f250a79ce6417908a912106a70cbd1eac898842e04666594b875ce5a9737f97e12d77404d2238442407da77fa6f250f47040a63f5de8e07f07dab7bfc9ff46e9e9c8aa1c9d401ff0aca01575aa9472a23adf6b2aafb67801107d236c1c10d6bc53e062029094ee6de528358228c0e59be432b73d92b5a2174f5694d3cc29a67985b0f72902c9dcd8261506b4dd4ea21bf30d7339f1b4bc92332e67f9db74d59bfdc8ec47a159b18a0f9db902e397031057cdfd6809f1ba3798f1d662e32af435b3f6fcaff1c44158480a9815457b8beaf2afa9df9587f911dc50a053b900903435f336dd69b01af34d0e85b3df916e15413d73db3853f0bec516eef52dfc7babea90fc9f8d41cfec8278e4bbc64cf05fcabf877b794ee4781d4fe6ea09e3afd402ee07165bc0d7a9b2b74156977fbf8e78d528ebf9520ae90753c59863cabfd96411147452f8b1db0a62a026169db800243d5736c396eae4bda6ff630cd0bb0cefc7e951236e772e1069441295806efba29e2d4d6f78e6b8ec74f101adc8ccea85916881d820d8196d48f7632797fe4379668b43b4787eedfbdd81a39f07735e83f0c89063088dca4b94b47ee2b1f6f498c8efc96f948665538d45ed88f8fc9b4fe1e0f7d6f640c82f9706bafeed8dba9502f8e62fad242eea3ce93ccadd826b36070655fee340b23f812c3e87b25cf19cd9004fa7157d49db01486017856fa2e8911624403505218216ec9aaab77b846bb6f2b57c0f050e10d7056bb1e785c1072ab7ad4ddd368cc0454179ae328639edbf1ef7098b513705dc5f35d414cc52fd06313150580d3d6d509211abee1922fc15f25f3013dff93d45d8064c69b1da14b841d9f083af412ba4252b3421a636a3b0ecbab353b123bc62085cc2a55eba8ee899e75ee508d35c60b5f50ece3104199fead88fc0e106e97b04babf69d7879cbcf3a869a0e0a60d2ab368e218f256ec4881b407c31434234e26ee9c589b797a5ffee28542bb159a20e9957bae88e07d99f9ca56089d582f08cca53b85e0a0f073c1f30f7722edc05845ab6ac693e872cb7f27661263014cb8043ee2092c9e674022f9a10d3d2038487170ca4eb8457a02f72e45a05061fd998be0c537053b958a5ad34cef98262530c0b93df327e76758c7c3b1fb7879b6b9e5a10164675ef6814457a9729c1a6c867085cc34c2e6fb72f52222001208522074b2a8b2bc880ff58366d81ad37a73ed8da7610851373bbd4ae38ba8321a2b66267807b2b56e259b89ca9355384e73291638b53d61bd799cf70f39ca8d1cdda35e8cbcc8a17630017383a471b18cb61fd7aa153768f25ea1f28098872949c78c132387ca4cdea9a38ffd1e629c85521f377bd709a6f1be8c2fe8ae4ee9eac891c42ccb62bedd8e9fb97d08cbc7a617b2e4f4d8d683154839a9223ce5f19fc7e862d87c03bb333698032c4db1282f2a610d459d73431a09b136b92f89ebcf88f1136a6a9b098709c380e7b9155031a1157aaa4f19e56993010e45160eab8b5f38d2f6932f0a23795c03e0f53cf1d5dcf7723b5d04b7ad62bbbf41839260221cc6624014f913df1eaa4911f88601976400f081b72f1083ff33cf1c12b30538c5795916d95cf31abbd089e4ce10cbc1ca7dbf5cd9b554ea5bd62861544d574a809bb186982981486528b789fc3f82318b76decfa34cf382ee89eee1fce1e8287f8e7c1a4f2728fbc50336374c9e66ea77a3c367e251a913535fb1f2806e2a6761ff7cde35342f819b9cb6ea05b807ed87a8cf667e61efe9d1fdb7acd8c3840f000bb116dff0bc289df8cbcddabc0d2df622c96687bd99641ee2c00c621fad55820e153719f7ef24313ffa8926eb5ad319bd99816548c4be76a99254b8bebdc773ebfb99c92b48cde9bfa675df9406970d5f5812b88eae027e1a142c869c1c7847353f2643473198b609f5dafec007d74d87e6244f5612e676119a83338c75a72a7f39b22977abafc60a04ffbf2fcef0e362b1a200074526e54d572bb2940b533d4cf209663b382b6174f91bfeac4b15612cdf2bbe333feb47f7ee805a85d378737e59ad11cd311f351efa1752407bc5766b86957615960dcafa5aaad72e21693dd9e1e0aee88346d497b23728ce8d68d8f02e9a33ff11f39db65bf236c18c1bc51f571f842edf89e42f1768dbe8be5981052855842c5bca9a6cb764d98d6f6cea5c03fb095883ba0979d7759977d80dfe7390e7ab358f3e739a2da8fbd19acae7f79ac4d0a6f7539e0e759aa3e103990993cc6ce98f6cf914f5a1813d9241bad15c746b5aa6b9289c3bbac4cd5ecf1b6154a807e17ac847de0c3f61060e3d43a8eff89f5f752f3e3dbd67729db92000f55f1e2570d881c39a8cdee65984cc71db8cd326abe17fab70d9c93dbda0be18452623e91a3ce694aec3c1a71aef43cff779779a869949cc9c5e671ca2e5e9f3e59f3d8d11db07dfebe1c3f28d6e9c8a7289a2767505c1b3da1093242242cd45ea1e47341d7b1ee839208bbf2c5c5c745117ec3f0a6e0222d8cf247df65ec598551a628a1e22bcfaf2c9244bac7a3f00b7aac8b6aadf7184c5312684e590ede788833c51f13f7c52d1938eff4ef45f5d188f42413ec421590829ade6f1e50d75a347ef5fa68ee082077d0edd3e0f1874cd57245ef8c32b3a21b1ed4bae88f28f92da376aeec2346f82f81a9c192097b64d981dad9be19846e2d02c5e991bd06a5be857035f960dbb0c984893c60efcbcd62a8edbb54a6f03a0ae8943cfc6fe60ac7e76a1baad618ca98f4e930d4ba1066f3804188f03b6637e124abc74cae28ce300ec0bb31b42feee2e1d8274b965f9db125c0624b6ee3f89683bef4c313ed162a5dcdd7772cf14b793d9441837a46c2ef6a4db1a0b6da4ee75539d69aec36f460b3480253dc44d00a99debcefa4ea49bd7966b749d85f20df3816f8f6cd0b09a0187abf347f64d827eb489c7c16bb890c0fce8e361af131c331803485049586c09fdc21d52b41539ea7368cb648d4862bcf4370d58a67e2fa9c2abd2a58bbb4479468053d07af3213871fe71d9ec636a19fb0f6bbbbefabe114fbe04debd1dd72094f869f316fc1d03cae746739d71c0ffa2bbeccf54e2f8ddb3fd0dc1b880203a040e4adebda0a70219c89d8282bf67d96c984005b9134be6c31cb88d7c0db58cf493afe5c9be08e96b0958b0bacf501537bf401ed8c718873a2315b97cd36b50749d748bd6171873cf65632097dd190f01912aba69f95b9ae71d703f4da232b01a077c37f226d15abb9b7719a68a5db2392f90b16f9d74560d8865b190df6b5e62d7ff1ea109a492bdebefa5b89d62d29c053fcd4c45ac925d1b369f73c2ebc3f5cc6e9f83e9dd629a146284e2467de61b71c0f859238f3494afaefd72837c4766a20bf25ae98448afb4917c4e120f18b2514ad7fe97eceeeca23c71161089fcfd09af64706ccf408d81e20d8be2c90d31140e197dea128f9abb46bb631dc7aec365c6f72017d847b77004258f83f7acf42a50c6d791ff3f3d5d7f3a65bd8ba934133e76649b82961f5990dd686d9fd85d0b7ac6de1d3116ce11254dd10146f4e7b56cc7b719e4a614e1ea95a92e422defde5e2feae228db3391761dad9904b2ceab1b3c94b8a9d2e93036df496fde50efdc6ade640cbdc0e847d8c207357dd92d540c0a9785588e8f1e326dcf38ab0e9c1ea559cc9d2108b84424449d92e5b12693e20ebd401ad19c264c1b3470b2083dcdf1487fc24b372acbc03bbe7dc5ecc26f7e3f2a4cfb24e98cea12b70d1cd903a066ae1b4968ee3f7cd44e4fa0eada4e860429f16dd826d444166553046bcd3ab4824492f105c0dea0b2104addfb209fec7c0412d652cc75035f03e83543dd858e3a5b09c6561b95219abd2fc69a89cfe4799f3555322e9150d6cfb5e84e2fa331773be8a44c1341ed65de583b97046a705d2b2faf98d043f46a1ff26617c83bbc060c156b7e887fb1774733c1599b6460ba98b9496fc3c34e250c387f9c68de874aad3918e3b7bb841ac43a4d1c1c1375f7d9e5fb769d8d6dc3348b2eb71dadefd7d017b70f176be5afa54527256f5b7ae4ab442ae6a1a3a09548289951132748f48a3842b9061d3943e2950ce5be957ec321b2e4df07839c494abd96b1f036e80547a7c1805a7a8e7d27019a5e197ef8a47f977c1c9ac9486e9ce176a41b9e4a6e2dfda40a990d09f4c510fff22f1d4d845d697513bb809a7b758066aedb2383041906b33f66609f6565a8b4c63ca51d09935245b029482f4423bd5e14444387205c5a78a7a1867e0826a3997e37f5d28938359b3e58485d1db1a1bc86890cc01109c125911d343cba5ec391800076c1e29ea393d1d1beee8b9ccb67ebf0da0c753db69051dbb193734f62fdf36b1be73c8fe12accad3f735de01a1dcf0d3a36a541ea084fa4d56507dc71437ab9ddf879a3ee6349154a52bbadf225fb5ea04c272430072d73c716a26299460ec5b0418fd0ffa403ed5f1aebd8020310588c7a13ecf479b25c090fcde7b69b5ed8fbc2b535909a8140ea8b7d4107794a6c85bb460fd6530ffc72f1b8f8cc127dd853759172def239e9d2f8776e598b8b3bfea794fd079f9cd785f1c671a714a41c859840f9b68cd74367b8adef932958440ce5dead863a5503bd4f226e800ec8ed2b270dafd52852e4c0d4a0b12e05f46d018e9a7e40294836208396ed04eb10830320f811ed0da75895a69df0052f265549141e1eb62e85adcc5e44ab2b36c595524c466a61af255ee862744c4f8c76ca372d388ec3095690ec31d4e0cf42133cb2fdd3c8811577ce0f04b9bc63ee78dedce83c5d2b0b46470efff53c721a74333ba22a62e12b39566e1270aa07ab07a231f1017d4a980f41ec16535531230e599945d54d3c63f5b50327c251499ef87eb8a033f8ab0ccfba729d4f8f3567971dda8c36f5f26e0da7a7e39eb98a6e1d72e55e1851a856b139782013bb6749cc314c30eb6cc53012031981c76b1b858053c235b37f1033e20edebceb5a2f92fd5bfc09648d5f7245dd927c1b3b039d53bbaa5036f2daf81aeb59e896dd03f5a443ad4f7085437e222e08af91cacbb937fae7b5d31ea0305a74d1857b941bc7296cb49c68de8484644aa7ce6d06641de7efe14dd67849e07627bfed896120fe40513dccd3920aa00c456efc119a0d57e7f081152aadf6fd235c6f333ce00d2cd4db27a0997fa31ed7934fa488cf2cc1dad41c2b0eafc3edc971aec65f1b3e907ffee9dcda272a87268500bdaa3236b9a8ccdc9be6375de708397783aa7919d816a43d8af9fad493f9956cdd6a447059d814052e8cff3e9b05390284c050a645767b6331e22a0b764bb74b3f86faa287445fcd13396be9124e3117e5335fe3a7a94658273029fab9d39f816be1f43412b608c1c0e1f8d49287a42bc119d90f6b2a6587816b6802b849ddfa2573b253306e492de8c4e2ef4c7de370bce029e6d7cb730bebb309a45ebb434ab814f1738defccdabb921541d23f5efc11c0a6929a763abb96ada60a3cf536de96229f670319cf4b1eabab2bfbc98bc5f261b0d161836034dceba85bf8d4488898ce5a53158e7ecbeeb6b930c2c1712809a1d3471d735780368c19880a07f903d9c465d85dda491c39b6dba21d9c0bc4267045bf759589f82f5c4079c3befc776c72620c8cbd538c17d00c1cafbbdab7052e4dbdaa750b8a31d736a56d26dcbe5a6f80c299b348e54ce0d026fb64be73531dc646e6faefb7f7047ae14c54b0cd10379377047cef8403db241471d4976c0fbe85e413b7ba8a41d93bfe980dd421be3066d550ab6809b7590f51a827495be909e97fb09162a5bd9b8db653f099b8b424777186a2a3fbeace3402456faa72542ce170806fae2e2192a68964bbba3b5d875529ebe97d82fd56b5e689dd3aba35d03199668b654df407b966e3e67642978de3b18763e3922ad44500f7da73bef779431a8f05f3eb6d0aaac5696c59e228c34a354949b50021ba3738fcc116f3d7f2c39684ade0b4392b60c7da24d3ea3727b56aaf6f89b1fd5b34bc2889ca20f8662080436fe5e338f2f2baf21bb7237294eac51e871d790254bf4748e6d735bd92c4d1783af6eecb48dea2f065e6bdf9ecb450ae4175fc86eff28097481b820a17ab1dd36311d202127b70a1cef8ab9a49d4a95b3712020893bd5a12063b85ac6a3deded75c26c8ac9d3c410f733d05fcc58576a8440eefc211e194059008b713ce425e40d0b93d52b3ed9b70b4663d58045ea613a612a39894446b6d4ebd672df6588c0984eaf186e8decf4fe9374248634cf5901176c06a595bf4924de50c074a59eab1103cb17c8fcaf9f363a4a144bcedea302952dd1387c0c0ae2157403291004787dded0a4946ac634f8b91a23a0508559673e8511f453fc9c90a34a6d633daae4000e41903ec48e04abfc2d89b1ccfca2578c3d82bc5f03d16109379efccd520dd1e6ad4bb2312bdfc3060a5631da3706c704a3657328efebe475f40a88797071c12d66e40505606393386fa28dd28250dc861151f55c45d4754c0ed5f29e241d93f1f6df74a3410aaef74b027646d18b7c932e297bbcc8ff79272576afe7de2fef848d90ba54bb388002b499b70dc17149d80b938004f96beb499c79becd17d0275cac48d115b9742162342b3422e4ebb080da78acca994885d99cc6a2e41d70d727b423708eee199c3edfc1d09bc76e93354200dea6293d1db8e7b8c504444c8365293b3c6d2ca412523b07a7b7a78c60a4920c797f2532283573bced75b0199367069f40291d4a81c03d8d8993a31ec8c2df63ea3237d211d67a7ae6ada6e51fd14d0f0d66ae6619fbb36b96c8a09313ef9963b22cbcf4ad5243d68d6ec014bc83c160750813dc68fb1ddaa30f7055e5052207cdcbe2f1b228fcac30c218edfdc779d955d8246297b665dad6520d8f580fa9044d8bd94a72460bc3474d0ee903c6a77045bf77f726189fc25350232b0193934370fc9f7e487805d89b55153dc5546bf1b25c9a1eb2b75338bcc964f6eab135822494af87ebce79522172c70874316da52bd9730b5d98d2714009ac0ce6a777f3d7b9e97154f680c48bc0e9ea488f185c1f71db3c7a1ce5ac7e27fdbcafd8aa9d2b807206b743a4038339d601b22c80039cd742c7a5fe8382ecfa10775e975b3864a2dd9ae46a4ac052b0a66fbf40bfc1d787fbf0362d02623e777a258e81daf98bad6cbba92cacc8275d64528b2c1d880332e82f81e208b4392b34088ef9da88c68c35ec1c74eca88d5c0522626bffb1060d3bbd960cbae5a226b5294799f04031026983e5cb22aa921c3427bdb7196f0fc4fd938f5774910cc5304210b2a71423818cf4f5ede11564a1f30769243d606d8be7d0a05a6bf17b9247e2a85e794156199a665e18b09aa2e08b7f8fc2bd1836f05fcbca4bc977a0d775a30bbc5740ba80c20714dd5f6b5dc671a84b3a4480db80890253d885431a177cfa4009c0f5f4de92dbd8f545dbb1529c0e87b6bad359df486e53b49bbcbe09280450ff27d9a72d1aa4c627ef785abd74358583848e22171f64419762382b0a81649577752d1ea771ebeb5608bdde0390c95ba65b27040ebc9effd28411e7e718d44e015904a3051aa9959374fca45b41dee94129154010b3e40a19a5ff47b8284e28108a2b2f3d5684129fdd9ee1661e34ca358c10fb084175bfaf631fd0451aa0a162a6f0dc570a4ecbeb18d92b5ad0706fd4ad3b15ce3e8d271ab61a3c0c2941e6a3b1041e505fc75bebd8835dcbe23a632ff3532fcad4aebf76100b8ec8eb93634a8e5b3c406bfc9021cb28d094a8848951a693500c01735b61d75d97e4df628bbb0f879480796ce56c8c55ed7213afa219438b6d519bd237c77755c6b753190b47c6b3df088ae55259d9ab1956b3c55f3fee73da82f96c800f5a25fae821b028c4d85c134d9b4f1299869f02cd2a5522d41aa8fdcb13e0552b1beb859e93d571420d4062f544772f1c5991b97c6c2972daa177f22cad3b08921633fb2077b54abef3836158799183ffec3ef5806af2f6901a330f44919cfc2a54f1e265999db31c5e2a0b77dab59e69382c8863d1c02f161b333ec64e004328c539edae65ea5303cc4ca258b1a2a64f29e8464c87b84d20ddd70f0a89e32c6b5bc0d7dfc45cd301a144944b1b3b94ffec3ba8698e458c7c0449b8907ef3e849ec8f47af03aff6b90516683d7f438ad57aa6a050a87a6998f0b72ce827d057e3efbadf58560325c0d36c0f7e42e2140d161f202fd492258ab6633cb3ea6f1b32ddc7590523cad1cad1e5b226ba3478a5bae71636c4a75f1f4a2eba90c413363210bc69f8f3734e6ada1adcb67fb7611367543a952ab6d5103591b7796b3cf9a69af8b99e82fa9ae2d82161295f8f4496bbd0bc1cc7f27590a522df1f057a06568d0b671ce3e6d3158befb191e153beec605977d6dde91ab3d1c0e8c9abf946e19c698abbcca6b74fc2d921e8cf31605312abef83880297b7187e09a48ff61b1e67a781b58fffc81f65e35a1b38eab53718288d659d7960122b35014da885f1c76c1c08f1ff9d5faf3287f3fd2f96bf7dba72d1ee564cf3e023e446b32be5e8b1984e2bc0413f58fef14f860ea6dbb3884255da35a0f6e3224c3ce7c6524377cb16d7560873653e04ab7a586df4dfce2636e21f22da00c52fec9ec3cebc111f848ca68621fd3394ee9e807fbd7ee019ac81a0f9c3b40a3511430a263a377ca502863fadecddb3fbb1926359ad270a88366e5a8c90cec08c1f3bab48bdbc20e22dd6db87a7ec1a10e1fdf696c57a45d2c5f4fba2ebac7050bd6e817918fdf7453511393b37f7d8dd514aa352eb99ab0eab4eab042a68d392fcc6347f938e56725753c3f67fdcb2e0574583fecfc4e49fb6821dfb9478ec78032ce9a85806ca66dd507b4e55c4daf4ec317443aac604aa2c9a348add97c3885519290e19dc0cde60f8d8f11b149ae3764b84bb63e68f6c7848abb3ec7e43f72a59b8abca6b47e93fbb045e081f82dd537e08cbd3abd441a087f4bccb3690988098b99e29cd511b909bbd54b34057d70f82955d4e94a6b2ee8c80caa8b47636534563e6c979363a4b8d3f67490ae5082c62bf86f1fc1c59d85c35e740e163615269986369cc36f41d617dd42d3094a4c7e72c46157741daef6aaa1a3d32c0b9a5fb7406f615548ea3cf991f32c8cc10912ee6c9b83bec05f5e96d774ba202e520cea30c3d89f561c0a33bb723afee5d909b83524a0c073e49fdef2c9900fac2b2daa38b85c4a400524920d5c8bcd0534d94cc3c86af37c567041ec29eb2996fd3e15ffc95bf3fc4314a26bb86eafdaca6ab840a1e9497a6320a2538b09388980b4a1f5cd7c58b5639ad1873dcb3e1e79a11f53cf90f8b2c98f25c569f0a19d26f676b5b7a0dc09654b27d7a67700ef6c072acac73cc1cc1e0a017ed69902a26bef3790bf321da0f7a46aa413f28a624d5673fdcb4c654a59b9aacfeda4607ca64d3b40d503fc3c065a9055945a38ed8455f1d4716a14768f17dd3f4adb2424ff30e955c5654ec01dfb901e2ab02bc32ef307d99f02c33bc458db307c8cc5bbe1f6babb24f75906c05d4caefe018bae1e925763f773b1c77b6a12740103ecae32e46f16e7a601af24dd5961e153195de58886785951d62bb06922c6f2c28af5b7c4b722d1bef48a341ed1a17b14c68ffa809a572019329e22d3c955c4b9c149f6a33954a09e2c5d4d0896c76bd57ec4f821c2fc994506783fb0a77ea528c9f6e8f753132be09a0ebd050f9e752942191d2a0bd6aeb3007f4be1907a4b8d29424549c03b5701bc60d5a375fe92ccc97bdbba374a77bf27752163adc81a4291f0b11d595e008a8b94c944a82a4862a3af77b5e6eae993e886412032a74e6fd35034469e642be36f70a6925bf9dddc7d2b851049c58e7f3447fbc25675e2dd998bf7b4474082feaf04ddeb44435ab87ddbc24fe9b4a96348379ddc7411b72c79add5e6d4a82692bc561df4fcc4574b8802d520a91c2002596d3c2279849c7581288c8407b6625d1e1a3dffd9c9d6713b1dc32a56d3e162e5ecabb0280966729bd1781c052937ad4702ca737407dad816317f342652b1199d024632b47129864680b654d501f84e3b63342d70b81a901cb49ac046896939672ebcecca64c061cc4b7ae95f4fb8d7aa2c42d9a40bda1577ec106baa94fa0c53f528f9a2e225545349b38c500afe095fc8e590d808346ed4134d1aba9e6eea82ed6dc02d477d9104f91406c70322ac649f13e580e1dae2b9b3e63cd0152856ee00768d558bbb4c306f266d56d7d083d61acc28848f5fcf41855280b5250ef57a9c552cc3f45fb78776ffb72dc4d2a254d937b57a23b22d0b1596cdc9a8e177955ed3c605581b167a2ec153ff41050f646d29d5dcc810070fd047f344dae67a9c2329ec85b6e2a9fd1675887c436317cc70f4e1555a651b538dd7efe10ff6364e8feb183de7f9e4ef7535b159d03693080da4ff2157c4c0ff3edf18ff8333bb9a37f2e160664096b807a41bd69bd10270744780a5fc278037d6a8587fb428be1df6d45b5431b55381ca8d7197863c4db4dbc85b09091d93837ad9abff20d04cbb7d5a80302473f4b9b4f17c9ffb539d1063242c3de39eb0b06c596e158972cc82e4e270df63c9f6025df1f9d458f95d3cb4caf7f7a371d411cb72dac884cc61836a8ea1b4d78f0c273bf9e0d18fe251c2ab1bcc70913766d004471ad31f70210181bc9531b314c97847a67c94ba218d9d40349bb842c0299e8d8cf08449acc85d9f54820ce7bac9639a19de62b25b65eed651085aa206ad6ebcc9884f7bf9e293aa6afca523bfef6c78f2e8f9dd02e8c8926ea77f0742b437142673275f5420af6714c7b07cad7613af06003442706723205ba3db8c2b2f3f65922d993719201937d80ee860c157f1c8d226918a1d46be5d65f9362de6798f133653c9f72322f5343323dc266f7b74f6b44a81f095245f7f991d90064504eb104929153a85c23b93126b8a300c6dccdc775ae738de455580bc78ef97cebc2a1cd84ecdea98ba675e0b200238bc585b20253c3dc617065524c5ea69da0ba39d3a41e9ef8ee504a94af5c400f5101d703d3aa5cffee4b6e2b6d2d7e1831d13b4fc1358c46c094185aee488bb0afe36639848ad2298ab8669003b8a7f366d1ade16214fbe11c3e31d056d915a061b7f3a9be4063cd696403fce1283ebac8a3ec183da1e08e2113f11ac6ad58fad0479881b0301a56f22f24369c8cc6c374e93671f7d6817dcfa901c89eef805bf4c090be4d5bd1e32ab2ba5e6f4494f7394957c1f677c4a6e2dba7f44d3e0131a8e0dc049a032b8a577e73f744c8a1a818bf2f1e65247903e36b3f0ed0fe4f35a7162038334dc8ab649c9515824c863db8e106db051df6ae33b168457b4c2e3cb102d7f4a2483d938e67b586944384271073f0d697991f156ba5197f7794ab35ea90b11c8db74156cddf62cd858054d746099730f8706d2bffec9281386c2f6fad0c974b6956238b493d89db9bd2adec9342cb7c11dfb997e85f69282d2555f40b602d797ff4b8619322a546b863094b839b1514ca8947a17b54fabb3cf7db2a4661bae467adbe06b3f2368dbb6a9864a57e4aeab727794857f2714af31c4cee026c3f0c05d5716af1e7a6c786d9f71e1ab9f590e987bf5f281f541c2630aa91e193f4e11fc91b7db60aa6bb45aa6b9e8c43988f6b344609c9e9145cffeb4aff295b4e38bb0756859c8d83c79b045e64e5b6ad2558f1862cc47b1ec3ae23c60057beb6a2f65b6de8d3398380c0bc08f6350e38e5fbef8731e0fe43aa9225049cf12e7f954db83b068b5bdf69cbf876629e00174671519849c0af7c99b5f314cd8b5fbfa929b3c6fcee65fb24b25ac52ca21232f72eafc603871a143849c6516f0556651f32447541a3c130da70b750ffeea548ca97343eca9460eaddc656d59fdd46b6e7ac0fedc0d7a328fa280c7bacab37b637192c8c024a6babc4ee49a55dc46c52499e82e0a3cbf3c73921ac4a416a3121da80514da611f6031f9da213d84563b091b574216243db58b017272a360ecb830818c0bf7a2480ed59e81a0af0f63689b38abbc604b73f69d538264e9a274115e7639dfa6021985f79415a5960c2a30fbd57d92a001e54498a630c5e293ae1f5d158154ce20e5555f002bd6bc541202fa0228d4c9918e4ea8eb2e896d9f1c7bc75dff11eefac6df68e067a1e50503e828fb32b93bddce909fce14f769c3ee2e9e6700354958d690560b02415d04b0fb169929ecff82e0242476e4167d2d2b60f87b7f68fdea3cd780f8fb271e8a7da6e689b8e20ea89d0254bf5eef686d811ec972f06956237eebe623a855af11bcc3931544fc7185a6649154fbe8402c978253d57ddb6cd1572d44a8f2d02ea72e8c313c42294121d97928bab72468b017f53fee8823d1cbfa6c192c2d6671e3c9305a7d991d77fde85a2e423f26546e9e0c8d23ad937ca44a057dbad20bb6e6d8c72426f53e4c8832bad7dc18147111c9c1056845b6ec37eb9de3b137632eb7f02a28884d7deb25249fb79da58eb99a76ee02b2150ecaafc7067a1c1ad4afad1e5835c7eebe2cdeb54c94fe14dc31a692c0fe3dfacdb3cad2a955bded85d15f03a424953d92dc9e6fdb1b6250adffd046eb0a553a47a1fffc4d9d325de6fa05226ba3d4b78b5dbae278e744369ef1d655ec5d6acc0791bfbd63523b846493a4d6c2cba62e57179a6eb8e01cfb968d01b92986ce3a8ffcb2d73797ad4b3a86d54ba9293a968fd4839a589f8bb688be4191663ae6a6b1b64ed8cb686321f67cfdd39e6b3606d68358ca8cad70956ee10b0935ad203386947026c59a7fdb9c79f8cd370e1b3dfb2bd0a4acb73ed4176331155b35f50646107e7c9076f0a05f0ab9461d6c3b1cf880fb6d771c173c192c3691cad8459115541a912a159b8946884264841f06ac0668d089049d2548d881795ea2133ab5af4dadf9a9f614a37a220486e38207de270cd2af4d4fe491cc98661061d47117627dde0dcdee0f84c41b257741072a781afa985e9c1d9273434da3b22901564e0bd64c1a0f65045eb8169d1e965f97cff2f1af6201b6e1a699634e04f66bedad9f297ddc518a3dd5f230c367ab4cff17c257202202c2a935dce65b3b0c8aa6fc1379812e82f707d22973bb106625758adc955945d7a4fc1e73abfd799c43d5af4dd3d675648eaccabd59eb35e642367833fd51c5adfc032ef8629acdbafeca00200db99b4d806c658b09208d8bf97a6873e900bd4afdc60f16c95df5914960fc4262d910f01b9030653f9892ca29be2b3006e6a026c9b13907743dda24ee953caab2f84b07f42aa38556ec9ff47c5bede00c5dd62bba4485e5b73085115132338b9c40a7b36237a75ff7e83697f834b908e2f4f7c62ae16fa286b08603b6d230663e5bdf5b3fec70258ef3cbc544351bfa0bdbae85718a7cea98bb58bad4dee59cd42a7f72a1b28d8bc5563dce3597a64096af3d38f1403f9257f1d95332e9a2b4f83dfcbc0761e226ce00ef6b10d98f9e4d33656e96db20ecd91b842e0dc1ed3dcd9e8800885766cf113e038602a1ee62290ba8e773d18e4449e42b92fc901ec8c5af2a648a59e6d7898f4cf472930f535af19f9d69e2c6ab3819066f6fc54dba0e3dae2448ab6cc44ce8d3b633aac73aebdb9e58bad4e8428584057fadb9f018e6be80a18ed36c518a96438c0d4a68c396a957dc654cd857c16e406f245d4723566b78c9022ae2a3f07892ab46a0e307e032ec5a8bd85db6729df90a240ed24ed0914ef50bae2d59862f057570ca6bb73c836d197def6942f2366da954733f156e42cc82ef3b1d17648ae1c25f868872c210cca1f4d60f2604ae6cb251d5455cc06e85652e65d37891e1367f6188b510594a3501380be169c255a2edf09f88b92415781b348d03a56e92b058d64480b6dc42716522a6a2a9931fc528d3f50c982aa1961a354c98258740afe43332cc7dbb2780e4836f1fd248d497e9086c149dc4988b4dfa0bc890ae8e464888cb7d60d88c359dc9b2aacc29469acbe98ce82d3217a3d8b17cf1fb660a644234bc8a82d6eb5130f284205f11d34d67c8e5a4975bb2705d60d9df161d03111ea9a90db543e17b92ed69446108f3b2dec057fbcd272c4a01eb5edb2e4e8f913295ec01f3de41f9c7e457d6cf538e14075d3ee05eb37a65adf5134895c0ed4d1fd8209947b0ed988b6e94909bd282fbbaed25cf76d80f5eb95b74f9d77ae26d0ba97723e87d734d10a29e7cae64d2228232f8efb64b5ced7496b67089c3a5249e3de0e9808674dd5f20ef7f3c76c4da573897e9b50d71fcb4216da3573d3a7eed32423457fd069e7d5f7e08b4d250d74e194f1c4c229daf738108b68e8697ecfe7f9d09f152f6e3858a3d1befef15604386ff12fc03d8f4c49eaca6eb6ff0e81fae6e720efbd7cc08630a33231b822c80219326fddd260c006aea94cfe8279a1fc358cc11001710d19369b8fa818f6adeb70a5f1309d0c5c528f0ec0f8b74efef33e444a9bc8d1160340ff1860c99d26baab6bd0f50ac29530f0973ace30d7f5c88846bcb1ff5051d3087c6de7f46929fd173ee596e1bb020892455d62d505318b94526f7488899b736e3cfd6ffa86dea6b0be57a7fc17356b40de678962e88e2c1d15c9c4374dd845cb2ead685a01b22665e45d7e4ae4bbf02ab9cb1704f47dbb52ddc83eb16315121301d4d54ace37e230a2c14b699e0d36776f0411bacb3e90684db3fb0e3a4791e209dbfccd5344ce81ba53730dc76ed8401d327b20256d771ce85c980338ca627f4bce15c3db84934fa22e5e367eca360f17ddb96e37304551b4eb1fffb20414af0e553804242939f0712b29662c94a898ae4c56ccb6907af19f04aad6ae92bd0fb320a2411cef7a3cc8a98a345f7372842892983a2a6da7a5bf11bed30ac403644d103e6a7ab13825bd0e51822514c75d0b93ed90b781cb8172b7f9b8fc56616cdc9aeccb056a42bcd2adc5346fb0e37d8dc9771a2ea59fcbd000a25b068c7dd90034d0d6e7241e5dd9725f8c976e45ed7a260601f50b1c58cb282b922e1c09b74a59efc736ace4a014b394e39c21c86ee5c91676c3a11b11bd3a187e601d6c26d694a973d4714e31240912f13e04a788fac5dafc43ffdac102943d838890187b5b683077b52d2f68629a5ccf394389db68cb1ed0f2f10cc3c9838599134d0b4b0cd572486e10145c50ca7974de56bc9d31d47c95924f1c5e181050c18f0d9c38ad50ff1964f886dd04f826b719a1e3fd8d403c03d41064426e8b104b69c4ca63aa3392fe2262d1a55e0e55b2933c7f4c88883a3a0ff9cfaf19c680213e694fe896be24224452618eb087597ce072342991db07af09cd3d6e70daf98de45347895620b31de76ddd6916cce559b04889f3ef87a51ffbdf94f9a964141cfdebd5e0cb4d61295d8b21f6d65dd440b326e0581656e166d8cd7a6d96bf4b12cf2a32c062fa45cff524677c3d3a18fb6451857793a6b9a95a8ae3b63b7f4f99567fc13c2ed8f80305c895a3f902aa81e8eeac998cdcf0e16c003435f546a23d4a157fc693d85d6e055b2816ebeeeb15ebb849c2f3a697c31d5da2f68723fd45333b18e76fcf20653f4af4cbf29875c466bd3114292b0e3dea4faeede90c08377e6a18edbbce304369f7cf52cd7f6387a7f7c069c0f1b7c52a7622da7162fa850a8c1b5980bddf2cabf0415d7f04577872c3401538dc26d4657efa49d5b55463a5c2ec59bec76fe872acef9f307b2f186d988b14833cc3d7d027f480c0177fb5becc91f021c11abec7b503e30e4b0cdb8da69c50137b2e3c590ec63c322d67ff800920618a2307f49cbe2b047486db2e368095fb918000353cddc87c7716a882f759b76c117d02f8f0c74ad0000e13d9a51e3f1987d718d8ee982853d662ed56fbcbc9d4ae545e51608297cb49696b3ca5b95ff10be484dbf868c3a248a51e0f274cba7b2bdf2ec0d0a6d7cf144951cf4a6c5f2fd2c2ea3aad28d6a4e1a792b7b45c333f006498d1ef4d3f065c29d45503317c15fd304b1ef14b92de335f87bc27f4192d321192c4327709ba2eb76fcc42d7daaf041c57f5753cd6fc2be18a6d0020f53327838389e34cdad4ca8e23ead0655089d2ba51b7c6d6d715410e4820d3fe99be4ce6dbf8cbb684ff83ea990d56235e0fb5d855426111679319da45dd3692c4e3fdecf273684626c6324ef18ad14084aac88bbb792628b1e36f7387b6069a1204dcb40cf97d424c7e174c43028bb9c0efaced0b6e20934fc834eaa0ab559f5b347b6dc426bd6206c3cee7b310364afb8c5a6f825ea0589d36dff0648f9557e37b50346c3a509ed9a527e5a8ad0a352602bba53d0e0453a531e54db6244514b66fe2e6ae42c4de0dca4c164bcd314ca98f02ce9575d8927178bc716aa6575b8bb064dc182b6ce623abf73169072243876741414eaf4d4c09b99462d82fcd5e2472820ffac3831a939df0eed284d6ceab203fffd9f39072c2404a74ec869c8833015732db3c0a45adaff410497cb66e44968c6a7c796942945818b821b1caf4123fdee6488fc4e02da41bb031971733487c394f67ff6a91464cd62b578e7f85845008f9c37ad9cd0122f294fbd8645326a9075d4cf23d21451723d40426cbc132b01f71b149b6da6604c6722cc8cd15f6134f83d453809433d8b0d7fcba397875c89370a0022cff85ab7e0505f9812cfd3483788c85ecbf4bdaea2cde12676f7bef610a116622e43e8302e437610b17590adabb5866d1656edcdbbda3eee6e0307e4ab540ff15098bfbcab7ed4482a8518599a061cb713ab391666312f723d4b1fd86d5d392c6f4242559aaa9bc97b43558358e8aef9c159c4886cf218e931ac23eed443c038a26febfed90af1c1decf8d6580957fcd0c1dab2b6ed612ea7439f102751b8b9264122c3a37408ece8a53c944edb722c7fe156a8508452842b0aa60d44bd73ccc16f93015a2b8c9b745e171c8880a25555972561257f296cd82946316b519fddd0fc7cebac96468df57084e8c11b1c5d621d2a67241710ada28a230051d88322ecc0a8bb90422fb41ccef5d31dc14ffa9b40b147ea526606f6e5d6f0b8ae937a521379e18490953960071aec88e41957675132ad2a9e2c8c3c9e659ba517b53cc0d60eb2422e8f4fb8c4f24c6069cf168e85fd353c081ea21779646acbc7e58283c48d343c28fb0620b20627cfaea24e9dd7c6172ba97b9a17e019e3ed35daee55d281d52360cb4c417753bcae80cf3075b971d3684056fbc2fc85de6bf4e619675205c81fb976b5a12589eb51b503deba50ebf1b5a943636cccfa8007accd297666cf96b4ca60e6d0f5bc6a235011c0c283f8efb5333ea1cd3a127160631c96333a09a8801f5b4dd33165d09b9e4277dc25b800d836008aa4a0a016ee86ae58da70b6a898f316fefff340b977b30b8908456ced97899f965dacaeba8d335730e64aefda4d3696b2b3adc9bf213b671a8b5f1fe52f8bbabdd32ca6c7e3786d574e198d4b189bb97bbaa79b6cd397da53ff1d083249da84466ba39b43a4e3103f36a3d185de730249be5663052a1ee275da1ca1aac0687314ee8a5ede873189b4c6e0f7508bfd7b21ec81a3a782a51fad3fd4111b619eaf1cf0feb7b032c7492e9e6e9f6a69e1c79628bc225ba52992d03474d1256e5b8556e66225347d9aa9afaf55af09db786e991876a9fbbabaa80f1426819c0be626c9295abd773ef8e1169ebb953f8ac4eeb3e3a6ee33f0d83a87f766d4fbbd260bf5d8128bef12088b1b104c8656d857bfa48c372b666e76a442f079e2b56f208d8b77760c19353facf7f3d0cbbe20eaa009f189511f312239fb2992fb404d3ca90bc7e51a6b35d5757a6ac19415fd9da7aaa8c91ef5144cff5a7ab0d7a61d92219056585a37e83e3e98d4d09c2dc94a47397eef54b9813f350a93a91ec6c332c279f4825a73f62015beade14cfcf0a6713c388d154aac896674699cfc23b81d4d50bd48e118a01d19d29cc10e4a26518315927192417370c54ba3538f6133f177e66a4d15e3eeb57ab85b6e30ea36564e9248588366290a577a759fe3f37c876367bb70ce8d4ee618086623e92778f1f08597ea9d06364b71f7ea5ed00fb00ed0988885ea01453c8b032984a3597988751cf5bda9df80361abad9472f4269e908765a97484e7187f42e239e33ba47e22eef301a433a5b81f15f23fcde5470cf32b1e6568f66825a1a07b750887098a08f233d7ebcb37334a0916e3f927f8da5dd2375946c78e28628a6263afd671a1cd60aea208b73697d82244a7ceea6c7fdb7d84394a34a31c1232836945ea439b08b037e1c9a385bc68dd7b2e7a3716e2518ae1e1c30ac606fcb2d9f6eb0628284da56f4264e5e3dccbaa4b0f3e5c9183ad4fd67ba8cbb7177a77d4d451814fa23af485b5599ae299f36afaea122f19c4b18c85d3fadcd4c8ce89dcfb623d36e3aa239739401c2acc25559dc87fe6487d66f05144ad4a7f545d761d80622386387e259723bfc262b9824b5e489093322f01deb6540abdf45d6144a5c11c89173db618598d9422ca2a54be87e5693bc33a881f49a38e5ecc50e5441a28867511aa67f067c5ae1dcaf306230f927f76f581a66293dc25f0c9b66e7ac8a8da0a82f24c8339a9ed17e85535fa2d73b0ffafdc2b48f793438aca10131f1508cc4866e675e8ac32944dd3c4770d74fad6ec9d959e6473ba5bbeedf4bffb1c81be696e23a2796d9543f8d2528d8cd2ec7232ae5f77669a7aefcab22835bb6ac9263864304174fea0baf880ae8b91783fc570426fada34e78d4de976a6e59adb6741efebb7de1bfdc05c2333e4b3ecb4660468bfac07bd2c26b02661c5a1d91f3a0ac60f01924f344dbdc98c657cb01407eb8289b9ca7773fd8abc6c6d1f911e37a06f23148ffcf1d12e025a48be9a0c02f00b6115cf47491db40343de7b246bfe8051c12c896c8d29639d81b87c947e44f080d2362be0e05f4fc16ae10962cb774233ab088e43345d1fada95d52b7afa32b64f9f4adf7a04e9d969cacfef30a35361d4ceed86d2ae3073338acfdf22ea4678326be78eee3ec42fb4844680e5286a078f1c196d13ad7a1969494240b29f39b0a74f621cb3b3061f95e6a875569fa89e7017211c6001d97521fb31b81e26832940a3e4befbe9e1480c16ccd487b451474f794a313582bc2eeb0cb3b7a57cc6db45136e6d6939b2c1dfb4b163fae2e497a290b585e9286f2e0cc174906557504b8c53fc37e452d0f8ef04b596617c84e8950d10b50305fec6c8a21e4c10b6be7c8ec9b02bd0b78de314b837a5da6c747c065b612e4682e0f4c293acce9f64a65f45942214d4a8b91f11b35b28ad31d714e9dd49ca55239f66afc21b02da09de825a010cd79a05266a512eb5f0703b3b291c4ecb10f40ec5594fdef3788cc89b905ca4601211425d7f5e1adf97d8188a139957230156ed611eaf80c670e740fc734c0d115b070ee39374abb7882803a4bc19ada26f6f209f34cdfca93ddd887c83bc8a10d16d8b27d529781ba4affccdc982534106b83da1fbf66f04b10833e03a8d22a9b1f73f2b83a402796840ed57b4e2ccd272b6a59567c47a301e116112631e653a733d6f2c38ce2b6559174810aa3542eadb932fa20e0e524f26e065903562731685d5943786f806e70e9df671d5f4d31b7ccccb74ffb26695f110685263b48ef1c1952268b95f9ff3cbe033a855872fb76ee68d6cc12777ee6a425a9dd741602c00e74508b5d6c946a17ba6e0ff84531e6f542633a214a068e252e10a8af4ca99dfe9039d2eec94029819b556895992b3e075bfa2edee60c1cf9203147ff66b563ff70b64c3c582581f385c15d0e406ba48cb5f3a01d27037075aae4f83f9ca184be18be0a51bb0a4fe7701fa6883146af538415d3dc899cdb9bec7de108715a3b19cf353d059d8f02b295b5c069df5487c03840195e664d6d42d1609166a3518d276fee2433bd951f1ecda898476b9bbc3f8241d90e2647b7e55f694ceaa2b4c9a23b94e546190942ca68e88000ac39a3b88e091bb881ad07abbfb1751325ce56f4de9c80369f62e54ad1e7cb5cd3695804f4c98ba46d79a325cb9069783aecbd667288686e52ba8aeda7e823d42b171be83f3b9a07ba01f7aecaa2995fd2cb1a3ee5b105c0140833e71d10b09f539b248a04931b685be2a05bfb36c54eaff0a617dd49b08dff21afc8d0c0aed5b33fd5bc83bbd6b91b8d20b55da241ab4bf400afcf028bfb1f04c2e44b1af4368a57df42eb0475b5fd03ffa07c6bb80438fe75f3e051a16c9b18a63c6cb616e2fdf2731537ad2d5e5ff3cccdc315280e41643ede6f1d46b774ff6c19a737f586e75add76373cdc061f6a5f1c2950a3465af1a15a3b8e27f8ecd748148889eb85beee5ff707e38feb1098b9e21f53f5b7736dc4b0394490e10ec61e90a1fdfa54db8577c2d3e5923fed936cfe5a5382f3d9ca6b3481b45b56ec98c8b912c6ca107e59bb59884fe00f3e1a48126c1853934667a1c2b8015a677ae51d5d6c06572c26fc8d4e1f8a835d4aca1feb1b2e91d98b55a56f07f911b9f59420a5f3e71dc6cf0685f693c9358967beb7c8f8a2d0d9b9c591f1acd524737f94459d1d5253109ac98bb1097d148d2a2a5aeae99b36aa184f82e6c6496697828d1fa29d8cccd456511041d1a7eab2c53ac87096c0488b012472489af41633bcdfe40bfc9d25cd5194254ebe60e821d8c64133af2d31eaf02c5d276504fc45b882703c2616f9f1986bb40e7cf87fde71f2e007b00e210998cbc293a0a575e3381b7ae02ee8b517885a6af21388dd4c4f5d8f4cf3e57dfe2ad5625f40c543aa0c26f76586ce3186a1dea841d3e9039f54dc80408b563d214f40a0fd1adca4eded951049ff671e5172efe4b9eea035ed98dbd6346f8b5b61e511ce4faa70ebb167739424f21c405c1727daa23e4e1d3b4db5536f9658b93f91bfe37b94d8744107d819aa22cf2b4cb0fb8fc07a552f90b0c7f3bc524b3eb102c5e4392b710e184469119ec3aae6f7b4b51ae668f6bad7ab5c7d187b9f4182cf47b05dcabc4a4b4d60f825de0fba1a8c05c120277a2a0143686fe2f67e32f02d5026d8ffb342996217474941bacdf4a5a1d445412011d8def7e4fbc56e72ba934a3ca3cd78f99e59a373f701d1167722ac1cf4a7665d880790a02f3903310793115c7b03b0942105e124f948e8ad8f5160ab590fefe298f6a567d271e09ca20138535adf245ae669dc82e350808c7d22e5dc90c1e500f4b374feb0ad6279560bfafdd11a0f99d00e41731bf01b99bbe83435660f97ad1cb63913a21eb01cfa62aeadb1dcd157b9a65806d3273feb11dfef5cdbde6dd3471a22ecf1cd5179815f38ed5c588bb942e9697c5fb07fe081abe98f9857a0426dd1179439f5c4aaaab00f7cd2a1299c2c099507cc5f8e9cf60134cd2495d0875e09c39e7ddbd5212b8cae7a465328477f9f3003d05065146102e81be06d87949e1c4958c425ccf980c06058ac630c0e8a943f217897152a5496b30422c18cba89bf5d9fbe29e9bb1165588376fd8e033dd2f2254c55641ba23813432c75bd88b5f8cb9460f6bb37c0a1ba82ed7a10099a2669eca2e21733596fc6f49aba52143189cc6426825d9741afb28fb523c6d00c620043a5dae6d760a87832c4307099497e5918c6733b1776defd27f260d63c76627612284fb39cb28dc17c1e1485994e9a5cc32feae3a095fd442f914dd7d12b71af7ed989f49726a4920248e15aab880b1d0b63fee3e0f1001e6e6aa50801f45c167429e3c7c77e6c2cd708e3e2895a507f33ee06141ff51a8e280511099d5595e62be24880968f52c3514d99c022e496a11b07687e62649b9ed747faf164c4128bd6b034f715a36d1515fc7cdc340e283ada80661f430f846dfaeebe1d18935cf76092339bfe8a37af5c1836d7c7fbfec96fdeebb2a6f6a605a8bad552625bc65370038f98d1db7662e8d75c520906f9aadd887b70b8f385ff134fb8c4190325f69f7cdf7c1712b2c2640177f65d25dacc8413f78ce1e8f43f90cb7e6160fa3f672778e67a0eec64ed3b0a50cbff8e0ee739f265cf8a05d0b64f0c000eefc5e972122e779477db03778ef764c745fb05e67ad37fe75efc887937369bfba3f4c2c66f44fb20c2867ae1e6b36190999fcd651ce2a0f5a4ecfe25ea0ab6da5d1bd4855e284173c251589fcbff69e00beef369b34cf5bbde61e1f925b85a4474dc9d5ad01e4656d9b0b77044daa3cb1a5b7b20fc06168530c808a32e0bd92d83490f9b2d2a3fdb4cb36b389e4ead47620c26c505bc2b1353193c5559e2791f7343d2f393ed79d522bc9e2492df2a6c4ed89f38056430c920ae7e178b7cd8f090af5ce686142135d003eab67d9441cb2b59b223051bcca1b0d9caf4e8d5f8365223b96a759fb9c3e5adfec98284bb65b8c16f350b65740fd8b8e4e9306d3a681adbf93bce895dd5d93a606d9692606353cfe2b8e4021d25a8eaa93bd3a6cb7acd7a88fe99b6993acd3edadf247e53bb350cae3f0f7a92a69ea34e9e99ddc400926258d1777c733da96ba3f25f03c06ba95cd197fefacd3e25e9767059919f95400f6b5faeee0a12f9b22ab86fe7de40bb72e5623665866a52b296c45ce945f8a752427a4822c380c956bf43cc8eab72513a6bc9101a4072ed4773f052ca2700976c2c49cac31c91886e22970dd36f90c39405add5121edb3cd92c2e91a995e91d23556789b196ef8d544beb82bd445144abd46028f737f9665282af6d71fb39a9949fd03585ad6ebdf2749f43d3898f962e2e163411624444b6c98b2a1f9255bd3416588db90484028c4bf4c040d75c8a7f0a165aef8033cc6e7ac1dcb6373d760caa2bc0706787ce3f1d205c7e39c1e00196d6bf78150df5ef15c039aeacec0a6296e2b2a081bb36975633e2d08c577149b9047b123612aeb1f5aa6f65c791d9a52569bdfec1838dd02bced5a54e7cc2684419f0fcd4b521807553f048f6dcd626e59033bdb236d0ef4a7cce623e06c356f2e2f2261632de1fd738eb9520fdc1121e7cca5b67cdc5eee7d4c459e2ca095f7b7e5a6814bf9350348e9d9ebbfd92241d8832f90a0bcccaef5601f65db203bee23964f5413bc102c5d463e17e06a004b15dc8b48d2bf3fbb18c9ef4395a2b1f728d519cefa2193ec1b952d14e00cf4afb1ade6bfe5bb1bec48f6e2c236b5bdf8d8c223aecbe5fadb9b4e3fa9de970dfbaeb256387f79735c68dc2cbc2899a3b13bfd017a60bb3c423da978d8ad3f9a17fc23a55af5c965ba0dde0e320048dce1a499c094b04b5098c991a4427d20468f9caac0e267b27855454df7bb20f7353b9ec532dc3e1614b37aabd9f5dad89ddcc2c38654098d67f73890f2c92e8ac455a8ef6bce4b530c4447581d43613d451f07a5066d0f94fbdb43df8a71610e6213cc3d917c8fec0f0e473bef80d8fa1a16079b90c34263adcdd53b4a972e4ca9fe5906c9c0871dd5daf825add21ff37111e038c21886b85a0fe249bba8c5537352f8455949a3d302fe242211602c16188fdc23d03287884a57371f16161b40c6e19aa3ba6ffae999211a4dd352d80a13e23afd5961e5f498f1058ae36e992fb52e9fd536a408c97a5466099a2e6eb9d268c710dfb3dbb96f3d06657be77c129b07269c15992752cda65d52ba1cddc731f85b7e190779a7c40083829bdc4f06b9c2882d4251826142e5c4d54fe88bf65fcdcabb1ddc0641d1bc706391b7571e2680c2b0b725cc9020be3a5064671224bb63af9b47acafc46db5c68c61e1855d70189199d79f397f884a42c5868b5007b036f56c3e715af1d2bfd9dd81717937cdd3302b98e77773ee2e10714677e689469e4431493da179e7e3efde27bab58252f3232bf3ee2fdce800336c6b801af726fe891d5bd55e0ddc9bcfb8941ed91af73026f6dfb13c4a2d72cba444dfa2a88b149ef62eb6aa220bd6e6ac680ae9218eff74c1a3f4a03186fa66138290c7b58d0fcef633f18b1a5d8f285da5a0bf3b778a4557ac7d7230c9b59c38a16cf083f2e5e817e8a9337702e37ea9254325ad201d57976aa86776b772379f95706fd06d488b59d092176b81736bfed58cb88d88cd7f6a1768d8b83c73687f2d9fa59535a27e67be856177cfee8f5433a00a4dfc966dcaaa072799c7447ac7fa0f99a24fa2c0008978f668bcdbf7daa6e6b3638d9a782004cd22597832a19ca5b8d48544b85b1bab3c7a4d881449a147ebb2eb4b31e7287091c539a2eab8b448ec6ce3b46e39e6f2aa5ef018c7b045cfef0b3af7916ef0b6f0f1c7b27bbb66c12ea69b8dc0d011738efc8c6a74704520c0cd08b725caef5cc8e674ad027c9add33caf63418b01776f1dfef00042b36bdcc6ed10f719acb3aacb157cffbb8e0747de9ebacb2dbde8a224061972b10fe6ebcc47dc506891ea49f2be9b5fb374c767377dc18871ba1bbfdf648d4c1258a1b669ec6b4708460904ae2ab5d4617190548afdef2a31afb618ba1bb7722d7852bdd064bf57e703db06bab265583586b8adf3cafe685c2e5e4a385a3f13869871b21fb2a1ff92c8cd93bd3fd1fe96e6e9fb625a055a0e6f57c7f03e4ef242d42d7c2c8faa9d32cdf8c5d10418cdca75c816914cc140c82a71e8dd05b3cfc936a1562e2347e607eec10a599a686d5b13994f1221693e3e255fac59effa1e653120b12b382f71423beecd14fe4c85e6542a567d021f2beb4be20567cc7764db9691dcc45b9a3b50d7b8c48a2c863eeb414579e87e0577152b28d602bacdfd0441b620c39853040c628b7d4013910fcf960a6d0cd5366389ec8ec033f1646faa7538c940ce3e581f349957ad8f85d98544adda4afe7875959504b678d033c88a33d6bc2679818e19a0c75787acd2987302534c59504d7a9b546ecc401f2e9a3593c95fd48f250b73ce33854c9928d9db677b0cc206f91ba57a6da5eb96488fc280ad00a7dafee721318208c616ff82c0cca5b6350c5708ff60e3e9c12afd11ae060dd77a574469367d3ddb8bfc715e2e88d5814a9f7021789193995098cb53497be2e5f8a5b9f1258c1f1e31b34e10b210e0fbacd389107b6ddabd70da525c7942a417abd95d9359e44d126b4e1762e95898032752d3e7f06cb8df3e751ef175481a519b2bf4f24685cbfde636e89971dcc52795b39f4bfb21ba4efa58ed18cb1876eba6b7f175701f531c5d5c5072bc5112a6f09b9836743267d1e8b5c13ff4b387b462dcebd0266f4f362caa12db7b1faf34907e2db3427a9750a49f056c54559b98e0e77f560ef4b2674f4c6f959d1c4153aeaf9e72756a4d9838c7cc3053e19fda4346c46fb7e98cd5d658fa3b422433fbae8f218cda9966312a4cf1828c0ed8e5d567d2e3855f9346a0b364e3da877124d78d727e3d1b0d2efbc5c894bd5ac65ad0dade2294b8e39e1d81b1d576c27b86ec911fc7d528df241a807b22c75e02bb7d285f766f21c19f7f62ad00b7863b7a6288d83b6088ed6a4da7cc7b300fdc895b2a0c0ef715154b06fb696bdbfa75704cff31590a48dfe6e58b0b985466839d965528a77a03a8c07c12723f2a5b11d5404776b15b956af59d67f08f33b15279a7af30cc0159be61f4ae065437c08ce565431348c941c56982d544dac903925ca362c67986d43eec6346ee2e18651befd0cc1260654e75fe98dc2742e1d07a919c28fd088efe5f8adcf44580c05a0a294299210730d84ca8520787fc56f972c65bdbe0366ac572ee7a69158d97301736f7d8f11e87cf1195915c640f578f6fc3a19908ebafeac0190315a9fbf900fdd17d99e331b8b0a0809463168887107e2e832cbb809160c956e86a62c55684625c8fb29a5f81c24b474cbaf939a57116c488020254163ac04e541baa07381907fa91964f180e95b77ff17a9ac65cd1c36269214c149802c307e08e4e864ffac145bb121bc440ffe38f3a9de83214e35414bbae5231e05aa85209153a03543a00a04b066b5787cf7bb6d80096c806b157537f0be929246db753bf3c0e6d1306e304a67f934106eea4c5a52b7b10a3461af2636b1522a00998c15d4c09861470abcdb71fa51e1cb36c8aacbdc8f22d77566c413c19a37be77440f2aa7351457b733c8cefb363b157748daf1de6210cb31f5145bb3a71c1f99a409b54b99d222a9ee35c29e1b600b7f654f55abd68f1b56fbd00178812e137e95c1c7fee61226936e073c6f162613351dcf6b31e92952c0a5a7190295c0b9faf306d843e63aa57cfcda2faa3039870a6f5604d59407a65aea5558a382ccf7d34f9de0a911828cc9a90699189d84ede25da07fad05914854a337930098cebd5d98a968e2f3dca9747f3b576b3ee5ea0da1f9536d788a6f91be6527f935dc5286d0d497ab547c1b2daba699ad8f7566850c20649bb59ec272aab0d22bd5fb7d0e80bd20f28d51a3af2007048737d9a51b6c46c02568ed6d7f7b0f5c4dfc084e8e34389625036501ce36b2d61e30ef9748f6b0ce0f10b2e0ba2f2dcaff13a00679ea9802de83a05d352f04f216972c38426ae335f2d89a03dd6419c53be9eb3e9cc1b2a16849bd209d97aaa7ab3788a875e77ed3b38d23e074fdf6615f1520e79a8c67bb18650a4b631ce1a7ff7bb0c5d8eabb4a905606192ffbd77381723ede1b7b9e130cbd5a31ee326ef186612c8e55bcf55b608466427f84d9afd35158c27935aa9dd47dbce611adc4c97b2af6ea04b1457498add0b2145a286a15338d042d4dd2a9d0cbc93bee3d9528ac3f5e8b9e10b995f57ff5d1fabc82d61704e4a3a982d3106c787497ee615f83bcf11aac707dd844170e739096a80d6a5c02c5120bc76b424859827afba44c10bc254f4e972faf40b653c4d412bb435b4093e7d79c998f1da7965dfc5ef8d061ba30bacddc2118c2c56fac4abba4366c4a5a9704c7e70e54b3e24a9019b6c5f0e13ce3cfb276beb0bdebc106dab4c41aa80d13b1ed4b1ade149a159931e1908071b040c83262db88b76c4bab6530bb9add9adf396870911582e32c1b1a0d59e8812e910a01aa0a3a9c2a56a1756ba48fe3a4e924670f0396b037b2f77b2be16d1e2023f639ca267f63220710949eb17efc9d026eeb69f5be29fab9c8ff39c3978ae186b2b97a2334e29e8048e4d28da1e8481606f8543767f9490528675681d937f68c6ddfd5a91ea438503fa3bd4658a0c08b4f8215f465c2f57d66f84ef601a430748036b1b317780c09b1236e42a67e5db86c731a711ee198b0883768674a74d22e857d97612fd03bb33dc9e687b65583d09d706bb4babb372dbeed2bac4097f62fdef38278fe4c994615a0da657fd9023d3215a67798942ccee6f8b40eb901802aa387d43858d7b7aba8d3480f88598aa3074b44e8e4cd0d93b1a42ee12b49d015807e39dbe4335fc182149bff19bdea2795f0a8fe0da3599f9c89ea77e904b418357084e8d7f1381613f04d5040f47901674909687daac0cd90f12c6c016888d9fd4e8bbd5657401e6d9de8a95729852343ba4602391b4eb3c3025a0bbff39b5648bf7f6c8519b6bd97ba9d2ae560e918ea16bdb6bdd889c924218201907a4c525e2980e5fbca00b86b43587edc391c818b73a9ea577cb98a3ef2c0db63fb70e9188a8c4b06ef68fecb6f7af07e9a6e490135948898e5e78fe07f7ef6803ed88e44bfa105d8737fa7e7758664739ff6d76dc1a6a66e3c2d89eb133211cf089c0400e06920d9b81441a994b40a00588d437010719313ced1d3e2a70b8c0d35f104d2023f177387365f9b2dd739d164bf150f02493aeb69cc749e2ae8045c4ee8dc552c762717ecbd3e8509e61f8bd957800c4224ea535020e996b3ce4cbb220bc1fc2347cd48b0c1c58ac6da1eaf32947c862a60baa3e60d1a58612b534197829b2dc62de464f2a1cc340b23d1ec52e76e9668ea7ccfc7aff2f356734712dc5b380567ff46a8a241760d1f09e7971799e91facc92d0276fd5d64e2c91fa0e8c31db56a592e37391730f8dcc2f9a2694b63c506668165e343e59ea8b30be8041e8aaca538833c599bfeeaddb2205decd8fc47bbdfd5aea8ff02828716b7c6f0ba64fb9715d1285ae6790d73f66892a50625666efed5910bb2ba744e0896e32f2c7825c25a5aa73597f7a5b6a62c72483075985689ee60dc43a947e26ef643c490dbb5aa6e2532250e08e66889daf27387c10019c7b9a83c3b011655ec9837aab1e3cc7104035c70fdbee4c2c4f69f748641a33febffd8f3f8d2ca019e45a4ee05d5e9af5e0144ece422998657ff71c3ebd7b0f78030c1e402b3a172d6026a88df408a1b88212a49d5aabea15017c3eaada36bfea3115e513cb2d40907618f6bb446e79ebe09d1ac8b8c65e6cc43d6818b1ade4f86ff6a0ff332f56003346a0030e247fe4b2273d49bd5aceaa26337b687d2828066190d745bb76d5f3532fecaa4a7c2607076401ce5d645783c37a637c40971242d9ee6b11984b0ab8d8c6e020c24901ace391e5ee948abb911a7c5e78d2d2babb8c09e25f7bdb97c0fcf6c18cdee054c96c0b6d7ecc157544266ae889e807594690a816339200a8a5b2860445c0682f1dd82f9c9f76891b7ae6b87884e9556814c1fa7edcd686f07a37ff4bdc7183b2b2c4196f4f2122ecc9d8e43befb7bbea58fa4bc448abe1e54b212baab8f106112e34851b3e3c1a10b2198f0f61c82754983f0851b84dffb15c65fd8a36806b5f3267aa8c3279b906b22682830182e469d09e5104d77c97d13f30e277dcdf84f6edd2e6431dd1d44e7532ef16158ffffc41040b68cbbd2da4ab005f46ffc55d7e7dd620e8c1af450af5fdc8caf3d6c17d4231c2f498596e3ae5dde9490da326ed4aa1dd4b2ce80304c7623600baab169e1fead1db5230c48a83acff7d467345948fa4d4454d17ceb4cd19152879ba494fb10da4ccfbe497ab5d5a1c68e671a18df61df244954808154d530c511247131b819da842597154d8b87a01287fd48fb52852825874c395db7c83187455f634822d28e4ac2e64c3e0a699baf11e76a3fb710e3cbfb69fc4dd89083c54d0f86f3a95f5b89ccb48863dfdb9a4af9c4cfa2fd597b3764e0b5ba66910834f399fa0dd20aa1ff36da1a0898c926f9dc450ffada923f6a8dc56d1bea6c4fdb887d52ce0dfc8064db880ded023322d522c44a24762cc61bf7b44bec6068708f53cd754fd6f12a40b70a7a376225dc9f83f2eaccc4ec6e9b470e71b6daf312f6fa7610374e96c80e4d13edc38ea62b8b00f757b8ccd39576cd6cd2b6784890343340acd3f383a77da1068d9f24a7757a7b2ba59266512070905989d34e5a53f9f2dbef6eef212b7d8cb7b4ee408e62c8e3b4d4d3e558d434e268f07cf15ac7ea701449b3db2ec0562baf81988ab5571f698cc9a9de17d93acd12893c6aa3e84edc8054952e33dd22ed5fb1301130a321003cb31533b923ed248e45db88f1ef01ab5fbcc05935b551574fa18a436f964303a184673dff501dcd54bda5848009e64d05fedd6a548160ec511f55baecdef95d343e337af572477700d8453346c44d33610fc4f9da31a98f1c88073ce5e955c64597716f7fb8a91850a3c5e5ee2e69128ab0d72155105b4fba09e5ace48f1aa43e73f0dbedbc297c7f77aedc1c599c140e2a5a307a556626748a11abdf0ff080544b39985f183c3845ccfef2ae0c8b25a2e303d7da8ea00079d3110df1446edaa65ac36c3482cc7c9e5b3645bab57249e2e21714a89260b0cf7e60fa9da55c50685fd5c8947188e165ce49a0364daac80b36a79a363ebe62806d363cc8f8b6a6c8b707c6986f3fc6890c02bd45ba6e221ab7acf1a291f80219d24c11dc54e949cce25ae8289def4b2bfcd7bbd454cbfd786ddc2238b1de7a4cbf5b22fd56531c87d8ee2cc05aff42d72a2fd9a5bb59bfa76ad8370f82efc5eb76983dc7bc5e77ec956ea6a402aff643e746b69ff57bb33690e72c61d65d2d18ad2473ccc81cf18d6540cc9270755d69a599866c2ee2f2f886ed4dbc5a3c18bb3d0a478dff4cfb8ce7492b6a8364356f16179ffb5718954e9786470ce692e60da3d6baa8d4f581b345834383e56a2579caadc3c2b7029921999fd7578b4b9b71cff4fe7e1c9602015521f039201a903e0c5b988c2e8d351a9f6d9ebf8df282a86be31364f721c213e1909fa9bf0c286bc072779587f59aeca6144317e4d803d4ba145347a82555415a5312e350f8ae5afca394875b2e412f20114a85271ca94309a04bba80e176c76fcdaa138a1a3531446ea5d2078a91ec7be1d6b21f323a416c41259f2efa9432b21fefafba8baa2d8ac38ad36c9c08adf9bb4895af73e7ad9e0f547574f70f69d8af5d546778957c8937534234454d8501f830b2b4d70c46be78cb0f2c633b66ebdfa87b6715da608a2cc00715c7d6771800c7ffcff157595f7f537415aaf7bdbf6a8ea12e6c2ce19392438675ceff87b3b50c3af6a376c4d64d6c5cce01b934e190af6914865c7bcba850a29916bf12f478f448964dc1286e35e665f3450c4616d69816f378252db640272d32083b84a2bf444c35811f6fb10c3029ebabc0e707d7360abc30d3f1052c07617b7a4ee059905132166197e52f2f6cf8c7f2f7279e199b16720372f91729523c23cd566d3eb8ef1e2df29e38db07cb4ee3e00ec5ae8f5541b5573291112d03c7f24e4c17d73132de88575e20d35eb2e251e5eb6e6cc2af9bb6dcdf9f83dc53d6baf3c1e8e436b33c7a6314287dba6d58a57033b5833dc0a02eba69ce68bcce78466b8aeb587938cac66d1ca611035f9f365926545087fb91ff66ed6da16667bedb87350869b3e3bcbcfc5e564b265fbc9e25c762bc747eb09d20741f552d1f5e1c2142b5d15a4e1bbc1373bbc58ffe88371cc13f79a84af2a372d0079edcf0a69b6817d46d533047d0904583e6c305b0c52955b4d4f6d40a2c683356a762cda061492016deddc0e0a712ae8417cfb2cc644806ca02a89f3f2531f9072e0962b3c18ca8b74d9e46048831e21ebd711b8259d58bac275529316b2c536c19c02d93dcf3342c322cd4d7425f123341a6c20bcb35ecc99f9b339bc42b18402e9c55d68305a6f02e6139af56b70cbbae1331f335689535819b75e5e4abb05d630e06d3efa96b6810ef66ea944f33fef90aa531d16eabd8012b54809319ef48e74d32efc1d3e76d086d227e9c1f6ef4ce1e00d83decbe8b6c4d200396c315747ee9744e5a6318b08371df75a8eb616f551d3f6f442375267c60f57ed3c741e1e41cdbf43945a1be0699a3ba34a2e016ca8c2486b5b54cf87675dcf7b35059d7918260e4f2c8991a902c5f4f5ff92c918f252ed90fae0b471567792eadf3764c9050b1be0ab57912c31225dd88b9c04562fa232e7c92a158171e72857ff3c3ba498795b182a9b1b97c70f7848059e5be06d526fc16454548fba6aaaf2d823039743e89d6b4c04bc84d0eb37ed5bb602914e9d2d50916a1e42cc186ce61be77af3de28abcc1381c642f0de837d5ebdf68dfc0af83ae252e12c617c92e2abc756d61943c8c20f8d56decd7e59a69210b308a75bbd6f93537fb285f6c241e037b0f069b83212d756268e4ed4e5f8d90a324eaa6e4df54ebc31e65889ac562b60deaea3a07bda79e0c843f5a48dc9d19cc7bca773a160fcda9c52f5cf12dceea829bdb01a7234629fc5aee112a7d500ccd6ba940c1446e0d8920cbe569ad6881b0a0d37d3427420b710f6e89a78e65b2ff70b3a6b1a7bb12bf9f2b8ec106e42558b8fa82bea3b36287add4b380ff653c59f28ac6a2c2dcc4d167e99d5e3e11f914348f623367e30a3cc1d3f94d6bc6d6bab6deb8e07f5072ea0d0a52394ecf1708111f0b483eec18f9ede28009f0d121f34e31d126c91972063be31462460814de4ea2ac591c43d1bd77b2802e6d864304d84161e530a8043e98583d67c3b12fd9bf0a0d4c213d831712e62711b729173b0f8a77d7e68cf397673eef0f7b31744d6ab01570f17cb636bc876896f6cf55e81beee3d1c48a4cfab5e8724ad0fc627a3e02193aed4aa64ec799290d06afc738ae81a2a301bab555a8333260c1eabe84be4eda90a16280b99239e3742953a2c12c6c654bddee92b04977fbbfe5cf79f8d834a5795bf5d3e5227038b69f0e82a49d92602c2c8e24dc66e7cd272e51aba78f797047e739889ae7fc256cee3c4dcab5150a5aad9b602ea8cebec670c9f8af70cfde36cb0242bc209ac8192e14d9e88fa53bdf04f1c69de3e694d1c9468f0875bcea8be2a135d8746c6dedc53b3510b799585dbbf43543a2b9904b6600a3c526b51cc11ff9f48d1b7b15ca05aee2f8f1ae13c7a50158893f75569870f41a7736c03bcfd04d96e3b48be8a45a22d0ebcbc9281d102d04a22b319d9ee424bbc2db0dbaa3bed30ff04711f2cdd174aa73997711edc8a0ebe06414bfe9f0eb938f0a2cd2a71a3647920ffa07394cdfa62898060daf7be206dec407cf7da5df655aa32cc7d2cce906f28fba241ae7be2371f56fd65253cab0e19c79ae7144ccae1851261b29b19d2576e22da21702fa7b0deef6590060fd3864490b90c7ff373e9cd30d0e6d611df50408fa46a8cebbffff6276145f8339c3a7f62dc02f473bfcb450697fb8ab45c6290327318ba1a34c7af404b18a1571da248ea52af52406d50332a271c613464815fd20d4f88df3472463582b772c71c42fc236b24b61111b150d3a17c68dc07aa76006b83ded4fae0ccf101c5bc874da92c46d3bbc071644bb8fb46093390a3fde8950009dfae3d64da6bf9088fe888527032abdf97e9ce0425a7b707385b54b0fb03beeb47246166946216dbf584539379ccfb76de6096a18df8749898b195ba570299983cf4104366e1331b2a75c3ec8878d0dc2101e91a3cee058f7862eb70ea9f0794f38d0c5059549269a5c6796c0a8f22b517a390057becf3bcc2eb213d60744492f0fa546bbabdde1c0f4d06443c8108f697b532966dbb3755e52c6b1a5d2729a79ee76700e267283b47f32223647c858f27c01a3efd8a58533d2d8d361f5f2d18eba185ddf3b003e74eb7c0d041d32f3a4daf18a7a447a69da13753bbe2060e2ef00e4b38dce8c1f9543c92249ac00b811bef14d2967d5b0ef4adc9d78c6ab5e07aeefef008688847ebb389bd0abb2d2a36a89682d64d24cfdcbef97e3adabb34a19c6f1f2eb21881527412d841c4d9ff744beca91b635193fac30f3c34e29b9378f0c4df35546e62194d1ac3502e6c5fbecebd4c101387ee1493eb8275eace1138851f7fed5bf444cf3934206c9c0973723ef08fffc9ef01f390948df6d1d56bc9741c0df8c65771f9912803719e52bd3fa4ba2dc338a7e3b9d3441e9f62949b58241bd7819d8cab700faba24ab80629ce0785bf575a4521ace1832a11756f94028ce2013f4ee13b470b3f5d3c2d11fc3fb6906ffcea7947ffaaa97485169bc524a14454a16197a17e08f227342ea02ef683a594ca04006f47ff8b45a04974cad38e06c619fa57f1c41c6106882c4205b008ea5891bdbf717cc8771b454065d60dfe2b8b70daca617c53104f22a6cdb28eeb5d63176c793f5e07fa223653b9c1d3578fd3769a5289fc2f7d1c3507344a610cb14eb887fac0a96605a3095de6ab4a4771107cbc9ee9dbedf05e93b031e83c7385d385244764ff44be0e2130672e765d43200cef6346cebc95949ad23e51813492ea6c2af0379e7300535ca5017dee1ee7712f8923a27fd1f6d4a686625f06f7b9c52e787adb0cf6df998b930a32752a4e4321566306120e07b211e4bdc08ed4fcfe282dccabcdad7f322b0acec7d83949959ca88ec968ee0a31974135095718d7606589c862bf055bbc03a1af682db2340571c2885628b5631bb9284ea5f9997e6137fa4d1b68af956889f17b9c12f3f7d8df68852dc540121e9c1e071cd5150e574f08f2e471c66ce41cb3efa6f04af1abbf592a91e86df5379934b680f8b6ad80743acc448276fc3f4bd108e651eb7e42b43004546f145c3bbd42407502d05f60ce5761a1ddca99d3af350494ab80b5cd79590d638fa8f3b1d1addd644f0251e70e7134096785efff4b9775e945104aea9df3346dfe4f20354cead63796fed536f287870866343cb3660d29bf88ffed4a521e8d0cb310df3b90a1080317293a1079cfe5ddc93300860c59524e1c9e40cc577d22292d9784135b3c83c6a74c8a8294cde51c3e953e452236a1cb66d5f2b53a9b6697585dbcb0c9950371396565af78600ae2de384809c7801c36219330cc8eb1c0560d761b7721292ef64e798d7ec59f3e3bd2abf4ac2ae5ef8c23d1258c32886960345257143436f448718f18475c842c8f83446e3cfe0b907b330ea46838098107cba4189c7ed3c4106a39556132d828661db7a63e7279d48adc4f8fc2c0b64fc3e4289c57f0d79cfe608eb81d6770d3eabd86a929ddae10cf1f3da8e2f6d33cf4d412f1524d4aa077c85c2f026cf29cec28467c8782edc9dffd218d3c69a766937e9514ac59fdecbfc2492f6f7eef9dc4d2ccbafb47282432e2e51a664bfd03de89e4d2f4db577bd8873deabee61df4fffc55d429337d3cd17f769a6c5ac0115ce83a079c7c0a5be096269ef6c50596b331c810286b663173421efd69e785502d7f42ead07ce14dc294ed97a34ee6cca9a6dcfd75f459c9407aedb70d46ec87d73ba6ec8daaeb1882b702ed1f68b3a255196e7d2cede9e7a38cacdce25018b9f7a0b42f6738341a634514fbd274ed5d0ca6364bf5dc71bb24319997eca822d9ddcd61c6556f5ba8749d0dd8172b23995be441d7ce3b2da7ecf3d84282e789ba944112424061c8bea219f1143b61d0d02dae820876b29c027633acf6d79781bc2ce24b1a8d165cbb26c27bbfebdd40c9a15b4a8c267d128ce512e06fbae3031c2dea4e52d06ee13dcef7e467d1c77648fd6bb1915f69a676a60d5ac8ded2cbad3cd7a05e0b6190c278c427856355d77cf32b04ab1359e324bf974d981027e166d4c2f2bae70f4a1117bcec0663288eb9ff5dfc88df3ea575c7366d58b1acb44d49b1b60fda1f2369b43ddbd9b30a9652170f54b7fd3b2dc83519167bf404daf4f6b6632262b589d5ea0a0d59e4bce24879ac7becfd361d21f1c95e029de56a928c4c3d4994e29494abc4047bf2037d8c8792cf9db8fa97842059b0d3e7ba73c7618a06601d64c0ce2824af6d332d6ae8e1900a6d14b84078187cd8cc63e0d696d2bb87bd7f70f8f3009c7b324c15734db300164ab19c7eed691b38acfc8e62673e37ddb635c42a7bdd77f4782470921179b28654adbc79ab9d2fcf427b7427e023b97cebc317ea9bd8b2c4b93a0a87b8ea4102b109bdec7fadc7fd5adee8f0603c00e1deac86c0b9373e43feb5bb15c095ea7d53934b346be82ca83ea0c62204b9f284378cd668f4ad856c7571ccae221c71dc0ccdb9ac042eee7157a7cd0e850c00ab6935b99665c11173b347e7c2441b4065771a9d05b2761e29eada37c6024a816c1ff2176568f48fcc2b09158c93b1048874637fce280037dc5d559683261f033bc453d73ee73cc9d2c25cc7f3b166c7fc83b41ac95257a40572db8cd5304dc7f632a1c9f6310355e73552b717f24bd70f05e15c93061d51396e1a231dba1505f86f70f9f38ab1aea48a8e9ab7775f7f0b51f6fefaf8b2fb886e8d8245175ffca767eef8b8591c23697afbdcbf094e0975dc8af2d7ed1bb2fce00cc2f7616ee49894a59f1dfafafae10fc304d15c3f8989a5488aefb0d20c80dff03199e72bc5822f98abd1a8142362ed9b2a74a01246d22c5df3b885e460d7e87548af882318227f86ff01c89daf7259c898636f6623e0134e4462c57128ad0387a016e3068cf6d9e5bb480c6a0eefbba0c39557464bdd943f48140e6eb6a47b4906c69f30895aec5930a14b1292a480f848cd936d0904cb3449e73761da13f55f1cd9ac511c80600bf897a53af5fba3643de3624702fe76857e7aa840520416db55066c80842b1adff896e1651e9bca22ff3f92b6503cdf8839a783a52f04dd2b3859ff8b0298ccff9cebbef70b7c609f21fb4968d6b3964231acedf476a1140030e1cf848597cd007a5a9599607326f3a105078497cc9b01ba5d2aa12a82bd6d00b5a748059f9ab5073ba2e2be4f9495f00d3f7c1a63408bd2e96b6a409f39191f171c30fc6f7ede86496b52f87e39c45a6da5e9ece1ab31d70dfbad58a17347bbdbd12c71b3a514c8094c3766cdd4664d1c765480a8eba02dfb8bf32f10a16eeb288090edd00ab359da7304797e2dc04e0305d2670695665930709dcf2f5d61c6a32f63da0d42f387cb6c3b376ef945e890eee0cab6a75baf063c66e12da14b69717841b1570a9b0cde26a7416d15e971242913004dd7ab875118fa53078a163cbed1b069cf61e2b9b33ed3696b7d4d385d5ebc88cc598212587b94bdc770e31fcf457c049431acaa7503978ec886f48ceb63bc383b4f71affe42cf88e4b4c1134bf9143d3f3823447a1ce0f67fd51d75c0e48145c233d4fbfa2791200e8a1a5ef2d7f1873406409478a46e79de7fe0a4ad9e26f13d8727ab10b9ed3defef26a76d85ea792472ec08aee18019852fcb6347e8eef9ac31c99fdf9c9771299accc913cc13ded44b19459553e04f23e34e4c7b1013750d3369eb0e03e47fc73a3d22e5c9d64bfd9afe101390fcf0780f9ee82a505e574c12d889e4624365cf6edc595228e3788b9cd7f5b1fba2f2765e4778d88043917eb3425b363ffb29801bcd8cad50cb7505091d5b5f5626397065d185ff7d6a50c64bab4775f772adcb02d8d63fe9e8f5b12b9aca88a55af2895e4797139d5e8be12d8203120d3c2da0c1ed3d52fa3f55249666a3010599cd32131d562c3bd0f07b615f36a50024bd6e494256d63cdc51ecabecf76224d1cd5d43a0cf5bd70a8033ca79e2f7a791a55b5e3f798ea6f52a4013cc9e19ca2278219c3b047ae3da983b58e5f3ceca5ee29eec2eb945e5821b7ca6935de4d5f5bd04d34fca923446b562de7e0f8234663eb59c4b0c83ad0ef200950c0e9387e623fbe0dab32b1c541a5fab139a1c9cd7422fc77f091e65ff00f1039149a957ab002ec7fde54b6e4ee504a3c5f307cb656e86996148ebe3d6e0480f69372c10882e4119635e6b59b1f86c2911858484ff2970a18b4c1fbb1e7cf969d94f7c4111e2134cff5e65f66837a5106cf1c2e24ef3b17ce23f382d3cbf03cb50f9dbbe307bbea9a04ea08819640b86e97c771acdc626410486607312c2446b5cb612d455c649ccf66a40027affc72a97e1c1b2c00b0c12d8d98918d53e881de09640b2bf0c5a2fee4d9aaa24996ee7f1b6818d8c38ea9db91c748ee1ba79ed7b84ef6950737d22d8ab983bc4c2cb3fd2592828e3d5f5adfc61dfeaa6320b956893c8f1bac5f4b26da5a6e98ba8e005e23273a10c92bcb88618e778c6a293e3b3c475018a9b29d2cf97c31a5440879b55ca89c1cfc05571157780d9b0ec621fb4b5e42738c09188796b80abbb436ac2b3d5f604ebcce0eb6faaebf929fd35e781660d075a0df11a56ca5ad0a32a1ae3e8d1c10b7dbce21f10bd3ea0993e966173d985c3894dc92eb0c4f18a46a1f587ab2db3915f1124300e056ad6aca52f98d319c1dbca1b6178b9822f99a22bd3a389949400bf1aaa0727cf7e63edf9ce40caf309b2116446fb64c5f934bcb0bdc7eb14d49b2137237481c143f9958d43d5bcfde1f4308b256e3e372e4263090b793a20539e8cc5a3355589b8e228e5bbd8c9f400c1842804368aa48a9d491dab2c5d8a617955edaee52a669b2c29ee0fb45314d348086cb09b447711e58fa99f058bd80e25314a45944697518fd9d532d02feb3053ee58af63390757824229b0457abf89180947f601a58a028075f3d9d4499e1de070f81f94d483903e87ffcf6379c14f65b1637dc787547dd9faef38036763cc5edfb91a7551e9cd5a2e2f7e8b08af9ea4df271e686b004b1c82a88ee5fe6f0699c08127509d30abc7dc8f55b7bee0f67eb1a985b2f15b6d23f23adca5e30142e016077fd65ab70b86d333860b34cd9ddc30dc16c2638e716e71f2216843930d679f2a2f9285f6f7ecb1eff247debe64fd8c35dc9203554b0ddfb0e28691155ea783f11ae43a88553a6b2b31a56e5c47eade77de68bcab32664c6a6385ad333e14b6ee69b330e2bb353fc8432115d5ea828b5a636de4916be7af6d3e9a9f091e22cad7452df325b40d82ec166f8b1f29705532c13f42204f67d14933307b0806de1ced52b76e5cbb2d9e481002259e84c166c156e08e9fc07ae0423cceda84d6498c0a344737ecaefc9229de99a91345fccec5e4f0c0ce1fffcb23d59117063ab389f226fa8d22f77ec6fd1da850cfe7a3c96e454f2c03f053e929cd7b335f5faad46b1bb86453d967ef6b8adac7028cf60c1a0059e030e640f3fa77298c3d2820569c41b3982898666f383e70676bf4b9ece566c15a9ef1bb678c13be318f3e7ce34a49383f3b530ca52eea5c7a4979cc45c260d2fa529440d0ad793482e44afb966866e2b0b8e583abcee3158f3bec4690912b3ba8d5a8c19054a492027fc7d078bff656a4484d7653fd83869ab86689186a6d7821c28a4235938a5c7498a67f00ce3591a5e66d0dfdce80e74f8438ecec0451124b1bd54291a1af923fdaf5498d10694fc89a32f961b4a66cda191ba6a0b28b645530d5d1ea13bbbbe1968647ccd0eba4e42bd64466d1efe0efa2fa0ec36a5ba92f59dbcf98ec6827c80c6c2650f7cb4ebd50b704f3a906c9bfe9c6f31ec483ece8ae86133f6e53b663284c04d66245c067aca94295a713e2274ab50b8c7ab07a1fb04297e12741864558468e986b94528dce17c90f7437cbef1c2f10ff0ce0cfa70237934a2c5cfe36d3be644760e05f2eabfa694fd61cf825414e6fbcf567a2a83d5f1cd57e7c7ba89968dd25cff7006e74a65445564da48d464372b8bff549f19f574362e08b8b1aea24a046fa1b6beed036c08b29f34c859d1e465b2556d2e1264e5e7557bdab7e8ac91f9e3b83ad6d5b532320fd08b557c24a9b3387a67aa28f7382976d951b608c32bd0672ff03b312dc669e6de4bd057d8271fe183c2631d84d8dde78a23ecbd09a53a03362e82d802d38bf84a2974f62d22e70f88fc79fd9e72a29625e14fce284176c6e993b7e68b82320619262df9e4335efd5c3c6c4691411871d82d97aedb2a8c3d271c0d8dd6b59f3d336f6b531a4415ab5d4ebf33469834f5ddacf10bff813991e60eb799d35386145b9e12d20d962232e79c44297fe8b3822ce08d455ea34e87b9141966a28d364df33b51bc17dd0006cb3a193b0faa8a45fdf25261f2cf0bd8f7572d3dd32f496218ae3bdac97cfcf79316ea4a40d926d24137faad1e21e11a5f78a1cd75900e503e9de116546122e2af6e2b41f64325a2c54f2f7f607eba168ee767f8460607b1e67b04d713b43a4e3fd973f1e787e8c6ddc9f7c107c683a61c73cdcbce3f81ad83cb42981636e525cf2124add6a2a508c22d8ae7babf42c38e160552983c679235cdac5976edbce56c7bf7809214585ca00fc46825de47b1b777ee3f29decefc6154de162296a508cc4187d49a734a1710008b00484d0db4127bb2e092d6776eeed6ecc6f5401848a988674737f3a1450b060c262af0bd48e4e7fda8438b10e83c4e13d22e91b2d3e2169f34148bd55742cf59b8fb25bdf07e7e97ea146ffef51362add01b4855212529082145f5585f9bc578f3d6700322c7f36597e82467c2bdc6a90d948b52709caef5129fe0f25c7712d4b94b808214db1112fa9bd8ed8da60fab0862e094ee683a451dc30758df24ed161e4bb611e649b9034294a5c66546999e70b4afcd7c2f5b7843fb895045338b1135c7a8a5815c694a796b24724df040394ddd146776828d0db42b064e1b2d6144e77925198cbbd88d1f4e708b9ef6505790e976b0d200d1420a097ad31437e17979580fbe10a8f54bf9ac6ad8697888d266050f36e18526822a20313094bd2b2d7c66600222f22a78ab513c9a3496e3619c81402fc836225c96cd4fb944839d559ecc26377875b0259544c8f81e9217b490f25f85d702915a95b8cadc8b53c0864624af1bf9d4712e018c0f97745437412ca249cc98f97381f0f4503500b63d6eac9b2e791d87517f22630388833ff75e3c5e43c340d44cba152c6d4590ce053527b1071f7da5e73ce498e1755d15c63a963a139acd07a59fef46a4a7057c9198a75162c57d8c1d15dac044334af275f2388a31082c32fa70eea4d4540ad3b743078d111eb91778ee6f481e1b451d85a416af9baf31397e8dbb63ee9486bcba69310314c5258267932194f837a6fd20d4cbca21b6db7959a90632d4a3cedc2426121a8760d1ebf1a3e254cb32217f05128e1f327d1732ffc906b064b41a0a6409aebbdd913c19d0e1e55960f53727cf680c62541a3249e3975d74c549bacad79f322722cf7ebc3ae5eaa0007f9e41b373b10f193a384c0c61bd35db1eedbaf39f509453b0a5c661c78cee6cad68c7b2d86d3f84e6370f28ce2fee90cd334fded40871e6fb2d78a3d81ed45b47e06400a563a3bf62f7defefca6f5e6fde20f5b8a7bd9504895ba214a4376d2670c6716168688316d00aa2a893da6b9a862de51596365f03b6c7e727866ae3f3924c4e31ab14042831876a2e74ddb91fd83b3ba4c81990bb96b01b3320ddd078d6d8fbe2922d5dbbc914e6227ec099840ddc0879c79cc720c60f55483551d81f0d5145eb0508ff427ae7f5a0c22f4f66ab7bd78e716107b3f70fa94aeb4f944c6354b04af9c0c480448a59d90b26d2633deeb4a50dc85f6b1f7dc99734234a0f477ca53d366d128d70794d0d61d069b552b659b491c197cbf4fa1129dd3922ad52b818ec6fbb3e65c39d9689920d7dc97552d36ecb688eea01fa62e764e4863d62bfb4a949183cd40a9e829de8850d8b9896e8f31fe61544e8b7d7b57179ed44ad3c1972dced9a35c355f1582ccdf5ef37f3df281ed6e8abc673a364098111a042cfba95dda004c1fe975d1a37a28fdd99f072e1c4872b77feaadf06fdb3fa00beeeac52282da765c4edf06722f933bc4ad37ef9dea49d1dbd0c70f590944ddff3c100cadfa0c4e6c480780f926ff13ea04cfe5f4544c22a8a16842e7a1cd7f9b07973c029fa2b5efee4c3784315e585df9ea57d8ceefa81fda288487e535e45ad8628a4a83130f38df8c0b7bf80b4d1dea8c9f63e6f88b6c168f09db31f00cf6149038136c4e261b9ecfcc75904268de623eee6363fcb6485b1fb1ad5e4e4800096470642f461bae492143c3b42d1c30acca4963844e9413b1098e9c3e9d9cffa8f12dd1d28f327f380442d0055ee22fc307e54674c60a4bc5aecfb3877e8dea184d148fe7fc4bcf8715fabb7ac5453475ea79eef4d1300228d29afddb6033f1b8472662dde227dc41dd857ae2ad3ac8cd084790a4a864846c1bf25681d7dd4380d3d3d404468980ca0080569a85bb2d3121e09d54cb75cfdf719fce3b5e4891b516247a1eedd419ffb61ea7ec18b436df2e8141de39bfedbe6d6f45155584668f03641feff24049a5bfa82da989c52ed0aa126d3925bb9f8c28af381b55811f4d2bc899ebc4750375cb79be650f472b72def287fc6bdc22755716711bb828c9da2f7af665a0fee5235e897526495e0be3b817cd5e2821e5af337aa00b89c1a656bee86875afbfb7d787344afbe41bf77b3906d72ac283e4eefea4dd11d94895687575c3472d1db9be07ca91ddcc142f3000089ec47bc0634d707724cea8a9622bcd152dc3f3afa982fc76e4e47505fd501953891d788541336c9dfbb67f25f7cc609d6b25b6ba97d400b01b6e585689cf71b7a5563b001ae1e211e7961b418ce8c1647079091231ae5e11a126b70be1ce1c9ef5c00c2fe335e007ca50bf9b0eae7f4829c815d9a13960bf9c4c2927ad48fe86547b3106a9c8a6e21527838d1fe64f5b6524a73e342f4a8506216deb28559a0edb08dfe880e568a70813af5e9af998e6a54932c8dfb1cc641101da1cd4ff3f36668cc802c823feaac84b89fa4ac29ccdcbaf7de7aaaa024621994514d5d31de4f68b120dd6533f154427bc8f245803ef5f4715470217677393de3919456126b3788a34df567551438f01d68a8ce97c18e18d09cd0b4ab2c9fa2aa89ca4c33694f3c14fd1db15f2670a16f30fb3fb341ab2bde1c4a72a62f9f5305bc764c7d38e9496baf819e5c372a405631dbb892a077afc1041c0377cd29942ff665e9ee47b1c08a5b558e5d35ac24c1d427e81bd61ecb87f09f365712bb9572ecb4d38fb47fb75273c0141fde1d9bb273877c9d6743cd726dbadf48c8aad1640606a1e210966c604986aa0dba263974aa482cefb1fe73d568d43aea4a7b96b915806d1fd75aec6d9ffa403d00eb779fa41aa8a712e49836b7c3de23b3c9886e1d788c39ee1584c0405dc977a07e9fa5f07c15b02bf43b027e4e84dfdb27e348299a9e2e336a7904687daa3ed408b6f0c267d65741a1a1dd118a120ffca2b1a1bd2abff2927305e48e5c9703f399f81d6272ac26cb67844ee76caad375721b37d9965e5a0782cc3a23e760ec4d329dbaa647c9ed58b516ca4d63c0dc98bec7afd67687b61f9b43432e46a5b1c4d120f6b8b17c896287552f590cf6042baf4d3fec4c66edfb110be502c8ffff94baa66bdd7a50babc4901d5ed50cff130248e4c080add84c895e41b4c66d65890fe7856bbe149924cb75cd6bbccd8a3acd32754c9a811dede90fdd61f3326183eaa837cd9bc0c628f8ae85c4a867614389cc9cf35ef4f366aa4e743c3504b85a6f8783530d12adced2e0b11b6387176bd8825fb490ce875c471bc8279245756d96401db5e9fac099a5127b0fe9b1198f291b6d3edbf0f10cb83d3bfb465a5eaa6f37eacebf67848d4333ef2654947dded8104ad3f6e9a355ea4b465d012e74e7995d412bd7a948f02179a6942d5cb8936f364648d685f856923af150f857e678d71a020d0fe318f29d6f99b4bd62a8ebeac6c822125e86073186d7a3a9aa56d387708e03f6803f5c9d494d1ebcdcfc1428327d6fb4398ba06bedbff9020e305b45e4e4596b483457f227060a6a0ef2d4a292c72d732be1acce1efa1a09cbd587cb2bc257793810f1821f11ca6c838a7411951e127775ad7781eaf791a9c86c5d9ff819f9307adbd66af1454837baa6b192a19fffd2e3b9f76775431bfd98d2cc5ce1677f81a9b471f84f20d87622ea45320a11a4616cc705c625c7b079fbeb11b5dc86a386cd8a713486f4c49762a88448757a96068cde8cfedf33ac2b96dc83994c10118fa13f7a7160009dd14be2c5223ba8b4d918509226b7194e12ae76fe73bd40fde027a5d496e37bd5cf92eb11f71f2c1fbe4ce5f4c662753ce6ed492291c0641f8ea5c23dc905e2c67024934f59f81e5c23421c87b95e712e6e002dce84437040d7432ec1657038b70bdfc4ea7ce33d65096aecd92385789d5dd531cb4713e312887a7c2831421d85f22785fbb627773a6279372eab8607650d2e7d03a8ed65b17aa0d885883cd309775fb0a1af58aacfc08bf6c572cb2f325ec4af24f346e4f62ebb73e5b6799fb8063b63ec6afb913b3f2f42f98621cf40590e83e6e69efbe792cc4a12306ef4c65ae7a9b929e10082e54a6d639b10abcdf7f61a914fc32abdab9748199a7463b837cdb9abbf7adce709ac0b5c971ce7a36d61fdab02293bef1df3ddeaa34646236ae3e63529200ff25b793616f29c9cf5ff097e469cbfe3e94fbc34f54cb1891822742bd6b33af9c524ce4b3df7bebafb8a18aa53973b4485880df8fd24d75bb3b8f9bc56cfbcb27d8e781812470ebee027533a36d8340b9b1fec1a6d868d9bb492bace9f76bbcc0319bf75ebba3987a709180d4e6a0b0867dc609e31ee15e40711017a653596694f59741b9e0763473e325b8648666c9f5bb261831c8b7791e4e8d44711c9dda6b726e4570e0d2f3e4e9b096f48edc4d3cbe6b7e9579ff07c88a96f68e40c1e2b5929714c636948315038ccfd79a07b55e5c093a2d847ad13db8ae1c15f6cba44ef0dadae007ba5fb07d23ebb80556467dca651ff3fc451ae17d7bc04ebb7a20c9ac8b8edf8f066af18c6c1ec6c5626142f5d796b7ad84e5b879e0db1b6ff8728e1a073f061fb108ee87faf3d88d75a2153c87d57119803fa3934aca5148b69f42af1b8681ee3232e127444cf8489d2541390f87dee88a903bfa7b5d81e6c78b47445842fe5dbb6f6908dbe1cdf26eb6a9594bff0783edd40a0486123f7ae65c3ef55bc09614fda0bea432a64c8404bd89dd69e3e017f4b307cb7167ed37fe5ff8311a6aab3220d885f5dca58d08c60ac62ac99a16f2eaa70c19e3461399fce04751a99b85e815d76116ed52dad86e68665f1f267385383dd929ab1553c8ccc544200c677326baa3287754574f50fb3b61a1b177293ea1774d982e4034c48e866353d4df5462bc50424ffd2318f09d88af891a4d3b90df417008c7a36423b5cfcd1b1bf2e0c28bad9d4244b37e1be0b1d6a4b946e3ac8195a421c96e250ffb8ad2b8b3ff390a4358ca1d434cfde5981db11186f4e3b3aeb54ada852235a96616105e6910e5834ca989daab6a1eef1f3b66082335c3e9912157e68a026261c061877f7cf0d71b19b0414d1b624624f94ffa3e2953b9926400f87a92fc4d30593628b6c3f25f3a8444fc391cf7c733f25809fab70b5b64025658729a2e214863568b4d36f4223d8b8a0726bd3c4a126e6221103b31d439f5c94f6057508ab57718ab8ee2a9f4a32cb7894541ed25539847fed179147a97f35c3393c17b07acb694436ca2c5185041fab2abc29b5a86bda9887b92b73f84b1d08e7f52aba83af68cb8dbde5f2f5767d6293b1a24db6075138ac8c9670e50da9aede3faddbc4fe560bec9bb484bba3ea9f35f7a45bf2a0637d70d37b9896d3970846561ede2f8426ea92e02a0f0690a040696f30bef4d97a05498b279b31baf03692ea1819da738d7006be2c8e9b432a84707083ac8a58f90821d27048d1f9995cae9ebb29876be2bba187e805ed3a83a7fb7d6dd445450ed9074de3ab467cd3d2e0905dfa008e44cf9bc9116fbc9f8741ad8dc77bbfac7d9232b29dadba8280a7db9d1e6d89c097bd84113e544efee9c00d583e8a5a604bd3b755ba76dff66c2101b569deaee7581f8b3d20fb3f813322b899966178fef97857524cba8eb2251fa2c3bebaa4ff4b3decdcb14d8c43ce95671215a5170c107d4a43cfe61eef57c20258cce97c137c0da3170adb5b02e6561f61f7f1fa07c2fdaf49bf17d066dd6ab7eb5eabea95d6ef8aae7ae4e728a4fcac5d3c91e4a0d6673232edb8edd438a2d5ddd25f9e83db4c4fee0cf814f41aceb774199a08d2898cfa85f23b2c9542711156da5b98807eec1a0253dad996b92f8cff772979a421f085917af06303621c5f8af3113611dd5d5830fa84c2baf584056743f626da870ef274b7afc6b8ac3a6902488b74634775f1903d3c687d0535f872b590b6c0e7a93d636bb118adcedbaa7a84899da11ff2d7b0789d45182a933eed05ee0335784d0ceb175af52f3b75a168767833e5499987b1ad383935a33cf8ed7d369302f3058a5b2f633439fcbb27f0a13850c7014db7875531738a67615a7daaf30e1f75cc82c05ca80f43cfd70ddb94d8a576b390921f336494d4c0e6d0b61662018de870faddd1edd815451994c00ea3463577f1b321fe65381b6fc26a51037bdc4d7e41ed64dc4692761c7a028dd74bf50eb288cd3af78f6b3f59415fe47aefb239c1f340bf15688cd2e8aef2e74d04ebe79c31cd341fc9cbc44a89b4d66877d19cda805a5ed87f2e7fa020be21fd73a860ad59c768bb77d85d62101b6ab2ac5b505a411610a0a7cc0c72e5d3d4fffaea0cfe625939dde8c047ee7041007d2c3877c3f12fd28c50be666a0107acfb4adecc55875b40835734dcc7be4686c5d4f224c071788b04ff9582954f5e5e2720e2209058dea82db1c333100a03b33ebd1dfffc7daa829c3c99d84c8c56d6d054a2ea363a443c7076637741bb899eba3353ee4061fce043aead21250613512f0819291d499d30fcee82fa4b27400bab068318c0c6e500316c109a7b3977cfd76325112e0b647fc7d361a0bf40fd4ef46bb553ee8788601e9f0580ed3d4c9652181ea6966bb645aa03a31cf6c2fdbff157fd550d6654ae93a109f537b1582d944a889f6f20c4c0a662b5f61c24d346d26e3d2bf4e659a8a5987f536eb450bad1f63f8c277cc47e4b66be285360ae5687edb4682027aa3e297d6f2f8e3bb9dd43a7a2edf6c76c835ac3c868f091e235bc3173991104b338a8933a4a25d95c11aa43e560bd4fe0789cba1775f8d4313e9fc59ed90107a5f11c70f1cb2d658c5bcd6e34c206ff7924dce62a65a20e23d8f152fa7a2af25f98317453e18a56726abe1115be0010f280e9222e7766eda53339eab9391387722e5bfba37b5b6f570d3b8d1de9a6efb6a0dd2746c1627e4cd0d07b100dd4f288bec19b6e8e304c3a2fccfe18596c284e2c267cabd05163cc02ef8fa2e152a282f28dd616a54a3c613a0b4d6f03e76f25d5f960fa11c693dc10943d0c3dee55c0933e686be48bb5b8643931dad89eeddad0f8dafc7d44c13d3701fca1317ee52845d961c8259a5d82c47fe485728baa0547c85fd1fdb9d81ddb65c766f332389ce16826bd7e14617c69c97541af894b5af71cc43213e9f21a23bd3f525dbf1bb1e6b19d47836a3e92b16f10a2cca146c55b2c11de4ababccc628bf2aa7fec496e5cd07f516bb0554c096285d3678a36bf46bb51d99a735c132e1d34f752f153f036e01e6aff813625de05baf61e1173aea4f4616938f23fe0ad562171ab245732935a9554dc17ad0a0c4c2327681705b12bbca8a4f98df35112e1846c46a3fafc2a5166e9934a829b959eed0960f98adef0677d580f205f389f3a5d3ac77e0c90e6c87be7e8e850091485d021d2c058568543601326737918b42d8b64a6581a5e4e6b439d71364202a43e0bdfafb62f8320f0b74801bac711a3a6bb45797c07bb5e4688878c8b99204ea5c38100419c8c1a27e8975725201d0a7bd3a90fa57bb1ee8794b763f8e0f097dbefe1ba553e09f945950288210641689628b6b9da5351ccaae2bc2ff4fb07027c62bdf1abddf9ec49e8b0121887a5b7231b59f956fa85557e300c86fe51280634867537f615a18c26209a3364cd45a3177fd5afad51c0459da0a52ffed2066fee3673409603dd55b15afa5dfd4dbc938c9f660ef57e833f13284ebef98a1b886f42051fdf5fe862f49f8e160238637b1141ef372af3b5d1bdf0d70913e4ba5a03602debde7af2a0681f7fc920d9d1318d4cf1082ab11192c0fb42bd822bd414685150e49af505a4f479faec23e3819e65193458f770484edbfc8f4598eb1a0e656739a9c93244069838a0eccf29b42b50d3e130b93bbeb1d8aa013df2bc11c6b1e25913c264288c9c31892c32b9e1b2e04f67aa97a271a2b66f9f699fd743a704be56443ce6783ec061308223814bc4c41167f18ee0c6cddec17208b8830d5ce21a26c44f99c6ed4b176e111c11789a89e5fb47d12dceed81851a949d7fc2b35be7c9d77e56bfb1d969caecb6e46fb30c2910c4a6fbb156f8468dc0e9aa92a262847dc0dcf88f2063ef2c13d12e80d56b5bd61d08d39254dfd269672e702c480d3c00268b98ee3b01ea4cc29e46c5cebf02c12223e7c73086a88134410efb86de7106bcfc80d14cc4b4cc4ad906f107d37e18b97cd8eeb531310680539e2745a20ce737611576187de60a7d67c627f204a1e144879014103092498de58e89af81915b9b28320563cd73040256a197ba6c9c1d48477fea4f4b36389ce295b2f1a1c23aba35364c04e894cf45fc8f113a2206eacabff782cbf669c5e47c76efa221cc6c5eb42d9371074a625a837e16c755a504d26c4b5f6e28c6cc0524c85eda16caeb42155641a8128fd359a40aaabdc41b21e94637c878662795137fcadd605f3fa630cbd94d5efdf13f90985f7132ced64b0dced56229ea9b2e6465e8bd25c8a615ee17e5afed9eddc31d7067c293f20abc70c24a51d13f34dc7f2131cb6240c4384bfc06984ce0ec9e171062f64f8135f8d10971d24366426d90c245f6fad1785177db6e484d1933101e30694f12e7dfdbc8335f604e16ef60398176201fdeb2bb0d76707a5254376665c1ec0778143eb4e11e0d53187abab1ffdae69831fde05fe9ad9d6a8e167eeed25b6713bda289817d49796c237ebb1657afd49bc7b0d4b36d75d8e80e67e4c84196c10d1862a76f9ac9ea62c77dcc686fbdaaf90a562b6347a1a0eefe692d602a6c678dc4c9d88699b9a86e735f9b8133d21ba64ba19bc1fa2f60967a648b614a66e57fe2fdcad1d839d7384b21f0dec02b8e087af1b53889baee4572e2fc7baa246be2e563bf4f626fac8fdceecb5487f8b6cc07ab81c304df70c47e221961200b0592f8b2ae93f63c9d2c3700ed1b0b12a81dd5a3ff68295811941350d7cb5bfe2c7e143b3624437a9a38a4d7e706c729654389108593ff5df1c3796d5efbf67850aad5cf6c33b993c6384a71cedc586d7794b58f3c36398d90e1ea07c18101e26c6d7919f8b3138784ef59b021f2bd00508d6f690bbba0997f66f3eb1749f12a3825c1b7678671264284d6e5331b6a232242b41ca0f7185a2d69221defe09783bc9b8c76792b18e7d74c2052d94e0baf295f979596700419436b3593671344438a340ca79ee3e93414010f52cb33ce8b553bbb6eabaf54bd78ed7bc1c4e6d2f0929891f559d52d8809402edde81ec0a0a0bc506db4e4c1a0940ae364411c6a41e5253f7e959c4008b24a0f9d1773959daf1500117404e576e289406f201334b6d6edeb9e848cb7f59fab0f4dcce7e63ea868a69058ce6d799b44661ecbe17cb95dd9e0dad0f29f7df1396740704894457b2fa878d76b5e6e6e0333d0ef48b300037077b2277c7315d80885b5f92f95bf4ba4e000ae05f0787098b91d801dfa40a044e0bcf2ea2f0ddffc83245588548b8c56b0dfaf25fbdcbbf8e04493f8fd7043f5ce16deb06363cea0c8bbf1e762c90cd978ddcd33e84c63051075289a3e99d01a96c992736d1ca80d823cc820bd5fd489fce722a5982029baf5640434a70779fbf719403a2289418d87f287bf2d701cc3b6d5a5f64860ad54542c536a20fe6286102d4fc6434048440976a904206370e5428b88492020577a90c30584b2566bc28fa9555b72f56128397afd08ab1448148f9283e83f94ddfdbc8a546b2881357a5ee7d063df5287ed51bf7e61c57dd7b310d4667b8014e03bb1ae324d591a2cfa2e990559978edba2bb39fdacee78b813680bcd56442bda39bd91cf4e6930c86a243ba57e455eb1f79b7d7467cc33c661bb5c82dd0d0450701c699f3f87c300d8799a61d1583dab2698c43da8c1c26fcf00ffa5a6f831c16faa518d4f20241c8b633ee6347eeb76f899502c20d210f7b5113fe3ccc6d8a97425489318f8c3c728166b1e166462e718b354cce3a61952fab7c08192b624e50ea83295201057e528a6a2839568edb1d8bc20f079e98d8dac127355db9a621d0e9de7113f8516ff133b96d458c26183f042dd5f80db541c728e7d0a4d3e42505a35f153d90777c9d509e90b73ca22e3a1afeed18103b58b38b79f8df71448e1df6d5b175a93a7a32e20a50c0d5f54e39397eccfe0e0976528c3a5b5fdc0a4049a22c363c95f4ba496dc77aa5dd5af622508553fde965d1e2d080aad010af8ccfab091be5adb17d8d8e8be5e399b08b68949150d365246db059a315fc9630cca936f15e7e57f01d28d8dea4e78caafbaa66b5957d0680fd3c0db29944680a539136f63b5d32213222765d45be46a5eda4f2d680f138fd61efed0a55d68ffb5738b0c71cb885bed0555b71eee0cd71d9d3829bc3bb822c9c5e743fd463a96fa08a19732f25ef140c434ab4a0a9ef104c20b670de3ecb3ee21bd7b347ff631186740b8d01be540b38da095a7003e4541923ddc1f9b095273cc9c39284ee24852091f7f2c4365c3e838cf99f581ecf80e65156cd49cd2acaf3ffc754671fc8e6f8574429bd6ab00a184d5405625df4aaee5e1523f3d6a57e78298a9ac47be6248f046345bf981a5343e12134b74e1b9406379ea94f9a8dc5db278ada216d13ecf14805399417417645cce189f59d18df1b0a8de790669cfc396dbbb3fa755e48f977cd2c221c100ffcc14c4aa6a93403f891eeefcb19a1f20e06b7f3bec7495fa98c4953e0d0d6855c1c2583e6fe1ce388a82626cd315c76baa56dbd8392da8af5a18d5a9d646d55dc7b6e45a4f7bd9ef5ad3bbb4cc6f7cee312dbfe947866a021526f71348f6b344c0e2333b724c59945bf7dc66dde0fe3e3062d5143b34c48a3f00d62b047cb68e50dbfdcb09c8d17e900c9526271900126d057c35b6a3d5a9c9a58633ee09c3254cc7d54fbc71926d6f480e5755309f76d606b271013b459948aa85cc134bdef960323590ab30c833aa3fe29a8e621e66d920f756beacb049d3b86557116bdbd5926b8c99249339f1848c8c2ceb6f7b20a742bad6e03f8cfde42b12d80f4fbb89c6372680022f3efdfdfe2fb2d961d5410ad4cc4300b48d175c02b464336a222f0531a78e5b46e15ee69041875de9e693018158c6642f37f0fac3a829e143432e39e48313d862adbca255f0784e2a35a923f804a7aa561ae7736309e91e9e28b6bf8e6c64fd14b5cb3ce8ae9c2d936ca29cfda5165bdf6dbeb51b59e16506d76d394daf76d08602c3640f88d9d2829f1a60872717019f4cf00de6dd97154b6e688385aacdc780066e0db14066076a0d8e3985b4fb4c04fc817ceadd774352b4797efbf419398fcfdedc100bae48ca2b88bdedf9c7cb4407d3ff57cd152b364055da1b8ea5331e1f54e4c2c453b1cb620340e3dc950db596f51c2cc1485f7bc1b6ce31716742b5d2c07a5a6739f0d17022c733c3022014ed678b921a95d5e9e0a942a8d8b26849a4dd31cacd2116002575962c38469c3ec01ce3cbcb8a0500e71f963f74d2cbfe104f5923bfa7b557d4167e2cc12f01eff519c4af28fbdf83d900716ae90c63acfd0e7bf8aa877ad0677e4054370e983086c8613a619c0bb32c883881c98b6a9ace7e167f2904621179bf3c631a122ee15c929aed825fe2e87eb5198bfca0888608991892eaa376f753e1236f9174b3e612d90f2ca7f69d75e181442a0845270a5339f78f693b80ac139866ee12108464c2f3baf3099f5d2ea2377cb31f73db086d2cb33e1057a689511f1ea37541bd0b5167febc2205a81b094217dd096e8b8272d17e85878503115c96b0fa433138196b984cfb503860518a825cad432130b4b2d83be58f969ef774ed771ec5bfb72d8886b58eb574ce174e5bb272d3839b69dbd74d27610a5a90d0f7101158b4807ba6a3728029061bef097a1d1f0e3102ac7c15a64834666d85f160fe8690487b351fe6013b65df90acee32538bd21d022811ae8b49633a33777d826fbc2034c5703b9118ce47c2a3fb79b207aa50831896b129cafd22f887637fdacac09bc660ae670950b7b7db0fa0ffff33faeb3c729dba66975720a39c5dca77a7c22748a3756d50e39a9c724e5310d2fdf10496fefcde8c3c8c055844e18d0aa0fa01928d2bd3f8c6fc688c15c7d2e03fdc505bd35f16c37aeae1849f9dc3585ea7690ffc28bfe4985645063d79ddd28875d2b1b13b64c174f314103fa2fa6a3273459b3b5ab13c08b612086d86f5c140780fb8dce0a3e06b7abbbc35afb835b452c660d9a0201ada65df39b2ca9aea55e365cbe9709d54ca02a7e1e4b2e6913eea8c5ccd68be7f70a37bac014b7c00d4526c4a9d4f809a587593d47b04ab0bc80ddbd1a6dc2678aa8121e9b401e7d5e1ef4517f5c761067b76ec235ef3d29d1a8d5db432e9796f8da561980839eb1ec77de87a89789973e17710af4fec68ba48f1a6b3afacf7eeffb0271408515ffa82e4aa7e9e15b547658ce3b83fa3dce265cbc06a55931522c4ea707dc736930200d1d94066b1ec9f9834fe9f8dfc60002ee76ffda03255455bba6a65ec250fd3174a18a9bf2b83fa352cc000eed47a91eff24efa20c47126529a0f1b306226fbefab4b17bd8d19967d4ef00a8ebe413e43c3d36fcbefc2dec135918dbd1eb54219171c8437c7bf15962faba083f83ea96b0854d16e4520f6960fa36700be22f394eee99ebb507d866e1ec4b73d355324b55e64526f7f522088a655050420c9eb34dcb9cb897d6aafbb0e9e27efc7a07887c8d10328f94ab53ff634d7f643a92eba918897d549ba4ca982a466230f384b51e42f05538e1828ef8eb2a4253ec7affe26153cb0f60556ff7ad73a07d491dec13f09bdc15f3e62de32962493d2d6dde594a6974d85a57e45403fc666724cfa886a2f626816f91b78085e71ec78284f73eb2f9470760c8932193b36e95a3c5d093dfce04a6030af8352b6811c600ceae672e69ebd5109bb67785bc8e58b39ff3286f2786fbab743a29a03217b07bcbb297e312ba64f37bc463e597f5556a3dbf9fa701d3a3e1c8a9c3213e80bb11cbbc6a4099aabe4d4f779bac493d12799e66bc199d317159761a36ee43dbe84241029c520cb9d90b739dedb947aee8a1774987cf030d510f410d7b33ff002536ae9bccee83ed3686160c65efcac86aaf3f723b6427345c4043abb81f76af56b2b86a2250543bae0f067691b3cc02caaae9bb33ac09ea903f5a95195142910a03ad6e614926e894e89467906f3a29067ba1a3efadb4a3f4dd95d30de826b270be94065f1432031e9b7c039e201e3e46365fadd72e968aadafe5acd4887024c901d8c09fa85f528c5d706adb2400b5e60259c08b5d5fec3389253662394acdf2285a3a14763ca1852caae8d12030fe5a78632f47947d2c4d8ee376994dac3db85e5ec749c97272e11079e13161702e93b53171b0d0dc72fed8d8a50d82a030c72851d20242b511f32d42cd55ab88d8d3c5367787317507d22bc31dabab5aef322975df430dac05a83b4a0c3a79722cd4c6897626a7d90d7897bfd673a0abeff2d9b9f30e38e47acf44f150e963eb1fcbe2bd0fcc3a43b49e88abbc09b971181bf2c469b2261597d26363f427c179f8dac7122abb2d63f84fd2336a28e70133e6977128c12484cadcda9f8b06972d3c6c39219a4c5767fd3241f333faaa8d0f963a390c50219c21a479523822defde15ff1a95b472231842b503c855ceced43550f43b138eb0a81833b1a20440cf1fd4eecccfbfb88bb3ac50e2dff708e1b0a105ee7d2a40da0d9d30be86cf32a5f676cad25ad17652572d69743e236f8231b705c9759a6c8477d383e9b7bca93642da27fee837923b59b40033355d67c974f37a1e1d2b303c4ba07de4b9f04415973ec1d9719cd23628c14e84bfee067c2aaea3622cf93934ed1bedb254c7c0fa09d7b7d7087fa81a6507e4fd5b670fb5f6c3d7b5b6d165206587eb9d815bd24cebbe74c3db9bf35a404dc1fca12fdc1f59822b05f8b4ce1a549777258f67a2ba68a072cee98aebde7b1c32639d199671c5b1a079488bc7f77fdcaacbe7cc9dd0252cf65befc3005906034d47dd28df9b3ce0601649455b92725c5240b50944f5796d35018bcbcf2e305258e539235e961331c2eaddeb52ebe2b5b97bfbd3a85d2dccd99735229a88ad1e90c0a8b3d961060a9fd7eff2b7e11e7af94ca6575dc7e0610b346414f42ef2fadfd7947e031197f78c610036a3cd93872a0d9e39efb84671213aff810cee9c1e40902451d0953b32f77955adeae3df7118f16c4cd54d0f1fec7ea3a9591465ced56b94a4755e75b33057b404c3644ac229dbbc7d023c7f8ce86bf54a4fb6de60d9789586701e84581306e082074a5c753750a7d5b84000736609f9e34295f6a5eb1277376e32d8237e7b22ba1b2c1f6018cf578846a32687a4a507f3eb8391d988e905fa0b4f953f1c8a3a9e57afa7e6d57e9236c2568a04489f980267a034fc6f4c9f01f04b2eb2433ae46144ab22235698b37067a2c087fff6b2241f327902bdc294ac688405a93c471c855a5dc9962372ab0a3754f1add17d67be309eccd5fa86cf02c0d5aaee6f0aac3bf0632781ee43024622e002894af1386b98d2bd0b7fa748e9bd610d6df035cc1a5fb5d73e381ae1cc7442ae04b0b63239de3ba4dcfd8809ff6e525d7ebe77b07c2db0da4d035946c0bdbe9d61468d91565ad2ceff4d763a9fdc670637c19838d6898e34bc2108db622bee14ecf7bc8aca9e89a87e3ef77d4cb435b0ff7e2fa299544b8d299e523570f5b4f3bc390cd21d48de655fa8567ba083cc73f2a33819c045cf822522ea89232a280c1b45315921ec944f3b7b506ade036cfd54c5895e2154b6ef90414edfe75afb8374e7684f20f7cff142867dfc56e5cab8e472426ca04cad22c6d08cf15bac657783966f4b0ab36e007a1866cdba3b800b7ddd1566ed4fb44433dd3eb042f1cab3eb71ccd7f11ce6887cc5a908ada27b1fbd6b359a16f4dbec9f1b052090a90ceec044fd8bd6d0010392a31ffb533eb343479141321d2481566388387ccaa6cbd3147edaef4bd885294485dae98e53b0a1394bd274807898a326df93716f0782268ae35f6586c4ee1db4b93f35fb70e26ccdaea75ec90addb8bb0fc3b1b87e1663fe055d643e02850378b188234d52b17bcda57aa37b39795c0a5bff4057a528f6cdabbb0a5bc2bd14ecdc7ee1bfa984e08e340b481c1463e5e84597c5baf4c393adb74e4df3fba0ed6e7973ef3c27d72d4f6c382338971e0b2e9418bcb246244d80a8e5ddd4dbb3ab402575b06de91f9c330f7b12066de5a37e36cce92b0a41d39dff2b7d55f3386d2d096505218b566af73ed15a214a492d7e80503dab59b61f76181ebb95851f7cb9fa00b39c763041f180248a8eaa37b0b2e96a28269dd1f5adaa97d10eaae805b363fd2cfe3a3d2ab78bc33459d9dffea0cd77146a992dbbae2a81544bc0c6bd3bd62c145744f91c105622fd18465c8c8a8e742f582fe658de2ee7116421bfce463d63ed013f06011c4fb53102d2999e4f176b15ba0563836e7d941c8cff8e76633fc4c92354049699b3502e62cfff3bf83318b17e1a681195a9a9dba70c32c2c7327baad20a8ae4107efd41e0afbb612f901d980d16c1cc18ef0dce867295619a66ece3ff391ba9ba0b4774c8c954fc8f4437ad04b0e46e86b377cc8fa7ad16668539536b7585f3eba60596ad2c6eb2224802f6efa4edc1182427a8f85ea10beda0ff615546564e9132a0ec905e54cb5363667bda36b8a29443f0d345e5b2cb16d5485b2c8ec66addc1ffd27af064626a9c6170291bff2b57206d8e186e4390dabe257f351feeea48c318d4d7f663d4487419e21867d5c438d6d4ac2d1a5cd9c2bef6d00bd6cb16f9bff5962a1d57407bfdfb2c63c1063261755244afcbcd8f1ca09a1f086b3df5e11b5470cfff86fbe7ec2f22490c27906796d87566f0916529bfb3d25eea601896bdf65044355fb1d6322d662686952b8cabf8ada783dd86b35e347081e00f32532b577e1c206174a3326b662f2a471eb7007993b9e19c5e3c050c2becfa3f5b1496bbe4e374515f5d814c1c7972ce3bcbd9112664b43db80d4473d79fa753f6654bbcddc97261fabdb959cf4fbb043b50ae2bc74f50bed4e3cdb18f1d904df1fb98b5dd5acae88c49cd1c278b63e4659048f0926c467d0fb992cca3a6419e5da230516da01ae6e08a0d0d6791f2c65b58890e74336b0cc5c99d7900e417d2bd4320b56e37e43b091d9824f810482cf6c1467e14ee6db48fcea06036627467cfaf396d2a714ab213b9a4fa4616d6d4fedf9948c96ee3a7c6ee4b3ba7175124555c0e3bba2ff7c3598a71855bfe7e281abc3d7b590d8bb2fa88973d95dc304f41da068606c7c03be6dfdafcc989dc3ea996dc5475490fb6d2468028ca4b5379a16f877f2b36f461690c1a1f3bf2821a8384f974e67bbc10e65860a5bed0c20c835a80253bd89a1709bbe1da138fbae9d631103a0c2b8730cea552cbddd11cb5f9b924f48b5607ba038698a65c69e142e18a5cd3f2f4ff3eb7db49f5fdfc37e2cd0be7d1cc4eacb6ad93ebae69024c3966e521f48b22cc7f2efb3e05c351d9045728d4d44df26dfd74a99f457ddf4f24f20881a619cb372722bda3bf9cf30e623602db5cca97dd20e9e4640d7c3a7c3c99440427106cc946e98a563e94b2c53e4629326dba34d1980d398fb99b4123ff05fe9bf2bdf068b29d85b374b2c74e6ce3ecd82f8c685182904229b58de3211707b92f68dcd369a7ecf2d40945ede3a2879ecaa3f1804c4746781b67c8a4f2fd22ffeb3e66464ec69ae960ec57968050c0be016aca05a5a85875adc788651e8fb14ec8f0cd93ec61591f974aea96fad9dc8da42e7407f23259386628bff08e7ca67e0dee6beb0ad76e4d2102f2353bbef55e3cf81d2cbb088ee6cd579b5b544783cad94105f536879bf2470960e708b732d328818ecb95d05e3ce8b6a9089e466ee00a32f0590529b45ed62723e92a8a990cf4f6fc292d750019474f2693bc38d9c172052523bb4dd5a25abc1fbb20d446d533df1e2dd1f2ecc6461303e300d6d69f4e108291428f8e74f8ad8b8de9deb91ba94004f42f313514733953c91c18fb5de14ff523ae945b8e9a6cedd3ee31e605aaf7b96cd9574c3374f8b6478142422eb16c19c90c1d4dcd16dee2eedc11d9656aabeb91156298c8cf0e99db803688100f05da8269a75d0208d06efc17b33244ec3cc7947d44960cd75ea2fd640f9585f53ad5d116988e5f26588171811b259ae9917d61e9d208c152e4eeed92dcfc6a70718df7dcd09d824934271e2ab60096412eff5275a075cf319fd11158617249120f869fa06e7c914515b5307f9d9f92a7d71f47e36b9ab4e8607e863819867eab68adc686ec3cde9e7644eb311e8b8fbd06ded39b465fae2f484a08b8d04137e9e7f0f5501dda91bb106cfc6c4adaff0c1ea82c2edaf6a250bc2eeecff2ec83ec0186a9bf484052e633b019c64ae7299951a8f0e2427472bc4a95b4a681f3d4414bb6f31a9d9b07cbd72cc2ab3c9a92a4211298d4ce9f38fcf1e4e20f286b38276579a376fdca924960e70d9aaa8f7714173c67117bbf3c8d7d1a94ff9f2fae643502d44e2a805eb7a7b8c0370fe0b72ad960cc34b9d50f02b256c063e4ba749a2231b38de126ce5d40afff8e09df2d2f22c98d42c20226dec64596eca9c2f789289715a41093ef4f2a5346d06327128f5a7d5d31d44eca5caf3e1142e90faecd2e62cf3b62e1cbbebfe41ba00e871df6718152b08384516535b0287e4af7f2c3c9e89777537d314b0ea31430b4d0f1365542e9f91832fb4dfc776cab910465975ed4ba79ad4733dfda513835f97c5564bf9d221485dfd5839e5d871263c641d1e24cd647056d13d34e90990af31d7a14f3ff7a1d2e1d4b16b3b9990366d2e4206d30431d86e185e422191d4b44005d752252cf5830fc576098922773de89629b21bdbd08c6dec1505ad6d1e1c99fa7b7126daff1b6ee8a895da78d42076031c6ee245923e854dfeb391bd4d0cb8fe4aa87c38a3ce352f7a6e11df2e0285f7062a2a5a5324834c74e00abd2249a110d242b46108fff4702f2002d5e180d013fab98acec4e1f69bd46bc2f70bd333090094cd729cec33d1348726b2dbea837c6330656b00ff71bc9ce7839fbd5515f2f2291b2dc04fcb6ef3f70a02f18734ec71f290f9ffc0b76575d62e2f58f197cce22a00298da7ccf5b43d3ef2ad01a9b14d1c9c8e09b3db08f406893842e2e7241ab9ec7d78d460e301730c245780610392c4870dd2a1fb97770938ea06b49304831f9d30a0748adb0e2649ddb5b1b0c7fd2fa08e642c067c485b0e980ee9afbc89d66c08b42beadd994438d462e28635d45fd5ee22f93ec6ca95323ec1c3be5efecece84b42f7ff27ae3ae7e7df7057fd3d2e23b9d6d26e463aed5c25420a688ca04c9201ce8a579e49762a56d323f4e1d12207302e23cf4cbf07d99a795c373673994e5c33f3e89b97fe2a33b99383254a68662749b75c83b49ed59f8d0fd4358d113b3335b235542b8f9df012be07e4ce3bde59deaf6374b6165ea408c9739562e6b345dbdee4c8132bd34aef4453020d681210d6f86ae44987f58afeceb78afdf8c50cd7df9634b936071aef57a4bc20674f96d64f5cca18f0ba72782ca84db532d3879b1a19353ce440872a1e89b668942f5e7f149a356cb90dc39ae15aac7efaeb58b1d9718b6d1f624b738e85a190da07c2795a7ff06b3e5b9ec79c6ec7e5d27ab3e4d297ade48bf35117a4ef533a125c0c90f6ac676d0e17edbdd39cbd8b9c861c0f26b0bc6120b349d345575a9c3cff6c5cc2e890735159829d9582d4b8e23aa11de7ec9a021ed7955b046de7a70684f6a6055b4861fd02b0f722ca91b58b9c12c2339bc3ff85be7a0fca176ae48bd969e8448d9dc7fa8de37c2a360faaed1ea6b9b3eab8c1f4e55cf295babe147cb6ec850fb4db63ba6033add604f4b0eeef50a3080ab69823091c7c27c9f1e73eaa4caaf914c396192a1cbafd683eeca17c9682528be1626e65503c330f46f65d855aaf90ccf0c76287292a89f8bb7a1651d726d440d831a954754f46e099dc1e4d753ee953e850c0dfc5b1201df05cb2bacde7236c0850ac2fb8f652145b86a169d61c9ab5f1bb660c79fe679e4c8625da211965f8e96eec83172f7a154e854b2f7c29884afcfa06cd3c97a219616e9dbecf67187a2efb872361399c0a73be0e1242e7c47d839effa14f54cc7f287b8ac706db830600e54cdf5b0ba9c5033ef5fdcfc7334afeebe0f795f64c765f2610dab2c7e2e068b3991a5a7daa0147557c72e10e97533f79391b0bf4175cf5877b345049d081c4a010ca03409a91dcf77790b849b27dd0df2f9e4807107203eeef0506a204ee0fb1bb6d59645f0fdcf786fd4deaaac3243e373ab32fa69746316af0fc1efba66dca556be65377959f0470881eae0e86f89d0e6636cbdd558ddc72ae8ab8bba9994a1ee9d9ab22bdfb4e5e7583a5683e909dbf09afeaf21b9f43ea6e8bbd02a1be8189f482d405d9ad7fa3cc03ec6b56f8fb526aa17071e0d1425dedd0053872eb6f70b39f480e22416a0e9e873efa1cb83a2d0f541f12dec91214d10a034e77657ee21b4185268241cc3a8f47d3803de38066a11ce69b818557c2efa0bc873899515f59250398c16dcc5d3f7f46fb8bccc150b50c456dfc7f03410cc57aa67df531bc08b28e08218f4f763029d8f97c611b864867f4d3f2e143e2a39f49c2c068a3aae317f8ba2dc3e10f25726d5ac2a8f5e839c4c2eb19e7584358a12c6c65e62c760848124629cb9ecd53713bf30bf75fcbda92f8d4a22fc88f5a0fc54791f29b899240883bbb76e152f511816afc7ac66cb7336ac27cfa82aeaf03b62fa3519a57e9ef4414bfada9b0c30fff44cd9b4dde1949e7280056486fd1c4bd5f32f05465896dd06535ed9a19d8da4cd9f514c4d5398b170e5f80b27bb2182c84c238cfb174c06edb937aad6eaf27005b02fd41dab0c1442cc35f2bac185f1f6bcbb49ea1a3ecdfe432e4c7b86bce608f1243ce528b41d3fe60318853571434a432ff41cd228d5c8c4829f421e52d2c8162cef1b20e651111d53e9f712e3601b92ff364e3058a2af3d250f9a4be4350cfbd8c7997e7eda6afad049f422c54ca5fc26c1f49be32a240a6d221ef9352da6ac2e18fbf7b3aa14777d6b21e41036869c674a0e27efcea8cabdbcab49d81454a009b49e54f092acc236e3ed04df19c68940f4cdf74cafff2c12b456a6ad9b6c472f6f214b539b562a40de5005995d8f455523715d970e9195ab6f3b45b8a295e74ae66a987c383fe37feef3fd5c66f197706dc2f0365c5cf21c5b42acb651b1a2805e6556ba47c172f4dec52b2f72573b1adacf9b638668b4f67553499be8c61f9e67467497e449e5e1e5772210d17c628642c931d21aefce04456959071c278442552cd3d37df0365240b7c0bb4ddf98edc8e85ed0b1d91159d212b28569a89bb86318d19043926fd426b23e3a4c2cb677d9a07388cf65a5154f9c0ce5741c0ed8b473590e446a0740c158ad0d5c828ffc71065e869ed16f7c1817c29267c4f3a351bcbab800e2c89b7ce00eeb8191209005b0fbbcf3d07b8146f707811a5c90083bce8f97fd7d850a3e9930bc88b7efa64182ef4db527fedf2f1d292af4c37f18138c5a7d6ca90bfb386363bf6ebcb11f1518349477bb5155dde20e9df82d33fe29ac36c1e4f76425c23a9ae61a695895cc061173872c6cb20ef7edf2f8263b643dc3c6bb49596a0da6ab14bc600cb6fa7045ca56f996796014356203e6d0ef29fd0b3e244e59ca26eece4c588a8c3f7532b80858a11463d55e35439c48fb1188fc0f262508318fa6055c393bb2c13ef46c454477f80e4191c7172dbcae8577eacef53aca37c23b7b7242353b01b4badf7a3245f9df5ee782e931d5aab3adcd1d7c69d4465a8662498fef3ba0491601a69b34e0fe6c7aa3a1f6fee6c3711c5a1bf19e04eea223aeabbe9225ba585779299130e18463a4144ee7da1cf3f3c65eaee989e4aa22b1e672b57eea437dd671657788fca6d3c81ddc19632d5dcc345adc5d28ff2bc1ff7b26e0808457904cc46fc1dc8c75712cb877d05bf7981104da2aea984d9b748f07ab030ea9c2bec388f1b9151a2f8838130c72a128e1b7174e32ff77f895b0a430673c23a67047ac6cac6fdd1ffdb5900cba7a28b873ba38498ccb7d5615099a3ffb78dc22d66a26049d526bfc9e88285e38f0fa986b6fde59a5fbfdcbdf7cf9a5eb42022829129f48a722cb60fbe8b0bcce18bf26fe9b8c19567aa6bd5d6b3521b474de3e47cab5c20aa08daa5c706a43aafb9196d5c25b6b1ce807937de2f9d4f3ba7ee9712acf6c888ae8111245a09da7bcf57f180cf319b07a27dd9a13c46ea1fa8392b79b511e3cde38da30025cfd85bc884992f9df0e2a0545c3da2363f89efa5fdf7e8a14f520c61e79f1ae94069b12a36f000f5ea98b28a8668c72b6662aa8fa719de97280d2ba13429285d1265cd8c3140b33e26ecef860f54d743987f51a4920c289a6274d06ca90928ffe36c4eca6765e7061073704a54f0682874bffd0b2de80fd38033ae810f2b8908d22f071d63193b712ac29da0ab2443078c02ac9cdef26591172976d6d96bbfc366a67ed2902f059f07826d2055c33b964cb0c2f39a95b01211cbe6f2ef58224e9d7971ab9b1341da3f8e0ab44a50e040ffd2e1b2fe8635bcc2d3fbf01ac1e07a917f0853aa2441500ef58e42d930eab01ca2f4074f9281e413a19ad7f12678411a0965f698a7cbfd104c2f93e5d553e78c412aa455dc180958d4d017953cab5703f74b7a73e9e67f09416fbdbb86d005790bf762cf061ee169f8afbfb2d90434ef256ad65a034db8de1ed98cf652d24650c93f55136140b5fa765a9d5a61e5f15c58894361c45d2e0e06b34fd5ebfeebb9bc4ec15bec4b0afded943a5d34b04eb1fdeaded34b01b3a3f3e1342255cc02f35c7fefbf22da5b964ea14075c096a318e8ec5ee74b665cc2bb2f85dfd8693369c70aa9bb88c855d380f8e9afaaa42a0d90a9eb0e8e148a9c0757ff26ffb8ff36c6c8f8fa16e28c36144beb93d91919bc7bb7d733190c4565974ad27db6043d48fcade3abcb8ed336363185e4082fc7b2bab11ef939b99182ed8eee86c05b8410e01bb5b8b2e0cf8e18e26284a41242627c68c55c892c9995168941c8df392b5a3b9af3490f92df538a5fe50aaa55b5cbcf900732aeffaf8fade08b0bbd09c6a62805661646867a7e5054410d1da327111913b337433c2883a82e7b9fd2c6029d8216c9eb6f9b94b4f97920641f721b61d2d443b597db31e90378aa54eb6cf8ba3d9bfbf86e8186570f686941641dd84371d7c93d37220526045bc50f0bbddb0484653b5d0b3763941607ccb1841e11c7bff7641f201cc0595cb0523a67a3db00b9a141b0d283df7ce8a0c831d1a785ea8d6d7e73941f9fbf6ef539f34f343f29556805779f9dea4c46f9f4a57201d92743cbb78d2ad2ab2a8bc2e6642803589005547238f9eaedbc1000bcf5992f3219be6ff9879ee9f48374978eb68ca135b12c3f08246fa10daaa9b2554e8bf4feeee285e3ea71253d6ff23094c5101359b9253d9a9c171630c499dd3dae75300134cc773045d00e74d89a95c02e93da5be3ba724ac501413d5bbbbcf34ef6c6d744bd4465dcc87aa629cadb8028c7e7f2b6cdc65f00c6edb694caddba3226b57ead6b7c13790a21ee847ebeee759abe338c61ab9f519167c57107c81164c4135318c1ea2962524a8abe0a619e986638ce1eefe5082d2d47205fcad295d2c52f5ba38570a25c681674ef9f53f65bacd3c887985920a6782a8add2131b8a1776e21ea61ab46e6bfbee6d1bb59899933345c05b652bc3537a64377debc0c7ebfb7c18bd7bc5332c7ad0b2c9012dfae2701a7ed049de4e459a60393a8117086b1c12b884a0cfd094df1aa12e222ac35dffb12bfff0b5daee180e2aa112f186833c831866dc46da115d6e83dec7a07559408aa31c2b9d7759b046a987268d393f57f7d5d2f963b2d5f901488df8a0afb4530e56f2895cab17ddf9c10c3b495e3ffb5d4bb95aa304f652d03fc327f2a2ac2c02051b30196595f795e48318515fb2734922cd01c27c6d2667130fd11ac22b3c937dc97c56981c552cdc62a06e55dd88347cf5dffafc6a0c14adfdab1d875bc50f1e9a2598faf8d835428ad660cacafb4c04357ef4df168cd574d04cf0238d026a1c40bf441829b0fab3fe40e02787f9db0530f80575b102cd864fdb69dc0d9ae93a96f2ad03d3118ceac55c77c6c0d9e2863727946b5db4152c62bf00e63d71325ede3756fcbaa5d362f33eae69ba1c81e1fe30b243e666280f72bbdcf7ba2e42caf8e43d58af5905d6590da059b550a7633bc40f1f1436621f5006a0fd434ddacabc890869a647b05464692a120ae0ef6b067015775b1685ad4cf2eef652b2ab65301ac9107ebaacb87a1873aa33a1c0bac0b6d5d35ca98b52ec2c6519a11e4f5eaeae156dbd36b6ea532843b0b82451c3abc9fa4a5b237e9cb65d78dea598cff324cce71953bdc129a2e8ec2362f88755dd42c8ee13461fd9011cb23bcf00fc767370c4a94992fc9838d8f781f62a071b477b48fb6abed2b0fea2d064941c33353e9a0900b890251b6ca60e11f5a317419cc44a77c0bc9c1fa4e3035c948c0df8e95d28fe72c394463052df8ed094d66f86b58d3e719892f62fc80b4f7c95321dba0555e335a90b44224a774e3fa504648c39c7ad0c4b2e0e4a2b1d1dec7ec7c5b3d79437a05a6909b298d99983496013b380845b27419f234712ea832649cbfb69270d958d3bca916ebb7bd60099aa9b24acb77f97dd21959e0ec4dba1518f17f38969a7f9141d8210325ea591cee6c877488ad2608746e3ad430f7056a7aa5ff8d3cc25c7e016f10f7b81b2c8e356be08e1a0b0e124a0a46bfc6eea51419316307787ea9302790dfedd2c73b86a81898b81f8c570593d74ad460d62810db42f54c5ea2409ae32ba3875d744b7f3716e40949c87f9ea461723b01da9c7196e86f99d9015a785799e11823c2daffc5df0650a33dbed51168102a581fab207a27da41fef0475a4ac81503b1fad281de92aaa7cf9db67cb8e399d16e20774983bd2d1419e1da600a3a7d9cca47728262ac871f44b39500aea710e4e88b6c5fe7ccc095a187b4223c176a012c5214749d2369d5e102169c899621138cc1495e71cb8897b3eed768208673bee489e73b5e1a2ba1e981083cd7aa12a55452619f2d15560724e93663f52a93956460e82a2b81d3eab34b126b1fe568ff3c298930dd35223b778073994227d3ecafde5bd1f9bb2a5a6610de49ed14166c35911303346f1e98f1673018258ba19dff5c59a04a8a247ed79bc9c1490bb02d57ddf44d4084d97c580e9e93adf68d0e7d0a99b352e9e3d1b3fa7f5e0080c959a9e1b833d3b03e76e9fdcee8cf82f2c057782b536153a575b0d2d79e2272dcb9daef6a56f09ce24f1b5a9160db6f4fbafbdfeaa35376f8882049dc574fedcfbc4608406bd1e43e8500ff4dc67622e6ec46e7583f3b8eb770b1b789ba986f786318365d0e7abc7471058d5fe045718105f3b68d0060a5119a01805bdaa57d1bdcc6499c32b23ee3f19b36c338ba74af048492388c11519883500e88b07ac38019166a9edd76d86d5e3a99b23b84ced0135e164e87fabee5e8602542c394d19e55f7adcd7822aa0c7907792cda4a4c8b53f1a4af94c12850ae75784472cd18f2e30a369f5394082b0db27baa629cd85ae85e6343d660ed301be9b0c424cb10e0fdd2d7a8a324836aa196729236de05457298270f5dd93e314dcf6fa21013906cfc1b7351529e416389fd0cf9bd1eaa5743e8a6a2689f5d050cf6c7c763d32477afc4a0d565e5924cc1e9d35bb365857bd3be96f541c21af33679e467dccf063298a9e37c9956648ae7e7bfc01b14186f142d887fedff43d98d3875effbdca70619cf01479b629d8040a5786f904b4254e6ffc364fed5897b392644521366a66b8980940cb6a93d8701f53cc2007a0f8d7b0c8b08d61711e68c7bb51ce209bf4fb1c68015625d2781fff30a4a496ef9c93d1d428ecb692efd0ddee42b141e6de74395ce16095d1c22648ae0a9f2d7828612ddbd29953fa72371237bad22c59cb1d8df106e186ec9bda9422600265a102c6961cb789b03b0b129c7c60b24acf98b2794feded5f9e05e91f73101cb9de8a077141dadb1a55e8ebe5390c33f625078a0db9325db0900a8f6e2669c4b538ba6014fd3ecf9329ea9ef2ccf6312241e62478a32a9f865ee3cdf3db6de3eaddd566ea1e1f74f0f52cd111dae771560ffcbedc9b8cdfb93ecfcaafff2203a63c160ecb0d7b6ae2237b75492f61ef087bc01e39bb7874e036b45665b7768d0a7ff811f9a32457363e44413e8cb50685a3a0bfe76b2cff97cec46d902adc1e44f9758010880ef50624f14628e92b24a7320e7f62bc1bc79f3dfd50a7e28233c96c843004f160f3cc4fd27bc848d4f5b35f7c3f17565a133af34517638e02e27796cfde7f60bf73ba0172db228579b1f916d2ab0a69e035fe137ce455fe2d9132fc63014f4cb6af10658a763bf4999109fb7fa826a5dfffeb856d087ce1670ee0a710801294bc04edde8e5e305ef9a6e3301a95245ae3e2ab489c5094d10656c31451308a0ef80d21044d586d66d4c0c80d2b18cb13f08731cc105709189fba8d6660095b8c29dd8dd345404f1010227fd9e76eb5d3d46f7d88fdcd15a73355817e0a477545928dfd8da91858b790da39681e70e90ecff7ae9821b646f42e1526dcb903b9ba81d3f887b811538a63e6af200f7dd0ee3050a8beff4407d7ae4d8e47d7a8c5194fa902ac457fc3534bdc5f220ac747d538b98d84adb2b9be3c0e3723eeb43f9ec0aa184e2fc4bbd63f664b4a76d88269218120137ed7f47925ee1c4a59a59abd40622daeffdb152966d506e2d8a365554e6d5e4a05f58a7ddcd895af7e0979f9631a17a165aeebda4282c02c63033c8721d6e238a92cc9d6a614cc8624632df615e687db4a3fc53ad6b5d00390cfdef038b3d6d5430620a40b966621fc8ba4424ad699a634a55de2907461d26f8e917c3fdd5984d895979c3e9301ec58babaad388776ebec19fb16838d298436ac9d0678261ad6e7ff685deda126a26c41530f69ae37a6a3b6d87a260f36bc3af6df2b8896ad99590f7624ea0f9e3dd6dad95dbb5ece0543e23788e78b1785c6dccf50f542311e7fa2a6a9512077c51e1b1f6fcc1c6ba47929bb9da8f215447559826de3bc5fc27afa7b7838aeb4c402d2b866830bf532c9a3c23f3c3261ea6a3f59559b2d1f785d9858eb8e82023ce1a055d407b4acb84e90b33a90fc1141919db10fc090baa9f4d20dedb968066ea75ce4aae8c84ef9b9978ec9c49f11672a253a46afc30df94d22a5f6070030e797365cec0565a6995a88f11249bed3c9fc61db51a42be2baed720c08b2e22d89c9963a8b7f3fe1a16d8a7814b333b4e05caf016a2155b93ddf9c8e03d066ea893830a27ff7f8cd5716d1c7e13383d5900e38b222b99bc68eb61be636d32255d373d581ddbf12dc98dab7090ff3f59bc1f6e4bd35712499ab785563d1af148c616b392292c3c5837c7a5651549bc516aede7659e001da1e970e86779e79a126551e2105a2cf946dfdef679e1b563b2eed72bd6022819e1ad9b79ccb3d86aa437888ea276c73a40cc4ffbbac07efde99e4b6dae9f8443e230b9441cb3ee7256d5f4b48d01081ebb7755f9c73c3497e9823b974750a9c29791d9bad0605693824be508f514ade4c6a7c37ceccddb1e56118197f6562a0dc4deb21da8418aeff980367ad02ba7b1abb31cbe2e7313c04afab7f0f2eb2581c4e674e411a717095defe339043764e5279539f053f27e9190435adea02c43c37b2721de4be2c9095b11e1a7e6584e63cff5ea72ff4c1ee9a3e0779cf550323396cf4593d12420d822727f04520842244bdcba0288320e13a5c99e5388faea1033432e8a41ca556d9b55eeeb79339cfba23b16a3cf565eec7c288d376ab0244b5af8ec4291fea1108fdcb176e39825b219998af678442649a8635b7e97da3473eef2002cf327498cab97627aab2fbe1dbf8f5a9594b5f5beeeddf851a6c75af0f16fc69996e757bb4d6b325c3a4fb070c2bcfd1f1a16ed90b74ce6df30009091ea1c89ac323e2b66997afa1f04de9ecec98fcb60394e5e42b03c53ef2fc8717af40d467ca0101ff681b10567cdc43d0e33afb94ba41ffe2d862877955e644f9e47f31539e9c2ba0e2e5176d9d9b71cb8bf478c61dab7341e74c3e13035e6c2f226b9be0b1e18ec61ce85b8bc29319ab710ef769499d179fa115ee5b8360479cf951a5951d4b0f8c0cc6096ee06ccb6a7e7fcd5e80cee6a0d5268fa879b0d1c2162d72d51c481c83a18be55fd59ec173fe9b2d23bfdbebbc06fd92af3947f4cf5c576776caac326d8b16e1c49189021bca26b86d9e7d0a482a5849ce1cc94672001a11c8d66500478e2b8da048b3982bf9c1b3be5a1ec236d912d1827d7c5a42ffdd6ef3bf1ed3fff14af09f9d31a7de3dd9826af1b9a92ba869827961f632c954391441be9c09b5958fd9d937f600e89b963dff8a5d75562d7518ef413e218db63577dfc634563c3954f2bfe0f9f4edce4fb0e26a77200b3447a5cba0520711aa8bf40053f0a3cdee57ed7bde9c3e848d61fd0ca3edcca5b5937496187283a07d2bb3bab9e96205941af88e53dafaae63899f8bd44a03336184c134fab56cca744aea29fc250e6201790392ef9e998f84c5d38c6cc829e9f2cebdbb47c4620ba32c0b2a5713e351f02446471c215f2ac8f04f0e2837c1c5f4abc9d0d4834dc6eb41597cbc3b63a7337fe1215d5ab11fa4bbbfb149b22111c7917961b5f79ee67a971bfec5f118312d1d03c498873ca346e896fa9661c509badd7335d183d29f61a6cfa8d848832a680d6d8021ee4862433f7a457d24f13168e72d922c9a6c320302ea6974529039155540c0f65df0cc0bb1142a57d57ec78899ec09e49d905562d53dca7e04a15be9e814c1232d62e5d984f8b734eca2e76ed88ed181cc746b88abf7c2e7b9e3f9950a1415a2465dd15c805192de043a2594731311ea86d431ec8491ce4518e3f3e4e09b4134ee17b597962223559a82c540a072bd7857f2188597855d34e7bb4ec3baf95ca5d3de90e4fc2217b60f78965fc36031685319e53f6a486ab84dd201b8250ee1a87e50826a7a974e595cd6aaa5efca768de6e9f40ccd5bd865b0ada3247a81e6d4f2326f5f15edccec2382f238bac4c7871e438a06a7e778ce61907de7e81e4e4a01b0f27532d810595a781d4b589a7be7241d17530abe9a013de880052b7bb63d80f88d162dcb6038fcd145bcda3fbd8b65e046a5311a1161c30d722c7a32812f9e18ec18277b964315c6dafc3ee343d27b6e241757ce1de3f49425bc7d70b9b934497298cfe6c020557459be1a7b9613f4923e0b20d0dcd485f34416e062fc42639049f5dbc4a833865366c2ea9f9f3b9291509a6d62bcb6057fdc22f4e807a2c92a4c916351199c8d00ea70da3d7d39d906cd77960a08fbb254598a69c403e9cf9dc0b5e1ff3d6e44a0cae1784129e09619036867403bf013b6e098da16f5747918dc7ebd0ed92fdf42ed1956e29d740d23872b824a37ec5dc183f1528b9ccc804f9d5d91377b1c74988c781769cf6654ba49a2492a9fb26d3e07e899cb307859b25d23040bbd09ad680639c49e83a866ccdbbe99d82d1612477b778af70a3cee1f2fa19937b12b07d02251f61266ef11c0c7bf472d6e5a78b72fd27cbde85c37960b0b7ed9f8dc0f5cf8fb3af7267b7089efce43e379bf7ee9dfd00e82c08b1d0cc654eb9d80bc932dfacf9e6586f91a714aca496998f4a9f260cad4ebe7f4597f2592cd947f66859ad078da949be3c9ed7fca795cb63071fdaac1ed997c5947ac31fc80db88e8a89afb2e162bec1a157363ae02060432913de466bc135d1703c4edc709336cc54056301c5f3dd5ce00f03c383715ecf653f34b34de4940edd1d10e4f8f1cf3b6a217d4410941da298b7e41bc41164324ae7c7ed8cd5e7a44aaa4a90cfc3924d3e9320ea5626f48412bc421f353ab55cf1d8c7c134ae223cc0de8c65847fbc7e550a2928ccccf446057df2098e5e7d12df69d430b6bef221b5eefe021ef527175091cab08988a830af43e8b9ea4bc1157e14d369e2cbd1932ab6896c111b4b5eea0a9abecf88fac299748e1a9c9c0b843bb56745bef7b4b3e767eb8e822fcb5102f00038f4a734454d6a8aaf0d6b9ec6ffd1ab51f5d345b9788b2cf4e6a00f960f7373b921e329f175f16726fe9f21b6864cdded6f04a99be0277dcef50734b811dcbc15edd49bdb037453e6355ae2290102c79093e5f273f83390e602604dabb0b401011e36a745ddc72143ded13a74e5aa32c3a20f7477a8c864864674260fd3c98bbda23229659cc57dc03026344be29c1896312299fb24ead05d327325adccf40ef1a3f42702e60b5abe83c77e74e1da3ccf16545279b8746ddc45742bca918d91fa6a3fee85d0b3dc65bb7fae04e74b25b1ee9e7b29908f1792858310053d3d9891b6be4815ec9e3da0e27866277bc5607ecd0c3d8671e3a9c4d4875a04e2d82ffcc2e30ac9dea976efc9a6cf6d661e77b045614fca291a8b18ff1b69e1a73ba8b3046ffe80f45587d86409458ed375f6bb053fa2d4ccf6cb5d75351766588d12db88dac9563d5c1a7450c407487256e6ca56b2dd5373bb6197b80173271552d96e80c55ddeecda6fdd5c982e2ddfaf0b981c70bf69c99611f62c654aa9bb61607fa189fe69d2e77a79e001c01f25d8556266c0eecd9ae1e997cd33f1547091cdd48a2d5616f898d887a58c6cc5bd2855aa488a5a49217e24ecd2e6a0649c85e05149c90333a62294508750c208df2c6073c2587fed84bcd6d0c792a376327a16a3299015dbec7e151d21f8bccbe19e7b511256365431055a578a0c49b77f2f461260679681a96680b8c989dd5ecf8db592899c26a59e4d1ef8d8293f0b66625108ad57680686257822fffbdf950f2522fb9d7822667888e9ddd13bae056b2e2c5a0e175e91d113724b3db5b2d7626da7f746be1e51e36ea97d0d5989d423b8702b52fc3e97211bd642ee69c4c88fa4573ff2210c4194d0f8efaca4de65c5e6ee5bcb584dab5b81f7acf2073e48ceae233a30ea6b30d6f79cb0b3a7a0bb2bdbac757f189ed65e04426d1dc7c2746d43230bf92e97757046b86d770bf77ff2a47214b149a6d2369408d09a1b32f14d29d073d160f0acc60a6f70cc301dfe2ca3a42e3595b5126167183f563580393e01a92ddde124815c68664ca41f7136f6c023987ee949f37d5452a41cd36c6cb0685014ccdd39ac256ead3be82091659fad0ad480ba3bb1ca971ee021233dd0e7676154a5ea9cdafd8a16e9588284e102336d118f3582f037daf8d551a32525a12cca2be4f1820b7a9583679fe2b6567ff828c3839fbb02b555e0f193d5c11bc5ba4789034562c7ce73a4462a3f84e75f764cc09937bab8a5a1f552cf01b69351a4e9190d750a329c93bb6cb6068bd90d59c43e396cdffb0b7c1b64ed1ac68ba352eff31fc9adcc86ecb75bda7de008c0a7d5f76c7d9b28b18a06765f1cbd728ea3251a056d0377428e37dabaedc774376f8dbcb33770e480476a9fd6e751a63ee8e9928ee7173817a18a02ca2e81fdd7696abdf01e28523462aee5a4fd653c5b6ef93a0ddda35ab16614a5d5e2b2b3b3be51d450d34282466a0eaef1e6378eb2d23af63963ab73a1ba173ad5191fe41764b305851b267f1314a5e5baf84eeed31afc8a522743220674c574eee940d28a9e928fe573f5999bf555c1a2397c14ac0e594161773ddb986362c51789a9a3629b9eb37954cf08120e85494379a89108b8f6fd076fd0bc50d63d16a6736bedf49cdf05e56873037ef0715faf856517cf09c0c5ef8a55d2c1b610f3adfdd8d85769c3e6116d847cc11d650f722db060d37d807b612d2b746e076a11044be12d730081fc0a56175365f54732be7084e765e049c9c496f7b9077e7ac80ca4350836fae4b6028d9c415cb79503802157556b6a3f17f3c8c024bb03b81d7ef6783df92c9e201c76645385bb1a138201396d80d8feddf5cd11505d7aa1c4ddc8e6f81bf99082ee64612ea0ff2f3fd14e6c2df2d3fe03c39c7491c1d8ee30e8eb5dbaeda22491a30fb0d897521660f46c042c33eaecd0d48ec145bd95a67f9f960cc9da2a387db47c763afcf971d144174f97b5688903c885d5b3560f89e8954d6e8b3d89d25c25e124aa54dab512dae4819d9e2a95b7fd780023f56e59fcb6cfc8fcd48ec8f4ffe0c78dc61efc09d67846ba1e4859e0e6abd1180b98446e3f8b481e4824d62bff67e479bbae25736388135c63ae0f1e1ddfc55b2839bbd14d49cdd2946f209bde30160a8a5b5ec5dd59b5f66115764e0af2120f3eb93d7d96febc457262d4aa0ee38d8d91640c75459afa0d31b167443c8aa7ac5ef319a66003cff6737be0ce92a82eefb47b46cd1b1961a91de58bf812894cf76ae5bf9d7fbb2372ff187f72c21df50abc1004f668681bb0d48254c8e745eeed89d3b9276b11405ec581b5efb63f860b9668bf6beb5b8c8141492a874da642ab52672a2a39d0e3e3ec659c3790f2cce310c965d8c4713277fcb535569db8dc69a145da14281c1e9c47218241e11c9499f31e12c75cc65256fd5c7a1576312b606f7f1a6e2249cdcb3ad3797b031712c22b22273f3277c72d4da6c2b1a663d332af99b191bf11ebe0cc4841fa11b48d9856e423dfe217a6db40cb7fde1e02d1d067b80e172e60c03814f343aec8b4f36a4673c82e567f96a071e947aaf702187ba9427e94ad3b4d2238d6f2404f9a6722b5beb4c686893ab5a16d57429f843147c299c0e2d689cdb8d361b0177dd2148fa834cdd945536a27222210da92d76f2383ae82390399e6604dfba353ad38978f7f14aea6777f80d7e0db5d3cc4207a7a6016befeafa5deea4059d776cef3c5ad048e99f9540c2d1f609d3abac7849252e7919025ed9cf3b193373801ba8e725de7e290831363d42170a70759f5079fe3d934748c16cee0f9b5ff782b77bcc78dbb6b69993c09fdf4d21f99b00e08255de4bdefa8850bdb144d7ba8774a98d49c73ad555085ab8d2546c86cc90aa401249d5a10579d960da5a45adce0117d9db1b15b265a90854b298e14e022d3e6515a0f6e5f09296a15bfffd54b8a4f4290b876ad9bf9002312a769e4092c83b662cd5abe0d0706e0299fd3a8e91e71b2ff02743f8a9926a39a5cfd23c3610edd11ec58c9ca166959e95884cb97f0219e10edb21f54da0cec3d0a7778d4ab2d9fbc99e2af9d70d75040273f2043a4c0318c758b72b3157f54cdcd014ac89b00f230ec8616a3112237ef118a4fde6df3e5d02084e045bfad699c6a0eec4c43a8e095943b80f32d0c9e4585fed9afd6da649fbff2bac816fc49a072570f904828403e8a594e614f14a2c866de512709154fcd7bcc41d1cbda936e54b03abdafe4ed0509ca406a4c893c064d21600b19fc34a6b5b40bcc4a9a34edcbf02a5129b8974e21496c02dfef9f1fbe2c3b0f0493f837c9584225006b273acc680dc81cb2ee095b8ddcf6ccd31003c9158ba961ea3b2a2bdf0e687b7b81d20089b3bce6df7a54d0b4f64995a51d17ae2c77220f076e652b9149adf9ce5dc48f963bf62e3f2eca42a5ea5e919e7d2e8911c8a5be33b2dc7b16094596d66948e36a08c1c6ef7734879e38e1571c0e0feb304ada4264dd21f6b683d4a5fb2a9301dd8f9772ea9881d095f33bf44e7e448de69f57dd5cac0881d10a683fde28d7c1137f16387f88600537a187f83b612ad9e7fcbe7a7cf8871cacd7238c3f2db7d8c6ac93db63e1db4eb90e19dce31e3aacb40a37adfac900facdd2eb1feb9861d1e0badf6b5b2f6c8302acfcda36e8fa965e9d2aff9517f2c8f776e060175ac4a473b64458a6ba01f92724275411a2bc9a5de948c2a2665d317161113c49d6fe5f3473cb6b35d7fc0f841fb1d5577e0d946d36dda5095e5c6c7a2c21e67dcb45d9124a7ebe228dbade41d62328ead2aa3b8f08da5c9956cc0cacc6df0771a9ad7b19c8b0de841167a367edf6242650f2c0c4b2e68911c4ffa1c612ec1b173b5ccb148087d283337e66a5201b2b990d518bccb8ca3e1ea07e68393204f9af904f54d80179aab2e21f55f4a74e8d9e130520d3cf8b9a88bc561a2e7480b60e7d81ff8f86896e7e168eee70513016ba7bdf6288599ec375ca07671f26e6af32b652dcf6c695447cbd12dc3d166ce69d8940a1f1a3e36c953cbc9bc1d8dd70e082a43160406219c27a869f60183d53d4789672c336c7d6954b3586cd3dbc2b868bd1d8a0bbdd18caa13c59680642540b07a1c0788a9369e82a9e160273fd371ceb27f863b3497fe0c61243c7e872a454e5f134921a1f8a209f0eb06163f98db2c1b8e71a55e19b0cd22b0b765233e01c8d4a19b7a736473ce36fe9c1726a5b4cc4297eaddd2b222602b63a3ebebc320c1c5f96b3f3cfee2c07770f439c500bb58b8f7e42e34982c775e2d0f596f000249c34df40b08fa9a5a3ae6c16ff32a86e7d29c4c34b6f25f81371db0c23740de9c2ef41db2379860d0bf4473ef1dabd807bbe031e8c72fefc82faa408f81a8624213cc3ebf3f0990502130d54a6a83b4911ce218631ada9905e503208da6f6077efc8de0d7c3b9ca3e6cb17f1594cefcad31da23de5bafff018f00f463a11d742b466927e20ed9724462617b8209c5e196caa2796e91ceb610db5124b58b4a35c8f2d7543ad14bd1b968190b5de348fca7df5cbd3793faa7c0a5d81c7dec13ef28e71ed7f4884b55c2cc810166f4d9c65c6fb3a60efecafb9932c07ea489055bd73f9da6d47e1741deeeaa53665dae54ba6926fe39819a2e3acb28933bbfc480ef912d4dbd9af4834238379a8f4d13945e12c4a6d34633f3ef03a9be6dfdb93f3f1b1e6593d3b09dc8dc07adf2dcd484d516d5dafca44294a6a85a50dd05e7235535a85aad0cf1b7fab8945ca3dfcdc43f1259d435cf4bfff63dc1777678ab9b6f1feee090388fd0a4b6f1462c3f6988a94ae286be2dcf49f382f68db3cb99948bc124a2570c9d9cbd55447a941334477055353cd388478c5acd6452ead8d3c570a606e8c78f4fae06d580fe96e508fce3bcfddc73463ce3e28a67ca49e9bed2593b8168ca00bff59632098dacd4cb2922d0bd353f08b81cdc18ccbcb2aab7dd9fe21c67482ae5475ba7d2672579d76859916f7da2259a5ffbd1054c85ae1ae2a6470695de7a90201d84a547c05642221b833f2267264f4ba697fff4987fdf0e4d09749e1f23ae68628b941a9f06ba5a381e92abadfc170cf2637e39adb142bb5dae8581f0ef76e6f9936c2b101f2c006eb16e0d8a9478c037f107c8293140d4eca3e7bcae590ad653912f6079c9841f0401f6436abcc5b7ef22c9f962f7f0d5462e46395454079bd9af6073255a331fa02313ec54d12b7d0c233d6e8714cbc4496cd04adda0ca402cafb31cd26b29616edff74d888314ce06e3cd2afb8c8342fca613ace92e6eec6f39e0985860955b537b2227fff08dbb81e2b5abaa8f366aa8c1b0b526b9b9bcbd7fcf9d75fd17b2930e94e2d6c58dcd39bf5a2fb8118909769f32d1d709cb5bebca1af6ab5717ebefd919a8f74649c119b623ad618384ccc067bf441d0391cb77466fa3858f2ea0a44f30376de5f6c61084b971ef8dc12c734d7af80f04eccbfa8fc0c824f0185b8907aca9c4fde9203d977c5fa4dddf197898010b951639a9565e59afe801dcbbcc5292cc0b56b77fdd2238e0716ae915112d45b18e8f22712748b0ae07e2e93d67635f39297116477e5d8ea1f83607edd9e136dda271cc0edb8d2a191624738225f8c5d2855689fb2be43672cb279023066736037d249378abf794f1a5965b65c2f8a62b5aa9ad4e4eb289138dfba88b03a2cb1b88b2bcde4b1b25e7bf4ae035625db5eee9078e6c4d8a886e820cd5b6aa265ccc05ffd88340ba7214bfd60c32b6ec97ce26e687516a9e7d0e0096278943503868302ec7c1ea7a751342f284c29f01a5b2ca9e3ba17a58b92e0d5afc76694690df13d133a31a2f07a94c515b28747433770fb496142fd6cdf553982fabcc4dc2b5afab6a0dae9106c797a7aca5a74e7d16abe5124d44c328d7f8986b153db87ca58e8cdf49a185a6d5f340f9dbba55ab3d69f25cc744d03cf7829174fc535ca8da1897f375c74990f0bc8584dc2c9531ddaa3bd98b0c5b7b83046fc097471718c03700c6faa9b027f7307534d73d91f104b2c73f765c79de61dd61ebfe5b068700a22711d634f8d36391bd1217d9386763b1262ed3c5289a57e87a1c03de3f22d061d70b7f796fb17d9fc5a09d9ded0929f1232180bfaa4aa4b85479c0a62951ccf6a80eb15fb65d34129c09b62b704c2ccdce238d078d79c76d62512aae04ba2dabab53055a4d7706785b48e7d5b21c087b872f9be0f6454389bf141ee328579dccb5e82bb8aebff12d70d2389ecaaa7522bcde265942348c703ff085d2b5beb198ec3d4ab1488d649258880b3bed8efb0d1183e654c70fc01a01fbc6d526693de18d9d7ec45f839ec12c0fdbf745604d2548dce2bf2131ab56276c8a19e1e9fbb93c331d468033328b3840586d3e3391784409b9664b471160de407d813c312b1817f38f89b60acdbdb8b91791bba1539166e9c047cd161686d799117081b132344d72a86480eb48599b4f1c2397a447b65c4dbc9e7b679bc4d2869451ac88db1f25810c828ad69b9c6af91c39e4fb89d075dd4fff0a0171de03eddcf05cb87651180c786f91bc54fe217dc78078795d37017afb95ebff86772fbf5c2bbe573944b6cbcec31983ca8650c6b1a5b7537da1417f89a581b4d3a0a04465ffb288ad51acd36afac2afe6b211fedc6d58494ddb5b5687fbec5bfe4e62354d2277d12c049e94666dad7c85ebb4634e86676b98405cf6d4573192318f6067269fb60ee93a6d611f80651458f018629124c24ee420ca304ced93a4dcc9dc9d52dda1c2e40ee8a6463a471efe1a714fdde01407d3b2249515fa2c9d7b2d7e1039f2cf512f56cbd5b5ad4e678a5ea9e207ff4bfe7a57c77282ef2b5a1876cac9f0fa4ad64cd965aae61eddfe34d8afcfbc23ba6d1f33544a0956e43121352a239ba442ad703def32173cd873d796878acbb798e5f802fba38db3dac50c98232328b60070aa34953ce50b6ce9925171ccd9d10e96f45c96e178147ced55d6d873d7a19fc577dd8f176eb92903082ce6ce91b817bafb910967518bad06a2b85bad8afede29b132d85090155ec67daefbc75ec5a8ab5302a0e9f73a826d50e63a7bfeeaa7cb6c2dfb27e8edff1714c27f98963d23a7c5315480455ae318df0f3655b26d770ff971c8ce3255915e74a030c09e18cfb53eff24da6a85cc7e9a53803ba84426c41df739f23e5c7f07341dfab364b19635bff59c27b5db7d9f03692511e99d0307be3bb042cdcc6312fd7a6a99e0529ae7ebcbb8b44208abf4b34a29ed67a2dcf5a477062654849e99258898576bc07ba48730283523582e52df4db58685aa0e0c3d0d4d8c125d42ca68323aebe5e1f47ee9bc8cc346583c06bd076a3f2a970d486841d36ee28d921ea3ebe765b7a01daf6866b4329d9c5e1a572853ce645969f6f578ebde7e15dae605e34116085c3273646660c3717dbdd05e7ad4db488161b32e0bbba7c10b6443e2ee5205bf8b7a449d003f2fed91bae53f03f9df69759505a91fe645776ff45f83a081076b8a125239aec062ac2c779d01682f1d7079161d7f6fba45ec63c7a2584fe0eef9f8754d9a33b802de076d3df8a2ebe7905834a2dd6fdf14a4166408963a33a6a41e6059f752756f264f86c902d3edeec7eedfe5a0e1c6aba286babbf38e5e3b32e0ab85f0a556d07d8841b3156f9c028325adb4d759b74925e8e716c8058cf0be124ace0ddb586b3c6d742655c808c56071edf5e9a97884f36ca1fdb0067e1727243696ac5192534992d89b691e9c55ae7ad94551f3842f7f2faaf3b88d3be534543a1b1d02474595152882927abe83cb4b0b9c42d2340b903b885b60d1575d51628a0a43df2b2b20f8be3e7df5b1429c5bbc2a2099c0f824d95fabdc02d1ba889ff9887c29cad37ecfcf735cb24768c3a37378ee471c57a6b35066aed89bb3756ca2a54cdde0e6e304f39ba642b837c3116687a7dbf45a8570d4fd18443903e341e9c2540d0e71f6c43548f4e985681670c765df3dc25565599985f0ba69a5f5d4562584137764511afc806d8b89602617f17916cf579bccb1639274fa72d71b2bdccaa19f27daee316e0a7c59d1f446490f7e388bd02df64d8ec3d1e2f77941eb9b3eb0f889558b5e51fb6a8d892f911f78740a31b108501bae274127e00ef78ab26e52adf2bffe2c19b07c1ceeb5d80e98057a8701e9121bb7952a91df91ffa65c6a31f87cb6d21a6ceabec943b29d474455fceeeb4dd935b945291d6c77230a6b524e655ba98ecb8ef4316aee940b18c37beceece3120e708851f0522f5f5f8890f4ed43b2fec0650c64cdbb93b7df058f461475114903e3423ef8d06f6110f1c14560be51c278c04cb27c5a6bcd34906c6e79fd17e8890369ed27e84583acbd201264f51ba98dac238a11422fe6db382b6330a56414803aa4445a0cadc4a5ae4fcdda26d454861c1b3db829776988c4bf5c783fcdbd2fe2f47358bb22337f0f05c1c623a8d0f2e813b528b4643892a0b60a0ed74df2ca222d4920b608657bd7b4ad191f223a13a1af1f546b491c7c4e32f90839f44e74290be698d613a7f80163e78aad976219809b74b1a5262686f8d2aaad46dab00ca1c86f97f9c3a4752be63234f3e35a0dd84362b778b2a2dc71a3f357cf9e44e5b22f2d52841beda00fc4045b72d5ce3640e68667325466c1e75c8b1668fa62a1873d7d1eb59aad522aeacf900ea739b2c4f7abd7022c66ea9b0a1a08ee387863d87a7fc628a53f2ea3f88f80b7281230a5da02d23f8dd795d772c15050c72c925950086e282f2703baf7fd0d72083c1d67b19c3b8348e642d8f339caf8022444a1850fd0360948bb538b8cdae1a15de7bad25f59d80d6c16292ce63de6257ec14cf878953c08694d01a8e7cb3e17241dc43cdfab183d16e01239a7969ef1121939a841df21bd3644c915e65867254875526a16185152580dd7b4cfe053c9f01f59b6be31d6b063d9d18e19d23666238dd46fd7d5a85d900c5a163dfb7e643ff3b4c3b2b6ba491f95b1c68d41ccbd4dea582af6e9149b3320b9d05016e21e4cc8911ebeca25ca86b2dd6bf0619c3b58206b78252ce681a0bd30141ff0c75d5ec9aedd85918e6e2322cfc8db9114f4393db0f9679179b151ac729e5954a00b74918c9edc6956efd6d703980e54de47fd554baec8cd4a7aa29b3f0570cf336af4e0fd0afc9ecb06fa41afaa8e73f81ea0b4badff5835f4dfbd8a7cc70ecf9c6f84d28fa951e064094638c3070a9bc40e9836d3c6fde57587e0fe39a1d2398b4a58b7b90b62762da0c8f830c960ea347a65172ca394f51aeaaa160683a9bf6754e83e1ea86bdf46567c9030622e65d80f53c88765fc2a7e6481c78c91e64cd84d5b135bfcb69fdc3b77e8032746caff24a9177ed2845c7f437f16f217e4894dc2c641d8b9b6b9d9e89e2871e32911864b1e485550d902d33beda0299ae5f1e7695fcaa0b6d9b47303c4dd3f37a4313a751060222b53c4edecf9fb2ee38cec6ccfbcbe7e44edb20e63d3129850b2b7c967326060ecdad36a57e354d326b9d5a602ee98394c25a46465248786f54e86f4fde139d2d2a53be88b540a115410c27f481be68a2cddc3aa8d1f42ddd68725b379915b878fbf3b362b77f82d4a475b4f03141616403f5f38952cdc4b83d82822109fe58ec005ee7045f54ff0842464ff239deeab1a92046bb2e044a6d9219b127b4f6cdd05623344632c0f4fcf0365a1298daaa651442b175ced2d7443555edb751c49e83e59b077a48170bbe6a532104bdaefea7a6ed68e27924f3ab9e6df91aa05a406317f65465d7ef65362d59f5afb45b053d2ed04e1fcfbb39e2fe7aa5e206aeda53131c21746548fe299e87fdf8479b1cb1374a1746c95c212b01dcd89ad6dc85c5b7cff343cc590f8d0a2780acfc560e3a9af8006a6acbb70c2431816642b26a2da9aff936bc7469979f70a71577c2d9a2f0bbd1762b7b492a2f372229621ba7b9023e1eea64cbb877a46ebe1f9dcf788940a0c75e312752d82840ea4cde6997b582a6f5dc7935b6f808238020fd6ae1511f39d4b0101ba3b1324eb182a89b93bf9bf05c07bb7ab9af74c2c0108ea1b2f4e4170a44d2498083cb8170f79386bb354e71dce67e16cc8a862d30d723cfb58af440d58a35cd9f71d477c7ac63257a85a25410b34d7cacb3317e87ba09e436b97f635b90bf6e036522bff54cbc07c7b9dc6ff01d470a815e1a9c602e0619fcf9b1190dfa2cad9514b8036cbc31e9c8f1bea1d581e95e928bea717b9bb5155d89509d3a842a7faad4b2fb3529b661de8d9240c079213f159e883ac650ebbfa740cb49d5a31944693c90b151d60fc9e494d072084906e6bf26b3958481d2cfdb08154ca2253629f0d73bd8d38664b8b92dba70db7d96dc29a8313a7d327f6081c0b3497aa22fe3b2e9b93b5bca9981e33c47032222f671b4377e4091e8ac78c2d385149df16ea818dad759862d5ac5e8d86f86f2b6624464d6d4be1df5da0475b8970f7fa497343c8e7920bd97b7233a8c6456f9a25cffa4a5e7bd4dacb2bb6c8df022c2923748982ed0e8f8cedafc287266e09af41574d86f16426a44fa99c71190ab782221973e27a9fc7d051cb98122d3c4b94426c9232299bd6e8bb722046ad05c19a49ffeced91c74316f036d87352ee11e96fe6c71498ba038464703fa6775241bbeb651034ba12b5d1fee39750637dfe97990201d22c48887734a28f5b6ca8ab06c5b978a96873a107e79b28324421619b140ed714a25c4a2021d0da861d731641c8d631729620dbc11052f7f62a60ee8c0df0cf833fbd3ef5203657113f808d658f79bc64eaba6e5b8c96c2989407e8235b103012bdc402475b1aa0860b215a192bb09946806c3d7b6c950c9ea75971dcbcada84e19f92db521436e98a273d29f9ed58f18772e03dd51db810d90d88dce60f0e7940262c82efa51b2ace94dd8e664cd683def519e7e4c6379e2efb74194618256110da32351847140de256f1ee967c5ce8daa4f4603f38d8931e56a66c787bb147170331e3c204e1a7989078f350ed0d8c2239eb303ad2efd0cb7a7a49812a8877bee630366d04ffd127463f86b4eb7b4b5c0ab0b4d7bc2d3d6c7a60005e8624e78d5ea8f9450cedffeb13a001d28b814a8dc6cf65450618c742dd9982bb0fc7fe4a002729e48a79e19336f1d6b115e8abe9a53be75ef5c0fbda8a87c3163ce1a503dabad4cfbf99ee7af2733c3e053dcccb122c383037e5e57602a422cb8d025c4044bc44d8157fd33d08338b2875ce94107d762576679f26e570daa911d071866fb3ad42f368d3013afc0ea4f9a0ed8452a3f3201af87cde856f5b6aab0bfafa87e88c804c79a8423917d7eca9d9bc949cc65b8f7745d0cabb1c257e7e7ca4f75768d99fa2edd9642502e17ddb05a6e96bf4776c23526fe886a4be7f093ba9a356a44c59bbfee3156da246334f94bbe5078dd3c2806f53672872e6b106bbdcd71acca8fcb9c527c920dc5b8b84a686e7d36f2325879f4ce8359de64e5197fea86537bb5442a50d537e1b0894d795934b2bbd35936ec1ddc3887116a9a4188189ec816c68174f7e8bb8a0d174987c7119d3b83e7ec388565dd9453ec3d6b2ce9c8f2fff6948fc2d4e937956c36c7129fde7d81a83b9e4a1f70b696d8115c90020c3dcf69638715b99d8cf1c0df9baa460d7e0b4994024377da7ed41cb6e5b6bc4aabe61107ec0596be07aa51163c4236b887beda5d3e7818fe1c05ad8882826dad56b6dd9b70a5d570ced89b31a3d728d3ca024084c938db0c3c7a0f8d289d91971d9a985215d9b4cdbbfb5143bcc5ee5939741bbf0a013405195b1dfae9a2f968f245aa2f306375cecdb67da22f00fa4c28c2474e2b3c9b204fb38e2d1d8a39f9024a695820c308734987fa12ee970dbc855dd757d322f01bb251dad86f6276799720ec01c37a407d52326779a6520c7a67d14597865048cc02ab7e8ef673c043109b6bd7a701b3ba53de70a670124ea429a8f35157cfd772abcdc97367e798d171972d73d2b5d690e4571ae7bc9715942ea98089ae3f4de7cb322375ee05786aeb12576aae57e131f0ffc5f6aa9e3a2deb04891c1e1f900fb7ac0a165c36157b8dfa693370e6eea6a4d5880ff6f95ec1e45327e298efd58fb084bfde30d4a3ada5611580e9c746a6d20dd80e59ae6338a3360cb25704054d86f6a4695588d82db1b83edcdb82d9e0318b8480ceac8965a03be0e403780d3f070cbfdb2a9cde68d401e46f870dd521818eb95e2b59d3f1052845d36bb07a3084e236342877f4e0a1b8de8f137feecde54610da62c3b87f758df476b3c638e1a950629542120ff2eefa5d484b5e73ee8bbd111cb49779e7b179bafcbb0e2cf326399e917d6c8c398cb42d35ed79971cae1f79d8bf0e61fb1d8797f39d81ada4ba68a1798d4f355f439b2c5b026d60375188ce6503275e99864aa0fe93dcb935ad7a1be52dcdc65c407ec4c60b9e8f950e8215b32bc9a2204e26a682a4224af884788b925aa878f7e30a8a1aef462fed9b6b0ca34ef5fac3f0bf8228189d91ba3b1f8e96a0277c3c59e4889d8e46b7c133c70e090dce8886fcead53a1dd627846ad4c9b27c3f781d54b08d128ecbd7da86aeab5066bd21c024688e913fceb970fa96301120636655cd57ecfaf95b2f09e3c5e2c1ee7da843e640117902080342c3d9f2d32ad6dae518c488956f8612f0551db81435d052f36f280a19ec1fa89caf4519b05f51a9c3f8858f4d2f84aafd4570249e517fa763b9b96de2e7a401309cf0da4759599f514f43c8e95032be39c2d1c26abf4fbfcaefcefb8cfe518ba343b85897485c78a5f524ab445c4fe9ec8b23b1c8b6def22d54e52ea479c3ef42cc7f1925c3a69f111cd000f55f4761a854145b14591068d9414b2dd6c930e079738d58b66b28a2ac0e8f16257d1dfd6300c637ded23e4d58493d9841649102a03a16a30ce180df9e3cf6ff16612d456443bdca0df464e266f9db60f6095e362ebaae82b516247dadebb8d0bd01565134d814ce54e05b0dc6a1995cd9f5ed5977161f3cc3f99e40cf824b31136206b00a2aa1c46c5375f9de4e81159fe56d2ab769623951f840351565143de59c9bfa39ce26561f98058bc704005a8c98636e7d1685fe3cb3c8b31074c20de6b857338d472690d292715d6b648d6f2f6d7dbe05aebc2c7989ba492957e96e6017c00c578481f7fd86c24bdfbf684422c0ff864b29099a854d83e21806d86e6bffc4b73df31a906933d7ce7d7478176cfbc024b98b737b992121e6858148e55ab22118ba012eae4dd8601b955be27faf798b17e0f6030c4379204d1036eb283981d8cc25b216ebeb82919c16a57a26d1ce3628ee24182fc90c82cce221fc739d053d5b9d62b388012133ec5b9c09a71c68ed924fc0458fcbdab4ab0e744eabba1bc556cd4d41efb3cf5ae737aa6c51fbd2bf8fe6df0598be7a66bd9a5171aef8aad3afa43de604d93b27a86c7b8e76ba4e9c8e4cc153aa34d34d133de33effa7842f7b28aabb25bf2cd09703eb6df2369aa4d162299b866a00d9a7a8584e8dff09186e4396f22f265cdc1a59bf5b6839665569d41f13f41fc64937cc3f97b4ea73a2a160608baadf53365209a184f5790f5860970e9471abcf6abdeaa8f2559ccbf93bc57e03d63dd582c19dc4a21138d6fd4ca5cd7de889978bb84ac865526d37d685f9d668b4c4d1efcd3c769d5c3ba38b35941174f25ed4ccfd22ab933f42316a5ced294ffad2b140a994f07f49d5bf4ea31a43af50335a3d5ba0f8cd5975074c19bb252e4ed707e45fe7ec2874ef6baefcd4320723861299d346e38839efafd4aa40a160f230ad798c9458d1d8ba0f6828a5e77bf7321254abb1341e4984d152d2e1ce544bb312334091740efa8c41677ea3e56ed1df3cb83e7f30bc89f9c82280047737d31b504078b6c1727d300b09ca45d4fc969d1d692e525ccbcf86182609d7e8700ce8c0044b00098b6793f6c3fc429aa98dc3f31e7d732127f51a36aec68549404023b295458b04fbbd7b9d1602013ee0866d9da546e687bacd5945c776c13d27dd4b245a52a488ae576b44b6a136bb5b59c0237f1da8e297ddb5d584031d9a0b257f51e35a34ba0ed22e2704c554c5c95ac2ce007c3a3f82ae58432e3875f0070224fa24066432ada0ba885be7f884e40e2dee4a7f3fb90f60aa9d3f2b263228025eb6e70ab37ce71ab4e564a36dc35e512d3a947f1cfac26ffe3d28c20368444347af0ce210a3226b89275b5a5a765952e6efc52e6193a2216e770ecb78df53194eb6c9dc4f32727fbd9b065b23a4147d4ab5d9ff3e31e0035d963e6673f509142507d51adb9833cc3bfc2474508464ed298f2bdb9aa26bb8dc83a88771565b78dfed9a87589a6e644a146fdbd49d6b33c15efb52f18d616d9dd361403aa1a3c13a6402780ad94a24199c07d5237ec447ac67ecc118ec9f89fa46fe77df99137905d5e3ea13b1d9740608d052ef8102a8d1ded65308621c8e5c773f42d95c385e8806bb9bf5cf61382c5b9f540ce1df01acebf779ddee7827041d935c9ed59131616d4fc329b2c9790d3c8ad220251a27e62258541ddd43cdcf577b3210b153ea9d11e16187e522a023004f6416dc09e6a0b89fdc312dc5670f71417db50afc4cf03d305780fbb2fe4080f554db2d948cddf4b4c4ee4708484858d37111abd48a01d7acf560c6a2d3e15a076b5cc2d4a18c6753716cd2e51d513b01a4279a6d4cd82dd9934bdf3c7c307da02ddaee6a814050dcdb8e538000f56b110a5c2b2b9108558c5b4ddcdb698145b43a5a3025822ec2b81de0ea72c31bbdaec475f0b6c21c2973b80ec0c052b2de6d32fa090449d5ecaa64b444e7c9e11ede809ab89850708c3f52f51ab65de89d41187439934d277cae8608383cc9de6d0ad0db3a9e31f73112aff82b6f3694f8bca15df6cd89d26ad44944b6935a621081919961492bb10a7aa86de8ccf92a34016df664fa4ec85785a5e1d6ea8c4bd9476adf610eea370bf187773f1595e21573075a2f4691107cb63f74f9df42772c24e722cd6557082be8b9ba8693a1d447082c003b33f58bf013946e0f4e6a1663038154ea45599e19e526457cecd8fa2489e43b1b1aa357c9762a78ca8f6d7a86c24b3a139a4cf09e49613c5633660d62cf590dd91d3a6e13797287a70b8733985d4263dd07a8de3c35b423f93fc87ff934b79377d47f513eb0aa446a6486b889e17225f606b3a8f7bf011b16c57abed5a80d491e5bb0f0a43ebcef5fd9fab820cc9ade0368a5e27ed685f9727c484af27356033dbcc38010f00042b9226c7afae7b006076d75e14f8dd70e56517210702dc67714ccbb411d39b17f37c83f82238021067267da096b391277f02726f4067916f0a3a94e37ed4f04be7298c770bc83f78be98e039075c1d5f594b380a24cf4d5fea7ee77ce18143d4a38b6d6524a3578f0349bc2ee464ce52ae1b66d6ad0109998594dd0eb6da86155939bbdd8637ca9caf083694a221ddf1e3cccfeb247a4b4af3e5857f2074d051a8112488b2af1203eed7569cc0371bf8717d881ac8b4253bdb5dffed52a56de62548e89b732302ab1b7776dfefe754236093c6d6f83f3e56780ebca3957616b6a3d45adac95070e304f312e6d630671b1f99cc0d4a15314b91c5f17894053a03b8e34606bd42c4e97dac06cd7e98e6e960d9c6447747482f38625e9ed054b720532e7f0f97de6bedc19df9e9a831af4669b7ad16e27f71d40268d897790338cfbc71c450c3c17aa833636d34bb2bd0dd877bdf7ffc4c4a3bb387590607b6c393c7236061101821b5c15451719a8f435add59584c5f47c7ddf243f011fbaf03dcca951f5f317abb4e6d15a7877bc25bc359611e1526dc4d3bbc244dfc3ecb08ad6f854e2d4cf6fbe59a82079a8db20eb2587fed2a73d681c4de8c2a2bdd47511326cdddcdfbd2b0b1bcc8fba3904a0c32bf3787c2e725488714cb6e25cb51f9ddb49d3c33b8db1f8fce90cfb04804c84ce4f1a27988dc4221ba198846d0cbe54b94e908f437d62d8f48b6814dfa47e9fc4b2032fbb4385224a818e8e00f18a0b2e3efe50649bf39c66e66ea2131a7bdb4de78308cc8e1a51e96fc8e42b4abccb202eaa30a896c81421ca8fa9f9a1dd9d2f2021ea7d51aeaf76551425f46816bf65fe9e9b2cfc0959f401b3c5f90c2d52112689c10661ec20d62bcdbc274ecec1a02d8b8dd0860eaf39e6998be7592411a317c725163bd3f3c50e6c608bbf8ec2f184c7cf48a99f0828659386310c318abb0de7db263e54b6a9f07bc9ae05132ced0cf4442a471970c8ed86b7d18e9eed5b521a663b682caf421ad3330bc30d7b60a9568e43473ba5b33585d64ce78ef0a3eb28ec35cd086597b77904a979397167a40e66b997926d642cbafdd075eede7ab76a3a10796a52471b694c52a11485861bed1202c95f446b3e8e59826227c894c1d9b4372cddf9b226d8e0109db5b37e7b7c055e7f6c0e7070fe0c46f167f117a6b08698ca015b2402c6084434d2981b1871dda3bbfed8677409e12686a75258cd95a63edab4c37dae4e898a13cccbe6242b23210851207545a01ff0c43a7117ba5c95a8eb46f77035d66a7e5d7d06e917128850d5fcec142929e2f6433c984c1de5b8ddf7137d43a3eae45c64ba6d9b0ed081e51d523654e5795b5efd31fb2794aa1b956fc041f18d7a9357f6134287fac3b4e100634774f08da6cf6313192d9a568cd560a9a678301422f7c291d90a40b5c2707a6f06498fb556bb81b8e1438fb0657fbe108bb60577550b8f0786a9117fa1c143381f4d91e96ea847c48f967d88fcb282c16000ef1108991191015ea72a87a63729330b4c041ca976c5c4abd94ffac8b59b36745c6bf627c0126a42354083b406b89ac1691bd093c5bf533166695171e00d69417e70d97b4348bc4bc20b36e2bbf3287f26798c5c39283df0ba343d972b1dba22856da393bce2bfb57dfe40ad3c11f0e1058f6e83be08110cef7ec4a03933c3c88cf54e3e92f41bbdc7807c994bf10f7d6ddf2ac4638658e9fb5cebda3a0d05898b4d03877793339c6379974cb8537f549ad70d42903edf0063cb4a57f2771e648647ed7d7f1e5e2b9e6d358a75dc63eff3f36c89fe2c4cf8633a4988cb86f269ab283acc3738742a6115c653a125c258845fd3adba322fb30f92c6fabafff09be8a5468c61986efec5c79a38256011d5f5b56979ce6438358100d6855a8715fb2582aa7e94cbc82dc90037fcd1874620eddaedb017ff06b8099d651be363ff728cf8fc64eab0180528579106e230d265fbc97ac68a83d5d2682ef5749b6044743c3a74a4648207c8009ef2b3799db44600c535ae716e27282d4d3de1c5fddddd21ea87e90381697e16a236e859185b2b1a589d06dfa3a4d1d06b73ca80f7fc631de72b8ffff177747ee74cbdd6d1cb324cb19abbe10256257065a39478009be91b627f525e2de330fad5d1d6a45bae9a068019ee1ad62e2f7f2a0b8582d890d649cdffe1dd7928fa4cf02468f30f81c698ace1bd7fe9a0e3465f4e4db701607e4f00756b891d4756512f0be2eb9f031e6b262816c2aa400e17a3b942c101e206723d2b76c581df822ccae9ef287fd685b0c896ad9adbe319cee0d56c3d47f0f2e68e5df64707a561096d10b700ca60b392ac1246fe2635bb99b7034b09f3c2e3c2bde9917ce494b3f2f3eb6a0007828386b338067e6f917f573cc812cc533c11581f60a4a5e5a2db2fb749045bca85714ef81410273a106b0f55b1fc29a14325a0faa10cde77396163909ee14cc52f2740ddbfd9f9f2021218d21674a55bffa5fdfae8fc72c360bb2aed660ad041154e08569441e224482230a3d5e0345f878334a6a703786ff14b400df76cfe71c01b85250e6ed7f7e5ddd8d582eb51266d2a90a7367a8894520be814f1bdbf7002ac6702d3edc11fdcf087c87c21e45351078732f1f13fc2137b85737760345bcc0e6b7bffe89e7496c0a8ef1c909d0d68184625de3e5850192abf938f0ae6d8735e194d3fb7d9879d53d66816346ff856e7ceff2d48d266f70d9337a248ab75287ac7244d7db3b09a6968e11bc6fc0be746f2be0a9dcb6fe038c52b113c8c68fe7eacf1d4736b1db050da0457858cc7f7f95a8498242263a59c21a08b5e897c792e48fa414ccdfc641dc938d05333fb5367bb547cfad76bc4fd28ba10a2e3fe0728cde1177636a2778d9778fce38bcb30f5350e99203d26409836a01b0833c3aacb571d6c1f062eb379b53366f5b51874e389bfda6597ce7f38f744ca25d45747a1e18e6a98fffaf128502fa40329d7f784f8d803dab4719c389129df9f30561beca1c91dddf3549cced2b6dc75140e259af96846431aec651d13d60f3af26811598f952d6f7576c8832b3271e1b20fea7453fb6b276766d0654992e844af53ce81ebc3b94a10ce5663bb03f71d09795f2ff69b705ffb8ba7027d98b42e0c52a86d09b22797d9bfc9a1dbb21eb8104a6991f8a799b2f550ecba66f28d37f633a68facedb0b03c96ec5832f1a750381bebef4e7903ad9be6b983f708a3855f96f53dce444b1a10c27da46f5eb19d7764d089652eba4bdc083e5596378bbc885c027a5b2235a9221ae543abdb63605eecac988e8e91d981e5c5ab669a2583532c1811b47ad23a2428552716a46085af3d5d2bbfcb6b9b3c64559077814f5fb1d2b3d2147f2ca42a4302e070f82f9b59d29202e89595e84176e89738f5a606d3ffa0d90b9991a1de0e7872d487acf9aa09b772f9678502b2da8907d52a797075c2b17e42e22dbf74e4d9c9071748223001bc85c64387019af6b0061a7bfb52263c6540a34d27bc4d86a16e13f0ce8d25f079573c8a15f230c582b7f3938b8436f38aa49c1bd5e94ba3c4060527c5f7a44a5ab043d3487a9d4ea9c846f322cfcfefb561780c3f3e416ed7fbd6bd9246b0ee8b97b2571e6c7e4e654f5105374395a3804a1961cda0217934c04ed8cc9b748c864a65791f901a65efe927408b739aee08549b6e6d91aad472f4d40895f19996e9baa5fda215876c3b9a176bf282fbcb018536dee5f12763890b8ebfecc267f0198159997427d4fc0f86cbb0dee327fbd51341b8da4cc30f5e1226033fcc5118943cfc8331be6df18e83ac9b5a380438b2529a02cbe54d5e5b5b84ea526d00ca4bfb57372250f5506dd14272deeeb0a57f5bc81b5f8825c57cf06f0312d1b8fd9cd2e89b65440ce16c5d6f646139f31684b154eb00ca5a8e4b7e41f962784e584fa5f6b8c0f5e62101e66d8bb7909f687596e1500bb4e9202c8becdd9ff3197ad2ad7416c2cbe82f95691bb2521e42f7a82818481c6f48f6bc21423c178ad6789c91fc134813db02c4b0d442e2a529e69fc2fa35b74db701dfebba4ede7fdd7fb35ec4a85ab204c380794df8dc4a509ff7d1c5cef8e2690869880bfcbb9a57a21a88f45319837f8df2bb9e88ae41ec95a72c83958ba1cff1147f0895401857636321e5995f530bedeea64038e7881a672545ee5dd1ed983c65fcb785c5d61be39e75b53951c092c2afcf68a0e65e3addeebf82cf692a51fb92d95bf87b026c90fcf8b0f82fc9afed48d5895f1106b38208ab0a05ccaf89cfa9d3c90182e5555945345e2c2486c447780b022bc663562da45c80972a79ce1a2d945166ee6d3b502723be5e198a075febdb86b42167e4e8bd8a811a113536bc6bba68df831d01128398e2271a2c859de317bf7207211ab2c00b0d0c5fd5c2dad060894d1c19dc50cebf0bac39561dfdca9b17d0b5422922a126098d3634be5c48afebe607f58b78317d4fa72af5ac75b7d3a9edbc05a1ce21d2877614607bcf18259bb6f5af13231806d446fc4d9f2b6a000f4331f1e02463b10fd98efbf2e3c473fb7c7dd21527bb98df67d192a2f3a4a800645d5bf27dbde39f17d86d11dc4d2de064f12dc63be5bfd410e11964fc002ef1071aac51c18ec85e6f87e1b699d2fd4e78e43676f1e748fa0127d8651853516413dda4eeddae0a67f7a9e523c5825f2a5ad5b81f36e1a49e3713606540d1559d898e0ab95c6d620271897ee55011ba7240523e1a850fa3a017c590ced1f48525b0c1c9ed5e61e49e516e575f4a75b7114d5bd74c10f8e4223b562cb77a58b8f1bd7bffc44d1cf08d32983b17234abfed7f7b44c0e8991de45a5d1c04375f1f7298302aca8e198b92b0661e1d705b32b26f2f0c2d2e8106c2d999946581479a6fcf8a7efc0cc49eadce7b8acea14a10e6548eebf03ef93ccf8ac07910e7959f46a272542c48e471115fc214cd7e6009dff0264df7b145e6404abf149ad81b3a31864aedbaa529e51d00e8ad17aeee814d490d78aaf89200d285d894d003adf3cc9a2f44fd3254b1f37bf99697d89aa0f08ca7a2496e019a3052543bb249de7c5738f818a85a47a3814aef5b47e32288deb0bcad66976852df7b21e4cbfec3003d8ba907ff126c963433ca0ecfcc9fda21d30ee3ccf9e659a5c6c003a2da378d483cbd3276b99733f9a27ecd3fc766788e2d26d3b4b84f49fdcfa864bfc272afbddf77dd57db3d187a537f94a2d5c358214d2b2505a267e52cfe5d8245c9a3d437a788fa5d86cfb846c5139bd762b719f36b599a616388b5ed1f41c7503c03587fdb1aec3071101dfebd71d93bfca822464e1d079777dc50e7ac25fbbf314f71851e62628eabc85fcb592a2d65c5bdaaaa965b1923b510cb3854e651df43d5ff366d87826a93a18ca44c8ac107d50e6f882ad81745796cda9d2ff8857a466a0f41f83d63531e752ab222c79279ef3e52a4c15dbbb123c97ac95f4cbc3ca3067bd78de991f2a3f5765f5822d1d8e576b8d0c8be3b0f7e7daaf6e07c7d2065281b1cc619c3cc2adc494964790a64a07fac0228633ebf0e13041c0a784029ef602d1eb6e73ef8f4de67f1f271d4e87e957cfc2e4040f3bf8f4d243c5aef5446cde48ff224ae22aec29d0747a8f9c034142fbe4112e0c7cc7d9ce8c0c47be924ccc9a2c4e8ec8d59233670b6e7e4a084414789c0a0dbed236985a5642e477267998bf109e845543c7418d19cd6909674c9a03f254ab624de75df8c9cf65f6f4cd21056bef8eea77167875ba5c02be5873dca995f944e3993c9bb07ca5ba6e01fbc88e94549c9b0ed9a437301ad022b4f23272d5170b24e06242e3f952ec210d6cd18ab1b35289d4ed692daffe40a6295e804dee6bcb9b676ac3b5de0a90b5e530bffaa9e571c336f94a4da58716ee70d1803895d17668d5bdc9dfa152fe69a1f4209e77d0bea89b64535d9ff4d752d044d30171742b1efa83243a5111871481b9d92b4e725ac14d646dbb3e24f2f9a9bda10f8a2d5a1919dbea89b6666710461fea83b33016e39fa01bd5cf691026138322b26de05844720b6bb0341e5f87d0df895ebc5cb2baa1cbaf4dbc964d9227865cb23969a925898f621df4c665757236a3693b8b6d110ea3b461acf14b54fd1b931c57903afc7eb2c8b3362b6a66714ba759291e83e632dc28afd64ff690f9f3d31486151edae82f551a8fda1bbd23d1d9589beb799e07fdcb5884bd9f90e5d394631d08394e94725c8aa93db777bf695a4f9cbc643b5a05a7a8d2bd7b8bfc915285acc3f49ae3fe27fc04e8beaa3d7382bfc3032b290bf980858c6ad7fd42a244241ffdd07793969d83e792c126f13445ffb74e8fda1020af4de8a532aca42bf826a1930a2dd101392b96244d9baeac1e4d72ef9f09274f5b08dd67ba243b937dd5c038a7d7db74ecc4dd29897aba36c5adc22c1fa9801810fedaf4ec4a8f94d5243cc4c6a311212a32e2ae12049b065663227e90c34cb25c663e3cda5edb71adb58463ce6eeb76bfdfa093ba0fcda010a6ea1ad77a4dbf3c9c7158000624911f1c85e4ec110ab230ae130a1ef5ff6d50c7d8c8a9695a307e29f1b1f7cb3aef6628184c9cb595f71f7e0a261e5f76d5e30c9fc1d7ff3aaead7d2d6ca6d4b8484d36e882eb82c24e6d2ef443673ae3679a6c0183723b09ae871347e9bd39e6d6dd854132c47d638e8398fe7731a5232600edf487f05d664606428e4e74dcad9ef9b9f177fb2e49dea972c0cc0c6137e86967ecb6d47bbaf41814b2cafec4b33fef9904c86cc31b8c8cfc4c42405512c683abed6517d46e59f4ad81a162c853c6cb66dca0db19fae5fc74ce3d2f6da8a93b1e2d3442b9939a115bc3d176a479adb4fb055ae2dd9f63a73ff23962cfc4f765406a2aa2585abf2268f3e63eb7d251b12ecc8a377d535b220f8cea3f21a80625af94907280d0029a139c9ba7f6e1abb80fb08d2e3e75ec55840994a090e09afb466ceb99c79fe22d73b049491a5c4df2f7c63758c6efc44c59c3a13d33aca6195d2af0cf7f958aa95c030b8861b782769d4ed7ca9568bd9a836aa9d0238d21c9f31b8f464b4ba08482cd3b43a2b4ba7d0035bae5f3903d3f22aa371feae1fa3f2259f300cc0b2724f7afc6107fdd1ab4eb27536179158af96536e11edc538fba5706d35e9700166335b572d5d5d1c3bbbf74c6e888c4a592235ce6af7cc7f056b12f140372bdfff9f788ff83829f8c0057b7f91b80aac858d94c541b360e1e960a40b727dcbbbae3c9119d9eb6dca9407832ca003e59f849a538e3ec3c5c2d20b9469955d50364810f24712c407cf059466bee8bc665bfcde7c7075e55f7a3af2a7da12a6ff7ed26670b37d49f9bd4be236b7a781d2c2d3bd7e76285810b22d52a3f053f2943390cef540b6c83a39c969f8bf9f3e573095442349da432b3f47c70b7cdcbe75beb095f4efeb2d0db716e95ebc21ddd84a1d46c4eba7ddc95613990c67876af7f7475b5bee9d867922e56afb5524dd7f2212c9bc429816d7aa2dd020db854588cd33b77d3baaec23d088a0be92b05ca6cd8d04b4907e69e00d031b9b410661b76813df3058541980aa2a4f6247ea49880550d07938eaae8197e825ae0232d0c05e7c2b9ee1927c3ecbcc4fbd147e9e562fb80e752bfbdccbdf03488894211515ce1ae58817b6a092102804fa62d62c45297fb11bc03fcb4bf2c7644ed56dbd5bc15c0be7a92403342105933115480e78bf7866c11aa70ecd282e8d6cadbdaf64f9a1e4f177f02a56cfa5d7ff3b38d711477006c9112735fca4578353d0fa29651ebbc53f8ad2e52828b1ebbf6b54c9ac380b9623e57b8337b53b7a1749dfa0a6d251308e132a4e65a5e6bc43bcf85ee3b1872304b22be0df684e48afe3682d0f92f37914a9be0bd379da7282c6d7e156543f7fc6b95d78918eebbb91fbe143c9a461f8cc215cea07cba6399f68d3c823e1c2a014163ebd00ec7fc3b1dc08e28652ce710eab76304c60d012b6a4af910ffd57ff9f96175df9405b42e6b4507ae8be1f7556bd618656ae5fe8677a3e2fbdb640f26bdba69401379927e5af65116694bbad455baf25d5ad2d2d90800feea8ba611398209c79d8d15ae8e760f86ec7ca2fa48e8f2c07e46b198c6176a16e787173fe75cf094784e5362cc365b4f8179446817d95a49e99a83b65aa384f9a880c4ed8a1fcac92bce8b6d5192fad7bc71f99167e9bd0ccaef1491ed7bda9743e13a23fabbd59936eb3226f335d0d37017c8dc8d8d32f18fd3f98b60d9410c0d27549c1e4ba2afe9d181cb5de784e90f14442ea9cf30bad38e2652f704b8d68a7e797f6ed8a7a90ee0fcddb05f3c9871b308b0be5aac940639121627c8de832cc143b26218d9c474acc01a479ab5645366defc1ab1d55a34a3236006b4714eca9ac73778ab434a22ad2b35f5bf399b5ee91f1f102e008ca8e6189d9f989af1171f4e47ad91635525faae28ed0858fddf30c0c90826f7f1f942c0ac1f439796b23d3d21b1a91232c6b83ad250c2026f52a6441d989768091233baf2d51dcdf50c113a802da2eedd227ee7d2690b5cfe9824f91415fba963799f8a1ebdc0601294fcdb468313b6c22295957274bc423538fc3a09d4d1fcd2427fc189e228f4f756b3a47dfec5b1e2b9d9f68017c7d5eb78534f805c38ce97336a855df1a10410d6ca6ab87cc35e4695832a7c1ebde392ed7bd72aeecaf75a850450aa6630e88fa122c9c1756139963fef6542af01f0c90417bac7e02fe3ab94cde95fa63831b0716e1116a09af18c49f038d91e37b5777d5e38fb6e5dcb88d6c362ef9969c51a0ab0cf00153e0033e347987c67bf7209cad5ee7d865c49622fdca3fbb0716bc1f0791ddc70f6515afe11e71f3d024cb1e31e442a5307f0ba7dc6afe603a93161c4a3e6816ee5ddd569e9270606f96d93b1ec9976332ffba9e116958a3c1e7cd45d7e9d7faa9ce13b77639b1684cd91d37c7d01c272a9737c225f0d69c7eb22ba90da8795f28003e50bae829d5391cdf7544bf17f6af6078487b01d72bb833c08dbaec38b0fd97e430507ac8ff201b3f037908b4fd8ea0972a9d7ca811fc54b685ec1d318d44cfbedeba0717fc271b199854efde0cce56c744ef9c2380688e9e7bc6fc1026bc0e6007ec84d5567b6ab316423bb2b097990c80d5cd3f10f8be6301b50ac2b9e65d91c4f264d9610925f352c2adde492fb8084f210cd08231fc1f2fa0fc324948c40b6a0d38c0defc7fe3f26bb39511c4c11992ec65f97adcbe2334e6e8c28189308d649285b6bfc6b3e7c29977bf45b84dfe022e4836e6f81edea2fc5f0bb53d4c6a99dd8eaee3a97cb7012e729708e25e6a1499b155e044897e7d83b95d4084c1c14f7802d049cd4a2e53aaed118358555820e63eb14d75bdf0a86b542accc3c20c9219c47e4d07dcc293b7d81fa3ffbe3948a7f8de60802366712b469a94980fde8e8221a27a82b9e1fbb1aec8f15956ac607049185ed47fb41ad126eaec391cc487ec9d6c0db1a609fe6eaee0b0cca8575b118b2a1a850e4d110f4d217c38459cae4d0c570e0d8d92318ca6422d59411827edcd11e59989f79cf48f8a4c9ed632bf04d59f0df266c5e91d8ca48953eb60f28309c5beef1843b2b1d4f37d5bbe92fdcac96694708f1865f089ca8b1b0cd5d9c03bf3a0667dd8caa5ba696bef95318e153bd639f6a0a53f77dc276bfbfceef9b8f32ff221e9a2d1a545cb59293d2b47180da64db182dbd5d2ea63b61903f07b4ab48e2699051ce9948934455a2c582ab61ac16d0d97737cf393de68b8ea4c0e27f9e758a4ea623b5e80f5b9d9ae75bbb8b5c6bc2cab1a96c1742d222c50eb539dc77de780073b161568b4ff6842d7c4f17de3ee3a8eca725bcb902865ebba81140273fbbb1b5a7dbe3e951c9c6337f5d19e791d45af18cebda8f98df6e561609025dc8c68c1d8cc886337d824f6cde5443711b3483b4e846a48097b46ed72e7972a3e94df31f07295091ce7ca6f311f9b6613a4b6de304697a46c66824ea7d09b28b30a56563ca8193c851c28cfbdfe7c530216adde2c9c1f3ef616f23da6f2bb9dc659c0cac7529eb87b60072e23d74a8372a177d3760fc6bbae6b24da4ed5f96b8a5f8000e09ef978c58560f9157fc502098a744a5fa141b32d75a8e90aa42f036764663e0442bc171847a9daf6fa08ea5a9958a691340cc2a1a81be846c46ebb00f18e1eca5ee5efb45cc2636d0cd362fc16880fb3905ed3ba3bf02572cdb7c4566294d3590b7cdb1add45092fd648100a75dc4e88bbac1ffb7628723045ceb05e3fd41177c1db4fb02b9e3d3046a9be827d8a8037c9bb39f03a22a20effa04e8162df9023e927bb08152fcdbd8aa581eeda251d257b1f56a09ada42c68c0e9674a40d46efd5bf5b09db55577825f9c145ae6475e8ef5008d2dc78fc1fcd4c6ec8f4aa59f835fa9eaa05677a1c9d8b7c38a5d31d85730c536ac72248d9eea1e93ab07f5d1e886191bc2940a3fd7d22c56988dfa1588d4c913d51761e619e320d68cfb784a1ed455b8e2015942492b6c5dff25f66f106a35c0967e98321f8a0a0dbd168d42715a0ae1722d6fe93f3a898f0d5e94cad52a3d0acd397d512d5dab873fb2bf91548c54083ad3fda86d1f4538021600d2edf53df675cc8170c2224f55c3865e6ee60c9aa9b33dba11e95fe88cb59b9a27b8e607aebc4c411e64d7fc9bc003530e55f30cce691c40c8b6436d7205d2a5de9effe6245241c0031714b1b2490cf02f9e1504573fa5a98156a4080c4b8c58b7dd2461dbbb9aecf68b39870d9f5018af20c4c334838845df2e76b7fed22f5f9e2478877b476bca3a664ed8fcf43024168270678ff2b8c6c47794a7b72cf80e84695f5176ac307606e21420bbe2c50dd2955a5d26210f6648f4bbaeec6c04838f01193875e576a5c4554d683c8b16ec0b6822273235a739b8a851f65f23223ba643382dd0cbcc4ab52b436e0c1faa953f05d34640796df5ebd7cec201fb8444782768f4dda6b1813dbcbef9b0b10ec78ffb62e75fb4f362e464494c123275669ad90ee649b2f75e0db822fb58fcc73845b2949a38bece7fb223273867507b0e58d1ed9b315b70a36f0d6556feac81888129fe60d3e90633d9ed7d31c3a6f991c59267ceb3db6c5d3bf3a6be4942447fe369a0f20795a366264d8884e5b28bb954ec8009367d4725f2daca909c9c412064d10487a04c812b08cc834ae08ec4307c1d185e0062de7cdeb6e84dbd66ed5c66de26509e4fcbceeff1071b3eb3e3df566b2901fbb39b27f85f5534bd240c7a26ebd8dcc68ec1664dac97a0f60cfb90222bae007e28678c54320f81ea5cb97733e61da63020ce20b92fcf99b5f1732d6fc4c18b487e3e586eb66b579fc5086b895d762b754dcb13eab29bf374ccc4e44a238218d1f61579314b0a3c47cb8d8cab2785e32b73b712ee5ebec0b34a81d7ac787040cd2ef6172a690f3c8a16e72bff467298fb5242c6bd451206c3e312e78c348c2944e0ea2a9680f29424ec3df2659948e8c95a26dc1dc939d420b3b8b495a96f9b2cb94f4b3e6c407855016059780e3204f68209ab587fc4864e030257545f0bf771a9593a8b469aa3c5f85e70917ed2208a6c5debe552bd73785b88c6c58b6227512b75d98639eb1230e114f2e9387c616d2f9394b5c602558ce2bb1b2b6c53d8a3e8b6fd4f41572bd8cd0d84b0d4299511299e3e3adb7a37a8ce7e07308f823d4cca7a9cfedb124d157eb199698cc2f5feec0019995ed782aea830b7d8a878db4295a7cafc72ecd66349492056a21bffc0288be46b93e7b51885c18a3dacffd6ae44bad72ee0446fef7fce987e15a8464d8fb8204dcddbf80a4615d2887f5c41581512e6c146d89c03122ff5e42f96b291d58c621d774beaa4f3a07322e257bbb4280e8843efcc1bf75a2fc5bb877647852812ca11c6843f80ec37ef519737bd59c7d5a8eb3ba1a835748999b48799d7441c157e19ccc72e656ef46a149a1ad5b670ee170d649e58094ac60eba0f701553f42caed31f10dea9c2f2767bc014c12d3a6b1c65b40e24f003c48a2d164e7a92e8a2905ef5a29d7df02957c257745249399520ca41c932a7559d15f49079b71308f8616f6c5190125fe780c86d0169666ef54ae51057257b658e30a62ca09f375b6131a248e7675e66e78448d9eb6b1931866e75a18288ad947ca2ee9580c59ac8f876487f92a47c242f9abcd24e076d5e35a33eea94fd3942ba1af5c81b3900f3e41fea2f711ed4964415a2892d525d885b7682e31fb7c99cd8f435cc01057b871fe4c140d568fedd73360f48f7549effde8d5780ad5f0682d04f874b8504c7d820c8171a729a38406d8eaccb6033e1e76ab10fd64993ce34835cec31f56a8fe1d5f1b7d3c8a9a3082a60c3314c5e3e7617c88f6ad03641d1a024e4bc9a3d29e901a36e05116a7c774d3ae74ca0aa6593c3f8c6bbc97d88203f0eff57f831d08396f0b13ad539fa8a0c946f58d06f48d55c2ae2ec22871952ec3585bf9a56c747261299accd1bf4baae0acd67bd2f9e5283006c3831fbf76317ff1e7fee1c6ef36978502d4474025f94fb8c401e7da41b633eb1d35090f9868dcbb904c553f53c37cefe8e62922f2141534000d1ef26b032b7e9239864a977a8c3e7841daa16b880c260fbf2fa2889f2391e35ed8625c6ff382a7644127ae9bfbf82c3451e030fa912f91cca4cdc22348c985a8d28e8ccd2b5898d6d28262cd1c07008f7e1b42f8c4a94a8d3d613621098831bb2e4a829c8cf50927c4000d9dadc3417c8430dc21207f16ac7dea40e67017b91007f1bbacc3d766d2e82f942b79305e59c6538f3a554495da18e62313eb2153e9de99fecae355b0e6adba9e867705ddfa6642a50af316ee1d80e1a574ffa30f2d140cc9c5beabf2c1ac02e5cff773c2d571d1b4e1ba7e95c81588fff1c68f4ef46af3d82c6c17a7e51e7df2bc9397a61e0814ecf726992cab1574dd1e1097ebd4b0e14fe6b8bc4a2f7562d92bac11088a171ca0566dd4ba3b0eb1abb0c868b2b4c6b7a66af68d5e2d67de35e6449cce3706107fb2faae66359251a28c421525c23a7cacb9464f80f3f319446a42c1e62861d27bd299c84d69a0a19d990f0039154b9282ddab8d3f42d37d6d87f3cd202d8b85719e12b3990afd2dcaf1040322e401b3bf7cb2433036a663e8ba97d36beeed50dfbefea9711be4b92fa56f7674e48ecc5729f533807e7fce5df1517c7ff123a3248bd7179f810967c1e744d2350dad0940a4975c5b63cf63eec0639c5269b40abd3b98b42577cc163703775e38d4ddb82528917f7f78ac96a14615afc7cf8ef4fbacce716560bba44541ec2489bd4df45bb78a12cc039eb97eafc379476ab0cd3601df2b09fc2799e46ec14e07ceb4582530ccde4f69233e184352ff677ed8855446427d1981d20cbfa242696d1e0864b86a7e9971d4aa9a202fa989664c021cfdeab5f88c03477d7a5988e8f364d72079e510819c4e35aa743e1b9e60f0fdcbc0fa25ce196dff75d66072ed44d6048581b278ac8831ef99ba448958f2bb3fc9498367e69353fe79a79e7e30e119e4292204fd06267054d03ea4f6f6223817268747db24ef5eac80dfe6b80d9877c6f9f25a7163fd1c63b54b000869c3b5c586648890076452c314e09268b78a300d92921716a08a7bed889d78e1e49b8f1cc605aaff00ff4503642b3f82fd0424ef735a8fb1594505f0cb8e589cf2dc73750ddcdcaad712a444dad9392f8613caa57ff2294e6766f4a7f847cd04c3fbffc7fa0fc70bca882a3066a5838053c17384ee7cfab6044f3eea7f7fb8faed3878abcac950f7316262bbe318d3e725272b0900d1d75836dbdd650ded2e0c74b5a3649111fc967b1644b73f927262285805d8ad08e4f5125ba34637426ef34ee2962c2c87a5046c385c412489a0beb413c9aa5fc4116a51fccd82b5844523d8e8fbdb0f9b36796984185b2270e7af49cf907f636f608b43874e1796d49532136c3073993276ad8f8b0111abe34bea6ffb665f9e9b8033378cb272699e9b19444fbb7f7b81027cf827f958f4ef853220bb196ce2fb894f5eab25bcc5bd303aff22ac57c7b1f52272010c5325333a85c190e5c6234dc99df5554fc0b1e17072acee0480a3874d17551dec421970e7f2e05cf0f48a0ce266494673c4ee03b797b39d9196828fff64a0610f93b8f74303f460e1ff9dddb0fa5831ae4c85845ec37fdb33c9f7739f9064c3579c4e6677319a150c9d69f7379bfbef46e0b8f39acc022bfefb9d70ef2c5ef05a1d0131793ac2a51877c13b6a2a35e8c7a7a29501d9f67542e0a4c6069aa6c0e181a09a981a1f5cc8ce4a31d4fc5d8dcd7d0e957083db70815612f0bba70569cf31707dfdf9860e2184e8c5b30e16353fc1eb5e0241a4473dbc4b03ab83ed5bd54fb2dbb842df8017a775d3811507004b62e59f26090a67b408ae3770c22bb7bb0610a8f6e1a3298fac534e6a7b52ab3878e0e1e3dc8b1859c5cbcc2cfff4f43259f6df0b7541d1beed893ecff9336d311cc59c94b226a788aa5716e26a87c2d7b4252abd90701014a545c07aee4808b93ad3ece296bd9f889458074a3d98b9dd3007c04ce9e07d60fc46c7fab37e8d0fcbdb9511656d8b3355e70aea82c50956cb586c854ea7f4dbb21c1a8c1b80a5b0d06c57abe48535abdb80f5c7f563035c506a8e332bd42dd62fc8a3cd8836f21ccdd1801ef4020b12279bd0ea991c0db0729d56e70c09e01f787ddd287fb926b8d6da69df8358e9b95b019169eb15d9f28335106ce585731303964716cf5979d3e7f6a3c64d05d835306b0a8322e34525a160865522bd08eb38e80b9aba22f045cef3f78d0e0854b1b90a4c55af87d8a21aca68b67ed49213798bc319fa8369c1dd59965416de3e4e9c7f8814c162a68a40e96fd6a221082ad27ef26203fc0617ad8375c1696842ed3aff7291cbd2abc4b8435253b7e973813b6042a3f04813735a5a3a81c3450ad83de66d53d269de121682ad74248a6fdbe017183bfe1474af838bcf745d44b37542853739ed804b056629a486bc89dd9c878044b51f39a87d116a81f7f33b8535e2b4572232ac06e4c8d4721a5f09e918c4006df2e162af78682e5457615d79e8e0204237927ba590d363b17a68ff9c5788d84add48c01bb4169cdf9df471bd605ce482b059bff0c8e1a577c7403e0684953145184ddcc95f309068f6c1cb797ed6d5d7905af99330d2062cba2e63d1da989028dbfd12576a5e426fd01a006dd13935a3607e7c7fbaa4ded08acba74dbc523bd2b542ffe2379400af5dd18c3f86b636f34fd2cfa71290cda898999ea3e6c0d587cbec640353fc32e52a99f0d61954e7bf433abc2c089b7f99a140978f7036a0fd90ce3c6c0ed2808b28e7d8471964dcb8cc4234a4909a821a7f1235e6725b2da3135880dccb00d64c7f164b9b6f0094a057659b6378d49c06e309d4f5a844fb77c7780f5454786adbb780e1f5dafb8f980d4d0150d9350900891a21079a540670cb5ae98a95a24db0a2b43744439257d90b7e20ea630d20454380acf19b6951040d6d899c3fef7bd4e4c19dd3e6f76a89bd0028e9264c00628b43dc5ffcf957e6a0a58f030312cebf1d7cfcffbc4e955085ff6db18a5add16563ef82b39601cd5f83bcd74b88e18eddae581c41bc41e31c53ff25dd16276cfbb6ec7ab60beb96dff144f7eac961cf7b701f18dd518bad49abcf25bea56a733e1cd3a97fd3c9702766c5f287c0733d92a98fb899ec02cc85d0d623c71aeec20b3d930f7ea023a0546982b6959acebecf8012d2236d70a9867ab76d904201b84fd59f9cc11c43dfc473843559fe1231a6b4c27dc1ca208550a8d9efcc6dd2b3ebfa605ef2216ece64cce5f73a8feaaa3f2fdb65fbbfdc639ab11844c742fbc5bf8d604b05daff34ee35cfdbe8f6f85bee75b6e5e084b48d4788dcf3a9d0cc1ea89a1b010717b45f4707b7bf2e66fc83b13cc707cf2a9fd6a1abb9464167902659acfd01d23cf4380f5c80018ef9826450cc65dae4a4b16cdba4617cd58fea76ad4151b05a50304f15c8b1333571e638a150627af4e85d9c37a8a192c416847f2bf37634a4e8ef36c6e9e214b11a49099516ea5d43de79149ca2e77e8617ccf76fbe7989cd0083ea6c6e26c4dd978b8200fd05e5a8284f1b97498710b6c4f706316628e4c60b6ca065a2a965b89022afcef74529325dc710e68cf1d83fec9015c6a8701a0e40d9c3815edc7273dff82299c834ce95ceae3c919fce964875e2b03b1bbbe26b4b5731f3d412d415710a46083da75e20c9684b10881220ec1ead9091bcee3d2727c9290482810344063fa953fc657da761ea6d9adb0f851c0cd36474b9f312dfd67f3e9bdb85f9de97e77584d804b980b281651bb52d8bb169fc0e4f3a6b49280831bf6e12cd2e686d8f5b2762583d4fe17fd436b9b0157f528c12e710725d7132a961f6cbedfd75e3ff514ccb2d0404955c22bbd23c38753efedfd3376b852fe160933d0a90e6d77e36e758ffc659c4704f1b7db13faeef65d3107238c732ca6ce911f1511fb6ae89fffbf8de4517468529c702c028e9174dd05dadd112fc4caeda9d6622870545456aa129545e4b4dc12e2c296d3560f7238725c6a86cf9221b12ed6bd8ec870979ea534f489edf33d3ab9a5c0213b1e6a3fda131504929a86c9bdec5970c36e6e26e47078d753bceb2d11d3354b1880822803c1268b6113345b4c96636444f8925db8c306ab9748988319549c8f7f2a385d1c7a52448ff17ac6f9651939043a3ab0eca132e0df098632f89c7924e63e728feba81b9034825c93d65fb39c33c26f623f8538e440db3197cb73a81df3ac4fba605ee1b2188004247163e4ad190e08faaea9caa81c7dfdef755dc2df83b8ec2f3f1d9193508ec100f338f3f20cff9dc148f711fa0b15fd9d03989ac32bc2b6fab14a50400abce4b9a7e21b1c91bb21329ff973ca5784317ad25ebaeb017a1b700da439ba66b582202ea37916c9e4d84f6a14ebde7897f183b017842897cce8bb862e21ed738d5be544b48c36c6c6e348b6a87ecd6ef0f535ae257daf4176f3675554f5f361a582d7a227e3d9bb2ad3826005840bade9ff25395f839d0320d133044f9cd2694374e0c2babf5ca6bc46b9a390325e2662ae1b363f6ff28f910eb6b9022065b7f082a31f5f0b4a79ca3ba5997401f2d193af523202c22649f3c3d8022f299a71a5b766e9a733f341e74c01d9685a63748cd7305103106c34c1d0a12c46b9acfb1a9aece42031d7a29a1e905e120825c89cca884f2514f1afdfad3ffa7b0e06646e477e8e8b098a4bdfe21bd4ee43a0ae84d822bebad80bb577221d50c0724cac11e3ede0df785a3ddd82030d13fbff1247c58fbdf768768678f8cb603404ee5d3af6179a4be674a10430b58a8e143aa03e4088cd8c16135d84c8a1d9423e529efcc7b509f724870f894a9b50355e6d93676fa2f14ecfa5cb5a2396a379d66030f8a257fa3a467962833e661666ddf47a1c71bd62c60ac8ee33b25eb4aafa80515a2d630ae3df2eb07baa28bba5426e9b3b5ac78f702da8661395aafc6384c09b2f481f728126743d160f861a409cc7a903bbc8a02b6654e5bd285491bf091315c70167ffa2a682567f0a97e333a2287b4f25891e4d8ab7b7d30fb3cace4641d6f8db855c91b621db8e102d5868cdf761461289cf8c210f04ce0a0e91bb4c60e0b9f384a08fa11782176f53eeda31455eaa157cf720f6de60db0ea24b9259c56f53920dd4a4e1026e8039f527e7cc6f79d67f1fe4e6bda709fe97133e9e0a734116e2e53c7512f7e95f0f5f5c184c1aca6805cb6cece12dfb51b747776b96e10d83a585c1412f8a9d4d0e45735effdc871b873679edecd1c2d6db8d40fecfda15bddbfbedf5c5791de5a673c1bc0c71483e3e1b0c636089a91fa8926596ad6853f913b03fdce35e11b20c26da13e8643ecd44639f1f90a52cdc19aa52e5bb2258d0716ba036aeb2e1a395d83afb94390675c0553c57258dcf0ba03862ce375b6306b53b1b19153aa6d443e7285e2538434c8b6c73c096550c74b37340d403ab1085048473c2d7c83d5feb147938999538cedb30a86834db4eeb5a61dd16c3daac15ea51b7ee2560f601b4587d6b7222ab81766586a68592f46ebeec392bac0f004f9023ba112b833d87d98716f4f15cddff80f3db495e4d5f5f6086107530f5c958cc7a4f5887d73c6d89b44fcdce95a49fb3fa2d4e1c73757c70d5c49172b74d31e38f66f576502a065bc6d909f7403ce4b89ecf61f62db306704e96569ce03c18efe2ed98a6ccc7d191b83f70a9d870d1e05b7a6516d635350eb3ef9d1423c6b4a1147a05bb1cd44ec81bc46ee8153618ddf7ee317aabfb4c701dd8bb9a2770132182763788c103fd1ef385c9a5fb7f2584f51361569d5e2b4a7d5e1502a2e966cb7f72db8f795ec9da8aaedec354f9035f5906a602f29a2e8dc8e25167826901c66ca2544f72e3e35c595f62f14b9f68b10725510d730ad1f7db558256bbad068efaa9e2e697fe917ea5d4b889897a78589de0ddea2e180f458e8ecf9107c2cbcc7483ae50f8c22c2d1ccf211cdb7b770ce63cb7005a286d149d38697f250067a62bfcf5f452ff0b131c79310d3486aac9b49d68273740aabfb9738e0331fbf8075d3f5fee1f21c86e958cc5ba3234cb3428f96fa73c63484d10827ed2411ef44b554d090966a275a7dbd30365fe11bc0fe37d398aafa499fe8d92f808750913895979562b83caa1e3324ecbd18cc9ed1869df68c33d49359474307ffd3293b7d09672df9e9e5171dc9b465373e6b82d0b59312cbbac24809057ae911e5ca5e099c1ed271079db7c50c4bbf6c5da645301147d9608d368f873e423c19154984f4eee01888e77e6307bc370dcbac10e9bd1de8db667f7acca8168398f090dd69eb2b1890efc5b9c80890edb83ff4c03c5c7bf536c20a4b856bd3274cf078f22601a9928d0132a5a8cf7f8fdcdb621708e58b12465f61e843fa6c2298a0adb954be951c1d5842d387b71fbf34f7c995912608ad1515543fb9f8f3b1abd8246a89781899031e89dbf603b665a90e403b47cb23b814f30c33d15b1bdbc97ec9211e3f28e1029d94a7fe1914c02a745f875503ab73c4852a2416c1004c7b3e8cc506842c3a4f470bc9b250b0a0c5a3501564427c425601aafb30d9325ca9ae8a68fa0f420f1a487d46f6d6607f6e38cdbf24720b4b6f2044f380acd4d97005f8e241b92e4d3c52ecdfb9f58dc612d510c96513680df5678435cc037e9c09d22dba310633770c4ac9c80456466f4d5f683ecc0f2c31f1d84800059c49e19ac42929bd3322fbf096586a42ff5a01a39b21aece2bbbf48e086b02a06c978c127e871defdbb44c79cb2d3efeead17707153be47e27060ed10e0d67ffee35bf0d0358cd9059c9f0a5f31dbb680c92dd716f6f5edc35833531089ca9bb8ba4e0add0bd49a9162748585215a5fb27fe7e07b4cb9332fa0435e8a719d5f56e904e287d315d29028a64ab650abe537bffa00a3f6de2086765d8e5fc071b98a2b55a36bfbcfccc6dee6e2e470557600931409028abcaf7801839e09d398ac2665d140a9549312f6465732edb8c8f7780279c947c6d378729c5d3bcdd813e01790001c79c1a76cc4e301c1de1b1b6d130bd08774928fe4a4b34326051ce6bf9fa42b3ce9df0a55e7ad9254481b688183b5472a22ae49879df1fa01c4db71c6624091a191685290134ba0cd87b98b16827966588b9769f78064f16fa706580a090856b99a51eab1ff12033c15edfc58ce5a22c2e7d0a3082e4aafbe32f35424ccfdfc3cf3fbfcb1db3a10e6f067054be77d9f604067efd1f97b9a3d8ebd9f0a50235539504bd821e86d42f5563407bc29b3420ec0df7aec52e823098f550614e1609240175d5133079575d125c6af07f33e0aebddfaa4f8dc39922344104a562bd3f2bfe2c6e8c4f17cdaf32700445349189795ca50ef59456a6004f423284e8e0adf21ab71244a9694bfb6be93cdb1087727f671533cd3a04096483d44d7db38fd4d972631b4bcd35ee825617919061803008db410dfad6e24290db1a4b8db5cec1245052cf2181e9837aa2988ed0fbce91adea7d5d91d6bc25bdf1a578a0f27be2d6bcf512bb872b359a87b74296b06220d077a1d42b2294ebf7b919d798e48ae4cbd38f98d0bc1630dc29f9b0feb283a827930aade89035ec15ce9c98b912e9df95969d80ac51d7afda0f761068ad0f436b9431f87f33e585b12c980069df342a9641d77c2a116d03f065e06c6a0c866b7f2e83cfe7731e4cb95fdd01919b9351f74eea7f096840b88aa2572956baae4779ec9e72e5d944625ecb20c9b86c40d6d998526fe27e0ee8e8e9d911b4d4c0b83916c8cf31f96a866a52d162116da3c54b71803e61b023a7c4fa93224c1a7be8bd28b2e25e9b26e3ffc6a15cc273f15d7f8305ce2774894b22953a96af1fc49c7fb9e08c0870ee859d6be4e357219ec3813afbdd0880a34e0d23f47e1e94a8c94bd650128301a7669be1d317dee1649849ccbb22b2f27029f5e73512d2810883867ee4a9d10c925efa9510017df58a8c2982268f278339d9be2c0ec7e8ea7e0da8c1992282b7447315a4680942f996ca35e85cde2dd61bc3a32bd561d0f5f688a9558bc9c6f236e05ab2e9e3093c39108548ed11b6c5a6ee5555872a2a6c49c62f920988db49a33492c50301cf55d4d801e355c45a3972215db06d856dc52748494b6cd34558b2170d4ab66d5fb3a14f2e67fdd9accbc283c387c40d5c354483b07885e029b4ba7c684239ef656580dbff2d7161491e262e6f8ddd0bd4b02f6f17a83fba141dd2a472ddaaa7e26319254514f6044385c062ec5add4f305b63724d4aa9bed0a6533f3b7cf4b6cfd65b344ed8e48d6bb365a837a3a7ba94d544b29d50ce53d12ce71c408ba223fa6fc846ce76877be8a04cc68c3a87c200da12edc49dd6c2f0c5dbc8835b6fddc52d024ec4f3ff3df08ba885634cbe8b892b368e6bd067f25b40077ec87e513184e66a8bbaf1275bbf6c2425479ce1ebbea4affa0860d7aebbbe4d3e569c62439294bc6c4d4e423f1f7234437d60f9928a426a348e1ca39c99b3320ccb7c4bd9ae08132817872228e058b5022783470b09d1230d4dd313563ac5ba2537c16c4aa67cd45c224c4dba74565bf8d8a89c8c393314d3be194b206db519d656b380cce9e157e1f9a5d5bb73179ba16377d7ab1d2a440f3fccd1520c6dfbbb54abebb167b3162dd70967eb61833e14647c24fc9371a343592c4060c4c95e321bc193e2f8ca05967db9c69f86f68585291790da493ce4f16b57a4afe1cff343850fffea04950df5e8615ae0ef8b2e2cad4c489d6d349386117f7238f50248ff515b605211d9a6d31b465536ad1f626148c0d42ca2f5f15a6c7a3b487270c57072923c883771d9b03c5b8c732a140c99d438e7913b3f4d30620d2b3751997890fda0c998324f640952a342f09c0325f1f8cb464bcb863979976fce114ccf1b6aafbb619693f1713f5b21e9ec307a3e51347cc8a6ddb7d0caea95282380655a5bb0ee5e70be9550e8cc818d529ffb4e9f7335e75c0a5c7611ce647845a6da107668163fbb460cc4a2c672d7cdd0c1d86897586cd7d57dea6ba4a35c64bc145ddc79fa3433d3fa3ba27d1ff02f0df04e3badacd354bb95b3dc9b84eed200350b80fe0ecd28560191fde9a1be2553e2c8b3de8a6520ec306247becb5d598b3f792f00e52b1d544310b61be4581df3b5fa545fba8adef512a9c3c3ac853ad01963341a194f741966fa7222283d26996f9f313655bb87ea0a1bb9410f0393f54afe8897b168c56ad73ca4bf50178afd81aa219903eda26148b15d6683064a6be82b3cf6f69bf6c429aed6155bb4ae55586aa6fa1ded2d287d9bc5aefc15d1e5d114c24ea13c66caf55e4f486a4731488ae1d2f71ea95ff50f0c8d65e8dc0e29952b920dde76cf68ad59c1d55923897b1583bd803477f40396ab4e42acee04fe266bda8f00615150360c95faab1a58242a07d7f351d80fb50f45767f22adbca6ccf0545906b0327817b76843e768df1a7c7cd94c7e7412d1b2ea09a85012285ac34ed7b7dfe758510502eab1d684c4518440e8b5586d6e94b8be7289b0b46177cd3a2f954f5a4eee1233d606ce0d8d8bc5a622d3d2b742ee9629e64d4d344d807958d3237b56e4c5122635ae3e951b4788dbc4e976cbebff4b8126fcf83dc3bbe362ca2cef1353769234b0efeb336bd6b83671501d5af5c16c81457e7a67a00d7a917df5fdb628101870f6cae03c9b9dbff2a03747ea98228b7924974b6b57a71aa2c2b38c51cc05b413b63d661513adeefc2f629e4de800a743b5ceeba07136cdf20cbc039f85d1e3e559619fa594d39aa5b01f310ae579f33bcd91432b0d2ed7ec16278eb5c8d8d2fb39af328af902de51951b4106cb303e97adba3299cb017a6cc333d10dd017239160838ed362a6e2f3ec3d578ab1d5e7f2489ea4ae89695ac77066ef93b176e07af0d751a1459424c1f188016f4b6dc11149bdd2d34aea06f9fd61db71a24c6a48127a60c9443ef8314e60e6b10e06e1429e7691f21fbce380e18658cb0b045a4b119ca1d3e42c2d5107de7769d31830e7330b2ef954d0c5dd5bee4fcf4402a7cf367cd9e7939b74840e278060a93edae52e5031eebf7690fbfebc328cca435e206092d15f20d4624203c5f6fb7a93bf5247538fd7e2dd549fa9b2007fa046fde13eef58846e66c53880a55db6723129bba9db2db481625f1132e7299415b0143ba680143798bdbc22d9ce2381b89813b93fe292c4a7b677ebb7bb5d6b51b064083d3533648c8a726d0886dca90599c54f12eab8ebdd4403d7858d6026ad644a600822c9f72ac5296e0486e638a33745207c35085b9f0b40946320371c6ea086e370923eb06b382b51d3bb9b644b950e148852592074f1eec5989246991a4e93378ca557c066dfc3d77219817e803e099c68fe19ac2a1436ab131f2290d3d1ca039dc7b41a99d52085bbe8a490341642be9e8dfb4997d4906559f57e504dff206f26bf9de471410ce1ad2fd9e8bd3d4f47b9803493dfb6a76c18627b464c74152055189e855ebb97dcf28180cb4a3450c6cb1cfc35bfb4123a5e936faaef560326256d128cd9db2accb4011cb42787e3889987e38722bb13e2cbde0402dff083d66874f76bcb0291b5733ad6b3b904a06587981cd56e8d939233849b71d19d7068c1d2b172403d749c70d48496600bc3baab833d769b1a90eaaaed9bc51c43e74121ced51639c191baf6573b6de166686600c2404adc8e995ac74e9e7b8416af94d2cd847faca487d61cc7ec8d393f34012f757a7fc0342ad45bfd1856d7de4e8ae3ce902a2a0a83535580a46150f16f703bfd5382720c891e54e7411ab447fe118f83636e7fcad36ef34cac8980c3700fdd8efa8b8360f789c794506a3ada2f29fef46da52506abec692040ec5c9d0a5821eb3d07c397ddb1d668c395b8284e3574de0ce228a4696b94bbe44284a12322ede94f7ca30164b599bd9e963a74f5bff8d2bc8907d938f8c2c0cef03b9a5235e8b566aed0df3825142d42221f7d8f92386010a3d17c5b489b430ef3895558036fa0bb7b156e26d58ff9f9fd587a235c41282596accb452d479e7478794de2f688698d2697bfeca7a89f292175215df5c33249dbe76347b9f307b244502c98354288b1c4f96ef384545b6b3f86e0909ef6920cfd77584f4f2cadf77470b75c3a7d2bfc883bd53b9778eaa98340826a78d46b3eb62126152e745bde63ac490fc938e4ae5878e450118981ecdb8968958ee0ca7de94a7083315a73d47e83b33fcd674f2588060ce41821c758ff6541192ea651c27c521293231b933168b18c437ed36768f7e859d7ad6b11eda9aaee9d3e29e71860934bfd424d647031d30bdfe239a89e989c5d554811aea49f696148caf14fc49d66dee11e29db7796a2b9215bed041b6285540f59cce473ac09e9ecd302884a71027b86a729c84eefe5a51b51bf60ae090a0265d8e9ba65f6092f178ed339085744012718bd705f302c64fe2e8ee22ca66abfb33a3aad8cbca9251f9cdd3e9c4e6132e907ff15964d4d3f744e85333f75069c0b25747dcba4d5883ddf76d0cd4912f090fc7c096580c4a6ede995968796b13edfe64195001db5c28849c5aa8675be9b551d5d3c32193c31f3ce1d19b4fecbe6443315564ce7385e7323377d6de6b6a4e69d2f590545f2b871a25cb6164b1d9c75a0e698c45f311d6014168ac9192bb89adfee01e8a82dead541ed6cc7a806826fc3c55594297595203cc62bb49fa7f9b02f9addb40849c1e0e96aecf88a017758e986f954f1e0b5b38ff8e2d76947f39aec46bfebca70f34968caa1a371e836d7b2ab695a1c69e52e23f32625917405491e2adaf922db77868f078e0023cb219e0123b9cf085f5ef520d5323d61bbe762a10f53c633989ec777b91573a140acbfb41906b53e84a1eed6f6ffe586f88b55e3743d00429c46acaf6051bfdcd2f6e0e25e0b3742bb3db0311098d18c3f5ddebdf0f87b03b9baa1783ea436be47a92284788ba1cd6f04d721e63fabb3fe39c13145884de772e6ff6de1fe28bc9037ed3573f67e545361040fdde50ffe1595a509803915082c0a637c676d935786e8873cf69e6d5c37f48a407146b2c87fb97cc9097784ecace7a00df22fbfaa830aeac701d5dc36093848c04f62e6cac95d33ee8ac1b38e4fa83939b47a340cda1657345cc4b9426ebb748eab84e98010a655037c728a582b9cedf92277b2cfff6e2dea82b674014bd736273a918ae5fa78b7cae3ca547d1366f1a496d98dbc95ec51f3416f6b7dd8fed6ba608dff6aab6335f1f9526d32c2f90988c1b1177cf08a74641c6d4cd384f2410ad7df2e06e8c63c4acac1fff1fb4ae14dcfeab508c875930c3c3752fad2b6504d690a0d364b1d9c1614bd078fc82b2daba4e96f7112b142a24156b5290f876044ac5a526e2d111106b25a71abc6d742d79b184b9313b97ed7f0a5c682f129fbf8bdda21ba46d00c6b8cd3e841ee2215a350a84856925cf7fc00d92536c91e1363801d176800306a4d86989ee0619a053057153ca0bad684e8498f25019d9f3b237b415f3b780ab1cbc055d995d08b9b032b909d0f736774e3b9e0d5948634d40390a3f339ca12dfe6e40c4de10e06a3e9d2083071837d36863f7d353ae9a07e63047b4c513a9c0e9d507f6f8f6666d9d575a6559e67e0cc2705916945314571cffe4c8e72ea18465e5c2333658c8940d7f7ed97bc88e6e09b3a0e681907942b4df2dc2269c640d0d363798fe82a657c9507fbf046dc4d95a419cc28e30bc6b4ec274d53026779e245ca391859e65ece4fac0b9d8973a5ca008454bfa3dacb2e9848e5dcbce6bb9605f7df3d6888f6a6bade9b8d1fa738d01501dcf0b28e15a6e38c9f2076422190b1ea2d2f4c54335f0aae6585232e815bc1a7ea46116413c33456a771da81c5a986d51fc09ea21bb8ef794be151a77363e464743643fbabf834a784131ed456617461ebb4ec7a5bdcd1e711cb3d997c69f03c2a616b9fe86b71f22940b8d480af5a5ac34d6d9a81834d8b785d0b4dc937eee285f76bf239617f1dd20aaacd6f4a55b6e9490ab6a9ad965cb82cec4739c562e0cd33582c7a6a5606afe9f3bf10032683d50245045aa4e8fc3ae57399bba0acbdd53da3bf01d534a6f81da33ff27dd2464fadd5aa3358794306f3dad274f4430dbe8cf78c880ee90a480dd5d3dd3f56fa456fd033237081fc294304ef1054977c742010d1a1a1240e044355e7e3b64e2a8578c65459ef89c9783ec72d6ff448c27bbccf58931a247ea544971dc6a671cda27d99432a608bb21aca639db3d24363d30761b275235e19c50a59c2b134f12c8a8b2d2d74ab3d15e019d7877903eeea6dab3174242c8f25747ffd8f7fc09cf0711f826e138dab82585e365441101bb3950536c3321164c307e5075d14a1023bf6336081af1144b4ca32548686f0443c0eebb441b03b546262cac072a373c1556d1b0452f1117456e3d448dea3947a8985adadbd0a716c586174f4d2fb8098d3288157f209af3df8adb82f27f8c520d51c62677e2db4e1f1a12c1e99aa9d89781ec697a50972988ee91838e53d79f19930f6767225ade27eec19897ed6ced0537d9d5edcec9135f7ac59cc03b1ec5206271591a1380b3d495db6dbfc7d7bc5e8a467e75640a80f8a31d1f14d00c912942157548d41e90e1efd04a5c46b926b5a74a6c7118a38ff4f400e7f2149d3d000d9bd435520225321b427cd56119300c2370d03885bc4e2a49c5ad9e4914afd4b62fcb9c2b2abef3dce12c8c1a68b604d37a5ebd84ec95beb2b0813a82bdd04359d8c6ebde14dd15511cc7d3063df2f09133bd5846c11026b92622dad42c5d9a68d8c1351c2ef661fc37ab027a31c0d31e19372e4c7dc9a879f2441b5f31fb3ff35937d0eeaa1da80eb9bb2a76f152f74e0d7edcc226bdd9600daca0ead71b05b6da3028afba44657d00b077a3df799944b4015d68c2f1f2b55827ce191cb4cad2976af3cf855ad7867032e021165a0fd31fbb21e239cc19759ea1f8ec09544e60b35677d9b6516e240f362815461e46b385115020e417bff5011896de63a8d47d63b115dbffcb68eb34bf855b262cd4890aa39142563da4440e8bc7d7d8f0331e78467b70cabfc914475b40d46b9398c31ca55b658f6f457476c08fa16bd19aa5c4ce6181a649dc64402b6328d71c73ccab14498f91d46be271d41d08092c2230bd1c1ff6aeec1347df73672301319cb9002ac104b7b5d326d517630a4d00de0aecd516ec5a8971d3938b81a61e75a6ba599855dab76f183ac4085eadc297bf186b42a5e889e0756c5e39b9d799762c38760e56de8447c95f974e3c0c21eb09efc9a6e4aa9a3de14f4ee3875781d9d8077ae0173d81b89f603b57cf4ffbe4640a14229074cc68da19b772b8538e3cfae7a57101bc9b20ede262b445141bf9ae6f82d7411fcb8af507abe27d9c1fc247260eada93233772ab09c04c2fe0522fa2fe37c73f53f9cfbe7314700feda900ad014152b0272951a9e19df34e4806e4b9e43b46e8b2c91e26cfc6871f9ac2ca1b224a960c2cf92c05ff8f00a07cd9e121758499f7a538fc87ff46c3b6164039f69f9ce22cf0f8117a611430781d666b8f58ac851fccc21d2eb7f3ed0c513cd01e9a827e38cb252b1f01143047014493cb2b2d352ffc9b61fe84076282336315ad23eabe8a5fc95fbe58138f4272340dc33d5f2667541296f9cacf360979773534749a53fd1817c63b5473f641a5778f2be7f4030a17bf59b84b812363c070c9e4aeb0ecc5fb9487b4d2275978e0ceff59bc5ed9fc21e76fd6e922fab975c7bfe5caebd69c57c9d2987a8dbcaeb4c820a5330d468e50c90e64f5f363b17929e6bf8b0df8a92608cc5d42b3744b3977ab782d64ad8ada46d337a76bebfe99cf27793e50ad59efa820430ca1d999711713cdff9ab8c45cf3c85b011c6b5511263b1e705be3a64e90ccdf0913e07ffb14d1dca4cd5220c16a5dc6b8303098ce674b1396128631b403d1f31c79f426cc4de41a1fce8e58d6e00634cf52d8b35aaf56c0f2622e06fd630698ca5e95aa9c9dce7d2c0ae3cf91e238cd961c8936f5588cda6b596c3f1d94d9fc879c0a7d8c95df8fd211b84f716d02876ff58bf92c893790a7faca5454264bb16851f5a98ee2ac4d480723901a3d00b62049f0b491f90294a8ce8486496a42dfc930f419e373e970bfa18c760f9465db0f5cd50a71882f6b25cdb8bcbd520ed67764db89a628677c094e7838ff899d3fa17dd6b3ccc98ad03f24f7d3e0136d4ee1f47382e6e7d7fb75015e4ea29c551f641bdfde71750d11f121fea57e04709220e2d0d14dedefb09a460c18ac6ac9109183bc884beb5c59c42183d6cd6861061573769731b0ba7f194cf27c615c538c889d0f2cceb9a141c7d4bab38d94c0765153b2c2ce72a3fbfb9b6745556c0f0e99cf2d64524e3b015e3b2d51acd60df276e1c5027ac1170c8ce12779fc402dd5a00bc78dbe06c652751a1c881d02cbf4174f6cebfdd6ccb5a5e6c862cfa2a7bd0aad4af08f6b70b08423a0a2e027114d8b42f84686bbb5036a5a7dd2f2a0fc6263678465013127ec1b4c819a2ac2f3a4d4ec2d30a49c685dc032a198063fa62a9163fe25644e636bd0fa7796599fed4a2876b2ba6fbdd66d0dd6ab28535b94c6b74535d272aa39af9b8bfdc5dff2fd56452faaeb867a321cfd13cb29c0ee77fc8a35e7f284f20dce191e33da2b1cf512e05202cfeaf5117a2ac07bec768bc19a47671f0c61158300d862f25aa5a4a9fecff57afa723f5a6d5c899a60759b57b854c1b987df0938af79110023c08f90abe7d5b01cd683b4f0c9ee8a8c613d0ef59fbb77658b598fff9486fd68a78d00223eefdb0de95d9a37b8d4a9286e580780b126a4698f697d33703e7939cd950d72f84fc8020e1ad0c940518868e56b2db9047e4d2d9cf9d55a334f299fa2c2dc1654ff21c5602750babe36196e439134b54453037237288c12bd4117208ba88def37a7008b8afa1a92c7b7c05d59f92641892b14f0a9350e7144a309fc87f464bb903f7c90953be7728f2c084d0c18e4b746faef51bd11089230be33f4f280d75ba553dc2785b5dc08e8728c7624aa98b8aa99036646b18fee65f91538ef5ccaf94cea7a4f023bba549177fa5b2188e2ae6959095fc1f2f89bc48f0e135482878fee72a621bb74f44c4f770372f0d86a8a940e18d48399681fb3c51528acfce08d494fcb3e81411fc2702ba6013fcc785bf5571fae9ade0c3f812f1a918d5fc2474f95c8f6601bfe8f972fac8dde270aa27f824ba498e6e8155efeeb5fbcea8084c93b5fb45c44515ba2aa24c9d7f3ebeac683fa73d9736729a3037f48379f30678ce54dff100b7c6457e212c28235a238838f5ebb830814ed931e49e9d6406a0a192435c8b9dd5b25a0ddda2659d03323ce80ac6808858e9c5503508337d2ff2d756c7d5c5d3c0069b5e49778964b25e82e19f9fb50b547ac1486febe1e868d7ab91653686d1114760e75ad521ab27962bea6d546a0c3c4849496394ca43504793e91abdcf64ed49d6c2746e6d7448b365ad040678a18f70cc8f2c0432d6fdca8ed2bd1a96e719e646f4f4a9540e745b5f76c2a77cc3f32f95f4a98656e2d888b4c4b47b6657df97bcaf9e0d933cf53925b905eef23f7ad83f12b741ab067b7784fed397c8d90fab71211b44ffe5c31aaa9b62e222e03540cbc8bf5160e7f3c9681911280e7e4dd20fce8e62f13a9503634992ca16f1036b811016df5ef71dac7b1d67a25cea492a09250756a206992e2ef4aaf898ea7acc761deb7705e412a87c44d22769958c7026073239c08f45e49bce10e419299bb50a471f35cbb133cb8ddabe3042ab686e93fc4c84b29e056a021b007ec7213fc2fe56b01820bc2e71863a784f9c94145f01652bc75d1d583e8bd23721c9f7ecd5ab7e6d55d8be6a52831630e4de3315ffa61ba24977ea7c2e5163dff6d801513e643c3513dd957c1ae3e6acc343901077b9a78d046c259f2044e5189d70713c353f57c21f050b4e21bc8e7919a301b4e0630e810a964ecd399e2acda46f261ca09b501e141a5bb65c0e8a01e621d39926436e41a1ebbafce0f469a6e53e29e4143a7a547fb127c785d09bbc77ca781e37d8781e845686ccca145c706cee3ea956de1e79567c64e5a1364485a20d72e5906102501e6c01d6b29c65208a38ed00bc8b79df7b11573c8ed25b3b8106381afc27c4ae7b475bcc13d726a24177d8bbd2f859ce2e0d8e438513d7da5b7e937beb55b1b5158f144c56a53a375449358b94addad0108767f56912c3a54ab924f320b35d7915c779b16bb330d5fbd4981ee4ad93d1469bde3367048e3dacd112ccbb8a1fc14f0534eedb21fbd542fba15871504cd1dc02f0d30eef2187ff09e0c04d4e90ac31426ad935d83e0a588750972d46b218bbb3757326f294ee4e900caa07ec339e131506bc5695069c244f2d4044c58b0a4d33a0fa0ad9887858181a97c3b82b03bb2c58a0ec2d5427a90fdfedbe39467a5a768aca239fb0963a2f52924f5dada81c758373db83d0fecf999ae3bacc70301545a2e6398c3551c90940c39027341ab6a9644d5eb95c453d268936ebf0aa1ddb62155e9d92db3e73ada8e8669f4b16855aa950e5be2ae854d2370b61a6942c143749ff382e564522b197efbe48fdd1fa9bc62ddb145366b950f2bf1874e34143b3871dd7a7dcc32e9f052d8920cd2c944dd827fc2ae67826b0ff116faf827803761edca0a25d4a322a0b6055f0ced4ceb9f31d238b65e27bbcda5ea963a2d243f00957216da5d0ccaf8056b0da55a85f01150f011902231fd6037fe613d9d4c55953dcd2e22590afe56886e18de5bcf253b147f2bd6d4dd611c04f9ffb55da9941e8433b54e2d60b8806c5ab07c78ac8eed9906f2d59c059e885537652dc97d097275623267e561f12385a32a9018a450e090cc18ff07a38559b4393be75dc4f6d45f28695e82474348bfc07a2d8369e58e83797d89d5dee6c10d1fac1647a0325bf68d7cb709ae0998ab351398fd307c53b0b4066ef7df5117cf362c23606e92d042638758c2ee80bff0628ae5ef364f63a0ac7bb9def7bd7c2de64677e4bfe22fb3f4e6a84d6eba70edfae9c882aeede20242dec1295fbdfa2699df2fd51699772da597427f3009d25e7da43b9b888106f745e896871b530506928a241bb5052a5cc9ecfcd0cbce12b135c8cf2b60a788bbb8396aad1900af10b95233dc8e62639e118b8c013fd5188ddb5aaa0f2d23bf522d2221bd76f48f54070af5e2b4fe0b13aaa8eeeaa0f423e113ff68fe669e59503c30924b769b40792b778c31158d81f21b2ad047c525f3629dc9d9044644483989a7edde23ad4a29caef3ae38454af08ac57ccc80bff5f9bff5bd009461dee2a12139c3f963eded8ba572d1597f98e88dca87f063df5089d3b9c4701935ea1cbadbd4c9043e833ba8e712abc46e1674e55a75ca884d3afca2dfb3d053610beef935eddbeb5187fa6770312eb54301de0976ce34ef0bac9969c2b0a0c65a43851f4495cd39a42bc8c62a57fdbff769f7ab444c532f664423de03a4fe4cf190d6d035a7fa35cf7c8e8539dc0cf29894ed4372c76991228f5b5db5db09c10856f2dee01dd33a219ba57ce1fc6c236b06e36b1de3326b28ca06436e8277952c71e98011b6f6315f68a9975ed645f13ab9e949a6a879716078938044d13b6c3f608ee4d982d84d2b84a882664f7e20d56033f24954df33aed169e1ee8626985fbe6b193116d3225a782293210184d455114275bb005eab4acef5507880ed2ea2a4421badf284078e55f512df7095e729b103ace839647e76a785b13efc3f20eb1ce4e986db5aa2cdc752139aabfcf4d7d464af3834127ff4b0fa3cdc2263ce9a0215a2b6a09452efe745357f4020dc4ebd3b83a88a3662927ec72b9c5bc20cc9478fa4e2a4d321e31ed1ba0c76e0219351098641320fe30689ba8cc59f5e5e7a1d0909a4472c5bf856e1949ca5da733018cee12bc6962d000a1f0c6a986b75e690c145369877d84481c8f7cd9a67f3ea64fa00b5736e9f5cd1d96460b78e616a0faa2204634cb7c29ed5ea42c66704d49ea453bb276443ac5258e58f145d80e9e0e33ae0b93cfb67b6aae3a11bd3f3793d9f860cb1c31377be22bd21a3f343b298bf549a2f16a75c8164bd74aa2aca8514a7dcf91b8d58e73ba314edfde7a820554491a884db4e20501c7b3a4db608954dd7adbc1fa6ab4dcac25d9e5ac484f999896333bf8858a3d12c7f3bca8537c760f6ce918fc5160ee4d6784c833e488692ac34169ffaf8434d4bf46e827fffef6374ccb8b769bf83a6327dd2e778994ca77bbe7156bfbe9079bc9a4be9823d7cdcd6da2fab76f9299c99117d5bb5e2ce6a7aaee6821a2f4e5f6026cf676e1a39ba9d6365a5696263d6844cf8b04da2cc177fb7fefb4e16643d297027722a69873978d4729fdbd25ce811c29f393468f5548492b44811985396c3eb9df994a7622a897ee22decfd484f59856595b2cd239f1bd109712a8275bb47f3a96756e0a7cb17135c2893d57a236694649a755d58ad7ed8176395166d6323287e41248f4e018205f758af1a6c1bea2d7ab32969ac17a75fbdc5c056709ce8b12034f01500c325d4e1df3caa33d2ac20c79abb0ed350e64a7ceea869f6be93ff4ac619096df3891403a60369a644050027c95d007f28f6b1ef363e1673434db0106e74d4f72bf4a5926a08a093d5bd72486b7cb3d502a9b69548b3eccae8450b31d42d61edaf1d722c9740062e89d78362ca244cc387a9a51c9eaa58cb4296f7e74d9b2188c9af4dac4db09d92ffc490b2e4efc9fcc1db31b1150da752309e5ea2ace555e280221dc60e176e86ee2e48c7600afb8633ac6ff9f82cc05635b9c7a148418a7c2baa92bbae84cf8cbd6ee7a801b832f31ebf6cac50a896abc5802263dfb34be1c6cb7a22cb5337e150ee598403d0479669ba8efae2caf2f2c29fe1f3e8acb99428f15aef3b8c287a27ae621bcd761fdf5cdf0ceedff69158aa09869651494be28a551d14cdc5a5989869ecbf9077c3208959f2258b7141404e4f8c180d7881a0681b890ab99491ae4449c1abd29fa491f4ea2c15115af74cec33c4854d24a57490da1a7999bcb51e526598158c1091ebd4214cc432c803a6f5433c4213d86a6015d3efabf01b275a3822d9659ca79264a4b4292640484b576649bfb02fc322875de564eb78f8c509d80c98b2c351aa6da1e357230df49bbc7114d3401fd47bfa7b2ca10612db3131c413d212a41ca7b7c147a03763e2e9ac541dfa535970d48510711130ea0dc6a392be48d4b9bced94b89e66cae904c5f2c75100db2b8fdf5e94e11935687d63190d90f42184725612bb24876cc30a6367b6611070bb6c03f586c4441d67a7bdd34316c326fe4031e57112deeee3f66ae6ea1b23cb16e893fbce155a74b1d09e2c6c7375efd94f50f52303a84c6965cd24875977288e479b1909e0cbfa4a59ca8d3eea2345377070b3c81b0d023d8f83e93045583693800eae7eb5b3b1db9d51a2690ec60b7dbc687231cbfb9f94804a3b9eaf5a5064644cd60991a897d68ab3155fdde53e87511b4f9082ff8ca85f0a12a1ff49aedba0753e642f9e267cff874dea9fd50a5fb8f71cea3cbf6685fd49d4e5eaecb2e8e05bbe842173fc7c1c42bb245f74925c0ffa81a59b604aa8e55d90039f344185cac39cc14258fb50002e1476698c8c4c5b30d68e6b6e530cda95edb7bf79f0250e2016d512c476e0adc344028e218d7e31c1abdfafa7dbac0d1834979bc1ee01a42e2b2690abf03775541d2ab314a317ff30918d2ea3babe548e4d57423fd05ee4bdf8eb10eaf3c781a6254f22305170fdef917b8a85287110f9bb830df939160bf743322d4f8b43d4b5136c7e0b09ca28c4340e8be82b68070dd939ebddff6632b4869a8c053088298dd6874d2745b4615c7ec887f8f3b7a1502cf1ec958a6782c0336d5ef92f979196cfa8276f5d76311f9ff9df82a9681eec1de04b90d077994e224ea8dcbb18424e4c24c303087f42512be05bc2a0b2175a5449a2e38789653e99ca88cbda9ed87f6a53c19298e279d9cd4db108b5ca0e2d5c0271f58d71610f93927b04eb69aef575c464041b15a2060f174c70d6036d404ea3c020811c232f488143482000054e31ea223486cef8d258865fc487bbb20e4e5a11e406378aff669b336d13e53a0f7fe693bbdf12ea014e84c7d8d28104a52aa81afe001900dab59de09acb21cd3c1bc0e4c52b0f140a981d31a8d20660c90a0805942d4c5bdbc2ce8c0be770764b211861fdef33e6d59f57b6ab90991f18102019bb0e6420157d132a76e3f1a7cf3415e760bb7e14e69b482c1a09b602dafb5e5c4816e8a493b96a485a51a93a0af9bff6f729905b08e5cf414b0061f1fccd69c79bf662abd3f62c85fbe6879cd5e578c50cd1471c1a4357cdb2163acd93466512fdb34525c5ceb199635ee00c0fdc2fca78aaa24c5168ef51ec4b868f1296e81178e2ba985edc8cca9017377b29e6ed76d38aafec8b56d9ffc9d9eabf05a44d680575ccd14b1e2dd996abac687837fe12d8d2233d365d34aa1746f082810e37e756920230d5c513bed370cecdec9c9b81bd78b66cbb0d89131373d5acc2c4fbc16e7b3bff598d257b154fc14614b8e0d0d6d67fe8068f57043393fbe3f0d9734eeb646a15f0719792c33390d75cad6d64af65edd4fc8fbaabc6a474369bc4981c403f59b66c77f58e54c7f1cf526c2c3715ec4634b3e2e91194031ac495264a5f44667018582efdaafb2890b140dfb00ecf91b42f812c268817df23306e065eaacd3df9d1dc7497a3f975e9fa39d16aecf40e665401175815bfbadd5f6731669e11e7f31513ee437fff815b8692aefe40aa0f050d15449737b03fdf2ed281c32d64b5cb30e316db924fc02f78f27ef4485727f4f53469d74aed630375f24cef6820e421d55ed7c37339401a8fb6b751cb139a7d643374b9a9157969bdfae97665ba0eb0aec1176a2d85592bce7526cd45d07c150e2e07ea7884b997c29991c9f4dde12ab9fadb629a8c0a9e39070dc2f94869d081437f0e6563031b7997720a98eb25b5a86844dfea6f8491e7b73c95bbb2b429a7ab5648b9314b08fb690710b794c06782f8cdf343f547b4f19fd4eb63a7b4461938919304012229f0cb0b7b54c5df64fb690868dfa6427ef3ffdc42666ca6ebd586f23d1f58ef8b5bfe5fffa2aaca52af67af7ecc9c59119a08d72648a722ef3010b73783a815b0bb238bb5afe6fdd39a18f58ca635ff3aa8d16a6955d23af0ec63cbf21a7fd6e114a9ae902e09db8b643167d3a82fadac15d8417c7579194197ab1a6794d440589bec44b9c312a573cc753b8c4fd40d2512a01954d6922c7971330b058ba8da819d79a31717b5ee625d9f274b85b86637899a38a8ed7a01303a1272ad1822f68bd95d89dada10fd32e96d978997c95b66ec41775a2dbedec71f412c838ffccad6e6bc5f466d615bd7afcec1a794c30852c8e20d3a818826f065fc404454d8dedc0e97e0652b4dd6244e8abc5f5cf3d7635d83df84c2b255e18beeead4f06be6108a3f6c6534f4d2e8499d9f21460360b9c9c63cc8dbea27d2da7a723fec476619e4799b05949dc52945673033eaff6cbd2c2288e31a1d5ca7bef5de744eaa98811c408d09fff50b6042bdc28e36a2ef1168eda3cf0c767172623711db97e7cfa8e795435cf181258b2ab5cbb6b15a628abbc8326d601896a973c608a522221e4dad93b46ea890aea32c113dea6436cc60cd6cb64dbfee93ab1557a6e24acdb6a6b84c1a0b4de698722283a9d6e81d8907098632d06247dcbaa8eede719a3ac4b4e55256591da2b2b6a09a9cd7d4325c7a941e6590320569be9ae9f8f5e1a2a853adeea93f45bf8f8b54aabcb2dbe6cce755e7a63ed533902286b570f9a0577faab4d114422f6aba339e1c8074b7b2507b1ca1b241f414a0770196cae1801f649cfbddc5262a202cb9317ff40e25a09ba480e5c6b2386cbbebe52d1b172638a210301fc99e83b8bad33d2b76239d1133d4eceb3425b63ec239b27038a958063910de353d194eeff50dff7f4ceb6bdd0520be9655ed4ca808f9acab50fb1fcad0b39beed47efe2eaaf3bdfa6a3b448fa1f8a7bfd6a465157e3a57ecbd530e8e7672b8498d8587b421acd836d401851a4a0d9cd295b939465187f3d7dfba4f8d0605c0e5939b11e327a951c84eb39d837f93c55c50fae8a61ef35fa46ceab2b303601e10a9e23983328eaae3bc01f8c137285292bb06f5f7152eb22400910e9b8c21ca07a27cb04bcbdcd4a13ca6236352854a10d286be833a7a5cda4aafcc97e83ac8ad8455cb060bf8d922f6ac9f2f7332fe0a9288dcd7990bcfcfbf4288ab65e50f350413df74a6d967f16b84d2884c69f820617bdcfc5bfb3d3898bd6a767438ebfd6ccd5ea4190e1dde5990ca1bb3c8554116dd32263705715d8dda0c9c5c41c264b0e2ddbbb1e8c676d909c505287a792369b79f06bc5cd014e77d3a64f2dff34662676042919a3b220f53565480e7a8bdae752bfdab6b10a500cab9a4df9eaf6939d90d8b73fda54cde9bedba146ff98f349c5f59533cf450649dbd7f0fb925f8b4560cc0294a4adf8d94875d49adbc2a85ba89fcd7946f8b04d8fb7cc93aa9fc5eed22be9fec26a79b809a9d2309470149cfcd86a4ea002875680747b51d0d28164e099dc19d94eec9e9febcbf262c40721618a205fd06fadfe284747c49bf083c41f1967407ad55edd5da8f5a8c100e810887211ebe5745ad6249d8a31b0db360fefcc6619da837a0046f8a1c7fa786efe3fe7a7ff9d05bb709486211862b25920e9d3abe0b38e9c66360720dfe9a007e8d6b2061c1a7baebd27b570b7ee49905604bbc2298d543a0cb3211a8b383fe7759c993b5239993f498a7ca9763b08cef3902c6279c1fc5df02b599f3f378650160bcfe2e92a2e8f700e5ac83da4a57b79440bbf997fbe0d8416f41e67fa2d369d69d0658de1c87214aad80fed90a7bfc53372a33e381d90a5077779a16f6d622a4dbd1ba5b5cd4a970185008f438467122fc77a83f3d3716dbde64a3a1b147f08fff6d21b89b7dd46685422a0b6edd2641175257a36f51cfad7e512310f2f6926d6025ee449b24c764e4abc4cea79e04b41a20cb6600ea7186d3ca105f3602e6ddc4701f9c3c4f21807ff57322d7747e45f6ec629ff4e5364dc3f3b3bee8e278db52ca50583da47fae32838e596e9c0fc373a0c2fbd5a39fa3325289d7ac7a83ceb1ea875e63e6b2f300fab724152ae59158b47329e96558b13b2de01013c2ea0f6a098cfa59f390c217c167cf0e80c77c8834053eb4c36285e2fc2cf20d5d615202a1432c4a0d263b62b76a0bb955548e1ba41d0270f1ce68444ee23663a6fad1dec6113564b687bebfdc6964a17dada317fbd7f45cffaac19937407e2933b6d92d8e6333b06d429072a3127c22fd839a2597cd1f0f2b32f12bb4fa3873ae02ff5c019b83e6814391a54911fe0197734bb866538de41f628277468a3a4ee6fae06c487e6c0c0fa57b9fd0b651f511598bc6acd3f99ba73822e48ed35bf121e1612e423b97a39f64f26a6d36c09f3ee2f82c2a08c1a96bd47fce775d7dfc0f47ae08d1f7b78f7da68f7de6d1fef35c5543110d75291adb9b93c4891467f567854d6891c45a5190b850e5bdc4aecc8929e779b116a5b4c5feab5929c1fbf3dc7241f6992b8a9cfb3bc166c0be477498c09e8758a0b98e2de52f6e4cf082c7d316a2702b974877aa7e8ef5f8f2daefc7903296cbdcd35027224b654a279dba174ad9dd80c0fbd5ddf0cd35535d9f56bb523f03e9a3123ad92d17cd5bc867865c8bdf1b387aff8df626f80ae365f8025c1af45e1d27edcdcac6568cb2a58632ab6b99b17380f953671785404d78b60f30e0cc2b518437e5de553da8eb843b808fd661fab1d0ddc90d3bd4f13cbbffb2bde4ee95746f70b65c55ee32469165bc4e73fe2bca41bfdf41731de0514ccc37e92ba46bd6e857923d761cf493190db166163fe74a3e9cbb60b5823d0956fec0e1a1deb51e77289537acc9a311a9e65a9d7bd88e99ac5cb4c56bbe02e8d2b438dd35920792524da4d2bf9ffaef7ef29a94609a9bb707a049d6b54c61ef51eb631d369584f72c8d65f753546fd11f1b39e7f43d445ac605bb8ec735d47bafe7e7cf05da1fa5ff63319703cc63e89bf6ba0a56d7ebabc01fa84ad0497062d29ea72167e9bec58bde543e00907998a1020f32a6eaec0936525f3d1cce56f16b1a18f175fa827556b3ada977b6f6e55802fbd91e7cf4330e92b5eb8cd5039d1848b5213866051dbd6ebefd868cd85c635bafc77973642003d32527ff8d82cce96a91dda7c529a48b1efc524baea47226f68081822c5453a4931d522abbdf49d70c79a9297eb64d309ca32cb4f39b9e57fd8d4522398b325399050bb3dd4aa933240d7fe96e121f98fe85996fbc4e66e7f33c9e9bea84f9d3845bee99a820a1857b55ab723bf02930a855cb9e73d16ac888a92d239a55959a34b250e0a828982a17994be4e8ef652f37e1da091f08b48b71f8357149e2aad283b08a0d77f03b3c34ab0944e61c9be97eace05187fecb33ce0839d2f9880c0d72972f63387bf72a037c96949e601a808d129a0d1c3f22cc64771fa84883fceb4f68cf4dc2b5794a4af5388982ecc15f1f8157f95aeae8bc0523f42a8a7bcce3ef0f9313f9753b6807ea0784bd5a7abe8dca317e7f2b25284d428e9a8a5b6de03da2490e6bcd338b60c4d2b42aea8b26393b7421d08e3a975c0fcf74533a2190d62f4318cc57111430db6a51ce5ae174ff50c56fba47553f224ba9500d200df1c61f37238ad70f7b6e9c5287a8b55434fcc7786cf6157570253eda5c235623f8ddacdcd5c02b0287a62ed19b4a456563ee5a90d88166fccb4ea5e9dcec0e8ada63b106cc7b06b9d057b8b9835c2deb97c63323879e8a05818ca368ccbe9528d73f62b7c8a2340e61e5d61d19ca6065dfd5ca4380201ae0844f0a7c3b85769f8d7c8746e6768089f182e4d02fe52cab855aa5b7d62540bb759f705b59658e3f2cd05525a9bf6a274c1b0fce03740559141b096339c185f840e3c2d11d241f36e0a24272a7a670241549cd9e6addb1b4846e7a742ba72bae1c227e34d8f1d6fc039ab5574e19e8d2a54461ea83a18776c2a494513a28d3b5e27d9ab37a37ddba26425fe965538cc837f7fdc3bc44c5fe6b766d50f43f0bd1bc6055093d9b676ced2bef9b7f4a69859ef238fb05ffcf92c04b82934001edb7323e75e0b99332a41fcbc82832d897df3e336d9e8b2b5bebb632739b2579ff8e3036ee46186a522cba9b1a95c945daa747d8ea1057eb361e4de04b6c11e25f0f8e31e4c8684ae94882cb4b3f56805bdbdd9b035ab9fd735dee7744493135385a7855f734da75b35558e9fad070d50839d50ff9e44a8d9872c1bf304bae38d90b2be3add31d4b2824f8f04725c7f99f7d1bb50cab5c321a94a4174af1b0458610c5a2c6deedaca687d9cb3b9c05849efad9c2dd34d460218ef26a8634d8960dc12ea25c8f87b386d6bcff596c2427d3174d530ef81794b53f4d1e7a1645b1eb8c7b1abe382125802e01ba9c94247edadbbe988e377a689a5e006acd075592b77e1d6be181cee8a7c915c2756eedd328edb09ceba820599e3bf95d54bca6085cb544c9e5657ac77d84c7ea7a0dc8022c64db7593a259787f6c38ab040bf4621e70c9e9f645f456ba3268cea13f5b150f6217c0a94251e1a9243d176912c6c3b41a292d2011a014562e8b906acacfef1b0a2c1e8c5a1f40809e430a320f955ba17e28f7ee0327d0927cce91ed100ac176f99d3ae9ae3ed3341743bb3c5de1d01079fcbc34cd39c640fe92f1deb6cdea32ef9a0a2073d2e3c064d0f9a8a95d248a90e6a8ec5c44a468224f6f7cb5b0a67adf905f6ccfad60192f46103e26b757604271a4fb472fc4dfa126674c5537c9a134378a755835daa6c1dfe2378ef5ecec9a552db8f20da87aecdd78dbf5927cfabdbab3d469850224c200b6ee7ea8dc6234974b4c033b01f520ae4fec8254618e22cfb9c34985da4f6b7c99ff4cd03022b0b733ee8d79fb94063111a3ab32da82152f0e85c9f8eb939b48d17dd3e2c5cc4a1bdd17a556cfaa3f7ad8bf73b51836ae5ee0084957dc110a288c7dfb597122182fe624bd157336806721e50d4dfa9b8407d57a5055be107a64a88db294db500a2ba81f95d5bd584d6151859ac5f46be03330d863f2435f5c172d84c007f763c5ba8cdbd9f4865064d4f7fd81cb209d60d4ff812d41ee2a36d6600178afd25b174ef867055b34782c1604da1564ff8ccfbdd1f10e6b94bf2a99d51095140fc0da77ad9907a209870e82cc7a4542110156c9cb3a8daecdc3495798896a902181a44baf7398dcf8f7932fde375775082c5e7efe037e6e705565415b9ed8178a0971a7e19329e08b5572efdbcb455285a7c0c63af9b68420b58099556f5f6d3b8ff5fe7b3dac482e8bfb60c13f7d8c4ea41f204280a492dbea21940b9a11345c9bf6afa2e13efb2fea9ab8b68df6a023f845b6d2f38e62619e69c2702bc7efe6c1d2aa3d8ffb441ab0b105657a4639b910e041d279f5433e8b3b921f2a214bb6b7272d45879be393bf8f5be6259baefa700ca1a4c2b025ea6cbf445d8b64ec0b2a45cac8a3aac21121efe54f275c37966d1996333e387750e78d8e195bcfd625cc1e5be74c5b90af6bc302c40680c0bb3519c5f8cf9c166b2762570c222272f2542b74166c57064b75ea41f9c634c55d78d12d5694da31047458e446749ad850a8a0ab0fa5a2c30a6ca63a38de480f78e6d8671615fb24e9f1bd39a2958a7bd6e1ac55ea44fe7b398327f6a03b9dfaeee40ad9cc0c331fe4640eeeebd00edea08ae0d20669ba4bdb50723c8fcc83134afc500c581015b7a2dc5fe606ccfd8a5d4e917f15603ca280ae61226b3bb55d8463a66d497d720887b823e1d212eda673094b7f178b28b95bbfdbf713f1c2ce41de5ac99fe2d39171846c12cf06219f90ad025972ade16284e0690823272616a82aa2750c90bcf62ded98686e434983fdc5578ed1020ca1d7aca33002d83eb197fcaf69177f7a9a89e0cd27d2552e95f77c48cba2ad20e0a345558f6958a4308345c0810736a68978b0e6361a3c623ca85b6399c417c79f7c6ff8da8dfc953c1a8db65b0636fa323d8d251e0ee773d02c3ae466b821d3c6662204b884994a50c68df2972a28be89de551615cd16c530fa676e8cad1819f474f0698e37dc4bce41a9f2b959c5bd50ab867815b455ee960132b31d7a1adcd596ae5145ad4e0ae425dba0a41fd2eae17b88c353f01955d663ed84ed7d7476aa8966a9fb945d3615c5559753e35560bbd552923a7d0de63d113f979e408c6b795f2a0dcf070b2b4e795685ce6b1f464725255c2440c927d42cc5cd7ac1d1cc2a6ce1d08d19b77fba035f0f74e29c9319a2c2f4e7109c1584fbc13475dca33bf67853b21746199b2e4361358d67733e19f8f62b584e2f01185e50208c59902f026d7f9aad8103ca3f64fcfefbca8ef6001e723cf957f31c4bffbde4e4735edf1e6abbc1c70800ce556b4d5a06c258cfced2b22692a45a6a92ac3826084d5227bb966724e67f94107fa923e4e3bc3d398dcd69f719bb3d0d121b869394a60ca0f197ec4bc87bdfbf54ccac52581bc0899a8b63be0093990c253aebe831ac3f9c1d4d4008fb3d93f4e6cc303ff75014fd62ca9af0811f1683c6522aeb0e7f68d278520e57834c83da3357cde1bf773a4e3977d2443582da17ae7d9080b7cbb75bf044874ec6067f1c2bf635b7cd6edc10add1dc08674e3e3b20f21fb25879d5b820a4084c41ad015b623cf19811f2a34f1c02f4a52cf5ef1930fdeb8bcf2e3ca2aa6990078a5b1c7efb649d5d4b8374a7cf0e74f02ded86a511759f09791199cd7bbcc7a7da60f6ce1d842c87622770d74b442328d744d0ceb8aaf34ba205c16ce7e75f34f37fbabdc16440f06845960e770d6baf65770f5baf6401f87c7d37f53789bedcfeffcecfb939e598c01c841429d1e8d82feabd0fbc8c2111ce858804debc52e70f6334bdfee43ab084c9e8ade348aef36e5c270b16299125aa9dace7e5ab72480f727144bf765d7fe30111ec1999df724c2bccafcc8e7e11510ff7eb40c2673115be2367a792aff74052596e8a3a26d08afbb3c0d5983b296ff057f74c7e0a363336be2e38d3948a50aa9a06f7712840909bdc76769d54fb47d207d772cddfa124ed0a58ae0a28b8fff8b29175997526da295b2fa04d918794a16b1f5286785fff6e7af35c14e265723128654096464e70aa1a3c395e88c0974797ba11456cc4d4db8ba396f9f45d373797f49f4cc36ae49b5ad975444cb5584a750743e9839b6d87af5d6334430b7f0864c24c32a000d3d4430024cc066419ceefc11eb0dc7b36d90c4e4e95e5bf7cdc703c4bb27451607ca53a6b3d95f51d5a25f6b151eb5fe71bcf007984e04f6a7cfab5396a7c23724f3b292f5501ea83d662a9710c7ef6c9c8b63725cf526d1c7c79723a59be464255668a924ce304b0f913e92bab42e8c560adc5aea5be9442e1b4ebc00c9516285962ee1e57164785c8b047b6f77595a945bd7dabb802288c8b7034bb5b7e38f7d5a404e44d467f87e60235d30a1aafd729d07d135e2c6976377813b9584fb946e5d2e0e02e25962bc2d0bb412371281ffeb096d7ab660358c5f762f70fccd3795dfe2432988c85aba40bb18016af067c957bfd9fbe70f836fb50d126d60a856a852571d8b11322f60dbe2aefaa58868da27447e4e6cfee0a9dae08255a7d5335ca0eeb28445f2829ec736a1245833b49ef2d8d90b5c3e19c7b0c953455529dbe85d43f63a804f142bbe43d8a8211d1dd2f98d864e6a3ea3fed35b19d32e1d2a251e59b102ef55f85b39e739de3c65fa147e7dac6550424b4658696915e9955cd244a729942538e6ca2a997797546da2747dc111d003de4fcc5ea1275333436d1fbb5c8de35d809be644c74e9e008bf966ea2854a3cb9d22d060ba5400ff366d71302b27465def7a85cdb40953ed2789c40be6e39b6cd940966d8737d5af5537a6db8f5ced926f6b46d57c30852de6a26bd924563a021f3c3a01d44783540697cbf848c4b929ae4d8ae84f2a7b85f6f0df0ef4d0a8dffcf9030b90991ee3452dc859655e1aac281ff9736a2bfe0c8e183fb3e7e65ed267d99f1beb7bca687737844c1e5e83422fd23caab8405d46df4d344a43bda3e9f90ac3c3d9ad0b152dada82438d43f180191e6cf8149ac47116a972cb00cbf0e50c11d816824ff7307202e993bf7efbc4ff6ee12500ec1ba7a22bcb17ede775d5749dfab370274be6714e0ef196ab162f8f2623ffa8462a7af4244abb6be461622cc907c043806249cca8a158e820565806d5668f1b19171d4e95dbe4427c4fcf86c28afb706f16eecb35493f3bd6a7bf1c403caf913614b006c561e2e3e5df8ac59bdfb147e0b9d77015447109b9cc4c8e7cf6f6dfb8b226174313772f79634be1774582197e2a89407462d8a63004d4ea74f61102857b157d01c2e730bdc7c73986b002a570d51c7e34cb52fc23e16fe3629576b50755454c714d56873015e29fbbd9fe18394f7bc5c9171e27feb28b5a30998da8514bf8871bdd06cb637b3f4915949b27b897d9073bb5e103b736b0a3163c9eef4f087a158dfe17ad3a2e960312f7894be4b797477aa47df10090402e24c4c82e170b0c68c486bdea48267c26c4fe97c52f06113e88c9a085480d42e8ab2eb94c02b087270474e1a576352a26d64beb78f10526b1438590b7019a9d0d48a3c8a26b2c1132d3880ed254afea6a173620bbcf3f3a21defc8e2b1e91911e4b93c0c65d5e2eafe31fe169323b3946d500347d14a627a3cc4af5dc4075f2784283ffd4f6648e667f44bfaa1bc078cef1bea2be803fd39fea9aa205dc0f7a7a4cd69064f6ba13bcc3934a437a76cdc575f76c92dbdc23d348a38f96d5796996d5baf7871ec2487618aa4a7b306add994b4e560137fe7c277e0e10802ba611f25608aeadaafa90b03f8dbd4d9bf5f5611668fcadd7f486ae9e22d61b462f90ec93a5b6df150b0421de96a60cb08b835f75d49b1ce0796938705c4609d8823a26d42a5917858fb074eb19c8733ccbada17c3c8f859ebd2fbd3839dfc5ac47ed03b883ad2f9ee6d7bb12086ee36d0da6c59e4d3953997b5f2e40ee61ed85a01ebb2c983a0b581bd7b30fe82da4d7562fafe7a0e9462a0cfbeaf668bac31f91ba3abafe0e67cac51ddd49394cd50c746c1e25b6af9ed299ca7f1887c62793de5b29af675c72ed7f21d9a56a04bb449c6b6a7cd56bedc85b1e2e08d8739863413e99e5dd1c59cf4ea5a6f081d233d212df3e3d9d4d99fb23fc9689b47e49b1929085d7392952a80bfc8ab5fe97a3dde8e9873b5a35d16ab15c783cecdd1032fe927977ca552c5ff8b35e5335b5c28f889de4901b39e1b9577493ab9d95645db054499f0dc7f3154ef96d76aaef06353e94b465709c4325c697c8fc9f3987e968d45786732b72c15b6a8a557ee25ca9c7da850306ff8672f1f8f1cc73de15688b564c3f73dadaa1a243000e3cb6cde0f0d5fd5de64a6d0fa109e3983cbbeb80c61fa9c88f0962e037a134de42dd2050ce31ec0ea5fbab3869f31154a415865c4b422336d1cb73a561d22c92ca9a7797840e67500e5c0f1e4a2405b46d826aae1441db4b1f7bacef41de7267c0ba488dce4bd25846613b74b31a2787e3038a3024812eeea32f89a3b83bb55c5f5b90ea57cd14779f6d7abba8a5fba20e2e751d872ed4f3f0cbefd1d32f36acd34e19ebcbc76dae599f6355fdfedfd1a5ce19bdc46fb68ee41a6ecb3485da15850dccc33e9e3b2d9a99feb2716cfc626aae09d67ff04cf66787fab430678e3c010caa7d88c0ef427b78ca1ab44fe2287aa3e57cb73a60b3c3e9a6ac42817ca2de83ded7aedea1d154011498cab09e17702282c9c626badccc775917974be9b45beb3591fabb313b4ee872e49bf89e29ab87af9d204a5bd7694144b83dd369606448c4e007e4c54198203952faaf7587e22291eb2944536165f3f3888cb2cd3b491f823f1ff7f99df00ddbad411b4290be664b1826192f4bb9fe452032d44c00bfeedb5e0734398cde30acc9dfb0cdf2f2557bfa9f5f078a0cf710f31c545e008f65fdc6db282a40fdb63adde5752767354f917bd19564ffdcea161995fede956c36345c57847e9e2ee3aea7d395696fc2cf8789093030ef2c02686a93b28143b94fc397e01bc0ed20d843e843c7b800f1432ec3a3831a599a219fc16eeddfc010897132e25e8315e7631c2a372cbfe9f3e97255a027db18460df99b876bbdfba8cc8995d4cc978e0a74a16ae693c4829b13ca56866bf1bd120f50568933906261e63bb0a0f946d078b5ca9702ede6d71182f3ad7b27c7844790cbeb6c8345d916c57bfee32a7df4158aad256fd581d85401ad17efd1085fccba67278bebffacc83dc2201842fc302d8b5f548f17046f9a53a7447c51de9a851d6387985c9d062072cf6676e2efcd0d9fce8f53713b4ce115f3555c13bd306332ed8ab9567bcbcaad822a367341203a138f357ff5258782ff28e42dc92c5c9ecde0e7373b2f8f3cf3dfd47f4e637d2cda100d3be244accda74821aefa408bdbcd5e7f63b5c91f965faeff9c7a2ba0af101d8efceae1abc9d030a14a94bdf68ae3df26fe2ce03af8e4887a458f3487d94ffeac48811226b126206d061c81ff14652305f049368577192a85b6396843c9b500444aab5c016b9ed6324e488bf03fd4fc5325a3ef87858afb6fad0734aaf3df2f5a399e97339e14a4e724e47b3c69ea7a73b309d131cde95aa716bdfeed98a7e9bc900ebfaa3872679b6280cb5b403197c94b7f6a73b15da008a545eb99f9146565f4057d03f0e941f54230dcdfb1e84c5b18482494405b75053af7eadbb2a202d9655542dfe7f78a91302835582392fd3745da7c64863b7b0ee7efdbcf2b5f5339b8b4fbc49cdba3e56b9525da09ee7a332def150f6c30515c022d4e2a0636109348d7868e288f7ec70a5ed7d2d1c7999660d5ff6179fc48a2e64745e40b3dd2a82497b15448224f9ac06ea3d25d7dcbd513191ccb734ef8ca0c6b9e61d4726e0928994c17fb94ff2478f31461773cf36d362196d5eef87c9d32b169994a54fc64304671f99e4d771e7fbf01f5b68ccbd6fc9a77b5e8be7b94817d43c62cf9bc7039aae4ad00e126716b092b8047ca1800ed6c3785f06ea8b9eb89d5c725ec90d8e83502f9d8eba83b5d00be653b8076590be0b7bc7e6e79c51e7566bc9dc46210bf246c641b648e64be8fa04531caaf7f4ab44f81a927e7e96a169a84a896f438a9552e4c75cf75bf691eaf4367d8fd965bade4a1d4252f6579f07fa9fec5ac0d54ed57775d33327607afabc87490b2da66f0dafc9f577a182c4ad31df115bce4a6e8c0ffd63caf8d5c564e2b5c3961bd156839cff5cf2740fdebe96c720141649b7f3cb9bfb3322d3cf77de8146b4bf8bfa81009e668cc6aa9e96d272b055f893b8685c34a511529c997fd8a3a60292f39ab9693b932d6c5ab3c480c3530ea761e8e24315bdaf22b8d074425607d9a054f2605467691c59d0006d9f448e9109bf6d41b815840c9c6a93ee0435cd0a538d607732f791b00794450b05723d32fa7ce5151963c16386907631b4d45991357e54fc4a490fcfc86b42972c0fd3ca1b21fd4930993c46868dda91def682886b2415b2020bcd5163df1b7383c77ac1cedca6d6d51d0442b002ed15bdc1c3182ed8a282f30b48c59d7b67c370ac286bc06e0337786913c438d834f2a5aae0a9f993ef51ee8ef4fe5d9dd973bf9e26d435a78790eb36ce2b5004f369164f2170e634013358f559482ae96b25e44c244dd2a4b9c3cc6ec691a21adb74171b02e728644804c43b7d4ab3ca69855c799d5222bead70e2bf8dec7f642ee06614282d5449a583234e0e835775db79ea63024ca7297fbad3c31da53a5158d6df437e6e9cfbf2f660f01902738a1e6ac5022190719411cfc91528d5f414e3ca60da997c167bc0219a22ff750cb02c1ceebee7b65e75fd1aaeb430b1fdfd971631108080037ff57a57d3f48e2500c3b72bbe3936ca9725fe51b7f7feaa65ad206dff0d9cedceb6a5b92f648fa385d4686db00b400395ee597a3ef38ff6b4733ea8728703165ea58dd045fb25e552b726e811267a912cc038bebc227152f705b0035ae14281dc7243dd573b5176b55558d53d621d5501ade5e0d3ba319c85ddb50b0240bf3b1d1148e666f263c49352e910f66eb4ec620cbbd1c3a491ac731ea8f71ee0ab667f645b7b3892cfd0c06548af775dff8ce1e3df94c016dadbe126f353d09ba4756a515d57d6c16b1e5ad512561602bfc4138a12e63b6cf272e72dfcec8ae25c4b32ef42a5a5b03e27e95810f5fd85d9700de061d61fe51778fecc97503d4b5bd45cd7b9a01d52337a3fb98d01d4be397702be6ee917c11f21b24ce6281cf296a9a8f88e6a0549401e18c32680ac4ec6e5b3063b4199cd55de4154105038e5a927903dc2cbf3831507f6f070798f6816aed9c02ca206c3eda99cd6f436582338a1d4e9b9f0b7a4526c4390c09380a99042d1c51ee155aebd8cb579026e120abc2f6f5369f1b5ffd59bd7ab07bead4ba282e074b415e5569903b3a2dfcfd53e2e24204c1b4c9f7bca524cc6a2fe71bdc36c270e58821228c538994702b26df8c9bdd188683f068baaa080975a4c13181998933b897a794663f5734c47e84e6c2f18ff28f2c587033e42a8ebb9421813b79e13ac1d3130feb937fd58da961993963675e2a7ea9949a676d29a1014886e8ecd223ac2057f66352ec334b019523ae821cbc9c871e11d06e37cc8936a6aeafad0a1f24a0bfc5259afec21d7507e1331e7361cd8d7b5102935ba7c2545b593a1d0b2ed8b14d32523c4ebbc5550a2b41a103a2fe6a0c1942859e4ebb9d9a86e6f0abf207f795c677563a087f4247bc21343f669549fb10ce126b56b876eed4c3ac931e97efddeb3805ec2a8da3c820b1294761aae490f8af79e777c638916e738cfcbce0c654126ea14d06a3c07b8909131c27ef8fbe824b71b7f6d1b97b2d08837a62b8f56b5123547617782367f11b5419e625097a7f95ebd3df5517d55a1bc6a700314c5ca77e4e554e7041202e0fb4c48ac412844de02a9535f427a3bdda54109f2df92752f1dafcc0838914c62a2f2a9a98478f2f79af1cb4a14b9f28e1f8051537f270275a1f182d2954f645b1d222a1ea68438251e96eac56d578e31d64721d8eda644f179eb8c57595ad318902c5109f784348c21a08ff4bb16c6db3b2466c975de42f4e9d35566cd1806a972b5a57368965b1df3690c4b5b8f53b9adc63de3c9714d477320d72b0c67a99b1d46cbbaf5768c3433c211061eef7ad3ae24535daa252c2af14d718cac5843bec0d26180cbe8dc3c521480caa6be36b9a141a2cb09a4a954c583bd7c059d435272c6070a1fce50bc5597813630985c4174e72346f287126986b9dc36c424bf80777d204a713a0d3e4e68eb8c625e71e2e1be37c09559163ca536dc399c264d4989c3a79284d742c8edf756263099cd3d6312c6fcc52e0bcbaa45a082b32b694d802a40381bf3c00443bb5270dbad9d129987fae4140753bef678b159dc658525c0ad57e135d7add7fcdfc72b4f31cdcbc5d869ebcd4688590af891325d6fb904674f76690359462f7ff899e252099386d6988f5dbf88285a3352fc2f4e53232348002d966e18fd0e23c802bd5b5acd9c02910dc149779cf055cf1f756c39c28fb30fdeb3f227777e7032cfef3cfbc389089725cb9d3d6c691be16bd08a7d1ecdf4fdac935d6aecb1ede684ebacf5f2f7642f295df2d28f67e4afb56642f9a5459a217ff18b1718895f84efa12f86932ca134afd7bab80d9014a15df239117393c9e55f672b0fd16ca27ac4104e8452e06039c7fe412ea439729bf3a8af4396ec239cdc603b4de12b3dfc42cf04aa64cf8ff70675b7af77e03829bc743c70a84a846e7ece49720b658f9e4b5ebf89f0ab5321e6b5c908e742053a9c9342f3eb6e0fd50a4bff874e5c3a40f775265f0030f8401d4289389824660abff5b9bd784a90272f398a484f07d14a845887a0965e8d01b62ebcc19528ba8d2c4b91fd30d0171f789e397c98fbabae9ac255f43f49050f8c3a483aab59e93412daa13def8f9f6ef8cb646134933c10ab3bc02b52aca0b0aa37c9a4272eff939ce42fae4f139fad6fad01635f16fff7c9aca2264e3a654fa3f3747d0a657351a5e4e7ffbbb33e4c28fe0b3bfc348aff1b9546be2bfa75f9fd589cd9d21f00adee0a3c08b762113d90acb98f3e4d061428e9382fca33c4c047af984ab98668efa5f5a99d6a1f6bbdd38cdbfe5cd6ffbdb772acf8347ab521fc04f2fd2c47c08cf864f5065a7eacb86a37969849a51603ba382d7aeb753341ea438b6eee903c1e8fb7091deec166a8120bcff5ed6fe7e4a2f307e500abcad00978b5e086bf4a8a04746618934fac50d20bf60b0bdaed1726d61bd6e449dd14f8fa698a95235952f107957a6a6a2b293dfa8b6088bea19eca63b8154e44e81e019e2b6130ec4a529f561fb45c5ce2e2998576adb0795ae3f0c57e8ca7c12a28ea0264c9c88d1bc700930c8ec258e4a07b2c1424e60e9eb98c6334708aeecb5a30464c4ce2418d6fe8620f6318ea9ca744f76be530e6c5dff845e69f317cd54ebc5b490f010f49f231ca76db3e635bedac29e2c0f69631cd6678797fbc708e14074f2069928b9625049bdaa0d234033bf64ba7c7bd74c91a9bf8f56be33add719982e4407e8fe2acf028490d3d5769e78c0d053540f8cbfcab487b0d7506581eaa5a992a374e1550c5281075d25fd1c920a56e48aceeaadf28ba5b3edeea4db5103bc7aa06c9b20e2bf4d0863ab60a1a5944b8d9fd5ff253c4112b840d5ebba7cd27b2599eba283f3dcf5a10cec919777542f628c64810a58c60e6c5befb632d6a40ec5146f50eb6b1fea9499d13cd30a72e8c13fbf9e422bb96bdd1e8771ef55175a19a517732c1b6440317d61e4e2230d764954e6b36a25ce72304fd1dbeb8ecc8e33975881ec22c5d165c385276edfdc2b8946b7cbd111b7cc2118c3eff3cd780471a521a869831f35158819996aee9a54bd61129de5d996e73be6f34a85f1aad5958c2251d31119e46e0fcfa2a294e8bf42cdbd997706aa1cd96b5bc85eb819a9df44973159394329c482df735dccc56918160e3d94f98b44ff73994ae77d622587cee98788c250c09dac3f8b480135af407bc6acf7812eb76fd8faf99b192f2887a81cccd83568b7a80d5d419043064c9098f85fbef3b0465698f4b93ff574cb07cf5b6320b427ef597f2aca1008d7b898f77b930c9c73bac7cb13ac229020fe55b188d8d800f56a062e213085aa8e0716cc44512fe6cc58d9e537ba76c458c25ad3b6df1272515106fea0827f83d9d66938354219b87e4f45603e7e3dd9237dc5c61ddcd5eef0bfc1022fd18b2e63e8743327d89b49db7d843a896ab229b5f185daeab14425f71ac78b28cbcb3c2914b1ba48b8a240c6d4afa6a7370610c51a82d92a275a5f8808bd42c3871a576baaca2e128bebd843865d01d2feabe4ff98ccf6edf387630d26048d8ad6ea74939af1c7c4ef64ea2fdd909362c26edbce9960a053707dae3489853636e0fc21acfd335cdf180f27fb22a2098967f77e01951db456d54adb3da293af44c3be80dc27f5973dfac6b5df8e8fac42aab7423204897a86734f41c3b15663af29096ac9d4158001e2934dc08245ce2560ce161d8a363f543656f56751e386a24723c586823b8f3a49a34e638e81b365fc97b91ed3699453d3b5563044d7c0561a302d6d9ad5c202152729582e40365d3bd7e08434a5d68ebf27a1a67a3b8595a2e54c58564a398f221258159edd0a98aa741aab9b4d65e7b19531c6b10eb9c2d36bcad1c648874243f52aa463a90aba68b65083d0d938403f8c9e7a6a6d9f38d7c17fa571a9ca008a05f007c99b532f45907d5fdc63bf5eb5003c0cded3613a8cd929bca52f32abf0f97ef194d9224933ae0bfc431daa01df134cb9e21a0e3ce543dc2fb4906022afa650252b3b3636c5f92e8b4e8e376e324517010437297a7eb5c7d14d6620b0b36dba1d7012ea4c9e7f0228da70e4d5ea6a3e64caeab3958a7bbebb87180b2a59e44a0200adabdbb573d29b7669535253ed077be5d843f4668e062daa30513ee51d33514b0a66785e75b2a602d2378af670e4072a19a098cae1df75cce196d56a0fc47b2ee25f17a6206b7ecac75f339952d9d4ef2502cee12e48eed35f2ebd32e5bae83b179ee6598697d97ff39ff0e9c6b76796cfd69783c4e805a2f54fa45cc448fd1adefe24770cbf093905d4e1fc8f3b9a31a6c4e05ba3d2f4ac55d8a961c07f70bdfadb3dbeccaa8bf02874cf3d83ecff24b7958a2e5b5d6d32d56333199077c71ec14f8aaf645accd58ab4e4fc4ce6d0514bf6c045e4ed87446170099abe9a871deac011fc2a342c1cf3c55a136cfe34704d960e6250094d2b924f5716fb365f3c9ce0cf1cf7cf31a7014bb05060f43be0c4276a67d228b8dfc625f43522c719ed092b5078138aff1d5854e020b8651cc5ad3448963266791396a44bca83cda229588768773d15813322719010d47e4a6046a3c414d049e26193d7dad5b899611c6be1c31c6eb37c6825ef7167e47809a62275e35fef361199a2d0e53a4c54c112ed792e2f49c72bc3de4e949d72a9cd64cbcd9dc1cc4c55577c4b0697eaad7880fdb873d62b627ba0721c3cd0226770b0c858165a0f1509acd25dcee4c0fded908ce995b7c0a74f3854c84308639a91ffdcf393a38a6bfd09a7f827866aad5ac9aa9e72c1ba3e9273132de1c85b254b97e6034685e4f9658ba1ff280f16cae0d0964956f4c3b0b9947b8fd710e4e0781cdf1bd3471e6bdcb57ff9f47c9c17a6d16cb7978d385cdc0da1d1f7e80128103879c849cca808a1562cead40bc8321facd148ee7254f84fa594c3b15f10ae64d355ae373eeefeb8692c98b664401d27caf606316ea727736989e5423bc7efde6ee77bb15b08174738beb20436acd6e05354e98cccc6b8f088431b92c897635b3e3bf23c6726f11ca3229055798e8e95a0baa59adbd8ca8c91d27cb91120a8bd1483744b9148c03f4f7e23ad1d9e76b928c72b44d961b30d6aa862d6f6543eeeec7927ad38201d10794b17bac189cf5d8c3fa04ac64e4697c43054569bee21e3e8557663adad227b26e44949ee8b4a7e76404e2f0c123a56b71a5b6ffa1243248cf3b0e4ad5c7b390b2aedf4536edc19f4b1b8fb542482b646a39ebf9e83c09ca82e414469dd9227bc831cc443087f83a63fb3fb3f1f1d6d2c09c7debde6e82b46442be439112982447ae2586202e3795f0d3ca2f1975a978fcf37606f66a76f4b0c5be7df48d74e739367adc2d40ba9c55c5204481eead88a1a3e39599d2d23fd648409499bab58acdac42d13a4eefea0dc7c3ddae6b2f4741dd030f7ba3714ea289980d91658352fbf9191b9c29056e5a758536864ff2762ea5c86c3f322f6157f1f9fe7a6762e8a27e842140bc886fc151f7edf89fff5c62dd6a74da6531f4cccb64edb688a8bf99f214c07f8e49bb457019a1ca2ea8645d2b19532bfe48659653f020f456f55526f6846c6474d758981c90b35aa6830c6472e01beddc2f99de12f2513d16b2c7f4f2d41f79f28e15c41d811faaf83b545bf4bf6c060ce0dd0921d2b946864125c27d002f5d965eae7f3e70b33d5ea5f4166744a031d708e268f8c280fcf380698543fc41590a5928419c2efcce933f9443d35dcc1ef859e77e095ef1ae511f31e60be39a173198e808d5b71ed5a6057db080ea44f558651b6ad250a2349f470a2c871bbe1a3feb0784d217da787fb88c019a08b47fd3d3653c2ee1a6157e8aaaa46f1b39c4d33a7eb408d603aefcece0836979f3bb17b6df249eb22aa8380ef71b0db6e1c906ecd18b89fc86dc14211a05a66156ff4f94dd958fad16dc514633ad4f7bc2974919ceae2720f8ad3aa4b594df439327dd5471e4e9a778889bab2903ac26b5b2445cd3c4416203961e9dcc80fa4f43cd785aed5c9124c19501ec8bfb2f6ff4475e679be61ec11aae42a786cfaf0ae6a337f72b881dedf26f54534b2be2d622fb068d42bb6f30647eff1a3c0c7df16ea676cf2fceb4a9a6a84fe1a9c9021c0ad81a52b0b90452bbe3b630ebd04b8f80655b2a3b6dbdda05e0d46a6f752f58ca22e2e7b675209ff2855017648fc56da34d6ee320524b12bef5aecbf006fda61ccec55e3cd0f1c155b7a768cd9355aba41f1e67a832199c9a9b46e54ec30463c6a6ca6c1edcad54f1132799a8729dbc59ad2b92eca8de16d0a7e04d021464a229464e5c37ed1b207b9d40c57f42b024a79f2ed6f2859901c5277d915011672238c1ae96de66ed2b6d033176b35c47368f34dd5384ef00168557cc23100631199b0889e5602881d1d6d79891cb69f6758cc57e3a39982063fd4f097b80ff54f430c70a75a98199be81bb768bd92b1ab5a679cc092e8d186be0b947610c671d1daa2e3a01f1d380b45fb75f49e939e768c58c6c869684eb6bf41a437c59eaf9c621b8545cbe98079704bbb59ec2f50bd19d268641d81a6d8351086897d2f8645b48fed3378b3a46e7f5b3415583b60dc209c21dda0fbdc8232afc9096bb6d994b58dd62ef1afc60a9cfd00ba3495cbaf2cdbd47efbe0925e986e087827994f03783b3e28dfa396cc4697bfa7f41e89bd96aa5416b137bc22c45bd226abc87156c664e13626aa1e41b322110e59a79627d319099f18b46303e30d543d125e3981cd4d45b47eff8eae567932eacf2573a6bcd4e3f41077209ebd60c0d785de651b404f728c79724c6d3dd46642ce16f2af3cd5afc11accd53f10639d3045ceb8ceaf34444bd38e886414e010ca2a64c228d24304e065629d1980facb37050263203d87ed6d57ea70ebf41fe7512a5d7cbb9e223264957674e456a39190c1556105910a0922581df5b1d013a35144d8ccc70513e2f36e5b91e5a48456ce3b1c9c5187eaebcf66034a5f77a1056a07a5f026374c820eeb82ef1593d118f86ae24cc3173cedbb6e45fe39d1036459765c6334503775d7b0e220ef7d74f0d99bef06b4510ab9be4006c657516621df7104afb5fba76d23ff526360a3b1bda963660e05a3bce2f3e7055beaa8fd2d921451a1d69c3fa0117567e4367e4174f39fdccc7983d69e71723f2280b4178d80aa75be88abf18aaea2bfb0443460a80a01d192c1491fce70a77bd3c189823e6a2425fa765cf33cc3fb89465fd803ad647b3f4683c5052436d280457debc47ab6777feffd809a4d52314437359fe09aed13e5a50d12ad9e41127612cf872f0c3b70f82c129a5073a54fc1cac408f293d4f1ad342aa4ef507767dae06ffc5b57fd8ebce5c318050bcc1503421750aa6b49d2316c7e6fa83905d6c009dfd624b761eec02928ad8f9136e28ee073024eecb991edad53c8433a9884980a49c2766c9132caa7b33561e0591162572bc984afe9328d62ffc363cac77295438111c6a90fa5e4be50547df5bb67156c0313d24b1afa8ea9fd987bbd54e3b353915b3c55da474f849234b0a406869e765ee938b35920997a6b37b97f93f5ac76297142129b8649d18f39c82c6520828715882c41df83f67ca83183492933273d6a4a2a341c1d647449a52c2047ef41e50caf4985178144084f2465c59c590448d78811637f41093cbe49c67913ae66a58fc6f3651ae35523338e20e58805621f697bc99c611d4457e4e10013c46e78caedede068a8a1ae196b8f25bb2cb956896df564f33b8d3c447d24bb4524b89aa8b85b4329e7684825ba42e2574b6f3f8f54892743795262ddac840fe0d63c34d3b94818ebaef1efdcf9d15cfe44fe86d9004676a41d2bb370828ccabcf8cd881b418f2533a28fd3b8b49ca982f154c0e25d190d9b02e475db85786a9632c196ff86e7cecc4fd34ba6e5f2188885068902c6a9c34ee398fd95d73d58997fab5d7f7b40c16dbd1d0272c82a076963cf150d505560d4cbcd83b33c256308c4417a5db70e98a88d7fbd7a77576b9f2cf0e41da56ac240db77c9e59ed4fcdc17169f1b8d27009295af4243859d7346872b586cffb81fda787c2a61e0ed0dc392c1a6e404192ed6f22811f25e3b99e672ae343d0cb8816c3273747f8e2d55937f5dbc59d85a1c9087a472c5e7ffa60d899b93ead819c7933e5ba37a9818d079b555b837e5f6c19e8dd7431ecafdd1d3a5c3417235f99f99782bcbaf871a24740fc1da312bf21d5788ba7fa33cf3e02bfa72764fb65e609697dd2bb69dac19e0ac6b18989528100bde45a4d6db24c73213df7c06d198362f8b11f5e614db9ddc638092cf4ea6797f4d551a381afd10abe7892f2e250b37e805dbcdc93302efae449386d4921b15f408efa4c837d541beffa9f31ef2157a0fa433c5c6316351867d76e057084c4f30bab81cc90e9214586f3897a7943a2af1b22aa39c43cdafe71177c2bfd22ea0071db96ca4a62f7fe959092f64841a29c031e0554cb02a7a1956bcc45a4889026759864a6a86103464e40e89b0db164e2b57d5cbacd65586621f1f250039e451d1ba515f5b23787d6a4d798f31dd4020ec254831b5a0ebfec3596a7eed0370f39bf82911f9d0094516b898953b10f10d238f2a2175f9067cf9bde6dd5f8eb1075e39c0e01b57514097dcadc0bb3625affe5884762a0801d4da9fbf448ab298c4dda6007d63da879b5b248b3aeb83e25208c34b66b68421290d3be70511e32e775119071142c339bbe817c5d402e5f3e53a955ad3366968864fd48e5bd808f5562a123c1baa831cc8d02255bdc406e8cec88e031443bfebc79a315ada22a173774ba7ee5414d001c96e08d9f1f2b02cb76591e514c17e1e4cac7acfd18e75a9916b7918eb1a5b66fcb643bac0643dc3193cd0e15054e9679be0e16ea44c431ba4dc8ae14ab9526d573336f1756f65d0eac5443f2ec8188752ce951ddde798d19a2d3143adb4d445c65c23625c6d1d25564958f54b33f76c7fa62d1dd1f6d6dbe8559616e72bf612b9ca77f4fc1f86ad695f27433bd9e165865d016018b1500f332758726236532ca90a5869e0b53219b2a3465348dd01136f247d21eb801eb725baf79209ab58cb2738c87597c35771220ee446cd4c49841f653d7b17b0c3e68f87ce464aba77ba0b2324a74e01f78f45e36496be8b2afae38da82c48fe6fb83c7b765fa0dca36e2bd3a8bdbce8e13e5360033e30617f3b931f0095934b539ab9381e22fdaaa455ac3fa8fcc7887314e6c4fa1a4d6729c761586d75a6341273559d54e6220009f0000178a120ff796eeee98e063bffc3f3e519036077c8e063a78b939594fd5c2bea2060c9dbee0763e007abba8a288198a935d113a8e4fe78b75b1a0ee6d295221ce082780b8fb9c732d92e73157ffb7ee34283fd4231d1d2e08910715b0de94ab6c79f247aed50a51d4bc3ccb8f6010f6efcd070f1601ff5038ca979777cf6086d91833164aca7a6c19cf82b1dc8b08e5167f58f36c34bd8b05506f25bacc49ea1efe5de4548513793b3ac2c3caa495f95262ccd842359d781612c7db115a13162b2d9fc17d091189148144546aba969014dd975b0698b373a390a57f0fc352e43d1ee4e89f75e5e9d2dc99d57745215292b33cb5fe8ea41d44061f9d6021e40d41c8e581752e9d39532b37eed4e5a46546c17959d5682c298b8a7f83168f48eb0d0fe7c161c28bbd77e67684179f77745f80e03500f8044670216c685daa4d6acc59b2fa4c01cbc60ca9b3c521cb7a3dfd225682eb01b85fccc2fbac796d8bc651ba3e70f46084d759e84525baf07ef4f9e2fa903874777424cb8c7f4a8481357130ce7de247605648c4ea4cccaf965b3647fd9cbf001811e9959f49938e5e2e4317e3caa2fd317a3a8236fb2e0e80847892f21408201c8fe9f03d214211750a5cda8ee59bc34020c32e8607c9759c0272a5716de150537305a78474f19251da500f3bab071aade93888031f33da69da730577998d4e234285ce7ab9c32b6d1dd53b9931fce227cf26617b5395598c04d64198eb8b0b1cd1224f44e72a91be3634b266f341bb04399caca14556a0a803693822431d130270187b4e2f0a7005ed2a4d8c660d664c96a1ace8802e90d6b56d163231cb2fcd6b01bdd75a4eb7161ffa42d17407589371d4486f5078c6cebb93f8b2476ab6c9dfa03af02ee59389727695235a7618164b8a967db2212b2f142a5b85b129392d7208ce7715b57ed68d40751d32db4b0fefed64d0691c138d3013a99c853ed389754d026174ed40b67dc57b88e26de1f08a2b123665c80398778d37bc1518a97da35f2a610b3f6bb263e58d98ed29d8632502f594490f6a2754e412fc31b2f777c9a2eb8f20ac8fc85288378077a58cdcfc7f8e332dde9ddff4604f1f4181f2ceb91995a2cc3e7a6d21aab880287bebf3d41fdd126c7ae664be297541855d98df004cfffb7f73300968a722e4d226710257c773057712ade9de7e84563974b82d0c2955598817bc842e10edf3acbca6fedcb28376b4e463321e1de1d6d00917e75f34daaf674fe2679babc58e1917883d37ee2579d9fc00af798dbc69d54cc80cc9ccb33141b041f54171870791b65e6f843dab5819612ece3952931ff82d4e8b829a6aa83526e6f5896c8d9e015a14b0c26bafcdbb71e24345728d32b8bcc50a7c5205241094e48fd8f064a777a14443b788e7930cd601e999dc67c6503eac80f9c6c642433b44670aa9ba3ba3b2bc045c71c8d26f7af83a9030e2d65133be8d88314acbf6aecd346f62a9c4015827600b5d14d65befeb06cfd55ea9d241aa7ac6713922944628afd9c848b5e5c310691b80c5a520b8287585570a1388724de0b8d9afa899a93f0856a42335496a15ebce267bdcf06f42ded50f13202d3e70b1e9e2d7da5a5ce8324dde4c226050217e01577a054ab3c35f7c3a85fd4ea6778f53633df2126e27f683006e3f67c7d7d4ddf5d0a10520e8c3a6b46e2b397394da609345b3c37c04150404501140de03ba9021bfc36390260b508696d29692edd0984611281a2cfd021c2b9558964ddbf7b6205478117f15860627b13c2455e9fd542030d8491a57058d9a20af2ede4f1a4ca5d5119f05e158e22d5c5c8ad313bc3936a4051cac6589ae228d2b0bfce5ee20ae7d76ee2564b46fbd12a95705e2973b836149042bdae520773bdeb5d5ab743cf8f3536be5e8138a931ebe26ad2ad5dced4822571c1fd57a0dd3336ffe8c439c1a091c9e7de3bd8794a489f3588a3aed89ed6f8e11940ce6dfd9b0dc568f44daf3bfffc4e86efe8abd1c1894c64715df756fb7151b0604e9d4876c24199cc9fda25aeabd1aafa039136bd867accb7d275408fc85b114dbd82a20d2978a038a43f87072fb551b462624b2e8f9614c6480e3f11a42e7974af7a6ccc50d393c3ae15e24a277ae1b7da10f5ca91b2575dca51db9586fa5b3c7970cd118a5c97c6765654f6ed96607e58ae02a4d5fc2ed0c65b6480706442be91a0b0a0af9f4c64c9e3cf3612bc906051f3a0addc2001b07db1207a6d4a0858075d7facfe895a837a38672197120dad968fbdea130fa0c0221418a14b4cba937f79d723dd67d71beae6b395a0992c428b09e8045501be5a750a7c2da4814348c838e3dddeef620c65d911178ee036f1c471d70f6a2ed06f3ab8af87d60d17569f7880ef5a179bc2a789ccf5ce06f9eb32924759eabda01b04c8870e9f50126a69d118d7ac035c6599d15b2ad8e78e0403a9926dfa8b7f041b7b32d457b4e902212a50d1c4111a20509ca6464a202a140d610c7735d576b3011f513b1bf1f8da0e39ae43bf3090126932ba676f27c8c7d9ae2fec8e0694dc06bedf49c3ff0721f963897cca255e5e6051879f4f7841b4a06765a9dc030d038156669a4ddd032ff825deec1c6b22a4903a53b01e5651d4d815c09f675fc128fcbd6bbf7b97910897b02da7ad2f8d215cf52262b3aa898fb0aec431b0bff91a1ab941a01ef13c2cbfed72d5041b83e18f07ad9a9f7b44df82dd0b484ac170a9f385eecbc01bead0cee4561c0740dc6cca8b8c6e52b6671026fc14646389e8b551ded275bd3ef4730a48b37a35acecb6222b3d0c893e1cd137333a5fbc2d5545cf7a30d376c03e2207240fb4d87edfc84ff296bc08654f8d23d4ae172b643a5af893dcce86559a09fbf189c454b875a31fd5cdd30212c8ffe10d2aa6951e2999b64ab061d0c29bbf8da1e74723fe8a0a964b7853756da38756a9000ba70a7b31ee93381b67afb34594c5f0fc54464f878291739a2b9d2f95443348e96fef2de33d1c272283fbfe53d7593cff0a420ffb14ef73a6baafe4f9886a13d284e389a51edd615a20cf82b6130c83d6ce25b5f874a116e641a13765fcbef34c6329f2ce87c0e8847d109e649028a19c6a707e459e97e716000be9ae1cb97c1e7aabb2468fcbb7615ae7d6937fb52dc0e1ad2e5fc4bffb5d953f1b9e1467af033f5914ac416592e77938257002fb05e73e89210034faab9dc6e483254c95447efb0971a4267d980e50c200c8aaff550c8c0f843672ed822741446b2f1b1e1850b7077595c522ff0984b0b2e9aa763bb67810656f62e0d1c63018f5e316601bb6b7355d7fb30546dea08667828c930aab2c12bc10f6855612f3253ff7db6f99233ea8391f7f3ed362f3c3ed22da2825fc7422fcdfd05422252e3c5f6e33483e0625c95226b4307aeaf5cf096336e378b8026312f961812d6d58fac2b00a8aa74010bf35d877b82eb64e4fa62878ec488c0797bf6eb4d95ba1a0f1781b4251f4262037fba69e0c0a925f9c649fff2f4cd2960386f9ba5c9f0dbcfbe341f3cbad81ef2f3e7e94ec223e3f139a03d622dab5ab2fec9297b9463cd26dce1399a34c3cc460e400bf23e210e3b1457a1e9f6481840c277268440f7af5c78d4e80271320c66585492b0a3b4f84fb47c08714cbe4acc2bb023b24c0dc7145583ab7bdf477643f11a5291e72b16ea0d6cb0fdb1f9019ae7777a43b629f5633e8a8b9ee917179834951649e2194ea019d988618637d7491367399aa7b67e4048f93ab1ca19672bb2c7e2eda6e33a07c268806e640563bfc9bb36e5b29f929f303d12ba388ea0b4bb273547b6623306b6982e4748abed986aaf7d77f24a737eba730aa4fa9fe884cb11ff432d2f4b80a048ef331d2746908baed4f917cf6101fb6ff5094748700cd5d55a982fafbdd3f19b4d980ee992aeb31088a34f9aaf50de5138cf31c5040081832e5e2a26bea82e46bfc691fb510e3e92dda446e9318dcaac1400f4ab011c2f3cc74749f3754a41b2224fe2447b7e092e7b5656203035693fefee1c5a65cabded9d57351110f07c534425d770cce0561cd5dd8a9de00f2b81c85e2a22680697f177cee195af1477fb9db77a10ef54931f2db1fb1e603a9dc2f4f4e98c2711f7cfbb4c8986dc09fdbfb3b231e7ff9a1add3e93e0ed6479f327b553bd16651b33b5494e1c34906c21293b432cef6bd8c7a2dfcffe93afa416e9cffbb2d511db178c531ee3a72a67896d6e71f5eabedb9007075b794ac9bdfb18a59ecdf60d2ed95152bc2de26cf179d1ba0cfe1f3119157e2527a1cdc0c01a6778bc85ef2bc294d53029dd76c59bd1195ed07bb3a9356a6b9d7b5c04b3b2cb522069c4ea6c02f6a06424a8a36e2dad1b29524a5b59bdec38b11ee0f34b7385e1634670c34f61d305f60cf69d3afdf3f0b044c7a69d8d33efe4937d1ebc6752cc3a83f6f540de6d934c984e0ea528d065dffd7b3a2d29f84158af81c63d9a9608d1217debe0d4a2cb82266fa773810d1f15e7bc83b47122081fe7113eac56891687630d24ca777f2f76b6c3a2b67532a2f4b308acc2041f22b7fc6669d36b7cc42f84e73a48bb254b18278c3da52886c50218f3257f0321401391d504a4664d0263020bbfe502729a72410f76f59e75f5ffeaed0a2e1c935955372fcd406d7aef3ba3485076001015b6ad180b7868afb21013e206ee51c7cc18a69e52cf131d3091eae392c7bf8e57878a8bf24ce2a2b804e8496837a739bd3eaff64604ddeb3bf4930e1b4577652b6074663fdca5393ceaa36916d56e09f4f2c0c1400ef8fe01df3d55408a5664215a98890f89fa2f593d062fc68ede18c0d081bc053625514d633498af1acbdbfddbb8faee2a3409775a4be8bde2dbcb53d4729758c8786694a2849de85ab7b4276d23cd56086071bab073f33aae360c15d39a7ca8159486ac0e4f2b8a19aec1f02dfe34a1992fe01c85ec34bb46f4414fde9f932648ef6756fcb7ec8e1ce82010e03fd6d5968a253109dd5777ea0f8b915404ed9365e8f0f95137f85eb1b9cc9108780f6d5846803088d430aa76de71d16d2e4f296f61f20c32e051b1f10c86552b1c8f96a1a1ab9f3dce95d53c132e82a41244a64f03d22ac445af449ee9030e8a899ab4f2c352c0c6359492d0e73772f3b6c35127f41751c436b5c7c1ef81c545522098de6db74e0c492522d0f4c0bf31e6931720d4f536f3d6ace00ecb6947fd13eb6fc8e6e4806bfef8aed43316bf9424fa905d17d208795e3a8c5ba6f8319d416c69b1f2ab50e5c26af90053879ff71b07862cb286170063f49b53d99e4a5ec0d2db7f03a5f0dcf70bc84b9feb5edb17d3b31faa8e29929a93e376df606e39a85dea6b45536e582dce31f3a7ad66ab8767cd2da9aa8766cdc82c56bab1bea53ce6045e783b5cde86f21801aae7c67cf0c233a707362e12d6d10b4d76f5ec37583e18d6d3bf217cbee6c5ee66c27398bdb8fa019eb48fb3455b0cb44790a76bf84a0fe61c0e4dc678b3418b24a77dd57f4ece518f7c68c99dfe57d3585eb7eb01f8ff3415b95db0323e70b1c7bd1bd1ae82de60d5df1dc3b2c10b7d4a1ec14a88ad62fb70232f653e71e9e7c20306cd6c709a39b74eea524e19bdbc9b9a4c061d8bff1b52d8682aea2002473a4d19f8d92df2e19a265e474d9e0052119a5a18f57e4d9c452d50fef55a5a9b5aa31e8262f2266fcccdd353c8884d8488f5340627a18c1cb33881977c055df1d0e43129c9fa4d2b33d32e6d73f3d78ee2fea9788dcb453ca5f7d62dc719bb7ca07addea093375849ed4883de4efa4f8ce1dd2a30b7b99e5ceb174a6a78366b9328673eab72c537c96e7f77888c230483616316562b63378b1f2bce68daa6068dd2085103bdffc716ce598336d0dc792ad0f9b07d1f87eb9e2cf772fb4b962726bac4447530b33ff5fb085e4e08ac87aa14b15181407f408d7df87c899723c1247e8f342833ab7f271f608ca994a428810e2126ab094937063fad9bb391f7c410feb85d89afefed02c60782658728b269ba2fc15d6b8a5e52bb5ec111621efff0ce783135c2edc5693dfb127053d847e4bb13c8acf68647d6d9bcdd7ddbac1bae5516649aaf526e2c105463faf20937584113d6c0161d986c853a39cc148ec9d727678ac6e09b6023c7b021e055594e22c14fcda6c14ce018901d5b27556cc3340b0806e1d8a8bb88f278169bba0581d81f852c0084655581a485daffc2bece4e48eca844b637416989698bc4a912c1bc57891af931c6b654632833fb2ee89feb4aa052d81b2fe495c85204545a93b2561e9193f95225410ac2e157bd324f6b6d1eb155a18ff397971e9ff8847d9865e1b52e1a1a72d6f862be0764c2f60de356f74ba6af4511566ba762fdf757a0a5f831bdc106dac2f8f675e16bd9ded23fe96920da3c5c8827c35c19387cd19253c38fd8b6c9adb83c48dd4246ed96ad2fcf9091e7f0ad1ff591986ede1d1e584389349f68422a77bf8ab18700e62699ad3265c7bd928b4caee458ce7abb34dde8df49a21809d2c8540ceac119657e74ad3c520d4a8f5f7777c92715769b876e3bf2a86af0b919d69b64785bcfbadab195c569cc75f8fc2a5f6faa5de7d5eb208889d055b0b3ac743a9997dd01f0ab0099b25496670d3d0f2bdbb2d1e76abfcc776b1838846b1d46bf88f70d928a0cc367287ca5ddb2a73a3f17912554307589c61bb23ef76169148abeb7d1d528dc938b73c4255468cedc30fca0ae532960c43ee98ef82f9c131520debc6ddbfcff90a085925b586c921b8a01ceb00b5cfe195409b19dc01c2b8809a0ec9ab224ce1709da7a11665fdfc3ee779cd10f1d531c52a2708d484f802eb8df28dc28ff4abf80db7b4aefefce336471c1dcf06118feb0eec1576441acaedc3b93380433211c2a687037ad1aa483ef99c4a6fedf7586881d84d1e95d037c8ca9f8b0dc273e95a74a7b96e81cfc05498faac84aea1cad1ecb19ae73942b949b95edacd611e2d78f82776c3a9fb57468c1143b97b08a7344dbcd0782fc02021a50f53deacc74de7d627c9ebdb4b2f8c75c8e9bc047df0ff060af89ed435cfc29bae6e494e514d3c058f52bd6025dcc8040297135c66db2a444495760f7966ac231eb8343f9a92da9b882da18217df4e93a8fa5ddd401fc724f77621555f62121534fd97d3289ccd9ebab52168ea9bc24582bb96b64cfc43d4a2a507599c4e463b093b2f1123d714872d2bceb436d7842a6bd23a57903003c61f0b2c2faab3876007cab86cb120e96ac245ccb3a1691463e501f849f4a9a46ff0938abe11361c55332cb67ee9af7b3a01984ab98fea01d8ad37fdabeffbb3e9ea2967e3308f58ee19b6b13adcea0e3c8390e8d8b88a14fdaba7d76b7d02ffcec86f470a5098a965ad0513327514405195b7a18104046bc9ffcd2a6f70356888af20b90c32396adcbeb0bc369c7a51cc85856429362b4b2f9f1eec1527f421fa03a95dc807fe303f28cbd524964b44a188063de3198c3418f7d53c68b51ff09c3b0b923b4ea368e4da96c558bb131cfb40d1863bd24abce0e37f7deb68345304709f21da5200cffface08585694e3c2f602a0aa15ccc7a605dde1d09a88556cc463d2b0f4b5f5123749fb0273bca064a98b317c7d5ecf056e90503cb317827a2d1dbdde1632b6c37a5a84c32f953f7d199045fb13843a3f9e581aa439e23d0371fa0bb56e5efbe73de1c09a6354c4a2c751d0b43dcf69cd54a03a2afcc2d6da0ebea0c6fe7b29fe280c16007291b9c313776f801c754f226900fed823611f9f82e3ae73251f6ce85d4bd5951815f502616b4f2cc0f6d4558b95a4d0f9063e9ef16d6cb5a5bdc254fc69efd0b75c0e29b949bff27507e1f591bd2ab2593cf1383a910d2da55cc892b71616adb3b64a9609b85e916bd3fd25626a3aeceab042ffd6689786007bd173fd0709d4f6c3f30cfa69fb5116c059d5a4677c8c3d1317f2b436b65ad43b664af7fe3664954129f03973d341c55ac8c00ac848860de8b42ff59bd3e305837d26c175015938452eacd6c148263c149a72d01e1001995ab2a32613ab350af56cb8c057eeda1e5e1c0a07aea550968eef21e6dd9a24db132e986a775c03f8cd9257ef71c14252b839f31bdfdab30b01459e0e2af84120b75d9463120d1e265b78d65f0bfec7a00490f6e704182d41914381db2798651899272539e1c5ec5147a2035a02d15e2d69eb4f267e532f248cdf96a01fcd35c49309cde6c3041c7e877827216a9c6598b6c1d8bcb07b011f8e8befc582410f1f97b4c9c59f97f186a185fa7594b757a052b5c386d06c053ffeb235c97856f9893c986910164310b04f950c984fdeb2a9827a08c8969cb3a98d3dee61e252f03b6139915d88700d9c11e8c7f808bbca8f512dff81823f517301b38577aef7a84523fc3c0cb39f63c474ac79acdbf0aad7d2c5067f88b2cb68bff5e3d2747920e23078812419ab42125cb9e223b717f3eb4c40b6a145e1edb151dede901c776092dd2ed0420c45eb4ee532b825cadcf9aa8790433b1e75a44a3736c5a541ee2e5d52ca35e3287b864bc3d6491e56ad383d365eddb2a32e565f75c9202061af0a61fb8f8bf3d5ee7167bb9216da8ef01fd3016ca07fa807eec93f1cfc114e63cb97896fa1eddd49bb94810d74919734ec7e581298dc029b7903c6c53e98ff94b77d7b80070a108212d290d5d990a9c51be60fb875ab36f95a1ac5ba2152637d83abb795cde132a5ae70aa3a1395fe98f86dd37a9fc719d5bc90ee60e0a62764794a59ac304d80ec019781df56dacd1ab35401e68c53cb6b8ef1fa86721e00610d934370f61c6be81fe3a38ee964a5e747f7e5cb5a75320aa4e3b70256df6cf7d37d219c37d1c178295f96ad6379b0e0279d6de24a85bacdfba5cd2e49ee6e66c4bdb30edf5a0041dc3df58f85d9f51a7eeb4aacadd5f3e4c90970507ae4303fa6155205540735078dc81e9d36efc09b955a4a78c5d8d7022aa5ba61280b4f915d94e729ba4108a056c44ab780d66e735eefb23649e04233ee90f2bddc0a9fd5084e2ab4b7e0a1faf1bb4dbb8818a47b58538661cc21a06c73d66dd364c14429b654919e02b9b0527972243b29e7fd7aea0b23a2fa10087bb22adee87dc2b5fddaddeed0ac289189be8635add8c02200c94b519b0740951e362fba4ff3306716b958114c2e6303b28532b7e28971422d1049e448290f72bdd9f208d35ebfafdc01caa140bd3af4c6a940816de32d05e1cb54825f22f906ae2af6f818579e47f1291f8f0ffaa34b7f6b03156c2da7c385496b0277373e6e0db8a18939dcb353e0e1665ae733db3cdaf40a4f63c007aa5cbbc65d1ddd925726df3c33bc4de5cb2b48cd6e04060ee500b2e230b3fe6702693206dcca24de2fd81119ecc9e9b6182dde1f585b7cf06f482678e650591c194ece396d8710ed6a9424629f99170d953f3e3068b8599bfc073de836e9153749215a2e480b7b718045f8dbdeb9152104a251013ec5d7fea586b7da7aa30660c9d85e1eb312e1f12f838eaf36d64170b6e062cc1d56e62fb3c233baa93601b4025ab6c0273635c1e945e4c6d64b109cd4d26233cad229f2d8f9b2820797396f1d195f0250bf9287c6f376dd494849c95cacd52adb9c3cc2647eff8e5edcd6a1ad86005fd06b331d6871bfb63a88823462a590d53f293cfc7ff0598834efa4aa3db9ac547b76bb138e3742acbd3af7674a26cef7cd99a625a253600e1d45670a4389b3cc489ea529ee40b43750cf70d0bd62227d35c291b4e213d3d0af7f108e8ddfda24f4db72b7af1595cd475fa801386b5884d68e5d136880c8bd8fe08511b037088e3dedaf0b595661cc828fcececf0d87e4db37f7b17099cd35b6a2fde46cbc47cb0c85c9fa0167902a9bb50fdaef10a86392269e30e40adcf1c80ca317bd9c55a9856f6408ceb711a95ffb8dc4b89c02e9a83bd25f6117339375ea4be92ce9aa048e4e4f7d1a2a157349eafb40b0940286b0dd92f2171035510b5cfbbe43abc067aa053f85c973e8ffbfd7bce3ac27a21ab62ad847db60fdc9c3e19dd4809ccb76fb5e3bfa50f6f75a70f5f7d250beeb4e39f2b7d32881b0a144b5809a3f2f54fc8f9be2ded8ca306e37304b295ec65ebaaaedd7c0132bcd4142a6836ffe590c7bc09dc05b27862ce8904c92f6ab99bbd2337cb1f455da2163c1663b4b9741ee2e042c186f48ceea2b35eb5ff9e037c820e0b2630e287f5d7273287a5bdfed3b2af901b6e25180e0a3a0a05cec05db3f8b04d524103d0d943b03ecffd5b55062d31628da41f4ae0f99276264b94e952d2117255709a88e4cc16b7307484c530c693b16dc51622185adf15a985f8731acc837547bc9ac98e43d4600cf59ab548b7197654ad75be674d412cd7e8ba4ca083e00116e424dbb6217f06660a381582864de6ced1fe7ec863bb9498ad5bfecbffc68a288d0dc6e9c7102433ca2320c967a987365085326587c1c89e037dbda2c53b919253e94fc1d6d6e44f9f677154a0f565bc769c8c5f464fbbf1435378d14ced1249694e5b20e51c93f257955cf5a61aa45b6db548b54c8edd32ed6d1bb7d4d89f17e0bc1bc81211c5d66addbe46e88aa17eca41e8dfe0e319357ae9c3db9b8186c04baa7fe8fdbd9975b2b2581232288587ed81c700f7c61e2817b8af8a8c52b470ae1e9bb7bd69a7b3e853798d411af9b714f34248c9e4449e2d61be84a618ca8ff52b4a5ee753bb135f473eac2c10d18c7491a46cfbec0fcfcef63837a6e10f07cf1684c955ab34a33307b84e28ca6e71f31501ec38d450bdda39d9d51e1bec4bd5031f2043b6788ca13a26560cc3ebcab396491c128cc836c91648701676b961f4ef1f043d24ad1d09cd26e42d947edee46389dde2691b7e38460c077ffd340773673bba63e836cba8df131b9fee9406c55f35035759f1e2584acb7c912eed34a0278f803dda81a5ab8403603483b8a402260c0720a69d5437a144a7913df4e509be509cb903ee19537c3b70f4f425c5fe162081498bcf52ff16edd2822f05487fbf5967bcbd7399324d1fbbe7ebdd108666b7e29289b25dddb850108b6815774d4abbc0980c11bc35b5e301a0f1c461b61a3bedf5fe01e002ab2bae4690a7bd95d10e5cadd1f25c7bab27bcc5a8d788a82e9cfff050b7969ebdf928aeeb6563918e5c9081b9fe0e2e2919683de48b73ad15e9fbf1f9fb6aaf85dc3c584f52450701072fbc76e7a714daf86e10b9a30f4f436025835a5b79d17117da2512ae51dd85941e5b19db3be70f20a7b29a6264de1305a6d717d174b32324636c1ac3cb241bce1a060741b6bc6cfe7d0f53cbd1b72c61e7724f7081ec9e90f517a0b512aa3d6a82a0eaa6a87bd2f6d4f6d98b5be45d1ac5b84070c896f08f503444de511aa30b6e5f9e50b376160209face601d52530472e4656d82a300e8db5f9dccb71ee28d7474dbf329c2afcc4a4f53d8105345789c7992f57532b8f113d9cf6f0d0ddd401bf0b9a3115eeb37495b11cc512913f93d98443494f142b2d87cabe751522587cdc72ca5dad345ec28ea7ebe186028a8216527412410b74ce092a166550eb00101dc5ef08360f9add3566e699bc4008d56cee3ab4a7c8e65e5faeb02a6aaf9e541e6bcc3bbe39c41b79ee7dea4597fba5d23ed6ff6051cce998d8dbcc8a4c8bf1efdad208f95568fdbf0ad664bf3968a40748bdec8c79690944393bf3f3717a7d0378b82067dfcbcff9054cf01ccc84859080bda2dc69213dd401015b0b28b01160976942f99bd3418e72821e23bdc21afacdab9a1c257da3f0356fda15381bfcb007866369f9177f629d0af07feb2928493905b2b49e6043415891248c190228f2e039e40826367d568e4f27088620d971be0fc6453be821184f1d97b0ad2f9ba7de7fbefe861a8d0094be77a18d0694fb34b06bfce84341d0e4de2a9a74ef3901ebe430bcc7be4867e79b53b8f4832540ee3ee8b74965313062cabf22934f65a452a2e169a4dd85d0509f4f0bbfb4f85a9b9459c5e2c2676e80b601f7e6e1263610f0f210d1d96edf0a1edda5484d6fe4528bf26a934b1949fcbae49818c29d5da3a0ff9fb75a4770386fb474e6de760e5f24854bbd578ee03f022550cd842406ebabf17512b0400e4dbaec015243d487e33ecda8657f7e851512145ab9927c786b138d6d3cacb8f7f97308fe34859897663f5a60b270cfb69dab943f5e6701e43f6336ae165e96dde4fbea0a562a668b9c161b60a34b9ed75ca4013015be3234b545de724b22187c9eed362b923656a37457200e6bbec522a08e997eed2d48748d35746e494208ea391e335416d54cae66e6bf9b45f6ccc18e84ddcbf43e821726747f81214eeb039e6781cbf7f03dd1668853ad00e4d374b80db7bc47e82d965f41ae5a33ea1c30ea52a17467c2bdf4781109dbd839d8b62c9ed3844d87fcdb11f1a531f035f8c756685b22624b0dd92581036aee9b6b75f6b21422122019acf08d8dcfa3a38d9286e4be83ab4d2e732f509038a25a275c3cc345dde4107212e1ea62e008df9903806451d793de8bf45dccb66210a6d0d6cc449947fd355d57154b74bb03bf123ee3e0ef793357008809ebb9b8974b79a7855f79f9463d60e97cd34a716b79586889d619741ad5649b40cdb0e8c47bcdda153e8a17534a685bc73b77e946151b40121304e7cbb57868339428f958c6ad2e532d217d76941d3e2587f3fa04faab29c1ffab87a85a2d63703815c4b09fc4d00c29e166efced85e8fdfdcad3ed54054450dc7750a06fbf7142368cc9b2ab414dcf6082b4f11d201fa8f9970a12c3b78cfe888a856bcb5b373a25c34e5610188e55b48409504a7ad9d6b2c8b6be9eebf0dd898d75293885ed8d24e9cb8c4d3bee0f34af803f128b09ffe7b3b22b1a3039d0cad584cab8ba5e664dcd7bebe360da7e50455f1a0a8561ebb3e9bad3b9e44dad65437f3248ff820891689ffa21f4b4de953edd8ad326863caf903d73abef3d341ab329217bfe55f23dc43e29979994a83f0034b0d59ccebe8199d5d67f2dc36699610a101b356efc0eed02ce709106649f32af27390302b5519c114d24360726cacc7f7e80403576780f116c33a451edee29487d911f7ae88c0d63b7bfea871208330a55911409b45923d5d0935a2774b36042fed8fa60dc7d5b61803efc9bc09cc414150f93c135671743d837e14fc095e2e14b65b9327075b4703b3174a1c4c71882881f2794feb4c9adf70184ff1b240f66ebebefcf79aad592c9628a6239b4e654ed2baaf2faf4051244441572c237fa36c9c81b3c17deccb6109a3434200ab6654e5c04d7cc7c0f2a156f4fd3e078af217f0c10cef155b88342294983bc2fd1acfe6e4615e8644a5eca3c2eeb3b058b4f037f0a033754434d2d94ae7d60c47ae6885be5464ab073601587dc412cb4c8944314c3e83eb7d0339bbf55e76929f19d84ac3cb444b7477af8f577a68e2a30b5ddbff3c9b56cb5375606b295a92dabadbfde25bd32f160b18ecf60c055422bb61ef9516d306ed6d4e9ad4af28a4179d941c5ba66895211c15866b13d737f30b7b87cc9366800e8dfa12c4eda599e206d7977fd0c7882aed881d8bf7c8ddfb83566209f8428cc6a2064c09746fef61dbc1757deff9bb865e8bced0181b43504535af686567af8586a4b99a76cdb60bbcd878a11ecf5c29c8516d3c63e969247d024d9f796e256d6ca7e50c825ed41867fb9a9c8a4c9ce543de59157981108e0ae421e4c912b084de1facc3d205b0dcc463e0c467446f6569cfbb18c0ec689d1aca075b50a092b289f4f33757cf1716ff177e4447abbfc5b97e15d52c54f2da9d21f21cc5d76d0f7d7ee263284d3317fa3a036f7f837a3876bb41739dc0488d489e4e90c8db19419ca4d96ba8a9bfd7526f1b4156a35f4b81da3afacba5766dd6619654f20c266ce7a5b4c89df18ff5681370486873527a2466ff781909fbea88d1dbba7e689167b88b4f1daee2876bcfac85189d3afa42a68db07ec132498d2f6cd8f6894838f0708e4d0d2e025449a7a34f05dd9af97fa4e74d18b5b26929c1e2d6e159b95bd3893d426970f7ebd0e25bccc5f3c8d0ad94b3622b70f8e223388e02a3b69a3d53ee1f4dacba63a6580cce4bd3edeea588c70223fdde263dcd804f48baa62d1e5f1038aba6a6553e3112141f978f2e1fc38b70692f4f7a2dc7e71b4ad11558958d732ec6d3bd5f4bbb10433f6a50583abdf4d4d0acfa104212a0f0d3fc4cb63e9cca9fdd2c91f0f644b6bf438e7236a83b7699ff5d0f98b9a8c66c708e2fdb2a4d4a2223027c4d333c506b41e97ee6b2b9c7946bb33d9c102d20a36263c669f6b08ef8cc4a22331d753ae133211ee64891a6991efd784cd56b4c33a3153867a8d21414537b7436ff0cf4c4f2ea5789c27f456c22cd554832f0af099b66da8e6ba130c78ef8d8bdb9e25b2d4e8ee21a6afec40709fa640e4c1e860bd0257af3f725b85aef6825386ff65fa857b6132308ec573dd4af18a0f29f705e45a960ae171b360306ac7d613b1188af9ab3339544a1f5a85c62f4a499b97a16151fed5d16fcc149a0c03eadf0a118e8804ccd91614d617664ea4f0f078c89ca6f31679eaecc7016b8197068c85da8c55ed2f1da3f984549cddd0e15e15c98f38db2c54baa3bf2a58d6a8598609e7b7bf62841a5b8a64c26d0dbe428f9657ed55f8b4f5160f3700fd962843273dea30848347fef092ae7cc861cf4ededefada1df3ae488181ade8ff9c366ccd8564a11f3a33eaa62182ba8eba5cb22365e5c1ac70e7681a2bf595a062ff489900d8703a7d41e02848666a47b97d875549370ca1b353da835c59d6a7252b107475d860ee550fee2d795d75e82114f9bf37217c3af9d2f39038af627c857cfa15b3d0143c99e33f0a4d6ad95ca2c81f167a59fe8faffa9ababfcedf4583f1e6c88c78809a665a48f1b8e4d942d96e402997c063e13c68c81ce25cea781d593c78a062efbebc3c07cd2c1d21bd0946cf8f85ad414ed50521aad6c9fcb1d1604667dd47ab55a49abfe2a7790b294f63c04b2c94bb14eed942d91896904fb989e6235590759aa044a38cd7c37c118c267ab90957b48c18ef0f6716e716fb333839a1e00cf50d38ae0b48ac003f2825c5df896ea3083e60b85244945c01c15403111bb42d0c0261d05b6e57df1e765dbd613fff2e487b3c1051187383dff1f8f2837bf28665f0a3c37979072988da5cc95cdc99e141d801bb2ec8d796eaf732dc8cc6bb8734d8d73ee65e27611d3cb7cc324f5bb34bacd441ca05826e53ec125d481566091dbb2a34bcefc157c41405b051421dc87a466f760789deb2d69ad07706c49219e30555aefdeb8d72968af8bfa64afb9a6ef5ba58ea883ec7e64587fb37f32e42d2c1925f942013437ea764f5139654d840771eecff7daeac74dedae7e4983a12692f3b7274e1ba9d1dddeef74d301b5473706134e833c515a109e84d2eb4b307fc1488e5ae52d6c3b63e3e32b1e3525903093409e50c8fe9ecba8e80971b013a2131a59142c3132b10aa3a056b52d3890663a2513fe3948db29f1bd6aa7a8be67b79b2d1d53991d5a9669cac29d4ec6a4c076ed6f5871154131641a5ae2283dc73ae243dc5b4d6e3812f3a35e01ffe81cb83dc530d5931251d3f0c40eb9042a64a0f5fb18886bcf5655adb3425daf1528fc8819593bf069a2baf5620b22734e1e4f723e7f1cfc52d9168f4fba069ccf2bd8d471f9845bb1346751a8a855f473565da9fd585723b74b3cca8753529c52b8a1e1ab4b24dd048d673b43671072d59a2ba11286c84df37ae17c1bf2caa9b59650ab9163b0602ff91612856aa77421972325a4919aa180cf3e9b49f5878aafe691fad2ea8c95c7b5beaa896e9bb3009b562d9b83cbe72d126478f1cd0a1bb2b4f32ae692b9f185370110cf6f3ccb4084fc3cbf8e20a6e582bcd5e2499c67aabdf6f64cd45646d2d9d98f844307cb1037fab6d14e3ad0e83d41c59dabdb414ff3005fd9fdb28662e99b32d76cccecc166126e6d024d507e63f4d2708fa5aa7875e1b911228ea48613956ac03bb7a074713e6ac93b7c1e8329b7355e90362411bde4de30456e65446a671e37bab8e8d9a4e98108f6aa62c12930f0b4a28e99c0cf5cb60de30b96feed9b60f56b16d5d044987bbc5a8d4d2adf0c77f3cc15102bf38756eda6131bb3e26c86c82d0d0ba43d61c75ae293a4e246ed4eaafcb13e5a0c32c61128d06affb40de8991c2def04fda6e0e856f4d415b9b58fe94c14455691ecd7cec394510aa4507c9d63358ebebbb9c6c77a063c09df83034a3a8d8fdcd871df7f96a43d24acf453cd6e7e3222e6b61e3ec09f346a1719f0097be655d8e07e301dedf2bf7721c562b63affe3e633a6ab2d0245403f21d9778122bdf3495509d6ba2fd7f915a7357cb133676608e896ec34341f2e8f7598a1b68bc60027b9100f9243f11db7b33cd2c4f4cc0118163800b230833068263727b7bb906457229c3c03ce78f3924bac4a5c1882f9aa6a5f51fba75f31bad19bc5bb161e9387ad1454bc5813d24c2a40a3c7125d69debb55bcddeb55fa1b1849d14dbeb168e1f84e7880292667ffa6c8c610750bed71203d4229c0f1c2c27817b591956983de16e3ae229623872aa77904a53858b4bb16c223cabcc1e48b77a2728fd9308ce2082ec40d6365bf9a431c2831dac02f31792f09d52f18ba8613d599e73134d79dbfa03ba5485539e8604f94e41384139ffab7b858cab37e6aa5764bfba0eba8199a5a48f659dc2a50f175ada7b43e6010af759dc429a0011e513efbf0ee87c8e249b6bacf627c94bfff032f7f0da0c5106057a1781a10a58c6e1d70788a703c514781adde81693c3d4ee13b03767306ebfdf7f9fa517ff7952ac824173f91e6662aae7e082179f478dcda3f3c49db4b6889e954fca25f0720a27ba319790f9dfdb4b67603c36b533dd0c375b887b779d94f20dd703748c65141428824f9ea165a7093aad1616212961900c1b9359bf72c3887de56721d99dec210c64301469b73b2ec1b4e2b41cd6473e09e83f16a0613630fcee5bb55321cc300a832885312563197f78ecc4a68bb3fa05cc526e4984e6e56e67c46f15989c1c3286c9fbcedccef0d954c53f0083333e11abba3870e9b10a07ec04afca03e65a78b8bfbdb9d2a4dce35ff1ab54faf264630cb86841b81a0d03da10d8242fa21179bac241e5b72159c373f4601c25d24008beae1cdc1f98c86cf30bb76283a99c2c1e3c8b1069d9f33440ae05cf4dd7208cf47c4365b3c1c9ec8b835d5798ac2b5b46d7892832208f359e68d1f9a3a10c88fc818959ad4ea0b3c5b315b6337c7b78f88ad59e017b89f087aa272592cbc0d717d35498420852b4342b2a5dc2fac85624aa219bab22a003629dae0c79505e721bd570f0050856000452b886a7c383e77f178d6cfdabf2c5942e54181d6a6dca598e2b8ba9ed807d275ced1411441a5451473e4019ebc690fe06f49361316de96fd96f6ee76c5cf9129b1d67745d0928faefd16faeff541b928d2095da25e3b9205843c3c1257ddc53a1c059fa622ce3cd900a8136b0b7461e512663a21ba50530f740db5bcc077c478dff6bcc94f1d5acd915d3ecf93ad20720e459d82c002b9c721e60ac84d9d5cbd5c26a3439642bc5a2796cf5d33d27a36bbf3196b266480ebef58a77088045ae02f67e13ec82fcc9d41a978f9d46dac6f11e095e7647b8e8808a986af311beb34c1e0af4411f53e8023c64dcb56772d66305cb6c1648ed5a1aa4d2c7c49803262ed898b16d5cca69a5a59f1cdb902c06cf22eed4a10997cb49220f00f2c99c9b0ff22e09a16bc509d747b7b735c79f927f709bd3ce93822e43395e64e3a552dc1c537febb092cf3141d1fbae031e55aaf9c3e747c440c6a0abf33fc5944006d9f61fae77bff021d8d3a21843f0b0bf42faf7cab33818ef6a2245cf3c159372c0244587f43a0f7c36889c23c673734e47565e8f625043cbed3a6d552b96ff4fd1fb4216a40a49aba511424e19fcf4f1cf6c0eca4128b27d0ba50f19dd6ad85cfed3ecbd2487774b113f4f4b8c2af24f85ecbd35132ffae6b72d5d0c2f88891f19be443f6c6c753f14bc502335e59ee4fe87fb15600bba30a42570a2729179b29b580d68ee0d92386646663ba6fb962e5ab37f47dfea5be75fe2b00a85d8f0b670e87ca2c47b32029d894dc5e9241c68b05a373a57d462b4c4ff1ce7dfa3f4b2bec50613dd7319f7bd6173ce15ea1c1446df0a1db21fb6657a11c2c894c1e9f12c052639d861469cc7c460b646f42a1df1ad492b0aef0ba3793a0f7302618db33533df84ca62f3aa37b2c6a50994661caa1b4e6fa3171779d6712ae5ee8693d7d3230fb411746970131d2e3b32ed43fc582cd0bc12c1ce42f7a134b664aca4c0c0ad539dc77d86f8efc89dbf3800f28a138c0fb27b4c943f8eee887f1c9ef2683876b465ba67ccd8c09b2c83ccf05ee8f46c519db5642d7a98a2b7591d905ae9898bd4ba03cea1889061a76020cb548849f6451ac39b0bc2713b90dba1b61845b84f8708b401ba9c9578300662600fdcee64f7388f4c7066b62806a884e786a9d922d872cf3989dab94aabd0a196dbe19076fd7ffe7e5f390c39ec239120f9316bff598d6e367d129ade20baa314139e8a15d73727d71ff18aba8f5b9053e7b3aa586fa9cee0497ac83567a8f69fb73963ee5defdf984663c89dca9ff73c637d452f1fb7e27cf763be072460409d77954fe053ae688871d71bb18fa9a6228010a5af482c913d434f129ffc08a51a85ae39f61d5f723f1a9bdc96a849402c6fb367dd7bbde4855e863e698dd00e866f0635ba88716ef1d0f7ded859123f6451305427509ed2df75e13893f3d60a6ca69042054b695f9465e8164f91e0c6b6d6d2fadf239f2f9da44a5202c68421791912747b97e454a0a4cb03e1d88ce7b737f77135c371dde4087856b1ba94bd8050ee454071301647947ecf0a280e8d9ccfbba1778ca13bfe0b30c62616fc83d1d1d1fb406518c5f5acd54f484e1d8b52f080e4dc27173b145efdee7a3e561a063bdbe9be49452ff9e6281abe68d62cee829a1774bb5c0d4470545c20a0bd009f774588bc4158c589669e53b8620c9a912973e066ab204a1c4a679e3c9b4aeb75147806d84fe3073db74027a7659503f797eed8fae8ecfe42be1453b4e55c1f7bcbc4e9513b35377d71c25cce9e8321c766321c56ed333e1b4ecf50b7e127962fb359a66a18114e62c6d908a0624179bb7aecb4750b4e5d3e62c730f9a961c2392414e0777faa1750581af2f2b8f7847b200531fdd3e733bb910a7620704de7be29bcffed7edcead85baf9b2d823b99d10a5855682d0dcde355bea5b121e34a7ea0154042d8945104f774245fc613f8a644bf9eda6de5534dfee2dc45334dbd6d7dd47cf41b81f4731fe4ba910cbeb51bb1c21f6c57d4e5aa2a6afef9db2214910fe7abebda8ab7f73a5b3e068c8adea87d3559019a003528d2710618bf0bf63c83943b40ab17e6604f681740c1e98f4a910f7b698abbfdf95cc98caa0d2fad8537369bc6dd3a692cdf579a83d0c129410b1bc3e742fc974d96722190c7e257367c6de65cfd3fdcadd01928a58b225a71b603dde91440bf5598db099c9cf19c7bcbf39522aab6134247470f099a6629c5e473e9b41d69ef7966a0a7d0b8e926c47e4e5bd74c4f3a0ffc71b5c3f77faa2d172120a8215c8caeb7fb4a02631cf2245ddda081c6f95eb6ebbcc9c0ae82c48e7c215dd690df1e8b000544e614a7b032d177e64f9b598b344be3ad996b14ac2f1e1aa83d332720cec8251305122004c60062ea5099d05c356476e926ef124e5306a75292a30784f02ad53814651a02271865ac7a4ea10ff872f37e552551abd835b9ed60bc73815528b1e989ded25a57f0ad0c4227b7495d6d63effb45ea306bc0ba8d1577be76a528da0c6fd80febaa76600cb099187540e8ce977688f005caaf04e128a41c2e72359674e349f6d33682f809f9f1d5e141a31524932412d0f0534b7ccd52b9a699a1833be79beca42f22497774e19eafe7199f6767d45dd813316937ff3b416098f4cb26b1d45335797f223879fa129b20e292de0869d75ba2804f4903c4cd62e38ff310b545fc7724a2a4cc5832561984703ba15385482abd867c29f2be9c2786b38fc8c5727c31fc4430d335594708e32d0529510f43b6c3e38eaa6dd0ade2d67e22ab7adb993bb35f199b32e0e34f78ed2f9f511cb761c4027602474add3689444d352d2c56d4f2ee6937f74c9dc1fb8769d27782837fdc56c2f4cc3ac425f746de832672d594f15e45b0c40566622175fb3b7da114d7e37814ddb1c9061ced4d03f87b7928920ffa9b23538916d83dd9a2cabdc6919b1e65f9b640e3ea28c7386909b29bb9db9a1cb7030732b291464e6dbff9ecfdc1974c9eeb2be536c85ff5d7b6129eddf29f6bf947bcfb057e6a1433303f52317a028d301f3ee7de8d8075a93a7cec3a52c96514c9f1b3ca66d2b18b70f0802308032d69cfe24aaa19a563135c072d226a6775dbdbcada363dce1acd883237dd0d637bc61494bc7ee78d2bdca73777e407a7f1a421e904337eff5ea15068cc47fc9eb640165b9821d223ec930fc7777297cdd6a5b962eb296635592114b5ea8d83865f4b1d7caa51783b32736d38c6347a8849d80445bdc705e39b4a262d64d85b9c31a977cc5ce1ebbaa7c17260052fd50adcd0e9446aa466b6f73a322b7e69ed48b118f88457bb9972c0f6e417e0eb653d5be011b0b1793d31b17c92c1a0f654b4cdaab9af4a7089476f5c3ebd44a202b4444413e0bb62232b10cc9151b7ac6cf4f31bc3827d897112a39421a7c6947843868a29177bdb1418220a906ceb42bb9ccf23ea71e6eed04f4efc580e4c03ad8303fbaeefc90f9288c936ebf5b74c43c1e01fa8df2101fc4a707a123162554d2a07c054c79bd48117c5b92db9c0738f5e5be5f11a1e6b112fd131eaa3f91826f2ab159025685faa3686ddbb7521fe02690d8ea2c170528db98ed124249986213860aa0fba81075dda2cb50588c289cc09b44d1387e2d440604a0ed45d2daa5b4c7235462c240b1cc19cd42383265c0f0d28a3e8a09daa8e5134a3747b7ebc2b4e6f9b4cc89591414781270ff910d02f8fdb17dc0d0fe97b5014eef62f6019ad9e0b99cdd994a9af3b3e71459df2d4ef16ca41560cf9f7606623bc013d3ec5c1cfe4d6d02689b0f2b965f5ea42e92f854f16b42e979399a0fe1b990736967d54225acc2813abab1798cc1ed4df9ea31d35bc96943802f5a3a87c32a36e88b773e5a18260b72c7cadaa162135136d5b910b7862d4b845a1cc4b26cf96e4756b7fac2ae6bba84a590708ac0274d90350ed3cfee64592e3e55c771c45d9f3502e65320b9b02b9c8ad2c83d809615df3925e403b369a5dcc542c6a19284003c808c9633e16aa8374fdf5eca9600e00e8977c55cb5361afb1c735a7ff8e7baa4a9bd424e4c624ee729d5996ae20d290262c903440ec116118fd06bcfd8c920a3835628c4180971d92c47953b12b6ec04956c713b1b521d7491bf170f66ecdf6edb539d27fd13487590193ce1de293e9305bd8fd6f8693ea0c8984e9cf3a9500ce34123f4dcae418609cfa537ad3b55fff415bb2dd56fd4a605bad94796e6ebefa57553e68e6b09f26b7fd8ca24a4e1ab8d1634241e62d447b8cc164ccfb4b1c0207e8907d3b6b7e015664fb9906a8437ddd36bef8bff8b85cfeb41613d72ba92c0e9c136679caa28cf85f6b7986d98c0bea0557ba9e829a6b262c7e403c6633e16cbf9c8b43fc050dac19f16ec49bdd4ca13e93b3d1128b1111c015be6cf75405d46d090d56f6fc3c54f5bae9e84b239f08825a6a875327e9226ca8d77abf7376b11214c6b32ca946ac79debbbe9dac49e2e194561b141232fe3fd990fb7f8be901823a2c97225851299c8d302ec6c49044bc4485041bf432eeea59c3522aad1c652d4adf024ac58fbe19ebf128744b51320ce409b7cdd6e5c59f5ab78b579037d8f8f851064005bea3aa4dd046bf7e83d574a08ff5c480ced4e1e1fe12c6784a7b9583c2e6584c39427496e77982280ac87eab8bfb27362eddb29e3d80cc72e9715261970cdd19a1053fbb860e0e6cfa95a9b30e51dcca37d67c8491218ab9b4972f15db9a2f30f22f15c9f32510342e325d88cf2e85d1639b29c171c224b08c0d21fe4cd6b66efa1d986f3de581eeeb95214472c7d2fc5a43b898d4d4fbb8a1ceb8f9efd42a32b97faf714458cdba80529ac0fa02d3fdc59f453e591b4058d249563be767a53874e149bf076117ee9cb4a7edb37bf2ffa4bcfbdc1a6841ed9d71d02a215912e5642fa4a68bb97bd458d20ff879b9e87c15c6a62fe3f929b12590433e61bff9dfaff24ca9797bc44fa4266ecc9f412658d61ee24a76c1ca3a8a7961c82ff57f9d175f06eadf20fd7a3f73628ff733af9d2cf6f42898962586d18d6c27383903b18ea88f72425a8f3ed13906273548d2572def1ed2e6e9f0017bc1778232a89d54ba10f5767b11e2ae4c10a3a5ff9de2b4ed4a9973cdeac0293dff264abbdad8a1059d3369502c5ab839137e39b573902db0c1d215b264bab814a71481ad857b960d2a089c0f7a764f772410fcddcc3895f25a779f77ac23e99154064fcdcfad99c8a345a333d8a7ca671d127049402edddefc880fa859b4cd56e45a2604199472796a1fd90f3ed4b758a580e5cab3fbbd8360094b3e0042242eaaa07948823b505200f9c637030a0572a538efd4358ead21c9f86e2cdef5f4b3aeef506d65abdf2fafd0feeeca5b2ef288ea251755a471450ee25c088c83eee8ba0c6a3e4dec738d3345d3209378c53d66f8affb887e8fc0ba0bc011f41942890582e4571b74870032b7d0f28c33f6ace1f9790f04ce8204a1c0b51322258539d4c73591f2678ce01d065200352a03b660dfe41e99e64d0ce1b57bcdc21ed2cdbff17594bbaa5a1513df5f23cdef846482b9c3845cba60f7615af8f04c4ae6a1ef7776cb6acbd6bd1053d82b630e0bc13a48a3952a623f1858ba95d8ca03ea92080e0923d8dd41d183e458d6c150df6af66d40069e14c0058eb901a859daaafd954ef4f689115b2d8910b544e24df42ef45fa5a5d7f1e4f1892e12b90ba609aaa40bce9a77fb63d40d57dd9739d4e02435077a725b33663654f0b45feeab47330c6c626253533dd3366a495b1dd2224e51e857a0cee353a22345adef089b6ee4ca528283c6a13ccab9822d25c7ec42766d54a14ac32f4a51260919d51294fa8397f862e1b16eca1293d8b23266b0af349cf179061385cc7c6bac6d16143fdccc29f5734d067a486d33f3c4f092df520c0fd569c808f5a64894f70d9bd7e35a431571f5f5d454513d7a7554fa7ec9bbdaf3d6205ee1a7fa3a439051fd5635e65645ee0018b88e0087c13275c0d6659597053030569b7b6020e1610b05acad30e33f1f34f9d56b144502e5e559ce763814c74d34f46766802bbac7ce28f66de80cfcdb295ebd3b7506bdb385b25b7d1e21bcad7f48a4011fe278c04b6b0b529fec1d60affb81b4fbd02f7f4ae0903f42b78ec165ee6d1fefffdb6b5448b79a18c91480e6075198a2a165db59505bfd760c7a2dfd6ab28014aefd83ade584748449c882669f5fd83f06294f72294b0f47d38a39f46cf3f2b53dbf756ef3a8d5f33366744bd061a788d81e4c7e1f248ce96abbbe54062c4d71344a0248b9c7907b9d4450dcb149c2ca1d2386ea4e794921a20a8b5eee17f0d7bed8c1bfdd0224a13a72be0d1f7ac89d56215e8c40246e41346c62ee6176dd1896851a07d6129fd241a2adc3aa13f8f5fd2bd30db7121001680225460fecc70639fe1170ef381aa0cdb024d4af44319ce0dca8b6251740cc2adf7d3c68a15139213b8d517429e2d7c353f93036d72c3456925806f04103abffe361cb3eb1fccc89cfcd309cf415482aa2ee2c8933507a0565f0b6ed0272a926e5caaa606e81c5199f496e902a15a698c0119512b4bc6f050b8c5608761dc032a4b98c36276b8419249f09f7dfcb7f59a5b1f35adf15726b36cb9d9fd8230bc72bfe408752f1fac4f4c1d954f523897be88cbda80ac4b2ff5dccf38831cf5c21323fc3a954a0b248230393c867dd35a7e00e1003b0a64ea23e66f3627b293d2f4145010890e039341f1f16825ad8d9c6c9979be7b0f6968b03b0c9aeae1531c7be636fa0fe5a75536f463036fcf3b82ea39b0222c7b3896e8b328287865d61a1e1c51f16e3aef3ff17279bcec6f47cbff577452377e640c566c4fd16c45dd49841ecec69d9361d7c1e3240dc310a86e05c39feabe5134510a8828c15343e8cda5d11d85487306fc11a9703bc06522c454c801e9fc18e630448d018a46813ff16c9783cee3992c61c5d5119c5af245d335645647647a50ca76026dae307d9c307ad747b468b1f0b3e59d32f0dbf9e9b20c90209a1778a28b09f795fc43d7566686bec9b6a4e552f32a966ebeb42b3ef35b1a6c5c5d0c7385461579955219422583c4af6e1b47f755c382fa792d0d8030cf5eee863cb2716921255d1427bf95299ceac721fd2b4831d48a81587c896246e7bd206a983d6a695f54979e25efba4115fcba59f0b25c686d2998bc705e8be1e1bf1723e66a76e9d272140e56cea0bfdb449c9625d1524a4be545d48bc7e9ab64fe54914da214aac357cf49299248527ea9d4c645f17d9baae56f87d69131ff0f73d3c52ea2e970e765867e4d37c9df4521128ec13d2349cf0d33ad40ae9f8010ef58e10419d7f51b11d0cbec341f7869261946eda1965ebf4002f4ecabe537d1eda67cd21957fcae50459e6e992a6da43efcbfa376865b534da486262fe18ccb3179fbd0397bf21031e010577b89ac390744ea78f919e24071cbfd4530d217fca5cf3ad534609c215eab3f96114ebf373b44c03aa74274f46d4757a9931b197198795da2eb01ac6f3eef03a86089e7ee94cc918d54f5988cf580f3931f0aa7a5ab460a842231502e16729b564b50b0f2398a14096215a885db0d1d191db6b80456ad0f931eddaad9a6835b891c608b2de180f4afd1fab813c38f46f82f118c52032b934f30049e2dcb82676a12e11c1cad1840e04d51f118349f5b8443d82671d9c1316bff8b5c7a66f3fdd36196394a66b2cd97837b550b7d7704406258a98305241603feb22a0f36dbcb757fdb2da095b84f675542f94a77d77b75ba80afcdd69072aa2cc3e68168bc60a7df95a2bd02df303039f57f31225119e52ac06f5b5fa4dd845741117b81b2e81a8b6545bea325812a9f7586843035bc906cd6e35c4466a1824737101453a3b4f02a908e95e4d524802abc1362bb42157e32fd18643bc870b051a18a94f1ce7a8f368ec68aa89e313713ae18d295a962dec59cdb7aaaf29ff23f870b0ff00150d7d24ce4fe0dcf2ba6fbd5ee60894a955424f291f626ac3cdb07c2e63f6b186751ba5d7176cc011e5eb4d7b2238b649db7b68bf24f8a4af9b64bae09d6b13e423b6f8b438235c3d030bbd3b5cdf61f60b892f976a5e26eaafcf7ed15646797b3a17689fcfe420112f93a32d7aa1593da68f8cc4e97be4ce4fd1f6483472d673cc3ba364fdf7f1f968093946225c4ac72bec702fb5315cb65f5d79912c2e9e3f261a1456bbed7ef8b70abadd95340671376716610b16811a2819650a6b46e3a9707a93b7431844ab001fadfb02c96b171c19cc74b2b634f6d4f092a5145c781783980261b8cda708fb8a5b7bdad322bf628ac8b2a2e2a0e826e7151cfdc3f25f4232f27eaa9d8c1eaf693a08049f33b53ffb2f9d9c3b8342e6e00b52e4fe4e9e669cb9be087665fda16e6e4acc184ca3ea0d76552a1a9027b09c1938935a3fc6168663f27343f539a9dbf766db915187e56516fd3325ec28485a022877c0fd9cfe51500b8beeb6939e38230d5398eb481fca684ad835b8b7434999bcb71acecfb29d9c4a120f19d29694a8a903adb9c5071eca4b665419fe6cc0b2e202e09f9644383730e800f116964006a983c292d94e8b86bbc210b738ee4993c337f3cbdd490cf519c17d204876e7ac95798bd10f33d81983dd4ea46270db6add059408879a5ba7136df9f49f003a86077fd309e11b1b3a7b5654de7cc3daa26886a8887a987f1ed69d08e12be22dcb4c12de002f4021a39809a57b74f6da2bb758058a38f175140ccb0948e918ea0a92a8b5af94f6abcc0ef0d7bbe1f198da855374b72b4d3f7e4916ef2e3c6c8b6f78c98313bbe5a91f5772af3db899558ed10d6a73629b6a73076c84fafe0f6c53fecf44097948fe93ab82efa9adc2c471956e127587e2aaaff3120f6c81f6ab60e124aa034c4ab535095e0be0dc1e83818d7fac5c67644fe56df39b71fe0f5ac87711bc77b5203a33ccdc4800334559140b9963dd6b03e1a2d4235792322934dd6aa6e2684ecb619a127585aa5ea220fd6057a9de72a04245e2ca55035b61caa2ab685356107f4835db7798838f4ca092844f22a9d0059e481b130cb053ef1da99e1948de9423e80ff9061f91ea447edadd4d3866f0d697b8bb6ba95019429fda19973a331b35117d76187f0202c026c34e6d6f66b0b7cfd717af2000352c77b51eae6b2d9eb2f0a553ab68c909b7dd42c53d5b7f219c74dfc0132266c60e1c2310738e1427f0a19506ce424a8e02640cef2a98cd85f860858bf1e2fa5c222d6b2c0d296f85d6e44961388180baff702c20cc7e9869b01470e2a7731778619b8321de00f4055fd91be611d4032e41cacbb2146bc27759886a25369fa23fafb6f289d4fab275e7288df4756ae7aa815f6f64225fa9bc816151b4ca55bf261a8545147f1972e2fbe164008f67ae1d5043a6c6a9d18888e6a6301bfc5852ff10707f25d2e0b64b68f26fe1bb9a5d829e8b2e68f60afc77cb8d7a8b8eac03433cbdb7a845b3017f7ca05a3d50f7d36ba483fc9ab7a265039581d1ae4760d6bddd02928e650882002c28bbdd98b7c51574f023a43aba1d05c8cae2b2e2d8cf7bad72b4516f92bdb658baebe720f66b212bfa28b2f256b3f1563d5e893ed0102427a9a9ce67324a0db91375bc44e5f58c5e2994a04f1b32e750e8ebc84eef0f8c33f10411a38d38018351b2b177869d894c103bf3d24a3c80d1fccb41ba845b5fc3e36b4ed1b1d5f8bfdc430b8db914001334ffcea2f45c7fe702d5902a92a807cff2aa79f0953d9c313ba2e69f8c6be013cb3fc0eef6287ae0d04a51263121b175de90eeaf752b0cb821dfcb9df7cddb999d9040facef95355d06287d179ab5700e2d21802fc341fe633d4f8dfc16c291210865d72ae9eb7b03ad39e67ebbe480f3d531817ef15ced8422c5d86e32ffdedaa0ba026b299612631fe928aa1fa22c94759440faac70ca39569e6c8492f8af80ae93170dcb0f66cbe9dbf0b6410b3db9acf4f95f5cb5395dd41e1a2d82881124012cf7bcb04db722338900f80ed72e16bf8a57a2f4383bce9b6773d854937102fbb5cd08b87feae7e9e469aaa6b952fdbbfd9c5a9e3f8cfebafb4fd8a73164819fd90c67c370376c17a8e4c8bd40163e8c90f341e9705e85378ce8df558065052a9ca67bfd253f9a98babdf704fa0dcda5635c6ebce8bbc3166150a138d41f834e261eb3d30a4646aff039677a766af78e76c792e327fcb78d7735c26f25218ad2f674f5f566b40db45c7b7bc42bf885f9e88fe413a5000999800c0893f838fb39f9e94fef69e502887a0ceec95aa77fb0c011ac6cc06bc1de12c553f4502a87bced5c2faf2c382d21dafb55a5a78829b01715cf0a954c8d8260b6bfb6e49033a6e8163212ac430bd1000d03ceddf641e7c99e56ea5c427a5b5e995a808f6030d234bc52bd46090b8d3ebf3e9acbba2eae60c1107a84ce7ab5717f42edc7ab3a4bfb244439ce454b15dd6bec7689f548768deb73d0467a0577bd9b564895e7bccff8a411a750f6ea44f00bb0c1545a31b61b95aaa456cdbe9a4cd642d7abf468b9c6f61268f52da4d936cd8e9338dacf926f806d94f38f719905d08a2d8d88e478e735f578059cdfc59d9f77fae71e43bff9d5e509a5dfd364dacc8d0a6f55360966474d698992a12f0ddc0df612fa0fb9d1c371e96267a688381e65a6e51edf9d2b5f38208452934b9b1fa943fed5a161d0fcc8f654268d29c97b200cba04f3f9a555e54644cc9f61abae9e5c4d837e9cd303dfcbe5e008cbc21bdba3f68a5f24ddae0e4f7ed3585d4673d96356d801db4ecbf1628c77cd9501a36e02955816ed27195444a4e672a8f920a832081b77f83faef210eb1eab3006085493b1b7b2b5de6de30cbb2bc2306f9c650be642987ce3828692d6c360736576e7124c270ecfd695d036b6f36e3fad2ba80ad8fa774ba58b766cc3bdecffac27f2a477b878d8966f326a1444488e8b70d1956e1f1cd5494216e0ba5ef1d0d373c7397d827212d62ce9a277db120b4c1a73c902e0c9407ff0a24917203537266653d994e352dd1cf6055cd45ca502ed736f165ad46f60e6113492397dfdb2da3b1e8bf2699595cba6133a743d6ae2bff1eaf1fb68dafe7b81e0024a8e8881e0e259e60f274553407608960e4fc6c939ed72ac9403b76e68d8a7df6abf063c7741befb782b7d810f6a1c09cc7816ecb5083a1757526a3eac0abc4d0776a12959af4172cc37fffa8f51aa61829f17cd9a9a9ac5cea3a5b6566ecc1d8ac0469fb0a43e488d96103e123ad5d58e2fdcba3319072b25392c24059cd18220dbb11acbf14ce34d3dd431fd162177a96619f2c2aaa5c434599c8ee8c88472de4cb703f13df2f4fe72bfb86a3cdbe58c7450360024a89a9dbc31d1071c9c274e1674e5a148f40cc8f3e45e56053fb9ae8ba64488126c5ef9e90221e530868bb42b5f81f643fdd82a71251623da46a0c6fa1641a68d7ab6d556cf13e8be685ffc1ef59df56b47e1a59bf784182037ea7a8b98abc5ab093d9f5d2c9724a9ea290f53c6f0d824906db1ee2d021b62568965e2e18c00d8813f1d77ceaddc7defe278df56a91bbee3a3a2ce7d97939870f6c885555b0b0216fdaacbfbad68fe200c8f3c4acbce25a54f4ad099a888a3c815115b00f4204c3ee894f7cd08b7957c01ca3d489e4eba0b92a90d540e586e9590132765d53d1bd75b79b670480d7bd9e25a25f221608ef0c8b00fe9091efe88c049ad3e5dd4c155aba4a94d8cbf4d3cc6f9593043d09eb659b9de28f00abbe25a87c242e0c8b016351ea9f01c06f8587fc3cbabd6bc99b674171509b4a33e29e3612b08fae6d4a29aa0c3c65c8ea1f0dc9ee547f00a2449309fe0c948c1b3002dda2df8c215aeb5996e45356824ae9e9e9e07ef02838139164172c359684490085797ed159cffd5f481a05a7faae2db16856532eda60cb2318262230b4c172b24bfb1f573bce2f5608185b2a9cbba2a4be26140491c1950d34abf7948477a647a7a1393b443fab5d7fe2ff43dc8af78fb34ac16e668d7d459ff3a1ad4d6b0193e7c14ae10da9690fa09e60002ee0b6d77238d059a727f9c66346bf8e69070d465693e4d1494e5b0a023f572ebd5e2af16891624025448afb42c630bb9fa0ddc55524571ade4d4437e646cd5a084b68e170a22d246b412f20df4e79ab8c0396389ab54b1265d4999a138c0315a6d4f64a87e17c84a9f7a482047b6b1b917198e330e24fec159eea97be15cfabf16fa3b842939d4df7ac0be1b82bfdf79be112b61a245151757b3b2b3af1bd9c327cba3d038e2fc8ef915c69455f73751b910526a47299d8156c346c784bc988841b53d04ea846bbe7d0dbf849bf76a67f2b815093181a37490025e793ffe6ff95f00238069fe06df90e9d0491f2e9e50e06b62588185b9ccb414ebfd8d33c5089daa345f95f71ee69c04d1c8337bf6969859dc4b674de40eb64d4824eb049d7eed3ce1a4abd673c3505e029a3e8ce39d67380046d78c1d2b84ce048546558f2b30214d7e3e6a83941e658b8bd797a56ad91828aadb1ac69d433380cbd276aa7aa21c43aff706bcc854d02ddf99116d2fb2ec98c66b8c516ba9e5654a36d52b71db80f4c937d3488b5a2896bd8ce0b0cd02685e3c099ef95c4125b06e46317f524f4cd7b806882f3df0f971423013abc3608b22b951a2c7a8ec35830c632b5861cbb2663a1c1272cd5f816366dc2db0073f9c64cd302d9649130f03dd4483d80022658070786ab8bb7175e65f089cc0dd521fb3419e2cd0fdefb1a0d2275c09c2395709aab422dd2f42831b5f1f609f0cc3bcded9364a3fdaf348968eea0ccb6f289035acd9cd60b75fc111a2802291e4d4903391f2408b97a44195f945778e4340571c4539ddf907601d3ff8bf516e983ceb33c9dfc4c6ca3c8ad82841eabe0ad099a725440f10b178f8004fe10c45997fe18daef6a8e42ef4ce6e6f1901889a766891e5072dbb17f081a2c8e3ab6f8d45c229fde752353b31ce4402dd3f6008908bbf00a3aa141a29d09cc1078b71dd0ad6d43fdcee7934db7234cd470b7a49c7d5318e6e7e054d71ce0059790201a531c5f6bea8256c909bf4879058f3c9c6e5da2bf0562c935dfbf0b1fb9e529063be0beabd461e6071b2657f60c48f4a322cc21272cc17078ad952b975109d738e4dd0ff94477779de671cef5f2d8d2e2bc25040caf9d012b0ca4fd87c1eca4d66c88f96d3457a7ac52c9d6341003da39fc0b8770c882a67fc5cd86041b842807208d4b65fcaa8397be7a6193bc5de47fbb86a5ec15029dfdc1736cd759f50a6983e8dbfe94126e85df94da8f8b3718620b0368171de8bc194983e96cead8991c89983fb4a564c4ec6b96204abad9653214e9895b87b764056d044e1a26632de5690fb6936c7970a2d9d206142baa0562b12600491ecb44418b9b3caf65da3b8a831b30d52118ea2b5aca9d2a4983ee605b04d912ff71f76f24fba409df7f081df3d58bf01ac099ee2e99ce5e7e063af325f5c5085a9b26fb76f908dd615d14a12593949ec3ca049bba6a1f0de51f6869111c376899d9d3fd05c5ce98a56f0be4643fb36f01c356014c9c236cb2645917eaebe1ad568cf1df97ce8d4d5f225896cf67ec2e3dd3cf107e8152fe0d2014aa728b327590c09ee4cd8642ceb7657352c0c6dc9d10772da46bfe1b7af86e09e3b76c4bc7a1796643ae05882ba0bf1c63cf815f8d46c89d24b9574fc7ff36dc39642f7bebce3d11968da6635a3dd93c09f5e696f356d453e8ee1c29c8db70da1c383165ce9b0860d7c08a17a1fcfddcafb9aa5debc30ec43224408df8b054b7c61fc2e5d9e21f78f5a3d9b64f3b16d119c1b54640c3c1621e1c03900327d7c767a859f657620cf528e2dfe7d3345bda4c8ca6d4367126c48b68932d2d20c845d049b5e54b7a389ee35829683d28f8b430a85e568cca0b0f104a5b4df67043c294ab2da0eccb2ed2f743d0e1e882997577df15324c7a32c08ed323dc0d864a4ad832e7470c21b4996547cf573b6aca436d1da6261fde3dab688d52c47248a43234fae73d29e4434c7c649fb5875cbe5527dc96a6e7128645032e36fea45d6eb3bbbf22402bb4a7b62239a009b14c2f1a86ee4bf0ae4ee37997b9cf2c245c71154ff396aa984713200f10524710d82c8d50f4c3ca27b7862a552b0677e33b1b3bb5ec8395e32994b3d5fd40763a4fa49b34f421cabb14b38e69204fa607da9ea7a66c45ef84f952aee215a0c64416316ca65ed27b491d935b4eed6c2cf73d6b6fc93f20793c8ac021a9db45fd6a7caeb2bc0c06d1982e6dee84f375ca40b591fcb58081f0d8fba1c8206479984038b034fca519cf53a6712930d027b76934aee6c0a69cc3fd8dc2e72d98e63010d09a81e2ab45318b6adad5ec0e0fc4029e53213ae4471b13433a792eebefbd3e811ad8cda7f7a655d23c02475b79121abfbf70345cc8f7e50e1d42af624109b3ec53588a8e89224f632720079cc54fa604b016665f0a9dced42aadc926972bd22617d259f4f3d9cdc8505f9a606c8801ab2444650789c48378989f0a057ec2d5d382c457f02ac7a10105f7615adb7103683842e99166a4ff48704bd81e033e618f479f25d4a0b908afd037c95cc6f8c2ee20b6cb33217bd056eb1b1dea21f5682d80c27d66aae0bdd83b5b8a6de26f7f6f879feb264af4a2bb57efa779fb281043d7cb3f20b02c54bc472f3bba6d8c2dbc1dd4f059dacecf859e4ff8200df91b5130a1a2cf248e61eeb301a3f37929e9c48fbb9666c44d672c7f2374cd70dd7a8dcc4da7c14ea752f5c5176b3694b642c87862cfb32b08b8daa1c6e6bb1de6068f9eee7b1763b7a5d179b5f1a52280dcd81833e7942103940dfc6f5a23183c73388068534e4e724c177ee20bb85aeb7ab7a200081842d938313de8c2fee862eef97c927a7f47337c84df9e1e6319e37ba763d7acd42df155715b688f453738ef104e129bf35c61edbd091d82b2c931519a84f381ebd4186e8a28343bf774463d3eddf920c1c7e68d5a0faab1f3550c8d9d987ff6ce923a02ad2763bd5b2ba0226b464347fb59b8860a4ed054cbf9a2953a1fb658c044f05887a7333f196e72fe11528adbdabd6ef9c638921058137fb9256f0d95302e3a7d8461cc2c38fc1a110f68763ab266f6cac49308ae3444c89488f520f311dbb621bedc5af2f60baa46bcc517290ea44ac7c751439771e3328ce22f30767c499e949316e05265c706295674a7f98b4d6386ee4b8926ea0bca55835644e8fccae6a22b87cd36c3e8d9ffc4c1675e3d9db176921ef05e6e2e601f4e3d4f99a6caeed03161d84e6e71639dc474c3107f30da51b77302115b9b14d252129db216e31058119942390d587c530656750687f2597a27556e60f9c3fc025c0b8269fa40f4593dfb9c1ab4269a8f9490dc5e88c0d86018bc08473a12d962c61ac85f87dc03bbaf6a92f420a2636b5ada96227e549819b01cc5a75f12331bd172b958e15200483e21b73007c04100a616241c696d8a8983da2a1e0def257aae5516b6963c0ef3e7608de3e216ca1908a4d8c6fd46f752c812ff879b87dbb3b755a8fcca9d3d0d84498823e1bab9f592cf9daefb46f7df84df7acb64a168f1b0032de814d92f2abb9648872bd5be1cdfd1545a20b22fa73d3e22520763310ec3fbdb201c99342b81788e090a1481a0cdfcb640fab8966aae115884d51f0fe14acf94eceac81d6d74ed74ad28f73d427bbdf86932f3def910bdfdbadb7928f1ed89f3ea94929dd8b86985411cb23f28368cfc4e03ab8902ca6a2ae74e38f0ae40a216c65c53267afc7452e469422cd3b75304ef1b9f044e3bd990582cc481672654071c30d4415759e317fede16e57951eb3f627f55be88d3944afac73d29d95a358cc38eba445d2f52c8778c162222fe92f10b051bab501606b617ea2eaf5f089234180c44606ab013afbd355a3f60326ecbb4e49b035bdabb1bf0dcb34ad6d9e488b2c3199cde1e2634e2f2a4770ccdfafe2ee18d1b82480a9ed87c36b5a2125a81994a429c56b106535169ffeed023388fe01bdf0f2bfda149c774eb96590d5512dcb5355cfe2f1c095c373426c85824767822f9a456a1b8a5f1819ee503d91fb79c0a86fd00979da877b121eded69b180db4bb7376f120fa5e2c3b8577cc7fc25ae0e62eaf827d2a436d8e3b08c36ca07864b3922b8b435f615f2c273985fe5f0d1d856bbf2c5948ec5937493df4820b7cece88c56db5e0846049ffc3884f4889f253ff8250411fc7463684956aeff89121cc7f8d06d6707476dad5652ef39cacc41a0b6e5e4e9755156d875da7ee1b642a81bb7ee6ec859b4c544acb8b283082292bf134f5dbe89cef50d2e4484919df74bc13c1350f90aa8f1b20ed46316a47d15078cd0470d8f01e736789252a64dc80ee124712ded03d279a8c61f7e2345f7a3268ed493b0eca80c1eb3629f30394ca3ac794709a932bc65ba288e1ba5c6139788295fc69663b3ff4dcf102e392f43b33f6a55aa69fc9e3376024c406dbee0b85c68c9f5d112828c0d9e7356bc51a117fc43ad55c23309de3cfce1c6dabbfbd182162cf461c902a476e7c9d0583b2e0f917c01071c7d3e377f442c0d0c60833376afc6d8e07537f27b8bb22e51c263b17bfc0cc6096001da5648522be723673085103a9cd7572d7482acb42797fc2c06c957bd1057a1a90b12bdbdcdf687619b52cf7c121e71e22770bb033368799488ff1c45639425b38db28d7c8e9b1da07933ba5391b540e30e0c5d992fc65a4412b56ed8fb9d30365b3b3c94ca264542253462f8b9e6d9c72f62a2d9731813d9113344cc61c6aeac2c28b33f6b7b46c6d57dda5b350d0ae38e4cae57892494714ad3c421949ca9b5f52fc47ad912b2ea702edb3b854b53e9ff535e2687c238f943ac767bc3e1a15a7a30b74d557b726b9d4a8489fddb9bd0c7995d90275802d742c8e07dc82d0b0c5b6b465f7213a3436ac8998afa32a6f79d046488bc617a64df56c79311265126fb133925d8288a4cf3d0cc396b844add844822669088ea5937a940db68db1149461d128ad8692d130d6635743610e4f787ee8284b8d1fba85f6b4b8a73fa3ae3a13ecaa9d2a2cee2507e4330b319b908a3409294a39a8062b9b8fb7e84cd6e34f2d588aa69265a15565ae915f9c6519e75ed3600f242b9d9cdf92f8d4b05e20debd77eee40d6431b0ae14eb48c4b663a000d095f0d8151fbfeb6c0cd692b1da59110971d21d46d4f137f195d40222c4d63e582781398a98e95520dd02aad392aba18fea14bf7742f0be6cc340e17ac0de4ad7124e228b30458154a9ad584d5af75752b8aacb5123500914156a4aeb16d894d23923cfd903ce8b139280a444270c361b5da1db8194519277a8f4f4274535dca3b8c79e640687d20e500a550a89df2b971a1466ad7644dcf752996be6597dba0927287cd01cb6ddb48ea070c01a8653cdfdac7b4f1a7929286edc4217f6e594ae66892a10239dda2a62e79d64727fd8018633c040891852940a64ecaa96c27b46cf2f68ba247183cbad4c112ed18eeb0715a01e1938e0f4c23d61e7526259f890f06697b3d6ecc1077b4ff19a39b4af88006b801fad639d5bcecc0bbed673813e42195b7d28dcad575c65a2a591a5e8d340aaa98625c66446932773957822c98f6a7bc3fb60feeb86ee73618549371c242f812d6ccc4033ffb01c5e2416add641367cacf1041b4438092df5f4504379accb6ff853162f60c94544076ef8c14d772c703bca547b9caccb7e107fdaf692c8938c69ea6fce77469d8ee2cd313ff921e44b0fac557c6935c50edcf723af0d2af02ad09ca4c02bc46ad15b876970129b73169613917146552288fd7194ac1a865a3a75e7c16f49706f125cb5aee261bd7bbe13490df49edf641d69d865e1e9e0614e13ccb41033f6196d927a5e14843f98229c5f01f6124a165df7327e79b479ae4204d0b75ac8fc6bbb89a532a2aa5b3ca039cb6c8867abb7a191694b86677eda7053d3da8d1919fa617419e9b39eaf64507524b2ad2c4a254c0c305ab688742c92424e47225b6f33de4b851b9304433a65ef0f5bf10c9086a5d4f25e33020c93df84d3ada90b33402361e6c18cb8a555286c2cf55015eb5852d373ee34a804e45c55f8fe2fd224e4e8e3172e93ef26362d78d7f1f699c8c8c8e360c1075841a536051fa1375c10f85f5f6b08b15aa766c6fbab359defd72c5586892cd75316a9a98be7f65a5162cb1fbe0c4bd58261bd1d833dc8c2c66a896706e0bfdcc7674459d83e5e7b488920b0279f872c6af1a17958bcd8b1d128339234aac9c14f1f448b95112c92ff2f50686c27edf2c8823d8ffd6db851d9bb44390f2e37217ed1399f1bba93641e677aa7fccd8716576e345b634a40eb7c43c48b65c8865f446f9459045dbb18a694d2bc5975367e22a8cbd70b9f6b1607dc797aebca30b9eebdc5817160e9d0e08f50b5408a9820d750fd6992a5f32d846d027e0ce3404b81b2bde1e4b3dbb58983794de3c30329da603f63fc599b8734017705801438eb67302ee19cd917eb7554cb8322f8c258bae2c779fc11c9dfe9e5145f76b4b5ac35ff79fcca7af64028f2625c94b70963dd997411555836a3482b9536398b126058da732b40d432fe0c69bc8ea47e9745d50df1b0bd605a0e1934675b34251c20287802ba1b16e5aba23e53fc866447c56ad07629e88d202dc7e1765464c9450651d72e71f7f56ff64c9bce336e81ddee7c93840e138a2b5b24d4a200d2c13d7e5398acba78b84f7dc46d7c2359852c613db54fae25f554fd57690315e84a0363c31b75d7705fbf96d211544ca33f6e473ea32bf1750c08c2d6f766ff6e5ceff4e3777c51b487b9488b7e3f8c05312fd41878a8e7a250f455bb34098df9916c3ec410362d4321d53365546a6dbbc654e7e08c386ee1d8083940bb78b2c856b43f6e5e09f26c3341d68f620bc63e962afacc6c74befe2a77fb60c1c3d4e5cce1137adac645456e285c6e919bb702535e71706bc25be3201312b98e84e2b2373dff5ba4ae7b411e08119541ba06bf4dea52acd3dcd35ad03a7e9e06bc538e767f6901118287b403231ac24905f24a78c482741b96fe2240e81a03c883d3efeff16e78ff1f6eb4c06f2a0fedf443e632f25e626f245586dc89be3dec7832d2ab7a0049422714aee75e00fbb979457c320d8517b97b217ca7f5e490a41ee89a0231c4ab0e4157ac99216b3d47fc7db250871131cf1fc5a2f9fc0d33aa981b71b5790dc25bb1977c7b872a96f2408962a0dc0c34140c775791dc815a41398b9c067b08f95678e747f4cd36d74afa88bbb381ba279944f4470ec996c6e2011a9d335e5fff4c5e9dd70a25d244fc4a71abd9f04fbe67b903d7bf01397b0715ba9276d9f87aff0c5c28c0981272a7f8aff9cffe7854948fa43cd17afcfcbfe879b756af2162fe91e03076666b553266abbc544ff09f35633c0deddf52af4edd0a79d1b5c70dbb88fdf748841d1c6defc635783cc3ccab0f63208ee7850fbe8df0a6c841377d8e31853e35a89d1959b489121561b9df5155faca972819ed5f174e57bb6c101e328bc09f6adc9f0b3fd93a0d1cf4975927d683735689759722cc6a72ebf05dbe787e05156e04c393f8ac3e9185569efb2b98e36907b201c510bb95027aea2dc70b1e3446832dd134cc09b5bd0124de418050b3a2ef44b6557556f0a542692f7d70ec17d94d026f96bae4c1c5967d4c6b39b4ae7af1f9043ce2cce1607fbfa1e3846cd9548731741b241a011f9ecdf17e7fd7055f8c925323feb9a01986c5fbe39efc20b46d5105229598d8d7a605c8e4c15070051687d1e486d25a2e9793ee5ab16ae4170b64fb379467b535917a5d42f8845428f81213e50eb3d5dce937625d5d688d3034ae064b7865ffe0f57ddab5c4dc8b38511466d3785c78ea583aced2d4d63845afd1e0f6253a53fbdb6c5d1ef6a5f8d594e3a84811e3bd6bb3f603936a0ebb783afed672f503981da14356d93a3e18f1876beff4905bfaff9082cf8ecf19945cb018832ea612e22473e55cf243345438dd86a2391f41e246c8c73d18010aadf18285011a89c76ec2c6758e3350d7a5f043fceb547c0efb14c2db8e463e69c3c7da3be1c4bace2a65b6e49b1e0c9227d8e766833d7e13faf23e15f880eecb647b7b4df2f957e46f5c13adc65826563685aa5fbb3b3180ed82aa87f9c5f08bf46f0015479257bb500a64ecf1b5bd090d4c2d67ad07cd051adf60cac6e8ca20367dba8d9e5ad9208722a2de23114c844bf447ddb21757ea6b5ce37541d16d54326c840cbd3e63c1d0b707a4e0638b93e5b73d8b4dfd325e76f7a766b01ea321c3cd7120897ebc65efc17a0ddee9ad7215bcfa5eedd3270112a47bb5b1cef7ff366a58718e8a7bc67d401dc10ced56cc7b94ae73d8e543d3f7340456d06bc24baae1f81e761aef85ef253bbab673ec3008e08be369457092f453173641411de764acd49eceba626139070efad37f2b1747f0610854c83c2a88233696fc82f5990d8b5ba76f4a6b0dba4717e04b6151f1b239f64f173bafdb2b0572474732d25587cf21432183dbeb2d6a63901af5a49ca3928dd0b1bc965e68d6b4ac951ffb306276fc08edc5fa05f6636cf7c0b2df8b90db45ffbb24a64106f4c8ef47e0adc68b45cd82d4119f203cb2b166ec78763d209b03dd4f5e42280bb687f87fb45f3e809e869f167f09d0c640bd3812b0e27c75ce9b7c51424962b74ebab65a30f01b57682115db273965030036aa3137257d5a4d564d4b1f8d6b5b5ac868c22669a9a0ba9e07453ed3840443714c9cc9c2a4bb5c1491f6a35b844ae5d6b7e8e943510693753addfb4d5c9f920b3bc5eb2f25339559b6744fc4ce548233f5c28cdccb6865e34d98df1d2dccaf0f5b547ad95fb5ae35d9b8bde98f25c6e816d95215d32381b92ab3efb44597a48f052aaf0a21de56a0d23e088c4f5a9a94c05df24fbb2c2799d619767bb54ad5277968ddc5b683c4c2d191b854208825557fb5c1058699fc3d4497595cb6da1c2794e28660f7a3b0e04559bd0aa8e664bfc26fde7204e5ebf065188a61a13ed5e8cf3d6776a7cc5b5817a94e486e2e0b5dc03a65d8f3748c825c4dd3404e167a278f749fc87fc2e35c9b0a95f1a6dd6ee82487abd06f09746efdc7fc5455c8ac76f7716301596f8f777a73bc6c71a1a68138e31716136715ac1bf420711b95c281c613e576e71e71f19d18140ab20f32973239c8e374d1c2c95a2a798074874ebdb548d7d69f3ad0f4bfc86d7c5243eaffcb7d545a140cd126a9bfd75c4e21f03892e37cf60abae8185c95b168d652299c59a529c557a5f752087082e6e37ff85b71444ee8fef777910188d672eca31bb947503e8712ea94d8b6b6c2137d64a2f31a69bbf78c05ed51355aa357a4549dc2851ea92000f8e94567dde018ab388b40aa1f53287b661baad6069311b9e5ba21651adecb9973c3e48a989a2752fb9e356d53c5b46cea427bd71b97ef1b112902322f42c3544189335d7fe37c095f264ac6a57a6043aa989ad6736090bb1185f41a0c0c4a97eeefb318b9a6b20e4650b95abe8172b75102117c74de3a90d3caf708b732e19dd1b44a26da315df5b5d17220ab1c4731aa913edb6459e0323f355be6c5b0f45c189ae379bfaf5fa46ad9b846729d127c5be648c685e55f145ae71763cc70e96ca849f410e15f101add555ccb709c58ab7926e84feda51be5f69e70480d8ed54b9969dd0f5d01f894f0fdb7ad0df200b241017df20fa29def4dbe55e5fefb4e578b3ce9737ff9cdaff7de2c8ef689bf1714aa160bcfa6cc7e70fa206190efe0789b297ed34329bb15525eb9c3f7ada0335cbc6942abe03868f940cb66861d545ed3bb20feb66ed5a60bb4cfdeccfb3a09da55a32eca9f8e788ca7f713d4c28d7ff780874d5cfce18f159069f97243345f70a68688f88f8893895956defc6ee378e4735609acccc5a957dd45409aeee63e3fce85cd080717db871d5afed396aeb1f956136a695a11746ba574ddf2f930dc709f00a8de2f838f265d364b832c8a553d717f240d191181706dcee50b611d1f7ef8519e28f76306f786cb276ed34de599cfd2938b4c6686ddcfae06130e5a9ab2345e2f95bbf165d0cd927791dad9d03451737c6f635e4d3f06f25c2fb325646ffee1fbc144d79456b71899826fe8c3cbbf3bdcfcf857c607c702f2c4740440b4c4cb2b6f572281b7c2f15bca02e8cc516a59dcc59fd065a16da3b029c92512e171fb35cf747735de3598ed887028a9956001e3f96d06af62a550af66caf5b3054d7d21e2053fc627062bd1393b01deca3bd8e63bcad5b49e227cd344d6daf045fc29accc1557ff5150a7c9e8fb2250731cbfa9f117a615fb1ab44f1540d0d649850b4b25b5408e6f5d550c2766722cc3ba7e83c5ff5aaa7f332152d470db52f5650685317374e552383d4817176df3108f1f82cb6e2c40c148b13f9e77b45a6dc6a0d128a382e929ba7044fa77f369a7ee239ca77c49f4e021ca8d8717980d55a47d422cd7d0b4f670903d68b19c60dff6edd6a3d0dd1fdd6394cfad66b78e37d3632141c6d45ef730c85d0faf5241126106b1d66016a5f2aa7e1f4718a4642303fa9dfe42b493aa6eaeca475f007f7692fcf400d069af66401575375c94b871a73482fa461db37afe41f7b4617a834b162f017efaa98a74f13039205d43a7c8d85d06f16d527df44a99db743358b57689919e4344f506f149467f0c2de336c1d164ae240d34597903559ef1c0e27862cdcc6c803298b51c20a02bfc574526442566923ed0f27f5f4adf2c00d77c0ef80dfb20e1054a20e4d644451727116c5b5d6d0097cdf3dc9f8840f6c0593306bd9506487d8e34b5b932defeed856e147ab1e75570f3d695af457ca58b9ea1c692169157207a6201a78ba5bf061ca84ae728b35b0f5e6ba74e04776826337ddb425c3707d2d26a3104b0af3399e62c6e1ff6bfd200314d7c2bda8d3f0d1ea28a33a970f76683412b6478596c2ae0500337c5aa7bf2160c1752dc3542c720c27fddef36ba0114ca444050ef030e6465a3af929aba6772dbe60d7cd44497d68db894e89ac0343bfaed51d36495309505e003ce631a98aa692d43a0b7ec5a328dc38e6c0927c0be4e62bad7e485a3f5ccb8227d5cee8c7913ef35974db9805e1bd411b2b7152850f1ccb53e71949dc6487e7f3f9e4f55aab66217750674cac15d8e0fca7b1b175311ced07ccc3d3d530cee51d3877e7c6ad2c1ae51a239c434f8673821a551666bf91e23b0d1ede917b5d31f86a0baf0eb0ca2d2057b9221aaf987c7923053e396ffa663847ec940768bfb4910aece46eadc1741c5adfaa99ae6eaac3caf0007ada0756928f92e95a2534894e1215ca2e2fe0721b728f8ee172507124539ec6eaa3c60c5b821c59375c54aef74df30c347e1e4b3db884ca9211ebc364c98ae1f394f1eab316130086416c739dfd761971efe7a1d2c71b25a7a71228e6fdb3c9aa750133b029c55edc7ee2374540e540270df4b1c34ca16998491ed71325e79a24063b69ca9bf6bbf56040363443b787031071e6f21275ae936111af0ae555625b737baf3a80c64e600a4a8ac834e6b7de4bdb27c9d39d09a8a3dd1e490081c3b38b1636da348262448a488af42962536ffb6524ed0df6036800ff355300c3dbae9b1cacdf227f515eabe6d6db555bf8b7e9d1f03c13b61e40d298857605af8d41a04647bac6827077e0c32e9d9b5835c050952a3c8dca3a307eb5df4c1dd83dc0bb3db2987224b5ec55ead81a16b2d987c018b3234cee5ab443a870a581eb6edd808eeb81f02b1ef551e8df843c4e110fb19d1c8238432ba8184dc252fd1720298bbf013404ea4274c6c606287aeeee7015853de5dd66815c6d8639b437dfb17058de07e96def35642fd8fabf67d243a4c5a630cc7027cf38cf11d47697725d6bd6bd26b34ad00032dcafccec57cad60c67dbb7de2245b4108eec6c6bad945ee6032c45badec8668bb8915122550a38683050d914482a038356a439603d0283c553ae772af9111ed2d132c0f35731b04496943fdc9db9778d5b0c4974ae3d5fb643c65851a43cc028706b13b112a4f15b753e01a567fca4d72612ae6e6b3703781188f1030726fcbce5058c43fcf9ab869dbc2fc09f2e3148a233223b2944ef47a76a034f2b1e1cd175af252c710482f91c375f0e15642702e778c3f4db9192512b9795c2445c857ab8439f68856a3271d43b16b08848ad7932d119c462701cc040be9bd17cc285cdb3e98be7bb42ffa057734549346baff50f71ff431ed64c3bedff336fb84fe2e9067a10e7c0dbe10d8c5d0880c67b6b2ac2864aba4e2f8b533eb4a61e0a2360bb4c9c27c0865b4f12622e602119fd0cfde7afe2f02be2832aced9a0b3b29bc030087cd5611b4c38008cae34667dd03cc9c0a7bf77d8aeb564299d720db76442e7e40f0a79cdabc436047702215c89fea44da6bd026ec3d735a3bf8dd12e3c76082eec3c19b9e3948558ed882e45414045f62528187f0eab3000a5361b3e2be9b46f9cc25af16d71113d921d71f5821808aa78c11ecf83ab307365b1fe09580817f1f33dc01228e6105ab6cbe89a70803ff5e33640ab116ca85204fca481291010a97bbe1fd4dedc13af3d6a68a9084f6e4f29b659b333eae264759e5e7addd4f3c8d4454798e867144d92c3f088541c181c4a35f3f685a5490bef0fe25d7f20a45a4f0820c4a757d545dff9f1b3a4387150d1339f697a67554891bae068eb24ad85d1372c09527800ffd8e48e5d4606939893165464f63700ac1e375a28947e08b6a5e5958455cfbda40e8b0ecac925d1201148b9302b4ae6440967ffc11b301b4d3361bfbf63dc9bcf26f2c1a891fd5051d5a43fe332901ddec4feacd8de5f5c34f9c390e86f5451a9087c9c396809dad52b74c30dbd4a08adbf708599ab0ba4064aa7f85a8ecb0a78f87358333dd7a28d8df1af898019e68f91ee4e1a6ab6ec63e6f1f4a1205aa0a23e0161394e84a57969cfff6e778d3fc6f853e7c497baed9affa5aaa5e9c1ea1dbd2e11119cc0888a74a9351fdf85559ce53e11e172281b89664fb60fd2a341bae849e5c163605d7239b91370da94effada134b006464eb3e030d6d918d07f64b4b58acc5d24deee31a62f9d4edddf54f3726a51929abe88b079411e801609ad1fa64ed6a68ec6437c540c0db0faaf1bb8ff1a481d6bf0263c34de9c014d43f3b26232b986acdc0ef92a36c330f73d6633fc87e02abf75c632a03eee8b9ba771141dfa3141b3792e841b88938a886bd078ad5c9794a4cfcf9e76a9c423d1e956d6d757cf61dbb54b6450993e82326f9498589c5a4afc2f26b48373deca960f1fe303d13d16227cd3c0beaabd3005efcfba4e5efabb33aed000f8578cd4d60421bb71111caeb1a6f8de2ef555b7ad3ad47d48ca9fde0568eb0dadf7f1f207071c26aaca2da838605804470f31976124d052a3ca18b07d9bd44d306d9bd918c3e1c64834260a180b42427fd84491efcdc52f9853c3474a75c25259883a5e9e095023545080d37ea866987c7da8426f90717f0df199b19ff01f5a7355657fead658dd8ada6f27e66f0745835bec2e76d1af94a9836dca6bf0f26979451ceb93d8eb874d47b7e99b389b6878454ead3e120b2937fc48de468ea352f4052dba1be25cc30130ad0bae6631d79cdfe9719732a3f4153676c08daec2c50a38dac803a6777571738a3aefcfc1bf63dd12c06df0f4f43f8ec5da7c3fad228dfb74ac8701bdbad18454b7053613a7e60120d94f3755047048639bc6ee3c7a5f3bfdae4fdae1bc550e89b85a570e5b4ab13fc9e5dcf9ffefc20342c93c72eb541d21ccd703c44ff219f56d483d8eddd9e91b36bb2f773c0748826aa2fead57c8357947a9e1ac95952bc933dd2176a8f5c7ecd4b99d60b70a423e93dcad27985df30b66be3ecaf90f1f2e4ff3d6dc7fedef685cf0c69d29b9d0fe85059bee350f5df634a3bffb916c381b1fdc72357b5cc5da0d11fdfa03e353ced30c222c7f7ab0c82aba8b78e363fd9b613477f3648350c43ada90103a1a4f14b713eebf016dacbef07671bc9c92e16f1dbe33dd660aaab34ca019d8064954cc656d7a2e929bfbb0f866e9575ed689256a46351d477248e525609ae5b0e474384875cd22c0690f5b6977a3a989505e8231fdf1e60760536eeddef7ca62e6310bc540d380efdd15326f046bf66739cb8d0456304bd9c21f81b6dc2504c823b8606156bbb4ad9693d48a76388d3acd6c9c5c20b03db674889f6db7470829879db9fc0e431133f91eb1782dfb864ba4bd5b33cd2f5d092a5a435ba03f1a15c9f64ba0d5f945ef315368443ec5f3830b3f9896bad2c161029c1cf3d7793dcc9fa6c2106a7114f054e07a211e0a6469ce7807baee85f71dd639c6d68d0e0d73db929c4fbbde2b9aae870dd65221b2fb313d86fc566cf67318c6517d58cdb3ce68824d7abc5d01ee7dbbdb4469d154538e0b09fd56521d0753d677e3467f2ee0cee6930fd383c16f649cb664a74e017e36b07f5f7ae40662c28afedcbd04c373ca977d302aa0a4945dbf09201951a22cbeead5a9af04e50dbbd02ef56f131aaad82bbf7aefb75bda498d6070983743398b25c7452904cf8d9db3f8e85997c54f3e307af9f5f2b5551b4ba30b02b0dc7c5609d615ccb85dd9508e623378ba7ac396f3925cd535eb724a6d6f6108c3af4756f2081557b0c5314b5e3a786c002cbbb19a2f292ffbcf3262889d49df69a710616242518e976f8b41ccb29fc985833dfc7cde791f0efa522529954fbaafcfa0a50594de1f1ac56b5546760f06de93f8055c6485e93bbf572e3647c198f5e5e3d94c66f5383a0637dae1452859c65d454bd12c77d451c2dbbb756e9d23718fb1794330d598decedd6c9bfc6c65ff92001e2fae7dae888852ed67ea2b81d5c25846f160db27c7caa5402bd8cde9cd9ddbb5567d8d38815c8b52c44ee414412ac4791a392dae6e84be1542365b103a9df9084b115a44ce9477f8f68886a762808c07df7084f0a22051e4ea4e574b856cfab7f5e4741fcf091d85293e6a1d3837b583557eeff7dd16a0499c54901af99fdfe20dd3f85a80e45b0532614a0f66bad820e3b33220f1aa64ce007ef9e0a94bc0c782549386b692eb5760fae945a691af168c18f7d8d9be03ade8cd364bddf1c35a926e1e8cf8726c844b619b2b9bcc9f7d3ae5091bfdda43b08710c7a59abdde3f82a75c72f559ae2358a8f19cf5f4ff2c1e791c1512347470524804562c6faf06ec84e1d2bb94ccdd42b0f82d87b3090d02e9b98d80c0c268e0ece94f75c245f6f2ab8af0647026fab212ed8bd78e878d80d3f4a4c267a495db6f06371807a902ee70b339d15cf273233b3519cbbc4560045b446f8f7ac0f8cbb2dd3e2209d517f08aa179155cf8fc22ca14166af33190785be9a6b1dec9d7706b5dbbe7aaa771a4476471100b246b5340d9c250ba9af93f712b9ebcd905bccadc58f79b59e5248b5443bcb144fddcfde00fb31cc91d30dfa99b9960b62d2341ca5f885bb726ceda4bdebb48048bb51cb4f9e5016269b3ae13f7b6b31c7e0b9adcb7612fab1321f6cb23c256386ae7f583945bfc13c224ead7833990cdd9ccf73ef7ac08f65fb237102be2326addd495dac7781224f24fc310a2676f58a7ab9a06722d6a0ac616efa4e8430577d17dd1b3bce9e484c17f1ce012fcefe98713b292c076711ab8565116bbf5fde2b4b2b8a6912223488d0d0c4416ba7605b6574eaf57733abeb3addf1617834fe688c488c2a52c0b283e835161bfd15ed87d5b98525fba153155b2fdc74d42d22e3509f7aac7503e7533d5d44101659b75e4ba228f0607cb59fa71b0040ec91b99c4ba669076df747cb074062b9acbeb7a59306ba646c1f406ccbef640d771f907d01dc2029458356043be2f2435f5e3ea506087fdc175fa889a42f32bb15129e889648d67bb780a1e95c74139b5895faf464ed631987fb98524cb2b9ac1c2c59cb2950e466b992e5cc9cdd62be2d02cd612a4e724d2cf7468c48a53227b9eb375bc7fd91d6dbbb913449110345a2dca7fe425cf41ac8b2b76777b95f04f35feb586761ba4fc923df790ce47c07ff9af9e74641f4ceaf0010b86f32283f9126d1002718e1b1845f812dad612792cc8af5de3d2f21cefb96cb41ffcb9e1128021e3fcf3726da7c2417110ce4f768d9f9de3029ea60f64965e6c44a59944e952aeafff3b79c8bcf48b5f90fb66d277dd688704a878045bbde08d71ef9655a72b3402cbacb8c56315fe7c1d4e0af7f25ab07feceb22d5d96ba8debfb47cef897ece20bb744562e0c91ba9e1530f8c01d2171c13038ee5fe1233abcd64d0b196f3b4b0103f6d1bb3696622394b688c89e822a6d43cccc86986f3eed2bb4f982a277878034be18f561614c8c4ece7b00c3447e46fd8bce547bb9eba537cd91f2ee9696ad105ff1d1b7d4da9fdce9bf23518178e7e3369e4481e7ef8d3b79b7b17a480819131d9544169b2362999f9728459b0675072ee4648fbce8d1070cf80176a5f83d831b94316635e3f1a041ac7da93da1f1c341c17e5c98143e66b65db3cd3450371cdba78f1aa8f6ae83e27627b9fdd0644ce067e82188ca3e9a0b69dd2ed8531dbd187fbaa6f1816a75c491bc3d4fabfa6d4cf3ebeea8431e7e4f6f27ca3cac35011dd410945f103812d2643beef286022c062790e48f30e4dd9936968c526ef598f71b11a880e7aebafee3c4587b4698b10a7af67578390a4294a421a7a58668774dbda995e2164516ccee3713e274e286e723379ddd5e5dd0b837fb90eb9a10bbfcc7b2bf1df10d02d511ab0676047b2346e6e92af8741f81365706196d68a30ec068880c2ca52364c13efa85f8493ac6265a9fd18b92d0d23325b1a914e4ee75c1fbeb811bfd6495a61f6e68170299c707a2ff3a0bd3ad36ba1fa42d954f30b44e67879ecf0bf688267df7a76ea6da9b41e00be1baa328c94a20629d2f813753db8ed0a3d32ed48117f79a3b98e1a597eeb4ac4a6d60a7d265a655abd343a962ecbcbcf607cd00f06894c0b355a320ef5b9a4680424da79eaf88ec052d8f1d07271e0583ecdff9f768a44e973773462bad3b0d8f406a068215dd00c31bb8a326b4a360661818b9adc126682cb9f4838850596e928a343debb60b669eb544ecf16610473ba8d2894b45344306c37832f11df6a889ecc5da44a9ea846d343dee176ec9a2befb460f946c5c24e273c662b5db2cb15896b011bc87b776fd2a16cca2983649a671ba7ee92ac038fe1602aac9d8d3bf288fd6c555ce281eaace3f78ea07373a952b23cabf0cb3ca54de02b18620a57ce1b2d4a3dc6e56144693cccecfb2488489a1abe4ac8def86c9b69b405f9d84124f9d6e8da1de84c13fed0d8c1bb7274bb062ad8457352b570b19281ebd86ef9cc64fe145a9b097653d4e988adcf116436201f8fb22666ac696e96eabfc4da16ddf5c0e6da1b1cc317486217a35c4625dcc97ca99b3a81dc14692b47254596ed3592a0dde74dc38700c0753e39f135cf1c6ba823bd5dae2759ca2f26ac6cc8d27650a86e0d14db77b8b1efb7d26ca01646a732933282007581f37452a9180f25aee741b3839355f6511df57b8048e3d00c3dba3fa218903cd20b6b98213019ad70b27c5ad303a41f6f330ab482129b9a9ab881694254bcd1954dbe80f8399957af7aec79a9bb33cf4a6b437c5f768a6ecb68fab827646b85fa31978da97949381a714f4dd6a3c30598d5039d9846a68d0143163c211d116950e718d514dc64c464363395a31b57f4ff1945bf9f11a785c29f30edb2ff8243672320bd2cca079384d7173b3e22ee43cbd5fd26dc1e63a377f47b2f1035219cd307b4b85a86955a208c022116cb463c25f7a7328827b469e974ea9960e2b5ebcd547ed20a923c7e8bffb840c310410019f25c1484c8f17a88fd95222147314e6f4ee6ea2a05458adfeab458ce142686f371e4b1765370a0f10c7fc912135d7b3bcda2b110f0d3cb5ce057ce585b9f5d734ed58adaf826c5e20b9dc392fb7b4f74eed2ce5dcbad8bd750c08f6987a26d975d79084df5e74d78e8ed4d709f9fd4601ef6552c2bd53b623ab142173e12addc30cdf096af1c475aad766837a732bb523ccc945e1e79bf75d5fd4cb29057ec2eee53bdf3fcd01d932ff0c5ea6c13fc88f8bfa1c2cf438b261a37f99b4c5af782d3f9ac1c8049502f41722826c509dc513db7fab9c979a0ae58638125ab8dd35d71a5bd7ccd8d55d8b7b9407416fa45d062d3225042377a88c3c7e1b407a42f5dfb9e92ecd99ae493264a2cee024c1ea4f8d76a740b683c2a8db790f8ba31207c6ec36f96c4f804fe4f772a2669a9810f2e0259c824019364902e45d28bb23cde91ebd50eb55ff3941e9ab17261642550e36360270d2762822483e6d4afe84d25b3846a290725950557b1f20cc9d044571b5f0cbc84b9efc4f8e868d49c98ac8e384f6738b7af6c54bdf3181accc353ab4a923e8206a13a6100cfea18793b0f09cc039a50709e819fe6d3e343afb6734b3b44ae7733ccba96a5b3251f7919cd30118b365103b8962fc529aa4a0a107d01291973118a8d4d87a37bcc531bde649fe7b5a7cd150edfaf5786556dfda80f1e9fa9d409e0cc17183a5cba244cd997946fdb711c9bcd01f49d3cb3d73e08419ae809ca63e9e351d7c55aa034c4d850d4c6206f904b3288525b94e262e14ed5466d274adc58d4975ec6902dd63c35f0d3d302001691494318092ba9cd73e8610481adea642fa0f10f1136120a8079e76be698c5b4b019e6cccc347cbee976392d5ad876ac387f1fd6a427e0cb22f752b68e79a919b34091c109eaa8f13356b2d43d30a95a24b3b262a46a2167650be34d3b95957ce836e832a7a85a60267cb4e0601effe3803ed1ab078d8ec4fc1263564f0561b5102d2088ba167edb6c1f3000f4b946821127b2c73ad7f68332b55331b9ef6d5a74ac68d52659c51c08cbb14cc83706cb79a6249afd3592354a30a9b6fd20f650a8db2e3209ff40367dd6cd35bb0c19c4a62a581d21830ce996248304937f59296105d79e7f801b100f9da81940a010256b128c097a427158ffd5354fca9333e2b679381a961c0a547d4828cc372feaab94436a90be73b243c65aab2a79fcda7c38d3b12599c7be7d4c917da0be4f4f8ccef86a65c31c3afefe2e1816a13dc4c9ffed9889c32bbbb7e990febe680cd32d72d34e057b4911d0a53e7d444ea0ffa6b0815dd0e0cce185399a121f8c43b6c9125259f1c0e9a218b92cd150005a87028e3ece4eca3a5c2fd867b4d7ff35f63631ace74fa5fc0c97d304639f999dee70dfc1b8497907d99717a5e0fecb9089c73744f62c82405321e5a50813701853c17d0615b70a9cc07c7de6b516c950804b8af5229197bc2693ed57d344ba184754c1896cbc10790517d7f7f53acd303dce98901be1f2b61ecacd8a05e6de806012e08bfdbee05cc48bf46b8214bbc49998520857e8de1ca4d987037749f20acbaed465e3256bbe7763f560d98d5bc8574da3ffb9ed69eff3815b69e8e338a31edad95a260980c395c0bdac6f6f4a8ef06b0c1d13139e04a8f5ed47cca683052ec11c8f405cfd8f3cb8d3507dea5902ddfbb53173ff75316e4dfa71afae95c7a5d5024077630e6288f7a95bfa4673e34e3ab08e1e1b6bd250f48a526b9a5d61cf957558184881f1eed84e9a56dc6af5a5d84679439cf52dbd1203905e97b5f556c851a04b594a29d0de886dc82903b438ca6b675a41dc235544651e78582c6cf0cb2eaf4c95dea3df37484184ddbdac50220229b35d3c7d1114108b5e7165974d223e28dc506254cb45c47d684228521dc7fe6ddffd4977e020009cb0730b8640ac9d8fe94f62189d149c0a41f0b2c9df6203d015785dda96066aa26defd5c4815950e4792d8c2fe5b97f05174b11de27d20a73134d380a78c08540693e0c6912131f63f545d8d24e10658a40bd9d09ba4a6a5dd0e84efefbd97ac675987e1499546d18570146d8dbe60241e8084173192e87f6027f0733e52ab6dac2e22b7f1e5c7fabd38b511f450270b972a33422dd08420e9d45a6f5a77064b99c9008ee0489e3871aba75a86c28a41bfaf7340028e254761f2cca537591c350a854acdc04e18f9e10545597e869ad33b659d417f37de18250821087abfbdabb48347e4ba0bddc46d1c43172cb8984d05757a1ff3131261e2937982e590011da076d48668ba0e6c110062dc5d5e68afc4d95f274ea68ef28a2ef76b959f0d7e146502c6b40dad20de3196853995ff8974159bf45e8f6e14c69109fa60b4ce077517d9ea427de1cfb023a19cb7f544359cddc14a80229db724e8ee77deda06626f43673989248c5d9b8f0f796f50da84b22403af2abebbf077f00d21b7bdf01175bdae5cb680327d9f80247b07ca2617d50ec2d1fdf69d7dcd4ff2d4c3854b223b9686bf68438c8e2176aad7b4df4a4a9c332dcea958e39c9aef2017d9a5bd24ac817d937b6735ab19145a1f562ad33f936fa10dadeff97c1d7974ce39a2315596a8e88e2a77fd683aefefbdd65e547d689296210a3efe49bd8aaf15fd2a5058c8f64e5bb8b032b72aa1a77ff1536f720cd0078062a0424f0d77cd7563fdeed7d1884d8ec0c6a1206e535b2dba1f74d011229c454e1ff6ab962b17e935f5d67bad955bc359e45e307ec5778b9d70b481d61d74327e315b130e5daf7863c91aa732a48d085a2015ab478988d899f22dfd38831d99c45b0c68aff06c71063115c474dfa572e3f328433231c4b15534a04a8d465f2b1e3cde9fd30486c498a3998cd4db415f5b60a67159e5c90ccd1b28f5f3c472c5fe5e00aac1839edbe91cfd73dbc5ca76e47431e725688bf0b0beed96c52f15571f9a1c6bd1b10953b0dd4799285cd3924e1a23bcd4a5ef2d165f5e6dcf13a05ea2e8707328e996450b8012463d54a6ee6593ec962240980713bfce7848b9792bae211c81c136b306f54a1809acefdc496a712f28dae794abd27a96113b122d1db7327248f5d2a81fc386e0ee273454d2449ccb580f7ff5c989d42f11e05fb148163e1171f6fc80c946df38142cd59c28aabda3795444c8d0b67ae05f339498ae5e6dc5064a457b65e4b8e96cc07a2cee10d48713f3ae05de201abb9efe208f497b391a0654b324c33831fc99118d3553f7c0c1d5916135b838b733c2506ee6bc92f11afc56f7ccd1ac7d692d1280ddee336f4611b27c951377cae79fb22a4436b9339ddb4d4d405582b3b81b25a3e1e5df44b5d9e98dfc37091b85a504a71e5ebda259baa7b153500a890cea0f3b89cc527d0213377b2b8d5370d4a66537481e7b2e772dcdac003049029b9abfeefc52dd4e52367cf38a3633f9de2f15a205b106a9756de20b4b30a7119bfae036c5b58291fffeb4d112440a9b61afa3ff73e58c8b6db30c3ab2939bdd8822b16f927f684816797d1534b5435bd0ec4f332d1abdac185ed65000424e9e3c0a7153898c9431e0e86cadb066eab4e63aee1a42669b5c4562ef3425f0cfbd4dfc2cf4eeaef89e136d0aeaa4c19b0bbdc04783889b8e9a8920d8bb52a40a18744000c85569ae8fbcc9486f0e904e90f7ad7b57688924a94d53d774345698152a1e0188d53af5b22cc7c65f16ab94560379ca7f9fbe605ea95c4e32e3814593dc22367b8e296c6a9313cfc6b1b0fb3b8a152e1c587777183f2d051c29438ef75052238bffbe0b7732219274dc52775acf980e09113cc259152bfc52baa83ad0729597dee82e81f3331edcd359dc6836c795b87bcfab68aa9cb186e1971326e050b45129f4a7e4b4fd06c8b2f75be8b57f70949099e746344c46d225c0c325344a0f52b602d5cfbc8b5db36a9f357671059a7584a664acc8ec0ae4739bcf111841c9306a17d3a6fc51dbc2472658fe547d92fb430a0b669778f9c02bb92c2cefb8aa764375994eab1a1362e56f514493000817a7478c48f0074e6d96a16864e647f74c23921adb05afc98ece994ed16c90aa51caab74af195028d31aad509ee12f46a365eb1db92447079f5e100d9addbfc284088a348f1ec866f8b888862d2f7d7c7d776d660d8576dca67ec2a81c8f0baa2ef63a62f5463eb8e667a31e4cae9d23fbf3842afc8fff4fbe7d49d71ec0cefa512e02090e177c70789935e8b9ca8f0da2ab142f7c5925f31a50392bd3b2bd1099327e7407b16012c8d603c20b0140d8a3e47ed2c46ff3461b19b87ad7d11c430f0db04d62595ad1567b1de50fef1f8029221638bedc0fad6a6f08ad3d40eba700e1c6b8f25084f25adf4f30e481a8efa13debd2a87851621e2a49fa44e5da06dd0f62e5dc52acfda6fc317595e15ecb936d2739de4a578bd9f992cf20849ab6948c26b41864950ec87ff35ba40ed8e52b481b7360e510b7bd953572884c31d7fa8a1d03f63ad96ae981525ebcb90624d67f9bc73ef2b65bd4f24b4cb5b725c7ffabc85befbac5e880851f0278862ea5940024bebf84881f1b31ac1459cb5d6ac751f1f95edd3526f1f663cc1b106d5b91e6d7a3539234436f295eecee95f2821ba134266127d1fe7f3d579e97d9e168fe5e00ffb8482ea9ee4d96bbedc0d46a79987c08c64dc2216146cac31b704e53b9b3f217f6f985382ac672859053cbbee014c3b98b40bc6726eed06ae975815de43857ed69d62bdd7cbb6758ca0e8ef00f8b68bffa905d82644bf7d3c50b421c4f8dfab5e50af53eaaef2f2b8607026b9ec0c267133b34ec30a896c0b6de32eae5fca505eb88d2284461d87662e4d4950bc05004ce9d8d4e8df830b16d041b726015cd9b17e258ec8a8a195c4cc560ad7ea0a154bdeda0892c18776b05c84cf5f619809380578327018b556013a67d99c2f891c3db3e0c12ada3abafd3ae9590a3dd971d2fd117e6f492217095dbcba29727cbeddd0b1af4115c8d4b35a93f898904cfd83dfde690c037152c5cbfa3bcab4c0fb8f7a7daf61faf48a5451b2c1c99a451ed84cac156dcd8f309091cb052dcf54dcd6f3b8bb5912c1c3e538a9ef0192c48c719c3c4958be7754ce9fa56da22ea9d644e6c1356ce82322c8b2c0c5234efa6c84963c27e1ecce0f2610db1c35688452841e982c57b9e9c581ccf3b273f51b1bf6cff97709266ddf0f84fd9d28da074de5065542a0e19f9422244a0b4acfe522e67e21de51bf9a78f2c4559238a7c27b4a2b30c8b9e9dd3af1fc5fea79a4bc762f5fae552e0a8198916ceaf7d1061cae2b0c6f77802d68fd2834513bc342bd2f8cc374cd15f04c2558ea0f63fe185413a9d6a5fcce42401cf3d52daae55d974f46c0374b69b88f42d44e686a0aac96c386ba16bf69cbdf558560cae2037e20d80829df2553d014c318719673ffbb13f56695e3f1914bdda397f1aeff2ab546dce80663e3ea93c965d13be4192a6b01f00bc780fc96071e21f638569ebd76b8624ecd0501351b944c260ac4905c48182a295e551ed7b9a973e11be54a6645a80820776b6832e5121a5d67fc3057f469746190eaf5e96bc611ff85f5fdc95405b91c32a738bb2bc386630df63fb4a5aab0fbede0db02aa099a411b2a1c41b5171060a88b78f3cac866146e437370cfd7561820649dbb5da266bd01ef3ec4a1dfaa8b52a85132f0c47f62643d8c4b8f9f9b52769aa275d0916625fe2fbe2bf1bed5aeba5dfeff5a27d5685e7e39ef4187ef2a317e4f6b900172a664c20b710fe2a2ce20578ece57d63fe970f81be088d598c1f208d0f3855d118f17cd3e0fe36c07522fbdfad7adf72fe6a044df48ebdf383fac71cf841d345efa04e86740dff584aa29ebfcaeadf5c42c6ea614d9a258137514ddbaccdd24f2836c0dbf9930e3de661d4916d2e463864bc6876545aca0f473b2bbfd9e505c7182306080810d1b5a885ed6179b715e3854013e11bcccedbb7095a56460ed28ac91e58e75a82ac3664f44176cc663e28277d6d630c9a75de0667d928a3a6546914e78d9465f676acfad5985f41bccf4af5052f45c261e6dde347ed0c11fdd74374f1eebe58d3b583c36ed0beda1eaa335aee0746d2e1f246052ff4c0ed064d6298ae355b0c5aede0e6291920366a27e56625fb384d5a4d5056868f620f65ca1d066340cd4267eda0855c2f92f9888b7e95c1fd5e65f8b73e0469942b34ca20efff04de30d14f94236d97c72f62b6590b5ef643dcc109aadb760feafd3c70ed89761ed8a9893d03698afd46dc96d6cb5d90accaa335f3147fd0c0b8c84d8f004bf5038d2f5fed1a443edcc305b936715e765509c123c4ba1230e342cabb9c4832d5a88bc7264d14f9b5ab109c5ccc6532b5d8caec44a82df225d9853f9fd49b6693b576e83a229389d1a0dac53402f0e07abfb9e0fd2766c9f301ebec5204258a31a4f0a7eb6d494c322f39c5f1468613a6cac1e7aa317a3101bdd78beb616230930240a389acca35acd41d54ebe2fae9168e30b199e8ec75256ff6d4315b92cc46a39c060ecc1a5a5eda7b955bbbc4a271052f363a1ddb9cb6a5af50cd1d551d1e04d19e4146c9e526bd95de1838f82bb048a14470a3218050ca6a6aaeb4a196ada1cb952b842aa665d3d0ddf8b28b6d119580ab411dbd4bdec31768fede2e4bbebc0183d9480b5b98a0f31a9251ec30916f98c627d0dce885b7180b3173c34d6ec1b95f46a0800285f69b095c140b5cc8e1631b4d1ba1dbdf215a6cd9cb2facd6e174293e423b58b1af0ed4241109e916a775d68d46db12651980f10581a22997df4918e3581bebb771b50ead48ede82a7db0720eadb494104da09a8b8d924e7d801d5eba39a2ff3b407c851673eb279a30e0197a5bd932cd918d8bf54974cf6ceb7d876554d3160e1e002cb4f0d473d806cc951c19be0f9beb3d8c79fca6c2ce3615fcbd2a72874837847e421b724f9f0959e3991dc4bc5ac4b890bb3cb430950814cc2796dce055b26557746b8fc93865ed51eb213dd79b1427722df8c5b4ef1e209ce1fd7e3c9cfc989aabf185d62bb965a75f0471762590a5a30f5ec14c5c50039cd7af8c163cc7c104be2495a4f364a8c0702ad0494145a73821e71c882825d9f3076f6c2930bdd506fcba25509b9645690b7568aa5f4a1d7486ac062686de2540806410374e9ffdcd77ba033cf46861844ca29839235db2bb289377eafeb1d4249afbf43646913e9599e086bb8471a544c1d45a5aacabd991b7eeec6b020c81242c6e698e031e9cddd1812152c8f9c9245ffa33149de3364c4eff6bb576cecc3e344705800d13b9ba9843e66491dd92c58babb0fe9260a4e782ef87d7836030cae98ddecde7460332b51cd15c5bc37a42eb6a11ca73f6a890bb650f11e0e59c87e60cfe307ef70cb129460d474f3628f8fafd0fdce219988d32e8f0eb55436606b37599e79c4edeab05fc49e1e5817450a65fc670a14245775ff72c1b8f9ce5a0c1f109f4f6d63c817d4d1e6f4ed62cb055e87312263152744463770f971d5a130e1637935e73cee0d5056720f45c6d30d3f3b4bcd326eeb94528db409cd0680b341f50b92848ec04329571a413f110dfdb1d84c24da24c19f10631d729a18c6a5b074fc8890fd4a682225ecc06115016cc33498226f6353ce8b8e4911d7fa5fb0863de708bea74557aa01315e86db82e66748bd091ba1122c4121f0ed94818ed44b4f614319c8067899d02d8dbaac3282adf7dd69a2749ca74078764f8af40c0e8de18b911b92c81c066536366adb707b6fd323f5590f3c91e188a15f5029c87208969c63c630950c017a2120209f6edc35c810f73a8aecc803ee3637b0d2dc8d3fec135d528e43859e5c5f73120993587f5e47ede5c7b348605d478ee06f6ff62bcdfd9ec48639191401743fe0f1341a0f938dfa4978a3b292c93b09fd1d932adc7d9cce2bc173b618b42b09c5c5d7d2e014ffab1c0ec1fb84c71ca71939231a31c76cc95d2f5d293e417a1178aefd9b1e32a630e5305cd472ad1e603d45f78085bdb7950f86b4c5d24fa12dba38d96adc6b3146aca1912f9f11c8b07ceb3bc556015f119bce3ba8d6e245ef65d5064c1fb9e7065a3c073a09cc558a5ca790fda88426d39cb29ce3df46504f1f0ccab351f2cdc387854eacabc2eb498ea6e545072b03ac106899c92171066c262cf08d8457371e3efecd61fa37a818673a58a1e1c37f4356679992bc8728375536b5bd288f3c382aed1a342f958e84cc2d07c08d3b2ac34f08373ae5ad50692660b256fe270c6394fda768da5f786b2b6a4ad1140069642e826c7e74dfa5c71d61fa087e7b1aadba715d4dcd4c382e44eaea6d4cb34ab1135a0947484f9c7260cccb1dcfa7a140e4263e01f56731d0c572a5694a29ee73d78dadae19ab6b58afa6b97d24b902e6e65f9e12f7a4acc0db916da74176b5fb90d75a8bbb5ba0d398887c0f459f2843941c8f74256635a1fce265e26f7c060e8038e65fb9b34c20fba33ec0618fbf4d1ef0b56e1ebaa8ed9a5fc827d6cd381319b53af7174015dbc05314f89c9fa1ceb807069b5893a0e7ee75d0a30fe16d164aa32ae879c337e4d9af3d72564fc8a938cb1f4f0cbd7e2f2b0beef7c974d70a2066da2172b422a3f512fd78b6b2519fad855164cc194326a59ae3fc4686163125d95def0bd6177c29ee205e73b9ff3d6d23939759558fb6bc9aef26758796575945d76db4642d4f5a5507713c17c53b14f647b4cce70c2a6af42ac183601becbf184bad8d50e24f06e2f82e4809f01ebeed2e8de5560547ae666be148b84287da1ec6ca6a3869a9bf3978ed43ee968eaf754f2543f1d0e8b64d05ac3cb80c2918ad37764443c8b837024a59a1fa547ad30d0fd7077b43162971476470bc2cb7d8b7384283c756ad69154d8d553fb67cc1f0702931260084a9cf38e8e80e86bee4d322a70a6a12b455aa40f6a3481da57e325cb541d81ec6f16761fe750cae4761b606151c7f8eab8b67dafc18f2c4fc1e7c8b94f8485ef64bb87a1b2212b422fc27a360775e42b4ec0a903aec88aa18f91c3358fbff61752f81ce374b1caaf58d11419d2830882fe584ae8df74ef737b9700fb3e61af99b668f377f57a7ae2998f32e76509cb63239787d87af66ec5fbd2849a7ae23495e79643807c4de66056f52a7220907271f20f4346f9fad0a1bbe8c221a49c8a042178e7fd9023da86144ce539a8e9d7f4d0c217dfe4b119fb637e6026374a2db9236e6767765d660df633921149c732fa2466fb897512f77e0a199f85ec551174d365803fb33e4e23ae8cc186454c2755399bcb0bb767fc72d83a48ba0a1495ae6a0b557a6a7a11c593c3304b9cc661ca7ea7a15124f918eb75dd65a254f7308b79ea808ee875bf7bdd678f5d520906c2acac2ebd80f3196f70240fef4ca706e6f7adb2a4e6760253fdb6822a56d209c17a847fb81d27c07d10aa322f5cf679d0118ee9e58a3f9a754fa2e8cb8f32a1174fa6616be10558df9869093bbf44c96a2d8a975fc210db135054db7b338a75516647b6261e09c93eb1ff36d0edbcd09b9f11acd748b4681dfea61b6f47997fd70e1192c7fee7f7db1dd755902692f7a34eebc526298793dae3cff7f9e8341277bf1a507e3839b2ebbfdf194f0daf054288ed00c4a5dd629f1b60b01278101e8bdced61dc3b0a18bf4dfb86d58b1c3f454ca9431d10730aa7cfdbe7a67ae8b83fd166d8f12c55e5cfe5f524dac6a1ba22f784c1f2a3f4377e874919f7a10b35ce16a537131d131bc0c93c55558c71db6e9ce31bb0e76323510fb4db2f05dacde34cfde6bf01905559355bfe6a8d234791fbb0c59e7c8d8e16075f5f56436b83db0d008c10853b3bf7a5e10219124649fa650b606a836bc4da8e481c6dd83dc312b554cc49bbd97b33097de3622207c77ee10603cfde98029e2ceb2261059144c49449fb304af463b39a5ffca9b687f1d53c9eed40b3402d92bbcf37cc16ad0ae10532cb8216d74d82851d59424efcdda477710b756d8b5be0664c479a84e5e682597d1d3ffd43793bbcfca2b69c597eddc52c484dd94eee2707c63f85724470a1d0cf43ce576b0b6c00c161e4a1d24386dfc2cdd0104a1ab3023fcc9c07c78f2d4e033d69fbdb0149d761248352720f7f22377c489c57df4f404957c391461e15c2eeebf4d6d12cce244dbfffe1cef25318f76253a2106311ac4467c8c8231db5f26fe14448c4e13ed01945227f3be1f636956891af04517ebcd8392e8b6f780da838f8737e25f2b0e39ff9ec4d44c992a377b889f97e6bf450256e1e2010aa6aef10ff8b51571001f129d5dbd97dbb9e2ca236e7f7ed4bbd900fea093799fb20843dd90dd9206ec1f885bf8ab8356e256b2608cd2e136e65bee3e3e441702bea161e7d0e353833bcb297bded084362ce6a52c186c16dbbd1e59d0405e5e714f87c4628cafc5e8e0ad5128bc74a6d245be2b5bd81ce1f09ab9c4ed68d6b7600c2c5c14b4165d3587cf7ae835ab300db4d0a463674484ad0921f08856b467b668ee39cf17f9548e5876b64c399cb19d6df0d7a852cb80d9a88e133edd4fd72b07ef5cc6d5858416bc8991d2148d611ed74454bdd54119b4c889ea1497416e55ffb389b462db436dce3c1160088eec0c876196262121af1eccf15aa028156085982f22ee1d954c2295ebfa8e2477126b2fb0e646da86170bbd0f6e05bda086bf54903405091b134c6e4fb943707e9deceaa734e6aca7a4340da5d60c9e26bb9f7b0b5ec9b948179683585510403a0c24cd91aa59e24458d76fe59543291ea38dec01b64222cf07e0abef4bd01e80c9e24aef8cfea0ca753ca8143082bd3cb199a9bd3a54a46b792b11c858a5bb081f5cefb4803eb34da1649d43970d95b8eeecd3a65ae54bb3dcf2e548e5ebfd3d4fde08ccb5ce8f4fe8a29f2bc0b38cd204611f96e5548e2431903074c88d51620e217ef765fdbb4304030bf7f65fd305209ff7614769bd49780f3cd5c89e7d999f3892ed19da426628fe9c72abd23c93d8d327b05f7e9fc4414cb6f6d8d5ff09249d17ec07f397c13859d424a434178aba86065bfe43422cd479888f8dc08a7c1971567019218fd5e914f8e2175892947ef023ad4eeabb07bce73f293243fe3aecbf20be86f7337a278642fee187d0fcfb72fedf00d12ea7419bdb32c9eabe3ea8d2e5c48279f85018f5d2ee889270614d2e0a8816f434a57dafd5cb33252b59328b8ceec576280eef75555df4c4bac49b118c983525397a2dc0f7c845bbeb4da0e09a8f95ffd4e94269351299366bac00c928f1cf26bbae994bf533499fad4a10e0e47ca6d62e1b12916c105c46cd83df7dc766fb70ea63a42c170e1cdcbdb45edabdbfb7803109bcd3b73555ccdf394806f59029e9909682c033c54c5d4f1bd80ca52e4d349090f15ed67d6ca3efb64c28452056dae9136bf7c52bd149e974739ce060eefeff3c28111b5a7e03d3b4c2ddc6d15792f6c06a3d8ffefce2aa55a581d9f071d465182a89e92372ef3e2a62e9241aa10207dd580034d60dcce6e108205d8971dd7fffca6408e3e278bdb4d097ff865ad8b7c6623c0ab076781b407996d5ac77c37a427e740c4d7ead366915ff4d131a41a398aa0ae2f61798ab96b4cae253ff1f22e511169e2bbb9a6336ce443cc5ff8096c9e051b1a8575cb4a18e27d81d4523ae34484fb3a4901a21e943f6b4a6e2c31401e3acf2d826d34a5221f68156ad7c75d33e2ab60b1eb748de77fc46c34f091ea2f511d0f54e3f3b7b0cf7b86e60eaabafabc14370f233594c582c5a1f4ed82e6bb128f6710bbbafca4879528f96f3eadd9ea768620b871174dd255d13dfe30ee47facd311c150c2242e7cded37be64730b8b6ad31c097b415fe69d126c331ebb7363e0e26d0669f2fc13c84b451ae49eb5ee00ea0ff6b6aedc81b58bd6f0d2a8b6c9b9b6542fdf1ee3e3b3f714250d4fd6e4aab2419651d94a9acd73949188a59f5afc23d60eb63bf03956a88a6c36600cdc3bb52864f4054a3e7ca4628fa4ab16baab01318151420740d11bbe3f063bfa6f655ec6ddc443d0b9f4991ec0c693db6c38a9b873add64227b081dd308511e039a7e09673779a1fa5c558d4838a824c3956c1b546a5758f1a70eeb20bedd775c96de4b9a44039485097195df7621c7b9e2f0d80517df35a0eae3670adb8edee054c40b3f6a63b0627e540f4a7f12b24f7f2f80b09f03b63f0b4ce79e566b41d0dfe5034958dc15930cda1ca283bf3157278298dd37694676468f4b5042c7db3bb7d7f7656a5bcd1e84158286f18d01d33b42a588f6c97ece142b5b6aa95ae03779622c0e5dc0232cf0bc1273b8a507f213aecdd37328c5b0018f7a721d572dc3c6774d9ff5473125ff0e9fa7d1872eb17f92307b561e62f632d29c13ff95a4ea570feb762e76ad13707f36f565f4b20e69b58961716e4d183667d574120130ef6d44dd299f87589786bbe1f0a83ce12916948da21049e53875fd22734d7fbd15e03923ea66702ce9f2ba411b37231208c8bf542d2dd224eb666cfe7f8f9856b94f7ab585d90576320a44fada1c6c112e8480b738293f7020fd8f5cfae2a37dfed42adde22dec497419d77a6e53085705044c93d97d94b3e73e10d481345bcbbd497a57bf5071dd1b4bfd7e47463b3eb5b1c0959c74bc588af5998d0952d0ff3d1e744beddd746643cf0024e34bd242da4d149ff41d441dba77c786a0f268a7cf7cbb284c10c0a1ba216113688076a6eb8a0ea030d5813c7d6b8ba95e71c3658385cb0df79d1d7223684ef719a3a8cb81d63a40456d318e8e4f74f06a1ef63698ae1f49c4d8dc2d7bd07bafe8f04a5c4dde25343241e6dcb0cdf1faba0f6343858139fd5aac61a323089c76bb10695ef6c4cc00870da573a9bfb96791572d68a81f5f59152ad76bbbb0b9ad0f93297f6fdcc073d651f9002e47c42dca0ac62f2e95e61b03c30a3fd7ceb5a067d975da7dc08deea9cacb1103f6c91b8071f591057b4b4be4e39427170d0464256b176471ce2d29e55e878afdb42a230dd9cf400095ce7da8d6ec2219958283aee7ccf22e6bd81817b752571f2e63dcf86cfcfeec36bce804f80a6a584a525a89c65cda1ba34b2a5b715a1c29cd15278c4a46b2c97a5a7b6c1ccccaa2c8331184ff93f31fc67e860a46f71ee23cfcb4328c6d8cda2d1bb22f34cd8b7e14fb64945c5aec155c9f7feb7e92de19604d8da845dd6fa348374f078bf7f2e34fd2a4eb1c7964305f1eae95a440a437ec08d0ac6d6823d995cc69264aff0eba63e2c681a8e50071d3683d05b9b7f60903e477ef29457f2478bb33676d8783d8aae326e7f5dca0f7e69166681f6e0f648c70760ddda6b587eb1b04e64c6119997041e6ca5a1b2284c508b6f8e7cd51d076ffbe70c1348fb30fe161a8c0f090af65ce17e149704f253d2a451f6c6396abc4eadf466b8388aec60dbe6623b405d9d9bb4f3e937f1aeab03f595f54df28b5b05fd1893916f0269fa9fa3a47d984c0ef6774113caa312e6ab85d515d36e4a3e0c60bb06c945948fe9aad9852b90750765da4f289d50034a8ab3c87c433c02eaa726c7e7954a43ec5c41dd32aaa1f6e704aca38b16126e4e9ae439ec972fafcde6d3463a86ef776fbbec145ad8617df419bb42cfab7506cbedf07cae760f92a5cace876a38d8f5810830fea6f324766fa0758e9e3f9d349899117c0d7a19c5c10b5850883b8b6736c915140007a8f0d9005f89e7d5a72eb25bd4a586ca09fa7c9c1e1f54ef8dd6f480da0e45db5740c34ecdd9f72bf873804a6cd9a8b399fb141116940bf00ce3041abcb5ff4c2d57b5aaa3d920cf849b9ad5beb6083a8b9d0a6d616600af5a53ef71c70cac655d57ca48edc1399919e5d29cfa5d14f10b055a31aa8b98a5c097033cd1e8015439573080b638267afc48d03091f782a9200c28db0945603c5c42c2ccdadca515b496e846b36e308a1ee1c8ff7be2a79af89b0cf0cc968b5821250eab20d561cef2242a4c21476fb54950d56b353cd10c0e8a09b94fe5cd328e8e0ebdcb1c82fe9bf2ec3ab4756651d68e8433f2c8c42c6e42a50c4bc9f56d67050828b759cf9b9bd148d0fea8d517e67aca31f33f72d1f24f9f5b3e2baa8cc4ddf94f2ba3d88a871f6e8129954303202ccea8ab144e25dcd211ac124d1d76cad9e2211d467a3275f94955c1e361b0f8eb65ce71359dcdaf3f21fc446acb15447c377833e1b2818a4e17ed365cadf14d919618f2ce92b89f2b0f27a1e87d481fd86fef0f3ff0fa57fa5c5b8f5c528e9a5927fa32005842da71125a59d376e7414ba5f3768d926021911a9df49b129b47f1c60f58c9bf6cb149a383c8cd9ea467c30cd1906ea3ba32f9ef02adc8d853952e53d40bfe2c6af91fadd051da24ba3e61acc917129ee02161ce162c41149f69ea8979d78f529becfe3ab7d04b765041605fbfcd8de5c4383b1c082a3d64bf1be0ac3f038af7e101d6d4e29166cebc896bcbb24e8a2b4b0239e979bd3d6dd6db9709a18bd31484deac478ac6461a5e56a406f050eec49fbb15a50fecd87f8debbf5f371635f0fb7944e2947c902473849bcd8ead924387d494264f0c51cf7cd6fdf0c2d374742018d702abc9f688678f1d88f6335b68118f4f46bedc951612533532f68e7af2b6d014fea2ae344cf6f8548ca69ebb118433b55c19d02afe29d973f1493268da92668c71588122d74d4deb2ba7a4aa6635b4f4839ca909f29de1f7a2f6feee8cc893427687ba6f1c70a1cd3e01ba8fb5dd590474a5904b67c09ab4454d4cf2d5c8903d411748e155a31b1fbfe63e37efdb2dee8f637c6c925d54180b3a4f86d0dfaa4e8390014a2c985933f2071a376da05898d8e9a1c997c85fca215559bbfab52ca5f956eb61c6ad75d3ee92f6fe397597021c90298cabde361f532b4d6d7f80902d379b0b432ac3b6bc8de816f822a3d8cdfec461970fc604d31c82763fc02ae9d3420bba5d94286c8639e2a07fdc25516fcca8bbf5388a7da948951c7e4286bbfc1a2d24ca9d922ef6f2575b1dfa7bc109b5a9bcdd6c2aa958951c5b6e3859013e1ba4eab9d957c921932be17fd14415e42fcb4c43cbf09fa762c7b1f61cec957685f397d11c1f0eac09233827dfb462f2da86f766f5cc8e796414db283255219e87c3c44fb4c2b330cbba0f4d2458684d3027b6e5e7a5d4a9563d320e9707d4fee3d87de525f87943e6f10c4dd505a26270a0587793bc5bd718bd688299435ca39d329c29d7da1668214a1b97a7271689dd3ec4704026d4b49b80ab78a9ea9b7afe8ede12c2b2785aceb9633e338f490a3d9433523d81b58fa926230d28b1d025368d3d0ac1bcde5a7f02e403181a3b936bb068991c7ced36e6195649503884365164b7893e71a9ee4d26773e52fbbdf40097310f20495ffc177ff8b6bcf276949b1cc969301baba9edea7ad14cb547eadcda122d7acf9a9be0af814987998662aa8ef46b9be901c71b78ceb782c5f520ba2cda685bab6999c61821f536126d92338f24accccf2edda54f22ab18c9062df1ba89037168ececc142e0143c9b8eae93759a809873caf30c8dfb20bda24fc29d5a105f860d45582feb667b2dded913f5f1d079c9c0c9068962fd35f77cb2c31072911f50ac9329af462734abb1645fe13bc2b3f5e9d9ba996eaee7a758a70862728ccea17626aa113bd1a91206070d43b7e22d20110018679eb068f86ecdb0dcf6c557930a76872c2cc0f43cb6a59ea06b0a3de5a04a1beb279d397fe92400d6ecbedb3982358481fcd103a53e6a3207d6c18dcca97fda2a853555d046e742c89cbe8ddb45109dce1a6565bb877718f26d31ca0f2eaf55b9c2b34045169a494d18676d844697fc188c888a3179706be9819db63777d7de0780f45003d44ba341c09ef48e3b3dda3cd3cb147240834ebd5f3c221c096a7cdc0b14bd74cd2b558c47eb9c130cba62f79eafefa7bd439bf2daa4ae20ee43357005b63e9ae5b658d54a52263ae02b37d405b7f7b186b124b1d7ce4985a269bb408390e477165c62056f025981de1f8b62df3f30431f503c8cb1f0b9fce39e9558bbe8d98f2c7da0d9e682b784854607cfa27a18dd4c60fe6e78b9a965855ab79d932c27555ac41df4708b32935b2501e7ae09495b71070dcbd42782052eeebdb409fd5ff246a305f025b053b5675886c697111793df517c68ac1d30e5f14f52487e21f61d12046bf1b845c3136e295b8cd58b571cbf2406b519dc35de37dae700335f9718579437bccefde1441dd006e94f5cbab3cb58d5218acbfbb5d1b247bf665413aabe299d279b348ee1c197c8fa9df534c4a6b90368e7f77c202b0ac9b5dddb6542dd6de51c53f87a9511a3e6e1e55308330ca9625e3c35f0aeed28cb6409281a888cfc6286031c4cb0e73af34d6fb2bf31a67b81eb0c399df7ba06538cb2d827dc604ad6bf721efaac9f8c10f963a0f566934b831dfe2b4d080d4123bde518ebeadbed70ee226c5467020ca280361b7a3937a026fb35163e15a60bfeca41501cdc45805458090d0c1b522a152f58913ad4be17a0b47fc6f2daaad3726a4ae14f84fe408a8a172ef99659e5c79390e4c30ecb90688bcaaf1febe02b43ec27375d81a15916e379eac51ff0436d03af3f28b3be9469a575540bd7eee8b37bda52e9a864304e12ba9e9a7713a130107b53169d07770ed8b4997f930403c94ca6288a519feede3a98173dbdbc764b77bc91f0f9883df335b25ea59daf878caa470388ff7ef8c8f831095cb90e2629e858b5a3051fddcfc7f3bd640397d63faf369946e140ea1c56a6cbef6d7591fb8d3af693499c0f5316f469eee0d65d73a7829fdeb55ad3bb7b8614b4363450192c5242283289b2cc5a7eea6f94e67a33ba85daf6f7799445a220e3b42dd3329d5180ae69b891ab8fea9ea177f1f3ab34cd7189f894b6f94ff0edb7d34c7f53aaa1f7a32fa110c0d44397aa2ca4134a40e22acc1ec892918ace6dcae94d90735f93280f5bd676f4c2526558a34b550bd163dd874b6d418538657807b39e4a5ccac22cdb66830d7929e2d766b5aa157ed1a8845fb36c04d5cbea984a6a8380366354b9d36e6bdef85af1095e563b4dc710f4a8e92e71a48d0972d8bb438f0b52521af1b7c026200db598b80b2849e9b15a25e085976e318c4ec04439f8fda5922c5a6972b5129459b721caff3480896cf00c36b7ef5f03aeab2e1e611fb501e103102b0c8fa86da0e67ea07b0fcb1a55f42d1f3cb89d3be36bc675ff402e015933b74d31b6bb4dab7173a2b40cf3bb092278934a0e307d43d3c92743dda4387c02272b27fb61e3a249e046db900d5f61c97ce420a9af09a0d4bcac5f38eaaaafbb84714aeda74827d661dcf6f6f1a33763749611a792e16973ae7854b1a2dbd89e09c44b2744e73c680bbad21cf6aaeb30859cfcf56396b6cb80a129a0f0f67c8d30da719f2c7fef3c52bb9a4553bbe3de19c9fee0e295d55f68976fa5e10b777d543a80d2540a1d4f08d275908fe4203f7b3888be86383b36b8ec32851d830fbb68abe409ddb313e7610c7e8bf05e45f6ac7edcda7f1a914b59dc16a61b7d673764856ce894b44b2ed9444d3ded169edcd659606b021fe62f8aad886e9b3dead8a8b2d42ef34d4d6622174b48bb941781e0ae16d87a43042479060539fc3221c6e060fade2ebb938751fc841d17f998e1a5baa4f05c13db528506c9ea7558e0fe76e6dcdb2ed58d30d7769cd6ed578b5e9b2b8a486ace2e15aed4c0a3b13a1da534f96dc6fd4802adadfa16733feb492b61d70de4c946256a7e9cf784fbbd210883b7534b60f7e3a383ea86a4b67f5f03a1e4e218183131edd9c8be535756ac88a37dfd6ca8693bc4f5e9dbb036f484bbccc826940b73298ea356235211e57f94bb5177e0a414a59015172d823d4904d623309e68c4deb78edca558885b06add5077a436eac53edbd8c90af908b0b370b05ebca77264d5cde189f10e4f8541c610216ebb2533028bd281dc0584e052b1e6e36f1dd8a5c966b0aa3fdbc787d1f6255e6015f98d3178b91d243b201d00696a44032a9eb64837fd6aa4ab458fda932f5b8f8dcd74c330d7dc7cde5a33fec0eb017b8fc1f3267e405c838a64a6069aaedea0db527e6f434be7b5e86d225ff7c36e01fe555bdb3764fa88c7d7af103e4d88e631b399b921e486a1ebc8724f28ddb7496e8f42e1da461c7a0e6bdc73a6d37ed1fd9229c0e874d9a2f2be5a94e60e25ba055c663838822165217a7f0940fea10c5d0d16cf75bb8c95c6a11899d19fd5b8514a66cf8fba58660baf2d8a3fc83421c41aaefd0f3a8c6bbe232c61e07997ac6b9952d5d01de3feed944011a1a1b425b637c34b459c357020192898333b46dd37131b2d9e1903d6a4aea1cc49a69a7dbc25ff5ca61843933cd29866bfed9d882ab0eb15b18df3cba364e6766339cc2bba6886b5732dfe348109f5a5a1bbfe5d4ab1199ca1660cba46394e0697600b372b334188b8710a824927345cff06113badadaad0275b331a4d5816018f84d81c3a1c4379b59310b5821feed0c435be6fe87058327ffdca467689211a894af3cb5c15cca2c1db3055b2321a326f21aff729df40f648b72364f3dcd2c42d5d1d27e84bcba97c68e0f344c6921212dce7c967a26e930269d022a5bc7c630dbf6164a922132b72932ad6bef2764739fdfc0220b8b9acba5a5f6a38ce11208b50f4f0159a0a6ae4396aa6c05bdcaa6163868ca599a33819cee80675758ce271bedc8e9476ceefb3e5d22b27f3e30f6c78dd45aa45ec9f3d7962c0433c49beb5bc6ac0b673a5b70d782f8a54b4d9118d934c0bbf51407835a7ca2b8fce01a26a7beaaf1c95c45fb8f2a08ede1e27657c24bd2ec05eb03b3f77ffbb3a24226d4922cac15cca36bae81a0bb4a083530a4ffed51f239c4790c82468e96edc9f22bca7ae4cee89dcd41c823fdf129e3e680feae6e9bf08aa378071c8b12670a3f66f49f133dac89fd742536eae87f2b09e4992774b20c65f563bcda0c622eff625d53e210df6d00ea45bba7b259fb241640e4d5a4677af03310b96c517070deb11542e64c5e645b740ff265c8d86a739a44ddf81da060dc947e2b68f0e2e95a31c67fd25db556022d38706eed79d0f7672117b2f0141019f937fb8f77a9549d9cc9c814bd9c6937fca13d1f907e8cdee7f72e8ad10764502cbddec05ae50f0600a57b4d0cc0530af0a00eb52a313f8e5b22d551d50a695f02d22126fd9eed3f153163d46486e24fa83264b1a548e08df56f4f104ad812ba59b24500beb009257a81f0e958a8f13b5e1350360883b043f85162e39075c2d67dcc306dc66946f2237f57583f995716d953da016bba12e51fc36afb08e3349c71bb84f1f7202b4d197da92181f7b1cd457ebdde2940c7353d6ca8c7a8d54e0f6bf48a2c2c4fc626840a3c18aa64928528b9ebdbfda5976e88cc0fb44c98910cd6b40773c9a2e9a2f8b725da4bf4c7e854e47dac01a715e32b61f9adc886a196514dd722463958fc9e9bb438b5abeca0843ed5fab12185cc4d4aef95c2aefc26370149a27af8673787684be550beb68f952540b0e98e53b51d41ab5b4ca8815934eba1ca24650d48a1e5ef35dc9b0b4d5bc56c276faddd04ce5334c89dee407a011702b82a32b02afd7d5160f5813020819171b8a65350412a3e7bd5d3109f7b33120785eefd576a777f8d84a8da1f1cff0867f3b19fd807539b08aad0581a7309d689253a998e771833dd323b003a08557a143c8cbe343de5ca08a21f9790670642676f72219ffc0f032ea7c2b6f83da88d6feb7e7ec29753384491f30eac38473aebe3750f6954151366654a5f475a0c9b6224ff9b39dc2a1065a61cf66c8cb7d21d22da3c42708897ea0cab330431cb42b21ce3431cee6d2b54fbf416ca454fcf05c6bcc4210a9caa9a7556572a4fd837dc4f4b70621db1e10d55fb71e8fabb1c0c4218db407f54e208ebe6924281175aec8838d5069233287f07b3f6b82affbddc931a2d28c05dd39b3e2145c9baa84625276d70684c4437a26cbf308a228ab1f1f3c543ef5cbbe86d302174d8e4cbe77f0b08031df287fa04336c817822d73c2609de303cdf4419656a8a99db3e76bebeec4c43e660a9b231f3a1611f22d9bd7438712d618fc90437d921651aea66cd48a795cf058270b3bf03be4cd08ab546d3a9e0592dd5d251283c19e4d54be386bc012d177aa5af3489bc2b3c228d20274fcbfaf856f435b24c8bb20ed03d68135f5fba2fdf8cb873297669a77118fc701c9392e73eb3cafd9f9710c1b7993defff93cd99308161985f988ec675a98340925edf8569cca444541485118736214e629903c0c0e939946eefa415383f25fdd19094b3006bb22c1f12308317f3586044e1e9871be1748d1e3e019f65fa4333bfbee1c263c6fa0f8c345b6a785aa53e1f64c74ab719cebec2c99b67ca6bb86e038b9d796e16c496b255fcd4e9ecfc1208243bbde78a7750f5d4f9d87d30a40c395e543f545747bd81460e305eeff1218459cfecde810e7bbaa9191b4a930cde5b739a1d8e7d0bd02069fd001416cd0322a72f9ec34969509a50345db00f52deef86f71f7afc51b45a33111c11b7759c3c9d59a642ce355e626349bbf6c0249bf477234ac75a0a573dda58864beae43417376a8b3b891f3173208d2564b1911f847e7b89da6b967c75f9f24b8ca90d2f93174a5c1942e48b91244acc3d224fc4d78b850e162d875e6406a0569387772ca6aeed97b5c3e8cccbf3c58dc3b1c5708274fef19b2702380fe9e4018c6e806bc62656d50a9dcae20d3b1e6e8de59a7af2c32baa686d949d7c49b718db91b3f3a236b16db9d0952215ac314c85baa98db60b59e3f687cf11783e9b83419edc0fd192394ddd3750ba700c21d61c0197f365582b17037c0d9663a9130d6efc2e3a3a749865fbdeb359f9aec088f396aa829897f870d24f1a2a9b33d4cdda43d243257a59baf36c27cfe610756f5bb764249965a3d2ee06beb6c98c41251c4edd48888731b86fd79cff5cc94895dd64deb7f09fcc1324a97aac565352ad04e7ea0ef2317759b0f032d87043e8f5d09ae9d0b7505c5c661076419fabd8fe59ef741aae442a458d592d2957f1c2142b4b9503c902abf84fd84fe0515b88f71289656557af21258f3397f78ac927359ebcc331bf311d6f2ffc8da97d6ffd56f617cf6bd6ec88d14c0a8e704e61a74c5e96e4059b416c94679c7945eb43e73030671cab8728b0708de40867096c3209c3aa0d552fa2b8861abc137af96f9ffdd72ad0b9345f598b2a6cac297b9dd41d6eb7e4c7f38d2726f497612d0609112f01aecf9faf3394508a19a56f4bbd9904f01dc8f47b28f157e7f2e4580e4254a9caae7d0fe668dda2beea8c232f0030ba9a0551aa779820e7258818084ebb160fd4a66d6183f3d47e2aab6696d691fcf5a387d134ea12503603518453222741a575966d82b0bac6c0663cf600070355b5e8ecd8e68f97ed494333a567821f8ca1443a0f85a860e8993604fe0d7fef79a26d4d07ae47f6a6448da3fe5615124c24e6f7af3f6ae6c0605e5717a4c98685ad58158a0479a6a8966678262e4b0b4ee8daa14f6c6cc1053110270db55af1e8a8c6e0c733c31b1e322724b74539ceb5bd9470f654645338eda2999c454a8810373744ec9c1262af749661b7978f0b46eef4eb094eb63e5fc0982c1e64e256f19fe300a423f78e55d402e8011e02fb87c5dc376ab17ed35dffa822799112494aec0e6521c5c43bc2ecbf6af1103769938eba52732eb7da21b731bfeee8bc27656c85a74ae0cc91fd52e560795a7c13769122047dc3839713116752505e5cd66647c3f2695845368e03e790fd280e05f48d3b6b9dd789f50b561e31058114dcd70f0031342bcbe40611d18a85cce284a6729113bb370c8b64f013f9c3d8463455204f2b70944aed646dd059163833b77efaad76ba4148c74ec1ac262852001f92719a6d5269c8c1c8c06f7ea1f89552aef312afa0435e7dda29baaf6f35a364ae70e5f969698ac25a81af2491f074b3acbea6177af8b2425474fc6c665f78b2312b209128e9594a7000c0780dfd3e6c135c6a84d8380dcfba8ddb5d18427daf05f0d602c40eb28879556fc7d727ab50991a21e768532dd0489af43db8ecdb85c08c9d059c1c6088dd3dbbe1cdbe3a04b1556bff42eeb7c89c0438800b2a5b7a3c056cc13b52e7704263f6acd6d022b89d225db98a5713ca124e48b3382a30a4bb99d8e46841885ce8349f1570dcd348d0da664fa189820952bab4903e8840a004f4ea4245daa07b7d3295c4f6d7e942617069ddfc2c7386476caae73b7c54350de501a03130bcacb63c8e42098f2272d75b5a2d9391c50275173a631d7e44f6d60606392b40694f7314acf5108f6e258f2024145fbdad212bb9710003f72e34cd07fdf0df565841a9073c961bd4cd8e3030c9fec9616a094052d059d67cf415f0829ffc64060d3c2fe83ac97c763d2a4ba1171ab0ee9b7fe5c269af2fb2422d37350d245545bab2b97fb4fba30ef3a8adac00fbf56e19601dfa51cb5a691f21693175e1182b6813a4ac9eb86ff9d64d5c07e5c8e3f4561b89f298951d9b8b314a6d5acc14ed4db06a2080a7acaae6973ba2166b9f64533e56ea58ae7d64a0f73007fd2f9519eda60dc483375fea5959f97ce6d65ee4a801fd6b53997c829d91a91d03b858793505044fd8911c37c4af3b979d15e4e8f0dfeb40e0e3d4148c5402aae107a6a055d6bc50c6702fb560fbe3bf886fc104ed6eef73502d3dbe3abe80389682d18e6e14c96022aba910cb27fa678516d5691cf1ee6f6964d8ca4b1ad7f7df0b0a6c7b363caa1767ca71e219a87e7ce31e1efcbf164208d32c3d3747ac770604404e65615fd1dc945b2d902a19bbef361cae66235514ae044d3545a5c225e80541a86d8b2f27dc7a21062b786a4c9a4f2d8ad7d64ef5bd6ba2c0e9828cf3eba780f3dde08796571b1c0f2dbb864531de60955e972b4f92e9482641a8cef3e73bf12deb1f194fcf75e93e71200096a8b80ca0826919c96df36677993c8f3c78d586c75c3e27565580f9b72022d876515c0be19c3be1c21f8cfeeb186dd91c458c618a55ca76b3a7084e8671526d1eb3f3ab3c00b4ba89a21cb6251645c6fbca7625d03455728b053c951d60a65ca65527978d7a1db05d53ba37356f3639d5372a422540970ac419e26e5ce164262a15e8204772b1c3ac8f5519edc8aec59dc1267bdd614d8699c0e8622ba2635bfd3746d0f7a2c48f8e6eb3a31e55cee74604c838ca977c9686a8d9264521d917b7c45c3eafac0ca31373ba1221e79c41ce471a6b77c846f018b3ef3e57939799151b8423e879b5e47d3e39d7b9ab0cafcf7c7f26c201554009c8b3f568042c73dd59dd8ac24fae800a9819fd72ee70250320b09ffb909874936a8c623b8705ffb605fc79400d3f34186921d8a59e37f5f401600fb4a8e00512e8488806ab4b986a6d0c309d3505980dd088f950522893157d696b20bbf0030a94f0b239fee2cd21915881ecb9dd8521d98b8766858a9bb7c7883d6df5a87a0b357df94631c319c54b664fbb9d9fd81824dcbd27d6479b72ce1f5dd6bc30b1370e90d6ebab67a1954066920980166df6e72061a74801631da862cf44454984386e922a61268696a66a668fe2a5b627af1a61fd27205ba9dadb9d662469dc5ee45e0df346c0117c00d34ccc3d60da78a2f2eeb5c638e1469073838c3d5f2b852d6034257c88571eb3de95074cba06b2c132512c02033c8dc4d2d13ff38eea3fbe9a44bd21a88bf77bba5826e317f393c314bc355b513e7974fd1c56e5d8bef0007eb59e36e683547da8f23890802b430b49f5b07690fb97eede1f18df397acd28df448e8c8cd827055fc37ca9e2f5e89ca094f6bbc90642a06465c89968ff1f17715f3d8d4b0f1a1efc303a30334bbfa140d95621e21c777190eada0a05bbbec0bcecf33f131373b236a5ed7a12ddb17acb441e929fcc94942674edbf8027ea756f5b833bfd2b5f0a26c05ddfd17520daabf6959045e8612dfadaed85b6bd08a62d07d145a5483009fd637f43e02968a89e7bd4a378434248f4d5577fb2e889f6ebde01b9603e7ec41ed6d062437c292398bcfe14fc678aeb82bfce54aecc31f79afaa2e97cae94e8763ed3f504cc7e88c19aae2c4be2912478a1d58e12358417f44173dc4dad9d9f38905f7733f656be765fea82d1e773bb0e71711cf94eb026993afc080a7e7cd56058665b710b2b6467aee2e9fa83dfdcd31d7ea32564e29976dcb93958575723ff873151f5d8d011262fe242169eef6d9604b8da0f63624b1d1241c91e4a941067aece72f80007ec71e27628410210266eb7040c9ac1a1a267647ed282ad97b8a7c656b3fa49c2986882f11d23fe53a1b7a63e3327082135e2e514530f3504352350b44ee0e4f59915327c44740b59574ce41d6fe3038693f82ce9ff8285e324eda25061480c22d04fcd341f4eafb15e9fbc081100957952a718daca383b89d5e2cc1ac97dc504b7aa2b2ad35dbb983f968aa2c0b85effb1c0c89de8ee6884bd39425de2e08c72ddc22858c86834ad7174a9e46c2a5abae6d0ec5d25a1bf228cd38240587b3d8cef054a849294c84f6c939340c4477412585d4faf6c8aa1858cf508faae09e0a561c9db089b76ade3c7d8a913c0196bd4f02669de595d3de18a739bea5b40976f2b2bb746cb3a914e8f5387983b88925f6f82b9685d77c50eeeb9fb52ccba91ddd60f214da96a2034d0f8d9adc2f99d7e53e9335c2e71537c207db934d2bbf34cfdfa3f8cbc9c135299dcbdc0d809d4f3503dcb769118384cf179402ec9f29870d236ef90387fd283c6d1a9fda856999bac708640e2b87e4c5070c24a165e10b9f16a650cb3a2a74df197bc1866957206925674f3cab74931695dbca88d7503bb62f100b44e22520c008e5cdb9114e8208e15f9ba246019770bcf03decf2373100c6c69af07145c0a51a079ea6ed10afece237e7a60545cfd81bd1aeaf18762ae1cfbe957e844602b1f723c13b3c476f5dd9204731faba80fff9a83c84b40e2cfd019f34845efdbf25025bf94975d50b9736e5e990af2b18c5f896df91b88f510fc0044a9deeb20e673757f8595ac21744e1e3f1d2842820c08c6bf10b99ec1821cbf89763e59808e20827b156b18836f68f76c665b1b3a3ab60b8e94a7c3b07ed4188a8c5b355f76ede5100677ab747f384cf6b604da356b1df43453df30892de994929d0dfdaa412533fc8788b96fbce8ba91c9c865ca820a9e0e0d5119251852eae88d07f7764a014f49dff5d9f9e8248dd4cb2859b50b870f561a634e2b1a49ba46f574864ad8d1c8543503488c845b279081c7a4bdcc2a4ab3c001457b6e77c9dd787c4d6e78ccc939539c6abcb89b16c04f538a4914574d14db77297b678259c26303ceaefbabdd84d8a6d40f81448448585d21a7fd8313de7d627f795aca6f3a93da64a674428732459a0258b3beb53c38f5b2cb84c7cb74538a6095c978ae4d7cc3e93887360a8e435b182ca94b5a886908b52139f124d6a1c232a8629e6386137f4e4553393a6c8409ba4d73beac660234a3b0dd1514ea018a383a365da4662933ef00fedbf86003fd7bf0cd0db4d116a35eb2c2b701f3d7ca656977155b6ab63ec7c3f1538443d739db9fb8ea91e45cf867ea43b1f9d74c71f722f9ddc5b268771c71d52aa0263074f4fe59b0fee9f8eb0dc9949c5a3fecae8657a715d502c67bbc4b9d5b4e664cdb84b3226059c9139d71d2aad6347682cf055d1b768b3502b3a8eb38c78c9926a4e0a69577308edca107eb103ba3ad5d23e3e8022fab609ef856f9351dededd7c07804783657071c0aa0802f10b1dec38790f9a3c68fcbf6866fe5e4030914b8818e6a255e0cf24e3c3186e6376a762236b21044f94fe2d5a6c396f75ebca09c208560b76e95307679c19447c0adb3c43ecc54c93358f2a18e14502f0280c7d72d83cb86445fa041e4c32dddd2cf855ea6535c36952e1bf9a48b1aaa8d8da8d0945a83b297265b450b0e1c7aa21642eb775e986a6852f8a29e1251fae90bfff462bd9022402caaf264faae8f04c0ae6db243b7cc43701dfc4b748ca669d65c4fdebcb46fd9f2da5ff3ace3cd17a633b9dd0f6b55f04724f4253b57c774fad2bb4dc209eb9c0b8e7e03833dc46d52155b8c1c13fb9b29aa3ad99a7cc5fd938350cc2b74500d7f93f5bb8aa74a08b9ee40f11cc0720ab33b1aad217ca3e6a1988e516ee3664db68d3d6f693cbeaddd62a629ee4aeeacd159c3e784ca56b5f25e7668c7fa0ea536a5f01a0383cbc21ed939b10f99c9566b8638175f4599a6e5cf87ed2f63b3310e175ba7dd31532a359b5e11dc5be23152d64d1967f643b751dd1280d53621e5a23bffc4cee7709ad68ce6eb2199e9533ea19a81dfba9a8a1adcbfe28f90c4c58b80275207cf90e26ae0ff76f8996018cb8fc459bd16c7cc473ddf358ca7ab28431df194933d50e72d376bfa4edd7fb1a2362a896a19744eccc7afb7f70617aa194c7cb3673cd4405a1b70776772baf6586e8853b01418be8ebcab71b85c574a53e426f7eb89bc0df55bc2d13b0e29ac869dbece84eaece87e0a1ca25572ea3771191b7b3b178911adf13dd574101bed663d5dd43dbab154c3ad2fde20e8cab03ef0f22cc5463d4a91680625f7544cc607eccef9e1f85b799daf11c6b6f3d6f13086753ada667541de4353bdab16fb1b912d3d10296d6a0633dada5af972efb90e981a71b9eb9ecd2ebb2c3866781a64e4318d217aa880330b0f958b21563448c9f755606851e0fd70dbedd7022ee2d95fcf1512ad37e8ab2f973a1da007d82df6573a0879cab3dd12c38ef87e565457c06406ab5329bc8ff3059ae78c39c349855f5b458682bd10184255855bfa5e0b3b8e2813d4edb2c5624a4aa7187bb9a9a603a4dfea33e5e39dda8c78f20aa4460008650dcc5c396bbd412543f34dff14d76ba7c29ebc1938455b83b24d9591ed44f7c428fe026810d53579eaaa7723b258325d5a3e47d2bc8ec6bc815d245bb511bac5486edca4371e2f120bd87465c13d84a4f72ebc8ec99e3c10be83098d851fcca389b11ca8b9f1f9967612ca5e8604d6acc7f2cc2ea9bdcb05f67f44b5867e4e33f6fd0acf7edc298e75f3af889d12b7608f5aab6ba3b92924ea58d2322648d459ecaeca409c9901a7d25b93f72586bdcdcc3e474f29fcda37e61fddd134c62145520359ba1a040f68c52ed211c6302ec97b36777f9bdc4bd2980e396047fbbf2be56a618a6cd19cc3941843f3341e4e4b16638d6c76e616ea24e09e2b47cae638e7833d4891c0a93f5fdad861db6fb8feca68cba714526a4492bc5bada14ac72956cb75e43b1a5b0b07088f4cf6cca4695fdeb0f5e4f34f412f626b1a8eabc9734de057e04c0ff39a774990b53303a39a47283e5b057e48ba2d01b158121191077065b8d9af4b500823af9d7e821fd9dee3fe124b6387fc0159004e82e37053adce71717a4d1c7afd6985a7bf155f3e70aeb081496869a60475cd1cb0cbd13e2c627ab7d24d12c0e0135c78194e14152e111d756cfb2b6715716264dc2191f2f5d53331f7f5d3ffcb8f9897b3679c44e683d95bab83f9ac7ce3db18d818975c912a159ac833022423ace72383fdb86902daed98dc3af2ace962e69a46bde23d87c2ff0cdd1d714c8f892bbcca444608baf934f9fb0f0a1b5ec318ab0e57ee720ad2290af46ccafbf127f937a96443732085449b45a2e6b3698057f640c39d464b3ddf8451814d09caa2a50f8280ef5813e568cec6e5752c2aab2d438838f9c023bfaf2d08cd282095f5af2ac3b21310436dc537cab472a8350d923c0bce88ea7108b886decd34d238396a995538bcbcbcd59216d4aa40b249d49da246fcc13a674169e309bf858e0f83e4f9f3f5ce4987989f5cc2af56b1f0dcc4d1f347caa6037610276ff37b401247df6e72e97eb3984aa7e83e97454cde07b70039170e7cc5e388000396c5b5785b8c7fc16917ef7fd4c48c610d130b04a65a939c1c52b3a4a9d656b51d06fcce7da010a3931542bea0dea0e198acd5e28045bbae5a4952d64bf6bf9bfc6e6ad9d1e6d4660db908ca2d0e19df2b527af88f347f343bcba507fdaea2b55a87bcc0d9aaaf6a80837908c025d5061ece2e7c17c7aab18dfa17d65969516cb42c29a88843c93baecce8290eec23f2a852370cfc828302f3b37db8363c48d06c74cd1e6fc7e38f32b1ac8a5f1d61e49f33dc9df426be05e523afa4f222fc16a543a8caae94b2ed6d47995ab83abcbe390b13d2a9567039aac7a35b42ab7d1f4a0bf7aad50aa13c4142e39d5ebc893c9c5d61b55320ac9fa6d459867e1993a1f6a67de4c908664c75d0bc19dcd7a797f127d6284a692202a69aa1855a6caf8e1e43ac6c39ed73c425a30acd36de42670f0fcf8bde35550085f27f6b2137d383935e8ebdb4e2de6a550ab36e06272ad8231c83ec720e92d6efa74f5d43eca7d943586dd9de57ee8b4457c54ae1b2d3a7a7ef3718fae868d7cc891adcecef68696f980ac4807a54cc9d5c2861936c0a088c84429ba23e04685ac0a166ba3f9e6105ea7988690e26d7d930d387eb5c52ac926a60191001f0fe7c4371d8a552f5517d67355e1b7fd330d9fd29bac6b6770b2440b75bf04b0fae0bb9f508d59f0bf6a5c04bb794b89e0c92269b1cb29632f108a49e9417cc5eeee0b1f503687817ce9c25714367669273cf261636c9746782eb8746c57fae9cbbcdc81885760989541b41f6503c64f3f51fbd76422cdee89fbf69b3e506cfac39d55d5dee6b1ed0d580f169d712746600e5646d35a9d5ce852d4139f770f810d31913195c5d95d1dcfb0d8bb899ad247af0f38e99c5facb47a46c485c7522cd53c507042cd6763c3daf15c67b1c681270914d45d427849db63da779011caa000f36b65d2720ed89bd71fc714ec1bdeeb474b948cf23c5c1862ec17280c03b0bdb3aea9890f5e446c95e13978730df8a7d8b3af5df1d98a3667393e969095e6d8bc7da0adc6597e475ad06082544d25486469fa05ff3c7bfca0c4e7c1343141a092631a210db225e2d043fd1b322c804ed372b5e319512e150da27e2a80c939471bd3cf4f7f7e47cd89de502227156f6d33a3984694c2dcdc66881fe272b109898a53d2999d8d7bf383861b8ba5b0944941ba9a3c83e38363284a6b32cddaf1ea4bf79faa010cdb4b8878e28d8d53c3de77438b4dd9b1b04d9ac6daec874f050d616b11f53dd43575f741dc9c60186375554cd8abd87af06dc1c7a93875aedfe18f82ef6d926b54f19f0da00bc78acf062f943b91b1a76963e749fbe0edf269535a862d617d8a13e15ee23f0893555a2280815f5cf5bf5926264b3533bc5e2551eb479d8b6d779cc3d57bf026ba402a9c74f4b6dc8a20083003bf93e2efc98df2d5fc520c31a5049e5b0ebd51752c476bd5ed4da19c12d142a27cbf24d97fc078d3cee4d76ed068af6e91e540ea0858f74b4df6c0bce80d3be5cb9f19cef46755490e98897dbc63ed6c595e700e3c9f4e9e0b7fecabec645200c378382a2b25bdd1c7c13a99212cd69d15888ed2946bedc1a85d1bf65a0479bc46983a3fbdbc4d3c8c8be34e8e7b1fcd419f07543971742427251bdae4721bef9101ade56842a990e5160a1df3713731fbcc5fd7fef7a0911631492522d3877d2fc9ddafbc6273882e9c8e69aa21df9035ce9ab87f9614676105f071481dd1db284ee60c0a2f59be08cb9a91aca8a9493da3624604cf64b1ad05fe05a9f005ac96bc92422aa16d5fe0f48bd070429e2ba2372a292a91a96ad2781c766622a61fd0466e50d3bb63b3ffd7398f072f4d88adcafbfe16c23d1aeb9d513ddca845314168c5b4fd005ead7a21f888f7611f614d523b61d49ad4b96935819d3c71c7792f1734d200f0da3c3eedc3bc0c700f274c80761dddf6ef87994643502559a405a1f0faeb7c173095752bdc362321a6efce0110f130792ae78c6438b51bc147616d1f5dfa3272380ed40fdacc73b55bc213db39de87bf644b257b4271428f17ffb1fd236dd13a0e84b837f456345c9293d482879b414ace2f377b406a40808e8ce69485cde9b93294dddb7c5ab9b629127bf2a2bdd38695548ef6aa95d2992383426b3478c903980003395ff870a6b80033e053442c3e803efece35e99c0b65577c2999ae8cd0bba8c4bbc0fa99d8f1ddecdb5d80da6cbd6be1e89d5d737fad5d57a8ec163cad7cfcd8040725e189dfc1b147335c82d612532c4edef2ab2e03b42a74bc6ea895abe3f600e9da0514bb8443ff28724bba46ae5a6706edcd3ff01580600166d7bca79dcd5132182caee1ff1ceaa0bfe3888ad87e7385e8686a8941fdb5e71502e7f1242895ccba8a72f63e5ca2dfed28599c8de24f2fc85fc37518670618250322dc0025678de1fd20b5523eb89dc2dd024f83b26864c5348953bf70e9f80961bfff200390775e562d58cbde587faa2b3b5a9f08537b1aa15d861714d2e539c98540d4166ba148aa16afe7064d4080e43b8928de92f01f91da43418068207ad6a1b68a48b989269eec46dbddaf21d13bf4a4ad7d96471ae968879e1779b194b281157bf927e32c43aba2a0376d4473975a0109805a286d4564b4995311cd53efd0c2f1d8dd8fde16e9b22da2fc8757879fec6ddc09424a25d5b1736d3b62d9a5ee8188a94bda327a958ef0cacd5ac8f9f3c3c6ae1db6c75e1679565c31f50d93bf08a66b308e7f9e9b74868d2de8a519113f77070a719b231926bf920e22c58feca0b20ff670e7dbf211008f6bf5e0cc241a87bb176c67b21ddb594811374028ccbe7049c60fad47c7a2dcb95d46c24f02f465ea38843b828c0da051f742fc9901b5de9d2ffa49a64944ef59eae2dde5181b87aaf9f5c4d6b1874595eacfafd60fd66bcaef16cbde2b68cd34bd84eebe30a3f6b7034be9c32aa13f1547e06984fb65a4ab713b93b41887e97ef0713faa891dc3782b1a7bc3e731cd6058fed193c30efb213e1c3a7ef359ba9c1b60115a1a69f648cc6f14ecf7669af605218c2c59700c34556e5bb07a89a1bf45a473bbb29fa6fd2f2742369e090264cb3156ac6d9d67eee401b5ff212856893da884235b7a21a2a5d3182f1047a45dceec0039892904e1003210249262935a9ec211681ccaa5f1958d49553a8f62ec488f33b139058b2f1dd5aa6aa5473955b8c2c9f4f9fcc7ce6f9a2baccbbba152d0fe1f062dfe0027f9b5a0f2cc3c91590201437b4c26ec354a5735783047061ffaa3c2f9ab2ff2cd733234e0d6f54303bb3dd792089cd78887388daca3b9230c82c7b4377be77e26a4f2deedaf92cfbb379f1d099ce2f2bb2e380f632b3eb01eafda054f594b49c4dbdb4a8c80e636f63c8b9aa2c489715a714a4d2ea3b654cf15f6872f819c811e3f4c5090b82fdbc292aebb5af8940d88f30f1db1ebaeec9d854677e791be7e6a6ba7c26e3372235ede876e82b3c2a2d21a00a54f923a9def27c0d779cc56cba611ee356ec616e8feb7ac24be95e2b6b08ed3a64fb2f00935189472a971d59d0a6d359c4410367f2e1cfecd7341b281b25b0f6d922b98d158e1b878289f9afabdf3e7d1e3445b46b9b87a5a56e057731eab1d3f7220880243657b309c2b87aad724087c1e293512a135c5f74cbcad15a95ac69f363edd9d31dda96429c86cb6e96708465892fced2e8cabc6c73ef4b2e5ffc7765223efc9b798afa968be6e69ff18c8eee94f7f93be099ee11b59f8b63a2816ff3482098cea32f0d90e11d047d00825ddc3077cd135d380eab9a0594acfb319f6b75f2bd71a31cded114737213bb46bdf9fba87ae46e27d909c301076f9404d683cbf51c7fddbec22ede47c73199d083c7d724e582b549660d97b8341b7e0af25d4ae9f97d353bf7ec853aa4da2a442384f4280d8e627ff5b93cac5798c6a7c9c944ff26d1e5ada13064650c64f75a166b4d623276ec14a644d1c9d87fb6b71c8c40ad66adb75b5f131d8ef99e8b71089f92bf5fbc34be84823605c5ecc74356c126580bebcf6c237827935a8537aa7602207cd37a68f295291b0784367d04c9d8faefda5aee7f7071284eadef54e3e3dcd5df5344c5c01a20dfd8a92c680d9d13b86dd0d52f225a073fa7d0e9eefe4fbc30b8944c6301c88f92a3de16ed3f749b7739cfdb04a48c3e0e704988876abe5f4eeae0c516f455699cd8ea4ed3323623afe758fc1f6887492bad85dc7f8a380f231699cc77f0736ca66d432ba655eaa622f74672fcf033ea7762b290bc5ba7bcb11ffd89be795de354624377c2f379a143901af4877dc38036ec8bf02da05f1b68a7fcd64d1187d7c22609d4466ddeef59a92a27f7da037a338f4256765bd51899dedf0633434182295c94dfa2d713d6aa789575fc907497bee87596782519c0e65cae23b3b21b5f9536fbe6405372c503dc1c34534df6ad273f4fd6581a37e115f8541ee1cbe4547fc3456de1429c84857eeed04fe5359b73b6bc6393b4307e3d01bb7d76ab7c9d945ad4db431217f04971872a8e8f1a5392a87246bdaf6afb00321be0f9b052424021a09a44e8b8a987169115eef763a890d8d21de7f349e831092c5b5ac212fab098a8137c58913992c03a250e0af214ade1ebfad721e2196cf77d88f1b47040fc0b9f84fab84a7129e1f4e407a1747aa067db59481d67d7d44726740d5c128783ee9ffb047947d5a57dbf45e2fd3083561420e5a5e18c8daa49bcf5239d4709671dfaa3f2d485c9a28c90b940aff0de5278561e482cbf70559bf2470968f86526074963608adc43d8e3019fa5107ae81a7731cd68da30916995dff4c3dced31efb6e00ddb9b08f968a5c6350392f2224fab0c6660353704ca72366d06e051922da82200b49f3073ac2ff2bab3f10625da278dced63ec0c1f28d93f038b319c1262d16cc32afd3bc62f20ec1a25adf0ad52f726f334242faf8b8166fb291dc1da25e2cd50cfe6eaa38754bb68ad3df31c450f1206f1aebc87968018f583e9fc527c14ae1a1e58e625b9d1870dcd5a8d0ef485affff98a451ff781ab24fd71601d3e80f8d0b84d5ac82a81b6502606aa3e21af175307677cf446f5e2f2b35cbf307e6ade9c561fc2f48c9b2cd8a2eda152cd33e9e23a68984674857c64c283ab619391b0308d33df36addb4732bf7ff18098ea648d06b530fe733cd6540ff7207282d2238468ee7fab57692894606e94dd024d31ea3d81665c6d6b68034ef27a724b870f3d02b10effcb1befc70b289d4d1358878f93d44d1a21b056f99ebfea392468861b3889fbb812f45c1951fa32ea5df9e813f507974aa2fe003a5b9f2bc93bd080eab8006f6058320de5199d83388d356b020b0f19647ff18220a5ded4acdaa3d1aae4fb666ca1917ae16211d966dd031981d226324371f61d5e5d26c89b5db565c66f1cadaa9d8079f2947a8337039f2645b072510e649e9bb62eaca1786fc85f7c7ae094a78b6675907c2db8cd8acd96d564023a4630b156c7e53224924916434d41a0d88c2e6aae38bc1784fd097f980f905eee2df10cbec121b1a172f2fa07119cbcb62b52eb25518e033223dd80be27757b50672d2a7fcb6f71a5d7fadcc147c1f01feedb45e665209b2a37ba5aa99bf86b7d69a64e2220262c41794df0b582026d9d45fa046364467bcbf2fc3e0b93b7cfdfc98b695b2ecd75bf76dc104e179792bf22a6c8ce2c0a0250d0adbdca0735a912fa99591a9770244b1cb87272cda5a90d9527c9a8a56bd3e9c7a598b9d649e2d7102d0c2aa91ff4f12c07f87b0c93727de7a5f464f519d780f5ab07ce04b668693fb1f98d74f57a52fa768de168c4ad26815fc711064d19400bafff44748ccbc831655cf695ccc58c5d4a824f2f32376473414dd22bcae6a894fb6ea68069071a834c4d49d87d170cc1c7bafd370ddc96444e759824ec0cbc97cc2b54f9314421c46f6019a2ee9ebe8479856a2003d322e6960c4498b6231ef751431e4bbfee89f57b983c2e4440c94498ad2a3cf2e7b0c036bd5d27a808b43c5677dd0d7125c02f54648f9308653dc6cb68bc4212e46a830e8308df9a85bef632997dfb15aa43b2b5f05ebcc276eda46a02031b153bc4334db9502e62a817bef250a08988fcde1457ed2f506c793e5cb5272283f9a1e5532bea7a2b3f3e1e7f1e17481d62ec68d7fc97e8fac1a24fb485241278e5a79c080cecd4a2e43f55f302f3c4d78f1a9730145ab24127f4627939e3f66a4f037ff473320cd8abf9e14ab973d4416b0b2c8a5d707e4fae164b99e756588386366dbf5a1029b296ca2abfe26add6659585f7f31f1d51c3b0894680a5c25d896fab30d4a7e01be34083b69ca5b4d8730e2d367ab9503a8acb5fa8736890c9fb7428a67b3bbe5b41306562955bc5526a615bd7e0a5b51ac6e6d58233f19bf0062dae91c54e03030dda8823f44c056270bbe5678bea2d1848a6defda7dc838233961e8925b07e45310142e93c52733d4a659a8bc44550f3b5d1aa8f029d57799dd74441b25368b7eb36064366c4413b78c1da6b9a29a1c5c5805e8274c2883f4b05b656c7d160091f1971a16b0f776b1a87fd11e4eb783d0a39f23baa6a2dbb8f06753da5f971045d37e96a3114dd059faef649a7376ff7348dc5894b4fb8cbef8422641c653752011ccbd692be89405a55216995d3a0703256607a38302b0cfcf6e2f94407df0a5e6fecade01d35bb36c295bb8ecfcd1df6c58ee7365a085e332183a8162b6a2e0f12f34ea963d2f4568d10c03c6900984153de4e26cf4454ae771bcdefd4e592c28c08b2e6950b953243fd11e9be4464018e26e4a52e13a1b1c4b735c5a11f01f151392f369ef480097261acbdc4e3ac0b19bb224bc66e0ae5fe3a79d72ccb54695b9f6ab06fabd57283f1a557521d20097f3836a259c27ecabd5ad95d142472f19ddbe6f0e43aced4b97a161627ec5e9cf40bd019e39a7698242f586fd88c025bdb2959e67d03694bb24525c8a9f681554151fa39034d76d63be30a6c153fc9495b96b39fafd43917da47905216b5d8aa12f975845196d6dbce2a415064b24954471365c9dae4775869867f8c5b3c552ae42686f313cfbe6cb4be4ae23cce2a58cfc591246758a8ac85c7039d2435159e8b6d0b14b64c6d7f5da36c40114141dfc4aa12628f99d591b19de8b78ae1b1abdcbd41689dfd60c9a8d1b5342305bcea73963fda136b5952b6acd4c30c35041454cfeb09c4c8900d07941c2b8ff1a338b55f2902839f19fa97d7a881ff071906cc913049c90c701d2d9ea70f4c4d81c563c4fdeb029f7afa2f4a2db8e615eaeb06ea514fcbf2934746a223269249544eec5ffc85e41d847f7944fdbb3a0f9dfd7db349729df2b90aa59316f40098aaec0d810f142c9b55b73c03d7fdcaf8c2ec3a788c48508f9cd3f051756b04f59a416e0004de2da4b4df721f4d099d3aff5ee80652fda061da1e827607fbd74d2d5e1f4b1560d59079f9905ce087d52cb5e4aed39cb04ca7bcea418ead3e1092addcb064fc2cd9a3be9ce34d3a7219ec1b0f42742dab60ff0d54bb3ab80dc99f812bfaaae7f36e9250ef3f438c4d46074e935c0c19107dd604ba184f95e49bb66b3bf5da7e8a4e2581f2d8b0f0751824a4b5ca3dea25fac6b374ff8507239127b32affea87b66f85fa3c9cb641bd74f81c1928160d8bd7cc3f5fc275a93ece76a13995be982806f278745854b56b661827215eb61b3db31b0414b0bc4e4cd413afb770325527c504109331c1ae162d475421988aa1d198bc0682df1d5a89448aa55fe330422af6f60bb15901424042baa3a203823e7a77e750d7cf6254c75956a1d280eca4047ed406e92915c1c10fae12a64f2c769dc07c924704325540a941afa959fa6139525438dab4b953934923ff5697046fdbaaf0677df59ac925e76f99201fa838b0e425a63255445e18c195408fba6e391121274c85345f655d3193b87e991cae79683dfd4e40f3a6bab365a4bc24c3c57dcb25a292dcaa25d3465385ca12fc4c85d9fff208dc560874b68ee0f64b4a132b66b019df1ead8df586b5addbe2602086434f586da79c4c93d91d9ee33b949a591fbe82734cb94a7502edfc9e868d5088a43b891df436a90154029e88813665aae8b8f6fdd1d0ddea66859277946de7896d163029788fc27befdddfb1e9ea7ebef65f641e2440312c54b6518b0c67ba29e0fc001b394ce841492a41c58d6c3b324180cc769e40468af3bcc646ad361811d18ad00b52c182f4392b75c1678f4eb91c6b85484568c347c47aa6d21032e6b34dce0aa9c9c7c47beb169f6b8c04ad1f69c68e22b953996bd9ac3f10501b036c398d21900d7c4fe9fe8a8f982c3635d44926b4982a04e79f4f37230fc8d90da16c8be3efa94cc2d9d8282aa0d820cfed0d04e8d91d1963d2396eb6e5750dda032431fc3fe110927129330a3a481b51793652376e3c99f3acce6c5a8d9131fc4ee0f44c2616f2d9578ba1938cd2075085678ea9086e3d8a747d74094b0970ba586d3c011a047ad11d43bac1c1b115261f9b8e5ee6659572e7092a7533d880f3a5e2a8e9c0cc2b04380a1b0b93ee84318bcd8feceb74943f511b2db9fc6b208e8e48605c737baec830755ac83b3b4141e0f85c0d9e50a069771f82f55cd8d225afa30f6e1859b600ea057dfaa27548f900dbe890ea4adea04dc8266dc3d2bd233d156d01057a97f9c3aa62c2358c77917aa6c221cad10f6957c25ffddf74b1a34a02170b377f44064a61acd71f9bb14615bbb5ed02f217572d382c3e35e9f10d33efb0722e52d9404b94c319d7d43c506a744b5f538b6901de84b2856f6eb3c216ba6d0262a9556874b09215478d11c1f173e8b1ff8ebc44a88bf2a89c9441cc0be3d381cfcaaf8a979aea6ca4bd0f84b49f58c84c58293793430012b769b6387c103eced56c5cf31331183808249dd768a83b1281234843c847f3aa1a8c3200c7d1e11cf5f2929416d262366f2322b9f733c57b82439e9aaabaaf01572ee2b15375b662ca0a9ee3d94f729a8b00964a8aaa20e75271c92d2c0dcb799933a3ce7cd3fd5df5617cacc7f60dc8b0e240fd7694929d04b3bd11cfef7dff15285e6d2e0d103fd601f8513fc0c41f48da8dbbc5926049edb8e9e3ffd7ec07ed0201ad23b700f2bb14f37a1cb6b5413d229c3d2b66cd596a487f253c435e90dbc175d6eccb152986ddfb4a9f5b30fc0bab84d513e2dde81bb260f7caf501eee99577b852b2899a47953ec1033fb0cbc12ae219b0588c990fc727bda4aed5387c6ee64cd1a8f884d45e407b49af388a3be3b21797d80f81f35edbe3dfa885a5bbe235be396a7fd65b38810c1e8e29459bf35744388c4d393a8cfe4167ca6d49a8ca1816701545af4c175dd0dc7a2f89a7bca221acc2ce249fa0b46b0cc7815de61867827deb146f38c8388cbaf83d6f1730ddeca54e2375d4e1d768b88bf19703e125b4853945c6b2bd3aab60eb69e52efc541235475b740686cf9eb10f55a38cc96ac8d3c2c2a507b9b3740be73b2efd56f89c3b4770848360d22023baafc8dc12310c75cc8856a4cb6278dd6b0f16ed1f49f93f30ad3d41cac1203409d7ba3a4069124535d600656630fb3c1a5e8d7a31caec56e9303976abd01f02b260339766d5d7b476d2fa8591696755e1d407e2a495ff830b20a1863b4f9029237c1adc555f7db2336bc875d94e1291d5f0294768eb8bf3d294527e83566a2465384d77d68767b2409cd425561542dc04b176db6500a7c9779721ee601fecfdbfc7cfdac37d19fa65fa9a7cb5919d8d395446e3b7fffa16e5576ef5261b1679719716c347afeff7f2e606b8c906d85f3df44786bcec00968b0ddcc42151fbf831e8ba3952c36be9aa6ae6ca6869ac2a8bf506cbf9154a810c2e0f4a324c5e299d720daf8bb67994702925149c9fba836017c1bface9bffd88a016bdc6562ed45d295c4b4f201f709c77da78a9310be93c2949b172a21b72569ea104b91177e8d41c33446daf87955d6c1f1b25b2688313724ece4277f8553e507ac5ee8b75788bd89c1c9488de2343b493a45ebf176054467a0323def18c4a6e1e496baf5b1d9395e8a14e303acdb8246313274b7dc25a479be36fec5cb943b22b15c9061c3f5ef11a0af5a7744c0b01ce1f05dd136d1d3c4e0a5f4bc9d39665e74e55991b62baa3c59811b4f146a4933ff15057531836ce1b53b09562653618d0cfcd6536c0b8ff3c06b6ffb582d3cf260078706dbd4fe6d8f2b6bc2eb5f88c94b9e636355e53cf9f4dd92b9cce3189f89868c08877bc452a686edb089ea9c1f46c437b321989e1be0f45e561e2391d0001e959b5e2e425e1d3a716e7902e531453f5232a85e211870d357860d71a9984a25dfa30d3dde7cfee50656ec81c4c31f002d3b147f1be81187ef4b6b50350cd4c629f66703fd13d87b29eabd2c57608ddd2ea159ddfb125757e4684a7838f2f9b992f8d7dd492e8ec9ca1df34a2d1d9b88cee660e3215b329b619f2241ffb3a63717c221e56993582654a38b252635bcb8918f848870f8f9853376e32479f55bcf73a250be52ddb50c8ff2296cdc280a3437213be39d550d6765aa66310dc52576c39bc714b7b5307c71ea519cc200a162dd81a9e36a6eb42f51de32bffbd838cba71900999267a5525b8777ac05703758b1602f1a7b8a3e77f4debda6cc030597757e48772ea5de05ee4ad6fc7fbfc2d81832ffa6c8d741c48f04c8fcbed90b487a8d42ec3751fbfea2b0daa89dea33ddb80dcc734acaa3d829664f62e3c0f6c3361064c9c6d450103c72c70040aa21742b5c75ed76c16146995065cf04b6ac9170f8e7e16ff59c66757b2d9a889a677e04487bdefee416c74151f2b09c6f077d78159a8cea2af452b79a9e84ab3493c9b8aac455a2b81d35bc1419e75d81a9a9198f7fa5745dd09b86b9591b5e16b63e908c8dbeb7d23c5e260c0eab342aad09aa5c9e1f3127f9785ca5e65e5b781a74d805aca6317e18f7629fe8043b500803ebce0ca9bce0fec5685a34a4aeeaf49c39652037a56c02a7bf4a3a585c1dc7129b55845d0be825cd3880381c0ecd68d94d60756b46fa5baf6ee228e999b13503c5bcfd47a4ff9afd8e7dbe2fac70d5aef362ffc8bfe0ea268154b3387df7cf2ecbcf66ed825ba25629bce5a07a52ff10f140a0b8a795e31edb0f7d9ea3f1a9c2a8c79d887a6fa2d7df9bc0dfde194a61fabdd2b8c66cd9c3d8e5db001a4e1aec91f1a9c12208d7254f46669c730f5442f0b06b6cf1d7aa834596d6bc2fe20e082fed93db795d9ab70f42e371f25e1ad9f7266dcb8308a7e582343664dbd2edb74f7b0d18b989342b1a55305a05197ee4ec160808fcb659aa57318c4b0e1651663454b24a222ff12ed3516bb04029368f4b44d44f18b021645d06bc59e70656b91b546c588ef54225b34947cbe13b8b701c2d547973e21b8168ce48446cce7274bd322da786c9d97c3330b6bec28d3817ef739db520ca08e836454b83d85cfb5dbc8f6e46da83b6e21a04c5736863e979821c3a18efd07310cb26a3dc7cb6c8e2fa77dc844cd24360f55dfa924448ed4b8ba3311dd2775c82e8f4225d62ba72d7e667c9dda92bd942e444650cf129fb80f0293ac8f0208c9572dbfb805b757577ce63b0702d3705f926beb79de4fe5961cf2bb6c18d35d1f2ef1d56391774230166106e7e19c9a3abd5f8bb4a828e74a578410c171a5e33ef87f1b8564a24313b363c58311feab2ea190c0805e143985e5013abe1c55930096e166a410d44187ada2f5b8cbe9e03fad48709f9cd984ddf28c4894805f54339504315961b124cf42b511df426ad515586417f5c0a51eba693f75ccc80cae5e722382bd12882a0d3d6ad0ed71048eee803499f6a94179a36d7e0e6580e56a8c8645a54934c3bea099b65405e641689ef9053987b5e825e9309df8b96b68ef4ddbab13d053cd0e16e36d4fdb4fbb8cdbe5bb50847f637d9a57bababb9041e7a3487937918af5b554d129bc98f58e2ba4e02cdb2b4f53800f959abdb0036f38aa7c531a6331e8b6395c5137d2a65f224eeec28673d5a8e1f15ab64ee8c40a015467f595ceb11cea1c124ba93ebf55c76491f90bc1b15e2cc67846f2b614b0e43ed276baf54fc8126012c518115681832c892bb25fc52e622f16e47f773921e15674f01a4f48f7471313726ff1c9f8b6ad67e75146496a0e1d7e55757b67f28c20261b6295b1fbc6ac88334e1c7d60cf107c9e5edc83c0fea0a2533103ccb134158196684dfacf56ca2e3a5e7ad5364d0db75e8e20c52ede81d72838ae61eaa817ce080eb93092022f6b4e6d388cddabbaa33ba67a1b9b752c6ec096cb8fcfc4d9826ac1d305ec10400a779a595b9ddf05852db3090044db6b1dc1c65ce0cd5cc16455b6e924a81b33a1da2c216eb929fe9f57a21de1b92bb8a19612879f557938adf7ae49632c29d71f6f7ffb5177e63fbb2fd0bcb9b18f5366f130ff1a14c10c563c063d167b120fbb699e0eddfafda612c4ecc64b2081b10194915c6c941a1bcb750383b8abe9f8b8783a1f94bc9beaec772558b2fb3ebaabc5401ad0766332d105aaca13c4007e0b7a500ac3bfd00bdac4fc4303a85a37590dadeac637f0acf5a96d0e8331dddb043ff170a3013a9575bd5044af34dd672bd72761198a5b7d12f22c104a7db319563e3307fd84ba79ee4e69ab8e696ad7119cb6de177d2b49fe27803b4abc7217bf9a1c300d8b8e65a47be8fb66a5d74884c23fc579c4e3fa22bdb27b80db98588a9a0b8a5c3a552a763b17becab3168885bb65870e86b0c480a4d7805b4634d94d54229d9035f917e0b3f3ce1d796d1c22059ab0adac04f3f83c4fab38ab383204ec77f5118d52edb05fb86c4ca8f5c5a5655d34dc802a62421d84334c20ab29201a0a49196b84e4a9ca679c27107af6584b603e5d8a2d5bcb4b8de348b4b2a075f01019c39e27bd67ab7890b29698297ebb2f17eefeb08ab8720d68a8743258411e4ac398e1503f9326e858c5f7c2ba335a674d18f96301b30d98e72eff73cbf4d74034ba0672be091f769fbfc7806971bd72bf018e09f9f916fcb4333ea3f08117fa81ce34e1b9025670004800c3b0b7736e1539882712200af9c2311214949b4921a2bb8af8fb8ea341e3d5294210be3a046a4302237901a9f1da1ad9bef7ba8601f546a58d955a9af72f3369688e807a044ae7f0c3e87dc8cbdbeac50a0ecc8424ff05185b2e5155946daf24057dca8757b4642f01c7588b118f235eb551df61836d87bf0af749baa592be63908f854260527c669d8e264c7ec4b60fe84a04da8fc20d24ce031299db76d02a141ffc5e020c87dbc451f3831ea3b373828e742c40ba75b175257818cc795c43209fddda6bb621053cf1305964e00287a1e38066aa0e3a6ee0516182bf1e66b20dfef50af6608583c8da2ede7e6e18ab5bd7cd9d2d0d083a41dd282b31a780e61175df44315f990f0dba7866539ba2ceaea515fa432712deb47a5629fb041e871fda571c7f836e265d79681dcbb6883f6555a3776fa014738827e7946f4db6f3ad87893fded7ab7e11a7641381275699ad9143311cf3cec8abbaa94e3f440d81e79b3bfbf534bd788d2a44d49f302f017c2cce9537b1a70abc4b434559db0c71666b9dc0c07c84abae73da118f445c56d5d31fc16e46f9f33a59f6bd50c7f75f7c11ba9581b2821eff89bdcb2a092c23f1250cf208ac98dffc58f2a66e43e66ada888e513300a146e3356dd9c113fa52165a7b0fd04fead6614794eec527e456baf6aca35ea9cd47e55d24653d1f62c3d88251a8d2b6f67630ccbcf31d6ac1d4a40b727de78b0c9bb1b9e5e4931cbf788480001b9b51bfdd1572c14a3a48f9e0c303c52dcdb1d1a3d17b344981d6a6867f1a53a4c765001c81af861ff7b22baa7dedd1b7d99a68b655eb9f21a6cdbf4a38c70ea7977828f1b53bd97221c026b0212a1a06a58315c5822236cd3c316e176dc2190f234abecd9cb5f6b890a542bc9d85711b9a4098ba571e5388e7826a41356a13749fa41a12cf3a9083f5c2607af7c07aac5e41c1bcfc8190f087d093a2adbb814bc9e40eb1d10bdd238835a4a49aa979715571e148ad960febd1d2e12fe6c697f113c97cae7842dfc879315d3a9c7710d69bc8eaa224baba8edac1ceb8f1bfb5cc5865e9135a7548cc854cc5162c88f7af7418651bf9d9028000f059e700cb0d7cb19253c2d4051c3e5b40376be4f6514b5795066c902f527cf5145a94a0327f79392f13c11f5e9124505ab60ae447b40dd99428ed2249fc580a4144297a12fe2f00ccbb9d1d88581b0eb9343aaa430ea06457faf36dc1f58ea040df051141233ce94d7b20b6bd349b6e3d593d322786a7308549a80722b1141d636a594489ffdd67d2fce7526948f4d45ad31da7635d36f47a27858cd0840653fd46142263d8775d5ec1ae93e6da950634e933cd1c46412fbee7973b1e589f41d385f47dc67f8eb1778e22cf3c58e57c96c113202cfe0b82baa4cb3f4d876188a41d67b16a0919f73b3b20f392aa1e30c46c8c263c1216f00232136c8e053b21c5945a9b9221699944ae0a24b600d5476dd1e8d6f0b7e5182ddc688e35d5b0bfa48ed83fedce24488e7fdd6037bd38176356a42cbd66d45ed8633e842aa27242567d3bce929ba40382cdc0f628173191e153ef732513a1ae2a9db3352021592c2980e18f820dbc34dea1160e6915ce31cb9abadbb4ad79c24be4268c631346ec188df6ab8d8fb3bb86c768bb02ea78114317fa2972bceec3fb7ccf08aca25678d57affc495d37f1224e8dd88d6ca903b233ef7e2cf0eebe36b13c239ec4bd8fc86b07b1cc824d145ab06668d11c038aefd2987d520b65530075fda6513a93c586f0ab36ddb99794ee372c644f3ecf0f4ebc3f03792f1a561f71ba91f37df6bfae98be22687f5f18f77608c7fc7824a78066e430eb41d942032497e62063372896dbdff78ffa6d2dca2ff6d8a883d02b06b49a005442d764319dc9ae13edc65c346389012c809fde8c6946356893fb28e3457fadaa38eb0e20cf521d707ff57365c0a1d02159e372e22804994ca0db2ac90ce17c475aff056a5414a55e986f64e9a2425287b98703f308c10479b367552c77f51b337c5d726fc6d16f2d1f016d038683e9c16e4623b1631ca3b460ae1157dd18383433a9b37bf01f529880ee7e273ba91cd77af5079fb4a5bc6c4ff1ee530442e429a6cfeede424cad565863feaca4e4113d7b65dda8d21aee89b68bf87d836b0a862b16ca177e99badb1c03ddd8ed7565c202953b3c049724808841780cd0b4613e3746aa2e7683b441075f0036bad6a723afbdffd2c36f8ccb6da295dd69ad180ab8ec3966621aea88112f3fdfc3248eba729714bcb57b027e41f16fcf56e56f9c99783bfac34575fb9b669ac7d46a7e1278223afa714d11d5879946154c49106d006ca6a0e562213f692fac94926b635379943d4bd4eb0ada464e8840554dad079db5b3f225c693b9a1668c038639ca37e4b2ffb3b38b78a1d435e3d7b2df274a6061ac9eb4920c93c94072cf8d2bef8cd6d5786bee14897c4d3913c006956c90f310c4b64c8ca0924728ab67dc8405ad0fe4022b07282982ca51efa3b97c2d7a9a559f923f7c09e48d42b3a2bb85b5d37f58fe4976942327c13d5e463bdda9190d70867c46bd5a0efcc77f40658145b7d9f0bed171c9c3bcb3c178b380d68d35563c4722ccd0de75766a4e30ed41a805892869e500c011b31669ad58945e006c0987371c4fcf8b4a3999ecaec3aeb02a942f0a03671a22a6da29127cc53779268097a9fe826d2c2c08f84ee1f11a0a04544b9cc7a1d441602dcbd28d260de0d75c7d6184b24d531d14720568ea9a4b03377e3af06d67327a424974d79799d9d3d31fd342708e1bab969fe0737ea473cdcd760b6552918a2d0289c9bc287757fea8679c55fe5bdc92b376b14403342847836d17e4bd93c5eec24439f108b14b635afa13b6007f98dba09a3629209ac7e65382b606745888a83543d70465e9e154a6c09f85a6ac6fd4157e701616743d11a583b1c19977b3e86385f665da3330fcf766b3c5f466c2ea354606eb6d39b617be485745835cb977370896bb4af23e6b80bfd8584b2f6e6948bbfcf5fd488b455ccebc88bcd73ac20f8709aefb3ab5a2c57ee031c10f41b3bdbd0ba4c48c5deaf35a466b25b545ae363aef2a92faedd44cf1f22bb79ee2b25d29e6d254dda9fe186b9cec38246ccdb485a6eee8b7bd7b5da18d78deaf6afd9eca935ebee16b66d4ae00d52d5fdb98346fb7aae23ee2e4606a33f6a0c560d5905eee2824a03f29b781a11306c777c4a2e247c486841270655fb0320dcfa77d4614c5886443623bb0daaffe8a111baa0f424ce6cbdfcb54d660cb0e9cebde701eb074c5fbe103878a0c31329e29d0f7e1b858548418b3664bb789908205a4e73853c9c3110cf7fc9993dd1e044f9e4aea7e2cd82c3ea6988aded20dbb4d5f38c28330601f051a8120ba38b36a1f1a9ceab398b9aceeeb0f1783130e1c83d8910df7c6a1821110820318d1d3a2a1fa91f530d36378149316df8600f54e9388efe22808143b9050d2e7b23b992fe7efdef5ae65fd04d5f7b28e3048a6c7345748fc771d1fe6b7e992a5a3b7fc50e08d527413d1609d57c15ddf26c0c5b5049749a6f53a98881f06d94ee2eaf09612f6a8d30855bd5b4503190272bed30986392a18ffc7a7d18d5ded4da11d3855c1f5ad6180d971a1107307627aa9c16faeab916a6bcf9f1a459c391d8a27992ce6bfab65cae961de54fcb82374f225807508d49b0358a2707f1ea10cf80b7c257ea4f317b1d5b9f85c69179e72371748b7c2995b4830b9b4774338f92711b99e6ea4df010f5dfb2bee64ce68a894d0ed216f63d4f6c9f1c1d9277b50873abf1f1f7302d287502b713606307e0d7abb099f9732e81e84911d722d2547546ccf138cff8f279a763223cf414aff1f349b26153770d04705380ed96359b38f263537c47239a348f6ed6b3e3e2d3bfa395dc445fd7f4c9acffb133e75c56dc83fc3f7ae73ad892900b82982f23f28642c72a8dcaf3380514bb6cb0f8d6f5d1623e31725db1ff6485aa64d7e2ff9cafc7bdb472ee056e6dd32a3b132de817681426501841eeff4b1e104095a83f49ca33433b216827149f171ec2ad1ea306a985b6f259fc8b0814f1b2e3ed195767ae167251f578732873d578b1dfa6e176e8179067baa3fb01340ddf48b42aac5d805f95a80828472db426c76e6859d5e77a19039aaa55874cd56b43fb2c4893de306ee6102e7fade630437d8bac25e975305bbbd640142b54dff2221065a11fc959eeb794c58a4cd625024d0fe205beda35821b871c41a8eba55315023deb9126623ef3a69c2bd0c7574f15400ea2d882309b3d2b63c63bc72b8eaf6007fc81234cb242921bcb81e7b79f66fac2f2bb11592bc5ee2c7314da856cf911ba2943d069178449eb66a450db78941de3bb4b03f28752916311c4efa18cc78fa1fc4f1a012048021c72d709ec779dd0d4ef8da54a72c3a2d32f64265094bf751d3ad387e829291fe3e7edda077b276fe741fcdb93502c08ee15cd143bc54359dc18fddecf32e09b39fe6bd77c75528f8d1583512bf16e138d83a55822608d45df3d120ffee31ae371cf05d372773c1ff7b8367b3dc54ef8893c9ea50862a11c0202f6e8080be8d174dde6aa09ca477344709a3739de8eccd3d1afc7108964a91a64a3caa2f50632f844c535cc436b45b90a2934dcf3be418db43d29eb5aac3122390bdcc4ce84e17b3d05b421eca73c569d03ada0248592ba200cc9aa67d4ca437713e05185b7610fe20ef33431a0a791592aaf3ba7c8037e7650969a64e1df9419eef6439ebe19961bc095eeb504c8651ae5bf4fb045458604c2c182c8cbce5083c46b2b0b74cd3f38c52a0404f02e03e50c3140c0b33465ad2e6e502bf5bf33e21112847482d17e4a414b9b32e588b00522c9bcd12a654cfa328fbea70f764e858c37d2490163bba7e6885f7f157b0fc328eb7beb307e1bfe77ae96a8b72d8477561fe7dc261b20fdb9cfcd679075c2971d11e3974c97415beacc6057abef32ec936fc7df513e12b042f680e90103d6081fa59698ca03739c573e864090fc7a6487e3287aa5b5093870bbc49e08d4558a17bca97fd5bb9795c18fe37ddc7e38ae51ef51ff5f5d2486451654e9d5bacaf63fef39e843799ee5d8d96b0ec5ff181c1b0bdd2b15df0bc58b9d0848b0386a377c282eee5531837fdec70600543f1fcf7d8b0b6ebe312624bea319d33e9bfe9de5677bb95cb48383be81715769c869b7467685c5fe55227c6dbc20df6f9815ad4e007f3a419fb0a9d4bdcf0cb528f8566ebbc6171bece16cd352fc65f029a674813646b69458ad79ea4f34b4a62ba0f81394a7fd1664f2a888512500292ccdc9809009f68d3fe67699b48946e32648f5b085e3fcef57515733d047d271109cd893fe0674d8f451e7d0bc38f0ff9f1acb59eb55bab1a1a0f14849f9b8740d89e39faae99fbe3995d2bbf72b094c0ede3c2cc72630bb1e561cbdf960a3efaa2fc8793dbd7cacd6dd6aaaae78287dc26eace82b57326882f3a2a588c1dc76b78937fae01830d1032c85c6ab68ab6b394f03b026dff4f490fc1fd9982f318d4b778435210ed419c1641b16260f8027e139af889b7d630cc09fcdb9bee8036060624972ebc3d700700d3aff947aac4f244d96458dc7dd827ea160a3998c6797ede997b8f49cbae1d4ae81536ea3c11332494b31043ad97ac38b12cd0c80cac37f05f271b1cd41a28d296170570ba004ec978b1fdc4a39a802784801d7a0cc9134b7ca771a0725e95a7634a9f9f042aba66df605777a2099aa900d3480fd8152710782928d749471c38334d0093405d2ef70c9bb21d20019f343cadd0fb20f8e4138f1b31d18defa3caa304d3adabdb63fc8779b9f1cad189b5ad14ccdfb398113100d4ecfb2e818007347d7c471cd8cfaf0d1138d6ca6d8331bf0eac115ce608b45c71f82ff158c807b4abb9d55b2fc4869052fe5c9516e4bcd9442d66142a93f8f87f72b30abbe193d3e8219a976b8ba49c6f0e162968364a5908bfd15a75fa20dd89df375880fd2c30c56c6e84386fcaa6a87ee52e92a82c0dc9562cec04090b7be82ec432e7b60c44b8a0f54dd0069cc552528b1cfe005aa15ad4b7b98c851b005b8f9d7918046ae91d568ccb2f0a485e7683f34beadd5d94fcab31f6792c6eb88a80f77d3269cfe315388413fd08f31fb55ba21b6489c8c5270f8024aa04841a62297b6e0d38e1b2dd018ae58d651df257a909a3c76fd407781063949cb5b95dcc0f7b8d2a1930eca4e905f16b02191b6f92a11cf1689f6031eda1c176e33c02fd9ae08224c6e27d5c3e84bd38ca19f5788676725062cef044da794dd94afbfa434f6f7d315485c8fe480d02523ea7e4ae19375974c0eeccf1ae3e5b0a9cdfcaa516c71576bbadeddfd04b49be2768c47e71d3dc9e90a4a0c9cfac21478d413a249ff7cbadb5fb9335bfa3fc3754ca448b6b069bc8f5db7a2b088bcced3580d0b1082602a9b5c1fde798a7d3c23b11bfda6a239e49cd03abf83c21354781ceb857ec9d38b9c149ec78709cebfaf4c58ed23ff498ad5e29755d3e644c145344f01b748fa7023c60573c77fc4745c51a7180e2f603470bae47e1f189b3c41c07c6ab9d4de80382505ee747b5f61ffb26572961a7165eb3686a426133590717bd8648a601ded50b4cd0b92c2136f4c01b991cdacb7f44d35c61d9d096935b799492c198f034114ebe74d336631fb26a440de6f1cdd1c25d034ebb2a987ad8125c6b7f061b0cac59c1d6025fbb4812c05583ebd305b6e84dab15dfea03ec7d0e1bfaa51ef5e8e8272132d27c1a694615e6a84f4670c57350240ec94a2cd2c0243eaeed142c3daf1b0674c9f2c2f72bc3fbd7e7fb16f1d0cc9138c7a6d9f9c7d6b74493c9dfa0c95229a9d9706d6b4aee2a126d027725c1f23879b844a60df2693e4f1f86990b97dd698fc7a32ec4764048adf56d7db1ddfa2e1f3dd69a9833a4533443d1b7ded2e619e428d26b38d3e6aa950ca28b59d2c8360397208dc7235026a7d9897565ac69597c01f8ed70bc2da03c08c2da875bc7aa8bf363dd82c281d062520e6830a4a1e074a7faf9ffebfdceb955bfe4e60dc74239b385405971c7ef2d1db4f5adb09d0be9189b471b103265334f5490041be8fdd02b501d0e59b94f15c385bd02a39ab859a58879bde9aeac754f8a4cb193719d063e98cef585034e20e63a7d193397b86379b9a92368b79ee753149f34bcaa66aeeec76392fe25691a3795edbda0c987603341ed54b8de9329c44d4946bc0f53255dd0ab7481661596e588270a425198463ccf0ee86c420e60fbff093eb8f9eb59cc32dbdbf3991c393b42152fce9dd8b5fb03f4e57d2fa4631914970e6105d4ff63dc3af7c20afd7e3e27324ce1038858af3782ff16344a554459c581b349c47496d4c20e8bbc676f90768543c2ed2e3c3afcb304cb4e7bcd57094f2f53013139538eef83fba8479f23efeba8ae3ef0e89b414ef78fcd0e5faea017c185503386e8ea65476503d8b6d027dea74dd90782465d04a976cfee2bbe03b50815b46de07f8fa938d473b23d1b44546b98e14a411271b493f9623e4aa3f6bc7a698774611ece8d811da0ccf9cbc287568f72a2f074cb24217c437fdeb306a547660eb8ab8059d1536c52deba7e856fbc841b28f7aeabd51e2165c80f53c00fddaf29bb2d141c4347a9b7ea282e7414bb78da68e063475ffd46f5cc7f82e27048a575a94c724ae1b72a088fb14e72eb722bbd4f6d501a98c96640aceddd57f1b0b6f3a271c02f26dba8b496bc70646aa2f4dead8e4391dea23f629f7aa81d72dae2fc45df866ccab8e1cff14c2722a86ee24e65ed61c579cbe1ff2276b177370efdeb95abf957766d9adb469891e75c5bd9c079e87230b8c623ba1ce874498b09c2248c5d0085444758c510eadd968b43b62dc0fd8cd6438e2a0b437b8c259ea488024da22486271bdb8392476763cf04aee3da90796d8d50e1d785409b452aa28fd0b0653baed41c0a3041945da660b1e2d20a422dd5928ad3347df128b22f3041d513f33d5d6ca17eb0312360728b984ae3a1a6ad9d98c9c025946435c20abf55809c61bea3fad2bb2f9484d6c5de6f1a80ad86b1c716a8d657a7a490cca3843bfeeb3515d30c959c299b1fc6b8262294a33e91ac7427f8800238ebc044094ec5638f720f15d005ae164c0289f8d6460f5b3e78b75dacc7dfa8b932fb454a1577ce4a65bfe1abd10a4f95971847221e26b400815bf48cc367ef6e2f958079b3d0fe1b2c95ffa8259b8ebe15c3243cfb990c9f7b189b4529ee66be72306dea97a97d8e6234f3827878d90e3df4f4ea0ddcb5c9f7d93ef59dc2c4dbd977ce689d8fbbe67603c9768d116d0a227ae70f1ee29d8a9ac00f6106c5eec4fe2620a547ddbba3b12d78bd54dfba6fa09879b1181f03593b80e345618792fa46ce62c0832b10a81b260016185792135e3e53f1a8b717835dec880190cb895f2fc72e43b56ac9e38da3715d1b856a6b2b473599b60ae6c5eec415a46b3815b3d21dc6dfe5785c53a0118f8e23a4cbc3fcbad4c8bbb41d5dc8220d7cce996961f1544482b2a1bbb7da122dd10e9cd13ec094bcca80705598de959b505be0eaf4ca67f64e475afa93f31768bcae59d80991b3ff6f631dc7175d76feaca87ffb586ea1a1bd639a5d02bc599f7930d3dae46be42b4ed8201c59f06137e8bd12632092bed140eae1aef8302b56c8cacce3e9884008ecc45552919a87186cacec55b52f6efebe88ea78e30c8292ce2895a01998cd475120bbb971df35f23f47302e7f679702d8809c79c143e9817a87fb5db6300436fd1e6b0c5f8298598e45cd38cdc78f2c663d89dfb0752aa5dce5258f0952eb6ef82809a39b479de05d9a7c93004fdaffd416f64e90843c83ae92ae98de1afa832a0b601a2a88cbb7efffda9c338755af58107c444583a94daf3c5fc19c2e9d213421af5ca2fb4491e41fb4e109faff186144f48a2da4ff2324835c276576ffeaef68c0360d802f91dc3c143830a9bcfaf13419e2f0146a599f789c7f60a80af4abdeb342b98f74afe748e30c7c94c75383e7601aa8940442bfdc1265b09f872559ead336214cca18c6ae3afdd6bef64d52ab4d98434fdb635882ac3e3d1157056d237513fd1160c04def399c01bf0d0f8e7f9058f23ce3cd64b21db233c25bcfe9bcbe0fb3659ac4bbf9c576f3d40cadec7b653a0d7fd68b5bd1994041126c5004ca5c0a0bf332e981ac522e96ab7659812124b06288ba994ab2db2cd3decf5e28a4a9d2f7daa94803d01ca6b41fabf3bb62df908a2eb0953deb0eebe74f6b0ac9e8b8e0fde7a3e00f136c15eadb3846a98260e6adc28389b7eff9ab1f2f3ed7f3c8fe3c3a19f6923d5b549892d952d4169003cecb20839e60e57bedc475895471d45c6ead1a42f2deca40e2c57b617edb128ef0042056769590eb7467f1aa11978d64e0b10cc4eea61276a9e74611b6facd35b76411acc1f397fc2f78d50ef6093c00f21d7572dc9b353370ac6229fa1865e570773ae351acccc89fcb9d03b620651227db56ad2d31c9bc7c75ec91f308d5f0030a1d0422da5d813e98f37a5968d8667b9eda9f93d1ab2a95d4700e74d9822a461c5c900110cc3acb5ba20b503a1aa87c44f71c790d10a2c880785d9efff275e67f9e517c8071763720c669fe7ece62a9833a7ddee8f80f3e75b8de722516cb7eb91c68c252dba60c96a96004b0de72a79517c923dcf685da52130707542c7cff60cf8ec2407e966d1ccdadb4457109cc17e1956bf8004a4f3244fdd011a1a0c09cadee3419fe8133eeee0d96237f8cc625b3c594b1a2c59793cf067fb8d9200f2a72fe07721901dd2300821fd25110218abe72ed4b9199673cbde77575d41e01cd3b4ddb9775109e751004c687b5da3e48343d55ddbe43fe0ef6fde8d0838201c97047bd6f8a9d2ded1d3633c12be6a93efd20159d0b959db3008cc2c27b4f57bac89113882d49b9f33bba0987c38af4a52ddf39bf8f3a6477cce407d831617f64e9f72fc28486fad3b7c74dd90449d4ee349c81bf6f52d95dca274fdb815dc2cccd5e70bedaac9d01aba795669b266f47e13de9e61721dd23d51c1484973f0253d151bf4b92181cc76bdab0e428b2fae6109e0a6c036f22fd7e9bb7a638728ab39fb4fbe79754541cb54088e07cbf9fec4d1cc7458abc749cff01de64ba6426d4bfdab618eeaf23ef8e15aa76948464a32bfd657f36674893fb8f58a60c7518b165c7609d51e8a3ca79e8751445dbf547a0bd9456ca1aee616c480c556628c05e3a96519e4cb4aecf82587211bf79fb20d6c2eaed048821ba3d4318faba4468e3b6881102d9b964cf4ded97b0184e75616054a5dd1b45f2354e2e6cf255386f76d190d739822fccb49da09f368092627b781d5fbf5f8ba2462a71ca5ed1501cf86547d895fc862ee83432f659769f39dcf0e1b28805cc3b14bcfa819acce2a817102264c38dd58a25ba52e340b12a3dcd40189863dace95c752b4452250b1e4af957c089dc773bb397497af1ce4803c6b3dd9106cdc2f7ac1767ebb753f67b8e5acda22bc896a198841e25fb63b88629f88764b1a6a2c9b91d8da3e5d8b45efd8dd824fa8f50c4103a57cc90cb8643b44aba400ba22fae64a9d6c35f6e3ca5a29d8710630b0c22a817678624cdd8abdca21b8708322abb159b7631ce922734878d452253137de8f2b5dc288ad67caa58220fba489c5d3d16658e3e0eedcb8bc1a7fca9e4ecb7735ccf735c40cca35f0ad7da9fcedef3f4d26ef54e63aca65019ee853d99af8b2bbeea33bd199b88b4c60bb0276da58d62e6d743da73f88d6f7c0f0001fa1b4e3d2ef06515282f1f1c98ee4c68434d80c7a11c3feff828c1c0a73d2c9c537d126b90c927473236da79f540b665b78402fca22bbd7adab03f4c92d69874a99d81eb8b3bab492ffe612316748d02ed49a44f4128b8bfdf4800ab47c19d42358376bd43b9b2392d3d6ce10cc6f1ad834f16104299152d0fae3d2b2b7e8b0984d23ce50086cecbf3f7269fa94bde18fe10689ad12a4c99c169d2992591533f03d0d7422969ee2c7cdc067088aea1c84a9f9c1bcf87b4c200aaf06b36a7ffbfee47ffb24ab69aacac492a5aa04bb493e720cf4775373e5437f5367885abb7e3cef9679cd624da5c9abff547dd5603e45a59390b282eff19d0d9cae8f66094511acdfe6e006ab92b9a896953c78e96bce5cb0012b4aa4d34654bf313439b5fd4f7de212b008b55bfcd61e18c32fd9c262a88856aa11aff924f6c46e452509ad34ffe8dbdb2aee352033f788034ee62ad87c7c854808b92b52698865909013ed80d0c551afbecfa06b2be5e97d4ff392d75da28c0ae4a16a6e59624773d9cfe7b698d97f8cf0f2f9f7f4b64e17d46c05016fb4197f7faf2cbbe586e0175e2f05a653e50e503b84483e065a9076656c417787b81ae850386f7505c3031e3a10d9afa9a819b1fa58103385add29d2bc2563976f062f3521b938097aa7cb7f19274bc17d7b797d4789b477dd02d560f871e06f9cf1586eead8a0d32c05acd07c68a1b178fe4e6707f26d2e7935b066faab601cfa8ffd6fdaf526eeb70fcb672e69d70fe7af88b4cd468876f66e0ee4955ec827d94c571aed7d837c22ea4b723ebebd9cc36f912ea10769abecbdcd2c958e0e86d42bd2a1bb722570f1fcd095b6483e0f1ba7ece7490e479e6a9ab3696672a268c2b56f0dfac1d3ad84cc287adcb49fcce671026b840592a1ad9b0e0b18eba539d0fb5b3ce51927cd23084155d1ab9d0d852eea74ec53008f09423f5cbb9be26f6592a5297ba14b42ee90ab97a6f4c30e25ec7a4a0862625f47c4edad28167067a786261dfd03e049168aeafc64af539f7d33d88e76fca8f7322b54471c6ba3a84d7ec9077a129c546356f585b32707998af5876f9428a3ac8ef40e07a79b12b2b228b3ef9319ba2ed391df86e95fc3451deea549d995cb7305c639798b7aff5135e11dcefc82b6e422bd05d07d2832719d30400577b5991316e123c46da5561716b4febcb4ca4e5d9b7f7095f42974da43ea258924607914baa233511ff3e42131fdec91ddbfcff6b7a4ec84b9bc9b77a8058d889819f61b9c3edae2eb19e68ef490b9f500d3d6f3b32ceaaac5212e120091044d67091c89f3605b2679a0feada53817dad57d3bd7204de47c1e600d3ade84c2633eca0afed83f830cc73f56acfb6dc82d09580db26a8e9f7df1e00399441ab517e1f2b8e1e662c96f36f0eb92df820e9b868d57c1250ec8301e5bdd3b956391696894b752c71ddbe20a9bc3b55e54130061bca1671d45b12410adf15e040678c7819cc8eca912128535f78501d7d06027dd4a9b38c5a50da46214e55c86d447df6345c7d44571ef9a89841fe60f0a0fb90f85b06dcfef48e708f9abc3e002ee044276f41989f6de288f187638cc80d0c6f0cf87250539ced4c360ccbc70e92ae1f0967078059d26f1c10f96668f6f340ffbb5bc9859393a585e2bb0853e24a8a858643664292109e3d8850ef93fb5f8398250d6f8953ff5bbe8a5e6f1b59e37a27e144da186c6ebf9dfb8fb695e690647560e3a34d0a9ed8e7f278a92c2edfc908a9daea920a499b0bf876121f09b450c6e91a9175b46494af67b579350a31526d99a3b6d9961156383d830b3281c5bb0ee00c02c0447896c75838736a2170833da8590115936f1c11103caf3c279adbefcbe91983bb810101b8f31fc58134932f842578e96c2b1a2f848c4916ada51d57bdeff76b899cebebea0fe25b7c0cc0dd21e1db37e4325b8abfba7ef7a316be16218e6afbf4fbc17400fb2fe3c66d2555b11d522d0381e4d832bf92686634048b8604a36369709f9b9d32d08005b2155279f902e6e8ec64bc835d3ffbce0c6a836b023060c9d6031f6310737d4460b9928775f2fb98b1d4f61b778243448522b390be7e4a979a8effd37d6a1ade5f31cb7f08faac78a7918659467797add59b1e9d23afa805b51b77c87bcab283ca77bd634952cbec8402023e508199c366080a74b7a807513747fd48eb7ae576dc214165bfa4252d42668607f18c05256e7b86b608d00c6ed1e533c0b1f34db6a3e970e41076c6498658e908faaf2a18ffb92a716aa37dc40b51e23d588b85fc21d001c66422ae6de7c8c29b6b39326f06dab9a222d16541c2d5e6ba355fc3e2da927254b767458e0f1a099eb1bbc23daa3ded1cefec0d96c6c224f7960398841aae8aaaf24011f805e24c297a34e930c94b2356e164e6b7262a591dc759620dcad82b6c0480331c6df391cc1e9955be06429bbb61177ce273c0b6a40caccf231ea21aa32f4337e4e38a29f2ea2ae88ab22677690f3f11b5ad823fa33278f0fd1239db03225acab9366805abdc3f3c9a3196ebfaf0134e2032f9b04b4e4cc19497e81ffd3b3832dfca910fba4538feea0a3475aed4708d8e2ce50e8af0be201cae1bd3ce4b871d8fea79e35b92ebc3088b769c9b5fb9720422b51ab20d0004093a0a3684df9751adaf918d82b755bcf2a91fd99a481f8b67e19c1910d8fd5bf80ef9212636eeb8a3db4f47f0a8ca88f5d1142eff961033a95f66ab3691aab12058c8427e648fe1e68b5ab6d0a9b5a3f3f80f8c7f12112e06d54686028c5f7e1019b15b17f3873d9bdb6e1adebd7d7680d604135ca0bcf9f30f2f8cbe2bfd1934b4b0d4452256e67fdc3d2f4f45235172c633428417431e32ad77ff54db037add490a5e699a5b3fc4588cfbdc869c3c3ad7be75bbe72ce314fb8a5a408210f884fad6e5f067e08c65d32430c4bfab2ef977cb794eafc6fca728306f94dc5b0ffbae8f538dcc777093317f56105ff2bd7836f243b2cf5c57dc767472d2ca04dbff500c1bd81a26096de46730b1ce588ec531d94328fd707926e2616fdcc87f3d9c8899bd87aaa4792b1c580e3a0c06bbc515b457b032d4c8fe7d0dab47f586f784d3e054341906cbdfe57638cce9e7e64b61b2d9e15ccec1b320080c0a620e0707324c3194f1aa133f3add1a42287ab1a65e81f7d8e5a06d7330c9d9c045309d5e37d50a4c7679a44321ad4b2e2cdaca89db9affcea18b0bf6f21710785114b6e0c20c7cd05563f7a5003cd4f5db6ae344d8ac55ae1b91afbeb1a519611ce82e50dab318bb03bc7c6abf4b0a18d2052de49fb8a19f490b13c1526742b462a565342f8aecf356a7dc4db44ff2f4d0d423391150bd14e7641bce92f115c4fc0a7069bac337c74e4eecc42aa943809120d86834528e23b907acc50b30871f61ae25d5131e535886e4232b46eb100ea87d707a96769b64c59d7ff16588e3de4eaa8e5f9b3164ca7f08f33e460fb7c8045ba63c0e5d0677349b18a1462725602d1288fe53cee4c143b5b14783c66c582d5d242deb5a9a4dda380720e2c44bd74a93909b2baaa68d6e4fe2e491ac838b8bd4fad2018febf7e81023e2f87309b0f8c2bc3941f0a2652c20dfc3e692583913486f973eb1cc2555e354028dcfbc129fc1d359d35285bcbcf3ac5ececc1e65cb8d7bb9cbc193f4b41e1f1c3c491aa29b9baf2148216218db52fa2a572e0bea0d718983262893e775402e3460d6733d003d3fd766f04a462feb7e713b98f6fd029403949db0335fd6ecae673c7db3bb0291a723e8d1563cd9e0a9dba47a7e448f33718b9ebfd77740cd31d82551ccd60dcd608c79066aa382f838294de2cc0966321d9fef289e480ff3b4ca44d25dd7f960cc783038e6c3d5833570c3a0a59c2d79c6836f2df9e2e4c70cd4e638489310a329e512903c51ae09cb70ee1f53496bf207c6eace097e6b726fb1ec77d0aec2c0d438536f815ac396d6570a8e95ae8f68cd3d45252e96393cec6f9b2b19cfc4ff60fc0f58588828abebe0118bcb4ef22ec036dc14d414bd19f8fdbc8e8bcc9880d4c698bde8bf4644b3d4c7fd981c337e817bc6d05d04089d57c6316ce8b7b81722728df52209f0658f48da70f14f2e220954fecb3ac5a80b7f5cf788af121768fb5eb3ed1a4bf8c1293412b749f8c54d266b4fdf39e12886a91b5c90f47520e32c816a0e955f7354a68ce98b90aba7bebedbbaac3c7845564d57e2ccb456eba3d97dc3afe70cc07be7177a6000906ff1e371324ff60e9007ca42f8f10181b7b91bd40be95864d39fa67ca54fd65f316099fe10ac8bb2e713ef3c10546bc116ef239e4905ab8545f4f501f34a50b6835eb9e2e78129a5b6f22f1510134ec3042f8688c6c9a87edb1d8e97b019e3a5c6c4c33968985b0fe56898c59a5e83bc1bdff4826e9c4258de976c2c4701f149a7e38730f9b0c573e9cd28455cd4958e0735e3f16d77bc162427427362d53186e05e1ffc61426faf7f19f68047da286bb982064c6b689253131488ca9c2330fa1f818e015ee974488654461f03d468e97ec37401b0cf38a38137b8a6c73484c73a632879035b8d682e2a63c15ab95684a62205e2b452c481b8ca949e2429c6d62cd50918d3e03bd63e8be0d4aa908de1b1c2e29af6f25c4b38c9c9de67684063f034a4653d85e12bf4fcfd8cad0a5ecb581603f110971c83860d8a3a64b6652bb22b18f2db760f88f157e9b0f3ac21d2126bbc169c8f95f6fef179144784ac29e71211ac81948819aa4a98598e58ff2f5e93adfa0bc6894798615a80a6cfb2179bdd3ea9e23ec9ce50064ff186372c5617f30d87f24bb4a585b3e6d8a8902f26f8bb3f3d5bcb93c04f1d25dc7c8b76f2d863d9ee64cb3f58673e6e6b3f4cb6c35453ab7f4d8143bb0e2be316cbbb4599bfe8c3fa4e7088e28352757241700a0ccf6039759e5840f74f16c8356cb9551ee63463049d227fa4aa85936540bd2108d6cea07aa68a53da8f44ae29cbe9cc2126f02ef7dfa198eb51ec5a22a0783f6db32ad0cae0867df2dc0985530a2c2145478f9b51a7722b067ee70fd08cf7a6fdbafeb172fa784971f45193c4d23e67c9071f5bf716fbda8154e29ba4360ed10ae9b8d12f15a3b556edd5e4f836c1b56de9c55e7823d8551b7ccfa99fabb51be3f519c2457f45f82c6247c4f9c082a5715d06ced06270433ebb210463044a3653f8ced5d453105931127a7dfbb37f52f544471b038f4ce3d81ba60f6d4744fc12a471cf89bdcc3e6f78a0588356c1543784a0ece77453b6fcda1dd2101bd3bcba629e85c3380336be16a928c7e83a3fee27b6d579c779643a1abf1cc0c78afc3eb9a7b452806693ab178b5fb4e9bd14c2b90d863d2c9cd46f0becd4821bd0e6ebfb6d0355a62f620182facf776ed341a45d3730b5086dc658a47e441d766b1a33f7ce5eb91e2037b03d10a5db9644cf78401b74c2c4f3386863ea7834eafc891e829964ab78ae86252fc1281771b989012965c6d27ced865dd8851063705fa9ac27840320a5e128cf65d6801411513ca3201da968e9911bf7d73a35c7988d7ff9ab4dc46fd8694f974b4af77f20487cbcd25f19458762882460f9ee3a1d08ba4a35c8adaf83f0f5bb6f1848d019d52835e261d746fa775162abc843869dd8029a17ef891cf3f8c75d157a5bc485ac4dd9ed116c1d80b11a8a9cd739ff4bf6a58bc659403b1eb9399a7f5ce534163277db1d899a62c9a9b9107ca62067fcd69dc8803c6dab0900148d281c9b57bb7b91528d2bb3f3f707c511825269eb1bcf14f5372bd9153002974a53072cb86ad297e025f43e005dc1bd2a91fc2d82ad8d74ea4dc847cdf473503f18936bfc5d6ab3c44518f8bb228f30e25aa41f5527f29a237b72aeab2d55eacc63c84fafeda71bb1be526ced510e67587160cfa4f6aa616d8ba5c06083d76f56c89bedf6625235fb6541736c8b2e4d0723951e9ff9c1439b5689d10fca15f919dc1174163658055c848e70d75699f32fda33e88012267f6a7de1cd4f83e80735926c6d2a96ede9676bb5b787d415b67259a4571770e2ba01de5b982587c670405dd207c7a9ce08b722ef440a1240e9b2e17dee512ea732d33404a21ba40bbe7371ccfdf60d30a1e843f87d7232f7762d8111d06502fef0e87ada3481d612c4d1abfc0a160088ef50654008d341e3c87138663db8bb5a928d449f6b2fa8913944053e4ec4bc602fe7f35070918ef7e321272cf4b659b8781ee578eb5b6b359425f7fd34c66318bae7711eaec4780bb970060a548b5d419d3c3520007eddf1a530792ef896faf429722c616eff1a5405146bc8bd9bb2752646aa080657158331455d377777380b9a1df956cc3053f5c4438d0170929871a282c6c37e38781189f1882cd41c166dab5a6aa8c15b368b3888566acebdc1aa829c659faec2f4c33cd28251330a22cbdb01128222458a1e9c5d2209b4c6adbdf72945ce7f04e9fb788eaa094f1f4854121967fec5ac457ebf2a19aa2b1f85bbc93f6534de844d2b3964906d78e3874752deb9d9c1557e1eec140fbdc0714e4a4fb5e11cce646cf56a564b742aeb2fc171cf4d9d05d8224f48277b61b6ae139df1908861656af61544e6172a7883d750c0e1e8c4e196a8e89836868aa84aad2ee501c6b1d5e5064a35aa16a6926dafb95e29c177d1f78494aedf85378cbb83f8240a69872f83efef62afd77d2d076748c0c4cb70e94a3bc61227b691837c4a8a5b249934895dec4dc16f5a4dadc9de8da972de227b0012097032d7f7c9db6edebcc12747d966cd5ec7456f48dd1314135d8688a57592f99cb66ee52068865d20e689f461b6ff373aab365aa556084e29f7ac8bc1a507f3859afeea5e6aa0293f292ac0fa5254062534707a59a54f23b5e53b3704c219668a1464f142815b0aa0c75fb3960e76316d4c8635c9c9f8e45683766f48416771dc2b6bd33e8853fb0207a5f8ae508bd44c445b71e65888db4bb5ac4d2751557a60d96cbe9e61d3d37e3b203c48c2f6b2e1b11b4b19b517ef6ff76f92659458c59b11a04adf6fb7d8612c381179c7188d1042dbd2b110b1c5b43bb3236167457fa02ede6439bebaf78827196cf488d65c3f33b8d5ea8b81760d18d827be89a2615a655da267ddbe734f84ab10937e60c9e3a7eceff5b614ff137f57ecd7935ca177e6c5e22323c729ca49d2312c0340566431169f12650258ebd9652c8400c531f5fa7903ac9f229e75ab185f94f22813b93702674f5c9945d22b8387b2bce57f9bb4855ee78d3eb3227cccc8f76a4a0c4cd2fc06d8b134fa93e4af5b9f26fb70655c8a7d3168663857b1ceab40ea9dc99f23c6bb349dac7a360170c56f41fbe208782df86172467b55471e1d38c620fea53f71cbf45242277486526c534e3b8c5fcb363d68354a0eb66b658e496b791253d04a6aa16f46b2ca07d664fb8dce38270b578af743c37a735f6d7645aa23b4b23ad293fa57f408416733a09287aac76d53307ac2a50478d7090a859daad2b2a13ab8b7bd9bcd49c6e6485f1366f3c28e8d2c7971f8dc69c6c0af8546a0317a495dd5e03a2dbc06ba775bc1416e4f9012312bc948a91716504d72d1c92daa3dfbde2cf765163edc79a70ef1dfa2b0513530479f0ef780a79b004145223ef8c6a2e823b1bc360191ff5f4374b2bcf2468ad02f8c1524f32b6321f454e9dccb29fcdfa951f8a5a9dd9d7c6aef2412592a7d4ae817d26e864a82020952162f9786ff3556db0250967d85026dd71a16d6f649cfe2b974e45b9d9c2712b1c823cb76ceb4272bce9b06a2e307097733ec05477aeb63a6fdd1f1e26bf9b160373ffd8734d1c13eed347093dde56b9ac571789d7804ad57a4c09d99e88bd698c852b295f785c1c1a3d998a37f049aec0c36885b55dedc1e1b5fbbf169881b62a3c693efc04b97ff0a4b6e7b49b022456c8e273ed11b6113338e02866a337d4869d645d7f2cd0b601041bfd3ecff2dba8a01b9e1fae14a970eacb9e24fabba493b49f075f28bec7c6c5263ce4b03b89631fc07f5ce33c7414f327cebae207678d69dfb83900a5952dc24db1e750dd770fb94b60c80deef80a8fdaff04b638ee6cde8b2fa8b1c2a9832585b8ef53648aa6060c1f7d33d99a7656a860b8152395bbfaf559f85f76823fd37ed3bfdfa5ac6f52a33724a14a26aebfacce0a6d3bbd33b2ce9e7664c9b3626c1279913657c05989e9be87d397658eb713011c406f68dff7983ef61f9fa64e7113857996dd37497c81bd73686fc8bf25456def433a635b47e0311843de02b12061710f3f682b07b1f6b2bfbe54ec1ae920eefe125c6e5ca9d4d25744866e105ff1525511fa7b37729de3185e88d151e4cb870bcd93903fbfdb3378dcc9fe822be3be6af3a7bea9800cec8b1dc42bec8930812994fb8a29c0c81b94a105e4dfef35094725af0b091394dbd759d012e28b202d2a62db6c00a23857b1989ab685c4e511bf9d1e02778859ac530b597d480465f862094a1b25d867487b521b6cafc6f2746e468b6cee6343b0bdf5dda420b8591b4c1bbd4a5b54a6ffc2cc4ed958c26cc4e4eb5359bdcf8e85b94dafac81c1dbfc31a7d09ea63876cd052d9c094533960e2bf219419ec0ddbf91fb780511c69b4deb94c2f870e8661ae404b53754cec127292f4762dfe19c04f7c617ad1a0d8c3a9c835ba68f63e776f090bc1351cc5803c23c9acd5f80f2645ae78fb1a503e774820993bd0e4a8130db7394513a2b2ec45e6543742a13404f964daaff1bc65cb3f0eb3f04450d7b0db6976654a9ca9d30f18f8baa87a7753034fd241d743f98bbfda7156a82737ad5c513558412b19b627073d52f3ff88387eac51ee73c2d70f47953b4561867f6ca075a8d0cb813a1f7f45cc812a65ee4d1518c283682c0de4ee2a0a2234904f0b7d58ba52b7b8659a9c45407d1e7de6c3fea0fc625ab2f84098e4fb1f6d7f3db9d7b452d07f50bb3acb68f86568b0c95c0add43a3c22d80d655b1a8132bf5388e26bb0f02916449268643b3199c07f2aff9b7156133ccb947ff6cb5edbacf76c1d05968b6e802529f2f8f236b7acab5382dc3c106ed8b1a8cffb98bc3ade574b3f62d4cdbf0d67e842f9bd01562547fface56bf51514c45be793a7e2f404d6aaaebb55a6f221cf4e437dbadca7ecf9e3b3915ace5cac613e4b9dad115181f782fe583436681c67ca1e15873bfc77e69b6b407653877afd5c214ff6e448ab79f6fc5223660f12dc581fd68dc0426ff6a2cc084c2f7636d7da0f736d5436530b0b05e1fb6ca1b398ca10c68b2d9a0793b603b0c4e5d02485d9570cdcc9366852649edf2bc3cd1badb9e906e95a12119adaec676cf8fddf862cb40288eb4fb991b05e312613f4e013309e226b1c963ea7fe25d458e54d679f14b66f4025cc85d45bf27c416e0aea9155112fc91b147dfef81f3978d5877f851539c6f7b3c5e80de35e4d4e56f59335d58011f11b6da83fff2bfd21210e313fef04c6722ce82f721a680f1879c000d8039bc24cbb5aea89c0b8dfd71fa497f86e4fcd672cfcc50baa35820ce84b4851686bccbd386d76b6274803f48200ed471cef9a53572c799b202e695c3507fafa2eb06148a4b01f33b56ca5a79f02eefeb61e3751ea718bfa3c4c07f6c47eff40595fb7c01c2a38a833b71dc7fd696d8a6ce28ff15b07094ff68cf301a636d11d551cf3637617216817305419b1d3496e59e7d2070d6f24beee319345b89c9f7bf0928d2e0708dc082659c77580779ece20c84b63768c919a1957eebb202a80caf790fc76353d1b2af4bc7a1b798d49f44bca1a9c3d7802850cbee30c9fd92a841ee631ad71ad52067736b6fdeeb8038776a6c24e4e2eff9632a2f8212a4717ec11ad6a01d4ce00f23965c2ee6ff8fecf783854c1943930bbdfa38295487eba8b3321b9ad299d9f7303d41a999fc5295ad64d52216764f8c0c698e7e6e346a617a528baab0dc5396aec95c423ecb11b8334e6df2e3966748ebd2a1c9a4bb6f18da7ac9026d07f662614ff51525260de5ff7e106fcc96f7a93c168421982f98fc30f7ff741d6aa626e6666dd9735a0da3ae07880839a386aba7005b78bac2b6196112854c30e3b474621943969f9ddbfa06e50f68c8c6acee244fe8fa11ccece144202bf57175f2e8c56d5f25ae964aa072641b5182adecdc30a4bca8e9058fc949819eec2397688926725d43a877b24ff29a11d38fb996c09a7b49be2f4d48e5d8dc58a04f94ebd9b505bc68737ba37096d0b194ce0e2f1669579a1cd3770fa4476438ff27b08a9852c8a059f53920a6c634899ffc0c9e4e4539f7e2637837a578bd4d030074221b77ae5faed8eb4c4e54400c2a4ead4a11b5ed1746dc9ffe19bdada1aa46a809ac26a0684040b2882baec2efa0174141cfd69bca65bcd2ea58044ee754a910656a8e329c207a91b2402db1edf9ef8ce448ae13207e825909fddb00bb092c492811309024f469b1b4878b54c01bc0b201ce4541f7b46a9baab13d2eee70ec90c1bae454d50705ce8cc2c08d1d03883eabb8de42afacb0cf45a2a00b787fe2498fa50cce23a9a36d47248fdb2488c932714a9a12def3f51fbd8481f3ad9cd5f533ea0a180271c732c047f10ca201b612e2c92aee614b8541c7d78951598a1de90cb38443cbfee397089ff11c4da19fae021129d251effb96bc8c51a9beeacabfed9247dd49d4c0686d1ddf8a5e43c095ec45d479575ea44582b7775ba2bc904162ab46b096f6b95c0609213a2d3fb5bce4646cda1c5bd9339ec512f1bbca5b633e2929a8c1a63cb4d5a27511b58521e309514da395fd779b05159c00d053e189ef4e5e5aa002d49c3bf83f85e1a36ed0d2986049471bc34ca00acb6581bacae8cfcc8a01eb8b3e81b5b7fdb89fea343803fac4c14044cc63cad46d29d2d80fa2c9a5d2996bdf8a7a1c3e1bc94b47443aa93a3abeb22c6ee94de34006f332a10eb2db3d956956d7faba9f3bac921255d88f598a8d9a5c69e1d7528c7005494884d13c0bc246153c72a7a24b6af2de3cdc4c64c0933a5b5c4e2a932eb8a41f483a33f304f1449fc4ec886daf1aa2176fab74f993a87d4015a75118e73bf9e4706de668d449bf694dd7d68bda10edcb3a3e8556c9de62f8c81458e7102caf98b808ab92267e0fe979f1227c5831a987fb51e72102173a8a4f103dfc184032a1b3f6a888f01af7147842e31fec1f4a41e920cdc55e6f2c475f33cbab838ad662ce62198076845d79a7214ac2ba0c7ff4023973e4d9ccfc012c1911f14961dc9070a620057275525823be425fce67ac3a62c4702e6d6f81ca28f9f292407546a4cfcbcb93161305d2d71b3176479f8fd2b4f00d96f9009bbf1b2680b96ac497c99c18834d0047613a5bf5c7b1ff9c2d086d6a05212646749ca4793751ee0bee9534308f9de891159c37e63d30249b65720cdcec1cc8428629f2e674fcfe2918dc9ea7dcd5882c4b418d616a26bf6032469b5aece4dd0451212da3b02525dbde0e6ceef99b2a4bf7427e0a849e0eff492997c20d41173f76539c142e07fca00f4a19a85d389d93018d4f36ba43591f0c39617786e8f9ad6c861a3a11b97018d89327e989f799c9a954e63323bcbe9b3946907ed90a09e7e9401584f26b24a757694c38e5c69e3bf5c78b3303bc0f1f733fb1f51f52825799a7e1671e6d4a0555cf4b167e8ab21972e410aaff3bae7bc0ddadd5ab92187d4878160fd31970fd60fbea5415278192f614bc45ac08ac21d918e649c373b93d44b4d0790435030d2b8cb7808c320f49d3e825495d31ec6dc2ae5c29c39c077aab019d5ef34e54ccf6b2ce039526c387da4d914bfa90b3505f88b7e014808de69dae33b7ec7080b17cb70358ac447a51729b4afbd6a45911963d6ba33a72c228a1702eea23d571887f919173a0aacb85832858e80a72bbbfe8ca50ba6b6cd8595a973a43034dbb3c3ddcd061e6451b34ea13b4efa77dccacbf18b7fc8ab16d9c491e248e7d6221b349daa3702abcc5d2adee34b4d07ad9d42d58596ee26a82b01c6fe51d6ded4180ffcdd3d900dfd2b3209a57893149a76ed5ee0a8723d935b6baaa7f46578b6e9b5637d60f813126b0983c4c50e76e1e9c1f3f822d8e608da136e24b02f1e594fb20839da08bdb04815c5eb8aa5db5bb1c732fe9cf76dfc87bc310dbe272cec690e4109f4e902c50f182f90c6e249fd87c5912a75254a01f9ec62fca19e2f5c47c7ed0b8e263bcc7e9814dfc44357cd01e15943cb645d8ebdca1377f8779d4bfa716a7ac55e888a6096e01b7a61c22d7a86fbaf454912b8992472e5579a99092fc550ab0c1b3f221c859e6094716bc129d0703ecbaaaaaa0f55ec71f74cd5a16866977b9544ef0a9bd89ec6ac5479f93c2e7f00f590687b065df2e557290c12943033ead3feac453b43cf2cd1f2aa5c1447d3e6fd06c0343f9a893f3be5ecfddca2753b9fe258e39b1b479d6b38b5eb2b3c1c07304c100221ca20451526352502a29d2990f81ec67b2b5fff97955be8f85e13e5138049a5cf5303a03a2b2f785109d22f3273d1353552a59a2132ecb5a638ded13eabb3b1e42a681115048493325f9f96228cf40c87da7ceff075845903197cf0ef576fc3727b28b6738d8506bd81a4fbfd4547bab8eb3ece2f32136e5c0129148815c79f9a17a91c590d2fe01cbe61d55214f3b77db09fd823a998e7012ed82a88535af0ca9adccfe0926b4b5443bd4d7714099ac33b55b7c36f3f19f33a86e744b60f7f614a3890bc69e91402e99a27cb7b1917d6c13cc8bd4a3e5c05df1095d86efb2084baa934dfbb98d67b2a32811328c68775bced876f2b419dce151af0fcca11ad538107a81ac95f88fff884754ee8706f8bf9ce5bed118d66d158a3991a3b4756f0ebb5db68789458eba2cd94a1ee69c4528eaab13d781e4af550d9f89feb5b71dc92c54e20daa55ed38da961db1ed5e48e6ff9481a1256b8e0763ba112b442780a4f1614a2259365e80105924f9e909d29ebcbfad13dc52bad274a5a8b7749ec7fc532c867b04151cecc7c2a522150f17e2b9509e290a767ea666b046f95d7b42cff841c3ce7714d593d655b9bb58c0441044937106f918fdfb670bf75b70a0920c0bbcb43aa45893550f17f96a56e7903803c4cda9900e8fa42672aa68a876df4ed7ef7f599a2e44c69a8a3be6cac74fc230440c37f8ad46e8a6ba48a4e7a5d99b9107f9f171085b5267b1aaa89e2fe10063b166eb155f314561ba6c397b15ca373c4bd9cbd44d5919cd5b110d0394a290e23f637bfbc9c7c71a2e0a1ffff0ed7544a856ec89390fc22bca632b65617ff34d95c0503197dc6b7277b1fc1ec86121992d97776dc77c1e5a6d740ed465cd3df4126ae40d73a72a7dd8ab3319a9ec2730ece68f2bd549c1ba48e3fbc891d6080adf4f7e86c4f6eedf4992393ce2989562509d4fed5c799a8c1d705b44cd575f4d8778dd527c241d6c4621ffd6c67270b52e0c277386d8570bb940d52ef92d5dfd04c46883be79f39a53bef88d56dc3882f7f36c2055e0c3c8ad0f47d90bc8a5c2d13608dfdec3ab289603c0abdca8a57f286c6f23d8db530915861f1a801deb5028dd1e9346e426ed2375dbcb2b3268967db683a3d6d5d88fe9d9fec16e42f1d832d20db58ddc11dc7a711e20c9429188c90b64c6ec062d6f110d10bf6bcf67f17f9796094527b3879b82cfb0cf7205c85c095dbfaff2ebc95b341182c1f92a62333c86548c619ae52ba44a0b58a864efe039378d99e7b88ab26bdc52fdd4c4c7dad7ae68fac6c6c4a5b4f43436f8549ff3f604e1220343de23598a76178e48d8c0500a53d5d76ebbf15ed376c4f9ec985cf30fc8d541df3be497ce9a4822ab4591d8d3e73ff19b53d2fed7e9653fae76356f5761b4022a3e4a70cb6910871b6d2882f97b06b7c507936587642dc6d48cc9e403b544a0a95b954fe78940b44c2ed2016fa052ccfcbe79dce4cd28afdac279246ecd58bbcc60f6987f9e08660065e2445430bffcf7f8210c07c62903032eb35c1b5b6d2679e84caf682200990f786f237503c407aa340f0e4deb6335f2d2afd31a6540db7dadb5bcd9368d26315f66f36c3cf2a37fa6d80721d71c8164dd02db4ec78a2caa09dee11a97e7dc39e54fad55477d68257b49d232d1acea049fa324a0f253521a027937f05551638b29f31a9c96956771cf5e00aba57d4875ce2df2030854c471b2a5a10805d399df4a94e03477fccb88694e256895d959fceff1005e44ca0aa2bbb1c5a13ebb7cbde11e956172512676cb7f33ef9c4c37b0146285cf0cab0d8670725ed23b96f05e88a991ce35e98e650b741be399877aabc6739ebc52bf8b6b34a04914b9fe0c947091960267567058811f4588ba0c1ccde6a784a734d42d0baa8ae35b17c6e82ea9da4417a7172f55b8b0a76e45fc437cd5b6d65e09707a4cbc1f98325f05cc0d09e6457217949169df00ed0975ea50a1024eb21a20c2a394fc1bb7997057d2c52976cd09eadaea79406a7d119b77baea61842462ff69ca4e079857fa3e1d4c4a978631b0c4a5b549f4393d580d5c5527d35f28305f5151461c7bf11ed31b811d05dd748034189afa7ead4faa7d87aa43298a4551d8d48b347e54bfade7317f8fffb7a1a82a9c0dddbfae2d6b57d5fbf624370a9e42e9059cc9c2b2cae90208de66181d486fb7f9e2cc88468c15d665ffe0c6a932668cb272c434ab1286ddcdea570815c1027595a7873722112aceeb368393ea1d9edee26c8689de150ec9caf127418321fe84206ac3f9a75b314bd8c5059c5fb6cf3d8be2808588f9166deae6cd5024b98e9db6aa30c9a5c1cbe4e32c42e7be9e65297c3cb94d5077bf99171fd5a939a5c4584edc8318907157d3272b6e9000b3b1cd299a2924fa3c976f27b4b4a3ee6aaa51081b84114dd3a642cf4bb03214fae2ce65c95e6025e163bcf31288eb94a87324a4521bdf779a0b5f60c315d13b72947856eae6ad818c48ebdcf12263ec1576754a8360399bf5b400cac9dc0d55c451e0a556e4ca6adad841b6a4e897dd009d4396dd59ed40598beaaf45a2e9b0024da8fa5167ef498695ba9b2642edf5da546488cd03357c4a00c3b6b4880f93932e8aa3129597c24441a0e06855b1206b8f970178f59a8ae1f809c4c86e7eccc350883be21c787d07e38185867749a77bdb328278e7f09827eb334bd71d5fffa53b61893ff04b39a0913b8aacd0d5e7251e65f328cb387485524942ea41dcdf8e1f0ca41b9f43d44feb7d02dccb2bbf0419edd3268ab6738c3fe1e4410fdf09f36f7b3d5b1faa9e994df57246e67bfe27d1664c32912b23eca033422439f7a4f2ddb08e4d461693c0d3be51d274925a83ef1d3bf7db14a46aa232f88b050f6cb1b5f43838e410a2ace15f42b27c1be6dbcc9a82aabfb50773220334995dfe4bdf111f6764b78478aad6f9f0a79937d19ac63469d3aebf2f40a037024e074fdcc117e27e32a8097809e5f45ea6629cf51c461d50c7ff794f151c093beef2474142b7dcfc4afb1a76d523f7b9f155c51bbf9e9e3873acfd23ae8627376ae43b1b78e0c944540567e1ae6b450dd05afaec366948b672aafcb93b3fa8559d2fb07a31733470aebc6e4385fef5b0e6329d2330fc792b991c033708e807b448065ccb41fdb2ec2993d713190e3ecefa2c949a726ef826fd63af3b28cfc456b050accb4d7e4035af1a1b157c9503a7b34d01606aef898107449face0d630ee187fc07044ea9b997117148e7adfb75358f92e7a1d3c835296d6a249bbc85080717c30e09400421402fd294729266bbef0741704fd47785cd79b1b0854a929565d4a857f1cf15e2ab58cf22912e297ccae521e22e924b72d2151cb8d132ffbffb938df3e089dc277fcebfab37db0a5793ac301608853ac9b4ee671c69ebb048f286b91e87a92f55ea0deb34a6f66bc16734e56796afaea19e44cce055fc0c52c911feacbe15f8d55c0ef7edd86004ab9cb3ef56b42fc3926fc74332dfe53214a042848c81b4ebcc38d01fb3a201e8d13b6561d4d2746270106432683f604b6e944dd0a84060e8f52b2f3b63158b2c156f005b922f18697bccff5b32fa87ef8c199e136040116b6a539a209b9ce5aa626f51e9b84105f155ff1de55c99ed04569bf900a9ef3a700c3c5d329a6c7a565d19d776cb898d1a1e4a2d10114a16b468b8790ee49f4fe076c7818c468ef7ff854622d9199ba2bd0ba673c69a56a7296f4a7461b0a19032e3e50aae43554e692f87545038375a4e99011e99cfcee927c002a1eb5124c36101ad4e233d4f738df7cc9929740a241eb4c160a818c6b255a623a93434995e13658ee81d8fe4a002933deda6761bc361340b2cdfcd2b346aaba94fc40c2b6b2924cca0619dc0913dcf6c4bcf4acc9f093992dced3918310b60f9d2a747a1bf607594747a9997cd6e8f9690e492c36d649f6ff83c93903aa2132abe1070d2c3d959593fb059d9c572da4755d3a112779c5aa94582426247210d0b0cd0b0fb287a4f04a5a68c85b7716dda93cd4a78ebbccd38559df480ea1043cb52e7b7d465cf5f5d6bd37b8b638effe97ce4e18a909412b65c2612adb9040b3a2445e6648da1b315f0f43f9aa365924c98eaa6269f5e2d23e4e94b252bad7fa946053e0eebcf34db8e560cea8a54199ff63883b328f8b8871c8bb1ebe3ca749647d980a86bf67e6d367fb8970bc895c95fbbdf177e0f80409748546a9c48506e1cb22eb88d136292578be82befed38a0e956161768a1f4e51f1cec79b2afa378b6b5bbec19c2475661a13a1d4fad32de475e09efd91453db9a46a088ca5f672b84f97c3572f6f55b641a3b418ed304a486692acafc0c5aefd618a237e31d784c707fa2e769779297c015995143061263ef4fae3b744b3811142b874584a8f282de1a4247e7ca4adf8f6d9e5a7b3ab53b1978141e89648f1c2ca88c486f8b02b3f005bdae366121ab74effb40f76ee31e90806e0ba542ee831437ce44d4eed0a7f3160ccd22df7b0df4e20b5c39887b0bfb4891ee6578164625627963fa0db601a1cdcfcd7e6cddd3328662099a5484458856141e76b68125092877f8a7ed60fbac5f9b6d2fcf9199a6031717861181b14c4a1f4bf14bead7a54a3dc3a600230a9a2e0686d316e43a97b2cd7f7c40e94daad3a0c620cdd6ef7eed02e36b9720159053bb39b303c992522224f6fdc8505df5b67603fcef5c6734253d8b5b25a11cb3c71351f73599c569a063044241336ce5e26d0284b52df2ec5fd0444e145f78cf96e96c49b1eae5a5c2702d5cbcf65b4bcee892de82f5c150973617588842ea4d788b4382871411cd1bc24da749a223a8a8080bde759e8521f5e70da5f50912272fa5fa031ed087b1c2a0e99b30d3a400dcae587de2077444a0729a010734f53d87d2e12e3b48d2f3c2422b8a401ffa2f26da144da8b41340e2d28882aeb97c4aba28bff6b10a3e60218e762b8ad676460c621d8020576d9d86c57b3e851393385421050b60060f8240eb9f0652dadeb489b204c3077b53614ab04cf0964ad36c07c9b51bae6783b0982621cba3ba43c47d5939bf79393c2b3dc1e95bea80cfe4a929aff1cb1adbdbb1d5027be100f44cd16bd7120815fdbf742294b4a5a797475519b0d8935d521fa89becca00486f4acd46ccce548c2e39d648f0e245f635bd4513c67ce462c8bf9e1f5e7464bee140f88cac18525c2b6754b2765b62d25fdfc438d6729d1bdb5fffc567f51f2b138a4c94dbdadcaef4cee2d89f58ade5ed4759b7ab0f09c10a214994cdbb7f1bf9b87b91b3b6932d472210da88dd903c1fc68c96d04c10ea4bbf949d3c2a7f35d87169637a687b363ef8af51a176f507e7923b460600324d2ca184b6a3dc2768bc0e60a245fc46ecbf588e792362b5d4c7220d446364e8f647c3d0615773edb7b10cbbb0f9f9331baebb85923e54959c468be5c906e40b3630e31d9db50971fd127f71a9605a99410c7f09528cc8318a4b76336034273d58d76db82e0a36abb0193bd15f2e1aaac0033691969a49151a69d7da631526f69d91924535b6ba8976d4b98902d895f85a95994bd1e6b521e98ef34b73fd3e76eeb6a7fc3da644825d62eb20e0bf2f8bcce4f4ba376be0c848072b41cd59d1a61bf5c0d0329ab45dd452ab2451363cdd9962810479211e7fcf49d9a41edfe39b2473415c154fd79acc2eb33ccd9b415f0b86aea950d8c9b9badcb52255d7ec30c483adae964b64f8abf11b92414a8e4750d0bf07510e9d320f15ef106e2f5f94f004b03e64f1e20bbf72574985c37c42fcf94bfb83f6c2e2d6735bf255e32f3657808b545499f65dad342e6cafe846377542317de5e6dda7fda4b80ca5d95b893b39e9d31994d911ac618ca37accc1344a1b8aacc00ee2e35e2d05afd2979f34b0ff11542b7138d1f7d614bbca74984a16ba46fe5f56d8bc5613d022934f31b7d28e93732828829f05e850eb1c0c9ec3205fd5db92450689bfc3dcb57e003b09bced2aa1e6a3744ea636dad48042abde763aa2d6ab3e2671d7faa95690c0bbbb9d35acea95465216b4ccba743770e91b85e11cea861cad9b01c7fcda0664258d36d97eebe24d87a25877e80f10ef8611499d892594d0d41d4bfaab4f00729e59a608d52f944526146071df66df447ead67899317507655a08811f22a20cfe71a1deaf4ac80ed17db43e8ac7d869671a0579e57e122df1e4e6efe5d0ab103cf9791723a4807ba133b75169f35d5e0bfd0c9fcc05a635ba1043dca494b9f6758414999bc7463858f8d443030e455d9994aa66a8a29d0065880194733a4d1cb07568c21c1cae577dfa26c5574dd92e158967a769f259c7443939532ec932b95aee4375bf5f8964bbfc6001e3fedda34afcdb25ceaf7e5422783ea8fcb6f65457ec0677a19ad0557d3da6dfe61342ee3216fac610b72ca55bd192e420d203d8c06c7daf3a8edc0330b0706713864755f5f7370c6381e50135da0f9baf4d4ff755b1187010a67752171ca6c6573094992de555263bee47bb33d2e53a282065e933ef689b634ca602b6eda8c1b9c7ca3ae94b9b21a2565b2ace795645b2b7c0992ea7696510f184bfe3f8182171505eb02fe10f182ea741f8b7562bb02f9d9a46535119761d3404a0c177dad7da7420710dcd6fd7eb039e0dc2526be5efc49b55281948bf659011533363d8e67c91eb8af069da3c9ced397e17190e1d67852e85f0594475268bca5ecc374757cbeddef79b88b473b2e455754ae820877d5e4c9b73109be85b853e762c962ed3f461d09c766e0293a2af4b42e836ebef574a19e591a73f875addb05416534dd9cd164354d54cc9b1accc906fc02d9854ab5ebed834443e80dd9cacf3dc97fb1261261d1a84208787befc2dd75443ff76b5757027fe9a15beacf9ef09ea0aedb7b1f70bc6b55995700979b799e0f37c219b85040b9e30c51969912acb82b92e232445d79432df04f2978e689962d5dcf68597d9044086706c991d260fbfc87527e662ab19d859f1e3d9481872304ae8890dd4e9a4d47bf638c081fb639756386e11d6202f3abcad86eb52e3a854fd8ce8407e8dba61d6fb6fc2082286d39a5419307b9280cc1da20edc3b52b19c6266ba05c9b18355e68e2131388bf5ebd43f94dd4e5cf592f7e3654d5c5962fdf12c91ae86fb402cca7231bcb0223e25f5784d98e7a5528129e2fca0961a7f567f2c1f072068576cca67b58a3c4b1b16ab03f7e432811c3fe7a7edb63b1da10e5e90cafb171116366a3111fcfa9fa700ef1e306f939fa4a0eb4a0eb2331f469fb464a2734d0ef53275f6104c04831ae67931f737e4b85a795809521ceb5c2e7e384a546f6982b446e2da284e5c828cd38c8080de56fd188748f12f6e93c3a2a8f292039841b7c328045ae9b4f345cce1e9a2f91c806e3e15c3353cf6bd396677b1f82ca780a0819741d0e0985cad88e450483412b9fbaabf10581a60b6e05e23781b839bcb7796e4146ec7e4d18e11092619c2767fc14d742ba95f95b3d21dd0d2aaa2160e1b1ac5d8af695ce363c7377dbe56a29943c65e508a1e27c26a3bc071a37e52edbf60810853c74247007b38bc6a53b875edcee1b1c80415145cd5f5d13b9f45eac6f747535d34e88b07288866a3f361dbba928aba372a8897c730b8326fc6e8d9fe18a2aca9949e8d9f2f1ab64fe6095b5d48d1dffeff33c7ebbb5ce35b00aef06d10c206ed2459c3a07d02eaff4c4d981aaca3b1c5177777ffc1ead5c47ee2283dd4b8d53b37801f1909ab9c1bc88d127904676b6428188ec9587132da3b7f5b6e273238d62d7e4b79d07308ad4f40e9206cb2bd030862d257e961548726571f798581a93d7023ca52e0637a1b2944d15b6b23b2a2cb940298e1aa660a5ec33ad72bccee0326def8893a5f418e624e2aa968f34a3982f62f8b6acf6e47fbcbc6c68ba844d9b8bb63d9488f8c3d6c45f5a9813dec15e39336ea165b7f38f6670f0aa5ae78c8e92fc6ed296e4553fd856b2a978dab27cecee3c1a059161b48cdf2245153ed8cac50bbb4888ea34fd0be25933418521e023ad3d08c1f611a3d06c6b93c54384b6df27d522cc47d40609a735416736217c5de20b247bcaa312b6733eb44650ec7b7b8c844f63663a3a6f34e3a5a9bdc60eb03d4bebb66f0576a97a8bde53de137d129af7426e866efe0ced663ac07fcbe1db0013a737ad0049ef6c303389e0bc2fd134555a04f8397734e51d284f1a25789b858456030535a2a6770febf8b0961a8eb9d7be0b5a3d0410074ab40937da55ccb6c35d6fd064455efe2cfb98fc70807a6dee19b9cabffce4ddc5ac2da617c40efdddabdd3c60598515682a0e81964875809f22c2d999fb6c9414502a1858f1e9de5b6ef8fbb719a4d0174a903d6bf12d0df5ce207ffb053c56b81fd76b0889b8680282e2c20e37f8c07580c934b9c03b9d21a862f0ac8351a6d01758672da55103d354828643b31aa7d7fafbe22ff244824cb0f795a7df16c6e3066a0803c999929abee5c8920dcf399ea14dbb3f02b06e82245ea08f24ee81503da9fc3d3b203d2e251c6d7c86b1835564ae446678500f91ea4da46f67590696e4aab5b063b5a1f2fa76a6c304963a1abecc33eb738fa45b9eccbb818d190dfe6949bdad757a199e4b72f6258c3f8f3f1b1fe75281907a8e277cb93d477ebb8868826abbaca693586545569a402a4982bc4e977971677a695b3f5147330bb8313a991d82482448371ddbaae8dc02db3914d26aa05bee7674b2c5a570caab4aa142ea2552d5a057a58d724db5b97865c61da56d245724c9571ae93d3b6390a6a07b12801b945a52596b354470d93716b4916047ec8e92ef7c15afd433c3478feb6b9da9d81e264bdd74916d040b69324f48209c0b4b0dc42c9ec5dbf7363f34236befda7cca29987ec5efc7ee0c5bbe405344321af5d32a017c2223840a90ea33106a60ee3da7e31862721a585a65395974ee2b72aed348a5157c9a4306d669368728d1a2e5723e84f59ec51c406576d8d631f9330435e0781fff93b80fda34fb4a5bca7fc6609072f06f4aedb7fec3860cf42f3a4dd88a9470a8a86d5d716c2f117261d01ddd02ab15c044595e41e423deef15bb0b33fade42eb3af668b96ebbce44ea17a65024c4e9cbbb7cd83c4d7967a3af4e3749d8dae14528a81122dc6f6e33791de92b8eea2db0b64a4e05ea39838a0c2ca405e520f3dc3e37ec698b5f746898d868b9485fe24f7b7c152ecce6906f9de72bab91e97ce5e40e8240e7e9bd368665298ea6e44eabe53f6c887b3d731af8c1663eff836106ed0124aef6a19d4575f31dc86adf269fca1036766ffbe9e1a8f9c9250989a3f4622898dbc4ee1576eb2693403d45197b8d28775f16671d8e6450a3de22bc6bfd647bb360fa3fa70986c381bfdf5550216ccc0163b38d4132ac6948f3606e7d2ed5cba8aaac775dedd00830c999475895fe8f2796de5d396a28b133df21bb246b561fe0f5a63ffe8417a59634586269fd48c4caf0f643b029fffc07b1ddc6595df1c053c591c2592cc4db8ee4380e0cf9478b635b53fafc24017bb0cb6c04801dfd340579a1225472bbec79405cf26aca5af1a088c5ed49ecb6e4f6c63672fa72b70788a879426404b996d86c411ac507527dcd7cc703d8d5deb8183d7cc46144cc5522c8e7be399cb0ea83b28ff598c319fd1705a4930b6b4b2c344fe67a75eabab625b4863252b8cf55bc5639cadb93590186e67f85300c81475848c80b5e7284192aa01c0cd1411c2748f188ef6bfc7d86e21ba09eee59087e870624ed962397415c73406691fd0f898e7cf0a75d9e9674b182bf8e5e52dd7cdb93437b2fa6e412f485c7444f1af75ab0ec8cafe56c4570da37ee008fb3e6be30a7989fe868955dcfd0fc33fabf387bbfb4863f20631310c1a9332a461545a38532b656fee1bb53ae3a8d5026d34685d5e52164eb38bd5a2b65f28c01dbd61e62cac804b2f535883213c0901e62c5d315963444f8bd25eb5a5dc8d7725ded58a77f06a3beec3e36ad1d45e5ba7ee1a0e82c786a921e11a965c9e02f0684f3806f85ff776271fcc752883ff90c56c00632e00c6e6283358110f32217afbb8c9f8493d57d31b9331c1975ef6416616dec344fea6a2c3c900fe9026213b245e8a248b8f696d09c7da6762f6b4d6f08663a710d52b4818c2c94ffcc344590ae2ec7760636494b7f4507db359f03a5c719ee680926c5cf6cfa2835a398fca5dd281698dac1de74b495f4a7f716419da419498d5ab79ca769f48d6c2d8db8e7e90ccd09f01c3ec5c5af004cde953b0c6990ac654d0e495f162d24f378f882ae49dfa6d22631518e9c40cd55987ebecbdebe3dc177881e3dcec2064aad51e900e7cc5b9adc4e7e63fcf63f75c34d3cac1efedeab2aba6adbc666697921f9b65b6706b863a40bf5392fdec76a1af3bbef0ae7e2cd793da0b2d89f19be26c4758c247b9bc551efe40b4b8dd4e6e9860531c3f152e20724d97d6e0e25a0651d7aa33a6b5ea6bba8a91962f2ae17ba1f2ca4fb5d94e4602daaf2c05d0d8c6eb68cbfe483bfafd23f39a765de3bd232203b946a0de833776835d8652b0e008c6605d8c9f7301c6f4f2965c48f9a15980f73a050a1ec7f9b978e47cdecf2c16fd2981f227056bba055c4c35fa6a935a9d3c0ef82b0d0093115edd20c7e253dac4cc247c6b79f2307ff588b507c0541963b75946ba2ec81a9e8a487fbe993e72f4d8e1aa5b46509565952311b44f053ac45bdc102304470fa105ba1a1f197f2569d9ed9ef3907eb7351a0cbd55981c5921c4883cd01822c8555a909dc38af2d9b24038cff38dff6c9a00ccb108a145ac6e806ab5e9f65f480dddb3d586d18b70372f28be94eb246f25e5bc28b18dc39b3a2557ff580628f027d80d4c81484460184c3aeea3b5bec3cee8470b8de07cdd77b844f69adfd12f31614d00a53a36f40a6929dcef673654ea3da8eb5ac4503f6e13eb9aaa60a6ddc7234fbb6ac23b5095c040539820837f322c09d7f32204567c7e296c9bb957900b676fd96e890444255f8034ad2f98c47a7aacec8e0916c1021090b16165fae3ccd77538b19fc7c8de3711612b5a7def10db9b5941da6802ecee7b41744396f014d045269d5f4beb8b4608b337a2117990a98f8cf65298ac911fa985bbc5686adf7d6a6eeccd4fe789f49aebae4875bd86aab2e0fb902ba5693a7a9864afb5e97830d090d5354c3b55ce3e8e7001cd864a896aa0e3002e57e02211a8dc7110049942a5e1f39133c871fa331db601813a4402be2ed09eccc3a9db817a9607d71b0ddab657fa4297b08abc44c48dfa1a52264f3804add3d562ab24efc340dff3af24de9fb62f99150d3abb4aa7f93a71cbbc46f1533efaf91077edff5dd28eb3f63ef420e9953482cbc850688e69670247db2d4b535bfb7c7a6c6512df46cb4b37e4b3ed0602781e97cb26738cb6409dea8bbfc64a083b5e2f2a994c460e69b21fb43afe81bee71ddb5e2c935861648b59aea0658c6a07e29ab8e3330c69ab6c0b2d61aa18cea24dca4077498901405bbdc7cc9f2eb514718536803b5fc4a755069811dd5ce31c08a95625ab3c41e522c347fea3ed722450597b9ce2ff9d5852d993317e18b963e972573bf9b641a09a187698758b24a8276ff14f86a0fa8ab4408cc00c6d1265a4a687f1c55d97c16b2a19b85c059f323130ac0e1f9f6f183fbe98026ee5ac2e1b6d3027f47377dae866281c3ff8c7c055c837f03a1d35b69a809cde3a89c07363acd1ceb3577a9c867b319c8ab4bccdc4f8dd6a8c3c7f6f318c8a3a720bc8f34752b140679ffccb0b0bc8152ab240327fa2991b2700c20fd5341878a60a97d463bde46bda2b74558921a4468359ff1fbe72f5d0ea4219729af7cd91c7de51e17e0753cf0bd9d6cd81cec18f48eca8784c6e60246509db23b874f77e18d8597b29d96e9aef1f25088652b505864a2caa4b81fabcab51c7e23452799f9ed9bc64c3ea719ce260c7b26762172c2b09075b6de3e54d4ea2fb88848bef9f78a376588bb9a765e4b544e97f28c6614f18326d52867a255e21f5d793f8159ac69c46fb5db67065b2504b67ed100c769e39cadd45485a58cf80281764a0156fb72d2c0d726dadb00e91dabbbf98e9e888ba7654286b096be5cca00dba5d4d0ba90ade7150edc905e09aac6305cfd0dda7fa6afd01b9e1a72d20af8d422e3b15a27875265d59d8a72580ab251c6bb290ebcdd787e284467c618d432ffc243b16b215790518f07370b83e3380f77ceec49c31ba0e418bd9c58d7384fca312c55ca4eba24fb6a19682f92564206f2de90362c21066294b2b829412f84c655a456fb78dc5cf8f5527c8cf28c1c9a9d7e7a8dc52f374931818b00f28595d9bf8fbf7f8161013c8c5e365065d27478b7271c49c94bbbfc1a77b9613826e64dc9ca6e8254d33afda1a6ae33c8007e6b16a6260a99703f10757b15931d290de2ff401fed0688f26f644d3ed3f3f838eede09b9163f9c0dad888362aa5f44f07d8683e1582faf5f031d8971b1ce52ffa3c28375b84c946c2646e75dd9d12e2cf73e27f5e1c8ab7964de3e2ae3cdbb462a4eabbcb6a1184067a3f068cd6ffa7a3a6af8087c8305866ed340ec5a2fb82a165db1de85065f4f233e7cadc87b58df5fe394bdc3fc621a64807add0368855b81fb568b345d83df39985c65d9b21df9733859770d4fb9c1736fa181572c45d731e21961e450c7a5db4e05b490713d753d5a799a11a44f051556f15c9d95963a9bb854d59c43e2a116e644081355f9fef5202be9b026cc040b91455c9456a0689d8208e219550fa41c075f18bb16cb7a477ee42ef2e781c6d1870e127768aa54c3b992c8b54acee0229db944275b7dd4fb86af77b013cc1acf869bd8058da14be00be681ec3b5abc3f7f89b9c5ba696f7fa2ec351a69e11fe2827532aec37791b3d6b09a6fb902c643d19bc374729230284a2e732ebf319707f657ff47950d19d1fbe7d74a2a9394c20b07c58bef9f163a9ab88c6bc612600b6f6a299edb11b68eeaf569acfabdd34ed00a413aee7091888ae9b9631e3305c37c57990453fecdc031a8cc0b0f00a78ac071485b202c47a90433cc54e84bd6e72dabe17aad77193e2bebee8296ed9ea93a9ba1392032b38b991d0598de96b7860df28eb6b83e6a9c44a4d4159f32a03c33fdfb6028008e06770163e413e6738623e570b10684a863edb073cc49fbd8c4612e7d58fc0e15360e975be2d3970a86213b5574322137f0a04ef5cbd40a124caeb33889f9e7319e1fb3a30ed9a0d1cfc2358463954289b18ed1c08bab741265436e7a928d0bf76f5b7523385cdf0976135847b255eed03819bb007011775daa8c1e6f442d4268ee0fa632da9fb761cba91775489dcf08334a51a0d6b8eaba39c39fec1b2ad36ef0edcdd43b211331a8bea771cb460311c0947b436a0caa57e0bce6eece82ec99951ed353bfa3911a1b3e364c0365cca98d09ce944bb88ec5b0ddd376e395831477c38689e79cb2bc7c881b31c4b275da2b5f1524923b79797eaa74c2d06093a2808f2820aa87e5fa2e5f9f7df1bdc3356f71793999874604710ea7386e3b0def5cdc8aee6fcf8f41def756791a3cc965d86f7e7cda757fe61f5d895dca330173694d3db5ca05455698eeb392398d0a96a83277588e9865c7b2cf8281622bbb15111276b17c7052eb2ebc472649aa1bfaa9248950148e915b665b12b5ae9081747c6af01a99065bd96118288eee987764605d881769a4410ccd87d4553c5c785f728377291a402e558ab9368be53f8b101526065085f263c2d7314bc904ed4c0d9d4f82dccf189b60cee35896d28616d6750da6810dafe3bf0f33c4ee8a0635cea77ffd52810a28b2f644923559740f254ae201927aab23b5e534297a62281877434a331ab308d9d11bf11dfd15c5b265a027042e3beb35c09d6f7ae2ed93c641396416264f4187868efa86c05e18a717b816c18034fcb323b0e94b4b1c17bce0f5a7816c2fb30ce4daf2c6fcfcac51d18872f4378b1fb2da3a9ca36dac8205cf91789548a993cecf7566b4173e53c7fdd7e1689c2edfb702fef3f9c9f8e4aa4481d3d7788a40ced77d4bcbb1869d4470491fff6d96d7faa1140b755b241150900713d1fe073175ab398a76e31b38b1d128277f3989b7bb9a2d4a39ad8290e4aec7bb583313fde61722bd57011b98befa62ecfdd8a8bccc5f24a6bc8dbc8fc7dda03d8f0ce933463bb48850666d0a78d7ba42f5dd46bff90a38be92a78f2774447832ee7aed6b07c59c3b0e7835e940b037199a5e2d422bd9948cb5cd9e98f8073dc8923e3e856eda61da71556cfa2d6ff27e9610d0b698ed2b3dce88ac8dd43d326fd156b38ff4ac8949b5fb69546a5cf972c8353a8b983658ded6c86dedcc3b5d8e12aa28a99243cb64779f7f5f7028234bf1efc5d179997375e71b02d023c27ab74b60d6e4ea6ce59240520180f4a3043d1d0c31c0a5f342067950952e295b227e9b04b293b6c117c91a64db021cd98871961ee0b67d6b17061a9e951de0bc14607e9d9f6d54268d6f125c22cbf00c208e8ebfd8a851d76099646206cb1f1ce5eb64998d1828fea694af62a4ce00f6a8cdab962f5f0a4ab6feeb460f14438410067e67809a158b38cf98f46249ac0df331c8310dcf9470ea890eb080e4130149dc619995450d50fa48190b258a4fca40c6d951e3928c4878fe9f5f3d5a3fb036ac086c6a4270d6f8cf1fadb4e81344fbbc39cfab69b71af35ccfe166a7d55b9df47e476f967d29e1df0d5ccfb01f0613bc0d3fbdd0a23bde22dd5e995ba69d8580c8d05d991fb5e675b03992363b9e3f5296522f0208382cca6447ebf859f0356b9c95a1281473535794672c1029c5882badc865c96ac624941780659ecfa67fc069cee085a7ae137d5a0597ac2dbb461b91c77c70680392b7c5ccac4a0d961d0be129402e9646f71e9909b32371297479f0ec86aad2e18282fdca9c44bd2eb863bba717d5f6682a4c2f0c358c2101e358c692a1d49f4d7c8d6d5075818cae0de16d65d8fe64d877fd198cbb7dfc235b7db75570312ac63dc7fb8e6c887f0679713c2771ce3fbfe028c74a32a4230e2af94e3a2f9e765a1f0bbb7a2b0875e2eb4ee9e4d0430dbe0e4815be73a088bf173d35ebe32b8337dc9137cd5dfc235debad29c2c8469ce6bd9e45827eef39f24e688d3d29b78c738619e7f99ca30f7595fa84785e8accb8f5f93df80153893a271734fae46f8a07e3f0216ea2e3889a66a4ab4b65c99409b288b6a8c5f3d4de50fb7d16f42b51143ef2c80ef85bd0ab60264a20cb72bf77334d8ae7847868224486b29fbde3250aaa120559ba459564ae4757eaf412f9389e4f35e941e52431145d22735ec48f7e48e50359511b1ff383f7f19ad9df5d398d128470327bc0ec5ce40e3e4f456e2a5c88f6be56deb4303aa5bb2501f5304beb5762be73282460e15acd93964aee1de9ce327d030db0d3eb29c9e73a2adfcd020f4850c0add912e4933ec8747dfcf35467cd0c806598917c6b30ac9bc384b1ef1b5179ba7b7c6d3918fb20d7414dc1b9567765622350c0f2aeefdb44d17da55c964fc7fd6a30d3046870a811f5ee057896fbde072c6ea2ee040eaba3932f0a40e4d9ecae9275db3c7eb0620c6e14298aa41503431a57a077249331426dd21ed0e082097e53873497844aa608a0cb986d042cab4e4b9e8a0605ad5709d4d4fc48655203529ceaf1b61c3123ee6d366a526aec545b87cb29930711d0d443f3427f9c5faf0b585cbb00e8a7c6639c04e1ab77378974006f98dfda12de2f1c4ba950f73a30beb5c282d9a9344ec5efe8c074ffc4e4890822f7ca9565a7c0fcbb73fa3547b0ee297f6816432ed2f6e7ef39bc5cee02004a05a8261862862e44c26d75130b0af6475c25bbba9045fc52e05c401adc0ee62ee5381441a0abbbba3ed3eb98168cd55046abe32229533b6321103166c281bc09c7465c57482e443b279ee60f1dfc5e3de6ecef2bb820d7db01305e5efb83683e77cb21dd50404a9008da2d2c056efae12b0872c8f297cc2bb56fabf4188b6671e5effa89b7f646876198ebf3d1e39e7da31808c9e0e4fc01faee36eb0b142ffcdaa01f0031e809a17788924a3f3336a315278f0d135e7928d66a9869eca1469e6b671d816f060366c898590334793c3e0c10be79c4fb5fcf60052a1ea47b3236300d6e843dd2b5541478849469141c2c4d1d46da96e67566d0122fb6c89595ee0dd01cdbd717a310806bfde27488e4fcb1a3906ad0dd141661552bac7074b1b009a466e6bad01fe1773786f8b0207a6e9dec0730e07404bfadfecfb1597b8534bfcdb95f6878533c5f374342e2fc326a30b9481af1cd46ed87a2b77915148674de1f83ddd06493ab035b6a9a1685fcdd2c651ef16ba31bf18d47ccab54eea2a7341e0d3164b09142f84a05cdec5cd6770d156eccf20799661f01175bf53b330953367b6764f245e76886eef37550744a3db3ad11436e5b323ec9e8cc4c98c2ddc73c6ad7927d38f4af5f7fefb59ff13145d2a57fe811246be0b4784e760c80f126939c8290220c2c855ddf02b455eb5b91d4f643b28a54a77fa52676b89c1728abb92bed52158515f4355fa6cd5635c21f3dda8e25f0f2abf99c5b3da241096a6cebcb3fe62dfe728f4bcecc20527cdf29fae1472e5ca675e81ca3af4f9dd236f7b8a62e0b5f2d51fba273ecd85b8031a8217cfe417988ba95c2daa36e42d2ba83fa49cdd12455f386660cdb3f07a4088f33a87e0f99b272ae6d2387d2d20902c250a69b70b3301fb814a57d6bce34e724f5d17cbaffe4a260d25100c080129cfe020fbc9deb33f3d662f2afbbc94f951fcdc4c560baa1d037558e6cfaa92fac46b9ee7e72c429739f4313ede6e0c4350b96e856eaebffbbce66adfb91c176a6904ff558029385c51a7edbb016fed11ef822f9864a3470d2bfd3cbf598250d82caf2ed86233444f1dd08e0a77820d0d0e3a73702e14c1cd3c89b564f3ac898d1066442f5e5ad6543f6d878b550de2096574fbb2563414e6870e91a9cb0d643c01000e1aa7b75e1a3095454c17a12f34a5127cc7cf5255363791256a2c55f4fefd43cf34e68d34409c0b10d0ce5470a99557ed8c6d9af0ac180bf796ac30ad4432d0287927818247da5ad07339e567f74842bff109f26f9aaa7c24005664e874ebf91f2fc18dd3d2095bbde876ff93fdc10f42710a03db2ba068be85e01d2711b6ac3a24007091c2a97f477f963307a6e918cfcb13f26147deb61436e3ebe54e9f1ab38295354ae6234c40eec1662311ffedd80b5c9287d574839132a934730bdf4ed25ee2496c2beccd3e176ee9eb78b7775a68ddfc79ad8a559342f0d2c05c928de3e100fb1efdcafb54a3cd5f21e34a3259a6c94577b302b9ef8d57fee24932c3f22612ddc45ac213ae2cf255ed94c2e7dc0d4745cfb9deb6f26667aa5cf355a5de24a8e3918c9e7e020a52953365df6a413ad242ac30fe7e2e85477d35fb5fe68c5fdaeece49492f245d9b546694c00f0c8b7645246d57baab1597d2108a66f958e6849555b2f90d1b15845a7aee5d0b523203fa5bfdc4dd65d3c3b77118c60dd6abd66f45e5cc44b8325fcf0a5331ba08ca37789d186342e3029c9e30f17f84d1663a77b0c4bff6795d13d4b751e11be15aade5d67d0ae55e9570f41e097ff28f7958af0b83e6d62987c34009d77f15c70b24da5814c1a09982036ed7f737f1eaadcfef19d94d9a7e0775bbbedab707d70ba00f67e461fc6b20edac566c3c684003c28fccf75ae90175f8106a6f64622d822e918969f9492459e1bd46d8681827aa40e89a5b9aaa3d04e51d2567535f81d9204735271e70ddc4dfa2c39b7b6374612b06ec35c89367bb177f3588fd379e9cfd32a85f4d35a044f8cd73e3b04e1924552e115be9857e2068d482d1b1c53f40ab5f90b6a1bc87c106100acd69c498170ff3084477a8dcd684c8314cd46a4a1e7733ef1d19ecd1af47bf6a88dd91d769f139c55b55ebb3c546cf4132996df5ada8384a3973c3d047a2760835b4585e96c829d0072d836da053615bff7e39bc28cd6836b6c3343756a18926bbfdabdbf06e63c41c610c3887fa15737f3f3847dfdae65e9354c9cff40449fb99a2b7fa8371b581073edd0fa061ff4bf2d68d018f429876872d44e337b963a8833f2b6b1da5d2bb2c726a8081d8bf85e8e038f97bba9d4b1fb97fcd2a6d63b3121a1010a96520e605479976009b8b29dadd60699664a640c6d9575d7ea7700f9aaec514233b4125ec2b88b8a5e6eb2a6d5ee12102e36d84fadcecdb05165574c31e9a1ff4aa52c32ad14f05748a34e72775a0d996aaf63453cb776398b621802f2a8303799060e9da836e77a6a0896660be838ec79098c598a920281ee9d8ac76513ff6dfa1fe33372041f520fdf58ead5f0a7df9e41db884f0c8907d6bde4995ce0ef33232d27abaced269cfec19f39352f5de935c84de7955fcd3825905452b17deedac29787f6832baf4070e94230e43bcbeb13416f95432896949e391a8b2b5b954f66781ffe581ccc8dc33ba7cf22e54a3a8de7cad319fa9432bcb620902dd7aaddbaea2079427da0458da11fb03129e63522944b9483e57495242882d362c7a74d265b51b35c24f71ec0a4fd5da8bac06218145c7f7220b5ab52b43ac5aa7ecaed4b80ad31ed5fe6f37e1609c73928ddcf8202e88c8926cee91b0548367b168f02e3a1d4921c9b63f2b9df230ba2e4eaca10066b79d5a7c0649d2c35bab5dea04bdf594ada0e7707ebdcce009ecfe7c2e95cc147381d18a26a2be75ad35d66021293d5210fccde0d29c02d6b2fa2ae2b5e8a5692672cea51a84537b17a6e464c598ac9f654c4edb7f00b44af150349b0e5110691a882932f2b5936a6d458098ac3da26948e540daaae132c51e4cc93778cbe75abbe2de73316a419e602193d21b898acee5aa4fad44a44ac5224e53d8dcbd5fa029427fecdd1611fe6b033d3edc7ca2410f2246440e4672ea991fc6ab57508ca255a4e763c3d8272a35923e58b72c0c61e87b8916977a8e58e2470ac3a85c91d08c6af9ad6f3158fe472e9b9b2bc9d0a7c01cd23cc1ed2fb31489ac1a3a09254dbe414fc1b2189f182d8feaefe5f5525b761e10a5ccc0ff7a453f7397f57103c399cb39e50a7ba0cca439c4b0fe451d21cce6ba9c842a627ec762c2e3c629dabf0f03f4c872f15383aaa530e026734e1e50f97d1de9148267451a944235b88f0c6fdb3e7bca35a0e3172413a8722517e8076ec162e944c3488a6032beb3ae24673742dabdb32698a80374c52061c5325bf2fb811350a3684cb8587c05830d4a186b18f82498e06842a91cb137670153884dc922b57c5a5dd19b136d21116db222672889289ec53ec89b8cc2b61bfe9819ee340fe4a5fa3f376bd8b324cbef730a54f7cd611be78253792df35ab529a6f2196e7bb4914c94c82ac9911261f0a680109b687c1fb50975cc5e0dcae021f92e0a8144dc430dff304ee68db0f82a1adca749ba724628bb9750be35ede7088847498ad2a22a0f9c776230d190a3cc5ae715584282ca5792a54d4ff0471c65be2362bb94e22b660a51044fc8ff57e871617ba5c451434c4e483d732d640c4a89d10afada3c2b1a0f0c45c20f058f11323396edaff2bb2d8f8c9455d8d4226ab58d442164b2490088b5abb1fd25abd9052f4142f69ae1dec433b56eb804d35c495c6bfc1c356a906db7370fc07e4bba7904a0fa76ef3a936bd534e7226329b246e509ac0a225e124671218be27a44eed6ad4f2166a2863a6b37d12722c59706f858f7c6c76fb5fc3e3d727873145bcd323c9af6241f58c8f1e2af2d2438d0a55d09a467fdcad2bf1acfefe47fcb818c7d5dca83600c0d113baeb9645a55df1f7e065e60315e818573f83b0446f13dc352fb8bc96bd85b7aa3aa38bc01475c7a6950a03f6d68a783fe3aaa14f9d04adf7ee039e7fb5bd7ab270cdf7d1967c567dc62ddbb312ab39d0377ba97826808bb0ea91b4e4e375866faa1728e79c29dd84d9ba7404cf60e697fd48fb5dc68420eedfa12777fb5bafbd321799ea9c4a242c41de3695eb303730fa62a3badad1b1df2b08ce65235c9e5b816484ca9a6d607ac9c7af2449c666b01804d1b71b11e14f015e3134743823dea784bbadf7f588abcd883881fd2766e1fc330234f282ff05b0734bf1f95f0108a55c6f293b6eb61e560b1781f09aba7038d5fb3f94e8b387777529a1c2bb0b16dd07f435a31131c0c0b828cd785bb144995a40a2543009145fa842aec17702632adcc2bd888113975edecb88ae0535e0e0fa41a989220c827f42c919bc615432723974fc9bc034ee76bbd6ca0756af8f49fa57cca1b6c98a9cd7fbefad5a09dbb011811a5dbd7b32d2f196e318282ff4de8f8c624fdf6acb5b5b870f2cb48d62f9e6940aa499ab386c98a29aa440e9a577a5c11f89a85cf603a8f26e7248890dcf448189bd5a94afb041727160131008573852d2c6674bed622f4089573417ec17c1121da581958b002c25437f5e8726ec3a019b0bbbba189d549645b28667aeea54b4c248cda88f4ab699f5b9c4fd641f79ed7d2814fe132c114411549f3df83ba63adc2cefcd00ae8c959ae74579efa001b80da9b10447a4e644b76fe01a5aed05b1dcf180081befbb02c483eb44eadf506447c12287ca74346f071cb800b4fe682f164d473a1e1aba6ab0001781c35b407a0d94540d39186a8a096e35007c557848796ad5f7a544c9d12d11e6b0fbcfe85af9f8509947a95a5aec8dd8326bbe39872bb877b4609937f238f270ecd88046fbb3023310feb1b6c6b585b103a7ea64dababbfa383b491d821c07b4db79b0b3ac9fbaed2cf02a8a5e73ae2b8e24cbf9ed5836f1dd60607d5e8c1e18032d394c4a4b7a348c141386077b7954806802154d6c8202c796f43a0e7c87224f6ec4b95254fb6ce4820cadc3ba5154bcf3c313658af251a11240a1d6e250f83af225b86107f171c670e06a99735943d0d03780c7cf5b4f704c0462a41b9ba640f0037e97347d412a8e0d90e51bc859d46b8c930b9b4df3ba4951fe85f4b5605fe6dd4178d1b7fa6e7d5fecd3bfbb6a6b7d37e28e929525ca09877e0ccfcf0cd0743cf8554940079926ced2a12415c7e097e0c78d6c928cce5cea837e1966979c24e8d3bcbed48f36ecfcffbf77d4f4a767462d6290ee75eb907074f0b9321d2f252f14f38849bd3d8547a188e6b062d39f4edba7789e5c4f641d478fa089a334c48c75eae61cd83a6c8a60a26594e376057195562b07b5b2ab4422c98b8c1d1c45c691bd472029ca77603da477eceb5c1302d98c88d9fa74b3ecb73b65ab1fd98856f717ec417ab182b295fb89ca0b17a6a0327254f3fa2bb420324bfa38e28c2f8c8f85fdf4113be5c407f9dcff2e4c5c2d546f2feba39cf379439cb2de6d6f6fa604984846176dd5af320b00437dba2fd1e12a3a139cfbd6a421d10897c79ce0204f44249b7fb970f8e8b4a252a5c586e58ea8e49418579af77ced7a8ff0f8cc56aa4a225ad5738cad2d29fd68ffea18acf586b3f524e947a80d4e085f6f894563962a8102f7395dbe10cd64a78aa9f3bf766f8d8ba0be928b03a82a6ed86240a1fd884bb1b412ec3d6fd1955b4b2c77beb5d1045130d0bba6ec7e88a1998be1ab47bc334f390e3e5e9a3e125a7698b3b53f7e8da8437b943c1b1003d1d1b69675ce04f225513c70fe6893a7acaaa7b764704aabce7d72d2481d853c9ca6ca5e2a5174d407790d39469e6f1971cd0dcf339347d431faf2d659ac158700ae6fcea9907ba8afb6dc800701d8806343f9dde1fa43ca9a5e780ad6a58619bca12e3e1d2b67cb4776847d3506fa3f05006d590c65cdf60bd2b9d252d43e1e408053fd86186eb2f14f11d745fd6ff157a78228ef3a53d00455e311be634f90b02ca3c491d077dc7adace343986630ccde64e24059c1d9ff800250c3c2f3dfee4120343df980bc5782a4355bc02a24f2664b713ac09b3bab2acd1d2036ac3ce654bd866287a85e59cb5e1b052a7e44443503a10ba8b8edd1b64c6e57994808997fc1c74c62d354fe7b0e86ac597c9b9e7c300a385eaae1f5b5727d517bd80f98def6762826ea93f96516b8999916653d163b333cf7ffb3b9e8afa489c409495116653cf6ce03b858468a70c142deeff2e4f6a7319362703a47ed2ae7fbe6bcc709d41446ec170122c70a3a1a8523dce348dd3af5a12260fc3c2fd719bbc3a0d8b8f65a900c7e6b6bf27687d6a72063628f89b4ce43777cdf20be859eb0fb5047be704219439feee0a53587e528539bda087c3179d40818027ffb7ecc82256192d9f26c1ba8dba63050685efd4f4a92288fd485ee249c526ff91d34c97f13e1df3cb47d2cf6fbc9d1c53d7582c212cc4d863b6d4ab95429ba7d8436872ba2b7b856b06503244c992d26afd64ba88f6934b4adb6aa15542bd3da40fb1bb1d982fff901fff3be034de152ffe0ba93735aaa728b950d7bece8ee9c6f3a688a2654d6b3f19f7977fe12cd9cddf33f469926127d250574ee9eeb77102627544b01d32d5b94e26a2d0e7e32041f6d062754fb38b043261dac5f524f6f53aa48a359b147fa0dbfad6a5f8d0449574f6dc7f91e5a5a3c850c0eaede2b3b42c971f3be7d3994d45ab81925ebc4983fdd7ae7e2a2783c0ecad4e509e8247c1b110ca702c2aa78639f7385d66f3e1a9c057e357a927418e3deecff81b9ebb4b28a77553b408e9262d767d13ecf91ca482091ccfd022b52dc0391dd9f5fcda48cca82287bce0f3e411e0d9d840f94de61741fdc6f899ba8a7eb41503c8913827eecf2a555ffec0f62a69b75f452e1d067cb3f14ddc6990239d460cf1bdd4e2d6e538b5401c3cc78f3d39dc5314ba529208d73764c7f683e7b6e52d05d5f7b5db06f23b8b2af09e66524832f4d9d61d303099b8bcb1b4172ef3c35859083b56af08ae1897c8667b20cb6b0ce54b8ac019830b2096c151661cf9f3cd7617d705bc1c0f35c4ee278f33bee4db390a4fc2877084a9d6be4bab744f1e98827fb30be08947874e781baa96bc57d719318725ef0b2b36b6dff10d9e26ed17f34100909c6dab72bff7ce0f302e95e035a3cd3626c58cbf165ae01d098d5dbb9a85cf8474204b518c4d8dc1865f8d893bce46da56f69ff2f59fa756877dd1f97d6885427ab9415013ea0af7a28069a7871f48f0efa5e0234c17dc50805f059f56099e2941349903e97bfa5f6d07a126f868de0f60cdf5d85029bfca6b28347963167934a0acf15635879638d2acf019eca43679b626664af4c9e7efc1b1f72ff40bbfc93dbc57e73735a6fbe2403404b1175b5acfe9c08eb8c89940848fc20b4094ec33e67563fc758fef09cac5d328e575bf4f4b6fae357f7d9a17ec3edc437b0cb76f674f8acafe9b5edf2a0f34c3feb67eddd18ee42d0fc2a4a7b8ad3200235d416475a82dbbfdccca56146584b1344c2314cb90ee4fa7f5925943100cfc111dd18584efac92ea847d93221748fd6b2c83572117cdf040ce08ec07c0a83183de93842794e214e838883df5f1d58936211a4d1f408e6cb104da7103d76084f25d5cb4d7c6c47bfecd49be797ebe2a626f6521aeadb2cc4293ac937ebf14108d92c85b92e32c52555dbf2cebdbfbb2ad3ee2e8b52a07813c7182afe63d3340aa474a30c842dae61ad821c55dad45fe62fb5f1f8a0339eca67483575762983eb6a56c9638ec1729e5ae841a106093c6676ac9e3483fa15aefd5ddec9a53af206fdefd713dfe526520694d9381ab5aec82d621941ef11532d88c3df884bbebc6cf5d2031eea8d9e40a573dc18e8cedf724521737e4f808553d0b5b33a0e6806955c44c180556920de7cab3e9de3646d28db5b24e14d362327734b5650302fe91784c48a5a523479db967865b808e8a73563b0b96d8931a7f65bbb9d3946780e1312a21c6b163d2e64a78118a3e1791fc411c9fcaad2004f142b16ec0a79bbf60fd38a23a051d3f9986abe9d5eb36d863ca22ba37894d2fdbe825e32417d3a9269e1fe0efd5e56560f7dca202312d1dd4241aa32fc1edcaa935843b0f2776e4b2a961c65e9745a9b501f3f72e5b0199aff11f5e7baa45f4c4ad109ed0c6dacbc32aa18f04e349f045ac75cc7cf74aa971cb6bcaccf9dde2b8cdd8e28e6ce697842197f3da06ee1bd1d5967762560c58b168273184a8225fe1a62e713a4668662c34e330b38bd02a94369579f39fb8d0b9821de01d5d66a96ccf8b7a5da8ac0a4a2195eecf1e14e63cb489587f53c2dd507e955b33c10b5803368326cf4d904d6eec3f9c1a623f01083f40caa0d37c3b2bb7a8be15d955ad6f794cb19185e2a1a4d8ab749fa8db3dfbdb5961a4367c7f9400c78a9b0aeaf604d560f5762dc1a90f81adf0307a962f442ea937317375721627e3b7a399d17dab5a3827151b3c2b0f57924bcbdee4e8662d408c76b17fd762826bab7c0bd2f61a90b3755bb6147898e3f06a024f71b824ef629e105b193c0a36413a50ff8b4cb1776c4617cdc689ca6ff297198f7a8b4f4763b50eec00d79f5ccf787377ac1088f139fe67fb39fbb7807aec16a8dafc460a0f0f64f56474948ad1975b1bf9954c9c71ec1241dab2713200e056e999877da3521b0723800bc8f829a083179d90c64b6592674868fcaa1f650604a6a2f507d278cefee4fef15a18f9dbdbaf76518517255004588ad257ed42a76a353597888d88dde58bbb4466156e5280b615b94d32438f35f1a8f5455fa7bbdf73e8362621239aa99e161187f6174c56565cce19d4b0cdbec8f65f95b5f74ff748023189e06d202768d9702861805c7a828afa5c11fe0d14c7875b5cca0b02d31f8e1aecd684cf22343bcf5e6031d16355c46705a77b05efde7566c77e80fbbec77b7fc412ae5bcdaf028bd2bae0ab88dbe3adfbae9020aaeffde54b354a0884b139125b078f6c378a12a5dddffe9c50c48d0e5fa22b693c38edb06e903c04dcba3d3593ab9a41a82f6a45eeca971bafc671e849e0888f7f2826ab677d9cde7ccfc27716551e81cbceaacc2c7d72c1cdf3bfacd23fce4a08df8b185505cd2060e8801f7445913b18dcdd164d4a9a0e25b344df6d4d2c2102d555214273c0855a456d393b136803c76da8a55e04a1b8c7228735be343a5d89a05a67771067f95d7ed69a368ee13ada88d433855a7db136a37bf4b2a784883ab64d14c5aa774b70f62e38c1e3d4391a63ccbddf8dc6969f9c968c226fbc88a4b2328a1fbd9476b7532952075d2d73d39f4adb6b67515397afd015663d4c0898c73ec310c0331381bb375d77a53edec2957c5b1516afd58854d922df21dca9350a0e1d4d963d804e9ecce86690e18f6a8e42593e6ad5e184a15e182267aac8a7b1167a5b9f52e42120816fa62b38dfc2ddf3bdd67d30404f4d32f23e762b860f04060e80810c7fe4afc37c81841d0fd2986044e4da0c76fe77184f6fd14ac479c33c9799805bd3644e702c8c827cdd58e33e22462a3f02cf52f15cebe13567d898cb868abf210f93854dfef563d36a2b4ce3b2b19deb888315309fbd77af6fc9c8679f4380ac7f5dbee16f5cc5ac5f609f9ece42bf77dfb5d61f59dc2f9b260f0c23cb825ea9549b0acffb052f7dcbf489bf0f6af64bad28c6979e6e0c86c50f8f2dbb35b8d3e5f3680f4bc13f7e4709e235f6c4073e96ca0fb40700fc7f3d7ed6f5d5e1f3b13eb29ee1218eac79e459c895c50168a8d491113d1c25887462b1f2d8f255f082543c9165dc168addf048da2ddc23961d8dfd912cb20baa5248d194598170e66c1e08bd7adc631b47eb5f196c248bced5db66ef9d07a43ce77256fcce624635011c55cbe6b9825767e84a1852f3554660caa24eb6f01de02b44c3bac6aeed655ef2bb8910d8fe48195cf4633acfd024c6771941947ee82b4740e45945647fc100849ee9860d4639195f07468655d2a7bffdf3214b5ce7dfc0bae34f3e8adb2c3aa1b8e767ca9a4f8a0076c531e27ba49dac4acfc7dfb9e7c96389d7f7de174a9a1b1b73498774d46ff18bd242c3fc8f499305f1109d0c6bae08806b9e3cbe8c4ecc5d98575d2e12c5aef280c1a8b9eaba55fe4ca76493f918cc47629a4601a6ddf41928c6182d1f79be8dcd55704bae3709b7c387ba93e8731d353f03e3d8588e1c717dd30ad21d4cde2412fdda28783bc2686b1831ac6d24421481c0f317ddf591fa07c223dba537e1ebd3e2b0f979e64fc0a5abcf889958015781684d21fa06075f6c1f79924d428da2766a068f7e50bdf802e047d73aa05a07b3b5f071e236c94e60ed0fcc28673a78b9351c82a201440a118f68feb24be4451b613743b9a83da30bb26366b614294190ef0cf87aac1684585b61a380db747b885bf7cb12037fda765908af897d7979d88515b0c8daabf3e6574ae734b664cdbc6b98382796bc22a763983bfa59c0bd6997f4b92a62b8f1ac71b355e3f11a5633c7d1d6179ffaca9da5d2c65d206fc1ea9e9634f5cb86199450943c656fceccbb8f3e5e1c78fc92efe0c0bd9105b7976ee493e7c5e90817af291569342141e7f664eb041370034c8914b5d2eb118cccd01f04cddbb3b3099674e2628525e4dea2f4a15fa04f570b0c82d866b1eacb05cfe52ed9d284cb0b0c68950cd5d18b63f4d8a20c0069f9fafba7e9fb693d4cebdae8177225d952fe4a6f897e679fbca8d8cc7ccaad8ca46e5954d4e894103631fb5dfb32278c4cfafa58f0a20335277f1349e544eefa60dfeb92799e5de4b0da4fd37876ee0a626468f9771eecdcf60c2de72f03f93b298b172330405ac1718acd307ca3f981acd3a96db5b0534cff8180601ecce5c691a0f491dc5a0e6add987bf779d1c09fe4dfd204cf3224c378f63a1cc113b4841e70b8235f29444b4d09d4f21e3ada5eff78d0d16e10234a37684ef503570d6bfed9e76704af28e882ce12509113879f8fa23234229b38a141afe7b7b325ebd2f33f289426c1c9c4f29c0a3ff2c2848fd13adaf69081fc70e61459239736d785885e17db0fc5780866bb0d6b89e97869b531c3c67a89d91d03aaa2463ea14afa7d3822d05822acd8671de89c74e2487d8a5413bafeb76b8f0670d3a31ec8f88e28a4fcae613d65b471523c1f17f4b82c4d9ecd8878a9d16066aa6efe801688d41d697b7e8aae3d4ff72812a1dd18f91b6f00c37dab0654fc8de7785ea30fae85d60de909b6a7eb4133ba8f3f51c83cdbd27bdad930ade0cf80001b9f96e64005e81e9fb65f014855c429849710befd46f07929c0bfa98d675abab0e09012a306929dbe6d8043ba4c4e71929a44622e2ee56941a4bdfaafbe2f16ae13a4edc053c8a7d230d14f541401c13b222cd34903464049d8cb8dcbf463520e57ad0ac19931a84b540f0c44c00f2f1d6c7b8abbd7494230ba32b995772074d6630e0a18ac76baab39cbd048c285d4340b1395bb8307b2112f4eeef745b2918de07f49e27ced73e15b715de44773ef8905065ad3db066aa25b8e7af752fabad089da768f55291a91f8f4954d7ea31fe8c4bd9857026f23697300dba74b7546d4029a5121d29ff17bf89642f224a30aa677586ce06b13f3a95ee4838c02e73e9e71c0602272bd13350aed0c3c7d108a441eb2acf90d14f3a01e5549c842c256024f90b862a15bf1e67562f8571f49ada5a5bc0f9b0d409f30f985638225c7e54cd726f43e8de0d12e2bc313f30b96248f2bef78e1a4f2754125af632de17bc79a90fc651285ec1fdfb9a3eb7a01f23ffab6d1aa905e53022fd0d32d7e8f5a1485cbda88039c7efdcc0dccf5d1fd7c10f66f394628e51daff3ebaa90bc6b5335ecc5e7f30898ed865c0de0abcfab490f135b45134e98f64b640f020854fe22cfbbde25d11ca634c86045e4710cf5bf949598f9ecdc7d6014d9332ea8fe423fd5eb875de095f6738c3af776b116eba13853fd345e6b09ffdefaa6efca09204c7a0424a0b531fa18c8b1752c20f0d5b9e5aa790dedfb7a35d0b191b025c8d2bae9e2d26a192922d6214416641f0f3d1bc6119d32f257796d9001b40250f7bf35543c943404a7ead3d66253161808129ece63ba9118facce9485b8dd04f00b412e4d40ecb3242f7d16d87d6a36c9fd580cdd7bebf84065c1919a96ac60c8e22b2643c69b8ce4837eb9ede176370ce81e10b83372bdb45ba4227fe65573153384ef25b50e314e116c8d0a9ba54f814b7c86318a425dadf73895d00c90ab7d8ead138120f12a95600ab73c47ad7dc44857e9fb6980e13da90df046b7cf52b54d640c2c384c68c503ad9705057b13396d9ca6da4ac760f64e6c7afb7d14425c2b6202bc77c7feec2df032f771f7f8cab7175abe698de06dccc4a373d1587b10811a7c739ffa9162f8dfcb7756183deb8ca2c8c20eb50d39fd7eccffb6cdb7e0a74f492a5d0ca9bc685232ed08143c4274441155eaf5b584a6e73ed3897bd97b5210aeaff251e76b1b99749983f27de4d2931d8b2848842bcce3355298984578e8d396fef42b4764d14e3e14cc9501731f35bcfaecba021adfd4f2caa494c49cb576b9547b843b92f466bc30699647b03fb78af26ae901703b18173773dac75c25393818d460b9b2c4e6f893a88f1ed3cabf7e6d198c41c5b6b047364657a78215da9831b4edd75cd8eefd8a9709cfdf5539bfb0d6fb337a578b5b768e40d1d423f930366efea7436ba8829af1546c2e2f1a8d409fdf71421150dfddc01205370267ebb6a1839587f81de542176af730e8310499548ece601f94dd6eeabf3e0749dbe2927d966cf265fc115a44ef00df8bbf0828fdc08bfc38485da242421c8205ccad234500a64956f99a74f525c0d42f8a0cb0c050f00f03c23bd012a2b048f989c29da036fe6fb145759268a9879b33b8a476979fc32e3a8014b47ecf939487cab1953a53e70dce6c7804f13c7d70de88e824967e50aed585fd429824bc682e8519b283714ad75992d34c5a1e0cf0dbf836880776b27ca0fcefce9b392a0c53fd30f7ecd911bf5880e8c337f7e9907e3c2550f5c5f69bda8ad402c7bd7df0c9ced17d4bfec4a7aac9f63afc4544f307d196cedd3247491fb8e5bca23bccb296c2772314ba8036675678dccdc154d35896ce6f0be0af3b94dbec6fdfbfbb685c0c1a7172fcdc207585d918555d209c9056ac49aca1e3b43a81394212bbee524a98ea86dd17b99d50140fd1e0bd7eb04ff51c7492632970d6fde7dc2fe4d378f26ada0c1180bcd496020730adc0ce07595e6b6194dd25ffc76b63fd5e232f4c79bc1c82264085bd1bf81605dcc999a2fc0d6fcd75d8040a5137390225ce337df19f1737c6be1b8529f74fde9b136c73821c5f6198541a0e1793416d18fa297898caa4adc404f4e728be78916a1b7cf6b9d860db95b1b11b6aa6bb42b21245664f8da3dd9ac9f43e3e65f5925156491abc0cde97afa3c7f3c50d3a73a842c4b00032ad4a57db0934ae68433aeb2630302272b7d8920dd7efc004f48c3909947d523f3b615d188b040774f7802cf102cf09c9fd3c4f56236530b13cf193ab8d11d4b9d56b1ba48e924aed2590562ce606ae4afe4afbbeb7ce05b0f2439a4c40483098365d003d49e5f6278dd185ee3c30eade995eab1598eda4b0dd4b3d0118bbf6e7dff35fe848ecf3f4f54517afce9f87a2e672f1b2baf2864aa98c708d6b5fc25dbd5cb22759a35ba8e6f8b1b7d1953a10c61a457d21b3b30fc5e2c959b87e0ca30e0ae9cb7b96236c2cad2d6afebb4f916809979372fc56f4685380d4ad0bada3629289515e9ca10005867371849f43bc47bafdae0b92f59caaff219dedfb8e829e73e1c0741109ff7bcebd3d374ddb8d3a8c67125bdffe31aa036380580a4c930b8ca8db414d6fc5e998b093cfa27dbd74b3ef11ad8dda94ab893020d80723317c00231c9207613b57d48fbe3e53f9ec6e81cd2f70b87a49fcee7d3d44536fa5dcb91f4b7ebfd75d90d5b2914fb17e29fd472d016301e32588293af4999c6ac86a784d3dc39fa670657d52cb2f503190eb723f5273411a281cfff1a7679e3724a0394ab215185fa831a408eb399a9f9a0579bd20c3471903ac979a3b1e93703795c1868db2e37368406034ce9809439611114d88c0e22623bdc38cdc066f020ffc9d459a4ab737310818015d9c99a40633d4ebd91b5f71b80da20ebe71a41fc16fb548c0afbe09a770a5adf6422d20203e0ab449b9b4a03877442dcc8f861d36662d53a1b55e7f126c847ee396596dee4649724ee2f447a69b8c88f3fd1fa4aa31c99525d944f5288eebb5170e4ba178dedb9bd1297f4d28d923084b38b1454faaf921ca091f62ffab12f6b639464efbd75a8e512656b49468dbebb23571685de1eacd736f956d491b6bef628abc816cb9ad9962da2612e1e895f2222c18051f92be3f44344b133a3fc7a67cbc234d6347b02acc318690398ba735c5462fbf24635535c5e7b8b47212b084072e306ad98b717704cd51919a0ebf09509abd6f3ba9b9892752c661701f60c2f59098da166a70fcba47b7a914881c03386c24db6317a37264a7d186ba6d1a5489c451a2d41bfca18361d3cb36d476e3559a7aa80fb796838dff656d9dde8d442b7ba3b1130dc5cbaab3ec94a2b3e4c61ba458199dfc7125da6ef065d1e1480a5f248c3c87be8c11acda64593630aa77ee23c84c595165990b1520e698f9be7f5a3584d397d7fd2b5c29023d71766305fd8d6c3d2134872050ef95f89ff15f5b656e66292d06449b02a33450646ed472fa563cfae168ab389f6749b1aac2f1dddb58e17db0eb5ffed4d71c23766e123b3a14889488ee86bf65de934025f0dd07d6e17ddca0eb425ad260c7af009bec9e6bb166da1f6ea4d804ee23e46f9311b34a201fd88f5da68eaa14ed7ea233b1019ebecc3871407e28330dfee6d37f29db506e242187c4b886510bfd444bbcfb02d7fb3c0abd2a92805e460e0d1bfeb1a3f0c0aa1807932953cba0c6fdaaa1a24d57b89eac2f5d09831e31440aa9bef2cfaea2a28bf88951e4f15f512084eb3c804f1ade68e3b05ca1dd55b849409ec10c0f1d265a46fb9ed6bf9bc2865b3222edb77b118bc9bdc9f78a5975df6183f5c96fbb1a46a18ca2651c245b570ac3d7a92bc8cbcf1dc9d4a0168501737391187049f46d90fd98c20f9001d1d74e6980d19503899e2076575876e217bf86b836beb7f5625adccbe149255f108e5278a0e91a5091978df3a10a0648a020c4de927cac18e98f1110b0ce07552b63c9aece694fb9d8d2623924f52197c82f3c3e22c14c07aa8474430c1ded2a7636e0b5accb9fe765f37f38d301b7368d520e0c6ff0127565a65303c90967a25ecc861e65e29d056025a3b5edea9b55d36a7576e10568e1875f895e1975ba6589344cf607ac24b0f7c692439e11228cbecf92fbfa1830c2aaae4a5dc139558796475b091355a056856ae5ada471a5ae5fef0e8938a0ab22eac7a88332143f1147aaaa9376c3b525088e67733508795028a100ba6ff790cac279809570896fb4b14098aa85b233d81a64c3ce94e8dda5448d75fe63a45fb013e45523ad6cd279a6883a627f815cb78781fff4577542c87d79f7edbebb2896d35be6eea27cae747552b4438c3cc2d32e39ad92dfcaee73115d3e88eb1388eda66561e2b04c553dd647514272b66684666f7be929a9018c19cfde97ce3557e3a81eb2c087158b86aef50559c9ece3f4f39e49194cd23e703af815440a532f49b1887a8c7ea0174584024eb247c37ef2488d197cf7c113e87486fcf0a6df2a547c3aacfa3ec61023bca99aec989e8e44abac4873bc4322d53748203a67d981192a9ad3a6a5eb1f1b002e88bad6f256fe9fc3a8f3ca3bdfcc7aef88c7e4634672dd3c902611aa9faa7814a9cad0016980479313d623928e224d37cae5ce377cf6b787470964aa336fa51811ff3df430b8e1bd54c129095e1a1083e3ffb04d1f71084460d8a7688e7d2aacd633b1e8a99c4b7545f68f5ee43fea764d8931c266d5e67975aa7d8e18af5704122fc494e666d043573e3e36edc17c35eda5fc5ff02e96597138e671afaae0766a4c89303a2c7962bee3fecf4b98ba1852e3623806cd4ed9c1c2dc017d19da3c389b9ff2ec2084cd236a6ea3ea03788b39f74ee22170aa23d977593f8fb3c4006aeffe2e789a5db94f4500543468a027c3f41831b17cad3bb6742af5c8c17bf6a77d09c151bc7f95371f09a750a3db518902670795c701b9ddcde4ae526c4bb76d1109fb39997a1c1d443a7a2d5019a5251514b5bf226773d5bbb3369a8e122470dee97f84934bc5b37a141ca9cd4eb5d81d8489305b370d37ba41bbf64fb50fbb5053e5e32bebcd4bf47b2c05a7ea228107c033dd3d58e5ca40b336b201ebdf7c53aa244849a00251063a8543f0d1f8faaef1370269e11126605e8dce5adb83c7ae997be8d41b9e28cc34a332c85a6a569ad557c438e2ca2c9a7b8d8c1380b061bce325260739b991610bdbda13ad5d308466855738e94c84d31c7f6e54b139fe889b70a17cd928292b0f2c7b769d0cd6cbae4c3e239862a05be675dc47047a5df38fb8c4f0b18975199d267a3daa2868b69816026ab5433bb247a156d16de7dc80df680b2697ba070179cadf7ea299f0a55b2289175c18c4e35626995a6624dc2c4a90125e64c0b7a80d237359371f9270960b6080bed8b7c3b0925c5d6d9c56c48453426e68f0d6249fad671e682e4af90ccd42ed5142adb9e670bc76feb2fcfc2db9ee564ba93ffd9d7ffc37133b55fca49afe33d56d28851ba029c513c7abc2f28f018044b67c6afa16ba9e15e679990ec6f24f282720d2c486d886bcf014415ef9c0a1ca82e3106a90981d6c45ca2a33a00b5562598a6da2c49d6cc3104b4e43fc7d350bd369e62afe0d3250890f4917b6ab99d41083e21f672c20a63741e4d6379cf2f307d7d8bf2784ef942768c2489ebad57cfee4f6826b67ef0b8222c7a8970a8c1e8ebec44eb4dab36a578493c5e2f4460092fe286ee40cd4e733e0f131549dc63c25c1490e174b76c47c143954dcbf51dc1f43316f67b8142b28838c7119d99f1144c14ebca0b0b0d041c2df418c572cc37238757bf1ed5a41d6c298005da2ca5b0dba3c63ebca12c4176e463fdb6c686e4c501fb4f687694592dc5edbbe76e42e55ea1461bb37576bcac24ef79fa13da3559a49badb487c33d41488b0e3ea23c7080cbcfd61c280b0bf8910215c14e029c7585d45482fb8d305c43792e3508c98d0f3c91498509d62cc9746c93dafbd77fb4daf81736f592f9e8fdddf57ce1fd1b4032e9b1805d31db7f890d94436498f022a66793a0832b14b32707fe83d13b6d1ee54612a659312ed772a9cfd735f9000f0faab815e7dc5851ef58ade866d70e3ebd1e36876fb3b8209580223d8bfda772d83a181fb77ff40608e2a415f75189ad8186504770e3bfe7151a8e585a645ddf8522e346e658cdb87d0c2ca85267116a57461b73a0e3147a9de081fca4ac3146facf4d6f93dc0c3511de5a8517a881031bb884370d57afc42d290cc7a483fb9652f683af7639ad6518f77cd882f79d380fff36f5917b0dba2ee310ddddde491e1967102d1a5a28cf3d634a7b3689e60ef05982bccffdc0057c7e12b28803e0c76a0e57308dd9f8faf6d1e16448deeb4c33a289f5c8df0884e761e6e294caa82daa00db8b2d50451131d22697ade0a289d553f978d6b0a0b1e003370725e6008fcf03a78352e6c6efad5be76927b5ae30580bec214d6d6a885394d13fc6f31f823b2faf7a633153282a23f927fc17284c298bcd22c5331f1cef50a7b7b462522bf06f41908521f37967d01ff711d9a3e7bea732a3d52fe7a913a850f36d37b88beba1e92b3ad8dedee079761d6adf1d652cb92bbd88088564599904069dc91ea39e9d464cbdfaf79e386f259f2ba938a554b72dff601a23e0d8fe3271e6fd241c1bf45af684fd18f4b5f000b641da64dd6de5a452114040fc38c0fc1b9ffd327ef92c703c8e78c6c2fb04cb63ea73dfc9c50d6f1f0857a0326c99f871fb16ee84736196495332ac8fb916205a8e26842809f4541a5a7016b549d08ef36ea142fbcffeb382c5dc8f3f9b491f0f6df6c62cfdaa2d8aa3e059dbcbcdcdf89275dfa44a05f92e10bf548ad0fcc267da80fe7f7739ee5102fa48c5094d75148c7655c873aec0fdb380ddd0e860c91c2c09ad062370b6590f0a2adfd52485891f5bb3521c863d0a75b0119ef7ca4839ee7a08bb7bc534513fde81ac69d09bffba45c26da6c9957a0e35ab446a56a2dfb1ba1540e19a7d0c99e91c7e2017a68f7d9d439e342cfa2f5c4ee285223521ac1954b50610a79e1e1d97c802daeaf9bd51b47c096541b3f4b21721801b7b8155bd3807834d012bca7c782b9599b853db9708faedf4c8c32f9a357941505edef836b30c46c2b090159fb43af5814e0458f5791086c3eee84e8a6dfd72bf3e231c83e30e55abb36c907e85243aaaa9342cfb9a218e990dc5c8a3d4d15f377e9641fdb6af16517ce5093eef995cafae3f561b8f94beadc647ef219fc78b26f396b51ef7900ae3be845095c7593f01b1e891e5d553359d95ab698f027d8e1ddfe1edab8aa66c19d306f40b7f789647522309895941c799ffc292bad98f9f5dc644658c5e641f822623fbe6873669fcb9a2395d17e61dd54e088d87416b3dc86770660902dc6ac94226139cbfe6c0d4d82c316b73cf13f4853e4eeee9b02ba682a8bee69fc741fbfc37fffa412bca1b62da22f98f0d2d5a42ea52f0c39a3e0b7ad3821193ae265f80fef395119448d7ee9c19f3f5f2ad49c656502d08be4166a6a03a04d4be51472a77ead310ec0e4a5ccc2d375c9b0df787d9de99e208cf0cf50fa05c8d0901c0b3927d843ce4bfdbc2c3b03ae7fd57571666d881141ecd53adb8c37c4ab5a636cddfad9c03a2ae9749b15b5f612219ef2977fc331281b24c648df6a38fb176dac0ffb09c654ac23eaa7be7969c18e39a85d28cee5e3d46a66ee4ffd158f8740ba63dbf822062f6be22d189564c4e0597b023c0c7b7a50eafea8d5c8d0e230cb74ef025908dbd82632b4e1a28d7bdc6ceb133c4106d96b0dc86aae7b2843057abee34c5c4e3bbb17574172d8880dca7e60f31f4a17a4e0477b9ca5321143832a3a4987b0f1a52107117df808968d131822b850029af300213f796a4efaebb5358c48572c3153981f1bc53801644997cfc4303c63a746718180e80c964888847e59c5b096292e733ea17868830dcf903702a3750bf702b068c4a7cca72d235600366b8a7b5c91ff286a1bdd7d61bff05a5e3f3523d341ea2192c59e0bd8cdd949555e40129e167241cf30f7b2ae02fbd10421a3436515e9c044722967a37cdfb4f3bb59cec775a178d4ee161761358eb91a2d633141af46cd4cbadb8f269ddbb14c2db29c54b4b8e8d2d9916fb01534b1d71205e55ce0cdde9e3bc9a308558bfdf4ead2e9fee29d7a141b8c451fe081787589b073c6a890f2b7841bcb50b4dda343c3a6b9270d357a58089fdd775b0867ca3acb1e5fea3560f6dc77585dcd93a65a5c334837231ea8f00268d9502308e5a47caa8f2403f290c1281fccf6cb2c761e5e8f3d2c9b973c0e46db8dd618a728463d7fda144e0c736a23ed04c87b0d13334739a680e5cc1748a92a45efce888bf6a2d0a4ef72600f91fcfe0177ec4a6b39212ee728a1dc16074e9e410d69bb94d97a7dd66926584f653d194c72f1a51be481c2d0af00f3a0b074605830b3f5f4d6d1567cc8666397edbfa2294d9d4a96accadbdf5796fb297ae9d2b0cba46c527f0f587fbbf52d11c935129dc53b929d39b58c72f2360d8a2da8fde5175b2b08d560153672443c565df3dd130a0d56a474fd9ff66e0902805ef80496b75a8a56cd93f45e0466e7369014c849e5bd163f34de56a50eb3dff189ecb9c49146d843833a257c2144b85ceb94dbf4eb86a0e70ba24bfe929d14664baf0c58fb064f97d16e7496bde943ff947fc46f6f11e4e6c177c0ddca53b0486f655500ca8add814eb0bad85039fb1ddcd65dc6cbe4f6e7fa4f6ba0eb7cc506447c9547603276b465865dea91984a45728bef76b0db8ce3663f07a4ef958cdb9b972005f12d29d9e2807271374875aa0cfd91df88a72cb19d0c2e8e6b19e141987b811202fecaf441ea1c29407a16dd0de7ecf8bbfaddfc7f634519028d48166aba74df449cb7880104798d070f524b9e1569d9410a07a35132b5b6becda1593605fa8df31e1c4dc2cb97d2bc57adb035796b94775ab8eb39b9d075c50763d692c42111662ee925d20b5b61795910256e61779bad73b5bafd9884ad9e076cd3c529b7498d2d1bae671828f1badea1dfb323490b4b1a56a1bcdbc8164d7316a304a308d1961e7513d47c618c68c4015424523e9ec3278022c668d4b1bbc54be1a3b94b1ead012b9e91996187359f67d8e8468fd3502a436fb8d0a0f44d86392614ea5faf1c884ea6aa6036976fcdaf1e87e8eb043ebd64318b0a48c6fe456c69532b4b06a4bab5ff5032584973f75fa9fb54369e4ac63d7838241f61ac34fdfd613bfdd376117f50712ae603c8a37d2b9135c7366c3daad7ecd391e36480b00156d972ae233134aa1b27fff00816a89d19ac07e228fe1896d2cc19444fba776346ea205131ae4ceee69f881d94145a97b9153d4657213e586595a8c7adfb54e54367af81cb3536bc4bbc53e22ecf42ab24f8c15d0e317a9de42d00209b4c86c40596884b347f025f099eefd9d6311422a3cae9efee1ed98954392ebc852d54d09ec3c51d4b9d251841e16ad26c947504258057525c1b569a89b6940db6e79b83b2fe48309c59c0c98d1e92d4288320873e8a6584526d9d0efe616c9c3c5bd2331666af7336035ebac3ba699f9695ef59306aaf90616d4489e9f250649bc6478f278b1d8fe3983be00ac45f0965ddde6add4a3422af670102c45138f9f116efe78a35ae913446e843ae2fc151b9ad8e212c131ec66acf6b8e6438ac5a58c424b9a362f5fa81ece322ad2369b3cc8ef72b5d25e227914b115c8dc4cdf085295df7410d1ea5e7a8306e4c234df131f6180f4ce99fd3243b7c8aa89e77607211675fab2d027b082260a71f523d9c3f59d2fd7af096bdcb5e5b5dfd6b7a28cc22cf8a4389c003d612752e2202804e9eed41c4d7f638b8efe0186c41d1f08010b2361231e29268398c92bd37f396d0fbbffb26cf288bef5f9e4a754359323b131d30739937558ecd9cd527e05777792a8363e9081eb07bc1ddf6aaffb8b8e5c0957abee8efa577d1bb56d483eec9f533ba2002847a0c3887a27e8bb09dd5d4b6eefc0886d6b7698cf80524f61558373282cbe8b5543d2dfea53da902a0780a17ad84f38beb10f7cf60944cc56fe917b770b39a4aa5688e2d6a335ce0bd8b7f1cdd7edd6149ded5b2d9140f45edd86ee37078cecc1b74c2362bf09eb73eabf96c7b28a5a7184998e8684b809202485d6fb4403dc271b0b56c64b835ed21ca362de9c707e8274b7406bfee7085c1af2fe81fce31148583509b04fe24850e53bf841d6dec76438b5893097cfd582d8ddd8a9585fc5650e2847b10d532ae3b806b162c51503499cb01370221afb6580e70a6f119389b69bc0989ecf30bf6aae2d0a91641f4ec3e566a9b8b27c7a0c0a65e0b3eee79ace9c6751f760a0dde07d82e304dc7cad21e49580567e5e3ef52e954195c6bc081bd66b081f27fdbe2831ffacabea9ef4817a01846b0cf27544ee5a964387917af63ae36b4acf1976baf0a2bdde61e1008fb6ea420086e576477498316fcf8574a3a07695aba8e4ec0f5646e9602019682699bf48fe194f857b505773e1b974db9fbfe1b493e47195e43e3eb65c6feee4a60b91995a4716adc0c7cf8f47c8a4f27a65ff26a4480f475dfaa932b5aa7a3539bb322d085a71537abef4f885b910357449b97d360f14ed25f2a898b431793741aa1a3e4754388bfd92487e51e6412d5219333ce412e79b579bac106bf632befbcf891a2107bea73704582d4cfd6cc1851eebcee6f011fc622e3bba0ceeac8e9a2d497f2f758d2cd27a093b47054bd1f63c1cd2082742bb48a67b07156c83cda3633a5ce27a13a504e8890a7e061e89a97532647664815e095ebbd29725426bdba13842771d0aebc81be53a537602b47f6a7c42e39caed763d39567a86b9ce229c68db76dcf3cd912518cb5bd715034f7ce7896eeadfe4e73ce00112f104e3d361acb6efd96c3207af0ba5de8214d429d71a360d6a6cb111fb606da555c96321c8fd4b442604e58ef06571d75f7f47a1e5c4409076ff169d7f49f57807ead2ad091fdccc4cd8d9375e50cd4b8226890067cde851ae91d13fe2e76809a0fb79a081f77f5f8f8c744bbe134dc47a869ca452d752deef2a7ca6b4abb9303f3718bf20994a82e094654339814dd6c7ddbeb55b53de630b81b29c92a8af6f1c4d838f43e897bc77b782af6ce4e70bc3059dc38fc9a15c891ae74c047ce460acb96106bf9b3483f5f8790e8da7fb2dae9e629a07400bb75c863f6b03f91f0c69c354a3ed8e011bee5bea07e78ff696e1f71bf1d6f07009be0868fe9265b66e3cb8ee8b12ac7960800fd6f3325fde35150aef577ae9f56f798472f0dfb826900b6fde23d23bfd0ca80dbcdb0acdc1ef9397ef04acc77e6e7163d9cb718e25e1d82ab4fafb4d9579ac49c09928559b4a718af326ee0f30ccafc6c548e431e9875bc2cfad6864b84c8b9edab8617d3494ef651854b3f4082fbe8df77193d9685470ba9e8ca2df2b1ef64b656c2747a67bb302a0012fba8f93788a1cffeec09280642d8c276e160d3e18a87c56d0ff59ba270e29e61d15012a16804557a3ba1034421f07e95825f2167fbaffc5d54879a6d552cb21c1c9d457e932f4c2aa4aad9a758f92969119099a09a0d403751c4bc1bcfde4699f410f3fa99a515804a3d34bc73898993f9433cdc4a265f2faee751125f4d71c4998aec39ff1f38c404f208a9dc4447a9fdae30ab6e8e04410fee0a4e2c2e88b373720841971d6818b48996a3802e04d2a86b8bc843b6a24081a512dc348f22d60fd80852ceeead4ddf0dc05d9d5470e1bd8ab39583d72f29fba860bc4f92c34bae601018ef3850a19c98955e60fe6fc2886b578001052abbf6587d5641bed8bfd85d692e92efade7e5ca0ae4a296b35eeb334aac44fff660eb35302b526d7c4ece275c108cc9d8f0a40ce9ac10293b75cb5b01b85d93bbe03fac67067d582dbad66a93e41a6e910b08f92ab72c59f6a44689f345ab131c193f34e4ed25291f5c3cf8d0d2a732c8cfb5dce5bd311d9cb8a7579f22dbf68f41a18a641fd98494779514dbe1b258566ebc1b1bb43e3800f021c624653bdb363f915ba8f75e351d69033197c871a0282d04d33f286ad2824683be13d2f8b02b619eac3156241b98298ce221ab8826833869dbf7d1c80bbf14af03765d2907f1439477f882b22b69c52942999ab4d984aee657194b06f03a8eb117c024a325a58020ed6fdd302f35d5ee2f4982cacd2528976684f7bf96d4ff778f8a3a59bc354ef1f1bb2df7a7784632d1de94d3b70e08f062bc3dc2bc12b615e422cc329671eef0415b0d5ac9557f03344e3f31f25f2436edda46cc1f6d8a5acaded9c23d13f3b89a193692e2560fe31a0414aef76d3ac59a21369e605d0fd898de700d79bdfcd5c373b556c405c47c8051ed10155fb61a99be9d8d8f0e557a83242aa5b4d312e8a244cf2baa2c26b90ae641cd7659876edee3a761da4422f62a4025a1d5183b719a1bb33b5f1f25e89a7917093c1aeec080b19caade635011f97b41911c764464a13962fd932b2979d95ea8d352abe18999c74197ff4e524c74c8bd9b01a5668f8a2d30ef5ea9905605ea4b8e04b6ebbdb2428bab04d5cd230c6cb730690b9ab5334cfee205ef23c7501fced16c92b472e7753145a56e975a58eef1ca1c88a19992187d70568ac8933bf408f2674b0c49e05fe8dbb7801b377defa3cf4fc396b15e52b94e09c0fa6ab0b72f582653270237ac7b773df46a4dd51b7880768c275f76a2e819428a194f456dd2c365eb4f010c85b317b68733974c2dc880ddaade62ec1f47ef6532f6a22cec382693cde3cb4448cd8c303b9c240696f138173cd5f771670a8e2289a20109701eaee5c7ab7e7b21c9ebb536bfab7c3d08bb8264b9a2643d8e45641d87d08dc9b6c603ec4aff8d350ce83dfacb390c253b88951a5109e21a19109aa1727f9e7160184a45d5129d85b816f90899ab8edeb0d3cb4f4b7465f14d923701228215c0b9a0d13975ac89307c87c7ca49c35cc77f5588f738e5b289d473fc31751484b9d92ac42f99fc59935b68df6152b608fd8d99ce50523d419254b144dda39500a61561b1797e69ecdd64c456d80f2bacbf71e8af90546664119d75a8c9bd7e836b54927c8c4f9052407eb965fa589494c9d5f26af1e3ebf8763f052874eba3368dff8b30637e9d60866b863beec88fa57d17da348b6c078c028bfee972bf7d57f99cc16f160532290d2b6b8b4dfaadab9eadbe92cd877260e504a7a60e758d3ff13b903130d8afb6134e960adce284e2f7030daddff7fbf4c7a8dd19455dbe121018e24e83dcb2229a897587b75b122a91e55edfcedda2734d40b516d0273e68f1dc01f9a6e9bd1bc7ae6e2d472065cd3e90ed3e692f19ecd5130d893e30ac4d21efebe2eccad71a62e8202cf8164b2937ca64cd66222251a6ffad09c500d19978cb5a17f3efb8342d23cc4463d8f51ca234598cd3d3e7847e58a1f6982c5816ddeea9af0234c1af0ea58ef16f4cb46cf687523e5f0ea561c814d2815a343ad6d44fa5de237fe3d5c9abdba99d2eaffb70eb406373da6eb151fc1245264d2607f5113008710514ab94f097c5cf00ad807403342f743fe4a2df732a32812f0961ea05f87e1fdfbc1fdce85e2c54c2df3dab40e1a00add5a083d0d74dc643751047a83c77383031e370f3b5e985b70f1057e5bc3e0afabbe841869367000b75f0a71f4b6bac71a50a5339f27bda8b04e68e426928e8dc62321afa72f12c5a37178c708c41f5d2a5d507c130b4d3305d3b9fd4bc1ebe8e6f88bace505da52990e82d197a2b1f788bc55812013a087ccd305d45c04daa378c65ece6010f5afd43a13366b925863e42ebb18c6f906134391a882d51c8931ab0ee444414e3d4f5758679b63ca742e1b69209ba303f2e2114af21198a35f03b478ac19c0e1dd5ac9fcfd92b02d06cfb479e8b882dbdc187b0766a79f17aa2caefb98b5ae36e29285f4bdd7bb35e5e5f28d7f1e27650b3b4ae4bcb8df014ffcd50bee1e745dfcd81fc0e72fd0955f55ba382fc4d083891ee0711ce24dff4194736eed2d4e71c68e4b8f712a12f7e2573e454e6a135aca359567f4bb491429e22dcdfdbe93efda5e047c51f43720bf675d79ebb7b05e7895dda7dc06853c4ab6cc69e84ecd7d5a5b3a889d645aee7d0cbfcbb5ada5b43ef87e87b08549a4e814f9342e718902cf2d0ae8df40868cd1dd5726d85b106d59deb03f3a07ba39b1c595c21f268ce10ccf376533fc55a73902e8e704ec642b8568d9d126c6ca3bb2dd0dbbabc544f0b840ee258d054523149fd18b1c0aa50d495e5cb168dd35e4dd4c1dc822b4376dc0cc2895dff8223b5c46c8678d03c947d8cd11539c353a8c95a061133590c4f86e111b6837e841f45d9a74b3d7e18e5e8869275dc1452e80b6e96f84c287e9f55001034319f8fd3670c7d8241f45088045f166a6578ff026a60b0a7d315a0c0c125a1bb4f16712bddf07aa88b8bd14d918029cab7319e754bc9fbb2c0d939bf6b894b27e6aee55340fdbc425248c914aa6f90522e95fa2425462ed94a2530fabcefeb472ee9f6e2820c8d2a83a34e68d457664f16637fd81ce38cf52e89003da8b14fc91324c07e993c0f8e75c7f625803c550c74943f2e7ce4f67a4d14bccc6c89dbab74d4e804762d48ba56cf3a38e95c448f0e261bb3d1d1cd7240e512604e1c5096599104b9a40ffbfa80b83f15bf6cbbb7dfac15d1e5975e97c62ab09b03830999ae38b1211dc58783954768895d3a5bbffcc6bc2caccd477afc1c1bee5ec564556e85249cc259fce3f0594bd91def428deaafe6da5a4f9e6c0bb36e71d264eaffb6ced6ea6ebdc2049dab9b9c51a8ec02260d34367a0dcb0f7179c6f6d6976daffd0ac814414c1bfacb73bf23f7badc4a8a2167a307e0011b1889e2a605ce29a8789c75bb98e587a57f07895981ed89a336ab0294b0cb3f01fa2d42646a5e56d37c580b53b98caad5bc26c70e55629381ba1d7522536a35485882aa21e6bcfb4f14deb43638baee5d01c8672127656f30505cfbbc4c1c4fef576e648890009cb51cecbe199771194bc22b354792cc1579b510d4b71f74992d036a0e57d49ec17bff0a305b1e8707b878f4a3200ae4605bd49faff46d7bf42cbf2343c3355a4331714f961dccbb05d6bee23f1a921f46f1487f67fb5bff03ed9e67ebed0e3fb5df8e5b40fdcde3342ae2e813dcdd640f126710fa530fee997243aa5a91e6ea5cc8beb05444dde7a5592ff1a81bcf453bf5a24a588968c46175dcabd5f8aee5acff56f989341e0e1da6b3431892bc2b1e56d522fe9c9f7cdf0e157649010e858de93c89101c3105db2a80882e917c4b50c37361ab4ef5744c22cf8bf3d58c07cd3476ed9d669f7ec05d0aaac0f604b4fde2789973d54687b3a16c6ee48140a9124390f3f742dc55b9a7de41cf887f3a2e6ad10911a0819c916901014460dae3321f6204d2fc5628690c72d916a073d1e9f3a91ed4733b8fafc2ab0c76f2db4f35b88cc4e71a148b1ce990bdeb56b1ecd910065a2f0130d356cbdeb58683d8f688af845f04cf92017210aa2fd15a86ae844aae6516ee198be78d9b663501dbaa83a7560de5e3c25339331a7ff5e1f007f63c8dd18a027ab4fcb9c2089deccd219eeebd4213eef3960df2f2f052e9cf06a2e23013414304d9a8c5ed986d77f397dd79bd71c545dee26bc7293e9713340b9cce761f5f35e273aa7dfccb513342d5e883afea505f12d9cc2f02a08816c0ce8ebbe5f489f302be55d40dba54aa93a5878ca33e4ca6025f96e6a33260fa6c955854ea2235cea124575998158b127bb8b6930fdb9b2301a8d4b92e118e6537aa955bcd484df771abde7cad48ed583e0724b0007f0ceb625083923d0171145f164ad1fc9fe30e91f7f04336a1c06860885c326e69840b4f22dacb88f46466f646ca858c3add0c2980fccea1fe40871c41a04792e97234c75d1164f00e824ef07d71ed86af1929338fb2b32c391c673286989af37b6c53020067ce545f65eeea99700b84a0dad8fbe33fd064873628974eed6a3688a0ef5b100ebe96ec0c2fe0172536e7e325d219f03aff11bb3645edf9019721f9c191b1c9907dd6fa19305b3a15b17190e03778c8a60fecc1c175f88206e8cf98177b03a9fea45885208ed97e6fd01249c9190e97ceda4d3f324d14ed81e906a1b48f7d60322e8de3564a1ef190ea002d64899eb6b494e061511f5cd02d369996b2b0a2dc7a791ff425046e5d513fe1b2ff90e1437f521af5eb82c52fd2a978e3ec113f7297a515d1a9bd3568f82aa9d337a0d0c2dd756be6736596a738e8023e60c813eda35cda892e1a5157cd3190ba9e0cf7475e4fd959b2001e35688998336a40042caa4c7c845a06749186e3f9027727af33108297ba699b21eee3976ad21b9f817b437eae27554e2da01fa71ae6609432da5fc6ad7c14a46ee3b8ed6b31bd3e9cbd80c8124f3e34a3dc2b589eab5bea2bd5babe4932c071e99eec55c931f5b87515f06a5bd306e14d3b3a978d42b7d8f1f0bc48863f27ebe193e8b984a3a1622b2072f633f96d95b16232f57a78d68061f25db276be58379c40b9bb67e9f5f0a5a76c148f81b2c7bcd8a76623680baeed0561e5a5e17ef7a70481c5b0b4860b5f87bfcb24335bf4cb62d4c2da3841492c3fe945781d7bb09f37461c37623af6a46f40cf348fc966fd8d876c8514de3ec2dbd4371de2d5198c58f3d4477bbc590553b553b1d5075b4e4664ab285248d308056c00bd687e1aaa6348e853c22bb28cee466a3dad4fd76398cdc26e27fd2b1d487751a69c5c2e5bd9826111590d4be66708431ce5019d0581dc9909d32d619ac6afa2dc32feaf1889b6e3eecae776ecd8aa65ca3e13c35faf049c24f170f7d3e3aaa414ceb5f219d0dec74997b77b5f974a901a5d024d00cee6ef4b253f48a86c08fcca2286cdae95113efa1c4eba28455895dfca22ceae5f34e44d8dc5c46ca6e1b474db0afef94b4047c01b012283df04f9db9bf5388a56205c765659f4a8c8f7dca868a91539efb801c8cf68431f6815b70e9b316d1fa14711626f5232f6343cef152205f8f126fe9f203f8850ed6190a34aba3171feafede5c7077699e6ab126e92e4a823d9cc2dbf9792f3692ed7effc52301628ad3c8a07e579ad6e2c973c7f1815653c517e825e13e2f3f250ca98151170d3fe9cbfa25fdb5b85affe7c9ca72535f127b6946dde5b11b4b813cde3d0f64829880642c209ac70c08bd288f39046e964cd36b17439ef3d666904bfdbca37d5e418fc675586c48c4599088741e2ae016dde61eef29b5fe147ac535f3a3484d7b8c7aecb56f66c4605e8907d468af5ad845fabbf64f02203d02ad5294ebc4b7128d8da1b127dcdb12baa759fc5e3a40f2af4cd905bf52dca2d0dc9f5a8aec44c94e00d635e7c3c808e229378fbc2d6be3dcb35990d04968664bdf198ef2ea12abb26786c6df675ce022370db4f4c38ecfbb0bbc9f84d0d050366d7cc8a9b9929b33a11ff7558d6f87b6bdbdd6df8d92f621237197d2595851525b923eeec4a3852e32a58f9b36f96deb3ac6275f3e7451d19be1adf421ca3ba55fd4ef78f1713d0a94503b3e515bff0b604f916e59cefd3711895197e83796a5745252f2370f03e2c6a21984474f1974e7c369c07280c8219285fd27a7a929aea880a1fce717f731711de64863a363aa1c0321d9d964b3537145370fa9c9802d5d2c30313a88b0897d11b640333b35e9699ce5d6575c1fb52c3b3abb7798aee45d51254fdf60aae21b0fa846d0da8f0a33ea382e419d011438d1b343b9e52804591e7f57f4c7e775e77dd7107668390d87826b34975a070c237f1fb62ff95452bb98e35f86cf0e4df6e477849a6d4823d8953b9c11a7343eb4d20ec8b97143f1644a6abb26f3f5ea49491be18a77124d84e5744d4638c8406c68fe50451819a3b675ab834dd0fdfaa8fd1dcaef587f3911b5d2cf3b15bc08ee73d74b1e8838ded5a7b5b6774bfb4cf9f59fb66e878b63372166413f4364ab8e0b2938119972fa5e74c9f23cc294cdd7383526b1ce3b8e4e221385883d141fce02bc3b4892ec84d3da9546588d2edc56d0bdf023dc4ccac3b731aeb289458790858237851ee75fa01e8e1d8e084644857e992583e34b4a23f907bf3120471c817334a21bbceea5c67d0ad637c8a5a702470984153e859a379af263d1db967bd5bb405b67333be25eda4913eb8ab68263babe922c59e58aede4cd06fbd9a6cc0c39c2918672293a2566f3e5b3de55aa12954b6140bf96c0c2ecb4549dd1a3bcf5e22a9bf190ba0a50ce2f9bc2648bb98147165f50f6f2126d2151cea975fa957253f892135ac54d4c4fd090e406118073d93afe21f281b60d3e20eec916aee2104de7065178e615c5317ea7383bb23743c9ceb1271fb0d22f2d6c21487176d1ad21ade9dc911f3d83a3d57c999a824f89d665636d94947ba833780809a9c5464c561ea523d72365273fb2977ae4a650295e578b44db03b742b061b22faa31d5bf14397cd1bc5b657b35b6b463f33e3c2382a9eb48e3e892bcdce210488a971d4efd09d1d4a6854fbd69439bc579db2e9e17025b65e871116f9aa1137e9ee95e1f47ec2c8c0d0e6f2ded69bc975b72ca5769d2db60d0cf00c4294df8567b5fd9db3bf8c5aaac312e58b98cbef951bbcab05a5c59a474044c8667dc1c19f0d25208bf51369f5b542e0e82ffe84acb365f489f405ebb106585fe4ffd08270e788964fd2fc275dc85d8cba03adefd849b831acfc27daef51ea2c261a0b2ff318f4b53f7670899732ab217dcad06e7948cb2dca57a7ff0308cef36a4acfcd851bd455146706add33fcc01e5faff2aab3d8c3d029a019878cc3371e66d5db94b03e9a2b9402b4f1023b04f56133d3e8825c983a77a56461a233608ebc08d794feab3324b4f38ba0b57b65a4514d41427b9c9d5a09ec4ce7881fdff396f5283e7861f567ed9c55436333b69f7dedd701f472dbcb1befc747095633351588c0c84ded13a80361b408b9cac5f1657a581f98ee82bc9ddd151621ed0020f3405d15d025372d90165ac758975060e60d43166003f1d4558fe81b3852401b487ffc43e8e9bcd0405ee967ed8c0f4d4459f884b8ef842a8ca3f6e022d7efafea9f491cad81a6ab4ca98c44b3073de3e36aeb5e8c2f7113d3178cb2566e5623d9ac334ad3d795dc634a4f0b5c0b927683f81f7efb8c1c7b6f5654ae4da426ba2a490eb8a678c098f6d02ed8005ab032e6137f6244489df7e7c3815922dfe497e0a308b4ac5a4a01e5d5b63ed0ea4592362ff31ab1553d9c1e4a022680f33087d0c50242e6170c807ce8591997e21a5ee0fc63592ffe65343d2114fc6ea8671f6bbdb1a13af996a5ca29fe245fcadf45d4e399401a71087f90c8090af33fd2ae758d7f6192b36b1ec8cf7ea53913d45cda72186a24e3bb8253405a13cfa66ef49708db96520a868123a10077c8213166c331052ffeddb74fc87337aa49b19a3f26f630bd3c434991a33864e7fffe0af0c2ffaaf041dcb4e07a137030a816c356da551495ab9c27974623da8394d76249f42fc1acab2fd23c3f2368e010d2c9eedc7f2cb6e796bf619ab55fd2ee15af4d1439441abebd0f0b0aa0924120581eeb3ac24eab5322a86eadea6f0c970ad2e3ec5b8d92a9bdeb66ff4bff616720950015a14033e529700995ec8636c14e4247c3d0db27e38db9b31c911ef5461816a935724d74cac369ac6367e94baa2a08f1b865d6a707395142360e8b5cd2190ef144dcf0912e9fa911b846978f60a7f3e2130e38a74ee12a7948ee8a6a4872047785eba15cc6fc02404b8649b1cf717543ca83c28f0323de612227be9d77491ec7c30d12af062d6c08d1b5be69d47c0484014e684a7ff87cd4aff8d52c1d77e3b7faaf881da285d6032ec5c920d2a3111faae844edbc93bb8aca8c71a8011f43fbc786b4f2c25f7957c8ac5299ef981933a2d58628e9bfaa6fb0ae28e067d6e8c88b55118f134a982be25f5a40e1a19024793f4f8f628d5f3f609d868da9f58463028e4fdfda71447c14c896535872af5f33dbae519345e35936d9443cac4979eca02dc54892bdf100c790791783690f05ae9a2460192aac7fe6263f807711ffc0a44506b071f6ee2c6a1c34d72896b89e2c669adeb6626fa4d9ae866d509109d1d54bf35ad9fa8d78c25f6fa7a2563cf75470f24e93b986ab0105ed233bc40cbbfb111dd8de7904845b386db4f44fe0241853146dd62045898534285a1a287f7d3bfdeb1c253d14195bf5154b8f440e20e9e4f96513ddae18de92502277f05e2cd44dba674bab32b9db9d087cfcefaa415dbc03ccb8d8d0bdeef4ef447f38fa27ecfbfbf3cb68067a48ac55e3acba1c3580bd288c3eaf5a8970414aa92e8141172c180e1f8f42319cbab9c69f5ff7112501eeba1e3459924d0bb9e3546b882aca6f9bbe1dc591888e6fcc88a3dfef39f43507e21baca6f160d7a51f43a148136f05c2b1d0e67de0556dd1599b2f3d6f4772c6f57cd9b50f14b029ea0fb2ec2d7c5df188e296c4c04f26486b9644b116399413acb004eea56392ff9f59257e04566a4d0e90e306675d21410c1676c7952f7aa593eb203eb05cf92bd3d259a10c72cacbcf1d6c1b69ab1e7be84b2b9ae155c62a90d5e5be5a0c14d353e33dd705ce5088fb75567f98467d7ef8166bc8e876e13f03641da6741e915e60b9ff22e3f74c8fd9a3d81146438d7844d5a88049c50b161b21bd430be324b0b70e45e2bade602417210338e6f743379d1456f76746087aa674c8856a008d5ea6059520a00aca493432a851e850449ab6708cae32b567e599e8ea2441a452d5952ca95aa5066cc35157633564db9b0020dff9b445e4cf114e73d19fc448212577923fed0ded436c42ed6408de2620674b5d6cec2979177d0c10ef1d27907f6d5897c1ff71f234b0530b7ada463ba985ebdeb51280fcf821d192260de1c0236a911cb2588179e3bb431e8ad77f77ad83241c027ba6dc44650e72c30103a29e2b9b37c41dae15b71bf9e051a4c86f8ba69c4343a7c395c74aa44169efa6c723d6a586e2dc368ead2deecfd76cf0b46d84887afd8e85885064e5edb65aa10a56d82f65bc6f7eb04068b9c85795427790a501fc4f37e78667cfb80c8ca20aad0c1775c7f19f261a8bde8bedd918fa6650cd389151e3e73de5e0f5e8e0b0ca358ec6275d6f33abb938d9571907c0bb450a94416473bac94bd27b6b8da54cd3bfe06efe49123e261cbf539edb09fddf54c2875d102493bfb72ecbf69669c32828297c4e45f9d89f847ca498add2b3834ec5ea4d3b43d1a248c2b0a9493116dc5621e9a0249f0ee57ea34ba6b09365be6a34b1da3e2e57a3b37563f5168ed86ee9d600377c51bd7a0f9ce518ff94973281b609efaaeedb0003f9b393433ec72ee7d0b8fd3564e9d311446a6af7bc1948c112c53aed2879339d926a26f4a5cd7a02f7d15d3c701945aef45f2b284412eff3513ffc6018d5e700e8e558055627f6fa19d22d4c243f405c00fe8c6d13bbc9f89f0a57beeb1b073872016facdb4a5a9892188fa01a00fd26c5bb170543fdfc38b6099f81dc5ae7d00f3274ed22123d11fca31d499f3274dfe0d018160d63b2f18a4c9ea19b58c7d8efb860e24ad25acbdc44d498cd6981ae174217c00cc700d4691e99c78c36c9d1c15ed6f682191ca9ef29b618cab280659c7e87d7af2356a9eebc28c1508646e161c8625664aa24eb08d982229adc4905f6f69ba0ad964848cb79da1153e3188abcb5251633c1501e1c7980fba8da0f9d70b3fc0e693688c13c1bc7acd05b22d4d53dea6981a03264060a297524b7b28616686c359ab7c6c53902d1aa5c20d3e4a2ed4e577bd9b0d635a0573b164a77c086d0796f74dff9f2037dd613bae46d38969e9c67290edd57660760c13524831c4cf402b1eae1536c903b173f7de823b0be8f8015faeccbe996b4ecfded2b792adbc32d9318ff9db69bdee8fd2265fd61958c518ad347beb70f595f84a395878a6f8b55b3c714a98e4fa24e1563ca7980825ab4d67ceec958ef37f21ae8d28aecb50f948be89782d1fb523bc30098007e75e1d22bc792ab6b3d739065b951fdf70756c19fe4edaa8772cb7aa0988f51841ccd1707fb9eada5ca205a0b399a62ac18091de297eaaf28e82419cbe2166c9e3a04aa7fe77f7fa6e82d1131d8a161c72ae9c1c47ce91b185ff777bada8d83f80a2bc8325251ff37a71cc01bf115236e9ded4573c27ade401575d4ae8667502f32387fd0ed719831b02ce6b770453617808ca2330be4fcd271f9e1d46edcdf60872938557ffbb9ee3af7e0e9a60b5e9005630ac69aa080c94fea24915e2d140b59e1e859e8ef01732da461bcdbbf9670a6f6e9faafc68c49a4996356adaf9b27039f61b8baa15c582ae36ee66470173e0408b30a7276ed5fb8c7d671186599827cfa98a8cf7744801979cb12e1c250af2cbeda9bef00a10f0699353b3b95c4bc6cdf384c4a93f80da40398e028e87ac706a05f2f1b493eca276903d63b6d1e507e70263bc1c383165131d958b8adb9ad044b8acc42d213cc37759a4e61cdbf2895b5fdf95c76b7b334ee1ec94423ab278b4c49cd930bde5ba47f299cf2017a8b17cd0a2d8b9f748f6eb62df77a4cc4a86e4005f278d0d041bc9d6b742f46d9705821c274496223b9dac15e1167544ed208e85e03921be21fdd6b875338c4701db186c54aef263f1ff1863ccdd719993044fc99dc76046648e92e960008fff34c4822a6e27682a394f933958adf987e84f2daa55a71839a803e1698a75e77aab077d4c6b17040a013d732a393506e14b789d4095b73a4fa239257c2b515a6d870f17feb3fe933b13a2f68f95626f41e35e0b6a7ca793f999829ed1d068179604056e26dbdfcb452add67e3ddd86905087d81fe3e718931805a7de29ed3f1921f62da88abfddcae9d9209c1d3433b4d7b304b01dd185b973383e308911ec4749be650c5ab3c59bfdb7886bb0cf6ead3e91256172f557c199cfa6645b110dfaffa802507a792df88d8f20dca22354e8646566e640eecf3b41c35c5d772c8e91d457f658266958c309a07c90e126839607d455a7d2530da0b8a255066873d60a0a7c027211649d6de30d5555b55812579f6cd0196cdfedbc60643c1941205331e256e3e9674b87ea45ba69d9030215cda63e835251cf9591486a921a63d01ce91a016e7b8fabfb47ce9dbda7cf18ce7026f725e57a115635e8254a189cbfc9fae6af0e863094516e2bffd507dc7eba46cad4d53878c070568e3b545bd6a97cc75eb34255cddffe449e226c66e24cefb4fe3de05582209e3770560d6bd4bd5b5aacfb9e6f2b1ae337fd9157846ade697cdc85d8b6d371f5e6419226d2e40ae161d7522d5957760768cacf1e998d85c6ca700e3670fa1fe60999188d984952e1c7e81de693ffeef0d8b25b3db5e2e006dc2b0bb1e56af6952d3c863fe8ff5090f02a0c1e64c740f71bbfe7c4f3fd47d39c758b8685cfd795f610b736e5c81696f7bac724a4a11267d103b7099bed87d6ac60f358ad4fb6f0cf77ca27728d32dbde0bbe55f15bcd872ffea27df70e430938fb8ec2676a72da3eeea6c8c8128ef23ed1e9bd61d573424f83922c0ab642e066879033d4b22da636da1a93cf6369cb92621d9c2394ae30de1a1a6545bfe5d27f666b56762284b04c9eb2ee6bbd76fc68858c6501b8b4e62806d4d0d925db8c86433d2b60e0e880eda096adaddfcc54ac2cca67760dfe36cc57cfe3de1f3628d7315f2835427a1cddf01fd932e35048e0bdb25a82ca399e708d9662ae6d64b9bb3f19091fcaacf70ae7d429f16b229987754ca9db3bf4f58c9fc25d81d6ead635f7b8056cb1efd1c95fe50853b89dea734f83ebe7e1c12224feda895d6963187ba371fe5a4bfc03c0f58b0376c58e1e6220cc9059d8c8667a6f36498d87ff39d6ff598d9dc1ddb611be5dce698b161b1abd2c9214d3974b6b3bb73edb153d64417f4aa9c517e24c2a9c909eb45f2f513a3c6fb8fa8dd73bc25043d1e6132c40cb281ded22fbd3dd31053a251041f2f850607eebe1b65a4f63651344db5670f428c85c34e5e42b630c26bc1244e50340c1a14b2c9b95cc0061469f1f14548ef45e738049693a4bb6bb9b9b96dd530cdc478f951db4bb263dd3967cd3d4045009b1522c2bb3bcd6af27ff44a3995fe742904ed42b61e39177948e0fbdb1ae2c98c01e87bd3def7e941a4e7939356a7cea909fb173538b23ef861c971f30ef5a41722afc7b3e40eb1be84028cc15e77f468f3a8ce8f5ab33826f66f9f32da8332d709dd3285e9ba9678c5e299e554dc689359e108dcb6a53dbcc506ae4622b5fc3cd544c6115919bcaa8e78c439ea4b04c306fe0d559fc1322106fd9796dad06390a77edee9cf83abc9c330975ff4c8bb7a44444e14a36d8d095bdfc066a0c3a11ce7abd9dfec9cfbd105245e81d850b02b87052fb548e4129ff95de5a9b0e88813e43f05265cde1324c59c6635a81f1087d66b5f9b44ebce4a00b23cd2dc40c742962e66e189be942ca2cec77b8be86c197bc6f88b5a4eb3682f2765cb1fe4e91d44677e30ebdbc0880ff49b4e5e81673217e1140bba0f82de9739082d9073a4bf6e91ff9aedc4120483911cfe2dc78b734aae424e226b1cd17624a71ef3ba7f8e065bcb75af3df4c0eecaf28397be6a1a2354e5eaf714178962d8e5d5ce6f1bb68db63be82b46acac9bac726164540533dab371f8e88be60e2fd70892748e68369cca3829bed57c98c3c0732f3f4ece8c1a1e185215d0d444982c22c34ee11cbada6cd3a70b3e8f6bd32a15ea669f7d64a78e8f7e352925739263d9d6189b9ec8add684adf3520f9b3deba70c01b164d112c2ba141151e20366b07de7455e7c36f393351b87c5c4c84f51a089221181bae3a48796caa8c058c0c0266eab92fb495a62f42b43420acadf1d93c1146e8051ea964e28dabf4703756580d2ca28c9e42881851b6ca23483290f5468527fe89d9ba56ff7288b9b9d2c5d248c5b0bad1cfd9c503b4f96715a448d7b7d086d26d039bfc0888bf2b2ad0abc7e1cc69f3d2a142bb08b5dec2268c9763dbf1b8eb6a094d036231ecc7e5eaff66f239ae0cead853889d0a813b63b7c24bee4222c795fed92178ea00084846ed00da23d7aa48bf390bfa99bb4c0ffc4c49174fc71cfd5369327d92e2642c3852907251394cbf7cbb58d241f3ff0b3067263a8cb45a0af62ab1be12afb36e1ec097df2491ce9344e96ac5048b3acbfc17d145fa57f90458e24833798a256cf8f4c1b450596dbe76ae773d3bfb908e06a53c4dfd44da60e5015a6b5b7295cb85369314edee77d675d8d3fa91ef95b2409b8cacbfaa35f5caa7e148bfe2cd5a7fdb5b49c14ee1849ca25ea94dc4dba25d3d81b3c6246b5433860557cce1cef027ddf6067a1fd44920be863b2a26930e6bae8feea975b72a6d836f6a087ccafb7e99dcc97eecb743a793cddcd2334d858f96b832f1420f87e3f6c6cce4287727bd18209961ac028dc6f3cfabb8990804344fb6559341a402fc14958b7a43c8a8bbed8477e21cef500500dfb7c4ad493b3d71a4e5dbbcaf80669741309eb8371ffa6ef89fdc6326957bf6883bb9f0c14b47745200761857c9d7888962327b4888237e7ca8e2d074e14b808e050b04336807709c324fbb83640f2916ce5f45aab6366c6c7ce6974d1c3621a26202a94a8f43d210e2cb4537cf1569ec8321a466da4a505a5a2f36ef6710f4eab8f79078df8cba1986cb32a831127b845eb8361bd153fee7cb1f74ceae35ad178dc9db37bc465f8f01d866e5936848203ed5cbe399b56fe0dc787ad16acdccb3125aa22f5ce50ed3b32a1c3fc3195dde1320237f53d599927ca0fc3f82a1b0fd3dc76e243e97d1dce15b5da1f329cd027c7f13303dc7dc22699da1c70b553ff4bd2b69da98fd08ce685fcaeb3d5881ae08238526db44e52b3470064878200983aa4317dcd9f18e85710804643d7e5e95b68f5f5b00477d188735b3e1161c69bd4d7017130ea743bc81f9d2408aed0f7a9ca82397563ab76a05033e6ec69eb8d21e3354cda4ff484f4588ceca88ee7b27f386c227765c7109f63031a427bf5b39c1d68ef09b6022eb23f66a409fda409b4a628afce6b92adb31f0e2dc247c4b39d78e33f28a2a98b880c739b55d75c11f47454799e37fd18cf1016f5c27556f246a95ea4ae6fdd1e481a3093e241b40ccffa51b949ba539fee2dc1929a0c8061edcea9438e10e47a4817fef946c2d67f70e8117e27ce1f76789722b00c625ebaa027af5e24b54789e7996447e9c4179ebebffda6e8e437d5aa4ab4f010f4454bcd85be51d6d1410595cea860c218fa07735a73d003670229590099b900947e61027b7b63ea74d5959e9087fe1aff893e9ee0796512d5079d8a9fbe9393c49e320adc71a8c97b3dd724153bfc8856904a32dc73cb1135025e2ffff7739db3eb181d65a1b6b2c5a927930a065bd127b3b4c4fdb46a03057fde60fc1a34d65a62833c2601e7f5099bf87005287d7746f19db110e00414fa71859385700de9936c6300d55887dfc409e739d6cc1d43db786b529ed9655af4f2ffea6c2634ec65149556e55876e734b1422165897ef7989974a0d360f98239564c52455d9f83e35b03f5c43bf24be028673545cc7aa244ba9a0c4414fbcd8d53df795e84a45e8e52da74a270f4399c7e5bbbc9c16f889b395bcaa1690d43d660a3f543356a6e195d0d14cf4aeae076f543a66b8ad0e2b2f6ac65be7140516bd3f9bb1635495f6270fe35002bf9f862114bf3a844502486766a71b75bf0ca9f7e9fb47a8d0cbe91567aa063e761c8067dbe3f76c9292ac1d763d15bcccf4019cbbd1de5af58bddbdb2e66f3c6178acde95864f26ac4a2093995498ff4a28f78002655a3e56b792f0d8a0c88393260e4276e966668ccd8d001e74d69ab07bd97313913e8af98d327a3a35cd030bf0d1fb749abecc3048614155084b849877aecd1519cca4b66f66a993d7dbf7d9e77f7db5cac219b141700f0701faa4e41d6a566c92c2eff50a10cf2fa96482c3d6f76ac7e3588aa5997cc2e6e4b22266f015faabeb3384c401d45352be081ee8487217c58fd9eb8e63fd6ecbf989c2b44a37f316f73ca293c1a305adcd79b8cec827a69edc603476262f0d41f300905acbc404aed3341f70c70e8e83e326530803d7aa8a959f531b10ba436ada0816540291c19b3ee4fdf783dc6a905978aec8205a790966506de0573a2ce7fc8f89b833dce01d7562b81b4d9eaf2d36625e4530869fc0d960d53665917877f2764fa15ef2735962d67f0117321fdbd476256c9261a3f58af52a6c504865a06691cb5351b3c10eaf3f2efacb4555a8eb669c224fbdbfccc588f71a0fd834bf9307e8a0b224aee844ff22a138b369be553caf4d0fea4597c6277def4adaa0571b77da232e6680dd4c88e339fb25559d70ed76be4612b13f0771b9e365f87672d5922850727a34263d80af22c418b0128124a276cd4065088eb4a5a8c192e979d053830ae1f578ef8dd2eff72609b3b7708fa8011130d2fe89cfa8b674cb5b550b41930d71fdefda45d6a2981457966d610d26b14fa01ac783d00c8ac35a39fa26da6d14c5f4f9f582c07b898fab3f7e76a571c67474eeaecb9d15be59a85a6bbbbdfd1f7d5a12e916b6c5a9cdc5b5539ad14cb260e2f31d7aac7f13e8aa01d1339510e56d81d5bb7db77f086eb78700c1ac18559959ed60d192bce7e256a06691ad66aa950762e290b9ab81a1366fd68980831fd014a2f3ea9b70859498ed16577f4eb7a204dfb09507bc55e42d1e211b3169a811ac0e8ac33f4abf29cb53c73d266a85c25aa4b78f631bf585823a1f744d83fe5b3b072a70a78154519388e8eca648f143acad49744471b58a9dacc03b753d001c35309d7f8e5a4b06412e36bfe0cd5245353ad0decbea94b6d46d558dc5d5cfbbcd7c474b550ddac239a7a6a9a7632d3e325554199400b986143e9d68d082e64a7be21df212a1faf7b63afc87da9ad94a7ffb803d3e39d06f8486450d0aba9b7be32208f83aba34ae8f6193e729416cf8986cc4cc285c07daee6a0982cb0ce9a7bd24e04826b2deadc5bc0878ab7a8d331ba2b7526d7184d21f9b5a5d4a5b14159517e9f67a39833dac8c3dd3fdadbaf90761b24e8c99d8d167893e4aabdd2a0af894c6db581e99a98ddde77bdebf351afb8c3a493ff656af0836ccbb5085f350087377253b7a3713e598410b9a06e3a6eb915e21cb9563f1e684af6b55054c357f462c34df5291fa8f7d031afc925b11074cc2cca8f15bd06e64b97e73556f3a4484f8e7162bb4f2a74ba998337c27c5396e87fe67c0cb8e9bd8a79ad9306fe7dad7d7ab3f04f1a78df337e3233148b0dfa17f8ed88e2e36c1035b3884143f43d12a9a354c59818c25bcf6e46fe06977119ad15fb0fd0c2ab8163bf62010877653a13def6e92aff1935d2750be277b56499bc16bda243a53dc1dcf8f417ee4a10ca02704ffb92591cad3c664549a057a410685e8ea52150b02c36e35bb5df8af9ba466445553981e223e765b730615952343ca11d915203abe306b47315271ef767fa305f209ec05fe301052b47af0cd60431ab4940e3adfe2f8a0c22d1f2b8ec9eb9ece2351cd8abb92dcd05ab03e8f4bfe25a041c8c6da6f95bde2c61e969dda29ff1ffe646bbf9f5e815c207493965b00895799c278c062191e193889f241281af71eca7a8f55867a7e1aff7f4193ae465bdb50a706a2c588da801ffda9eafc1d5dfe839f5849db019725c6e949c80190c6b84f483de42a70e8ba4a491cf1597eaf680f1da8f0733e3b1948e12836a5a08a4f985a8666a83eeb3807b8608b87c31a5f878d2e49edbcec3066e70b8ac882fa0f58462a6be435136aea8790b3480eca4f5f6f0d955aa8675a8e1f01e5d1c4ac83e80ee5bd846e4b4a21e1de891c89668350d09aad5ceba25119c2d145b0b65427508d479c458ee2b08e54f084b78d743557f9678188903922383ca879ad7abd4039412a21fbc0eaab8804fe2543870958cc958f196fb8d32f419bc2eedfe2edff6d42c14561710f11b31aca37dcbd34d40d330f461aafac8c63c341abb8a40e68f8549910484e7eb34feb6c45d6bb2747db15cb9284ef01bf6d892bd4c5fc1fe44b496913a0ff6077a82c52f2db95b1310593a4ea72c31fc30591ab271e07b2c03c5af0eb1a49bb254d7ae0167e967ddc9797813868c59931bf32bcfbdf7e7dab02ba507d48866a1017c73f38a435385ba751d36225f59b5b4c05b2fc5e9ce92db85dae521f89d0fa13e40b1d8c9cbb9b23c963ac6b88f28eade0767625bb95f3a35318f0da1d9412ba2dadaa8721dfb717f8059048079580ce41f9c445f286d033c3f36da4b627f5b29f4be93702bb643cd377f164ae4b5636be5d1d1b70b55eda1e7f27c75051506dc2594d3c5eb2bf07ebec7ebbb8514fc49913ff5a740f205001a307c077ae9d2ca1dc7ba1da1f2e8aa8bdc16b81bc496d819434c8a854b15177936e6106e925654d3ef5b497d0790a13ebbb52081bef9d04cb419297dbc6c0e70879395df563b1739432b334f9476ef97ad962520e73951f12a7d55e3d61865f80b25aea5fd234b8fcd8ddad4339f6292cabe91913cf2a10e9c71d0caa389fc0c8687261be3724b0d2b8d59f7866ca685feb38f51a37e47cdae216f5fb85fa011d216faf4b28536df266817d630124c83ca1aeecf37f5cb7797f7fa57f9a0b6c9bb6c711628f796fdc6d26356e182afaaafd8c249755da2664111935affebc67f73d54b901268506b85037feec4b7ec22996fef68d636a5aa0c435c801e08205f255bd51ee6bd437b06b818f4570fcc89f156c2773a4ac57491f150220b3d017056b753b8db61ef2eda964d9295147c27d8a12f203c9ac946ab96433ae59427a03597e91d5bb18381a35f3043a02e86fec74ce0d2dccb1423b53fa49284cc7933635dc7946c57bc9ef9e0fdcee87420dc6728d0d476e2c17b84f63e82b4bf3b9b2646e938c99101f5083805bc1181ca55a3bd1ab8ca0e3f70c3b62df591dd05afa2a35af873a55a4cbb9a9659315864f2e180608daa0178d4d675de589c5449e168e2e6ebd58f4e94249fc11ef7be0cb34be30287e1a8d233fa4f74d3436e4583703b0bc7d174a675aae5fe85a4f9cbaa3736a026b2b7b3297d92d833e71d34f0632180a9e40e23b2da738e5c9a501eccf8e896ddd2de16a6f61cd95cf0dcc3106e93d0ea7de31a387e727127ed69a286646c0c3d3853de46dcbfeb41dc4ab9082a2370a1d4e61ba58dd6ac5e63d5a7557f5b1f8deaf8c11406dbf0c330d3587b2b9873d7481f5e6c32f044afcdaf404c0481e0f6088fa8c5ce181e597c1a8ea2caca76f3352acf4d67229ac8e32f099755d2c1410d661ac8c803c206695b9964e474bd36d7776f35922e000042b54f7c6ecf3b054b967fffd16cbd74f5b0f95455dc79e89951e99e9852a77cb371a6bf17bbf13ea9ac7ad8fa3d961b9d0bcb20821632e0ecc565d3c7932d57f71a82210645488c9319f525dd0cbdff5c829a066f44fdcc059aa38a9bf8d19f303a24bd582dceccea7d6aada4005ff0198ab80d97806df1fa68ac95608eeee45597f9d1be722c9be38ffd9f7a43022073c417e47aa8b8fac6eb81a6038f0dc0bd35911f4a884dcd1943ffc51218447032a3a3494ceb94b9ca249ded01c4d21e49eacde4de2bc67221d2b28b44236228d51d5f9ce18211705657f180eba6a945735aa911ea22d8cc88e4338b93989bbc878858821f3afe90c27908f11375c4416cd63bbacdbd8cd84ac2469575ac246d5c43d32fb2be54905cc3b12aa0eb627788cc1674f5ca391744719a56cb09a1c150f324a412831ab686fea2fdfb7ab76c4e94054eb41624a974855db55178728bdc51645220c99bc615725372bdb4d9629f7d77c90bbc33913b92bca0f10ebcbfad2d9e5c32b260c321899354e622471d87d1eab4decf7b3ed43446db03a1a862046d980b565c1f4159ef2cb2d0461a9bf62fa1b4382bd1ed12878cf3fac37567b385715b5ab7636fbd683b2210e5743fa9bd1cdedd1ef14f9eebbf6c2fbffef340c34424c7839db021cdee8f2bb388aaf18800316c61e5dd11c2e617a91a1643422b41f1f86af3fae67c4ade94c7c1463a3188128fae9da203adc403ff329390e39ea293a9beff0cd8193f4e9d8220bc5906c2919d02588719953aef4c59c1fa7dfe745fce368439e74de239fc71f44bce8a19567779b3d2b087a8d7333d69e2519c77acdc7a4167e3f13ad92f2705a0c8755679e61b277ea213629a671e6a32e73193095cad473c9c96432f4d936ef545e46f47a7df2b715b6e3cf4decf6cd5f30bb07804d0cddfcfb3b11c7eb258784cd3bae0339c7af0db87a20b0cedc7c1202ccb58d956df749dcbe2323838dbf05d231c1f0d15c92cf7a20feddc9396a0aceb0f6a6c8c0b954b4684773b773d0cef603c7e877f163e295382c9726958edc14e72ff1ff04a916621bdfcb963576a187770b93c0c1d53be995d360b74e2b56c6298718c8ff1ac967bcafa2a37ccfd6c7a8a6a00f5ad8ec851ba4c81815dc9258ac706d54727e75c8d3c5bcfb40f1a4e3f897bada79f8ef4b8b3c90a588396ce251c8aa3bb164c5df94fddfd34c82dd5f9f0d09b6b1a7ef9d7dc7f3bf13189284c79a637f15655006c6e9a12781fff4fc89b348434cf761d2aaa4d8725ee7adf9d2545de5839e0b93b47e6538e2cf75d3594a0cb00bbe557b617c89a647aad414c7a2873e9bf2ca3731d9a27656372f8e3197a893309644e2b93098a993c50612b1ef1a9da5f89e96922c65cef3246562ed026a570614f8d671a939a567ebda28275e493194d5623435b6ab3dd1891bd1993521aafed5dabfe2d843d79ef803b9a8de5e24ca20d83b7ecefd7d5b01a321992a54dff634c9a5422dca2127ac1bbf9bc0fd6bb2fa37310907115673deaac1d99fb72b108f1011004f0542822c9d4dfb37f9b990035e697b535c70d7101644e693e39916d8b17b3ff2652ab7e1d9c43cf3c58640a96ea120d736a422f1ffa1a2db73fb7c963d9fc60e62dfed7dfea36895d20ea7289b6d5b6da868ef6a05e14252b9ed8a9fa2a24e1d8c36a6e19c5308d6e668d77ced1f9c79074c8e8a7c0e9f75fcc5ea8440b045ac1d8aa4a330d5b98809bd949bd463f2ba3ad2fd2dd955309976997b05c6aed504bdee8a92473bee57ad76330caccb4f9670fc130aa8413f123be086fe7d42ab8a0e9f6774b3eff9924cd331104530fe353e6ab41133abfccc93851c51f5fa71c99280a9fe0dec74266480b05cd0b575a8cb27df1e63983fdceab6baf7e313e43911760c6f2e9bf6feaa00bdb998b12a6db3f87568c4535a157f5f12a19b51477536fc3ee2c7f1b5a0b5472e819457813fc52db6eb0e138ea0d357a8c990f40e9a3215f2e3329a36d6878279be0a2f6cb923678a8b4f552f668cc8c62958f52da058a0585297f61b53ede08e7d0a18c7e340e3c7edd876653dc66805f53676c11c528999babb32bdc8fbc1a893177f2c5dbb7d2af629f96faed0b83bcff3915eda70bd2c29c719413cc1e28b474c30f6445cd7cf302aa1d03ce384e0d5822fe3ec1b521c81230689a9ea306b4e377df31516527c0a9f729350432f91a2cdea575cf6e4cd197d81cf472ffa1582c552eb646d7dda8c549004ee6cce7718c07dd8ec2f79aec054a9113071a7c5425f808551de898fadb0fef3187bd5061a76eedae78b35272726f0d7c391db16b2eee1f79e3a745d029d7a3010d528400cd70cecd8e257dfde569a41e5a4b903f5ce57eb5d6b6faeefc5a9f4265e9f336c2224d6efd7cea665f9439cc2ff17183c52cd6ff029c92097b7d545b3f0ecca3afb58b108878dd7292edf9415dee56d9be8de2a9d6e6bafcec379224e5c801775b04a0014bba281488fd906d5f4d84439fae473d4ba0a766407b5885837132e247b9a8b9894f97a798d0aca015488af0e67d3612665db5b2643db3ec06900ce4ddf38aa3e34d92e249067b883e5f63f590ba3da75f5d0d49157a6b627a48277791199593cbf708342a5a3e49715a81c1096196752cf9ce0301a7fc14219a9c167bb4aba7fbb494c4307fc7c969ada12bc2aaeab636561ad2025b92780698920058d707aac9d3705096234f1a3791842f915998f2c97f35661df504922a7ce7879d47c1a12464815838b092bffb649bf972f8b40325a93b19dbcb21b579ae02f8c4f803de57fe3c419159fe127ef3b69a9cd59103316fdd183dea8199ec941ee95077ac57d9583c9d548bfdeb96d0423cc3ae720676ce321e43aaf27071e0d6a973cfdf2212c648140343c91e14b6fe5681d501a0caebed3b10a7368e7f2dec86d35ad331d66abf674daf42aa4fe91e852449df03d38fe5517ba1c8e25c7b00a6243cd864217b7da1e9f8dde5c83d3f87f7ef3d935a86b2650409aec9174c674311a19afd5cc265a03b3a68a1cf57b88ad982a4892c992c8c18ddb83c40273b2962838b05b9bc6acc428f8ccfe9f3686c0f39e06ac6690ff31d5645ce82174c8ffcb331faa79cb3a3c4513dbda49078cb1e951e5406f4e0bef8cc5014e3c47b809c8909d344e9d47444c480d7d8911e8916c21e5346feeaa02ac1f329b0462b47e04f0494ecac8a8d26843bd12154059b51dc7f7b227130101558afc057c638c35eeb01b447306edd4fdaea43878a3fd3e1c594ce8e63aa7ea27f02798d8ab20cf86015222cc74a18abccc1dbd1c995d9db1dd05ea0d2eb9a4237d255471257c398bf4cfe81037eafb38e09c39139b92b2f839999c50c786b89b8555e0fa3ace4b06bb06675b044c502dfe0388f9c840e03f06d99089cc110ad110775afbefbc4c15022b38c62872750a6e498cf01c8930d6bb4eba9b2cdb6f9c51a44349177864e5b531770fd181c41706dd10e72d438b7e42d9f1c7dd6f5748151315f3b4e90dff3b37a76493181f45e9c38120ad4d121664f361ad6e6bc62e32ee264346da6290a737d0fb0e6491e23f3abfb87f5a6119e58718e0088de507da32f58cca3db3bf8df95c4cb3f21912788132ad6007d5c94b2aa4a1e994f6bfae15970fd4d578149f68d1efd0e6c1351e2c0d18eee4df49b7ca95e3f1febcb82362975ef7009e1620b21c074683135273d507c9b84a02f760f3967a0954d59dc7cdebb48239e9b1f54cdc2341381e374c860c1f4006df55b476efe709a4b426c2ddec33b12de383834e51d8b582fbf5ec67b0b759dd0c299ce3c22f095ac45209f49318afa7eb61e0b2eaebd791dbc7bb7f36c75c0725dd5f418396b22e7374cb6ead65d8ee0e55be7bcf0f20e2af2ff6269aecf95eb6549c3acaaf29fe728c15cbecf26b9a018c910daa40d7baf086af45630e57cc69d3e007213d1e7d61e6432e9aa3ca5a75907a5aa7a66a7295c01dd725c77e9d2bf2c275ef7c57f68a04a548e2924706847beacf5fc60edcae679b466add1f112b2d859154d96c3ece3c88c20633b24cc1c63f44199411836142355f0c44cf54606dabef7d2a58512691e9577279d7d68689bb9f402ff536dcbb09986ab2fdce676477d3bef49851b1eb5d724242d91f2e28ce65c3c55fc5788520381183a8f2b32344939e9bf3efa75ba90cc2bf0ca5ce4d227c6244255dca1062f5a52f5e571078fd8aa311e6e924bcddb70d62445618baee28a86903c88452639dd9ffd8f87059fb11219908e4ab3e81fd1b6f8b4f44daa8b7eba868efd1e1c3c89b71ce5bde673f42596766455749b0956a051ced3dfab4dc4bc9842f765a3f64411143316e5b90493f120e8c4448a2799d8a85dc187d40087c8b8523c92091063ee776c39b2acc383cea776e792a95768c3aa8dcd08cbe1d0dd2c340ab3e9556b000eb18a71f1dca90fd699819480ebb05ae16542376078d86a2daecf1132e7d6fc571b6b86aca18c700f63adcc6f055bf2911f22fd1645b046d916c3f9d92afd65b49c8fa3204dce312c9578589e0844b324c4443710dcd1d0a91c56baadd72d960a2c4ff1fbaaa8343ea8b52f3c8ff1e527c582b7cf827f8c435c7679452a9ab7f47e2625481f3f81319f232eeb0813e13f2e07a6972797ae4900b23bf760fc85fd87c99d171bd40523093f5cbcbc194215ce88a48262d398d66ddabaae1ee9fc301b0b9dc385b634c9ab9d42131fbb7d1bbb3283cd438803c815807d7b99b96aaacdae587d5db6e64487c524cb4b933b712c8572cb9e8c4c332ade9052fdb704a670d00953742e7926e1666d449e96c453f61e145ac875afabcedb83af4ea4a27735d77f7ae4a5e6f6c87da082a221a3a1700a482d0d9441dc24fb8b922fa1e85ce222c8f6b28ace1ffa6e31786368e046920f73814af78cce290fad6717cc750df149e01ad6d60c14ba342a1e589f8f0c844e96dd7dae250f0dccf51a1f2bbfc5c2877ff17ff4f5a7e16676de37da121907841d413a021ba928cb441911cbf61d1711b94c0644d887b3381d749cf3cbd942bacb9fed0ae296fbd644e8d1b6e67c71da786824a19f9f96bf4a6a1d22fa2708aebc04bb489ff0b012512971784011f3c3614b2f5ed4cdcbaf37318f8a93536ddc30cb1bbb529f8d3a4e7baedf98d3a4f12e891a792026e0bdd4ff2586d39a62b8415decbf88e6d0596783dde178fe95d609e1a06a30baa1a830fe07438c6318796af8f774d67369d9446011a85ecce6e0fc9de04a506de811d83ae04f88fc37900151eaf59a6aa972b96cd78785ebd900e503d85b0d4d32e55c4cddc48b18afb0200563e63b5cda585918535cc7ac2990c88c0ae7cf9eaad38dbcccbc340bf43fbd5f811897529eaacaa8d91d21103b2f652e5e3e0b43a973e4100b7e2d699ea2d69836a7bd40fba3c6ad0164bc119e61410233d8e25b8370548c9ee384adb392622748e94ccfb12b709c7b6f5df25225288aa1cd176c15ca9d8a3790336712b0aea4ba9d4023b32f5ea07fa9f0791d47a14e05168382dd688ca163464a3e8e0fbbd1a29e32813337d6e8ad475f25bfec74b03d5f7b7f24db42f94a72aca0020f4eb075d22da101bb3cb89253e3f47ea7603404c45d073a685cee26b703362006a1668461d35ff09d63afc52d1116b2b9b787ece6469b2e2ef1f62d4e46ccf46b1c734b4693169c094d17f7492a412d6b429584f4a401b82d5259b0fa7b419abd6290e7e19992a02ef2a2df674b8124f71f00751df70108dd0fe224e00a3fa4a2240547053aadd7fd7e98215fc6a8d7d423a016a51e6492c47bd61060127b0491d17e08bf172fed184c91a45e50361d28e8242b2f6c5ca7695a2f9f28d759d00dacae8f3a7880830bd0917dc32cf7a1205bbb70594ab71fb317fc982676b2dc614b524c12dc69d7173f8d26955fcf88c13cac3ad146c92825d964d1740e6d3f9fbd27be17d46f8ae865c1e372245528ca2dcae39b5466eed521535879bdcde3a0cf21a297f5e966dbae174315a3ee5bba669f5fcc14f05c3cee4b857188a2fd9c7ac8df6ea9eaacbbd695732c0f1180ca284b6f10ca87cd348974d17acbf313317917dde8c7b0689c1413a7fd693be105e262eaeea33cfaa7de0e613b0867f7ca0bd026ca19d300b5aed3547905850cde52413494e7e807785c8117ff598e313ed8ed612bf1a4f84b48ea76d5f9e151c52bb310de44aa7077c121f3415b7517be63deea73da5e4c4bcc6d22216f469f2d7001b952b990f1c67fc98964969b01a5ea091ea324eb453a5c84c13ee3aca587338725aae1e1e22e1344e50525086dc6b491c78a13cc2ab9c29cf774025cbefce803e188079fb00924cbeacda1c19ad2b2386c72a643aa6e1fe4df97a29394798b7602655b39e2d254e3feb123472b1782d8e547468a7a90619107b12e60e01c9f9b0f008871835531f9bc7904014fad702390cb0c4fea4bc574e4d24b9b9b7c0d44a880d58284fcb3e77c5d547fd31f34820e037d7c0a6b603e016fb256a6997c038da99dc922a872b3931662d93c3fad324ea039ea7cf786e3b9cbdb1373c678f3f8396f4bfe1d8df9d6e76ee3b04c9fa0e51ce59cd04be3c8bd23750ca62883c8217104871a95a96e1f6ad758f0779ea0592f63adfd1ac57fc168cb45e1a08f354ce2327db8b0e988c001a12ba94b89410339b0a74590463ef21254c5d82d5b95438498cddf70535341aabbbd86ff2e841a25afcdb1ee2bb462424081892c115b162a9b1ccb84aec3a92c30497f4f45a6264b92b4e1a8af3b931710f30633df3f9dc3bd84db4336dc1ad60eb6a4dbc40c2f836a755363522208bed246ffa20398ea3b70a88c7cb25ac129249746096d54d652f676145a88bc764a4ac9da0cd018f1b8bb45ff7a3793873994438a2e5f43ca134bf28dc28f6cf1b96172954ac49e26f67548551ff4278371ba7e4daa32df96f8621bd3be4db679174becc2d0d7846141d1a9a977fd5171d8df078f4581964473fd2ec7cf449a61f17cf6601f3251daf43864f91fa5b9d5ac2ce2f9cbfbe010f8b5f3239ba83ac1ef2f0a3ceea6d900955d8f7bc8f66ba45317719f0d6ff1e3615dc12117a30d4d844e72a0024adb2427d2a2ed70274f669171c9131f13549b3bb60ea6f6671930db4836611f7ebc3438fd7eb83a7716121a87f9f80618e9208e4464f01f077ad68b0d96c97acc80dd1119167c619b6c58beb87710ec6c1730d94411be71a33719d7b2e81ff73f54ab053e2c1eebc960773b68d1ac2df6a6f813da468f41d9ef2e7a37e538a40d25250c5606b010acecd7db0e70fff614aaf925d6e2f12406bfdb4dd9c82cfed9f39f2e8b87b96c330fcf9ae29f795c6f1992a6037b70cf14053819279ce4569f6bef4c1f4715ce0957f86ce23834116d4162e47886ccba243cd03f63004cce85180223bb3aee9007e5d9a45ab73754b02cba54d0f66576bf8afcfe7c4ee1e39431e810bc4fbc2c9ddd22928f7571c50ae0bc27821a7eea51ee3e1d60486ec30b96097c54b158e2b2d751d93dfc71a70a67e2408288cf5cecb62f29545e9379561a74c1dc0170c19f4228ecf730e6b68fc3f2dffd6c8e6f75c55b0fe8657887574c0793b7a5e5dd059633b20f382fe69ba55c283320bdf2164c30fc06898ade3b04ca8928794b90f14b77b80fd9d08a78e76f114d7456c0bf392cb3c2eca4ca5893d2b9b54aa2faf5cf98f01b2fd6fffb8557c961e94418be093711d0aa927547aa11007a1810d83b34964f5beb8dae45732148908fea3390e6bb3e4c3bf3b3030d2cff7f32b0b8e8fdd561d9fbd91baa096c24f2c7762b6518f9828d758310297e5aa7ef85134bb5a7c8cfe8ded9e044cdf2d430e16cf83a388fcde5fde55f85a8609933107041b742e4b1800b085dea9e3f7611750e4207da735b691e0373b146d5d23a16789ecf1c469ea0635ebe0b6f80bdb5377eb8dacc9c1a3050ae3e796a27adb2e68e6e0cea25e67d5ea298da8e8515fd22becc6434b58a4012f93a8161d65c3a7931d7cefbabf767cb122224489d72797a631c9e2af22366a2b707266ac414531606e886aaaaa7c4cd4f49a41ff7ca7075fc5d5f85c14cc5f7d27d79f2350f3c9b2a05e44b21c5a66a7bda904b064e2186c7ef1bbc346b187c856481444d98c4449bb0b8ffe0a598e1affec36d55f7a126ae26dc2300beca8791b1737101a9d25398d2e276d6e3d9f148877d7a8222a303ffa52d67bb69e8f6c099cab13516fe3673b01f6e6608d494c4bfe8559f7c5f341760950fa5551f902c2fa5727ce54f3f03c94630cf572f94a95fa8bae2db7940ed171be3d92aac7c8fbfc958891ca874055d1d75e2543362b0e5e0c69234718547714d5ac9563e23878d86d6726675e49202ab0a6ca0a2e25cc629753ee6456c7c39fa1eac7b52fb7642cd06db1b53a5747c82e0c531fa39c07738ad238e4126a9e9f584f7c117df42fe29f1eb11152554032f01f6b0220b0ffa75dacf01864d69a0d1e33501241e1980d612b8d0224dbc2663a065b48807f283362e7dcc2efe98b62eec0e2d7a761068211721d13d5974a6f94cd59f95a3d25cefff610cbc5e9638babc3629e7a7997c335f3b09efeee98f99e5bc44748f3b3519e4e1c1c2f53b3ba3af9f7991436ea28967796dd250220f397d549ed5082da856a67170bc10f1f14f366b63ce617d516f1a3dd8724b3c7a6d47765a1a1c11bd69563bc61a2568d3110bedacf7fbf2507fc146a704166f86ac0a50523f865ac3ac82d1243348709a839e2df0cdf0037a271f227aa1fc21b441a9423687ae454c4143b2f7f2bf53af545e0e518e30c6c64aecb2eda2e648e5fa6025e5e36c04c5e51f323077a7b4521c521b6a33c1733df811e16bd28f8b0ed5e1a2d055148fb7361a67c838f55d60ac3f8fda7ee06bb81472645756255423dcc29c9d51e3dc65ad09b5e44b848e9b06391a646e3a3f4ad1ed1a02d5aa5f8d78a4718c03b629ff3bb262d04dcdc8bf21e938c01f876819aae3dd8125243f5f952510901f8bc7aa570b1ebc40712cd506b2143ccc13eb2b39e3b8cedb92ca173826dacca3d9e3f72b0f02473cf6939e79636478fa55c55e418a3f5e77485c27568613fb28c27b6328a7d10d113c96def0d6c0b900c694728085fe8d645abe4d13b9d600ce185a61ecb36af9e5bd8f65f7102f97704309b16fe56f8d7c89ac7709d6139fafadfc2106905d46060c64af1b4881c5e7d3160dd5c7b3894b603fabc8db96a2f95ff46dec7c0c139c47ee3d5d5e9d625819ed2f30764210d18f799b25eaa2fe02612362c357151843cf6610a6527fddf836b24731202f2caab6d99fcf7c3bd52f1f5240b7974a15802e03cc016cde365ea2a5210d55bd5d415fd133955397f7ad450dd0c5ceeb621d02581246d2ebfe602b2163c7d1220ba67bf83a95f15954e48935178c783f752e8260842c873e5a2097dbc7addc5583a1a29de4a126154401ad4bbfa608115df7c7bf3667d911b787b2d0cf92e9ad1b8802b3f54b2b91020ad0fb15a3a9a01d6757c935dd0eaf4bfd53ee88a9dce29371bf6d64a2e77dee0667470f76554657a833767f6e4c7f6e814d6c0f8b23cce0a462a54232bea852c987b70ab7f2d0ff5c8afa1d5b51d1c22e6b91d3d90c42832a55a1b8a154c71ca2b910db17487d9b9169c5f2bcea18ce1ce1b475cf6fdf3732ab9e22e689e8403007f3e61a4480c6c846c1766bb4eb62878e712457bea4492ae33864e5d26d42fd72d469e0b3fa8cc716573a63df409f88bc79ac4c0d46f49f2e8c07c5ad2a52bc86159d772c2e68669481333d5ba45db6f0b513dc8ce743484d2d698a38d1e1bce0d5a1c7e149defd007cf66b01460807be30e7b95fadc15691042519d2dcda7086081953beedeed9b62b6b6ded1889b72dc2187fc71909d5051a9f5374b52828f9a9c20960eac2211024b77cf85aab89ff68ec2989ad35387bb91e449ed66622f8ca64982638f836343f4ee9a5622079bb9b5e69f28df522c4afb08aa36d47bea8dab7624baaed11bfe5135d75a2de101c69f78ac636fad41bb026921da72fba77e3d09bdb5ea8f698be298be363642e0ad1ebbee243b091ae98c07481ca72aa34b9b9f70a7ace0af29362108c6e7f3b2caa698ea66c760d6c25aa253770d31d48b10a7bb2c7c76b96045b6a2ba05ac7695805e76d7509b693728302a9118f996c3dbc9047c78d164ba061ee9c8660cde32eee7add9381897295bb1adc82acb008a94726bb4a3e2fb66e23f96899c10a6cc18b0a8230c9cbe394178b22b8e7a3d9aa43800ce49e2f3240899478ad02aa3b4657740fbb53c184819a154a994278256b94a0eabd930130031d34b02b174279978763c1474de93670b8e03dad065d4e8c7fa7d59fd68789f2223cd6b22b8323cb5b8c66814c5e6f21cad1a1d89195f2a8b54ca7354bea7b0f8b04e51434942012b1d2f4489f7ed6686942323825a9e08a90be228af4146e9538cb2b1723a17d41361b8444d06486cec67f1307b6e18a0fad1f351d94538e2acb792ccce770fa87e1003179a1220a5e227c801880ebefb20c1743ad7bd4f7818369a24749ed4bdf0bfd5988dc571218b4eb2d65502f8183f740eaa709d1623c31ac1715f2e90fc377cca15ccc2b0da2131d8d6b60269b41ed32d9441a1fc163a7b1cbaf3700670bc626548acf0e87c8ba6b2e3a3d42d6754cf7fb54856281ccf7ced5b91e3d4beb0ec851b6558e443f89fac05ea8ff93b8e4eb6cc36359d034e41edb992a87b4e03d7dffd3f0b822c910504293e2483ee3b3d57dd30edbc31f8b183b0510bd62b764c180d168582a3e05eeddf2bf63eb30656402fa533064f008c17a281bcd83bc7f523c8425b9f68ae61195878556f1941a0868824df687b5cfc382c061731dbfed71cc3df2db18e0a45f3e92e29923a5ed657a656b9cae723b377c14ce6e2b68bec75bf4e0ccdb5cf9c4616e1983d4228f608616ec86067444df076b4a9ffa571a163810ee7a2bed6079b22ef285ba6bfae7d24f027267c3c8e717d87b202a03cb271bf8151c14a2398060dda3448bf3493b52f4a396376e83bfbb2f6080f2ed56965f0b6ef783476c20b4fd1194e47473dbb7e625c114fb4d09b19b6eeadc3b77286113f62b18d11044730e5b6d9184cfa99c70e2d2378597605fe05e4ca07fd4c7f982536306135082e9951ed621b176f41ad96089e97911c9655f39b1c2ec821c12082b8f1ed88c3dd78047cf82060b59025a36b2b02ba37ea1d9c2b9691b48c12f4f721dcb62c28500adc4549073add919fd7833aea67e19c2cc04b583af7abc7032b7cf3f19f9a2b9dcc255c5e30b44b965d0603c75753aff00939225f827a976728224a847da5b6fd9a6852803c0b0bbe85ac532bd82e2ccf78df3aa223683910d824eecfb3a9c4b68f659f0d312b92e68529b9809ca5d8877431255d3d3a0a75b5c8bb97d36a6065351ca5e279f4b42eef01b01505624e3f6267fabc0ca8ab378dcb0d28ae5aaab527f8380514b67b838aa36adfead8c96ce70a96015481f5c6c23dfeba6e2425fc16674e8ef589f1f21ce696221e1d57dae335b728c53a22f49ba2364a1996adb2e4ec8ad65ae73e7b74fe4ff1b39cc845056fbc75877095a9f1d2567dfeea74656236844d871ca9a870f5a710a8f7a2da6249cadfc039a874ed5cc6d828d810e6bdafa8093fe801b593299cea8ca981f6f31fe71bde6debefe92220dbb7ee274f3d9c3a09e92abf8378ac7489b7981e68433ac7d19e8438ae7f89e381515c476eaec1795c5be087e7a2026766223113a2c61ec0ae44e6a1f82fc376d99b4d808b060953a4c2c23d860744f15826bf39aaca0d4a64c8cf384112ec155f31e42f4d273c230f3894d4676ce0be1a7df8526178516cb8d97c27288a5a80784fed1094fbe1cfd36b6d09b59ba7a60c8127ed24d09853f2db3ab81322bffb9e2da6951c5c4883f6ce92b30296cd95d64d821b1a264a23b0cff4b4a38199dd191a5efd295880e231802f419176e9f0afd87c0e4526ebdcdc8021c97f4529997c95650874d4213f429760830eed096c57ce3daeb94b7f417a0a22e711865039af0bc11e841195f0b7b5b3dd8a9de189a1b807fc3483f863b5b2b86792768641de6a1d0e60550736878a4249572cff445a619a023cebaef60e96f337dfd37b6377446463a25e2885233fe8cffc2720dcea4db23487471f5a0fdd9ac2ee1b4f547954e3e254efb3a8ced748d2ac9e58d9001a1b0ac7f1336279e38151d81eaccc1a29658b18f0e2c12ef9358061698df9116171e5704e2b0fc266c70d2d852458a5e9b32e7effb07f6ca814e5d7e88c932214a97ab7f14259c8fb0ec33b7b796cdbbcdc19a6b449d7d3aeadd510962180fc15110d6ec6ce1665616f15b7a20771b47191ec212f77d2d7a2d28fbd6b9f644911a3d819cd0473285548363e83e1c0e0d9ed669987a1364c166b4a1fcd75f280df1391496ec15592e4a717efde3217acd91507ebd931d155071a84ddca48ee27cd8a194d0ac8af11ed158a5713d3c1ed8a49279e8b7de6ae7582c926b89eb8bdbf77bbc284b9bf4b98aae5e25ab88aeb321029155338be0705235f636c8686081f669a8bd2399a85ca10ab94e8d128d8c5d07204d5f3e0157ed325d7a8e0c5eaa9194264b60953d15bf716ea89c44389c9af0b7d3a64cb1cdbe958f63e4f735e72073e9b5544dd08140318f6ec4e5c4daf4b55559e4c3281b63fd6cb102496d383d5fe166bb4d12143095031f209b53589d074be1ab239dc55cb3d57c07dea2ead387fa6d105bf3a0196a165e65c779c8f7373531bc4a3ff1a4180e028a722c64d35d107f9fb19c3e2c517bbf99e89fec84511079c9b8f8c0d61ec9071c34b94efed280ca4cc8140d57afd8c85f376110cd00b23c68007e90310a3a93a877d0cc8a4748404a242aa4b6d2c28bd6791c6f2842ce6b5d4c8dbb6fb7fbf81b36bb15d93da5af7dd27ab8ff8027118382cd399ee8c495f8210957c21979f31935cb27f09858d386ab97e8d29140655c5803fe29d704becc84d430380ff394dad68781eca3c1e5b529df64bf51bb6f4dfc3c7c7150b7870dea482ec1232f92a44cc2329deb9c1f1ddbd6d37d66ddc4e9854fae041f474a0413aa4af00d2b2a070ca5ba3ad40fa5690a95b0a754ab0ec51a6b3cf278a1d42ae450a8a9b24e07a0e54738713b870ce8842083126ed0b5b9f4cef63c6295b5a8cdfb77483fb2e443d0ff9fb8601779e248e2e228b47db4612858dc7a5f813333bce3d7bc9e7ed8000122299061f104cc53db654de515d1bfc49a11fb118e9546e050520689ae289f540ab5c5cd4bd3ac3a9a33b589904ba12d90cf76dc2bdb27de35ccc4e9405663de4ee0fc2eeef99b677288b659c3e82312e895e0f4b93fb93408e42e959edfdd706cc3645502881ad7028241768bd4f2a8bc28d9ea4329aa0b8c0f6b56bce5440489f483afbe7eb1336c6b750a8b471f666189e6294d6616430d87bebd854bb92978709a5cdb9241f0f51d1b3c05890f185b8d6d67b85d04ce51333a58f2906b9e1653486e759478ea07d01b778a82639594200facfe908fc4f249938e82e321d381a2406ac7a0f2d6a68cbf248968efe5fa77f8859146e78854fbcbd09348ba9787276e468046d9209c2126ab3a8091a64e60d1e5f6d097a04448b959a40f023badaa57b918a898d72fcbf0e0f082eee494d2e4e28e238f93ad18e14781f142342417d072d79d4f53d02c712fc0657b229e91d1f24f8f0ce7584517b6ccbffd520e2b2fc1203fcd4bd7abf7c8037408fcacf6b0502d5512f1856eb17aa766a3c338c3131683d94cdf59410334a4c17f1ea7a4f990163f3430a00db1c4c3a125b035241de34a89df5087c8115848ae3a9a42a1b2c73444951c31661a0e645dbf7ec2b3bc009872054af09df5714c7596cb54ffcace64a54378d7b8c13e9b5a335482f05a9cc6c442e9227b6fd4f2dca781a815c223f98f51394f63262a6521e6019dce3c82563528969fe1ef01e72dff1ff4f6c26f2a2676bafdea3fef351ed8c7257287e428a917732efd076e2b1271afd5cf79a07b97318410c28a2f4a9bb2f120756360c99c8790d396b9a34ee3524af431d908c6b55925e9331eff7974d44a59ca848686376d57b92e8c21ca506b771a3ca0c28b66f9466a39f99fed13c96e6208eb00842810229f11fccbda2e24441d980eda27677db1ebbec185fa1ce99058b05ca52d3b060f4b96562494bde72139e8e86858c3f25ad94ec57e75730b06fb22634039ffbfad22ed5b59205794ae2b312d391d9f4d0237c7c91c0cda642f12b11dc7fe31658617cb53d07bdc465e579bedbc7810b4465fca26c072a78875d8e15a26fbe10a06839a66cea3a44e18e344d4b4c05503d832acad2ac9b811a4d412537fef0f30c081d4655434fd00b844c7d034ae5c26450d0180e693ba13b9b31550ddb8cf7a38120f29d82220659b778704c54a3db10c79bdf1188d0cf1070d46ac090fb6103e493865532cbb234b531d7159d0c1c9aede9714e6e05887606c4d042948a3b83cd76c66af21c138e3eef0354df45b3ae5edbf1afa0ce091cfcd1e197ac8ec98ee5cd8d6eba51e182b7220aa2521e6d9570c8c4fbd1af0a36773b56d1b3a687e65a28f6a375412b1b1212ca007ff0ae871e39efcedb8dc25d361fb03d3e8913d60fb1413c0c9060628b50840165b475624f772cc66afb5cfe4bcd2f4f2687de97ded89c39080cb8b9d4963eab427d4dd38193c01657b2a4a0e008272749e28ed72ce48746a599accf3d2532379bdcb3a5e160102332584acc461794399075e3abeaa0e82879cd31a786a61c1748fdcd98b207f85e24eac34062b1d09ca96dbf293f5d92c298a28a6830b918c3224a2db7afde04609ef8205466beb6dae86c665bea63f8500720faa86dcd24d1ed88035f369cd00aa480504e93f71c66d721ff527c4984ceed66f5112c7715821f64bdc4ef56d40c8906afb2036d3da3c20eb390162f1d669c689ce58c0bac36e695e458cf80c07d9519b80c8aeccfcdc3195b051e652a58a289f33a2678edc576d116d1f4bc010969bb6fe163ea117ff849a2e38c19c4e1429b9862bde86fef25fb743683f6e23689898f5e66fa12e5445a0ed8ff233fdeadac2ea530db54b431876c20830487a6eddd316d02d261f5954add2bb2244b3bfd3eb62e7bc6bdc077d71e6645be528ede07ea86f87ffc0c2b230381594bf9bc95c70a991d18651cabc71fb07af425203bb46fad7a3aea5ef4d3856f4633efc00ed4e009e945e8c92cc24aa79157b51dfca90a696005bc2e4e0da7d8a7e42f70000224f50ea800c272d2646591230f93ac9bb4423dce58c32bc8b94dbe144b18f38c853c043355ca4a2fc5d117400710b708f8bff3fcd89ff9997aedf6fa564da96db58ae2f11a09a6c6c043e9efd70bee20aec04d1a8454ed4b868133dfa8f6cd492d39977ae0343b6b050856e57ff47bb890a4a44769dbd1dacaa42bd4ab85e0af4fb606cbd01f87d587abb239c3e61bfa1bc35e96a8349186478b086ee8fa685f0d3ea36f1789e458489c1ad88cfcdbcc3f4d37b0b7bfb4d67026f963e3bc61143ea7065643266e26b6ddbf89337ef5bb177d0f6ec6b2a55b43365e283a31478882e09debc128001e9ac0436554eef9a646d7938228ee8c9a9b09465da33c72ca730471a70ca610f8bfd9f0c0c8605247c3417d03276c72da743057422ae5687ce730cbd21dac30e96d42dce3aa61c0ea8df9456ba7c3d3a5e62a9c083f19e0ad8b95469590b4d3fdc587ac7d939a94000e5355528c4b4b3f606704f8f2df821f7ef09b7c4d1e2aaecedc2a4ea5cc7380a4344eda47bfe5faa209011d4a12c4cd8ccfa6d27fdefd152431eabaef95757ae14cc4860fd6dab88ebde29ba7b5e56c8128838c0636a9e1488c3835a67e6374fd365a74226d3675493a7ffdff1b89df606743cb4886ce2e0fcea6316ea7f4c2ea5341bb704ca2b30d03ae204394ede9833d534f26766c5593b385546d9b60b63a3c7f1f516f2837f698c9b8243d58018ef4a3c6fb2243d727d33d35515c85b6b98c292b6f08ff625c2dae466f1b65c32133937fafbffaeec613dfe69788ec57705d045266d3393b9a9b0e68fd1fc6593decf75b25a35c340524b877cd5fe30cad359cf34686f0231ae9df9c69bba8d521ff470407fa0728865556a895d85087c8af5b044e4f020fb6e2abf8dd763b404f9d8ed600cff99539780a16bcf5449e840cd9f81689355bfd6ba2ef3bff07d37e43b77f3e40b3909e940267455ad632119cb2edad5d09e3fc11042371982680ffae1e6f4e5bafbb0991692c9e338275a964895793453e6e87df5af1198ff84df60c3b1a8c00ff270baa6ed020f37a6e83d9aa36aac00f68c87b98737b0e088267e22c3e4f9635a0b7a530070d5b43452cbb79e90bae15148d99da4d281a68d4cfa8d21773fa85b00ad1b81d122106d76762126e5ad35e95a571ca1103a470783ac568a4fdbaeab06a3ec90f24d85bba1565a1d3d8699fcd5db03a127b891a6641e51079157887fa2fb72e979a492d4805b848c5198430fa8a60bdd21a291c2beb4fdcf1deca1f40ed66baaa1dd6c59ba855b94ce1273db782dc22f76d9e6a718f7e0569a4328ff2f212442b22f8055c464985988a8a99f087ffe2066ea3e6e33160de79f4402dcd271f3579e9adac662e3454fab0ce62990f366e95bc5841567608560189636bbf28b8f1018bf208bce14d0b6b06533cfc4832b1a38f84ff88d8928e11c97bb6ea4b633a86204645758f1f17b6b7bd37d91dd335ea0638a0be02e0a6dac36942fa509d63a59f5dd5126aad74d77131d4a692e911196d97e4daa7ed855f9b7b38934a16c8a9329111b18aae5ea3e197017be3f2bf483e8510e34067d13cdf82fcd686e4a3e98005344b19c62437c67c608177ed89fc61f07e27c3e3bc58804c3b7b7be1ae26c85e383b229cfe5dff2da561555d69e9eb983b3b6def48d2417020c5c931166bc9f6b8a493c1c903c60186d65cf321e1db4a91c95a2dca84232397621b22615dfb88fdf91cf346238d1be6e6f0ddeacbbb49b6abbbf19720cfd50b9e2bb7b6e35e4fff88b88d0c9c178ed1fd35659d79ef383d06c12308094b3896427e18563964ccd34bbbdcd15875c1e55f7af087459fdc32cb3650b00f56014ebe896aa7c962a953040a74e51f2b0b15904f44e994f76a9ad86d32d1429a6e164d7da1ac1bf343fbe7aadd93e5b502599ca2b5af6cbb6db190190f6bff845f8c2598151a08a3281d33f5fa4ca19f6644fbc20a07f0fe3d974602c3ca40355d7c5254367d31d1e6259faa521ba599a648aef2966cf8c1eb54b870eabbec8ab3149b7758f3cdbf6da6baaab6406e12eab7d4e3bdc1860f474a381157570e446b1b29b4f653fe204988d8aa65c491aedd1f0793d7cb4acaa60cffb54c0a12dae4838ec0bdc25904f54bec9840b2c14a03127416d60022f3d8aacaf8c033c93d49488de7d03bb0f926975d14e8d279d8781f4a40538139c00ca323cf051144fb39f5351c6b72d5c8af0fc76d3d9980f41a6d786b593d6de99cae721719a1070fbc4824336ff0acb62fd4796c120e43fdd76d3df9a44e906b452e58bfa3ca02f44bd40b0892bcaaad9df3adeb6e25f02746d96b7e8edb475659d045fd8089bda3eedd7ca630e84d71efc22afc47db98da6815bc7377f36f75cd5e73c719beb1e51c83d628d3e16870279f1ebd3f12ee769ed64beab465dfde28695461bd062eb53bceffeb91e713ff114754516fa2f87f52915c2d2385fd8f5acf0031d156ddc95bb0466fb58ae9ba7dabe47a7b33f08dfb2ee284cecc6695d1b37d3b10dc3cf5c89f20b81ed6acb8ea0c6953159305c6c681633eca481d3380dc28512ba5154178cd3b524aef0bc71171f5504fa1f95b9258e5b08c902e4af1b70ed308948af45ea546033bc3aa0e0ca72476833d68c9733c3d6c721c6f33e18cceb8373dd2e31de54b18aa28e933c5af6e71b0c9cdaf7b310f244728dc519b4e2fdf9bc8c1a8a85e79d680eef523bced392c1c192eda78af8571bd57e14310b9f7b8582394f42b5e313f82f802c58080fcd2674018f410b847a579ec2b5187866a07582ce7a1c016dc0c5666716c1736d961ac10e7c9255a551699365b902183ff7e92a38ac32995972f5f5edac418cfb492d1397ba02e0a4a15df3498d01fab10d94034d525efce22fa8c6466c6941ae5d77ff2ebbb05bcc965fb17d43704d268069b599cbf5ea4ee7a6929fc47e993571eefe575ca530142bf9f0779696a0cd2fc50ef228a345e3ac30b21ba2461e48d92cfa25fc1ab808c4c7f41f3c89e3fea61d60f2f93ce39c1887e00b352a7b42c7382ca3df47296b6c58678e85d7393d9c1871451979f6a571356c64a5b9774a4ec32a5601b077b5399cf77d64ba109f8ccc1645d1738f2e333796d59acd5653f360766ce0fd77d4bb6b03f069c8c169a8e3cbbd77b1712f7cb61041260a39f1b649186cb38bd20c381cc7bd0a04818493745343f7b754d9955e99de2c5f123e57491d9867898c84e42ad462558bc20cfd39af09a9781353a6842275e442974eae774f305619dc6209c34b32cc3e3394264d4781f37286fb356470189609ab214e6c0c40aba7e5c6e8f658120a5d9920d3c558eec73f9dd14e4c79281d0672cee8cb02364f1a572e466b5b48b5b1ca82ae2b6ddadaf6b3b1003b3c47164e1bb38986b82169ea397fe5221fce55b70cb4624fe019b1c20428147e65f071ae5c5419ff5ed990e712c29d62169b01ece33a3d2f7fdca4df865e9a994aa7e3670ea46480fb4ddf0cfdef626a401dd845ec3657a9250772edd3ba3c510a7c26f9dde8db1d85a67299bdf163c2616914e7b8e9a67348c8adfc84cd7af063c9c597a896ced6c6e02844ab6aec0bd1fbff9a92d6eedf34354bd4cc4cd08978a31f761ac43653cd9de0ed0fd3935c360e06b1381f807c789dc2ced41f7b734776a33038a5a0acc86443bd639e14d7361783edcaac473339ed9fce0c299a88362c148afc05192324580b799fe7fc10545280cc4bb0dfd5097c48e57180cd2e08c653e5620df4999fa38370b37d313c20fa9cb614609e3150895d785404a14cb34491e84f15a62118984c847a833eda81d8bda73007f325e4a83d4cfdcffe8264f569f9e327fb43a04fefb90b274c9429d2668338ea5bf682b1a0cef04c71512630485b441d52e34647b4b25f356b54ead1c658cf6acdc5d024cd6530053ebf17b67b049ae6e149c89abc77bd969c4d6f9aeae7b1aa2806af62e29d2b5ec18dcd18e77f13e21261e155429986ea5ff105da51635f21a35be2541cfacfa8e4362b6877f798d1d7c28a211c5aee22318dc313be3da9bd55c413eaada12703532782eb2022df2b4bb67fcb1cc7d7028995dfc1d1a76286303cf05eb6d326b133e8608474690f57fa8001abab758984cbb9da2750dba185ef352d3cd5c02e501700f1597c22e0f9e7b5160c70e53cb119cd339b219015afe4c443a40476709d2b012c9efdeadf38c1b971c409f09108ed0e1e4e76729fe81a9bc706fb25ad7b4fbd9048258e15ba7cb172adacd29a66ecc0650b01b1626ad3399cd5783191d51ae8e34e22d8546b2f57ebc8d73cea3befeb42ecd39ae8a05adfaf02c04ba026a2db6fc68452b405d3753fecafd428f74892041defe915559cf75702f0f0f069644586588f2e1b96198a3139303bda3d5978ca44d1c35a17fec6e4ddff2181536d22a7bf9045180b1463769383027f652a9f455ec0215eeb7e5cdf7b62745b4a2fda3a2790390b7afde18eb1f55e12d3a57fb9485fa7a0bce184e653fd2236d856285067e5a3b36db1874ef0cbb6f8c4e7591b08432dfab0794a9eb3258199ba0756747033b4591a58cd123179b1cb3dfd433a56a310bf9f00a169282842ed2a684ca47e15cd6954d2e94190dcb5060912a23bf4a85ee996b01ae60c9752a1de44442d93540e9c8195ddab3566beef0332406c0e2916247ca1c357ad24882e8b8ee2fc26c8691442da6c7271552af22fa222d75eec19908d066e8c88cc823a22b386a2a272ed24e0fcf202244a9f315ee3552efbd54642a6b7fe42e07099822666571f55e277108bac23c2ba90333fda9f508bb5c60eb8611be0a71d06f1bc73c7c304113d9ad5b928d67ba72af36b0a64234ef9f58b91e949d1c194e4964471e6330cbaf58bbc1874925398e62758382cfd0e0913e8272c0a82029f67a44c7e38c7badeb38f311966845350cd334684ef8aed135d5cc18fbfee1f0daf637fe67bff531820d71b012fcd36493fbd7b3252ae248e5a29fa69b068c7fb01677f2244f404eac94cbd10a969f824550a997490ef2e8d60d24405d4e1c4edf9c64293cd634f5482e049e300ea5e7d7692d3e070167c71c5bcf673ecdd74425e3d7c24f545f0bfd3dc567762593accd024c48833ff7077c9440b83a04a7f524825d5a947b0054f774552323c116227a19e8642d935b00e62213c022201fceaa5b51b82f5d9c58823d32505551ece8c98a6f831163a95a9e4d418ebd47a0739c3d0ed2162741776755ce74dfd646eb3ed8aa218cef2e7422d1b773f1580acd975961703f23d8b906ce6b3e3d69b603e2370c58d8f51c3891142fa72d03b2cfa268c5842053088c5958960f2cc37df00acd3b98f336307e925d2d81c77c5878bd1cc4fb59c48f51647da9bff9e63a43e17f04bf9c6583f97fa6246ebc2d287db02eeec721e929158e887b7beba2c803678d4fad271ddd7447a71d29496555b31a5c59d0d2707ccc6d73bacff5a0d0ed77c3b7fa7aeafd4a6e8ee804ffe8a317573892f1aa223dd37d288ba44390ee7504a14672889a653e5c82a1c59f35408532e6969b7677facfce579c2f76f4b069c8be5836de69f7a96b272558768656ce714ba05b890226e0c3714fcb92856015c7f3e51afebc36fda3b501aa1f643b807de926aafe9761d3b0d8b834d8eb767d99fc48729e60c6ab6e514ca2fbbd774c23f7a2d93ebfdf03c08e6d02e2e45be44a35beb12eb31f81b74323b1cf5e47d18e57bfc732a1f5dd4a8a394ba59feaeaa720174ce7911fbe2e7952de1d2182127cce6d34c407a93072df6c5378880cbf1b687c9b83305350c54f79ab6818fa12cdc631c5280f9503c746a24e9b875afcff9e32637c127e29fbd932e45a5946f9b40a59285bbfb8286779fac5577e516dd91eaf92b80812ddf544bf2d166ff5c651ad4f48913a968b0d05de90b046adcd2493debc28a9e06f110c1159f80acd59a698356e76a54d154911d1eca7e7dbc2ba6b79875e117a3a183b4fd15abd9e77fd799c3e80bf9f8a1e55535d0aca89e60da7cbaf7cc217de68a1e475ecb141284c42377d458ba4a36535bea2a15de07b61adc69e34aef5eb6a3ad835277be450666bd486bc46d3408ffe663ec68b9100774dfbea22361a0443d10f40ec48a46f3b1ed96f2909a8fc3ed0cb801fa6664f7495902387c63ba908d006eb5be135e620565b50df3b5010d842487a915af7860ecf4a3968029941fd1c98ad42599a1e54daba3d3b05f07fc913571add75ef4d8f09f92e1486b3a6f9662de7dd1d81b849879d3bf136477d13164becf0fa96be6b13b5a7351e40b1f80d0dba83600cbef5f5b53d31f3f395122cff03fed86545630f376048110df225ea9c5cb5a98d70e4f7c3c436cefbb4a830a7486e8aee10f44b844abe610c8a37b9675c403323f0887ba0f5bd8b2f865671cb48d6020e62810dd858ffb5a581205b273bddd6759cf4ecf7ed26bba45981b184678ca5f8ffa758e2f03cad4093af2c2d65f496f16fe04c2a2ba32e1f396bdcb4aa5eee58cca9b8bca543372eb775a7bc3d3dccc6433ef9b1b2c168949cfb6d53982a46707b1b65badd8dd726159a049831f52dd77dac29eb7d9991cadae90b85ed1020d2b265bb9963bf6eaaeabb4550993efd20fddd244d25fd3f02bac787b1dabe5c67a1470b83ecc9d9aec5960fd8d9b1978125368d306eaceb0af3cf809be8b6f63f005186fee8a5dbb83ff698e0fbaaec3ff7c74919dce01d84845f550d5a64ba51ee6d1ddd083b482bcbbda39530213676ff27e4f7fb15a8f3bbeddb65671a186c58e71b4c18a776dff3fe33a48cf069a15dfe6824e0b93918884e2dbe154dd8abf1ded885c830e5bc702c3bd7ba59d32373667993864399aeb353e70b96ab6af09c37d8bfd7fa8f50dec54881bf56ed26aed7beb02850d35bdf4711a651fcdc52a76f3d8e74cababd58cfdb4e275415747a316d6f1d8474b0d6ab24ede9cb18f98a8e4ec6befda6faa601f1e4c9f7a3e64a52c40b5097faf2ef98159f63f03d1d47efa0a04eb91394f1ca34a248df2584e4eddc641cd4d75cef0f83e8a5d2e9f1ee5ec25dc340141291500f284598e9af34bea23c11c5978dc089f7b55acb011161f94baeab4438cd897e3ceba10c8ecd9071e74d3d57f212face38b0a486f10f8ff6c0a3eb2bd235138940100b4077277b275a79f99cf8387cb9362cb160bb7ebabc8ec23c799277e453a2406ed466fa6994fd2f86340ca56c79f3fe2e398535c3b5088f359a6fd1baf286853e8f31bba15727d603f5842d2d39d853e0918f334a68a30c1283045ceef46c703b3b654838a230bb442ffaccec39fba673419b93826f09e43114452a8df3c79585e3079e848adaf0064ab27d5a000f6b67677ed2cd2649f1a06a09667c9ea68d46db0c9e4a34fed3c1cbac0c6ad0c333cdd5aebd24a156af8b13004477c49de3b6b960130c62d9a792dcda48ade6f5f2b37d67f0136401adf2d9f324c7bfb53c35cf85731c77e3c171514e68541e65a42526c39e96a101513c8d4e9337b286d3e0a394fb1ab31ad8a305d4fe3e5676cbcf3ede2101cb5de67655033cc66b5526768d6ab3237012dc4cfebbea23bb43109ea358bf4dba7943ebe11530db2a6df7ae41c1d9e0e3acb6d239473bc9787daf441a2e9f34762b4e8e2e23b7d7a50da63f7ce3e2c643c8954f78466331499c274ab303fd1031cf269e4894092d8970861f8b8bbbd2c4a2cbbefbc650f34f54a8c7b00381a099282961670fc78ea1afb798bfc11945954772cb021f69e0c74ac5b6716063aa558895252cf9ea158ca160ef8cca0ae084932d07f4fd664337a73a0404916815f17ee11e4ab28df6256e8f82b07e886c80625c91d3c6ff9f19b28dc0303884ff59f498bc1c7193620e2aa3f4fcb467ef32dc571855bb6f28081ecdeaabc298892be6418f353fd2b57c05903b4b619b4924e2e9ca8e6f668287a17c388bd8944e4967a94d5c0358eb9a8720b46a170b315e511c510d0bdeb82b569692abdc0a48d7551e5beedda74e0f713f557ebad997a33d7b67ea69ffd3ea5c4326affbb0f86d964e6772bce80411dff0d8d08d186a8676efedceaf6fe390444c57bcb93ca1eb12d4cef49754f3a6c542e13806d7f60edd173a46d0a267890d245c3b95cb24f1416a8e93ae7ada00b537a02d51e77cd2bbf581d92d2ea0e56b7ed19f8f5fd69342994c5d25a94a5c69d122d2fef538683c6463bdc763b37eb580c21ee7b4ec82a4646f91a0a63667c1091bf3af5e8f7c00dc1f0cfb81f3e5c602bb4d46aad090961e6db143ac778d30ee26e91f7921644de108318bd087ff8faebf2ccec9a029e19549a49481c5d82e6c67a36414713b8eeb14d47dfb02be1de1e8ed8c71e8d982615f2d8eb005536fc5caa65464018dbd6c1f741cab99a5e2026ef79f784e528bc30fae72ecb2c2c699c0570adb174b160c93c950d7c50a58cc5ccb2304fd52b1a5268821ebb36f41107d0ad8cd30a5c127d305e357efa45ce89f1cbe6d3efe96ad5ba79f12988cfa72f4ac143f0eed4fe76105699feb9430a91d1964c1c21397ff4ee740e64177a93dd44cd98d532f48abb69c0a29426a8972fba4848261262935ea47c54cf3b752195ca81ec64141da8ffc6f3302e68fad4b7e3fea4ee97cf55635577d1357ea677fcbf5a33fb6fbce8e31fe0f6c0d0e2b408cb4b3945bdd324e06eac40043a696f56041cb0acfe44e849a6c056bc7d87929d24651406eb8c09aed622c5892849cbd4d4f32a446ff57fee9a690298164f51231a9003fd2bfbeaa8bde394f4de40e02fdabc48044a028e9dbe5110a0c3dd512501f7a392526d4ca44590809a6d02d1aae60d980e7c384637d43453b1c4500eef91270afe802e96db656658e7f6b4f08a2aae0763043bc5e0162333c8543929308845077255c9f66b77a1cd96598c11821d6fd3fa4c763c389a75147f67e087f0baced4f9d8c9c0dd58576466e08c135d0de21f994d21635c4ed2881d8c3614db1bc35d35e3d73856aceac24749069cd9a94bb2013df50c0afe6a0e7a00701bed7e1816d51ac2e5087bb81b4cff6cfd5e9edf760268598b9ba8bd1c13bf736f110537c58632a20d77c2eb9b9e2709fc08b6fca1696c6649a5b14eb5f8f67ea56c8848b4262d4da53a5dea26b60d54f4d540267aedd5e9fe3720a55973726738800235ea6ac6f3002b8dfd4e7ec66c8ac7a9a8b6258ebf3e61a2760f5e044a130df4db67e0a675cc07076428273fbe82af394f42a1a21b629c32563333381af8693ac5b7e43ee2925be0f42f8225c7338c9372e237850a4b79a0e722da570f70d28ea912d6bf5046c01d0b50821e3ba909af6c715839b50a04830d2f80139bb79ddbdb3aca5ab34891b4f2816ddf4dedf45c866596581677304188fcd8f51375fd2e16d0ef6c62c552de28479d348ddf7754d8f108177b1db3d4360f03fd3dcaed5cb94bf38d391d8019a636291b79083f788469e11677ba6799ce091c7ad84a6489cdbaad59a69db5dd7d11d0c4e169431498664496e7362309e7b817770bc63033f1c4b4987fdab52c89b5463e5f303a6b47e0371c97f6865e5aeecd3aa913d6a187b8e95f4ec1634217813af5276e6722eb9bb6e2b7a4052ba7a6974a4a856c51f9d136830a14b85ab86235190b40cc65800f70f4afc297a77c4d4e1e43e97029b1990deacb1f7fc3641843c8433935918966449ee6d3bcf7e6f5f9edf42ab41b61ded60afa369b5d6f4c74b63a3636dc1671130cc713453dee1a53a781ad7d675ea8fb29123b0783dadde804f5833ac5e20e23099e6c9dbbb89061ebcb3fd08d39d9fe4256b827c13a0e854ca68f3c9b0267ea8f8529119bf65701ef28fc9c35f2a5715d8a9cdc8208a3dfd09a1d503c42a01b7843856d08b3b775c50132de6a863508479fad103731d2615ddbb9be83b3abb976281efd031578e039a74848d666813ae3f5b68168a6d901ba32047ab33532abe058bff152259cc9978719a7fa0f92c110554b2533b3a7e34aa5f356f0179724ca5b42d6b6304440edf682905c01945aa69bfc926f82693af3a78edd0fe55a0cc7df4b194c3f3de6281522d30285d9b582707dd7bb56f1b582613ee2f7bed161fe01f69447b4330eaa4fcfd6bbf7e03410bb602c824026b2c2e1fb9bfad894f57b77998abed4cdbce79abc976a7fc4ed22b54884e19b86b067ec140cc2ca0759b5719e939084b2111434114383609f26f1f39d71be3e8fb1d48dff0e5bfa9b264c8f8163c3f7d91c1b9ef52073872a2d8b4a9440c0f811a073c3fe0f74a38e8055816cf66b965517eb2fe7de555d0e522922aa542cb7ad478afe75ce5d603014e27469352f19e878fe91cf959e70cc4023fd7720cad8b6ef3dc1d140cb74255bca2a1710c97cf275f1dcd1433d2f16304b52a40c853710a520c31bf1a650dc98ad23d89c49ef54592f8f7437a3e1610114c454490aaa25e49b1854dbff5254f9c6239b160dc9b6a82fff29bb093a8edc3124aee511debd8320f69e64434179cb6331b1b0e1ff41a10f3e7a2abdcf6a0b6c7e88d7e2c840ebef0d7f92987072a8277e327b98034314d4203c716fc157df614a8627923ab342b2cd120723630691635c81ccd37450e2bd833c54d44ce823f2fc9a7d4ab281671dce347f19e98b9179817bea42f56422dd3e2feab72e176c1b8fc9362d85a3265a2f7374741f00a2b7ea44e2b4f72c2fcb0475b2dc042bfc92a15d8d7eee7b149f2bda16f2cd14444f629abb8f9154b3a80ba6dd8b5cc431c4236d1013898b7a556f0bd799edeedc55eb229309b1b6da71646f9a047a156eb318421fb25299fabad6fa7203e0e165b2c6020c01c5850497c24481814c353008760e8d333bf7484497fe5bb432655b515987a4c98ab883a576cc2647750367093ee827f9d603b6d94b8075165f3f746ec76a8b679b84ec720f0dd11bda775411d0bd5868a0138e6d52d9acaaebde912a43a5e557d61c182817f3a4f02ecbb40c22c9ebee35a9e74a7322547a72b452ead4029865db480e503664f3c4ec011c02167872dab1ff11582d64d04736b71b0316f5820e536a7f1aa5bfed9f325cc049b984b89f48b9c4872e97d8e08a61cab488aba28cb01cc026dd09c9ad5bb67176d67297f4914a2e0bfec4bfea19ac334fbbce0cbd14397960f412ae8ed2614f612985719e28a9a07eaaff8fb62b4def0cb688e9c85d59669b1c47e320f404117997d502f729286b0f644890a694e2d1ac0e778f68908f47b2072b5e9d4b8540762f37da7c01a2bc711925804fd9ab9c3022ab68b27541b3b7eeb3f397e91f16f2c4e2ee692fa6ce667cccd45ba2dfdf42618ca8a4dca586a2aafa546ef0ca2674ebc7dd48d6238753fb749b97ccad78b8951d87fb35c3ece3fa2b148b33b393f07873170da983d890e3802d30973da96e7ddabf560fd8b932d385eba78f25021507894f869dc73170400af5c56d2b516ad94a57d07406bbb78391769ed5a86c49362b07d60d3ac7252dcc00cbf99ae7da862a921ce9b7167e86444eb30c5dd0ace2c57f6f81947848f6dac80265c9eb52a626c66e1ff803d7a61431fc61f83a71ef6accb28c5475e42a692f8f24f7b9bc1cb6263d99afd78c015ecd2b215d57c6fea0ec59881d170f2d6424eb0c5255056d136e5d0a70df155c621efd9e951eb667ac136fe3e99294098f05a3d7db44871abbd2c656b30072b880572a3847bb63804dc52e5c3ee78fbaffb0ccecf859d81382bc63c7df15cb9db452c860e1dcaab2ca0dcf49adeb0e393aeceb73dde30a9b388d1761d8644843030ea19eda399827d5f81c264e9e4a1866f531064e3ebab3af672fe2ab69f86eaedc4f9cc66749f89a386c4f1e7cd315f561c008d99b106334da4b3f4bd1e0f0726b217d589b6fad345ed5764ba2cd17bfa3bac6adcf2a790197b22db494520d1bb18286267aaa278b4f5c7a246b94843baf48f7f6f4ca54aacf9bfb3aa84215c360003819f340fc098ab263f7b483eaad564bbec90e85d37b1ac2c7c8b600d3da8b7e9d143a832cdf008d655ac58a30186f1c1bb10f90bc0ee2057c368b949d2285ebaea5a6d60fed8e2c9b3d2d264a8620d3fcff174d229b6b7aa3f3e239287eca2ccef9f4be6a84e7a46440244d53c275837bae16eb5462d39ac2fba73d265c77421a10fcfa5ee902eae257fb91451fbf67a3a72712a9b12b8ab27f6630d1a1f59a61812e8c25f4ac0ebb20a6bb1ee576cd550123f4704d9135fbdea52d40dd149bf544499ff38af78f381fa4b10dcb6cde1b1bc8a46b648b81119de6e5a753861c7786c3a400bb6d00fb6e7fc7214ce8f39064de9d3f0931a187c949728fdcf87e4c55521eafe6a7276c975e1e8dc1e9b42de1ffaf4cf42b2244c8a28845786946787fb781765923a45005b47414518a176dbcf1110ad2866218701fbb91191feaec03b38392d38a3f6a53470340483ffd9f955b5257188556c39e77efa4689f9434efa9161d51db97171601631076377dde787ffb1da8fd0c0cd4161f6c857664c63d63f20ee07d50c4d063268a32367ddfe47d37597ec72072ca69fcfbc7ba501c97248db0f6f1e15800d568cfdd52dc4d904a1c62aa2d73a3e51537202b7d0873c657f44b73cf35bfc7e5f1a88f76680e8f639db13167c51ccc507ec59f40cbcce27ac1ecd9464e16daf48ea4dc75993e5aee3b2a4b2f05a8ac41d1331363fd2c279569b55307622e2823bbebc8da196ead4d0eb02425f02bc0efd4582316e8a658f4b0537eeb9ac7a3dace8e3829fcf598b8ebdb10fd5a1c75ff4847822d4a70b4f50fd4855864c2d5ede151b4be78d243fbc212a61c811dde59437c7fb50d4bf245de166b36a996ab1061e4ddb77b1e6a37aff52c4a409ee99197b5c2f948496e1e4dd3a0eeaf92d95825318fd8790a3b6719331b93af157ff3c7830c4fd815b06ba52cb5717a24139ca3c714e7412c3d082f46b887ca4457314a00110016c8b6b721ec0e48138d406e1b67e6be39ef0debea0be586a6cfd5ef9d4885b958431acdd9a5b5ee79f414e792292dc2cef8b7ab8b97acf2234c8fdf94f223dc082c37c68d251f211bfde043fcc8d6097a7227f623cebf0a505c86c40be16765680b8623932ec3a0b6d53d78557a3a471be04d51adebb6827704f6ace8c00e19c6ffeeb5e113641950df6a53ef5228ff9fcda516c3f3d0d8508690c35bbc5d1fad21400fcd6861cd90765e712869e128356106afca1f37ff4fd44b95eb00d214f52dc998a89ce3cb182b5d06695800ad74570261f921b05c4420d75dd9e0f9c0463931b9acd26c61f0b89fe13b7910bb5eb6cc4ffe29b9da19dbc17cd0a7c2b18f4f846d2904083997048643d7c216ca6c62a3c915c6d403272412f77686182830f0865edc5ce210ff755d379e08f4f643e31b2b2a9619a8586194ef2128d0c13f6d7593b02356d8cc67dfce68a64ada2f099d39ddb1ec2a63a1e59e6d7ce185a8876c33db122cc0b864f4d67f7578f4ac0aa6d6350479bb3beb568b471bb6126b6bbda8384917572902c8a616459d4ea6303e7d5106903129d34b35dca4314ed3e41982a6d07505dac78f5abf921554d8bfbf58bdde0245cc9b70e8867585c33a1b01f3f2e83ec5f9592f037027b6d42460a52eb9b9191dbe07acdf8eeb5a6d801ca57f1968147dd28be5b18eff96d4ce385d9a61b0a2ccd0565656ee379e2236a5510a24703bf1a1ca12f0fd45273db49f76740746544dbea2289e9337421f3e51ddfc09c0f2406c57d5a55740cee0e662785ce83b867a626e9b7f783a0185df786f4506c98b438aaacf1e9e6fe416b27d0b8cb519d55dd09f968e797581d861d0010e5e83221346d807121c1176ddea2ae2b93846076624a4112db4c9f0dd43338f2c399e51d3985bf5e2a461ef02b57b4154141e38daa075eda8bdfb87b44b1f9897aef204be600e0682a951705b0fbda6bf7e284598a518fd538f816b29fc451853444cd9bb34ad47c54caa31b7ea8864b797f0360378b5691abb718cec004782b5942a4a7d2635808b16b42abd8f9120db256a18250d1170b39163c3ff345dcef712c0cdfe5591c4889712b326572a7387a9b5a6ef5d507a2567f04ed1d21201568191466ac83fdaa23cd3e1c4c33999dcac8c6b5e3007b1cefb5ee5e03032a5bd93939d30f7b24b4d876e6fc792abe58fe9a3959d80ea373f2ff622a555147b578bea9f83f794e53067afab646e76eefd1a25b3dd0a4cf0675e78431c39b70d74d1d44dd596f18a830af680f033639f4f6734c8bf9736ccee7508c19fe72813449f060326355e98222d4e008fae75ab8d18f57299ffe907e1ee9de3f6962907b355f2363ab9e2be137e7e352b980e95aa76e0a0fa4df7b0878516dcd3551965d02fd35e0da1f6e8eefc79064ac647b899df41c65c7b3707c648380d9446d52db7acdfd7810575c86f4259eadda10b7ae00dc02d07d73aa35410dcc07ad395bc70b1c8e715c41fe3e43f5be9840ad1b3614ec78ec6201a8099e3e336b3d78271874683f53642a46d8e62bfa1b91b4782d0cac79ed9ea119492488d6279b9e4417af746f57f5b0264794292eed7d0983899a2f294c3b9129d307a93f654085a2f260d46e8a85cc54b1e756c0cbc65e61ddcea5c1d17b7f1993f07c4d5779348377a537352d60aa9136f569e5ee83b390004deabc574ac603cd96f9ef89df960f6ed91b3de40623fa6eb3c74287e421cb71d709e417d00b7d28ceec79088a937ca8a4f1c3d34a55e2eebdd9c696a96a9b6d47b4bffaeac4743b25e9515e0ad88b3fff26e018d3da8b545706f8c9372490aedb9eb13abe19d4743d45b992d4d6fb0377c2a5cdd54bf32e93f5982296f2b5abcaa2aaabf9b77eb2782b763057922418d2940b4fe6f2f77e24d94b9ce79982f135a008ef4321d3b4d22e878e4aa68d112a23dcd89b67e935dbf0f3ed39f602bc314fab1fbebbe7867762985ab728d2e3ef1cc1c0bad6a841816f73225346463fb8fe18ae9eba9a7b09a2741d68d6cac7e2f70d526d983a58dc8d38bc9eebf64cf8d28d1bcc82f3caa31255254587c8d8e5f2986c330e7ff39712383681c3ce5a25794b9b74b9958d3fedd82a2ec5093de09074290a2a71cd019c157234756874dfd03ff473200f857bcc00fc1f9de5dc0832d9ee09f38d3a16ad91f49e52259dda3983010ba33359e1f313bcfd2d474438860d5faa5b203db948fe0fd35a98edf097dd7621a0a09f534f13e631d63de2f742ad4569e23ea84a7b7354beb2f992c80ac7c8124c634168da7085ed10c8267d464f20d20744505c53779c5762f5240bdab92306bb9485ea046505f5c4d18df63f94c2bfc9321808f26dd285391211bf326932784f75d395f904e37bec8f3a8df68ee666b20a8301aeb06ec6b610a0c0ea5ce28502adda3ad67c8ef0f741a740559e3d95d0b27fc4a10f474d85bb6c40a4e282c6df1178a0bfb0bb0dd486298cc0cff32ab6b585ee3ac1a85e9a4723abeb875cb060f054e44d6a3938e96bac7482843e2c347fc74a8bc83988e0f841641d9e7be853f85040a36273f813385f577e3f93e0955eac5402beacc0689911529a8bcbc61ff3c33043e24f90df510d5f415f4408754a7adaba2dcf63c2e4bfa7a419487216414ac015819ecd91137e121649b95cedff5f0f708419100a3274b24ee95c8f5791877b95f5267568ab9fe3f2bca15a576f62ff48343d07ad2580e226d44b8649917caa86aa31ea6ce5187a9ede60a5f893eb5de392d4b23ff99937c6cde72fd31a9754c0b61e8ab3139572242423747a68725db2674b069717f66d24474adefd7d6c7f2c2c5130cde21da7c9a0499363cb06e278cf40bca515ca840881cbac962d96e6607481f57a4caa66153e032291a2340373fcea6d2ca8f7f21c5d788480431f862ee1fd943c7fa1851519c17251dde6ae2912f58530b07fde8e28e1822dd3668483cf17bf2cfa5f7cb8a5a8ee3e5c819ae0a5c5efcce2673e8d919707e742ff659732cf0303ace700077d4be8a18c46842b8e31fa4845b951a33f583cfe6cebea5003b5d977682e8a3fc2ffad6fd8e3896bda3a0d850b9204b157be9e23fa27241abeb2d2cbb5f180a61273de20d553e0e18e2c1bb92c8189db13944efd8899768c9de96f0bcd52fbcff468f48551b031c38a973ed282c9a85e38a3cb7e055ab65d02cc93ac4f97a2e2e7f8d529774add63ff3002d54df4f9b7f72567f1e81b8fda377f1fa479b0a728d4f7ce4b314f87fcb67639396c1827a4a605b72a81c8f0cf245c7d3a5086012bb6f6bc505b6d69e37e89043e9f815e54caf54c37f772183e8cdc9c5b5878a5148ed4dea156bbdba8069b8f324ceabf36d6c71511d3de35dca9d6c086c87a1a5c90f674b10239bc47434c647e26e2c5c2cc773c9988a7ead2b019598c2ff9d956b70d0751d081c00b29af41a1f755405f53cb3f48050cb53293e5a45d209a82f451aff9f943d37481214987d22c572f3d693d067ca645f5d2b88bbf63ddf8b526e8c598d1e664269936968172557ae2ce6bf00cedc9d1fa993603abc14af33740e88667da8e7759c61a7925f39625cf8cc5c415aee387b6d3969df45f21bf64040e1775903c95ed9751ead3da639ea8b0a7f1cb36d9092eb4e52dcd9c8665fed28ebaf3dc6239ed07ca17096632f271c55705f8b3291344a1ad65c03528e3cd402c512047c2ab201e5bceae448d190b8a10dc02db4a7c8fa1b5a9c99209e952c8c1eead07e07aadd19789d5bac1132af15d2ea5d4824f020969a5e5ae06d04f09e9f00eac3678c8666b6c52d95917e80542badbf3fd5b5c60d5cf14a684fae4fc83e9d31a4722f16ff61ddf4e70fc8c447333fd4eafb7ca53ed8528c68d959371d62fe4bacb4887bc9b9003f465964fd302f051afc9488cf2bbc30ae57b0913a7af390a67e6921005e51e1469107a0da7e91dc57b926d5e9542504344f2c2f1552e4f2127b93dd681b2d281b1a6c15347dac80eef994fc7c9454c4e9bdd4bd1fd31df4a454d21c42a07b754c6e24722ca2beee43f3ac07c760c75e39068cdbea2ff11691df266b666a9cfae0385e60aa296d6964debd13e48a4b83c94b5b73feb39b8a061c4877b8dc927ec3edeb28f4e69f15bdc214d5ebd055fe9dfb37cd0c3160dc1f72ab4d2455a6cfd87d2e91548b0bcbd8ba05d1b29b51da8f9892a8110f02ce1b42036ea5177fdf6dd24603f68670dd2b93b5d36ba15c8e9bfa681579f63db4f91c591ad6847b44be8014ad5a033cba7bc2547abe69de950181c1cf58d966644a23b8cd61c990661a57510c9f1472e574e3c1ac6f93432cb12f49f04f46e4aca3a2e730351bec725ffa91f8b18e7b8da1a8b338259f92b5ea77af6e6b2c80f11c36e2369287e6107c0791cc1ee8c479ffdeeacf246f377c0f297f4c19f166a5c727050db4ac2e18822af392a684e1028a307fe97eb1347496d959a977e44444cc95f71fc33f8f65f6d6fce1bf237a058f1e74436083c2cc138276b053f50d60eb459b854628fdbecb31f9abdcd0e03b9a8a09832f223be9193ac1cac1789cb1173cdb6a6c694f47e4b4ed446dfe557217d53bc100106cb741867b6621b2d242902ed75a470737d0fbcd222d3f1080da0ab4eda1d0853a7969c45c5767c1bd578587e272912f92a90f3d266a911750b6aa193223db128a220196532cbabbb51b6701f44c899cefeb24fc82a7634093f24513b67a5ac75f7b01a8f1013c83712c7b5c393ea43d2825cfe655a254eaacf304c3bb4d44ae23cfefeec5091c49ecacb194d502bc47b9825a780d025fc34d0dd825f461fa94055b27d0ae9bede3e15fb97411d1e875af32dc2fc16b1ee0b486fe4d637175df8222cf6036156fe06398fc6b7a32032dd99abe1c9629d36fc04c5c9917c338281bcbec8cae2d2415b59daeff44d0f1d0381f066c852fd96e7d378c7a7707454997a63b2ab94d187734ca5f9221d42190c5846d1bc09143f6f8dffa3a42e4cac5f8ebd201a699f1c5a02036693341aa888a9bde2f1ea3e1b89f7844641f58796f23d98adae7f9ae39b6e1f48b80a8e4883538e8ba2897c422daa45169f5b948f470c592cb2769ca3905cf0a01203a13206e4b6da12291b521829bbd09ade7130a72b3120baabd0bfe8ef4ce85d50260c8495a25f08327054ad13d172e4b51a84fdd49211923f069d42e821fedab690a3398097de980c86988e1db7114f423829de558b984782445825e0735ce3140e9a6568eb22406fc143ae160b883cc5e98b92b80d92e63a279ac8e96f86ab6b49b77bf00023e02198f1c94262d9c5179d90401dfbd366153b2c57a98add103630a0bab669dedea43aca013ba6571e2a310f62c0a3fb9cef995a60e63c032e44ae520addef3bd29dce8a5fcf63103655e5fc53ac29c6d4ea2b5d99fdab16bd1d6c693f2467a4b7c148375be8f0a42f4cb29271d7949cc2ef4a3597632ce42788030dbdcaac1183c935508b5b2f95f2b73d87281a3943402d22bcdddccd099d623399cf09d94d421383d9fc722a4334eb17b968a819562ff717cdba700c3a4353517f4e5cdd39ce03927fdac468e3f4a724827c7ed4746efba63adde8ee8aa4e979fb781b7577cd8aea79ac0101b312fd37b53de8d945fb04c2c5000f511fd6f27402df36c4dc6bb8ba5be6a3792b30f44f09157c4c4de9a3b56b6834ab1d475338a88dda602293d02bff60b4d5ff0d413258c13a7b61680fe4c789bf90fec33dc1bb894d80c66ec4ba2a8feadbf9258284ffba99fa9414f02b268fa755a84c421035c84d292c1dda583742da9fb5c872972ea4db8e9199bbd45331b676eac753d7a5d78d68f1386371794f032a3dae7783e28268ee13481dfbc94597faa0102776a0739561687148be760962cab2d7894317d7252d2faadfbceb53807fa489fa04d64da897e82fe48b5a7057e27acc892998b45a0273365cea543bf61140c4b0b4403c0dcd41596c30238cd4d6ff398e3b28eca238d9705c7b2eeba8d73f94174e4930d8ca77b425447d2b5ec35bbeb4046bd02db5d8008c998b25c5c3fede8eb1aafd5f243a332fcd084ed9e641658cb4b31b995d28b1a7b3ba59186c46fc2b34adbaabe21dae4d82f31751ec80e8b19bd461d9760ce2a2c25ff3f679773b4052db83bc0aaa8f2f07ea3678516ab19bf4071a361d7c9dd249715c8404b6b1bdc2a8cd3902a33e7674f7c8756dbd2126cac1d592820360d3ab1d9afb8607f266e9e1a8072de309150f812d7c90bcd7006e6a74d502994ea10cfb756ac80381cec28e15360b4739f744151e08fb1fa3eb756483d24ed9ed6b4f7dc5b3cc9be347a9b5114b495db47f25b554e1e0782bf7a5fdb4603f7549ba98f13c8031edc2a5e583d15635b6ae2d7adb8671d78941af213e336adb936e36ef92a5944232c7c5b31961562e9f0f39ab0d4cba27c35c692f8377d5fcdc672b1ae7dc7558e2699045db05db7da0879801e6a8c702b62bb4406f014bb8cee7d683f5d8c7ee722163535f73666f8c702e37d64654633f16bd8aeb32544e908df83c2e18d3ae61b01166c6d502dffea022f684f2a490bea45a73d400057423a90004f894514afead5eece93778a685c63b630294133bd7f3edf4d5a43c8c403441ab8aee8933372139a5d6231dfb6fed53964dfb5975008121f792245b73179b5404e52f03f968dbbc6a260cc69a2a60fb8f4d9c4e78d6f166189a4baab58dfb95be8f55dabfbaaec979fc59f88d73aea7fd9512f36a536235a93b01e10ef002a8a7e5f8e5ca6cbe2ce6e2abd93b66369e3a11763c81a75a0abb6cb304659fe00e85ef883b3eaa8079c2594c677c44b6fbb461cdb2efec8597fc7bcf5fb4e50f27e3dc73e9665c24f31af3f976366a2262014d759804744a7db1fe166dc964444f15d7beca6bc39d99ab5ebc12824d6e87f017ecb83c5d110612b3a42a4b148b558f7df9e46f0f577f7671cf95517cccb737265b7d6aaec62bab62c3f164b048de15276f380b24583855fa7a4bf2a8c6a4940c1039261564084090307e17697a5084dd8a3b5214b6ed86dc08eeb560a39f67b6f00e92d3ad8aecdb79b6c8b931c7eda57f63d0e5469a0a521caa6786fba5151804d8166af4bf51352ba2cd839b7293b9bbce2e35c134b0b7c6d5f4008cebd3b456d5fec01792df8bff1e159358f95a0e9aa7a9b67769dffe2ef29bd2c94c081508393e046e03c931716ed2bd8a747c8833d09756bfd72a407895e9e5f20fcbfca5e61d8710a6f94946e96cf6e41c91a7c5e7add2078a4249bf120e9d8dd7873226e8dd93f485f76f7377b75871057dbef81aad3aae506c86f99becf91b9bb38a2409d241f4708f0ece310210dd79eb8695bb29c35d4d16978976ccde070225eff57df809433efb0b111d435aa87c93fb1652ff730b2150a13d2af88676d1f1e9706c089589a7b74fdd118d61692b20dc977ebbfb54ae57e288234ced05c6caedbe5bdffa68eebabc1b0832a319784bbbd1304384ee7577099d8047e5154717cd21ebbc104d32961010f3d970a9a0033007c789e44497c6d0595484582831734df1db1ce0637e724ae8bdb4e35478d5d18355bbb8b61914099beef0cd249b446dd16bcfb34ffedb5bcb670b62f3318aa447f2263b48e7f297e18e4194e3591ba293ba33921d036c95e6e388207dca85f63e8adc76c9e13feb4564ae9fe3729c3b791d0175eb2813b3076c0acd1796e61b5d8785f2696c92d990af232bf8d98845eb80579139b0cfbb223bf60903243539862dbf8db48da2a17155c06bc2ef15993c86da629d2acc98b01b5e182a9d393068ba79093d01a941d501b6e806f9198c1e9636377b60a2a981d2ee446d851683b445096633b7b624329be030d4b8bc96fc9384c1beabf6a9365e0e2010410fcc8f35de6b14815330a9cb062905cdfc117f82bc2c2d63007eb6f886f0b36e8dca56cd618074a4df68315e1c7d963fce4cc69e20cf24e5f036a7eca3b5b64da703a51caa4143a557ab07d03baec9614b507034af61fa8c468e969790565962173aced37b769f0a76ecf69cc066866a223aee870daf098dcfd5297fa55d9e1040343aa9c45eac57844e19b06476bc80ea3b350884ad5c01dd3726c0d996772b8a7b6f714e8358dcd8e9479c08698c7f61a395a250c4df1198417c8f4cb209e28e5a1de98a926f052d0bc7d36cecb7f27b5ed00ef86f2eeba990461e117ce8f8be05f2551a4acff5b824da8a33c45cff4cc9b7ffee763f6f37de2b814579508ff6524cc021a8bb13923684f6792737a9339b0934b99b95bc7f952d56ec0f47d29345e28d63007724332bf21f51fed48812f2b757d50c040486f537dae4b5239cb59052c506f30b1b99de00ebd3c025a022d5e9b203dc956ba599431a3ba478a7d1517b487835b3b87cbf4b2027ac3ba86d22e774a58bb6be448dd1291de4362bbc9a2b09bae4a80164e433b4e45dc2ed89751257bd9dcc6856ba59a90fb8875cb6e203aeb0f09c018f6eabf8f98e5b47667018d0d4d5425adef826bcf5e41810207f300ad46ffd4a99e6f849362c7ca0368517662894869845f8b480beb77a062096746d3b48dab3bd1d62cf0e405ccafc316496d28b0a4b557665bdc2f9ba17919a15cdec250b6a5aba13dbd59036a2c6dfca42171a2a281d127b879e70dc7b1bedf55bbc583d3ab3c2632e1d31a77ff22a68d4d847a454a121e71a399a7b2f07fd663cad0f8d94ece9e32845725e02a4013cc2bdafa0496ee5c6f3fb10751d15ce3b0455502ab87649cc6da7e048f3e09d47ea778f12475668af9a05c3290cbb2722b23cd425e2dd2b3db96a374c7c5e9c5af13edefb68fd900eff24cc7827ce92060d5ca7e27deeb38d11c553548f00918f760f31325b2b4e6b754a5100ceeb8a21b9b58b5e20133807d1c15e427447382f3a251a391e6522f820973c7f30feb1bd6b153dc970e4dc5fafa62d1e59d4883cf8a0724ef31b4fc9835ccb0295d71ea1f8700ba5673ac178f871b15546ea53bb4d28a16262913dbca488c524519a36f4b271d59a5ea2435c4f1ac740cc329e9b04b7e529ed6ce30a269712f8ad70ee5859a62806f59b2edda11fe92150a85ec03e38c62dd5dcbd963434cc281a5a8700f9986c5894eca1d2cb22f803f6bc61f20a6c275581d35b3a3778f998a271c22e2a822c97eabbd42399f6cf980bb930cf9515efc581bba0bd4b947c07c3f26e0bfbc030c0a4357225d1ad40f378bf1f431356eeec60f76b62c3c86b7033463b772da5d90f27a51e915dedd205c42eb4f07fcc16b76af022ecaefc5708cf54911303229a06fce885720c81b214e8e56274002b1a34a26c66ef0ae9f4688d09770e26f59d48baec671229ad273460d184de43c7b59bbb963bee3b1df97429ec6bb231ccf1a84822ccb354a40f9cba2e0eded7edc0978d14601f7b6ea1b25cc61fb780e420d659a01383bfe3d97f38d86e3d050f5aa2168c5c337699332434132971ad30f1c05903cc4955d8c1626af6ae9a95a63b695761cc5ad96a9a14990fec8bb9c9eb319569bd374af35688349df3d0851eea37d24764416a46217fe3a189fc3e8a6a44720ba3f0d5de9030a95071f0fcac79ff6fe85ee13b76e4298a61067fb1ae00cae0d461c7ba9bd52accb099d659e5d87bcbe96d6a802ba5779faabe1e99816fa951fd3033bcef3755402c51b1f8c81052f2cd2eafd0f3f2e803bfb5831d14c1caea6d6ec8e0f36bea0c9a5eb4efdb7d31200a27a535ce20b58485ae58e28adb723afe0a3571eea5924251508b2cfa28baba4535dfbeb029be6582e6183608027d45aab6bcb290b6f1c2b352bab5a46968c41af4c67be853d475eab595166f92253fb2a1b58983963cdbbbca9ff65dd296e124339f4110e3e8b530f32a021ead43fc8604a10aa88e9de9c7342fa572547d0aa78ee6340af429786c924f661f1fbdd31ca550a4b5ee71fcc0ac339553faa2e3fe80f6433b83871494086a87547976f2296d5ca059c271b4492c7299266c4525e9a5ea035b2cffed6e9134de74ed604b0f5719ced5d584c5d5be7b1858a87848872978af3936c80ee9058278f3c67645ef5e8fea3c5cbd689159d90af0b2e083e50dfb1d2dba11b0cf9fd903354ce79867978f36c41e7bed2316306aa7df3b5b8f7a02209ad3376d80956844327b1a40db7cbda3d0f4adec7d85ce9b0d178660b75f558bfa616a635360d6e6551bbb887320182f9a7f6da8efc9d6694e9c599e32b0c9bf65decf7490ecab52d364b681014d1770d8054fb0eb51a6e3d3cca436eeb97e1ef0ac29ca4b45d5ee23c9c46f8f8467d2e63937660e2f222fe7e3d85bb556c63f400f91f0d6e6221ce27c259fa54c4edaf505f58122bd771ad855c50b6ba67e95e2075725f5515b174b4f46e8d1ed0e6232d09975591f5d948cf59ca36a09acb13082cfe9ee349f13b4e0dc92f832f19c400d25998344353409f1bd06698ea9279fed9e962d68ebb26348b2cbd76a79b7655bbcb9667598b0a5619f104a44995c93ea2643e7531703980fdc1a2b59b344716ba35d11a86b7ffdd09901f2cc7c6d3b10ea4162a7132e1aced12da7978e01f2a5fbc39d177b69427faf437b6aa67da4776b06c1cfaabad3e9a4c9b7b6c6292e6bb742c43f1d5831d72cdb1ebeeafa463ceeb519a0c3bb0e203befdaccb0774888830fe78f37275a6b4a839225a4997d1f83b85c87be8b83a3bde7cbc35fc178ac9ecfc11671f8ecb918a4f19cd41e570bfcaacddf6cc01086ed72b4e6e0cce48d839034f2fcfc72010a8adcf2d36a9da2164301f19c1dd64496d3974a6310fb31039d5edba7f8e6a68add398833f5b602332e0fe49ba7f7a1f35c4797ee5c968c4bc2b40cd739406da593dff9bbd798f5ec56d09c91555d0a19c2873c861de85fa30d68d3f2824e858f52c1c5d6085619c7fd3e888aab16821dbc2aea9bee2d03746b8a8961a295e90db84a8127eaede3b530e67765198926261f21585d59c83ed6ed4ddf9cabcb63b4be637a6fb22c0a31256d97c4160cb88f92ac8c59e8905a89076746f95cc1b03553f7f61175d29420fae67442c472784574a2f73c3e2467ff2963300fee2f3e37c366c57670a26e83ed57efb18406b47784df44b4f6d947abb9cbed46f57d4f78c185bc18f4841ee51c6ab381bb7aadc9b4f4e2c1c4394575b1e9604c039d0f40dd27c208f3e1692fe2a1f88eeab640a0df08970453cfa27b280f11f191efd142267e97e584171548bf7b1b1c4369fa5916d2f82d2be27c484a6a26d6bbc4d6362f28bc60d5a9e7752a6d33e605f64a1f724af9b1319541c666c4b6b4c6936f8b2c89b74ea311920e2efe4c0cbf8bfcd39ed8407489c4ab39ff2351fe3df891e4ef6c4daf7ddbfcd54ff66ef430c967bf66e2ead6d15508c55c44ac0ff1f87ad7775b82430bb8b1c443bad5f66a9a7e96d0fcbac6b25469d49dfbd30fb8d6774c4c07778302862ad46413708cb9d5d3f00eebf91c8849b434bb52237a922fdbcee50f3b7f259909fdc113a8f9ceeb7f15586e68ef1f170d536f12b294f252c8445ae81979795a5a5b68fc7726cd322e17fce8b61acea4f4f86d4c43f23f44531369c62730d7396885b25f16ede688f280e50ba9e6ddbc06281a3cf11eb3939a031210b0949d110ff5ed8b66689555aedcf92565c085049d9aab43044ba134229c0fa5b365c49a6b501f68d547304c3d17e67d9eb404faba5f3371b6ef9d6df5a0064f39d744be24c74ab12cdbf7321a384eae84abb8d845141675b8d1d511e0065f0f11b59a0aa839cb42803e53b0f90ef9e483c03ac9eb275224cbf153499e3b53d77c1d1a40112f46b2842bde24950b279ae3f99b8e980389ccb7af62cdd927e3e23863b259df0dc6f04d22344f96561f59f581e68c42d04de56ce3a73872a8bc4391d2851427b8bef0b0f4064f774d98bc1258845bd55b5e990a5a53503933ce2943488fccd1efede2a374c4b97bbbcced4c38d98b88e77d3800537387c569d727ce9316f2e9b1fb3adafbad82cf30524a25b466abb7b57d6f1dc42ff9547411f87484087a44088903115415f3c6b7adabea191e4950ce44022dd7ed070e8cec981d8a156c2811c53ef9214858af0d0bfa840df5a0fe62854ced0e216c3b78f5af010afa681f7854b3ec472ee4c0bffc42c86eaf8d07b14f8124c405798a5e81873500b709a44c6ee79b45ad24b081cc8d325bd3f4de372dffa46d4377e85adead01682f27275f86a47c612f76124a10c53dc9cb21619bbbed85d236c135d4f1b39edf5882c76bdaa50bb3bcbbf3e3ef6e8f33b5f61d71e663c9083f020b8d850cedc41cb9bf513b1efc1c3c2943714cc0786307c4552048ce85973493003367470cabf313846882667fa39a7f8394738a3bcfcb09ab72f54877664721e31d71d875fcd13efe53cdf8413a3309342e9527f278054ab142f5e01fcad5c0116281a33ed9bebfc6d59929ee8223f29e4f08050feb03bf8bea1890bc125fbbe909a8ff3e79afc7f519ab1add61bdc217fd66c22948a2419e6bd7b7e3b4aed79b732d6a149f2076866964593b44ece973bd73d1209936b62f7c9b36fc3ce750072d58bdf2d28ef91f79e289e51ffcad399377d1262faf8f14ccfd886f7b357ad7925cc8ce3466b93710047d2c7d8eac67af5099d28050b5b7c1a8fc8f6ad29b97096106ca6075b355d227a6295eb2646ecb8021dad2a07d49ecc2958524dc05a5228011e81dbbd5d6797d97775bf4225fd940f7dbdc6b106567d62ad754ef235bb3ad64495a3c9d13c6973b689a11afb54773b721492d04c1be3865ed075493b4ffa8c3413b6e7e3ca46dd4ff4822a4bad387ee8fd112beca2ddde1eee98ecc2f4f516deeb81a596ff5a4320ea79b92cb6c159cbdb1df3ad377b361954f7f5509bfcf604257822d809b9ebed013196596744a6cf64f09694a1a78f7ac1ac6e5eafad0f9519f318b8ee5c32e173f5b51ee84a442b3e807ecdc76f296a076c2d543eaa7c9e14144c04e9c4f3119fb2e2849c8b23e29f40ddd95b86e2af979bfce33eb1322c73b546964e55e2675e46624f14f3b434a0334df0bd5c0d48e947c1f85dea35cbf02bce713251f94dea8188c2b7275753c4f5a77c02731f7c89a72573cda52c85bdb47c12a8782406c2a8281c28770d868eba87db62f029a28f68e620bab2ba875005c62c3a6840ccc871e2445989d396c2b9262860451e1a523f829142e7aead256a2162536f7e55043a4c16cde06fb0767155e5fa7bcc12d91086758e9de2d1235d78ff5be98fc9b781ee8f6cb020dd2c31b010c37f4da343fcf63175af74ad99c294f5090e2a6762b0a53300b15e1566a9f4d18e68cfd13c8228cb29b8f8da2053cb95a521b12089f500f0dfe6e76f502f66f5e4551347d39327ec8d139be9f33050550f85a5192f5d5eab057bda435e602497535622932cf82d2709286e166bc4d85c433cb029c0242ef3c6eaf5fdc8c4a5df281848300ac9e0e15e6035329376e0a4efe35aab5d8041e0b81f059dcfb165d70cc52349af581aca8357168f58c6d22ec3bf7f7448b05766acc696627167eb171f37182d92786cd68a60a6bb62d9638c27395d28c41a6c720b3c3414498d919ac150d3a5d98172f920e93dbc53d7612d5dcdbe8ad1dd4f07b167943e779456901d7bdda8f29d1be5b20f7d663b18ac8ecd96a0cd914be9a83d1cc337677194083161c806a1cb27d5f87b0c9321c56663a33816cfc8b404de0f6635531cfc75e7eff60815b70ba8b8ea862d68b4d08db0acd7f37eba9b7b2540e62bf995ae9c0bc88cefa86884d9c18bee74b45749a12c754ff30f891dd7cd59665898b6f078f008269ab4fb56de0966636f52f660aafb61f33ab4fc73cd14e36ecdc8443370b74a91df31c41ada082bedfe388e0910a39aa8f1d81c5b475c8c1e3d01ec0439e3c618afafea2718201b3a18da5dd43a495fdf40f4e9b4c0b3327ff0ff20dd853a32a2913230e23a0dc42a4856045c6024f238d3347d25154a48babff5717e3d6788b43c74d76a49b2d0265cc1daa867cfac64008124b66bd945d9381d16ed945aedc1cabdd6e37c37862bc529740bbc347088950103a73b54f3a76fd8b99c64be00b1d6088942c87d8215867c191574f7fae4ab0d656e5190185671d52bec558e1e52ed5ccde3c6134a459e7a0dd1af453bd005d7f03b0c0800d00d6583658a0e44b0d8a7eb9d6a0e9706cc55f3c6eb434fb1360df7111c79d219c4fe8cdd24e7919fd13b6a827252a13bfa5ac5fe544389dd52dbe1c659b4d7a80acb429a3bf4bc9cd5682880ea257602ca13df1e8c8d22e9ac00cc5e2caa063012c540c044c251171d56e9ffc755a6e596b3616c2e62fbc3e69b16b82792c34e7f57521127bd8ac132230618dfe371dba237b4404af5cebd51863f0ba7e41b2c447d2da03fb923c9f3a954b7bc84149706366a9fc50ae330c8f8e2682a7c8e7d5e1b6290b0a431bfdd9bce07aaa56edd94e9d22a65d019dbefc1099be4fa3e1df3927918ec635a51402d94090d6b81e5eb6fbe4bd418bc687e6e46cfb1e2d7016e44e0e8b01bb4ca4ae2da196060993b371c336160e00fd91a4f378d28c3c695f87cfe5e415bc7f7c7ecc60bfd55e8249d3087c471fd6be749c950146a662ad7b7258a7ccc27cde0fe66940a93a05ebda666f28a272ca3fa1b5ceddac99ca30d67f6d794e7f97c4a1f6516bded5dcfbe17af8cfa74dcd1765cf4f64bc44bc6bf6fb9d955fd83f0e39fd66bb3f110d560e62fbabf040fc77e0fd7cd5f624bcea749952472723efc03dfc5c2a96a5f43257292d415719fe65c43bb2b337f1800b54a0dbd44dee65d6647217ade67acee50ad5aee91018e8a476b99561b3c4a700d193f72212e5413d7b98d0a5457d12b8c52bdda03fe6f64fad1a868c51171d3fe4cc9292b24f0ae41f780c7bb12c7364e22824de16a6fca13db0b6d08371bf161d58e61ba13f269f73e425f721b7049bdccb9ae33ba5b9e4e6fe2f456a834f313de711b018cb6835248a9dc635c6316dffdf2160dbfcc94e43feb56d7a0049226705b6b3239a119411c2fbfe45172770acfc45a477ab0d893fea7c6f737645576c6d0c7e79624a3f2d483d4f422320249121780db0af6739b9a61f002b84392a1658fde48f901afc35fb749187b1b7c576fe5eb2432ad3d3addb108a53e53cf8046f1de0cb3c9a1a23c441f0d5ccbdc4130c609b42625a11debaadce8b50380eb9b5fa99d27dcd1d6dca42d3dcf5746180e5117928b1baaea5bb1f50a20c619fc3d650bddc03ae5a46ac6fc225b25f7dc346d80e42cc0dd08d1807ecfdd48a6ae192a2c0a63cc7b81ed82ff4468a59d9d2dd85f1c1479ca9e78704a42ba13d96730550641137fccb0c5d27e2fb16bb46ae8bbcef0a2b30862fe7853daf0f203fd16aad894d8d26cf62c17400f1955bfb35f9e5aa358352b8608f56c8a4c2e83fe0873d3e92e01a22403613100a7dbe0346d804490605019c71b94f7c8c67747e8a0973f4edb971c4750ade6ce92f9ae68b972537275e2a6d705e27c662a56e57a7977a30ce7b7e3697ae1fbaf205e339a271ab23b0eb163f1ddf0a32fc98805d654fbdb2e1597ff061b35ba4275ce729b4b448485cc1434883bf920801d0dff107d6b88e4d7f856309b9b8dabb70d36392aaa6cb2c5135bd4372d8c0fe0d2c17a4d94a2b1287b6a8bd40f77fe8a1acf9f42986ddff7fef3f82b35bbcc7f6c5ea6c6c523b506ba3bc5373010f0b0cf5f96351d8041c6cc3d794c6ae42e28fa7a1b397c424b28198e5070b8eceecd0e5b2e7a6b7736bde742e4db59324dcdcf690e251dfa9be51e857e6ed25fcd81d55bf656da2d29bbebfa079fd0af4ed3c74d9ab68e638bee4ec3a7eaeede4bc16fa847cefea7cf5c5e892330826aa9091e35f805b8707429251ba9319bcaa2d9095d6c26cf00610c3899007ca662dd031aca05b25229c847c26a29279e996236544ac9dccd50e34432c7bb00f75defe11e9bb3c9defb9603708151a2fa61ead49a4ac681733330419e40aba90f253ab3e7e59b5f47b7622e9c8c69a14e80404cecab413666ad7c8b51671ef104a537a21a14da156a6c72f71cc5241633df16488c695c1bb7067968fcbe0345183c54ec3a2894ead83f2c5a40748cd632310551866ca19e31cacc332d60c365c6e7fa5e51d8c27ca9c8dae5d1c90c41167333d7ed2a8350c80378c2f5831ce6ababb16b0af507710cd94edbc331592f048b04e6a8d9578303e7540269b8987ced96820b0ede6b7a567193ef67dbeb10f1abc6e753502cb60c4798ffec515aa8f4c35a89af80551dcfb9a6da3eb7330197187f75f8355951059a102b7630b58238cd0b84b7d4f63edb0d270cfaafd7d22690900ce952e4af791aacdb62759ea436e6cc21f4e6bde9a2039ef7281820dab3d84d69ad0c64f7dcbe4a2013a8db4c4fd02c019e9a7dbf05a48abc65072ff22c72a494d30a51b563c7c69a3e1d6a0e3ad43dd5d121e861d60f59d5ec9bdf798754d06bc927a1ffb1588c0e6b229305fa851fec9bd5664ca698e4d8692970d2fa7927badadb44bd8123dbc884fe08ee2f5072e0f910158d277df55e2252fb8797e1535da752e91787488d47e4bea4cfe8cd2501dd2f6a4214dd60cdb4b6fe605230064c5d47b040c96f22914f966c00ae35d09486ba268b3b89b3e0e066fcc319962d4b16d057d5e09fb95bff321656c08cc72cd6181ebf8c9ee2f5d7965c43212f1dd49cb97129a3cf55f79d312c03517acd973b616c30af37612bd27c910119cfaf934953094bd5d6ff6d98d517d77d8dca7a7df8d65652896dc716d68c588ba1d0273c8f4250430f862022693671619a0d6609e51bae4a88f10e10e9d35d4b48076f8d6d75c3b1ad7ab6bdcebdc2cc21898d518c39cc68aee31d76aa968aaef66ef09996f8628dc63119d45bf7fe36bd96532071d32686099317fdeaa61eea9640af7f93567ec6ff87b59439202cddd817ea5fb293274ce2202090ad8984ef882e2fa8497cf392bfe8e7d18beff8780684812f3f7c6a9cfedace71d3cadbfd8220399c27d17b024e01af76844064f3b8a41a69735811e73fff2ab7936c9d84a4bbfaee838ea24d1f3b5e95e34ddb286324afcbb41754fc2cdaaad941884ceb34d48e791a26fe9ef3776e035be93426aad93084cf6fafd2edc1ee9be9f05b71a9e4e6a8baad24b1f8927c6ce743c4920c34180414200e724934086cc997b31b62decf5597c8764981e8a635d9e5576b1bd3a3fa20908b86026d8108b9407449cc2d4a5465b652e63a7f53f2051c3c551dca0289b702104fcbfba6d319b13a83e6c4afaf9601b2b7e9c4f6d1d485679fffc594c3d554be77c7552d815ceeffd89926018cab2b71709c4dc39b7695c129a6033100381002fbbf79c20f3cb3489e86e444ab86fbdb362186d00b730b523c62d7abb16e98990d82f2aed765325e781d6d12037b5fe95b9aa422a5f71535b2ada32714cfcf73f1c3bec14a6f3942f4d64e35a503a01f63347f3363c714a7ac374a00d6cee8cd40bcfa8958898012708a5cc3f7cc34a6830beeb0cb565ed741382852f82bf6d72401a06946b1decf17d2d257006316e94eaf59d23c2945031919a85ad0c194ba38fddaf984093ebb163438465a548a5744ffe25d625d644f9494d58cfa8f167cd177c418e8cdcbacc8a9d45fd25f741754610358ff9fc477738c1f30fe7a4f6997e8369596258c43a8fcca1dedae23d634c0bb46de14bda00c771ac23dd3280277b8d7edeca92ca10424d1125a4768e7c8b7de0774cd59d4d47b599f847c7be035ac6b6eb017c99b2f6ad70c10bc7adebad850095582f676ab59825cfa89ff798fa92c5e5afb3864fcf777d3b87d909b40c1ffab108bce58574f4bc458a6be96410da1c8df0643fea70413aee4c4d130624bd86d6ea4a625b328d594d02e7f367a0b629ac1cd4b9568d43e5a41d68c399f5b56ad435648221f09d6cd94194eb299a50d3d7cea24515ea8a6a66245d42cc3115566223736ed0e76224b973ba49d664d5f1c84a21ee4659a615516f7255dbdc4ed2c93d1c3b3ff0480339ae41ed4716b58981ccebfc0a4b27d7ccfbea7e8d2ee4db55687f9679ccd3dfdf1ba797fb0a515822dcd58473bef39f2781cd32dd0daa85209c44731459463ef8ee1a66aa9592b94b7d298ffa24a0c7052bb99ac1f4f10ca5d15972091140f3772ba0697669c12c605027b57916dfaeccffec2a99dab0eb1b586d77302a17d1fc7899bc60b7039a1210f1003c2fad49664c1f3fc537dc6c66593b1f7bc371d25364c3d4cf3c5c66d6d242a2999b5a5c88d136eb7f81ca865c39515da91d2e748bb8c72162fbea92c7da8dcb18a029474403d257c106516dbcf2edf1f14a63aae2452e4ef9a8935fa1f897e64375567e6eaab134e9ba619af153c40eaadc2eff04ae60f1565ff701907d57ce2ff694003c238024ebe29f58633a84c36c703e35eb571e7f5ae02fd723231ae7e87209c0cad5d393b1812eb04a56448cc48c91d5d45e348f64a17fb69cb318871ff273e518ca5e1c69a48720b28c67c3bda92483ff19d424cc57849e10f1b8eb3ca561896f6ec83e61cf4d88713715ac1f73c828fb7f4c3966bcf70dd6283910302753975d346c7699bf5cc62aeea3f0a06d081523168183b53c02b1cead59a70219920a09235ad7c30f379b226f35755973a3ea19496ff2e4d31a604eb52fdad74db11a98076bc5ace78fffe923dfacecd8d46c29ad41528013b9962cbeac69542de2cce98e7eb4c7cbedb2ac4027f0c6b2ed97f6ed0cd695bf01401fe60f4e3f7970551b40e75b35906253cbe793fe53e3dfd708d00537e43db794f9a3a0d8d21b3d7990f9d0a8febfe95602605385008326c36b280f1fb014a51987eeceb907643dc84d993e874a8e9a8d03b533d61bb25231ad4ea50c0d76137eb15c0cc334ec2627a167f52a559b4e3fc2e24eca3f6a659cffd3a6e13f1b038b36795e87239e16d2d1273eeb79e8ba717721b5075437e4480683428caba36cd02f8dbc31c3d4ec0251df80722a30c4ea92bbc93fa9e610b68e85b2cb407fe7021e4076c3410121d3c247462a0905035b23a257a99e43a2da6f6d079fd79a80dc2d4793506472ca90efd64e20a60ff5861c6ebcd2c350c96daa0a0aafb89bef77f0725d31566b1a78b5827bcce1b454d348240cf8f7fa70f9cd080ccc71651ded194f7ad7469c57d1b0b85673f76dec8b2a9e49c5065033fd76c7a80854585b59d2a8732b7b23c5d432fa0a0d894f9b966b8a40c98d39ff246bb47e0c7c19fcae72935c8d81b1aa63b4f2a870000c4cec1b97af5745e3fe26a783e88c3ee1bb0a4773500eb30b2dffcf4e7b3c6e6fe5ebae46aa65e82ebe9e22e3a322b0a0ec4449bdf05a5f01f37c9b51e862ff2c7a3f8963cea6bbb02163024126bf1e7aaed5fdcae18a7cbfcb82bdb3eee524f64bee6f8e850b029e470cd467e94f19db9f4dd82555556d323212559a3102132014ff25725c8cb8216a3f6733cc66cd0c9c69fa6c8d13704efd36000a9357c95731bbb4946dfb24d37ca392621c963040015661940f0b86f701192a6c68144642b7e8d60fea01f73aa4545f78107833d692639601d604b198fa3abfea0f4401769d062030c4630447892a3ae83a8225c105ca63ae3a9e58e4fab4eea7fb593ad7c5dffd5e6181bf55afec6675e623b22a961e46453bfe488391f808fefdea781ab9860574aab8c5a91c4ad6e6dfc123ae5da9717a50976217de937f4ec9f0be6ddbe80a90c47a3d9a5fe5a5d07dcc01dc3904ae7870619f1112d3127ca133ef6c924362c9059f130c178eaa4fb36c8d8d5f4d890d52c7f227e580657d366293f3706187bb53ce8a315f096e36054bab16a2a5f8f86888d9de5ef564d7c7f4f2a6a1fbcbffebf9939ebeb351de64db9ab321590650c7ce04a0dac1d8e9ded9d007d2efb400bb458e06f16f3516723044e8a43bc061c9359bcab0ec23a22514f49300f97bee403fdd9bafd46767afc8bc4719975eff0afd27b5eec4c666148976f69949bd95beb18f5d065ad7fd990478deb92d0528facefd3b7211ad11c82e88ca9c01fb604a630950133816d1e312246a4c609ec0245a274b1f47fee3891f82e8c2033fbe8ab3f9ec26fe59db97d24bc75e5e3e8f991eb186431c5a0ceb1c6a6b5e2b6dfb9daeff1d626a8e0d0f9517b096591755d23e49cbea75af8abbb4a1dfc19e1c35ef1b1f620a1515bbdc525694179fa6c067880139a8e8ce65561a65f693f697c349038f1324defbfd519d2c62f842e341a2231a4b12a8a44d1d18128d9118760bc7934fda3c2d0cb45033222fe21eed654e1b046f704a5b1bc8ea372f4f742ab4ade4769a034fb2b41e0f3b2ee8323bb0d85363e451e5efbf197433fcfe84ea31e09e3b255ccffbc4c8f48cd3401a361a6cf31448ada6c732a9988463da5e603f305d1c3021410a28bd127991d92025410ce5f90dca6d05c13e460feef0294fe03e4f8816667d1b71152520c85bcb4579903c61c6468af0faf2a8f293671c26caf1f04a9e759ac15e8a3c809e0320f0c9c7597e49f6c4782ba38d5419c3631f234a64c03223f51936955f8a4207225ad53baaa775e236c454c467a2d80b028a6f7ef976601589fc218860ee840e850b47a260102f66d70ad50215d9d62c1671657111156458922dd89b5568e1b01e2e04d96285f46871c2b4fec85e221eb1fb78025a0517eee6ce58f7d6620ace4c00b6800094969f3e356e9b729d7d90ea9958b2a3f90b7f9c00d842facc797347252dae400d7b1892034a0eef00308d9c58454f56e6d48f59b22b3e69067694d542da3a7e783603567f09226af7e278b3bc2c9941996cf91d7d49b3237e47a1b7b30f13586bb0b0cbb0b3f4d19d88d7a8214b0fba276cbb609f2021648ab9b2e6384ac8a7f395741dde6810b5e5b9d43562e04b571b084606edb1eced617d4513f02dde86a3fbc1d9e6077c4378e93f63b62eb8b3cfd0716237fc973acc37cc4c1f9edc52dd1b7be337b5bcee9a6aaedd6c69370f299014472104e4e5e445db0e11742868e1b8ac552c4b47e53d679257b4b956b6b8b6608d21c1c45043fa4841633a756d9e1cff05a75deb649cbc24b75a980aa8278fff3cf609df260a9cd9caeac050eee9647f7b789e3594136a3f10021a0918ac182882f863f919223ce90e8c52a4d53eb0c391199cd259df211d33998a6be69db7b690500402325ce2c9d68dba82a38765f3d18a60e635e1e4d67096f421e2af524d0f379de991ed29715e566dc2d9a77b2bbd174648755f414c6c5468bb6ec5e052bffbc39589263b9c6bcfc24f82c228f6d1ddcc2f2d2337db7b19f6c106a83ee7721cd76547b67281eb7001ce0c1636642254f37a154e6f1eed444862dfb50e9461e592c4ae411ddbbf88e5915c8d608891323d70ae2e257ca42a1f963a4fc67d5f117a2f0421ec9e8ede144f29354a915bcedbdb35242905b85d32f2559461296e4de0ee78d5201fd18df896ecd244b7641a55caf7a4b42a39adf1ecef6a37e99c6e9bc12d3ce540a35343507e93ce0bbccab8b6554c0ab3cc94deb6d10280c0c05516492eee53d4f88836371a5e9b0df812c2bce0a4c17bdefe2ba567f870136e82ffd670174dd3054f773f8dad2f72969352eee972ef40f72e5b5f81519b15807d4f520718069e2da6b0c2acf3f24b66b4c931ccf2195f7f60484f351c55d127b1541e663682fb59ab18069d03a0bab1dbb7c5961126d1f84088e6ea89b0b80b7e1018ad73024dd03ddba32296c7c256d716a072a1406eb58a006c7c87b707ee3fb674a0283b7daaa097cdd2850bcb274b8890b85d1b09f8d065875d79a6c7c56ea377145158254f215c7e04fa0d49e4068abca587c41cc22c29b1bce249de7a89bf9afa5c622acd5251dc8adfdddfaae27be9ac5a73d3e4687625569dab3f557b24cf3d8ff5607f9553c2a3620ea32aa4f5474287b5def53645c04d057b99f8c7f89bf21c91e274c36fd63b2c11a7e46ff8b4720a354d613a115bafb1956462874ed17548a3782b60815e8ee9503559df4eb360d428ebaf8050dea89d020685fa28b1f7e5462c0091f09ddd8a0f53fa590dc9cc89a87e9170be421a07c70b06170014d8ec61ad368befefbbbccda745e660f7d52b91ef3250d7833b2a1b72f25edd5275414ee001a046654b800b849123985d662c241e105b54e1b659fca42342ea8fcff54c11a95577cfdce3ea4156fa24ed268eb4af4f7b28f4e240250a4733660de3bb7c1da17dd586f994e81580e452464c23be5d7c25cee6e8aee24a101ab2c5605fc4a735e1d57a9cf3878b1c2d8cc27f079ebebe65a9d0fa1f2c9cf7a5a5537f7ccc3ea25cb43c4472060cbb80209301cb83ebf0c0a1f7228feb50f146321395c9cf5af183fbff4f6e7d59be7e67da4f5b4918474700c7cae556d1bb7619b6b46379ff369ab8ad52bd4abe0da423e5eaa1e06a8f1c68f8fd3cf549768e732737df48997becbcaef24414e1b66b6eb56f1794c22db82474bf6fea7e4563ea580600cf4255df4387b2ca3eae3d2815a03316534e25d8d1ff09673b2a33c5785aaf54648da831ce60eb7f9d25ddbcd26911669a58a72638b6e1680ec888fd7b5558dacc301c19454d254d066fa693f645e5e1561accfb5bf2333b0c1b76dd19401dbc4920db2031f7014579d22afd7220520c87b7b39685442d14a004d401325a51e6a1c6787b6ad93317103cc1dfd98876df0c0c4c9b261ffd72ff5976c24cd651c01b6e9b2e16d0ec7b7d061f9cec0c05ae8aa8084174c9526560de94201b3ea22e557daa86c162a72c123e7f7658bb475ae12d2f0af1f2a22d0eba9060ac13dfb0b15fec8d7a85384db40d97cf8ffaf535ac3c91f008d111c0aa0cf3b107d50f68032d2884318e7cfb5f8ded417fa49f9d4dfc220c4ad49fdba36e16895c176a83a956ad7a7e8fb0aa6aa7c492e3eb330fe451b707cb00a24648fcdf20cd72dbd3b41bbc6347684a0a3aab6bd0e76998e969fc158a0a75891989f92bdff2b09e0db6b3ea44e7cf22063b939bbe7e28435f131ed2ae696461fa7e6a937f8e1b4bb9bb39d3a5b8c22a0238bcf9292b45aba3cefbf583793a7452bfb8d17cf1ab374d664850387fcd95d7644e348f2e666984b6b6554d49e1457130528d5e341374457f439f2ac2f86f8c9bb14e4d277ff257d84311b96030aa43f7e4327e29ec5deeeac8a135181a4d00bc9a327d521c904821552317ddae6eadb5e543ff7d7d0e73d25d75bfc4dc84eb876ed2dede451f0ad0013cb454f76ca4cc175df7dd7680758ab15d0a312aef06f4fb3688995416924e7b02c3d4194f7973aa8d4ccf2c2c635a74c80bd7100e3f4226ef7ca9924ef069007e1ea8d9daf749191bb896cb8e8bceaca34b34061af87f8b5558fe06dbc96d8778ee1311fc7bf94a1eab5a5ac9a0075678fa3dd5ace5c33a8ae2456df289d187e4d3fd60d02df0f20268b770c02bdd503638d8828544ff7e74f8266fbca78377fa071874347bf98f4b7d6b7d5809a2a0b12d26719234c966b7750c5ca132b09b872f62a5aa1f250d58bb1f75234cc21a5b54ee72e5dc639a0474434610ee4edd713e62f3ef58e067acf374e76ac14d0f8ef6cc1056432dd50f740017e3802b411f4e5a439aaa33d638991940ab7515fe9b5e6de90b14636485def002d2ab3e4d056cf931b6890abb9f2ea48eda8a406fb7c45ad329910fd623550e4df251fa84a31f0a4396227bd79b91071652de0a59426dff678d8c6d989fda61d700935c1b62fb8000d67311e49af3910874905b990cee04d4647a424892b1647dea2ed85a6386182ae3b7caa3765dca2f943e5b1937d6c3250e990ee2d4766f1dcb007c54df7cdf3425b71d329b1473bf228e85b318a5ca7641714964010f6019d0e01530530313b21c5274c89863058fce05f5890a275ff07801bf186749d05e7a5b400d1574b74a9e85e4b31ad6583018bebf71bbb67077653807e5b87da1a303397a31039e3bafc14b51dfe85639e9400826a4b10a7866e2914d8ad7075dac048daa88d232e86aaaa7b94a49ba517555862ec3a90eb75b8ae17e16f322f32acb59378d6aeab544fb10b3c40b06278ec1ca4c4d665338488e2c3b25c9dc56d4ab7c1966eb0110939af2a7580257d87ad74593368111705a9198ca43452b8beaef1c3b9222c0160e3bbc3d1ffa9d2100b9f00d421aaf9d16cd6b346322fdc574b39e71698d278a4c7dce66398313dbffefb482754d6a66767959cc562ecf11d4f3ad7abf33a034b14d1b955eff833fe7a73c950ba16136a611f84d53838d039bdd88396f2d89af88b4f256f3088d2ee3bbd07511380b8f917b727d3a9d5478db17a28c8374d433323c97b3951bf1415ff982e50eda6237d35c31a246fcb6aa8cf77233279c8d049fb6f14858e0ee01a7040e7c0d9b7e2835686c459da53e87a0b6933baa4ad8cf0727da2768bf21100b3562ac6ca841491f05f12da0410a0635fbf74bbe03669fa03f6ba022f87979d5a2edabcc8f3255f0bade8d14a3a461c328c3c1d50ef0c170485f5a922c45d11f74ba0086b419a3be6377fffeb8f799af273d8f25083546da1cf4f1947fdbdb6d6faac926db397a7672eee58d8a06a6f8333087f9f00432939cfdb739992b1e6a73d922170fb7145ed83193180048c423c740a4ebfd4325d29d264d1b6f545ba55fd3baebb17fcde5cd9c07d7b55c72f3e40b98a55d542e1ba782bb3b8af71cac3aa48cd8d71a578b927ea55771c85a4277f92784f734a53a4df0df08fc0c6cf6556b681d7399263a6a178dc951c74aea5dd1a169e8457f583ea3db7a31a11c121f42bb61a3c60425ebd239ce6a0a54c0bbccbe6f798f197aa7fe2ca0cb1aae4208e5933904998b572eb3ffb91dafa75504ed698e12fefd6b1d006d9f27f635dc84a78d15adc819f7464de1aa1221784d1d1fe2144101b79e419b857eeb99252c9ff4182f2ec8ef866ba6326efb1c8afc70dfa263f5834187e2409cd2abb14904969c274f8f39299ceba8a099466d68748eb309cfe57e2bc3bb9764ddf7867e4baafd951b7fc2c30eadcbe45ebb3dfcfc9f788efbc97b92564c5729c77ef0a109e1105513616f88474fcf9625196bad6e28c2990088f63240f0b5dfd6d1a4669c0130d1b366cdd66b3efc59b9c532e75c780ba8d21ec12b6ca0b60c44f7bba5e7dd7e77a0ca0efc2882f9c7f1abafba4364f8ad77e34c3bbaab32a43fc88661230121d1db8639db47a0673fa7538b85bc58ad82d949512025a1ed70caae3b430739273cd58722e178b9a6bf8bb950f1e3ba5f8642b195e203454a30df9ff9c21f4b2ea9b3cd78b64a60a0214f7a3fee2897f08de9cafa26bedfa7493901e26edbd2e64b721824ee144fa4a9b6cfe376e15074aa52bc1b3c5ceb062fa2ca8987325ddff8c908eda51daa854cc8bc1c99fd14bc82e0ff2e36339d49e38bab98c4fbcea891b49dfbac9928da54d5e760661be57c9f18d3656cd02f67cc18e12e6a1e3e6acc34806afdf1ed68f6bdf9c86c6dafacb4713f305ffa69c9d3b0a75f871de669f6563cd059e0e72c6d9d396a1257b1b87827d585ca05b20efe4cc3a7b7c257162d6e4ab77be4d99e2f09b47da249167dc2a9a5b271e94473775e777c07ac927ef93f7e5bba387f0ce5e3f3cfcbe78b3259e694374c7ec983b2476a0f3f0d4d23f85ef100aba7f344e3a6bf4296004946c3f007fac8b5371327bd48727db42694d03a7b84e78a23d1d8700b3241ec6295a4ae2612a86496ded66d687d8e0769f289a81cd6aad6bddd03b2401c3cd3c6b77a52b142474e8dbc0bfe75023e8a349d6de92b5b4b6f20d829600c763bec249084fd14207419cd1a2d98f2ea1e4451d42b58d58358f806c05d0d3bfe0ab30baa966aba66a911d1469d20e5849273b1f1f1b9258a8f220e7918440d9e6d13741cf2f94bde9b236062e52e41a1256d3bd932786a150a0e3827773aa163497e703f9405db4ca8e36c69d2ab22b40b0037e641a6d27e771cfa1a8cf54e66f0eb158a096afa2fb00f25911929e3be5f5b3676758cd72e08020ff4c766c1f2361e9178317046a74892d9ccea5d5d65edf525e16410e134c1de86498d65d45b8707271a20bb95a0c72651afa3298560676af4438bddfc5260d4b46c6a809dfc6b1592f83116b44d736bcf5277533c45a5ae2138ee00387559816bc0af22ac4356d644f23296bec84f4fb3988c1ff72563e0956170bf43fe09c766c618159756188f2998d1dcff3fd7774580ee25922da1e89753cc315a1df7195ada0cca3638dbaa1a7e9e93c630afd7bf62fcc396955e0cf4c08a11dbc066acd39886495b14b4f2be266c03eba530d01f873b17f2f58c5f592d53f015c2f0158c6b559be2ef0601d41e9afcc2561477a80fad0e24ca6f350e10f3b8ad20c57ac8ad8cbdc59c9fd6e7582eef17fe5ad8d628e110d2291f48beb793ff78fea04f6810e0b8435dcc07f04d762c97a744fd4c71a9c75c817fc353715e31edb017dd91170c2a963acd817ae613e793db650630e6e6db29804524e8bbcf26ed405bfb1d926d4edcb8202add33e60321fcad0c7175c575c5dd5758837805c4186a6b9a1be2e2ed5c33c8a1e2048dc7d4be15e855e3948c85d30c15c0d26153f9cd36d544f47e62ccaa8a41ee1e7ef52d9bcebdef0e8410622ae5ebed10d4fb3a139bf330085c9dc02db81ce9205c8d8446e87e9531e878372e6d62df7e6fe8d7f1840b82c0a727873428b1317a2acb63bdb436d84259ceb69d6628731b6dfefbf345c2c211c87b70aeec3ee5365206de5da3a9897abd12d6d1df162fb9c7e6d0b75fcd9f10d1daf3220d0ca93baa83da548128c1227fcbc1a81b0545809e77ab6c3ececa508795c196e84699cf7a5029ef579cb8e9a823c91b58cd72b554176a771b0dfd4859fc2e8f46be7c3918693f8dfc3e2fa192f6e1104d536e936b2905afab5b7b3f10a05296ffe69f58a7da585019c3ba8cc1babd8b42f863de3054a0763506eb7b618b808201ec444c27fc8531f3d3dfb8cd6bd147c234f84909521cf39b3aae51a504d031fd4fbb5973d938ebeefb50b080e0d8c18b358b95e6a47251e4cb378a0b3ec659b6d48c410021c66dc28ccc528ccf8d97a259f7232b1b389df2d840e95b82eb0b74b5df7821a3226b7b8dfeb8b551da4d568078a07271fcdb028d74ac6985ab94e673bee2107d990c3f6b6e11e2b216714feb41208e5f0a74aea913c6e360e68caa9d1e9e0aedad88c2505b93afa9a51a4fa2619ec860a83f0a4c791deb6833d05531eef1c1341e52fd38ffa91090aee3f0caa45c3a4af89f82dbf96fa71b9132c29152224e476866439469eae0daeaf19a450d3ea08cbbfe659d2dbeb768b78c0c4d6c24f575045a6ed83c5c02242342a0efa72e915c68f53da3ae6f1d406b18ba14eecd47826ea323c1402fd91d31a4ade3571d8847c8c3573e05c4bc9759341e0ed1a5cd1e6d67abe11060f64a514f3a844f7ee8d863fccf964b8a49cbcdd21473d1ce628982e443664d102353075feadb80385fd19c37762eaf852d062c6a490828f03081047c35089cec42960804cc16b280793015d6b00cc55a9131714e1ab222ad295f7def424b6b4eb71c7b960eaa67beba38453b4e2f875887c0109a9a3b9c4dac172379b91763b6cb77f9984b2226f74636041b78da349ffb06eba63539d1b8342a3d68078c11e60b1a354de536d1369d844b8417864dfff3a516828dd44078036916dbd31c940522b9482579923266a9d2f791e1faeafd8ea03579e107a69535fb0d7cc8f97609c7204b212c5d55832f424a3e5f9ee615a1767801a9a92a876998bd156f96a9a6feb6d8638569a92a494b38e7bb533dbeefc32883d7a36b2072e41986d61389257286cff28e2edeebdec562c5d780ab1b504f6294d2c76df77bd1083561aa1fce7d5efa308e763fbc007f610cbcd02d6fc12fd043e2154bb6fd2963e09689cd9d184dcb8f8a58f260c4eb5189a4ddb953210d2eec2c2068fe0b4623f3b2a8566d2539cee8984dd0e56f99028ccaca0c88d24a0ed917f859df01bae0a92a356e314035be01c35d3b950ea4a957d4fcfd6960593cacdef1d7881ef2d3e65b700f58ef968ee232699eaa5ecb9f432a57c8c6dfb6d844c952761f6be3c437b16e792f70ca253bcccf2f405bcc65b7630a4524ca973ff00f5dd7c806e76d8d820a8ac2ebf7992a4fc9db039b4761159429f872bfe86ecc41bff040e4c649c7bab36a4bf7c07f5a0a63096c7cd15d5c3dfcf748a52970859c33534d39ba7679907060bee598d7e8dc73369ec13ddd35b4d9cd84a28a813ca8640c9b0e06b90bc3d0c1f9730b7ab6222fe79ef2c7a16efcb50f0fb63819334ec32388183b8ed88d2dacb4cde59966c76eba87712c0c21784aea5a273a016728c1e27559516436ad96cd1e416a1f6188449f0f36ddba3bd28a7209f4bba2fbc1bf987d8403d67dbca6db825d58a2569c59b4eaccdf3ad8338d7fda4b6be9c65270754209c2dd2e385fb3d3238e19d8396c822734ee4bcea3a502e926f8b5c059e10fe575be01da4c7db2090a6bf0026e674f747fdc1e74848479bc505d074effa3478c6a567b294c8e4d967f2e0f213eda98ed0e18a6a1fb925cae4b28c1608fc7d998fa397ff3dc0d9e6cd6aa6493ab699c7030b2a9b60cd49a5e7ca5546f4fa8998b402147af0fa2d4dea93182144b484953fa09b4d449674ec9066c4429eeb0ee49e82cd7dd0e38a0d4c7d79be760b91f4a6049aa34af67ec79b13bf77ace560c47d4a16f53df61711e40e8622d559de6cca40780ddf8df820ec7e2d75365369297d014b6cae87880add7cd9d682f67ad1f243fa4c86a1e5549915c890d4e839dc916c80e8bab27e7e7376feefc6be70415005763301e642aa1fdb616bd1441e5c1c1687e9d5fce97ab2040cb467383fef48075a2bb66761bbf716a201d6484efdf9ef61e2ead430f27a48f15d54b5b4018b9ebd0c1cfe38114e32408c94eeb34de6940f37b3626af5c2b6bebef8bb35ac4b0e73674e912902d67f017cd44c104465b9817ddf8027020261c1a047c3ec1e94a77c93370ba514bb6af96f6753faad534ccc46fabe4bdf6e8dd37b5d45110cd9e1bf92ebce71497edf900c94ade40b3dbaed61563e5ddce9be8301ee4f87d017807d9cb886b44b573405f422a09aea9541e51a2b0916ca74557de12143baddadacfb862b16a269aa9e1cfba42075f502f9e6a71967160a07354d72a59686372c8655cb6f3b1bf049274bad984012d551c36fe00538eeea1a1826074a1421cd3d237643c91bf53f740e796b30c83edff5a6b657e3461d1697428bf45850d5418ae866245b72d24c70b2ff28393f5426612b2304c63bf8f7a0a1cd988186f7e6788f35c2552f5c1566a37991e49669d3ce5ab5c9d2be631170ae57045e2c7671a296d99882701a39b32aa9b61fd8c512f78dd2a76ea13df0495a4b77e50267219d01c9158c9d645dc0ebe48f0281829d7188a29089faf47b7c6176aa521212ea01fc1ce37a9befd3e17ae690265b57c4ba35a067114a743b78b727215f8e5bb0105ceddba05e1a018d5f7b9ac18ac444e355eb9f34b50db12f84abc03d8baaadb04b793f5ab0232226ce4ba47cfb5726ecb8d88d26be38fa89e6b60533a87b0399f77d23186b5fa9189193bb193a57917e378bfa6922b01a7e64e5d5b8f858ff68f2da864c4a774e8428c31fc560b9fe56570abc9970a0cb2e88da22a9de7602ec99e2ca286bc88ce96191bb6aa43911377d8156c35aa72779ea88f45754046804ab544679065bc09e6521926b4d0a457723017eee31841e4f5a281a9bddf211d2d8013dbb6fdf2c1bcd6a0b2465be3f0a64d9cfa2f4905b39c5728d26239764bbfacd0e646e748a5516ff7df0644110affc0e8d90954e8672263e8c387abf62dd43a9559af788c96826a9938751fc5652fda87af2c9ac53e72519376b44426358ebdba0bc74bbf7a2954ae6b9f254a17b4ab8b93a71913561264d09521345e05728db5114c029954c2a7c2142c7203acd4f70e71895c594bfa48d87c6711e105f3121b77937fa4e4e75661bf5acb82faa1e8aa3eacb748cac64887a420978a9a17d8ccd4a500bdff73610f9275f162f9b4b767b42e84dab549e6f953c491698ca8e65d833cfca7129d2a7e88b14259aff897157259ee4db584d9f33a226ed636f80196d61a1923e4ff51cfef7b3ecf1059fe7a3bbafb14804ebb27344b3aaac3fe433590916096469bb3d0212d4be64617c791a587071b563e27e60bdb1db83c11182e0e6881bb01ffbd665b0bc9fb2a8c3cac1806a759ea271eff81b92c938a8c454e3edb47482a4e77d1588e77027b6ea97bc5f397ff8c6d47aa3ea1532a5bb4b50e90333033dceb7e9bc7c188a47755cb74c71194998e60baf230e5434a28cd82fee6c6c8338338b7a2e4e1dd222f07faeefe9611fd729292dafb3a93ff801398ecba7811d9bb744704e53873ad69aea2942e7afa1633ebff0b933f7ae04921f2e106f0742eba42b1fcba6addff4e212416b256ba8e77aa6e0190c3bd23ad253955ad437e031f44419ce696f964dbaacfd70a5e7a2d29b4d68e69b57daf36afd2871d0d1fb70956e8504c249cf9073115d48945c937f0c0f3b04ddaab5692dad61e1d993040a0d572c6802d21ea97698dfcd9cc1e4cf1850d341586e10f53a67d7b782a0eba202d8fdf0e765c0c04568214e298f8f9bdad008f5fe63b9b9398168a5dfdef2c3a32d8b632b7de5164ea365a1fedf83a83b97b98b56666fa0b8a1e1f4e13c24126763858c6f8d5c857400b4aa18b7596fd7d1975ef65fa5e369856b068c1c71178d62f1b8f821d4424edf00c79a9a80cc07511555d37b27cbb3ac406ea779041f09b2fe4bd49e4e1902e4bdb6d55b6afd2b868e292e1ad616ac7313bef1e935f7d749303791bd9941661be316f2c14c4502c09b772d0f4b259a69f3db6c6075239ee2cbfc557991f98af95af268f913af8e2bb105850ab9dcf9039e889f6b1d36086d9eeb745fdec5405e27d186fcb2eb96357ab5791259c6ebb9ce94040c44a597e7767543b84595ab9894d170834d8769a9b8408ae44f8134508a35ab0af4ccc53f3425295af2087eacf49add07e8e79553f3e9c742da0b704895c871a7643721d33d471d9c638b88755f73c4c19217d200a1d696f25309b8f9301d12d22e071054f368c5fe5b2cf2e9f662446d0ede5047c4b754791be7aed2332c384781bbcb9b90c362169c8702508d9d10261604348f46e9f04c4ad8dca7237ba1d0f90a77af06e835f0f32d874c3b75bf91805c5df71a652e6d85cb614a718d29e860a2808d9db8bc544ea4975379439828577aa23706bcaa0823dd20198f370b2325d11b5f07107756ac1aeb6b72027cc4674a24144d2b7326394917bf078797c8796de568c1778a845ffde147c87f0b344cedfcd0c06272379f53fe3a9a36d7401fda5ec5f94a480e2197a5c459538ec8fce0d18d07f3d6f886daefe129c86b2b872e9d7f9019707b7c4d5c06a10913c0aaa9062f0ac5d888c1ad01c73ac32896557bf85e034a24ae5a9786c7f89e99cdea0d4af28d2f8768ea78ed4081ded79ce0a82bb6ee4220eb9915d79564a86c7168217753af1978d9e96ba464dca59ffa415169f88729db20cbc42d09d5cbffe6950caf7c034550f0c13b1894ff9dc4a620ec5e14a5097db737672508e858707859f21ec2518e84ae3fb1ecd0d184916514d5025626090070981b3f7a585d11ce93cd5a3bb581320a5126d23c14520f8a559ef93e87f2b280a8ca89d916948d1e04feb0bede47fe0a9e5780cb9969e0feee62187eb120e1d5a68e02d1fb25c052fe0c9f5d18dd8c0268db0d093a0abb072c7b284589b9746d75d29ccd5bc2b6692fa86d4d116b4cb5cfba8a02c39108896a31b590b672f7e183803287500d399b0f1b040d3f31155677f033806c2812d9380cdae60704e40c80d17353984376111e62d0d864bfd92850ddc60a1fcdcbb41553e69cafef2cc0a55569d2b4ab010143bfc9afa8ac8d44e1f5216ad450523f54bc981c98928ee816cf9e27dd372b9998ca603a12651a8f42976c78e4e36b1ea1c9fa7749764ac23515a15e5219fad0b7a82d011427301e3d703f6230c2b2c15c095f9b0e78a023c1e28cce1eee7151c0e139a30cdf4a12cf1ff7be5bfc4707a89d3733fb849fe0ce7590421984847feff9dfadfe3e777cc699003a2601ef171a75317e0ecdc2bd53c3df6582c1f410b38e088e135b1295d817ddc26f98e4296cb0b57c64d980c85e81f90c3d1ffeaebcdac0e1c3edf33e24da7141722c477ec1dd75b12f4c1a62e6421ee2b96ef71554b593766edbafe1fc84cff09846894bd6f581948d6e874849537b7982145db06b8bd3d3a99e87e596e941a258838885c769c6f045e63a3952df849d75783dd41b6414966e0296c2f44de1d7299e26e81320d30b55cedf0ea75d02d9dfc9483b1e7d51e5f9c485ba9820912a1353da24a1ca4ad3e69174cf7e41efea6736155640fb5bb6e84ac418bf4396fff3c33eded0a218c59ca16ff740b4cec8d3772d92d68576e8cf125b74c59c171ae1132837d1cd9941caec4524c1cddd5c837994c7571eefbd72c81ad8762cb8b96b96c7d258ba3e2e43413cf1e7d7af5ee7eed00324f562e2833ae4ac3b84ddcd6dbd430be3231db80d829bad2905e9c80b1a7697643f252d1dfc3c5d9481da4bfdf13eb11c0e9e258eddb45febc9f95607f768d7e4d74d048c19e2c889e2fe7531a4d22f8ad9cd110b40795cc8d5f7ced04beaaba0d7cb8152fa60be98cabf74cbcc2e3d9372e87b690712a74017d4db1187cf1c6400c12c54d5d48bfe44f678c83e76577132dbdb2baf6d16291b9c4a70b0b293c0040a9d040c494f39eb9851e052e165f9911de315ef9fab0a42bc3fe0aa926b3653ef28512a9ddc83555de6b86e48ed506c5e5fb56018630d5663431753b6e58a3e4e974dec76da82baf0f1039575f45e979753646a1a19f79fefd178693d5ca2ca932d90a2bdbcae9de9be982b40d5116c14e1aa21c2b2284b1ccbf1db3702d9b807ebc377ffc933341c9a5ac340842a10eacae9b5e5c6fabfa9addf54d6616f4fa0a6eb87763fe477ffde9629eabd759a50eb974d7c491466cb83f66efce5142a2934c1908e45953595172a937c67d9b766ba88b15853d48a920c9479bf7ab045af1c229fa546c3f7a096ddb2b5bb7d55f448476263926c08fcf783dbdf843cce16607b55f981a288d119120a903abdb32cd8f3da438b6ebe33b0a2852ce6442a926d05603d592b7d7f23780786a70320c257223b7ed897b8097298976889934e3aaf51d95fd1b6ca61f9be5fd8ef71ed7279b92b2706e7f68bd06ff0b6255c95381a6f3a8afbe7afbae8d37732ca4a76a2883e98de4525ebb507978022c9c756702664adaf9a9353c18776e2622a9f592182d48b0271ed6e3a7a264f03057267e2524ee013a9d24f3863ddc5480763af0c7126f8236c0962bf96242cc11502d38e5beac2d47e2480604e19d83f3a5cebcaa7f4b48d5d682242a38f75ee22b379f57f756993375b9d1a02ead22aa15dfb596b36634d6a48af31ac932255aec659034d518ba6d4b92470adf99ab27f3511e6613042ed2f3df36a0e2c72e235b3da2549ce753cf7e51601d5570cbd0e9b3a54a3b4998d73aabb497cceaff3d839fb1e7efdeb298ef1b6fe3a329552866934b455ea33244242262a7caa883de15fd245157fa2d856047a5ee70a2f1a6623e2448a2e50a61cb491908325e6290b94ec5c0718faa6be506dff86a1ae7bfce0d17bce7dd641961557179b96317b0a6ea4d6772b9898975c908df754c12e586612a5b9e80bb9abcad626384940b7d30ab546e4703cd5d5afe630536b6035edf33c55204502c7a850737b68c65ea2f9016223a462ecf25ee9a4162d299e4d59c69038ce89aab23f49ad55a0784140821fa71a2674fc5ebfb315f36d7bb5f47ec58b09fd96b3c0989923c9dfea08857263b0f77a3502a7373d3d565e58219d19210923f2c8bdca94a760dc2f3d8fe9225e3adb8a00177c2424941c0202b8787005d6cad37522bac2bc92ae61f710ff8d1d0c16137aee328ae1ccda985764e820e791b1d23a1c6810c7dd12f5f7930f84dbfab4e5a5bc49228bf5019b37088ab820f8420ce5e56f1f87ee4ba0f8abc63526f1095e91fd9e022f63e97688a5e5788face77d4b7c04fda2aef71099f8c47b0bb8c90bd3f5446bd22ccfd1a09cac21c48c10884082d2995e0dc6f2dd6c797d179208ff03e55382f1d3df1ed43ab1ff7566df93c1a223c017fecdbf40ad636743268b959f8f42f340ac4e3ac5092796cedd6472d4cdc1e91bb98f831949e04ca33bae560864ae6d2dbc970cc9b49d3b49be929dca366c0b7e400f3193293a655734c4ec6888d8141c80d47059f408aac06d1a2fe368cd2a0340bbd2e43af125a9e5fbef463a6f0676593ecb925a69e5295d4399e16da37f682e5277930017534ea199483d1fa707f112a97533a0cf9b1f6a7e421047786a24b3a1a04494016b7ba021edd1e6d13bfff2f173f428aa895b464ae985cde57c97327b67d80640ccb55bd3d1b9cd65bec90baea5950790dbaaf32d86455668cc320ae5b59b077c7c1d53a2616370a85421b9bb517794b2ccfc49dc43512ca0da4ced6d22e83f225f76a49389e1103942f3f8167ecf5cf33efc79194a33fd446bd5608e341176ae5756ba99515ec64f2c1036fe0c4cb5da41595be20b9c323df028147c34dcc274d69f3db1b842c6805aa111e3a306986261c96cd5478e712009087f37b26bef68b2db032b7901fe69e080cf20d47f347c9cbcbf7b6a61d09cfd43c865f1c3adfb50f93cf8c7b64da85662b414c77525df71f2041d2f2d8adb4a9c380ec30cf4f8c4862cb37540a6c38257bef93578b891b8f2424887d61b5c1eac4df6b75a568c6d819950e7157fb23e24a835b60c9c206f3dea629a9a630be83f412c6b8e52566e70bf4884c3a4028d72bd32b2cefbfa416811f09ed07b5c9fb42b578c7d4ab685de77248fc2e08a3d180446992d411f22eb52f134c20bd730f660a573e044823d166eca61d6807d1f74972d04bbc12f267e91ba5377f9c45d00eeadf30e174a4c6c61438653ccde6c4030583bda84bddae298b0a75bdd60103b703fa1db05c71d37dcced9071040bc3dece9ae07253d804c0facdc1de62aad8ba4b15062e1bf66c07421defb74763c25e2ad5e8aef62d7e76b70115a4dc8bf2a5519364a81338605a14de065173d39afef3e744e15ddc15a96e8d7fd522aa419b6f3d0657df4a8cab61cadaa8ba7b22630d71c639fcc824f3178740a8165acba44dcfbe2ad261b572c5d160f26d6087860f8996f45982a0c7962d24510adaf73317484018e642650c7e17bdfa5c95f267c351f1b95a1165897f54ba6cf748bbf5261242b0aa34b188b040d70a8b19b5d515c82eac763a41e4e72d14471a553af4a9f82106129d3938433a838e00efb3756c9a581c577e91006ba33a83049186bf46d2be2b59643582770a560f53fd629b17685de7da15cd274065ec2c04f3725698cb9b4d8ddaaee9320da9655a20a72e0247adc31fff8f59cf867242588568bf9443a3588bb72cb01df468ec105907db0bb0bd17a822ebdb4ae45308069998d9e535e06eca09a7b635ec913087e94aab1f03f00fcf92014ac2e1d3cb57091f9b0e2ec1ca2f3d07ccca0bb42aecbb06de367a204effad76e55da34fd8f9881916f59f905fd1dc87a40a17d230a092a7f884636c3d4df9dbacb378a3a34a3322e136dd0f124af143cf639e6e4f48cf0ead9db31efcd19a54924d40a89e26a6f8e4c4024cb693efcbf3c53eaa2dd73d0fcee5914b8a3f12c90ae3dbbc4d9770fb797bb9aa3dcd5ee2ee534bd7a25aae8c9715efb8e5afd0a878306c9c7d811645f6f3bee6d41545c88f8927ba2423f4d4ff0a7d9dd4c75d8232a95ec41e81f8bab65c1c14485e333e01ac8c2142062973aec99724e7eee1262b5b88e1a4af6f6627e68fa364b397eb8c058c93e71603ad1fdadb3a969089db424d27b60bee67ecc013ce5b77f55bb42abc3d9187250b0fb6f6741e4e506a38e08341fb34739e0d7c6523e4ac19c47acf9d7e8fc580281f71aa3fab98278ba74c9f7bcd4cdaeb054ce5bdf5ad5323255523ff4a2522fb0bbdbac212cd6304b345801dca05599fe217e65e1c83beaf56dff3b91b0bfc01cc408125eb18d3e90a97631144e9665753e3b7092fe498e13d3b96218cfd61aebfcd535ba616606b8596e4dcf78c4eb14acef4c5ad81991b7957b9370b98c74a802e1d361a97d3d5818ba0c1ebdf1fd9a72170d9820529dec63b5c9282abcfb853e2fdfe06f642473ed634ac6e27ec0a8ed35cb10b5ed64adbb2a76910f68914e2518a465cf2473c718d02d56e77dd39b210736fe7316f7ce4d406bf7610264508c71db94a624b9273a6e93adc664340b261e1eb56f1c4e12f8701197f5b8e5c6b9b289e2e9eb37814520ad88b75db074dd58308bade0d69956d5a3e76756657cf76f6dee02d42a5eca558a93babe8441e7b1dea388e0a05abcb2459b952d4dbd77f671caa3fde658eaa1ea9792ac689d2736278fda2d5fc8aa3bf94e3d908b6405673053d8f63b7b3b93dbdfd4e7411b42b1bd7575b948e0c082e17e1f805f5d5a2183f30d73ff19aefc87c31860b859ae4a3388d3ab99a4a976b1cb71ea75e7d75edf3457a651c7e50d79d852794bdb9920282c013c4c4b5701428bd7a0f11e69e02ef44d190e44138b9d61c555223fafe817712961e1d9138fb892b7d82d1bd54f96c3c0eede63a986652921e7d381b6cf393858f21f839b017185b46d26e6c304e534fca6ecc5ce2924b2fe5c285ab1235ab4df9ff02f540ae9fb07531291d0329686386993f9c10ca0541b7fdf05a58152ac4bb107fea7f67287f69c176ca78b065139614e20375629376bd815768497b4d2528e55dd74920a99a681cf1b7b19bb3295a9d6397ce0bacebf596b5bf2c9272432652ee3080517e16623b0c1187761bf02e03f33b46068fa64925675808a4782b40e37e732fc875173ccae03d7ad7f2ed40b7ab9998c1b26df9d49dabbd958abf67bc693e66962bfda7f5cd0adb525c70a2ab8dd06e99d387ca75151f565332f77e193a81f4b33ed9ae8323c38cbf7e3193602dcf622db8c55ef4a6d8f3205ca75fcb4a06f778ac5d9c489c496e3fc8e6fc751f3d085cfd7d4ff227ec6e0d8cfebce219fd38bd4f399c1a6d9fc80f65a13cbd4f8aa15d8655aaaf2bb7d4892de88de78245fab34e4a1afa44bd01805e374e433d9fb159dd2e158b1a9b3c5646f13d5b6bc2a8e6e340778797211e7fdf83f9b225a0f02922150af30e1dbd63276100b7effae548f3cb4d0e20abc8acd119774ffd2245e9e5a03d80b778ee9de47d87ae22ca715df901d81dced80f9fecc6afc6e5b8a23bc87c5c50c5647b0e45175174ba906b8b9ce79a18f990bfa0e3c67926c240d6e726eac8da94de3f979e42547d1e12b2bc0eede2e32a653373d3649c02cb49292fced1aee26c7b8c918c350c5fa9356bfb48c7ed5611feed39a453404c714974ac26d300437201471de926e40132f5fc2564cccbfa372057e54583e3257624173c641c58117ca664d51eb0a5d3ad4ab6807d66c43525bbea8c98d92f4c51d5da2ac31c0a328db70658183fcd5e2687e1ffc025fb57a134491baf29bb2743dd132f663b93dc0016b299dba4180ec51c16eba268df18cc17623b7f5b8f714032b5dee749ef316e5dc6e8071f53d99e598c442555e4f167d1d7a2d46f46f40a61b896a563a560454a38c72c8dd4e34ef8f23428545961bdd45a9d86df945070b2d10a25c1cea916832fd19f06392afab2aa3de7dcf0102aaa71ed2a1c5fe79e304cb2c1a589400902d5f7d398ad8489ac725e5014b7ced6016c13131be0c6c49176ebe4457a7722563908080e58f806cedd2f9070b251b6442a705efd58136fbc401d9083768140ea95bfbc5965b68eba00874b10f9a6cc195fcec8e5dcf55c13db1860017519e8568c7675ee8f3a752b930d1b2858cacdb39404c55caa14e6a8be87159d67bca33781047d8b217c158ea056c1e4429edacf324a5bfa013443e6f67ac733112db78c623437b971f08a2f4ef3798e3c1eb4c14c09c314cd25c33f3e835d78b81fe306eeb14a77f3793a15ed509b1bf7e6d154fdcbbb0d7cdfe1700080eb837c0c8f18e7c7fd45d36bf3e71c3ed5c66cd01adbd83159dd48550fe73ec7cb2cea1397d0531500eceae5d2aa8f6689110e31f5ff21ae6df31d9064bd8e6b64e2ac0d5050d9dc4b4d47d26ece7780f70e6462ce738fd0667e2ff97c38aaf11d9d8be4d9f311f1d824183908d7f529ffeb6d8bcf94867424640d3ec9a45ab14605752492eadbb1254c4a8ba6ff5c027860377176f7ed38c9cde4bfbb91ecb242726de86557ecdf653f4ce1db834b8277b6b89772e00558d308ad920293e9fb3df337e5ef9f5add6a5effc2b37d8bd80380b720622fa0d00439df742a5dd82c83758a0fceb03216d2b2d0417f2e76072706635771e316a37c39cbf608262a9031c19602a29946bacffabcb1367d991baa5ccdf08c22fbad881028a56a5454a255edca98ff55a2dc4cec41829d44333f9f7ba3a40130d86cd46e4653e38843f86d517d5ee8ab46b672f19b51edfeeefd3c35f77fdade7060998733baf5fd80858df7175032d652581bd2d57b80678996fec1aa3604eb099eb1b88da6666143d164e9f812357f08cd9194f62d385da0db995c61b369759e42e5cf64323f9021f89e303eb39b39237e82609832ee0edb46be5d4ae3cdd22da0a13a8678fcbffb4a01b7408a11633a7b63ac6f29e9bba0f7757b7ffe97d9655f2ae7ef1419e3ed733c0574bf260cbe56286f59ac7e3dbe983f6b2874328363d81a6a8e7ef5409973792b137274e5339f51b410452a1f7545066e98e17539b67aa3e56d7292afc6c2bd00c5db6cbc91d2665080d2bd71a8b03e0c1673c0657a054b16a1112c81a42ccbcd7477ce9e602bda02a17860d20261415e9b65f9ad945d11ab04d7b95c26df85826f3469c57eba812a8edc4947df2325d25977ba47e175446eda504670647825a9c164356ab1603ceb01ef7f66e1791618fc85ff287321f3fa68afd46addf52dc81d74fae92af883c20d71893cafece1528fd7151ddc65638a28704d6dbea12f388b78715a01a3e0c0fd7bc6ce4f0fdd6d4ae798822cef153f31a1281fa96a5ad795e3e102981f64bac7309a6e8eb2f61ee1aa28f1b0d4d80dabce85197fee6e860ae29396366cfa3614dcc6c029edee83f3b296701c326ae8d2b2c67c45dc4a443c4dc6db6130c390da645f4056a1fa51b70a2bf7492813fb4b9ae226be6637226bf37d5ea98fceb42a35ff269a869f489b4c9623c8189b77b79b06bd959ce2b8f3d13426960bc34db19956c2fefd5560d0285b7a37d976ac2d1f2a199280833892aaf13e8074b313f541d0e3bb37571d02e0a679405b678846297b973dc55bf2f83512248f958916f277696d1cce3af4b91de43248a71bf5f96cd1080189355f5c3030f0f7f8f2b903c1ef00d422d2d5a296f9acc90af9889b1cb843318c53dda517b1a6beb9aff50e3b3608bbd8aefe0db29dd0a28a687304d8ee16e557db95b3f6b8a438577899938ca1346f6c2f7b923f684ae439fc8da4e4d297b7ade1a992b511eec466e21e8ec9c2df7ea8e5eae6c036be3f17604294530f5583d40f1b86919a4217e800caf3da1097af89c3a57857796e125aae405d525bc931e03fb4e53ee2ac55db31e349fe6826e87bb7a72975c3bda9853e9c04eefdfb5f12f91e3746f3b1f728ab6cd31e3c7dd96c40a223b2064924c09d585911c4d09e7f360aeeb28fc191bc02c5f0035e7c057bec935f5447c75bb19a606c07c145c4c9306aea42beef6532082b3df292479d15cca83482d1e38eb29dc4ee79a5a74ad3064a0d1bbbfdd9b3191aa047b259cb64c38651af4a6724e705864f2808d2f50cf56055942906eae7579e5865038b2ab12a18b08f0f602d43011a6496122244658230245ccf455641c9d179c92e0e5de7367ff54a6244fd81d3ffa40b18ff2b085e3f173c262c71db333ef628746974c23a4334d9a99ce2a6fab654015c47b8979fe6df102944eca407acc665f876e98fc0fafe542d45e58a590bee96ff6045a0bded932a4fba078e2c56fae4af7bf561a593f16622c72820bb23870c4e948439390d944aa2b89655b66b126c945b9fae5c169bd0c9034444674bdbcda8c20796d3890e083d9835517a3053d250ac06781e2fd9be075bc50be6c5298a10e0675cf634241deed7bda9f01ad8dd67ebe830fb64cef9bc0f0dce180a1e4855481d43abdf3c33be76b85d56fda890d7e611db2dc069a80163dbdc482800bf77a5964025499c9cbd0f426f3d2bd89bad530fd18fa766f1b1e6d1e47dcb0205b546e4d860f20594dc71b4d3358bafff4d94e65be11a9c2bad4b3a1dfb024bfdb7153fef056ee433403bb5d2a51e094651fe7de568aad695bc335d457c6412e87fdce8b8879ffa7cc2524e4213184e1d354cd6575905e6e63a466051696bd063ab08cf4f7d812ef99a6277d51e734a3d24ae60b2cc8c0120284595222b33dc57d761bdd598d40b6299ebf561455d91c69774708fff317b0a31cd39efbb178893377755458cc2e252d709546be1f142d03ff1c201880c33965a351acfafae4837254f55b85bf05c7e382197353febd8a3ef023d04323597a091b579c4777335ac4bc4fc39ec683f2161ea4c937d799625902b3cb0a70767021583ddae6e4b49469402c8968f295e873a06ba2f2ea5441e131b7089f7b17f3044154273502e8d8ef700ac5c0b39270fff4e2f0584c0f6eed69717f54572d685edff5a0440148b6f1d50611ef08b4a86cdf1a5dec8e17f6604268f3d5e6ad2e346277d3a53b4483b0705463d060792e761550739fe0daf1d942da6b3813fa6c7bee2e57971150315ead1cff1bc57371654444133ca107545bb93977162531ba88b45501d76cc711388f69e1ff760fcc0eaf30c02e95b69383d660b0d914ab26dfc1493dba401193a1d30dd1006764457e9c6e5c8f96ad2e882be2e4c9ad840bd092dcfa3366363bdf4a48068aeec95207258e63e7a88431114633f487630ddad617efa87b563219c62f95faaeb08b40021c332b72965a04e9d2737c966b1f8f9265af89adfe8e8da1bb07dbdaa9880f0f2f9a10b04739fc89e734d523ca5abc4258e19cd134b1aaf257e9a9126c2441eed45bf3aa7ac9bb6d7a349ccad40ab0226d15db96f10ef183c9610bd7aeb8cb8dac738dffa7882bef992785faba27386a601ed3fbdaa85055a1ddd55bd0f0874fb0c71bf5918783e9bb1d303e5cbfdc0844401d17d454e219034993d87da39a7fd61c0e9ab5fa187375e3a10de694f08dd066df3a73b9dde32b2223685f61ce3bea270d688b3ab292cd7040a79d3a59141bb5b71c6a752578f79047b0a6464192611a7e204e5b68c7c63339007e0b2991e59a653171271a1524a52dba858ee1156dbfe54ae18aff6819a68aba80b43349c5f984d68b7cc8172c1c50b5604b034ab030b9bf8476e48e26e8b23602ac8a874d4f2d51669cc73ea098d743cecdbb964c426be797033ee129038a2edad8c9d85738b9790132123fe1553563fc1e7a6c0ea8d3e21d5b18bc3ff7b289564ec12369dd4575ef8ba6736b3abb1a214f8e3c9c909e4a370e7ed2994576aad3e79130d48513a2c705ce5050e10582b9ac9f879642bf237449fa6c17341aaddc009496df6cc271c857b9fb8549aeabcc348cec42600f22210df330f2c881b5933d6f3c12a97501ac036ef141782314997cca409b12014d2af198e53eba459220acf6a17055d6600123a0bf0d65f3644737ae95e85cd694913f5c0a92e99644000803ac555f3ed6f97b734297440c8a48027bd8b59380402dae7650239c7ac3f36221f6fef67f8335e799bc6ae8896748e6d8cc073e5082fe0ff275cd7bbfe52fb7dcc66837b48370b1b33a45839b2e1c41a429c5554223d3048636241c101bd8c8b281e8f78de865fae64b27f4960d76f6a1f6c976397c9c3cfab87bb298513960cc8252cf5708c420542863f912b56c5439469355a496c489017ba7969e6be9928add22da73a274dac85c219fc4ca3ac823ac850b458f2ff82e6ef4795d2ee2dbfbb5209438a9360e98167086231b6b918abca5e2e62464a299a0b2d2667b36634046c0570bcfbc33e6c6a98c2d183401bf92edf9f127dab30d29041f710b19d090ac02509fd8bb3d53e9f977e0073ec79a5de6e6f6e429049027006d63170272ded18b861d541948ba580c5201326e6e5b61bdecb63091b9b5e84eaf714cadc7ee7c48331a8a2207f957dca555c5fa897a7bfc8c84307932234add21f2477d14b1122b530c7e1c655b9c322a90fa3ffeb011babc508499eba0145b439e702d4e1183a2dbf95619f0d7e8bbd3c359bed6e2c511a180113827e4c030fe4b778ac8e824e28a8ac8c5706d74656a6c521eeaa97a411d227afaf1eab400bc4ed6edfc38b67ee85553f86567a438fc00c4a8ef4ad41a6e22391dee5434c393b2248acaf9b2c0e3caee659ef9d2c7e33a3bc013406059c8aa1ca8dccd0cedb8717c9caaa2d998e546174f72ff2b5299f0d215cbd55e829c88c6338ea7fac95bddbda11c10fc54213a32d899309bbcb1750296c6770b70a47052aa6d04d21a24fcc9828128c8d5b3c89b1c82d257b91e8c2553cb2f43a18adcb3d3783c9ecaf7f7dfb4eb10982bf211ee0b3dd28a108c136866d225318cc2834b95c1e1d3a43392f4c7608f41e6f49d7f72c92078bb237dd14cbcec70278485080cd2f9a10b509d03d9af33720540ba08da7ce34e41f6a262599a2adccafb0bd67a63f95dbb7f9e7444006b13ea0f454380c6bcd8e3e0ecc4a7d208901ded0f297420da7eede64329fa3ed4671fb3cebb25dcd46b660dc5a9a0a4df438745ba6f9f72c9fadfecdab5f83d8400452790486d58f5e0ea532788578a6585214214250ade923d784ee426007caf9af76629e57132bed0db27a439329679981b7762d3db9e18a3c474890cce43b11aad6a3c9cee0a21b69d99b364f986a6ae878a1f20ed364803420756f7d06fd61b6cbafbb2a386cd626e8c45be48a00e6600c15e8e8d44de76c5ec8423d4820ba4177cad0488c3e47aec51787f4a8fd0f92bdad82abca559553559bb41cd5d8b68e37af8a1b0fd67aadd0eed83e60908e3c29250feec5d1f03d4685a7b9595d896daeae63d106b3c8ee36003f06e0a62b2d446666d62875ab9f032d7d94b33a63cdcd8238a5c509f3639ab1c085e7f9c2452b479de3b2fe4b5d2e104abc34870f108aacf8797a149a230baa74598c971e50f325c35f628d1147c87bbe3e585e632238ce909725f2f957f9dbbabaf9a8b1cae1389108b677b771ebc607d68f0b8af4755c8e134b8daf2177ed3d9f25c7ec4fd038a816e02d41714afffa4cc16b30735f5e2c28763b6cdf6e6b15058ecffa0f2f45b934004a3da26b10857fc416182c31e06a06967daac516b9f75eb826584cf0da5e7e65053b8a4654e505ff588071d5aec3ec05f939272dc9275ed59ebc09e45296972a13c0cb857c09dfee112f8557a2e14d19782f2c731fa7293916c150388492417b6a95cc2bf3dada435455d4c5eaad35c0b89b28428e9bb995928be3ef2781ebb923f0be3048ff72d958db590d8c5ba62f0e9f676091a1355e543f7d68ed4a8d462fc1521f4b8cab60abdbeff41978bbf5d13fb07ec847b1fdd4636c54ce7db0a3e75444caac249f2e57f71f20ee79d07fa70ddf76cfe6b893dcabc75a8808bd921ed963ae981519c89a030b98da7310ec8497ed1e4bcee50dcdb4a233a00d36ea06a9e854e673b93514cc56aa0bcf7b5d999026169aaf25d75cd4dcd57f515a7ab767627fbf39242cc71a1517c10881773f7fdaad5c7887137b93c6dbccce89925f5f33b4868b756a1bb6036d9639b9ba5e4fd3d759e58d11ec683afbb8cb61c70fb5453c4fd0d17003311786398b5e9ccbc0e3ff1963c637076d340f36fb1df3318422cbf220f9e00f03482f6cf6f350f61519c93f7b0a531ed66e54aafde29bec2d31179de882ede5d640e3dbafa3762ecef438db8aa7277b525d6732c48341c20a1ba926e0cd6cec4d6532b90304b74e2ba21743a28f129c3059960837cc7eb9a925621b433412312a5b7624dd4e1bf7cbbf39d5dc9d253ac51282852796b8a6c16a5bf8d94927506c0aea4923324849b9b7b40d6bc82917bd06aaff1a185891b265aa341b92130dc65546457a2abad0b0de224332e08bcee2659e5c72a065ccd10a3b20889df4c001411f9448d98e39c0b8c39f4ecc3f2ce9f7cab85431e80a435911a9d610ea124fb8152fda1e76065bb0537ad6133e7c7b8a66099e0d18e0edcf98ee21ab0c24878b9929419c2b09c2f6d536236ac02f4ac93c574cd1190611f76e2c1ff7b92f3d3ebf1dc6df68c77fd83130902a343ebccbc3aead53e6cb972beea0a7ae2352d3c72af72362407e5ab5fbca71b815cca5b538c0eeec8a035ad8a52d184bec9c06132bdcd2c8648634ebba41162fa9b345b3cd736e182e2b3b0cde81926e904736eacf167bf5b5b38a20a4652f51e8f74efaa6961912064c6d6d34ba2c801523a26b36089ae6604d3d41480b211b6c1f944ee16bdd31b5a2fa9d6508940fb7a741eecae843a3730a538575ac3ccd9447ff509ceb4253ae7bc68afdc51508b517a8ec659fa42cc7672066c128f3aa1defbbf7e655cf04ad6bcc6b17029fe0effb2cd0c70deea285193565376ba628e2cb25ad7cf020bdafa937d6b7103ca988feb69046a96d86814383c342318c14c9d04b2d60949d31993cfc8880cdc01351a7deb8af3fe6f366dec40f328e4eab9cd636301bfacf3bbe3ca546a0e573126eb262fff0bffa7de8a5e86ca9a365a9289a637694be2fd81e6998a5f411b01fa5e7a5b796c3624373ab596f6e9060522a1814ffbfef27e07a0bc4530dd9336081c2fb6167bb286f17bb77fb608e31149f0e38fb1fd6865372ff0fadc2be1548bf2e57695c074a8f1a8b82c8143c807be535648a210efbc6fb0b93e3a7bfe0964190ebeba210f78abb917d95b4260b720e2991a47c6efaf8fb4d2f1fa5605caa4dbb06e6c2ece9feb2e32b9f91b4f3df69ac658cad184c9f00efd2dcf00789ac61289ca4f81fd0ee62f3ca43f4b21b74dfed51cc539b102b0b4de44c93dcf29f5bb2e9469cf7d2cf38d8ef0ee238c18e11dbedbbabe35ba59bc6be1d8be2864066c7539cad7c5656953f620ffeadc9045c39f26629f734da5b80062ddd02102d6ea216855663fe176b9a2c423753aacd307621ef0e402a9704b3dcfb86273c62bc6e9e8c32772d15323514870a5b1a68b9b2f5792a1e71364bdc2bd6afd60468a6091a31c0dc5bb7ed2cf30db4bbda29a23eca4be3094a1a6b40c3e7859209bba26e2180d574a1e541b2b4485e3e51545a65764ebf9bdcf10fe1c3d76d596a6712d79ddfeca6c737dbf0dd02c9c49b3c24e72c23602e620404edd554137be19698af2f4097c022d9f009d411aac0c61432145c0679afbc4b5ceda4ae50d443a857f8327aa15f7225407196a9f88833b0cc997fe3b57877c7eb5dc1cacb9663bb6de5e14492a5238137a2a4c94b22a06300d60130e98ec3b1b90625e4a48407587eae4dced5284fe8b9bc0d53f8ab9319b2d51abdf45ec2e9d4cc21969d46856adb63dd8e3c885cab354c629000ad2efcefddd70fed9253556d2745188733b996cd98ce0ce4c6385963dcca83c4536b13967f312a024c472d5007a819a9ace2bd4a28a1f9e7af8f328db2105ff7bc18a01a153dd8e9dec992825c896d3c5f52ac4292fffb12f4bd736f1ce7307622f22820f42e74a598a149a3d2056547b8f8a63bc76316cf1abe58e08f9714fb7e7b50e69861a213a34f473db57c971f87bef2b54df3824233215bb862ecc7d3fb60082fda47bd3251aa3a86975e1a650e02416d9d3f7a67af406342977a9c6345f7f354dac3721cac9586a4983798fd889dabc15bf5e2a684c52877c6e77c2afef668b93a01f675a94f4e2ca75bb91ec4890e267a663e9d9a792f2b081c226162953cd88849133436b07b7e40a91780f7fa9a6d29a57505d79e8c0b5efdf8b15320aa0fcf8ff0009abf047e8c3f35e9d1115b1b4179eee460e38b5db399049dae3ddb7b5d22a524b3e900a01d6348ff8e8845a77075079c632c8f78f922cc3bc619a3d73e0301432ebf9e02250cf8080f0d751db1f697dff47b07744a807915f4aa99ccb17f905f15a2ff23a95d8c26eaca55e753fef8f0c32ab0565af15bee1666117a08b1dd5d7f81df6afd58c77277c8b2953cf37a72d1e15c6ee367e73bfa0f5a77b27b99dff76bc31cd1e33eab08e5bb592a49d9446fb86d1acf007e6fa6d041cbe7c75ee52305ea3b52c780fde3bff0206aa786b76c43708d5955e3daf6ae10023ea00273c09cd8ac860c4086d5561d2ab4e9dfa6599cf5015defdf990f41b975687d8e7061078102685ed2a09160da1ba403778b47175d9808110d0616631f2062edec92e794ef671f90dc05b2645cb3add4c2326558ce27d91c188622a5025810a869739858534622e0bee906ef31470c529381666e54a8e1f81ad9dd982edaf085d1d5273564f5392dca40efa40b791b00c8ea26f4879e9d4cc07ed00c75804ad0f40d0b3d62a63a6d141eab4fe1072eac97cbfc4d6a059ca33974e7d45c391253e70876b169e87c6d259f71088983b5af4e50978086232baeeeb8145a65e002c720f3fd1c26ad2435adb7b7defb71f1252a94f785b6158a8f6d39368d3e1cfd7c47cff4b95d53967a6f0b3d185eac064a99fb3e4b53e40c0452ae22b927bddbb5a84b82b5ff2968103121619893d3748f0a0638841429e0158ee37c0e2e9ed069c6ffbcb5aa5b813eb5231caad24eb9700e019aeed7d43f8775e4fbdabaa1b28940097ba2ff1d7f05ace57794d74c660b58fcea6d5d1eaa41b3f45d09b4ab04cb8704e7ece4461a8566b46eb99866c3643a53034a63aa906c4b7037a7bf2c871b85d8d117a673036f380571979798a81ed8a7d5a2ab388da5e9d5f51045f55fad403c734357d6998c79f97a14749d4b420ced1d39cd97340620dbc4525ea3f18656511b0f7e45d46071d6070aca6783ddaea37ec1dd2b114408d539f5ea20f2ccd8969f2afbec76d088f9c08ea63e150b347bc30a8376265af9c40018d6b39eda93e98c4be3ad611525bd90c9dbcc144a54a843a70164a80cef38fb410f030af74c61cae369d4209798705dad27be19f9382c0d47fc7a19d7fc1b35588c684318817249356d05f2ae2a12ebb54494db37b72abd77162a9c74cdaafd3a74df6c8c325a4fe2c8a4a659234fa7e5f044a1de3613f33675a53cf2e1d09a902485dbb055b2aca3197144c871b85108a4f989a57dff7a6cf6be604c4ae9faceff442ce2098a7807f6592635f501e961299cb63eec45e00ff36a7b4041a1459a996067e9294b3db88b5c93db9f611d2a1e128a9510c09402682831cdde970889cc90a94a2eb66001fa9ca8b3d309247321e7fd1e81c93ecf8f8ddb40e95a995028e2d6739e9c81cd0c28c51962ce2b985a6ec63206bd9f5ad78aaed69def22bf774fc1f9a6a6d5aa00eef3303cfff00e03176911aaec64e64aec3852a3222ddf2a729401512088884e6a6098b6197f0997c7734999ccbe478ae262ec5ebede91e5f703d7eb9f0614655c516a2f78f23588f4041d31f633f4ea64260cc4690ecf6db0223fc15035acd8fa94eaecc51a426f01d0d7b70abf0c8c1e7b7e794fcc4e910b0c7fd222943ebd837df1f22b57671b1c407363d5defa753cf422811306b2e9b350fce24edc331e291edfed244eeb8c424a448b1765daf1ae997abd4974f8a45211ec11e962516ad476a393a0262f850bd57d5a6423de87ebd2be2bd144ad879de6a57c7d6982e04f3aabc32ffd0e7837ec8e727093226f9a3949418858baeabd056fdadbbcf9b77459db19638b5c948f313bdfefffea19d97c7ff579d8199f1f5da495ceeee528b34364b739b6b388438eea5b709de6634421089717b6cec93f17d57683cad4cd2477cbf681c25705820417d5f5c6bdb34fd0c9cb213cfa13212328b16ce46651c0ebc5a729c8ec9469249cb22de85587dbae6f2e0a2b6081c25c1945f4fdbf6d6e937627f86236a1a5f6e380fb678cd616e5215314d71ad3d659cf797c482b744822738c8d1c967f9610fd364537e443158e9baa3ce7879868ca1e1335a558f01cd92eaedaff1fecb8633fac91adbf0de0e025cd7bb9d892bbbc0e3c954d6ba79a46ec67d2eac642a9c6ea35ad8cb1a3865bd9bf850f20892ffddb950ea49cd77937798540404c91a1f4ee6be41bcf8532b584f43f031de53f6ceaa4bca653460b21fe407fa05ccf55dc75d7affb23dd5137c9f69567cc03dab9fbd5d1c360fe58b68ecd70d05f045f0d9527b98d3394fc0abab5b1408c90dae541bf5605efbe5d9b17c6137f5ea736db10e202813cdc9f8ce964f218cb86256a89cfa3dd5a434b76df4b35da28b53b38447886af758a47de262f64c4953586ef8619f0abbe33bb5bf4dd61278d1e521a5c85b639247583e04d3d1b7ba079863a325f65bf772a87a712c556c324ac24b27e38a3227c56d642a9ebb4f4a6329a21d7fa88e7859e7bb3d1ae64ec70652fe0c9467f5329f9ddd1010b5f8e969da6ff8a77dc5b667a87480cf5115bdb757c824f99bae306cf6ca0c7ff7cf148a3f92aadd684f571040ca476f8db13b86efccf887bd88a8c8d728cdbbc3f2a4706dbe09cbfef165b46bdaefc92599dea1909c45f660750a87045abaf1e87ef744a67a5e9f5ea3f63bb9bd4f5c49f09e905e069a4c274b1cb74f21c6b3f91cac4d20f62ccb5ab8c4f4332e88f3e3cd5c165e8bd7292ca44a73fdb6afa06b4030efbf8291e5975e4814b6d5e7a80a8813cdaf3102c58afb4a62fc21a89f4fd7082e9b176f26f14fd44ed309776b61c2d1cac1c428292d387e584fb2df1edbbbd24da154424c08c02fc339d1406dc4fafafc910272aeddf60840ca13744dc2535ba07259c385961287833c481d0a9f9f043b7d35db71ceb67c6e003684f9587e6d59e5c15163ad524aff8bb0c730e1a4d17f3d88fb4117da1f4fb244c8dd34dc7d80eba9459300dae4b2b7c8e38c07264826f39232b94a9e65ebd9b96a5a1b9cc986ad9be0e70c664b1f6b8b3845ae55913d1aafed795872de99cabba1bf0de68c26beabc2fa449c455c505070de607121a2353fa0d2805f6f334c0650e8727f9db177cc90f60431799df2fce892449efd00a1f630216db794aaf7764d304356446de8c42c413a50dac837619050a6f249734c888b34c4fa0861d56956d2fa82983b5951029dbedf980314096ce6e64537583a5f1321f31ea48791e25acc8784f5b63f5b4520d7f8605be8490ed3fd4afe4de5b8115c7d2b33a3d5bf4415d2526c5236d8e4aabbb1eaf3df84739c9ba968a8f204f9abcd3b433aa3fc0482f4339d619e8485d3af24f6c8e6d1ede591b58a96c6ee3a8b4f96221c143147f9f297ecaa9994d583c21890bed5875cd3764ef9a49f764ae6f786d0ff6f134be155cb0b90e228549471c36e8e38cbf12a483703dcca77cc4aabffc2141951d96f2999d89d68b1c98c4ec76b3947e82b5c3fb76e89007c41eeb4e28ca9881e7a64d1940d089edc3b1e650f9ef24fff62257a147b7e6292bac29d98b0158ac308fbf4314daa3d73906440a90c35285a9b67043ef786e2d31f719c92d45ff8e733ddd56ae67384664b2dddd8f1d590ab3cf4773d01242a1255acd09fe762c11e298dba1bc56b8f765a446af852c16e38b2d7c274ddbf9323c89f1c6227c76ac3a585804838c5f23d49b1c139d913a34c2cc7b0e871ebeaa2924f24986d0e029cf016c99c4c6d2c21e156819e159d8d79fa619132155371c80a954de0936ac985061576bceb0068ee45e02c335e55969dcc595746cee31fdc0dd50688d560490c7c7ab347ef6e652454cad1edf4fd88aa10916b5fc4f58310a82bd7bcd6537286fc1c6e9d3412a390eead12c8fb4c88c81eb7d6e699f84308aa454e267d99bc824b24838ac9f16bcf22b68fe1e1dbb32a3c4621c930d3e2b431b79c946850af3439f9f1fc4ec189eb830833e5a07d8faaf2c7199bc2acc1fa8628003ef9a92fd243588eba59211d7aa1716797e272560fc8b91f1132990c6d13598b7ea8d398a2c2144acd005c82303e76d1e16ea8cfba0cba9d541535a30baf0468c3bb7b8b124c05265b57d622fb54836346f760d352bb7742db4f9e93865cf61307a60b2e7362c1609405e6ce96f112467c262b06426835caeb6ef58dab88493680f88d1cd24f670cff6dc61c02901680cc9ecc8abaccfbf277ec184bcd51f6f32b318ce4d1d39c471e12a3bba0a7b1d87a901182cbf9c3f450d63e7ebaef5472ed2da6b892e49024d61020d212fabb570f34469964f4f13048a193f39b19819484e6fbeff27b5d75121560e743751623058e0dab2acf26f79dc0aa8f39d92929bdc6e2879f4ee7c457222f46745639f450eef63ef05bec83bed1b183e8b3dc705656a7b514be84508dc63b65574a5f034a49a2ad2d3968c34a4f150f80703e5c25d4a6c12f70df4474705cf0edc16f29750b39506c8c4746377bfcbe53f6801b7d820a36011f67e2dd22586d471a9ba37b0b9056c1683722622bb96d1cb78456faa4fef6ec6322dedffad22862e6a7abc17256d98f23bdc40829ff162e68c2f1fd332a7503d63db81ed9dda1f4e84a8f446d89dc872903dcdff1242fe880554a2b79e67f2ad9bed42e6a94f8e7ef2e9489fc2d92cf790acc24bbcbc9b56c3a48bd877eb2cfa4407b30619fa5c03767277ef226bced3b2143dca3f5e6eda18a8f189519836982298bfd8b26b51c83d33b99b8af2a69df105bef31eb3eaa124ac5e880ad7bbfb84329397c43288f6c3dbd83a37cab7de7f499c520911d288518908539e4d9a2655e0770bb7eec4a2f6d029abec884c7777488c645cd762029e3f5829e31ff80de10eb7a45ea7f18208fa188fb46a309ef005de70b081d70da60bb9b92f13dfcceace65e84612a7c742e0159cc4bf883999694d748cf01c9aad1915e7a33c157cf00c084d71c26d9d2597e9448fa1206ee425ab4442d0b5992d5a167f4afd6a0fd3b43d9bbadb0fd69d61c0618bfe4ceeea971db7bff6397a207174aa2c6eb238d80c2f5388982e39ee2be53b2aa9ad5d24098768a9d8f653f229213e205fdccfde582ebdcca1af69b6b64091f1ccdc9bcd8f542b6dd3b37cfb312cf0430d63315310cfd8f94e9948ee14d3c2c0035d71db4f58c81f2421dfac554e5f97beb40b81816fe8bb269b4b0c2b6ade379e555530301e4184c1a9b4c1a0d9faa0b50ada6d43937d98b97754693f77a9650cb29d23c724de99f322300465539bc74421fc67406a9c1f9b11d3d96acbbf936e2be95272fe6c8c4fed63c6863022aafd021755aafd3f052a169d1356da3b753c0c67bc796a99ab28ebcdce2bc0d124fd572c97a3e3352c6ce34a64de56ebf0bec32e807815fdca97cf711c4ec05e18601355c02eeb044c7b58ef8ad6e2969df9a463672b5cb89b339ab5594158c55c37edc2cca0d9c363fc5454912e25ea0569bdb61ef0cc2e5fba5504aeda72ae9253c4def6d6c580e65874f5acbb199c58886b255f67baf57e9ea423eb1eaeb9e49f752070fbac4372a398c17a36d64401812892ffaa8222c2ab613d787e8b7ca949097a06682f2bbfaca3485766229c9deeb99d9c664e008873ea174085ef54cbb16454ef3a90ef075edfc91d6d539934c42a1aaddbf360bca5481d9ae756d7ac50fcf509eff0caab389249fb568c60d314af4656f3ceb9fc7405ed2f025990ccab22af498561ab1896948aad5d14fb0aba927152606b5cc226f0123060861538d97978b2f8dcf18adba8a27d6820571776026213cdd0e2fb074dc302b0cf4954d8fa7ef4f5ca2a5d9c08f4056088a0a08f4585e6ab6896329d0bb6f1cec55da509304c1908bb3adbc3b0b0553d283ed30359613f2eba07cefd4864152ec055b7af55f3a8bc5f17c2204b8de42718006c52b170ccea2bf9a2bdf328e79e4846b4bd20a297aeb80e991124ab145d8caf3dcc5573e0e79e6f03c835121e63fe5569cb58cf4a0bb4d8ed9fc126106fea17cb1f2539f12868da2d9198a2615b78a1e218a710cc9ce7590621c167a9c57de70deb5ba20843ca44a4fc8ff1b079331071a0528a2ae9504812e7d67b551965f1d07132ea9a8357ab812f358d286808a5147a5e25a0999677a970e26b009dc3a67521087dce7f6bdaec1ed0d81ce31589060a61c27bec37abc0a020b1ff2250447400a956cbca0ce9bf56380eebe6cc121b15f4abcda3c770b45e788c230369680c905e61555b0d6ba6e31d875eeaee31ac1b479426dcf2a6b6b9672f5bf4bac0c3411b095b1deca027c899435eab384398667a2be0770d99ad98942321164008d70c1c1614d9876e2753b7815f1dca08602724b8c049e481b0f51fb3474173f2511ceb2564bb15725ae7328f6103b5052b67ae93c104203512cda71fd59aeaaeeb77cd81310dd886f18c58223ef196d9b66f97ae0ccde2df80cad66eefb7c08b21fd3591ef6cc7be5a9787e949c9027ec0d332dad5627cefd1eab04b785ea41c7e7795e22ae0511a3e1be9c0644e9819be5c5edf4e88703bc243c89bd3147caa76a37b2011831bdefd68b49c1ea4848a841c7ff05fff6b1a98b9a79aadabd46a6095eaef2c7e391bdf1aced1c4f5f91c7579d87515c13820de64c6106b89e271f5b99dd80a9cf9f188079ed68d272a4dbe27fde46a0d7f29547f9637afc1cf20048cf20064bde82cda3c000c3021b29434d513d9dc297d015684e2b02a76019a662c16e5e75aad2fef91ce98ca00b1e72282fa03f4c00c128f458c65a0f5c9c86c6b087898241a252d5b6291b09599bd7a2cb32373b26ec5ea3eb8721aed26cbe069648f44e945b1b50ad6e550ec77f090e0674ae6e801c298a20a7df186612fc13e7efbcb822ef37b4de9c6dedd1bbbecaa2d6c42e3d1b10a797ab08a93511306bca44e24dfef2f4fcbbf954a379eca412ff2d5e03c084b469e37440cf0b227ed1cf75a3c78ff274410fb3d41e3ae39c4b3fa294d9f41485a34774b5be5221858a9a30e89fb3296d78c6cfa2922fb3ad0c456ca21d8c336028fd69e8381c7d4fad2e9b435246e0fdab4b53cb6572158677fbfd403d1de85db164f498b0e3fd175c56a28bcf1e0a071e63ff36c6b232e97cdf694fd365ae2ae38afe30c1d84a3b895f2843b199143d52e550fdf1a8eb3cab4a97300422c434e684d6b981628b8fe4e083b9ce5c5a351e480c86550bcc45f8f9e59fb0bd459cf2b3afa32995f99a9f8e27432f998263f3bbc2ea296a424cff4fc3e7e1b8bdeb33f607563f65b0bad4ce697345e841b131492db57faae710526d106cfa8eb0ccf41e842595dcf0d616c33f8614edf59f54ecdf3d0bac67690df0d8d7aa89f737e3de3d1631645e2f3280ed0838067847996563cbe2bc45047872eca9526f8bdf24304ed414618ccd9b8c57ebda90f3f2979c0ae5b5a62cab449ae633c149c41a57322c6f0966bb73c33832b0f20f2ad88d50a8dff9af5b92ecbc35e36e71d17d501bf6f70ab65303acb9dc8a848ca2b7c804bfab505386303d296b52834752ca0740fdec32e04e03de678d348ddf6e7be59c5a0839f608f19f04319b3eaf9dc98b6f94d65e0a62dbaca60d66024b1fb54a138344eb422dc52529aa7c0fcf3fdca780c2d6976b625ee1be9c364e6ec5389b49e5465b56289e979aa814fd1127137d94f769a407a691ff48338b8a363b21ad53b6d8d5627cd5070b1e3753f1d2163cff68d2b61d963f6e126c491943c7f17b20374dc978bf48b0279d6330ce5278d1c17e79d65e370362ce3c6cda50d60eff09b0d77bd4a390a7783323fa140eda0a4b95b95eb5567056568e9a8865fc7fead329aaecbb79af7941ca91a0063653aae9dfeb7908b8d2a596eb4bea9245202f688642a011a1de52a87b753f9d53d266922030f6e7926f00ed53450be3b4e7b7c261c87e3b84df03b0efefeba98ac75c47b73e85114bf31eeb8ffcbcff14096b2266914b2426ca4d717b8cfaac3e67669c81e877dcea20386edc93773c503e760ef32d1edf471a60f1c3bddfdab9170875d7dc7504bd648a13f3aa2e024a6515dae6413f1869fbb4d48bcc6a93e7820a4bc34184a9e85904f4e442fd084994ad24a57b1ada6c6dd0b0a76a9936835243da07a563c03d75f7a452d6534b097584cbc16fafbce0a9882fc43515ddb9db97e8de204ec369b4f67259fa643ff3ca69e4bfc7a04911a8eac57a2bbb5dd84f94aea980f3cbfd0912905196af78fd3e277ba5b59fae84ca4a21caffccd4a1f036ad42bc4aa87a6621ab053678ee711be1e70eaef5b24c20d8508c2f0216ee2e42ab771aaccd660aaab8e56f4ba0225b2afb26332a6b5e7957c21d6fdde27aca28740b74606d264fb67cd2d836b4da0543244c7bb3471c37ad851e34abcf60f47f8b2df7581695d6d7c085a837164c8e69f0308a1bb09f7616a57ccad461b154029ebf55abc28fcede096a0e41908de1dc06989d325627e37195f99a113ff82eb4ae40333a351701789d79e92bcb6334443b0fdf7abdf7f5974a584a11dc9648ddbe1f3b7383441c83a82cbb945afd4e71468e656b591ccf46851eb40246bf3fb2b19628cff6ec54b2841f0caeeba3407dfabc8276fab1ddc36c6c2db96ed29c86d725fa7270ecc139ef50fbab48dbe63cff9b289ae9299a335c5e10af669fe888c107e8ea98199162b46e1b5095ba12f0f6386e19588b482f9b2c4c02dafd74a2fda14081e08969259f2e85d325ec1e78b6317ac5e2839be369d099d837179c8c1cba2ce2149a7fa02791be1d1ca38867b6b18bd8a685047ba499fd141567082b56f0c9d1069a41c4921e5eab91484e4bd2d43c55b052106855bcce65d0fdc5e0a94cd524f7451d46a5aa587cfcfb25d0d2dec2523b0c7a791d15afb4ca9277e6c62a9e165a4446b2b4628b1dfd25b9b30b3db862a57b377b414106e4989a6e2743bc2e0f9bbefe604316b3a2c9b6dd53c4e50a4e958480c268f8243db8178b7b5e04e7c32cf42e58707237ab47d413f2f4ec1a195785e1bd88545eee8010cabb13bdc848dc1352752c06698c9c15df23e945c58263d2be947677bd999849625a7bd68f127c9c930ed6044381a892e86caac0910311b9306da9bc9b9065bddfe2ba0af1834147dec64d9ed90a7919f97d58759b94b28281247469b3c01e3536a55d301006edcd1c93d602b5d1e89a9e7afbf36dac9099e8d87873fe9335aee913e69f823c08f57a8363482fbc6926b1db91e428504ae5661a3ac05e30bb09e0f2319314c24198a596d5f8ee99fe030cd015f83f627c7b678e95c36f9bdd2e61a2152f8b5dd53698c90b22b51ef8d05a48441196e35362ab9f51d18f9c2520c0a213f76f09b6ff674d6551aaab53a570f943b5bfacb0c2626da29bb9ce5f721f8cd958a45259bcae2b64d4ccef1d5d20fdaea79014078bf15e6a7071fac1d0880cd13db8d37aaa1a711987019459f55eb82c19b2f096684fe6a5a45e769fb3bb1b475a996ec534b959b953dc01a22188d9de5dcb8df6c16319ade88965916d0e2e4c58a0fd451fe3abe19ae56f75d2731f825210241ce378b4d4da21715ceb63cca087a89f3efc4176ed4b72031ff2e55ef2397d1b8b9056bfcb928a160b3a37d07270dea8f7e1ad4cd74a517e7eb9e8c7a2e619c437bdf32533410ad7021278a76dba6f38eba0ae5f6c42b7117233db66b8357190d768ad066840462fbaab581b7a2cead94ac53c9ff8a057b5b5f5e7632b01dda0925ccb9c4c3392e0a9aaa14eb51d70c5cd530acb8ec0bec62bf81a67747ab63c0d9f0b4714fae5c8e3ede320d4928fb3fa0bf428397e1de61e17c26a604b0889f3203f7b870d5856f8123496378c1124cb674293452e1a37855d8a8cffcd5432fb953eba4b63546e3a1bec92de55165b764d926453565066ed31fef854b2e9f2240ab4d550e51efc7aa06b7f1736106b1be2abaeb6631002194e24b4f07771c81a3027f265bc085c77ddd4132334b1121422fa228f3cfd3d66a1b3dbf7b1dece2c1eba6256ecdecaba68d56c9a72953d394495405ad01fad093e39dcb64c3caa449bb77829bf3f37731851c8fea13f2c7468a3c028c1167e6cbae2070e76ef1f8bd0e248bbd8745875947a2bef7a1b841cfef7ced10ce280ba38e73bf63e1d03bafe20a29ae6f8b719ae89fbf8058b1d12684d58daa60f83cf3f51e4a58dc9bb523d654b08e0da11e8090305801757cb7e3ecbc3996a166ef3ee4a89957c7e94083ddf542fdebf2a92d659777c5c6b5c215d8b1245188438e3300840c44aaf2e6c1f9fc68089b58e40e708ccb222a28d1923e252fe3e6ad3a3e8d4ef5ac97430a68caf3fe39c5633cedf3501d564933b3641fc8998d2f2a3ffca812b6a46229a2bf17405561b607cbf70a64cedb4af043cc43c59d06279abc64ffe5a67b6d00d0cfc25ee093c3f309fe8d15616769ba6ec972b91e4416b1be0d67fd1dd959a5f15fddfa1e1b6053634d9a91a0ba3dd8fb49493e60017cc3a2b017e8a13a674d9fa10936d99ea0a706c6df0173afebd6b6ee6c33f521bda5b1a15678120383ab8a3274c076a6a9df47986b2e826c20b6f574142eb1e7bffb0ea04f6d4df572b1e19512798b39c91bb57ccb6f6866f2c1378b8a00ac9932bf7ce496a1d5295f8c037c8760dd3fe039631f0bbd4c49051fe9c5311c6e35d9c2d8c247ecd1f6664b01ac5915aec4c56ede2e09aa92ba133e917462b5a472cd69d05663b0e57a4267c05be19b6132bafb65c5ed3dc33c126c5e7e11757ff7ed59e9f9ab1f163c52ffef1f6eb90287e5258ae909aa8a8587111b582fc22b9bccdb10f39c9da85f1a3f612cc9ae0bfe4906989d89ae7ac63aa5c91ff8545ca0e6de6ca77caf63010ac1d283522a67f33e9ab630d105cdb1f6b27f75e92bc1acc1b17f660bca24bf23db4ece94b019b12f702a3d69b9332c38babe6a77a790a19b1aca3f004875f76ed7abee1f59ef201e27dd5509a852f85467879a42bdfb5251e06ba9d76dd3e9da7b5837e73d1ce964519e3887449428018ea2af4fdd24fdf8ad1c9bd2ed0d52e5a36df9e4dc9ae73ab7cf2f1b61b0b56fbbe4221d59e2ba6d95c04f163ecaaaadb82f037cc6e2ae6c0a2924b59a39cd070f32ca42a136acf6ae60ae0e84233c86e764f59ec28028f9d1a6f7975fb9401c81d5b78506c24288948488f44325aefd65ae2bc7d9e98f2b85f023c04234f9daab83a70c889b97b7dd09e45d5d49d82e6088a646f81945b036eaa9e881ad038787be745b333d8d7c071cdb94f0a6cb05b02b63f8c144b8d4c9fc8764e7dd7eca5e7780c6a346bd8f76dd9220036638261488284535dadcbab48131743956e4b45210a0764b8a6cec3f95e7e9be0a7af23c66178b83836c88ac311f5707e5150c462e76cb405a43858d82d51b50faa7681ce267b74d2da3dacffe9c8ef8f301b2d20b8d7081fd35d42a3c195effbb329805241b5a3d43a414751fb29842868c97d5e75b701056d19b130b14ceb3bb0a14acaf0458aaf33f59a4c34f95e80b04d30784109d822b7f67b6b03b0937b56be4e477e6110ed62523575a0714ecfd9437ba746a7b6233b37707c2649c262e98610a33ba290d30b9a8b08f045ae5e12e6f0a05763810458fe4d93212fa066334afcec5536e50270e6b620c03e0c95a94e6f49dae7bfb9be7fbf01879460da283cc4c7a3d99bf879fe60d233ddff3b09bb8d340b2702b6e49ab5f20426a0a1122f23c9f97968c30bfbe542817d45071f34b1c46b0cd06a63ea98f739a215f0e54ebcfdf1852432a4854b4db7567f792f502139e2a148dd31a8efbb1cf844a04d832dfda60255d424374d1d92e2c84b6896a9d27973f6e9f1664cbab95a8658007bef4ebd2e9a97e2a43f690a2879208a96965de8ff4eaa50c878009f37a75b08d441d87f648b8615528ecedbe96161af366ef499f103dcf7933ad186ff835686d43c1a8e9b779f1e773bdd620251de08954d65013101d297af40864f2b3ad3f4e4bb48e464c68706bd7f7698791525a6ff8df0268b8afba3d75fcc20cf7ec7402fceaf53c2a3dd59926e19f15eead3f57c00c80b4a7ee87ab3b32caaf879d772b7caa2f617b65d2d92ad830236019d14532f1dc83d4aabf37843b02ad201cb3f1769435c95143db7d058655e000bdfb6d988b6310898ebcd25c3febbe4f24cc5170c5b47a7ae9cd0ac7179427872912b659a423a5c8cc5449c5d813843657371d6f5bd2a34bcfe259debee3fc7211598b57ca1f7b128745647ac8bf636c0c7e46965053224beb1b539e80b686215d2e923c105cba173c365b79352f434a304aba3bbaf3be39579ddbb929ded72809aedd9bbe795487dd52a31656463b2981afb21c21743c94cead50703744738b28e6d00f2ea3b69de461ccdb3a1702b115c13dcdaed316256e5c1a8db08bbab2b620b4e75757adce6dbf4dd64d7d7ad36fe2fe1dcb87f05e6639980f9e7399d931b861827bf1510fe81638686f8dbc2241cba2924072a552e900942a787502eb3132c0cf44c67e54ad20a9110534dd635cb3fcf04e8c0b919ad0e9ae06dba9d8dbbc37994bcf8d8ff4504810a529031cb4949040ad63362d2385456a6bf74fa32a486a955672f297c52f68342ec9200794b6de91f99b54f9ed64b15e29fc0dd18bd177b0039f6919be1f0805ce3d6f0234f61baf85647f98260061f5ca3530d16e18b7daca801742062429c5857ea6a10c3aec2ba226bc949c82ce5de4aa9e774f17688886abaa041f5ea0696c63e5022b95112b35dc0a25ddf3ccee9849c672fa832f3eacbcaa9cd689f6c47f549344e7747ba64864dfedca2dfe985f0e5fcbda04a181b237ab8b21d1a9604b8244caf52a66129b4ff8537dcdde66b63f8b20b3280eb7c46a2eae2657c74e7814bc2a4742ec39d4ff8f0befa3e2eac3276298695949ca58600843d3dbb7040a709962b7370284eb0daf4239e2d747741fb80e2e30c29c0595a44b2ce042d7d0b5a6d6e16569cd68d6470ee570d94613a67ebd5742b8b9c9a70c57718f5a11a1299425855eb8c47d785f3775e7cb31cc43c78f530f77648fb57770483d20ed57c04eaf6b70dfb17d08183fd1e82181d9da4186b0c0739b8d99b4bac208b876421c3824f3dad6a46ea8f0422ff1b3a5dbdfc5793ef037ebdf69615bfdb6a0288b73eaa06bfe515200b25d99df3c063f3bc4edbb9bc9635a774f91ccd39e8d60d3cf13719664fcaa84d976710d954ef24bf237c4907b9df95cbbb10f0aff31893f0190d7aa69db3ab318c77634277a8c07fa787c69f8190b74556cad0bbd000351394a4999f1663954d484402fd605fd377b3546b3adff0f866c388813758b256481273724c4b4e95211c0aad9c4d2f4b2af406dc1e13756828c9858c09ca2bc3a2db75b11775e6c40692e11bf8cc906af8b814b352d8f3198d8b75f4cb14fe50b4dce5ca774ecd5fa80a70e1465e5f7adaf023e7f52fe6d62738013250b15e27ea3a26b9218014b724e79244be2978f887d8e88813aa335adbbcd26df4fec8cb76d0cd0e1e07c8addc4f9ea60602260e0bfab13c39d00c3345ae6c768997907bc919170bf60702b23d235e2879ef3ae7cd14f36d48412a6574303f022acf41ddbee59859e99edf043b74e1b9f07e4ef9ec35ec27c617de1a2e25de48390f4439696b2db72f6d620d830143c8e684d0d4cdfc68c2f0940f8a47d861d8d53443af0e743849e3ce1eeb5aa2c6785af62c5028fd9c6633c725ca80cfcacf90af74630cb6385b1ca04245adc8408a80cba61ee90dd3d97d5bb99dea79dd0f3589194b2796cdbb49f41b739192ef1475fa89a27479a69e5fb38002e61763460ae9caf7693ce6697132b91d900e4825746a3b840d4fa82f875b91923e584e283640d0b03fedba3c208372b80073870dc524c4f27472cec99598f84faaf1fdafad43e52fe4a873c98e77233c685972e3ae304aa738f6eb82c2a53b99af53bb8e52b9a308a56bd7eb2fd42a0a073fd3ceb9a4c88bbe560f9318457de8ec4464192a00edb04d6e38d5ff99439ac101aee39c864b4141119acbee5b4589303bb81490a0bcbc16026a035b788fc56c4d5cf5d064a68078eef1f05162fe4b8ef18d795f0da7acef732a848f0ff732b1366cd08f96e48421106df012cf313acec9d2aea272b754acf30898f1d57bb93428d38aaad4bff53a278d0d9dae812ad2c7211985e5e3ded1ef3e5fd3de3fa186485b6b614322121e78057102b9ba1299b89b79f9998de67c4b14403c2e7e766594e47aa256058ee09c06f75244c3580f5e499767d3af47545a002f395e4580fbeb944a85abddfd0c1847a74cae5b701f5c71bd422e59fa7587f48cb96135e6c1079eaf9e9f53ad1d315c45e0fb764d38be072b62667b46ec1ea962969e77f5efe777dfc3c7b48d72363130da4d17561218a0f0a32e1f24c8e8ec0aae99a8fd2d7443f988e55ef2bebd0f1ebe0ab443ea49ade11644c654238ea27db66a4a26a9eed31dceaa5d1df8eac1223a5da404c11cd234d0aa89ffc5372dc1d1ccacd7d9c8a603e99ef0afb2d2b454cbf9f0b1337b72855f62db46839c670b7c117062a0d223093d143f68cd0da614519148701217b6f02b748fb2c5991b5131023a9c9f66f5e88c4aeb3088a8af71becb44e48d161921b572d8d27e7d7641191489ecc24b15a75bc238b8a67acebea9fdb2761d7804c1d27879ff1d83b4c97a87ed63d6979b67f02979108cb104fb79fb3d37bcf3fef3baaa6286f6b3f241dd9ad5aace67aa0b215bef44ea3661a7e032b0e5d8dccdd72c8ba9650219de3c0003273d7637d11bd656b2fe3fe5396c43573e6a316e3ebb6ba1c72cf596c60f65d0c71bb960642e08eb79689c257af04d8f855cb0749c4e1c3582d88cfd77ed40ff0058641da2deac55f38975014a620402f05d376bc3cdd2e11dfcd8ae303e207dd5ae144ee66ec1ff761c3d2e6c60c7dc75d139b9eec06cfd2095bcb60d0c9dcc0ba53ec22b37e3cfab8fc7450fe9b785e5133bbcbc50be729e4e997c6e14492c55c63cb4196f37f7e0f385cfff0d3327d5c81424dabdc754f34cf85449bb7059249ebb7465ff01891643881d5c5eef03f6c6f9933f2f841f9dc441117aa72a535ea4a5ec2fba8e32bddb79a033364f6a8540dd060fcfaaa550681345fc1e1e3ce45c66f0d04a313f1b0795fe798bae04e0d4c20df77f381781ac3723691a6a14ccaa0a98b99fdbbf83a402ef383acda7a70808e51a68af96d7d628740b768232eaf731c052c96ee4229cc767d2052226be2cafdfac49b23f9557ad956040337648b8b9fde926d1d8fb565f34005844364d53ac3a4e0a467d8ebd8f7030fa3e3ba8d275eeac61d5e79a4040ea8a251a89161b2a9d57f50f3de7a16fabfe69af9cb1f2c5dee01265cb8a4fd20efe22a2545e27439ec552a0576b45cf69110f1f210984a7495ebba89d42c8fbcf33cf3d73a320f5b037cdf384d4c6daa10721694a913d111c1b9817bd49ee4c281f267fd23cde6a711d91bb776960cbf7a3368b194da1bf948d8585694b0e9d3a47fdc3ed51f0d8d8c82f14039fb4432cedeee9d3f07ef2fd569092d901e63dce86b5c8117e8c791508d2dfac0bc22f3bcda6fb8de025f33ea2644e45044c630ef3d439bcee7b018cb65694e6f31ab75b2a5f827973c5662aa3fe1c7d4a03abbd6b6a040a51ce0c557b1be3214e2c62e7c91ba95c17b97a0d37fbbe3349d791fced0a282255d6311ca09f0341d85f4cc955f6043731db3052d611a85d4121e17dc4f72bfdd6569f88bad9f5bd51bd4bea65b5019d6ce5fcd5cfbf63dc22600ac455d166d5e5ec0763e1ac3163f480b7e553b272191bc4b1d11e18f36793e81de9c519ededc1610d3871b43d1a8ab2e7df133723b1c609c7023a4a758fede2889cd35368921201f68369609663adfdda70f39d398f8ae4700cff7d4b2992d377d42788a9d10a007e8168f1fce138308cad0399ddd8b8d914f4640d92eb0cbd2cadd1d9256ae6435b8acbcfb2ee97b5a802eb2c8bc6d606d7e000f1d0ddbbb8377691b5d7b81e50ff13b20a83a5da0c91eada06782dae7703341053738ca4ddb5297c1162acc8521566e47f60d2da18f2fd38a7c717a71292823fb1b215ce6878c94da3c969db584cc6306aefc7e1b7142ccb64fa5fce1423a6a7aeec0f1a0cd35ba5f6b85b740ff8ef9c5e59531a712dc8d576f81fb1f4602a59745f2b28d2c3372244a5140e4909da5b4045474647481867dee8c7fa7be8c207b2dbc285eaf48ef4fe98e60fdde70241fec0c2ee392802e3fca49b3a584e85df9c5d1f45283e4d2d55479e63668d7933ce3cbdaf2024f84cf7aca72e2310a1bd37c3240f4a4c843f1012360fd104ba08222dbb6fa53fd691fbdadb06a883137b8014bf1e2d2700f4a8b7bec343802c01ba7aeae3f5ccbf721ee0b56c21d592ce2eb6da185344e9ae4d4de35adae04bb521006324aad53606c42f53e3996f0050347d84d656512dd8b22a1808ff0006185ad7eda2870f80c459987cb29e909095f6a9fd604d2836bd0a28ee9c31801b1a26d37b4ad7a0c03b0c5f5cc4752cf48721e93e520bb51a3739474ff49c62e4ac73515fb677e9a047388e26bb556f75476088b713028753d33edc2ced2fa132827a04e696ab2c6bf8de9bd0f446dff0b367daa7657e778230651cdad2805a762025a79f34d1e83e8cbaa63e44f491915e650008dff923f45a20f97279d709cff5b9d1b88effaa24c980a1be09df8287037775577b18eec596a2a934d94685d272921def2ad615ba02439fe7da1239d886b7e1be3052693fba4783c67acbe35f7d690e23bae288bf25b91d7872103898de46ae9251e0d25562c5f52b59b4c9fd10f2bb84fde96a4839ae8581725ec43b0e9de794843396484d5b3d906c8087c9606bd153f3cf31dcf0ac87a2b472dcb698c6391b88c5ba4ef9e0a2b77a9344ae7b24725ca745a2f1488c47a7ba08117987f5b495aacb9fa17d9ed6f8f2c5711748cf9c86877d2bc30ea7f880ec1fc08ec765f2cecc0e4411ebff318bd313331ae354302afa25af30a3ca2b73fc1eac81e1a9b9a5903a710271231a27c3332ebfc1951009e68e5f2560260c207f53803aad28db8cc55cd926582b6b43a28d08c63db82e799c2af452635b76424766b9fe834ba6b1523cd23b8264cda6710f8239425e6ad1dcdcf8b3ee72e118bd9f5bca48d88bc8c9ba1d38b08c080629d992e3fe74253ac42ae9559e558ec6958e3999cc1eb2396bd6d2787d5974e886bcd667b08e6def984aa28d60610d49a620626a9dbad746385a96cf3ed0d03619cc4fde7daf76f185638b9b5cf6943f99d8a1b33e47cbd345004e77b539105440c013f4f472e3f76985b83d5d38c120c0d5a66ebe6e61c611c24fd41a0a063bee097c182d580b0f41f259c031b2f68003c490d49479b855462c2ac243efe66eb76d8dd5ef29a5ade86c36c0ef51091852ba81d3c615edf460d6e20302e361bedc55bbca6a94cc71d1abb2c00ea4ad014641577fb07a24e51b86f03ad108b8a94524d4045d740eebec72e51a74bb67de7bd4c3002c5ee50cd691169417f48ea07565c63eab5400b976fe2fe19abae5c8218f41b7dcb7b0f43541be922405533706b87a0e769268210d94016ed2046561af9d507978471b70a12ad824bb174f1ea5e6c9e839a8a01c00c2ac5e42993b136a0c97ce89ee24e297b1d3fb6ac426d94e8941875e3256884bec40add8f9f02a0626528718e2a8b12f0a301a2183b03883d09562d3ac4a505f6996a523525fc005383bc59f08855a023b41ee38ae3821a9be333bebdc30d2ecf4f89441b4bca41981628b40df04cedce9b34ad16f7d2fa9f296d0e456ed06095df3ba75bdad6ffb7a8918481bc5a3b7938120161e215e8fd7ecc5f07e778e068d9ae8d0f11328a619468d81c8fd078c9b8cf3f794b878bf921b3ec028a93ae549b5b05aeadf1bd1764e4fd62533325bd4a5e04153d08287900f86d85fc98bbda1b2ce8ced40020314cd52f621f341e7f4736c47e00269da60d16e205d655a6b75e78ff3c4068fbf53bf09a41621bc5386efe4add74deb19dfbf93c4d7a3f81aa30c751ea8bcbc93e2b26882e79b5ee9f491d9977462b50b803e781270cf6639fbd5a4ee7c7e7096b06b1bfeee7c12742249086c8f31835f30e53d0ad035e43cb15bf25748ddc9a381d579fc4497dd85f2747bb1b17b7defd4c790b54107f2e55599d2de8cf313904b8ba08c1995d1d6a1d4482a0e8424843ac980dac48a731de98140c141bf8d76ef2928db40349273012b896af0db31711d54e6745f6b947b92d85f0363485364817515be6c88b41736081153385fbd60c44c2d17ac78a8e898ed69534d153e9f20ef64f25760b974b5249fb5c2cffa8402ce296f51483da9023b5f31b4a8266d58a0c52dc240ef7f3d35330a6d1fe54f1f6809edfdbb4a4d9dcedd74475d71a15b642e48c336b374084f076e1c24cd0c732b7e9ec4260299d3759d48d9e27c7451e39a9020950fef4cdb10a5b6bd918b4043f3c51117e26b97c7b21730b7aa90b3f30654ccccdf3a2144c94c1c656436cbbb0ae9849143c6ae34bebd7618151e79b0bc67b4d5229c84c48860fc3ab774f89b1a4f7379b53f724c8bcd84e24f53de90952eaf83c14a97907e76ef6351ed4a2f38645e268cd652e65f576df285f3665fe81c58141c0d6b54c3ce4712824f40534ceeedee639c8a430782c3934ef299c23cdf8b0a527068be7246193d22760e64a614f261f15400a663b9422ae16fad20bc11d8e9b6f508500eecf872d92021f47ed05dfcb58d69dd5d751654d3569f41a30080c0579f646c76e3f503000528271c3a0293c87d9085ae6b4885bf2e378a6cf65ba9f4e19cbcc1002dcf5094a0c92d493e1799b027b13b6d915553b5ae05dd44781e0ad0c4632f0713e814ec5cfd14593c5f98bd247f8823b9840c9ef37caabb868322ae5efcf8ff1cdf50129fe892fb69c550f4c641fb1a55af4a4f41734e9edbf6f124933d6fbed198ce5ce7ee7ebd75cdb579b59dbd0f2e4790c63d282ac8e8fbfb6df0f8af344c434d1bb24bef192252dce0a87005a7bc39ee30aa021c6c0d0947e5f62dc225e66ebdda8667484a933b31dfb3515d9cbc7c1f5b141403ee4e35b3cb78011adacf4c37a9c18778f9c5ae030034f4758eef32e1121fc11677595db8712e962691d39681ddb45739faedabeece554345e55379b238efaf96717c8772135bd627047c4e2a0588a8aacc3baba9573959156c54aa387b38ea04670c616fddb908e72fdd9d3ebac00e9943216481eec9096edafa9a04bbb1dbb952fbeda35f1027ac0439856a852c7544e7d6e8c6291b82163de41a70339927f3b4326658cab6deece75a32760eb671e1f29616b8ab4f5ffbdc27cb5d21d76b2ccb7cb3b43da81fed61580af21ac7c3056cbadb3b05929c2fe183c0d19fe02c27aa26e392a38165fe58dd39e8f2d1730bca43b1a441d1ca7ce519cf2f5ec14125e1d4e59ed2ed9276e259d17308fb7f273244030e39248ef14b54c9129d329b6b7fb9820834d1d6ca60df435f66659d7273d318b773e48b0efc259d1efe86a45c5b34a742fc184fce87d87842516361c23b5166b6a7c49167ec492b54c9b689ee3ba2adaec376105a3032bc6822ae6f8d1b0e0ac2c5bb4a1a700051322d52174ffa7122b706adda970b2b5195675372a578f13bd463d4387b77639289ac26da73c252bfd2a53713898b4d2290002bf61212fb23f9688e61b83bad3a7142d7eb79b84859212b09c4645144892d9d7597fbf83dbf5032003e56f8350d00a1a00bd7af2597d5a81f2477d5bf48a0d1fe8fa8ac4addcd588f577018465b6ac998418aedf64741b3f367552520101c326b07b43f35f56af13b2996c74bd3dff02d1ac95a702850186b7b8d717e3f130933873dca209c5f1e60bfd2807fc149df9e23c07e56a5abb514c537fa953169cbb4eac9321dd1d02fcbfe2e4af15d91c30c57980b7a28a561bfc3f5cc0358b90e94399917574e00818c287c8f3984e73b7d767813bec0e8d5987089b66c8945a39a22c8105ec5f68d778ded7e2e9c9ee8acc3c541bccddcfdc4059be21e167de7c3579910b81364947917b370781b4930a776179859d90945d15a2499feeb4aa1a0c1f82649cab60f00e48c8327ca9cf9d8a1a956f088186a87ba4fa2a9c5da8dfdb65a02bd8e85a11e137745acdefe84b82b291a3dc6f848e6e5dba69a9d10c3548c523febe2be3501585b7040602d982f5902833d497b8839165d34f50b2f9cceac0476a64128411200acfa6e6c99423536005fdb949199740cd90e4ddd6c558d6f57b81dbd96ca889b01a63ad5dd65c5957eea1b8df8ec7715205b27ed9c5e3b074c2c08fa782ed5bfce53bcb6d141596202cd86ea73eaea931664f6957a06ecf2e3a2b16e4ab204e35b8092f91bde131a40617a5239b9fdcaa6090cb7cd6099b856f4314afada1d0a2a2cb947ec8dbebdd2ac8e7c8901c1367c7859dd52343da047b883184af19eedcbd768ea7e3f795d159c81ccbafb7004ad16261845662e09f1ff495d910b80d267fe1870c61f43046f8f7e9e27a6be5b8edda18e17fae271a017aaaf1fef6da374fa637354187572eef683d428204fd29ab63e736c21a519948d1c427c3fd9d40fedc2f1904150ccd4fa436f200d6f18c933ad4a2400d05c7ce4266b7e5ec4e744033a7637a9f2bddfb268a1bc77044a451a1ec11323239f70eba854294a85dc70a6b92686e92c8d2d3dec2004730711c4ed285be4604efd758b02dcc7697eca296230d98cf3c9106b9b0d1434f2296b51629cda98e9c547de70fd7156df69e8e8d95ad7d804a528529480dc045291194196ac98d32495afa8be4cdc752ff55ed230c1844543137128f71f2654cd82dbb386dc6c59b8fb9aeb655cb363232365da402317694837a0f2ae7b135585afc2b3785deb15306c00426b416afa8d6f0d677b971af113b4e6c1ebf73f98df83002f3e8758a7f5ee5e0b592b7f32ebab6abb24d2400243ba72f2851332ae08b70c18dd6438ffa3f69f6a35480e883ea297af3ee3d7acce51d080c59f92331c44787ee79870f6d4cf59e7d7f7ba7a97e1f7b5ccd5febdd9fc9667a8a54aeb6bda4ca442dad3addac7c22ae638df0182d732d9b45f1c84df5798bdaf84253cab92ded8d75eaa786da3aad799ed9647f43503209ca8b72b7a6840d0d1333a57f2e98a0386f70b5314426ae319155e8bd2190dd1850799326ce447df562dcbeb9d77be198db5462e113edadb848ac1a5777a4da73a829c2cdee9a7782072b2bc540ab9d9bcded68b9418effe22e40eb04ad81821763d7648fbe6475454a68a0e677bd3365f3317accb72b84405057f4d1b0652de64690a2bfa16f35a8033c2071c406ff3d7bc05eb2f0d43df3339844acd71ffd999be898d1b917ec2c80fa92bf7771531c90167ae7d06e2fb285dcf5ad68ac78faf6823056b9e788c48b45ec16959881e96c5a86e55eeb9c9045ead782a96840b31adbd503433b04ede4b0aa373f6462ad420fb511f2e7ae7c50168a5acd68baa60578fabec607454601da9bf64fc1da283c839df6cb527cba5798f8cd4ca02f610add4421461df99bb58bbfb4a9d8b0ef7a409c0910138d971ece116cf66b8814002aefe5decb77f96c402796ef2372e839a6f3c7095ad6b1856dd74b63714642d6f5faa25f2b08ea26d9d1b7162493a4336367083f321984fa4c002cc4f16d9386108f3e6fb47e263f251541cdb2eb62ffa6c81fe2f0ae00054ed7edeecb53538db93fae706d91c22fb058fd6f993a80ea60b33f2f602b485c09ec4f982ffcbcb2315f4a34f15d4984c055b4663ff7753fd8f527430c25f62749669f0e6a5c43054bfb7be6d2ee413d5859b3aa7a1c653b5d0024d1a775e4841c3898f958d8a491ff65b2d98689d5c1e6842431b3033e8b1db906c4fa9862ee2648adafaf0a6efb1ca63eb9e008c646b3719b2668ff224abf24e36763a60aa6af5d44062f5775d5992bd4c8ee104ee6f86595dfa47adbac433d75f3890b10bd8cb1c079826c7e18e4f493da48aa1be97b5c7a3887707fe7c5648d2a6e328189484c79504fdd106079c78cc9da0c83ae25ed693d707ee0f839dd50d5dddc3e60a59f5d66e8068d5eb08dc575f0d717b7af076796ac99e24e035c450318458b5a05f5b301c6371ebca8df67e027ff203ea9f7338bf83db536f303ae06f392d038c82bcc088a04a6aa8662b63144409a4710ca31ba50894c306d1b534bbf9e0d9ebcb3b1d3e4ad23a0ac39d62852eaf414c4ab652aaaecc44103c0630047ac61f482f477e93d0485e99622a8547dc8a37ff636ee5f02dbe51ce91981d595bc4bc3ec085d7853f07a6c4e857073460d61277e0aeb49e17c763510c695dcc1b83af9f2844ea6acd07e92747be25f270616dffbd02d4eeef9eb3854ce0726612446ec8bcaa3d48f7e5fe1462f646bf02854e46b7794a1a064fb77d56e983080c26d7be2ee9d9b4f0a13afd4a443986f03c8be57282dcc9fb2cab101db187cce96cf5ffb6eb5983a6e71901eab2031143a24f8a8fb822341e3568983c1f7e159e4a8ad0a1f4cdafaf7d6e4a6c00aa7ae4a846a29b1a95281681008ea392b14efd76ba375b77eec5d1e7c39fae2885067fe59fe0a737005930baa9de69d95af23695c74e7ca319478785af7dafe5de64a1b9e878e8862bda5c8983d0b88764c1e0ee16a3069ba12b89221716ab49b4dd585c4933e32eff4172c8d8a0f8323c30f076f27e6513fdeed6d69c847956f5f8947cad7c4a36d26535374caa09562707d8e63a455e70f2b7900228f8839e24b1f164d2e6a62a01a89aa42482b30fbb313e543cfdf1a340404bcc7317be281950bb95ffc9da9eb87cecdec1ccd97932dcdba1ebdb3927e3238b8ff186c5c16353ebcc566debd8326249020ab88bb6cbf5f01b1a6477f101edb3aab8c6e4c8d1c9c3d98ccac9153a860a9ca2a5d3e2b76be468ed3079576d11376e911345a097e73ca1cf04d657fbccabc67eeaa3cc35df81660963390fd5e9cc108e774622dfecdd28d61671fb501f844d06ff6e6c0b2e8b3daa731e7ce7b85a90a2edec6ea979265de79ec42f5be3fa088dfa3449444d82bfb512f2c2a29c56068ff503899a75783354ad5513774474e3f8b3bf8902be0f2e39d2ac775b49edc939c55e676d3de1df77ee8686f3622794765e33d6d56cca3c5dd98161c4ba9542a177960def0ebaab578b7548c02584368e8a684aa0539852e1a1f794d7f8a995035095baa078644a6f3e892fc6bbddcddb7eefdf6cc8a93fa8a09c3f7dbf46c177b12aae477395443cbeb89dc0f1b402353879811062883cc4fbfe651896a35742bc01b2ddece018829a55bbd3930a06f781c2e5aa255808b5fe5731b3ad6d4563dde32da089268b03a98c6aff979a021ce15905fde3a9a912dba061967fd0878e9adf8ae4a9d1dcef9f0b484218c349cb5d7d9e7d97a9b86ef07981d18ffc915957bb53ff688a2e08235c77d36364058aa68b4f60a1eadeea6e0e835343d5498c9d1d43ab7f88c487231b7d422a36ff3304eae3260e172d4d0b7fa71f90223a499bc02e163c406a60d05d5c33d4aaa6f4119af71dcf6edcda304aa589c77e923ccbbde7a19b45e1859b3d20f62a9e96ff47b717482843f8a4c3601b2d3b6a6d20a1b356f9ea60070b887b1a99ae49929b092b6fff60adbbe1de69bea7a77c09bfccd90ce9382d577e639f386955604e0d196abed6db978771ad00a32966145d55b144c330137d79f321d515141cec6dc1bce3bf841a51f40a69b0a5d7d76142c63940b9dc8818447e30253b9768297820db0ec8eaf95a34568a8f95efb2244bbf74bce21314efb23cba9af472aea2babc10fe9a91b184a430da7c6bfe00c754f1f3bc85a837d157eeacc9567ebf859126851866ef3d3efffaced4f5d6f3fa4c3fc94cf99d844a53bdb953d60f22db1fa0e1be3162d6ebbc51de50a94530fac708c4f5e17e43a9ab038276b5181edb865e9da1f603381f945bbbe2f43d06a950ecdb2ba425086bc30cd5d655ffb56e611f11e42b76410bb29ac025b2a9ba2b17205608449edb0d8e5c7fd028b09b21f169901c9dc2fb1bdf9ccf810a4763e376e54cf850ec5c52711bb787bcbd0699a6a0f3ee0dcefb45f98df9617b1fb42b6facf661cf233548118c311a61bcdbb6ec4c64cb8f6d0071b4f1f0051dee8b240263a20037d9dbf19fd86620022bc761ba11ed8d700be0e3450ded00aed08b2d20569ba85e240a51336240c0a986568e97f2ccc9f9bfc4613647ba07027205784a7ca682ccb4d71125a2e380c05c9d33110c862e063d6c8503a665ec2af7c878e983cfcf807e68a3dbbdd9b2d41d93b973d1d5fe83bb4b6ed73913d7bfa725a96bcae4b1d4aabc85999f8eed50896fff9db357934c83eb4aa823828f9446415aef94138467a9ea40eeca9ef98c50f7f6a3ba18328d12e5ebf0d8541683a53458d186fd44b5eda9946756a4078411e10e93ecd0650d6a86debee807147503a1db668355ab9e689a75ed5d927adecdd707e8331141daf72f323cdb9622739233f0b091d7b78e52343a9083b2fc08e5ab6850838386d8e0e9071edf9e8abf5c9b4750324c901ff85d8d57c058d0277c0b13e12d515f4b46e98c63994737a8a7ecd29070854c4263df6a16b0db7c95a269728a2a32dd3a2094da3095784f46d30cab27976bf693b89960805dfa652ff1bd01dde124b84b27aded01b47bb6751ea00004b738780ab27e01dfbd8d724162070ed05e69e5bc5a8b72827a363185970e402d180e8f413a2c29e4abb0cde4e6aa419821a83da7b947f9cc86d35814e757bc2fada73b574cd5e08fb2339781b2fb0659240c1b2f3e9adc4766e4683943b1c99fd3f7a03fc3b57116e82127057c1b6eefca4feca7d2bc825ef161868593bc97c8d5f93fbf2beaf50230a018d4d01e0a7d19f9c3ab06aaa927e385a4be5d47cbbda240f7589d7bf9760423377368d043127a1f9570c8d09d9c539c039eb57f3622e36801bb20cbe5d856811e77d4bba39ce246dd6954b019312eecda7fb2b4ce1e2133f9de463c46a0457d8fe07fd7990363f481940a8dd2939ffcfd108cab002ca38ef4c1f8539eaae994b7079e9ea2e1e80871caa531d585637b3d310512dda651829c1edac9be41940616d32543d79cea2280111804ab3ddd2d3d36b2f5294917aca32fe605a74a5c5683d5427e54b55c2d88121ca37738db5ccd7d2f371a3e00cd9e5db4f40bba5da81f0c484242619e2de3df235e3f15341bda86222926f2ac0bf528fd3014560051f134d4056fcb4b42b8ed6d9a04a8b06c59c4a3d0104fe219a05d890b1494d92793000c56f93b79f472d3b2b72e780ca7b66016b36003054f0349b00e975ab0cb49a6c9d64ce272e60c4f30ac07c37f554cd2747b8042fd1ca8284ec8f3a3677763a331d8d5e8d657edac99f42b78c1d7b121b6e311e7a41e8ef4057f8f07ef4ca1aa54d1ee876c7a5182528027d1cf05bbcb8a674ace82f5fcd7ede078d1d3b05c2be124965de766d1aa050278daaecb895a90ed0a0a5bc9b480aba36408c21108b88e1f50aaa151bc7467550927df646e2700f06c6227e47457045ef6f126687965306a6e9a04d63a8935c7b7311936e522979c3201a2f4a0f89549995bdb4a24bff9a7b2784ce337237f21fef7aa80c3c48dfe15e6f5a6c06c98d88f83f62f58160543a1ebbe77fcafd753f733d8ca449e39bf5f05fd62ece1f22096db29799e7b8dfc500e836150bc0e203ad2f3c72a2b2666d2ce4ad36c64899cd3d26f1ed9e6f7273ca20ca7f4211dee356251f9ec05f9804c60ed14025627f59abaacc6c30609cf69962da6b0fc62bb22f80b11de7740393f4b18e9faad27b78582026a8df278e615d7d6c16b6fbbe8b799f0d6593e622472960502ec456e5c45e980f214025d3356f07432593f0564f69816dd1e64f9d6b49920fd2df0181db45ba53780450de81e05dbabae762ce6c1a74a8bf2b6833e2c8a050bfe5b8ec8f0d06a2a1a0281817a2bd53dc40b9c00725e274749800ad5df37e872888b92dd722f3209a8564aa3e11d8b4b83f7751113d82661442dcc298aa358e93a9e8b8b04286612ec18786c14ea0a002e6db82186ad20e25446c7105d1d4352a67efaca0b5545ba4e52a08211c482173e791fa683b6bbed988026d274f61410139e93ee3e682322d3b94295e2e58e6071345d99ebee525b057b65b33f152e9347c326539db1eeecf86190b0bf5e2c49d111698f289c8d1ab62a93d2c7de21fd78095479c5db85606789e37207879f6c2630f0dd9ffabaa20364ed1234c7e4d167e5241afbc74220f90f3996dd271d2486acf95054ca266905cb90720bc7629de5bc4371fcd5dd357d4c7bf9ace6d8d9ad8c1e02353b69ae2b832dc060efd8fe358c1be12b513404ba927d6b67af7126a4e1d292c9ef131d4d8f5e14b2aac3c094fab6d0d58859d0cb67878ca1be63a10a116458584400c9a6597edcd698219a2ea8dfadcdf6f4351f02245bcc9860fa70004c8a8a67385d18ad8dd18559acc4a986ed25cf925272815f74daeaa9f5c6f4fb5a0abd9d5a0b7c1f938218888649714af0ade49701f6bba3bb6db56d36163c0498717267abc39a0d0d974dfefd7d47ae60de1a48502fbbe6b0790538e340668c9e690a61c5dd93b2008d9122c85f52850751c34c0b8fc79161ad17e22917a928041f5f483046cdb5b4c781eb4b9898f512894cdaed028d39a1239b1f74b93471159f36307a9c76b9a926738ae630074262df3df5b123a1c6a8274abacd86366d2fb7219e9c57d4b9a9000717f8e1787f9319c1684619691ee1c8b5c9034213f73a2236666cb48afd359319ee0c7ec33067756fc43400788fb6c9c09bd894188baaa9469c9aac5948402df29d2ce3dde49dc88ed6c5ee593e8a101eeb81a39f9a47050e8f05fbe46cfb0bff2bed830b42c0823cb30fe8ade5ed4d39933f038bda24bb077fd29d345f2ad10fbc5525fdaa47ca7cdfbdf5523eb6c2a90825a5d16f119f3b447f7451f00fc52697628390c83426b309d88cab6785f33f9a43459f0726a72d0e86f706134f09dc269d052483c4a403051020fa4c001ca6cbf6b6ab43f247b2291331d5420b462ba14d5217ded8c04013db2825fe3a7f20e4702f997b84bbb73733c1ecd04e0ed21632b5ecb22c4d7085bee1ebdd1369eeb96bc04af20f775995d44483182127dfa4c2679a86190d0eb13feb5913e3013c41ca64f6f542fec341470c0e6a42ac7f1460e38cf21ca7a28cf72dbcfd4fd35d79145b80b849bd8ada986ca7f8880fab1a01c0f2e6e74d4cb737224eaddd7e6ad525ffcef84683de773ed8b32a272eb173f711574a8293b130d2bd4ec879e81b472d93fcae26d385fcf3d786bbfaf3becf988233c82a3f3636912dd44b92a9127e970677642925fc2c95663700eb3b5a0f89926a33a50065d93f5dd5f1ceebf7bb951d6cd46768f3f4bbdb6e86a11c401f36bf7053e51f134f7034b1b563012122093acb5382fba49d15036a7c1b2f181bb546cfcc20af454aa9a8d4f73cbe80bd999dc4fe580536b58eb42d489ff7b5b65234604120d1297999aec6da20b4ff62d6d8d7edaf87bba17c057aacf41e473143b68eb6c6e6bd38d8850f25b602ee4ee68a7ee9f0f340618785e83752c178981a88deb0b0c3a6724228058bb0dd76027be70b431e76f478562f617d1f648f737cc9264f10149b31cefed5eef65a536a07221a7cdab0270b0cdb4ec8e50768b7378e00389e8847d067bf60bc7720cf118ce5e9246063c356917794c08c41b8453a61512fb53f254c1b911f98d6c8c2cdb2dacb6db74be0b194642312656e794c2a75e97e3922b2a90462720f1cf626b253a2e4141257d6ac073722a95ad6ce1497cd888fadaa9ff7d3c46758ca7e288ee585d6c09d48d319490a09ea0ba30a2496da243f26ced2b44827bcead7aa15bdc3a56dc6aa8794592680f50845085c695a18898131de8a95efb4e8a4dfb10e368ab8c5e9edf8c3c0671531bb7e2685c08f74b18ca071ba802f82cd1dbb724e2e706f014565dcd42587a46a6a464fde0970f69c1fca9dd1736b9dec748f17a15a49abd3c39390c08c88746fcef98320c980d7cd87e4412ab7a5957682dae162079c021a89c09119f3dd06c1eab0dd779ffe473330914ec27ad3ca7f4420b4839cde2d589c6840bb391765eb6422801bc6967242cd5f1dade43583c33310fa075f88ddcb5e28307b73d5a8bbd0f0cbb1c2010a33c0528a5e931e0146cfd02e9d7f6f02c4196e1d2bd53209b109eedf663e9e634669f9a7210d379cb61f5b1df57993a5345079cba3fecff7943784bb395651d5d93c034660ef5fdd31f4386a2199bb61541d2dfbdd61e675b7e33f9244cf96419a13a835401b241a33ecccac23d3ab955d1c494f1b828e0eda69ea834ac17ce7474929698cbee7e6c717358f80ba7af2401fd94d7fb00eb25e6f9d197e1c03c7adf8f0248b19479c75b059ebbd89d024783385134d92e85c76ae1a903eb2db8e64e1ae672f6cc0ae7b4e1fbbe82a79b8e1e2db23d0c157a0a0abb4c2867a1b740ee04b25efd615e46f073170639e8280eeb3d96c89fcd6edc1cbce9ee2b05bd8bf93f68a0531bcbca54a49b7adf582e317079165a993f1d6ffddcb107bb3e44a78663fa5493013db927937d0fc3097e6ea1d95ca7939951e03b608d8e8723bd31b6b9e08a69f82ca5182c82de7fdce6977118102ce1a44839916c4688161eae27fef28fb8014cad2c9ae114240162fac11b91bbac3045966c64d866997b10c1c62c4d094e29d7aefdbb33dce09490f04a369b4cbfa9a18f349f8d8cb18dee7a4a8fbbd584f608ebff22a7bd0a5ab2eed4ee9f51985463d9559a5d0b9a8bff8ad23874de3af71829b079b4b1596f62f272a190d9f0764a2866cc528ac52b005985daf7d525985ba4395780067ae99ba975435c73a64f39d227fe3af32caa7fd672707c275320edad98e47d1f94d47c8ec7f7238a67bdfb37e7dedc96141839e6b9e7495cac757572fe48e92fe13c61b3912f198fb2e6a4a87ece37246578ba347abfb4d4d0a85582f1def319433a2e523116776f33a628e8dddf06624be5fc6a3c58ac02cd119fa079f8b7b206a8ea05537995586fc902251e3fbd43e2557a2fd90ec9c153a5ddd6394a0653138ecfdfa3dd099fd9d3d4cfefc863f183e2e31dac76209df6fa1d9127f296feec56d8a557def1f03433aa148f364f110e8620c2c9932221b4829e199159d020f79ea14c38f569b41f0226af990a59c1576476098e1a209362dcf85abf18c70f9f1c92e209474c52e3aa638cfcf646e27c6c78b533588d6c5496a45fcd9f800ba56f4083ce5d60130f13793a3572d64a21a8abbc5f4dcf435962f53f91bc98f4084c8780906d578eca4bee50ad105ee0fa41387bc1a6910a8ac8536b44032bbc6f9e81e470bb912ecf2589f6b0720b938088e5022ea5d5a255e55ab8f32a41a4431579b066c54ee32f2bee380cc3e228eac147ec19ad75264977e72adee100d44988b24d60dfb6f9d9705137ed235c1850f4655d7cd595785e2deca820d8b995fad96f94a0f4c2a7a1a53a74166eb301b1debf6423a8ebab89a90da2ac96ed338bf455e65ca561700d248bf6a351a0838d4ce1a3dfc73e9265491e8006649b9fc4d7484e89da81472638d7dbe4eee67f816514d6b490dc874161fc7b3bd42ee384d36b7d40031dd7d48cbfc8a8d244ad1487f2b75bbdd6ccc47c15f40236cc4d14854ce97f43f0485525008d72514940bcbe787f675a6bfdb53549294566c69c6bcbe79f62b4d3cd9ec457a2cacf21b0a4a0e44c258a39f9bcecd0ad6d72a8edbd3278a69dd096af807030e5d8f2e0a1030f69df723a86154d8d39dbf326e6b8b976acf078ac04fe9d365a5616a097742a92a56a1399c87a1f4b8e077f051bcc835fd7222e9244ee98196fe2da9551709a8eb2ce11c7a0ff41b7071035588658be47de17e3c366ecb6c20248495488782c46029b97a7155b02e196e6312a6f605d23ddf90c1d2a09dc75c4558fccd7f6df920abeae1c767d1f7a3ea99b7a49e4af482fdc0ed1dcd29dcc9ec9b74de743548c416b646106e17e6b91afb8d8a89db34128ee8b92e5c5b7abb1ef269f72809412c210f6dfd4164a35e93e8e86999ce1bd55c34f11dea6fc59b3d2f1fc823992887ccd88cc0b17eb0a17a4c9b8b0bf78caf593f86495e9fd241580cffbf692f725584cbe193d397531b6bf4f65cbf5dc6d6c061ec72dd59c11a8ed06e318a7af11829d9bfe78f864b1fb97d068ce7465d81f5ddd98dab8f61e72c5689bb95041db294651a658c2d04ef90ce0d3bbcad31333ea755e0d1ccfe19932fea02394cc1b026fdfcf4d0e9649b315f3fa4c50e263fe895be0806be6304bc73a18df4c8d116be22760fbb33fac28fe7008051a8a6190b6499b57c898d3c976d532c9418c7e041c0b510a46ee108f7423fa2e8122fe3b9003a7b294386146cb74a3e0f10e04eb98f33f56309ad259b84206028c41e40cddbcd6b79b4a32a04f44a1ef0354a7f265b04165c401c95e19534a9375d7ff42e0b469910b52e917547e3cb8bdc25d0f3c0039bed84453965604720d272c3028a02cd2b504e43560136aac1f33401318e9ed6371f9e433513652b727d06d3996f705aa45cdb35e8b61fe77aba2f60858d82e0717a3e5eb7c9a6daff3627e59a30280d57cb31f8ac1033b3fab85061e287215db76405369a8b7055008f8dedf93b42e486af230fd98fcde4b3e4605ee04d805f1730b9d32870df610071e87ca9f5c616a658bcab19e25a86726bf306ec1a0bea7037da10cc1046b649eecf2958e31aa45a002bca9068a2031e693ede024c623328bc6fffb765dd6c33c1b7e824d62927f8c8e69691b091ef8699669928114ebe5ef27ffb60c8cf38f77205c0a2c2c8b66d6f7cb6d87ef9290ac545838b88f282f1af427e9dce61074329a7d0d123a5528c2d5649e3da2d597721998995af328cf6f1b531943ee586eeb61ce150a70e6ad6ffc9eec48db2b215843d145fd9020cc586e12b4a97c5dd376db9db5528e6f01c3dd3a938a4fda8f414aa603e49a22378c2b6b2260d70948f06dd358a446e9d210073f04e579c1dac01aff67dc96c1ad4bfe31fea9212397a2ad8b119b465093ee7c616b8f7f7a08b812d07d43955cb5fd088e60271976ab2dcbb89426a8a716edfdce8a24cc86847f87eb8b9051ae885fc804564df986e9e3b7fc9a7ed64643a694daf33874e330cf570aa8acfd8a77fc1a32c1f951f6be398a0204fe26abe5101fede558a1d414bc78284397d64f3aecd9df2f2a9f75f5a47e960bf3ab285c8acf77acb6fa48d56a0dfc285bff6847e8aa33effb3df44f9eca50b145db9002f79e122b72e687259ecc11126a72aa5be15c677e14a0b7d2c2d713fc1d93bb76598367366a00def3d902a639b1b2ef77aff60c817902f076855dd2b789396b62bc04d61bbeb0dbdbad813c0fbb31a96ed4728f27590448e230a44535cc4c69f92444bd20936d5d4adecf640b2ca9fe7e2e3906ec52d61ff9219d8613a87930b233cbab3916415c94bf0624436eecc3c345dcc3f8e342a7380d2a83325dbf22991224d0211853a8e0c343ddeaab85c6f4d7d13ef16968db2f9e2bded16718508857ce5ef756953e5b0e494fcbb39f1e690bd81c5d35db0653825bdc8d27fdcdad71cd973e0505b1d79c1129c84929239a68e5a6f85b976b8ce0f72d4fe69e23c96ebb2ded00a8ad266b723e6ce866adc357249799546c855112db1bbfb4c0cc0e56a38e3080adece74198d608cfb3619868ce03f60a6572fd038f0e23abb8543f5dd52b7feb878e74ad0e6542078a61d3f05f4665634fed5b3cf8156094bae2946dbcaf9c661d882f909532539908a8494924a70d4738a55ebbf0a117c3ae80eb0016d95cc8cf3e2af43f2a3f8ce2d6846bda1664dd42fa0cd59697c2cbf19ed40840efc39f50d2e7a9ea16fe14ac743f5320896364b261e25f02bd708e944bbb45343c167d4ab073b2f175d1859ab43ab6771a62cb791a528a249b8600a0e652cebb88490cff80aedfead633875ceb28a1e5abec80cc82daca846f26bbac8fd24bf7b2cf8c974cc0dc32ef622921086adf2ea6c0a392aa08e1b04ef8bf079ad5ce9a073f37602ec91dd90f48800897eda5e762867f5a20e7d1df958303bc8463090948434040f627112b57bf92baf84ac4bd22e02c71a3b65b14287f93eb1676649e80b61af922c364c893bac20df5e688a998e3989217736db9bc120ab4d10e63cb529bfd3352355de8ea24d17502c28e3d2f03667b105674da9fd7773976f2a41e8bd60547d224d4b35c4d9be974a1894d76356279e608c385cee142176de179d4d41926dfed6918669fadb37b21ed44e905f44e0c27f49b1777f1c32f306bf668dc1516d3806c68d50fed149c1c46a54df9cff71ad036bb9eb84d518323e46f770c1328ee0467b2b7d39762d684de6f541f342a7ada83d1d8945a0891180045b7bdf8aa97d04060b5a4091aed45cfa75beba2d3b5f32491697e88ca8e6cd07d7c674ed60dddb2a42c7fe273963220cc651939e37afbbc930fc946547b2b67c09807853c0144909bbf425bb0989c59c7ef6a66c22bed385186ebd22acc04460a3179b2691d714ba203d1ba8feddf87a39b91a1cd2313c9edc265b74f1ec14f4acc1f11a9bb0829e60dcc004dcfe731b60857263a94aa283f67c646e0c09dbaac246d5df5be45a42672788914f19271b58a5d9043dddea4aee2c6fb63dc001cc18ed2106fa779f94c261d37e9cf5c39ec4e6cf409239ab0d51e56965cfc319f252c6df5a8e1f9b92eb4bdf4d450f300b3900b7333eb66659949f0ac6a0f144f71533ff2a5a11cb851371635f56bd9d1bab60dc66fcbb3f29b4a192046d0e4210e17dda39cc965768fea65dab2debd687b810270d5c857325e66e41f921eb353f6f98222e08d080e44552f30b84b527d74c04d0f296b79791d26e0ae02633b1c53a83e4e9ed90e5489eab89d68b1aced7d01cef01b06738af850a7f14e6883add0427817bc1b227929484e89dd28b8241cc9da544aa7d036e6d7823668b093f80e46689a7ada21079c96ec7c2a7c801815eba836f5b1300049e591b13aaece01f9681b17e8901043a78c7cb7e6c3e94ce0c6c9412258216194d29419821a3bdd5b2c9a36d3ee3c77d03c96f87ca6f7fcc7d2eccd01f5dddc1b8cd079d847790dee11ab5b006175cf2cd1bd23d0396e626d9576da24894787b9f0ac0b6e4ed2e407390c8be9173f66a4b253faeb34e68630d5a5c1569afac49eb6a92ad9b8c04437d305759307c438bfea92a848279db29945a7550f174d5c140db764bbe0dd243932ac35c779cf05361d7ed410ed6bba6b522b3e29cfd15390672a9f3cc3627d807f3f5c4e0af852550918f6f0af94291f72af1d74da54b308130b3379940ed2d169239e28485691e371f5a1d9966162c861528aaeda876e4845cd804cd26a67f90b17b84959c882078596c74dd4a91c95a7fbc2985aa02ea55f9a86506f9824b010d8c2231993e900d517d4bf2b30031ebefbdeae763279ddc0213e8b1b5162cae11941ab6c2362f93824ad0ff158cf0ed9bb3f730cd9eb50cb44be670ca50b873da415c26410c409d4f029746a11629f456a41cae1c9b3aafb6ce57aba6bc7d6c82f34c1f3856c0f4e8bd7d4c4f7de1d87696ca3d06395bfdc6322145458f2e63cafcc359ae3a8a763e3238e3f378f4cf942fc987016493fd98e0e646158cd56e1b05da2041ff070f225521e82abf9889be13bedc9b6d92eb76821f9fd5620183e585856b5c523902c05418691145c17e2fd84bdb1a31800af7b72290344e1533af983ac57e16a5458b336ae34fe973798ad826f5765b1c488ababb2c1454b4f79a3ff0934825f293a71978105ecdb76ee118bed5c66f7d5052813f6d9776f8afd0659939afc3a50e52dfb277badb9b844d90d0916001cab20a76c0694d69b2a809c0367401dec7cfd87d1b77e2d9f8b492629700f1854236c942a59f397e7402c5d8ad0709b7be8880ca3084ea8683f6b0df89b1f529c38fd038b46500461773b130be96b6f07bb2a9fee8ae1d7e61b25aa4ac981a2e00d9e71329699b64f578235ea5efa279c51061d238491ad512bd15658ffbdf72fffd46efd99eab196afec5839fb7bc9499b02f8061b8996b42589a73b151885db7e5e9d9632e533c1d98f8de38cdf7e2e5c8bf27e3e1d71b42641add178dcc0c0e63053e66528ffc67eefa3251f4d78558cb9f94856ec2236200be897a8c4cbdd7a98a388121af695605c504f6857eb4ad342337971cf4d073384478f936f4a81c7116e654d6818f594c64d8bd5b8f5901491d87c9d04e29c89810d93ab44343fb139b85f4755fe2006ac36441cdf8cb5f68df072e7a3d62acd79fa5a5d2f654408b3f406b6d5a49f8fa2eabf936595aa6ae6fb47ae359e62d6160757e3dc7a6fc1c9d06bd40c3cb0ceec6fb83b63955ff99da7761c51e814ad576cc2dbedd2ec052f8800b7566c082291aa76c39c413c15c24985248a57f76e6d8c40ddef651d67a2ed1cb6994a27067a5420b8e0a606de1899c476f1323fa97550dce43fa1251b1fe41142d0aa228396f8f2de4dac9dda6470a8524d3650b12e0bb220275005913b8937a25f66475e1e05324f59fa80aeec59d45cf64469ef59c22e894b15571928e30ffa38921f6a669e234f2e47a1d71b4a23824243b2a139202732a6e39a0a507d36a763039f0eab7cb86273e5678418954b2a0537ec036f69945490ea8b4a50a3d4bd2cbd9f2624739fa4adf4420963b88714a7e1f9f29ff0fa145150aa3836ccbf09acd79978c35ead965fa1958bb709447bf0b1033b2e2539e2f15bb34c080abf0e7b9c0c263fc865d17e7d58992a045c6251d5f5136087f1c4ad601d9a7e4cf74a0db9507d7d980f75d8765334c0883d21bf9923aded2fc1c8690555314018af1f808add96773131e44f440c4141518486bf55f1a80cb385d534644a2bf36dc8355f9fe09a164843f2f61f297547986606eec6cedc478800110475c333aa97cd090bbd09c098b91484bab34c2fd1de84c0c956465c360fa868d72b467d430ceb8c3920a627073727e18ed549f547f3d536f607b8f53afc219b237a953d556e20ac0fd2a6923525ecf79d8e507fe03396a8348877d81e7bafee414966139eb808bccb4390dfd699d1e3cdb97bc8699830f5f8a9c2ea75aafa524b145f4f7585a6b2d1f46115fa9c207a3db1a0485fc73943374369d1604750ee966de224cb0ff0a2d8842551172e8665ec0c1dec8228fd181319ede44dfa729364d93f40bbb729974db841c2535979890bf0112320b905e72777cda4447a5010874d7a3db503d54a9bcffad1a5a721e5604438bd230dcf7dc11ca6b5264625d42b2a317ea0d1c119412506276b0cb03afb95ddc74a23809e6bed907b0527b2871f3a46678e622ea55f11717fe273758c7733579bf1712dfb99bfa861153fadc823335c278d20719efc05c2e99c4f819e22d3cb39efeab550105f4e7c1d055dd634dc1998a76ed101a1e7965713cb8a59e0b026eaf6779e3f434b7ace71187dc47362518f87e59e0ba12e004dbd51d93f2349906ff34d9de182c0f3c1f0be07d690527f3793a64ddd04cd713dd9a89555d411f6eabad31a3421beba9106051e4bb001e1ba11a5a5ee9850804cd8c0da5a6a7df0394d85381435be9739a3f20f7ac06752623c8b64ac360c5d6be9938ef1c597c30d17e834b08fe7c1c3046e21519f18f7fbc2623a9baf332c2fc57acd5e856259b64cf95e3ca98379ebeb5eec53ed0272d161ebe3e37a9c56cb63ff8829fb36b3d51e06d630c9e16dc15bfd2abb2abc16b11e5b8f1007414e8235fcc28c52dcb41fb31bc63f155515975966b1a5b63091704574e32287670b2207d7dc1603a01577984a90beeab9e030401f301c19627e683dc12e3702e5e370a7ec76c650d9da0cd7cf3ba938d928c06439c7fd6c17ebea05e45ecb3481754018e8e24aab21afe5831381aeb74d9d22e7bb45b84368749ae52e92e0cd1329e2f3440a12723583e79de3794328a25b0bf1a6612d8a53edf26256fff9468e5ac37c188301da3e000c58347211ecc5e8ca579fd38d48684bc7d687b5dd321dcd373907d46040e59cf3cfa5bca566ab0979532524419269d5bd8d5750ab34e64172895bc479f541bfe31609ccce1e7dad0de12c58d980628d4308f583b8029be53366ad08fef63806f86eb1b7ecf7c06770e36b5a7029e351947d7ee190c62f48844f50a1c2bcea69ae3f67493bd420f0e504886cbd6b2147d946dbdc2a7585b738c228fc77524430786f728357faf9bb420e6ea554b218f916854d8cfee59c47a58c12f0e284f8013b43a9d5bb2fa1999af76e0609977a44f0ad90104a3dc65c1cfd1bd83a3f6e002a387e6bc115dcdc8f883bb36a6d7acf6d9d2faa0aa566fcea6457b8977ca05fdada27468bffe439da1611b9f627c4bda3c4b5a8b85d41c4a5bb96df12543667b35a9e73455ec7bb596ddbe7711d4b8b2f3271cff4ea6a1a8c0ed2588824bf8129462d2e00a8b8cef59457174d0c21ee1e54ceec3e33e7ff0317ef922f513207e31baa29b921b4e0659c02c5262782fdefd8e017df3601e553e6e539aefb951106b861e707af427f6c25676a30fab6ad13b894536c277e394a479056049b195d7a2e6a075a0bd92bbe517377e30cbd42fe528823b601cb044616718dad0173f5eec2a25430aecd8038e379f1a37ed6b24ef105ee9d13273c360ed7eac39e921963a5f7bbe8db57d235da791fcf723184f39d41879d9c0d6a7c5c631dbe0be1ca9087e31987e47190cbde1248c6be6458ceda37e53f4a3306e541344b50c8a16f03b61ed3d1202d483616c91bbf1b7609c3b8afca5d03859a85bd9050e5ea6de7b677e0210afd279484d7949d0cc408a9fb92cf47dfb5c9eb3917507eb6f532654cc700e26deed982f37cab86a6b1b40ff1913f0f107c01a6c594090e62b8a1069b3df434ef9d615278c6a14c27bdb09e7a4e3957ae620ce26e583b3f659d5e303b4897603370531d7c2f815beb619c257d067873d487426dc9eab12e6dff226e6453ba6277008d3c422929dc12767cad754fc7f2ded82fabeebac5347836eb1c9f4cbadb8e9c2f5e97ecb295e7179a1187bc79df5c0c3fa9fa339a608a833b3b695192ff9607f824ead99d568791b9578fb65a9ae284e6d997f94beb937c96f182677d3fe238637915869b0d3c6d0ef80d97927a32fb6b36087be2097517b56a7924f3fd8e79d57d8bb9dbb7bf028d8d758ba4de450c1f6bdd393f7f294eed85913e3e3356838230e72bc092fb85f0ecc2e6868f3be3055b903b501975cf207dd62888522fb68b5a4fe075a16feda4f85bf5dcfb7ae800e98b5b26b6508156640291b4a9d1af1b4236bc3001fc8923b32732adb8eb3c1b0f2b8b0d9e64e7021a4fd75d581d8497e33b5614c631409e58873070a77c45e6f2d5eaa2b8871c9f79cf05e63212257e3b7c068559636f9f0ab5ebb39a1a606480e530faf9a205f0839f8c30c74ab9acd76f1ed9f1830af3218f6eb980133cdbb47fd9910fabf9627a866c2053801c1e6be482ef952fb31fadf14e0bb028c9e9ee10af431ab7800d78709c6a2eda633def360b535f6c103fe00ad7b23d543282b757d9ad6991e4ae1e278735d94ce89268dc2bb7989402b488e309a7b927100778e215c1c37eed0a8ac27ec910bac79eb921218c29fe10629cae56a14f1182a14f7d18d85b8a223abfaed34cb1f6ddbdb07dbe3c3d05f8243292b8389de6596881176d2b954b29f799e7ed1fc0262351138902a4f45c3f0e1c64591510c1615d926aa47275ed3ac34fc82450a22b6b3faefa2b2f0920f8cec6d3ee40c054583be178f8e1c7221526470590855989edff972bde4f5d1a5dfb7373a32271dac6fc07f46401f900f66602bee956f13221a4506d93c28975fa9e54da0739dd0a6c7fc45cd2011313d15d395655e1d588146c7220cdd8fa425698c788e8563193b1f951c8481ea63679565bf13f5253741722f84b3b86aedc5898f094acf9270dd407532c508d6ae8bbb74582e7c840f5412249a5dedc0c5fe1a23d8028b60ace5fbd8b4df6ba08d044d901abf8d220df55585f89c00d7c45203388093b4a1f7101629215b6eec2cbe633cfe56752980c73d0f786f76c47669f4b2ff8f8ad7bb7fe261ad583ac24b28bd062f23d7f2444d4e75770abb7e834170e281e53c0e4eacb71cd57170dca8736100e41cc9c332ff58bcda959b15f7c924ff3ce87e1ba260f70fe810259f876d85563162dc1e7fc481545966009a79e0516198071c22b5f837313872f7f3b95204cbc1fba9bbe1f33ef594ba90046b9b35f5d6e4349a2168157c4257128ae07cee05d3b5c3b830ad88dcf5d8220b52451a98803d6cfd0edfb111f3c7b217fb163fc9c99eef74e0fd1e2ad47c6d896e84ea73fc82953463a7a9589c24f5c23ab1328f296067ce2f64648566630aadc880c1e57ac671ca1537d980fb58d8da87089227ded61c4f1154585fa71a67de203243872a032bdeef405a2fb1ba70146ece78c6f48cf906bdfb8f562ea3c761c8284d1df0b35e2fc19a6e141b1a2d63e91c18b8f2364507c3e4c5b7a0864eb1130d4b2fdafdd1d6f596ad8439763cad9593b450db196e8728fe6644a8efa825a4da81f5fb363df69c44816f8cecf9dca57b43e880d5b1f1d5d25d75b725561a82b39ad6040be8600d48ad3a95e3309358ba0ede3318726328de1521ecb04b33e91d57347d5dff4a386d5e14f35c66a6d70d1a09109b758b75c7d984ee900231964f99663a4f5ca020c99ac54f72ac453d34d5335149c8abe9feaaed2b0e82314412763c3f9edac7bd7e15732301eb2729086c7e06d4c5588b962851865c7c382580d5f6230a8013b2dd9b2ff15d044582b859e96bebabbd6540c58ec682aa7bb69eff1ae0036c38d183d9270af939dbb6bc5633ea8ac43eb4e885408d1c6bfa76a9bd59982060189d9ac432bced62cfb14bdf36698a67d7deb9f2fce8f5e69eac8c47d3db5699446bbf92491348c155db1ea5d629fd235276c714ae92ff6c6ffb0dacbe5a01a972e08d2e9f9bb82334f4f85a350ec8c9c4002dff8adfbb6389434f44988d963d9251d8e8fcaaef7c8d05f5bfe342aac2aa434e41d1883f7bea13ffcc5b0dbe2821739b8033a5bdc94fbb0687aaa911af9a253cea38735b60fd5a31e79f2619fb1c07a7b82413c696b176e3f411b589bc6c3b677404e4df5c89b3e1ac8c2893e44f3d0753ec24691cd8316c3ce5c2e50f745cac0b92639f53222265af07148144283d5689e6c61bbbfc5caf7d07f78a3f88105e41fc967aec19fab922d36ba9a18fde99679ffa78906db3702ed5d0a3508ea8e8aa09f98f7d6e9de19cc668f8b5007bc2549178d0df074d56935d1e2a13c5f5d2ae465f643f59622ea5c669d3706a580719fea26ffa752d3c291985056b0c264c628653e6bab1c5f84efb7970b0a66b200e1e624a79d8429c0b635d98f9a85ca87f16ecd59685c8bfc0087f0877d2647146127dabbb17739142f91a4ce9e53785438786c064f47890f89932a20fe3630b7bac25c287927e5faed16473bf8296af25af0e31df5d199677f97588803a57ae101dc2e15cf2732289fa736b32ca35e136b264d400e669ebf9044f664470f3f92ce7188f2d4560744e02785d6a9a8f908291a48a5308c2e507bbed87e80f266491a63084de68b2977456e824327e5a7f600705d7258ffd63dc9defa517fd6b951e53e3f1c84ea894f1d9be9379cbaf1266f37f7d40c475436ce802c84d7b7f56efdad46fcccf68b18b4d40bdeea711a7a2daa9c28daada3a812a4b4c507080d4b18a02160c6f01bc41ea0cbe1e1984de7a23a9e759a2e83e6da6051640aac1f8ab88de711b89b967779330d2f14bd18e12f5b51284d44e215d52d6650ff03f8df45a83fba85b05b3b022615040d43720cc59559d1b5eb76a0ab3546c3a5e93d47a61aca5e2a6ff8f54c2e4f7d2f18a3e7374d4286d106fa5a69755169078fd58618e7d51e61468f7e9a37f5a9485cb202facb2581cd9fc2be483088b972604eeb05b0b26a6938904f89046081869c00cecb5525d48c712099a380242d2b41677149db4be2bb0cc3c7e94fd16d59d55f96bd992788e6e6a5c36adca32399fb854ec874212d4b2d72e56dc97f05324b217cb50033aa11f760d16275b5317cf5aaefc6576d0271ef54ece4697e2736d77d2ef50f3bdcb6020e4a020078a5dccf984b1dc5f4faf7d0fabbd8b3b7346fdd817b3555733fda22f05c9fc7e0cb1d6ecf124d3d44983b6fe126f19f3c04826db9771df78e21124ba2da2ec78dc0c7de533c820a5a6e04aa406ca064bf623726d78729c09e8b962d1716a13902f889d070b1019ff3dbea0d51d9e68b3fd016077110663bef38ea85b2e765ec7cf1dfbfcd3b5a49137eec17f43f1d8fb157d8fa30dd2543520e8a3f030be0fd576eb99be93cbd055243b5447d40d7beec88aa5ed74bb5e9be3b76de56bc35ce86c2965dc5c62a11ad64bfcca790e5fb4583091bf8234c7a87b973d907b625d2c7719b4a269c0b0726bcbbf6c28a6eb56cd4d7bf8c2cf3fb221bb0eb759e2ef4ac82d8577b34cbf0aaff6064476ecc6ee470fea9208eaeafd37195b270eedef6ca1a462ec2aa875c3d89ca3c56e6193ea4c7b217596bc74783dbe5b259da202469a4dfd1f41097fe1e1672b0936644256b48265efd1a275fc6886b4ab5adb528b68509a7a50211efd884796d4401622fab2576975ae5bc6ae306691666b9b0eebf03564e0f11557b701605c77a134ef83706bc8a304f6f708cc167bce4fc69da184e6b160a18095396ef9e847199e02dbc303c6af9addceadfcfb6b6201d0f417bb9e1cb20b5130ba25e92512d83ca1b27f97afdf7d4226100404625936179138b2d784ff190850f942111d2f128fe1c28391fcded0723a67785683ed6ebaea34ae770cf640783ce9066b588db580aa8314b5adcef4b1702ee566b75cf2504d139de877cc115d8cbaf2865aa9bd6a645d1f51ff76331b3e68ee9028e952e63d9cc0389ffc07a5c52753c4007934fe44c4f0b9014e8c914e1906b4b7c725e4970e38b48f0cac2f46c39a20cac2e544ef53ea35b7966a516105db2ed704bc2503d152c5a8ed9c7bc993b7bdd3c541bcea2137a4d20b5d6781c228fa800fef00519fe8c1592cbfd394baf880daa75ff4abbff60b3a2a7f26932f76d66c70852ffd890fbec0b8cf9261fa37f024e4a80d4f8de09c43ed41682857d75ad395e89b1f131038d3f6c0b1f4a45a865eeae763668ae191b53bb26b1fc690a29070d884da2b12ee3ee9c871ba696dce7f557395f4ba19805740bb6cf9edc953ac5c543f69dfcdd58cd654f2dd73aed01d2d3419c8dd17ba1888d680faf86e6f07c611a42658bc385219db1ddea3364af5ec53689b46fb1cebe3b1ef8538fe2a32e0e4dfa48f4e4d0269ecdd3fcb7f2dce745b6e6223c4c9989f08c399481553c9dfb51faa2477ae684e4f8b22ff10817b90aff96833cdfdc7f79eb8baca499dee70206efd88066ef01bcaeacb1f8acba60fd52acaf233dcf6cceb9942306c419433c3c07f57a7edbea449a8989d9020178c8b61531a72268c4ab6211b6a4ec2151909c58049be8bd800a42ced977c66c3061befd47f87c1ff8fae9143b49c5ebc49bbb9a2c7b8d0a99958bba5f91a306941e91445f35baf8b1f8c699f4fd92241125013255c9bbf4f8065b11cf9bd112ecef113486bdd63b286057d8822246b06c4b551f7723c687828326c6c7932671348f50e698cc3f874d098d9ae36a758376c2bd4a92e3618b2f1e46f649f4eba34084733e9c9991421d243421aeadccceb0225fed790008b18deeef058f683a3707ed31926686b5252c33f403ce3b7815ea6031a64cf676577d5ced421cbc53a86c2246e3e9c2d6bf85a3374bb9a4c3e530f09fd0599983447e1936ba6f744da411875ccff6c2f4ed0b870fda77916e31591d8283774284451d49e3b81fe8b61d624f88d6e0003d4f4756b84d46ed5155403affc04181153033ac6c0c2f32d9dfa34473b7374df58cbed630b9877dbcff939afe775f0d5962015d2a1c027b996ab0eb7ff24d5d573d1c75d3a836e5080f4307caa7153da8b603e9339ec8d7f29d156b9a6c6da95e05d3241f603ee854e60aa32c5c81f0ce48c89dd6bfd4d9ab2a26f49e25d00f145f4b2f1c9f1b78cf344198f81c765efcc6e0ea55fc07e8b100dd25b35cf95f1a4ea530c026ef53cdb45ab0114355b322680668696f88768be00e55d3150261e288abbd9bc2bd4da8803c730f8142385094cf90e86701075300f30605f89de8e710783306c4a84deaf7c7f3a8c07696192d7860b186b579ebbda1d4c3c0215e660ca80f359ab24643c13f147350c87bc19f52b40c9190b0a9f0ad7d3b5a4589f5b326a37d9217e2203a7413b3a6810f0a573a680a1bbf9f8cdfc9fc7d69e5d374a10413910e899a1c19702753e7ccb2d71312febdd62440072ffbf7c4465aaeac383dd1a40b46004194c1c7b5852e4fffcdf66563bf230b4281c5c12073868942f1c1a4d9293279c66e405c7b6e11c9dfc58921a5f85072899d6fc525956c82f382a9b14bd872b2f9f2794585220f55831f74873d4ff5a1ea216d272c56c193333d4bcbd33065352abdf4a0ad9cb098a387a53a2eab80b264f1394116f4ef8a09a19dd193dc5d107074cef4275259cff1108a9a0eafde95df7d73224fe961beb4123a765bc8e5e6d9f69ce78066b522de01eb0b3deff102dda5788ce4e86c8bae326aacb6b85364690e8b16c883ef2e7f77fea5ced9eb52f7935625a7b005e8d6509cfe0370f626d03375102827443933ba1af29587c60d6600319ec716767b1aac7dbfccf1c6947d6e87805427a4ffee4c336b2131666587ab8b14408aab642d0ea075f6db191380beb2a5d323a52b630ac5ec65dde4df4f7371aff2176eca50b4b8d741c92b7d5cd9a3fbeee2330a090395ef4e6e09d6aeb64f7856e05e135aefae232ea4eafaeddff03978a2dc8ac037e657a821da6619b95da5b256c94e18b65471bb69ddd4f272957763f212bb70c873bc720e4458db034ca3e5c7f4316a9ec481cafe56ff6cc31002dbae63467739c3734857a51b49c45cbd5061bc012bd95b03a1cb340c03fe5b7e789a91ff9eb44918c85cb2ad96673daf106b613b8a2dc62cd207dbc41877607bf0db68b9fa87b3b660f1a30c1418313f70d7192d5b8a8b417dd56cd6634d814e1a799ef1e045dd90cbe8634327e5f7761306c7f4fa9c476f024dd0b428a0e256ce476d00de16a085e5fae291c5e04890855bdecc409496e8192c0003f322a1f025b5f3f0425235b169453cec53f1126c134663e9568b3ef291cd8e3a7730301532c40e8a6c3141f6aa1d7893faf82c1b923682bf9dd90e2739843b327d8aaf450d58c5fd3bcd7297f53c21bf3ae9de8adb8d6698aec6c7076a6363d6fc1942bd362ed67327fbf4391fdf1f1fbd24bc02da015a47a252713c993672b7726591ee7a8dd3c52b51db67f8104eeeb420fdfa73abb4ce414c37f7dda25cbadba49dcc50689a7545f2f5fd771e41748887a31ff0b4b8df6594f545d6817344534725206a4caa41aed0a58ea4a4b85c733d8e8a4ff96499f5614951927e18eb590b6f3e18de68f386d15e2173730b7243e0bff607d09d87bc478c6293208a11cc9a23c8594fbe2d96261c2d2e6a5e485ba9f73ea4943c741be1e6b33c398c5dd5abcb90ed5737a5cd44fda4b8758ba464f4205f739ed2be5f7b077d08b77a89c722dd8c6094315eb7e955c3e892171b184e9e43502e87487ded9634c75c013a1a168fd684d1401c5f7758163efb1f7275f3876b22ab2544454ab043a6e871af6e086057a5c5298406ae79bd9d51b996af7126c22e8bf08a457fffec3c1f18160620d494285fd665748932cc946fa5ecb43c245000d13502ce104added12b0f186cef70a6b7bf9ae0221557585a5e5fd0d27ed19bfe1ff112124f26bd8567f2df288f189803d0f5d9f1896268167bf84cd7b0eae3428e9c4ee8aef80976d71d19770be3852b762f9e9240fa3726c2b7c0420c7c00bd4e887af3c542c36eb8557eddfc3006370f3d9ebe2b361a8b4005c1ad80691b80e127454c5aa46c0b56bc5942ca3039f50df5d947354f058cf2e118046b70e0a073182c09913a20703df0e77e13ebea24ae70175a8034777bb6d78f26a27d8a1e2f6d8e486ccd08efa4ff6c47a94fa1e5c64554108a4bffca155f2406ce50fcf0dbc7122abb4d23d233c21e72432e2a004de651b136e1b7ef098afeda579674a5e4f7429667d29004000856c4faf29992f59c953b0d94e933c4bc794177103990c7f4002310a9f6036cfcf7e6d68950e23be326972896651f06d5255a5a800e2a5823f7b2fbc8c257a444b32697c5a0080845c6c732ff060326a8764f7b9fe1d87f96eded0d634744e62f729477f82af3975119ebea2b89a1ffbf3241da0aa345a207af949fac085df5dfbc802c93a7363ce8520f7048f00f0b9f687b5f9684f4982de6565f43a9e1276f200c1e71ee40215681bb7c392531966a728e6fd51b3888d8a97f1ecf8e71348be5d6c5e7d0ee3eed8f998ed7bf350ec43a2ca955efb7a3e4e4b5147bf59a0275713a5023fa5c786a0f8656b4c0ad19362931404907450748434a8c864e8daa4df1faccf057e3a267e2b596d0aafd1b9cff52c7a2183aa2534baa848736309694c0fb9cf5a042cf10c4e13355ee341164afeca7b9990edcd62e97b0b4999522cdcf6b2c42345b6e7eb56b4845beaa1e0841e8491f87dd242843956d61f875c785062c5b61fccd0ece160847745522ca5a404b135abe851b9841dd95753efd43fd812aba9c2a50f99e679148b58b840aad2591f66a532f4372f7d59628cd271821eba29374072f14ded938a0c43062d4f826ea298759cc9298ee005847ffe9970e1f56d6d66b92b29a8fbc8c5df76aff3834fecd6b528f57d2296de7b046b4df6e7daa53c43679ebb0931a9bf9ada66b3e0b3124a3a09cc073518c95036d01bfe0f84bdec8cf1dac97d50e02cfe3450a9267d369ccaf335853574f841f33d5545d5f25f446f5858f067addf29525e1d59d9ec701b9db1aa8402a39917c4fbb5137b800a7984aa69d60c8c30a0936a03e53130c79e5a8197c1766aacd12d7933143a26a0ce5a2e9a64b7e80ea3cc3f9f102ee18ad115d8895731e6c537219ba9a8a3b0117f3abdd0c0c3b9bd53b712e947ac4e06d55f6434c160b7a070b4c739246eb4238c22eb32e6a9f2a44c42e326bc3437eb967053fca0454ca61ce877c8f9406608c443cb906fe690ba88135c789372d9a491d44ff5a6d8caec2e8f82c5ded0a9443e010950f257b23f928aba86318412e13e68bea80395bcf35870c5eaf53d4a98aac78eb3a5993e9ad6b370b7ddf24df44effbfd22074181c0893fe0d73b9c338c0526845a6ab900b7632cb125c53c3300fed3c4e6eedb1ac2b1ebae75c8209243d3fa426cf8bfac194801233be9c39c5b4fcca8f912deec2a17283f0684ea27a3ad54bb0d4075f6ef3f8acab9b00fe5430b17cacfc0478dfacfc388afb4036ba0d8138b8464b62c4a464499e0a8f8eb2a829bd99d3e2cd73fc859aafb985cbe4f1a1724600f1302e281d0916eb31a8d0c38f69ad657d5874c74940b8b1cef79205e21c68a0e08a77f5d95d08142119551e3a8b6eee1836357ff1654167a1d885dd95a686b2e5eb1d01ab2bc9ddaee7325338f82ea0aa0d68f095c8cde470d538c345f8baa5f2ced2ae64cdc457ae0f081f3bc940f1dae3fa992b406257075f4058a2da5127224d3049c1fded97b958d576b4762ee0e552e6eacbd1d4e4964635f81b66d711bfce9a7aed9ea34a85686ad5d9ca65ddb6e5b4b88089f08141ad9d0c003df7394745ab6187f9ee818082a7f27222feb3a4ce4c7b62b793b9626b35b0fdebedc03e914798be61c642d084c4d07b252a9de5688a4c5a9befe8a39b095a6f8ae80448b46644e6e2b13626a6fcc5b33ec715c0335be71da275c491de19cf12ff87778bb3b3cfd679ef9608b3f7ab9be323557d5b0d16841ec988e717b012338e064f801ca71a7de254a9fa79ca53025951d91992ad4c31391423ae964904caf2506bc3b2bd2eec39cc0ee8c4c9b37efd389ddbee2bec58e1069651d205231f1c169e0252ff7b721a3d00d9f4d6ef8ebec8f62bff0bdc090ab2e12d20fdabcac91dc89b0d2de35f3e237b5106ee1d449af8508258d8681d28425d9cee707b9391623d384f0da5cd0ffff5adaf13ad0ce8b418a490b9f2e960198c06baab003e411fb7a22682804d50c37fbeb4ef82ece974cc5899200547120525581e509b4dd1842bb5eb493af00f84c3409b9414fa604d5bbc94a461594ac7c5fa0b3b439138059c1962d34309c037a2865e0bb1ccd41e08afd242474abae5bcc0d0d3eebec9c0fab3b393d3dd462cb8fd9f30d5b775bd058a391f7a2a1f65538a27f35a968194f611224bddffc57a6852152300aaed6323be2800b94c7267c905a8094d87031202a3736492ddfa5680680e00424a0206e869ca9af0c7c6b82dc96aa49823a6c081a7f8f56884d776775c1f8be22fb99f4ca209adbd6334d7f947c6b81ae0cf84d4b81a0cce5e7e49c563f85f1fcd992d86849d6d5cb62b8fb1f3f26c68781a27ad23ad3253d706d3a551430ab68400029c9e1422488f45b72ac076c30e61a1364046c3c7d3a5f0ec449647b0ed80db70292b345463de260cf2e326c801dcee5ccb98936dbb063686d95a5c6d882346d2d2fff451ed9fe912d0d9e0feb1a72d4f142e10d1e0917a27e5634fef98a6c98783a1e16cd9ade11f391dd5f08ea15ef028b79579c6d993d4b857b5ea96f562439b9172eaaaa275e7aa46d15ac75a79f1f88f1374ebf2ff5240f74f56b5df789d3b95fa5218b6472e8ef30061eba4d429d4606a23f5e6d13e0040f6983304fd273c41324dad4e0ba8aa68038a1f5e3c161fb4873d1bc4a616d1a32224a1f18fd9cead6ca8a71d8b7f4c1c4880081932a39b9e63e352b8690356df6fc306cfdf84c37f5d997a911e201f8e660f1956e68076c68f3dde1bd69e6bd330f67c0a73ea0fc96689dff19492b2889e3b1906ebedf676fff68b52f2a22930935694ff50c99ea5c072b3c826d71cc3169f6cb46b2dcb21a3fdf1484175b061ade6261c0e41e39a9faf0673492dc13141a669c902a8ef753ed0f682c4a43c8aeaa701ceb1d58a77d05d607df972aca91ef992de397ab0075588d5522ae92089c2e63b260f4616f344975bc1ece9aca2eec3a0b28c725c4596a0f4e9ebd2864b44148512d891c52d7d4dd239ba5dd16c4b1d5b99c0f50306eeb2a445ce428cb8cce3c26f181dc07fa0942e190ada48a44d7aa79444a9005d84e9dd3fe3c35453882e025a1088548da59cc56631c9b89e584982f950f72efa265a946f87e3c084abab1d244014666452cac9be5085bd76fa4ee6a622f54477cc241c566ffbc6b3d1abc75df1d5cee3e0475296e094288565a7c64b6428379aa280c0a56da98adac9fd0ed3f2c918aad928440f8ee2cb90c2cf3c732b982ebc966ed589bd4b498b44718bdb5492afabc3006d9545d3f4b051346ad16441d2de1cb2b3d1d9180436aec90531a749ec695b5a9033f63080e08da7ba88d1a90bf17d20c52fd23b28229668007137a5be3b3115617178408405d7df834df26334e03814218e32080e98cc10c7213ff814c32e9392398224743b14f373f22fbbbff28610af4995dc35855008def3a7ae74786137abec0c80406a84982090ac03ce1481e42383162c9404a29f012bb3c0f7857469a970da44c34376d181e3a1e7da17304b44677c13da16d4702e0c7cae90a9d087b5fd5332357526b60ebf07d5d1367e424242b5c0caa85736da6536dcaa45453c6d422735e2adea81845adc53db81ef5ac727b0b91631f94b14c59f9812dc310f6d73f0f0eaff3be67544db23c48873642cea4ffb08ba6090e82b07ddcfb1cd0769e0857015f399892719698f6a406a936441a8f34bacbdd74f4b9e500dfec2ba8a7074a36a3c5030b46d7199e4d3468118de2c3f668b8dd19d00a7a74a92087f44e827c9e98a467c734a84ae78190ae0baae3663818a37b017233abe5046330fdc1de542ed3c92066ddcacb5a8f6053ab91ed002df3155b18136f6e5782ead1b709c63bb06d3370937cd474ece33cdc9a21650b8ac6dfa1a5470034b0b2e2f691dc97b5a0df494060b3efc0a65f0fc2c036e767aeaa1446e901b8a03f091d30129139fa2463cd50654d39a72401919318de2a7b70dbba60c212c7c0b723eee388d1e834e4e388f5dc6fbfa0994e0874d3cdb4345a766f2b6a8265e9cb72a7aa6faf55fbd4d3ad2d15f598668e5cba4af0e8ffc4a64a5f6b34af8d1f102227a31461fde63a3372a992bc75964e00e6f465e5c43d6c44eeff08fe6f2903889ea49ce5c7b990d822686c3784870720f87634d987f8f737748123cebe354dd661b6d5f42ceca7993c0bf0a83659506432000be0a13b1186457b0696efe4d546681096bde1087e48a8930c44d9469ee7faf03eb4ce68915876b23502fe5012d8f8552602d7fb9e08738f7e94b38c4bb4ba2bdf3dfc37c95a9c57c98939f3d6949b4b5c863535d6d9caf11b511a69c89041d1464e34d118935ccf183b717b0ef96a29070538f538681169499cd3466515e8cfba6aba65b9b18a5e876cf1e502e6ab88128a77787cc86f6b3c9d825813029cc8f4b392c2b3a279d8c1e0bf00b3dcfa60c8272ac0acf3c254eb2fe245295272ada6d92e544ab05d86a66bcaa49464f35f9eb517078fd177006b58120672be509720d2ff2663a629936d90cc0b2239c9089432036a75bdb484e873e85060d412da74c6fbf29df1aad2423f2acc868314442ac335604bba0094d78cbccadb548a2063ecad710dc534fe19d7b4d22ae513a37219bca7b6d867036fe543a4b78536d44938e9d6c21bd088f41e904ce5db0cc45fe134a87168fc73a55b2140520f09f86fed9381d12306f9074c045d9ff29878cffaf28872a3d0e05600b798607bbb15489ab441f82759d4e0176aad9c32cc0be6717c71e1799fe51ad66d21acc6f6fd7126bf21a2c4c07a000bce489f2ef963b5412c775e65c4fe63fb94881511742b2d6a82f73db26fb52c90ff3539f2a246b24fd8999c4dec32240db2c6ad5a40e9e104c28b99d1b1d841db67549f7c005c6da992145799a2cfe37bba434b45dcf3e844243d0c024cfc4692b4295f272d62c41803c2cca21bce7397a9ffe92b24f433931bace75ab0777f0dfccc1b3bb08e44548a541c1bba6ced82b1203c5632297b9d87b16ad19f2404216a0087f6acdb23eae4ec344cc78a520cdd1377123b69883a29da26b455351ef012e775e86cb22cd0db92be59aeaedfdc2135c55b57bc55f638b8a8ada6e61d3da6afe391fb2f8d05fcddd1228d90b169fc7399f8c404a2b26936bc8d5cea07f3749c554912aa00c7caa486c95306e26b3357ea741c2c6d274770b3951e7de208a97ba39a7eb4f7d6c335d7e2d7cd2aedba802a3c0dd6f105bc95083248b3005797eb5f66b57203ecb306278669532a525b2176fae18e712d044c357c4df47cb6cac14f1b31329a1ea938565a547cae86df79f6e94b4ddfb1bbd5156ce2c1d426e7885c735db5974006282e41e21ec6777e5cbccfca6a6425676305d23552484426399c4b1e265fa562b1aa7d2d12957d9e158b6c5ffd485676a482eee964a6f6256469ca260d477c04ed641f8294fe8a72411bcba490d742150cd9c895b36b1814b23ccf889bb71de14575429b677df15da0d7da994d116f1ef9db88543427ab76b6bc30b293f296060063906b9e48c77d0cf8dac4f445d2b18e90cb69e4f9cae0df0da87bcac7a8c540989f10e30007cbab5b0c7c72f617b41391b93615f41850075a882c0e1d2c5b34cf60e178168106a143254e62935430303bb306aa1b5163a23ccbdb9d14f82d8709310c14b0fb5fa142de07a7492a3580f33eecf0e4cd63819d79be851d264850e52dfb08fc19bb1108923cd1d708f1295b179fcea699af847608f168f08eab5e8ef0fa04497588f1f6143511d0883f8a52d1b16f6e077e28c67455c1e93637d2d007e98e869c8683ea26e4bc537b4765531334e63af5a8a9bac6612a42d2177cc5751d517ea019bd9962a258ffc27364142edcfb6db2d696d2ffa3d2e9d0af2abd11da90594f66b9a3118b5d9988277cf1fb23f7e8a089bd34ec1af57cccdb0cf8c1641246705fa0320e487358e2366cb82ed6277c830f386f548df162b61f62449de6825f4105d9f4588713ec8de148d4b99ad94689e5d3bc0346fffbfd43dc19e738b5204d35cb82a71159359f056af3c7cc440f7bd9fb269c90dbd88e147c11a19cbdd2f64b5152792bc427cbde9ed6915c2fd7d162743d8eb40021bc789de1a579284113f97a037362278cccdd6da1c43d4f4698fd6d5202633c98e7758fe3bbb69aceefd8f11e9cf7f3cce0f9fa26c25eba64606d784b2ead6e11abd297ff9c83d4c3a5298e8985c381a76f45da70a0366bdafc00c945487d8453beef6b138cc423b765461b5e1076b1e579a6ceb8ac35ae76e72db186d4ce32eacf69f08c6e0915efea593858dd757dbea6326161f3000c9826a03f90dced2bd627b48fe3a8fadd1ac4284ac299b1eaf66ec190a02292628cf7acc67aa1e6c4a3d931efa8f054c3efa93c4896a59890f2c64d9c9ed53157d813f6911e756d671313211ad025baceda823cd0d60c38b5a6cbf035777bb7a26276fa6161566484858f149bcf4864fb65e58b2aead8f7269b0502b6cd27583e0927b4c896aadaab99be0004112ed97f0fef21f4d72ac2c85486e40622e75c65aa61200aa60530b082fff7edea3f8ff9764d5f17d4a1d5f4da2aa8792fdbc37d9db6d73a29cc534d97fe81cb5d95b79a95085b5995915c0415c80e12dedf1d4b93e5876c1eb187ed8c36b8223071903d97d71ce46d61530c028d93c1799a2eb9efa2f27d94cbdd6de9f8ca2dae5c4229ee47eedbc72f182a65e1e739386d87e04a0d3274935831ffc822299bebfac4761186d14ff5eeafe1276f7f60ef758468333863db2357728c0589ac4dce30a9bc2423474439c1150fbbdb8d3da21419859d3a18280e2136b4da2998bab35d94270e10d175a4c2f1a47d7534c7918b4c31830909f3e332a03716ee1da644b89c15cc0af36385427d3090a3c650dfd1d2d80f7b0f572a58fbdf7f0665ae5b5651763128ffdd98442ae337035e59b99e170f60b833b422274b75d1b080a774ac9e2c255cba99916a5441204ebfd317f312c9df2931d6d71adb9457fcf89e513aa55c105b8f57ff700c3a614c604962612dea8619ba82eb2e36642ab68d92a6c1eab6f4f7384ba42468041e7fb734af06c867582481e73709fd5632a6c770ed7e9b2383810238720d4a225b453f4f40c5012dea1f2ca4fbf79fbac2eed137afa9376a3ea0d42542e2f74ed8739b8ec4653ccbeb072cd46fcac2847a528357bd869aef12a227156ebf43c36c931383c6bb661f313d8b305b08db9a1f8cd14d7b8efe21dfcaafb8616cdc9574f5c691a782a64af8b8b6cfea940c9ce35ad97c8cf9714ef23093137510025049119ddaca63fa63d6cc795b15fc03af3fbb7354e2df94bd4f8a1bf1d5e91d12b58c4489266f4bd2a8515a6e1ae79d87d0ca9f11c2ece4029b588224cdfd64e1d91058656f1b5a3b6aac7a98b112fba4edba5c2cd8947e20d01ebce1795036166af00ba425c554dbaa0719c3da0620ea7744f5da8b6bdd3540267b5e4927e91d5329dad7a660963292279478beb4804ee113419e5acdeaa5a70cc370c94192ac3047315ef88c0b2d93b0c80cf79e2303862af2b5c628578410c7aec92f3a4277b4c9641be561a29048349f7c59f69fb535810bf94245eb73dc2c04b407afa4d46bee960b4010dcdb105fb16f13cfc47d34b1a1479f9e16195d90723fb1f37489b9b5926b739018d5636059a2a3520424f351ae1a08551d9a27d272a93ce4fa3040b248e4a7e18eeb81e154c98b1f0acbc7192a5eedeed45dbf76059c1ad2fda8a557386285229e9658d7fefbfee623713fc2e83a7a365a84edad6e3ce043b9f9879f798da50072e0fabcdc3147510ecba6384d0a76046d33d3d4f1cdb391204633e02aa1e9a4e9676ff0385e3fe60a6d56801f013ec9e9ccfb08ab19a4769fe65d96058d5945795dae4a047f6e20998eb60f2359f2bb815710860e06f1693398d821cab10640fda3f2d7e6e2580260f6b1a47d95f91a7139fb51e66af85f186e8355b42d203063b6616804c4c0c68b80031e55c275dd3c30bf6616a7b56c3ff5d442ce6cb1e6aec36d6d94303ee1166add455d0b944d49c49d37861fca4992821f45dadb891069f3c69f6a9eb4a22b4b9cab97c7a3b2cb9473ec346ec4433bc3ea38a9e8a9375fcf8c5797449e8635abeea6cdd85cb5dffac324a4a89eec3436d2089548e9b4d2d0c98cd926e60b9de9d0ee67ab6427892331142fd737d5055fc2c5e34693392dcdbecf4e7ef8c3125e74a75dd4b0a53d546a993b28bbbc3b0fd181fb3692a0261189cf7dc1dafdb5a798ddb93c8e0a8450d487a2fa06cefbe62cdec12db6341cc154ea8c694264ce1a68ddf0d99ba0b55bc06142f0f97dd05bc936d81178537e67179d93b9c99bd254f4b552098a075ee53ac3cb22f5e01126718b3b3504131227d06843d54f59f50b75c847807bacf3d99ad4a7837044b6670f556fa371feadd1431820b4b5a7027ef4a679e8e4370c8d65f5f81e8975996bfa56b2649a143da36ced882f202dadb106022310db2ed3ece645ec22d1f441271e46c4cc6223d57682a1537c2355efae00deb5412d226863be3ed15823a66fff311e871664e70493b44e850abc77288ede6c2bb97dd121e9b37d7af54ea52dae1d176922a6fef6996c02abebcd77c764b4059b1713658678b384743e4be5c46d75b164492d769e98bc6392b38ca7e0957fd4b3f1acfd84a6a8c94394b942eee4a122d8ddf9eaac7a8082528fe3ab4913790ec5c77eae39f72ade87aeb539701d5953a986883833f54878ad2c35b8642fac107ae7649244c8931271f6015942824dc2b530b5449cfeb9ec62a8f578dea8bc762a4087b1176993ecaa7ed764bae0c836fddfeb63eea35a30e02c8bfa292cf15edd8cef3cc78cce8dc0a85ed65bc47b0bfdedc26f70cc83f8668bff3ac3bd8cbac302ff5d5dccc27ca95dee321a37ec828861590e1f85bbbcb10ce26a2efc909f7998ff54f1243feed885046fc84bcffb956c10e223d30f953600f8191c43a01ea5bd3b535ed8c86c68905f6d5933ec4b420a7dba1bf88e839046ca0d5111e69c8f53cc5663229cf38802f98b4d3cced97d09f6c7ee04433ba25acd2633eae63caad56969e9a410cb9f5a5ed7724b52b2a451a054b461cbb1dce8835d8e499dd33455fb4e03f7513bd5480c8b7cef5f292efc8d0ebfb0da28a7c85e54c35dde992e0b8ec481bc36b6a13b5e626966d577153f0eb92616211696a8df7286ce57938b09539d7d94a92e738d2e3521bc919a318be8eed9dfa6dc7f2a805d13a10e2fd9091aa346473df6826d5bc41f067e915794e31d8f065f89d7be7da45ede58842e648699435d164930672e22b97f3a84eb64daef643bb7b84854b087c531bb77b4647ef3999eb4862867259e54e7bc272ff4c285dc49e1b7267251cf01754be458449639c6c2d41655a8e8db737be54aac40237c2f41de0501f92a60e2871c105a49d7554e0ea875b6fe1345684e307d939e66db5a4571e860320c6c3d24013c54cf5aadd3d19db2da397364661debb3181fcacda9c86d3e942897b878174d660013b3e954112fe7286dcceece07d06441ab8a06a443ffa3788660884f35805f6a3098f801396119a4d10b29f388d8f4b4e3e864bd34efd7d121ee994465da0edd0da9db5966f9db3ad28f55f95da980795615a2f4c2c32673c0816f4c2201a8beaa8beaa3598436be8e81312477f22db83a40829ef4a07bfcdc3c5f6e17b7ba2f1ac43900cdef397b229141512d726a7ce452b940dd2d60039f7a6e0ec1f3a81128de55c7f808a33a4f50721121e3999e635b0dc99de40016ad9e0418576fe9019d47b810b5df38d349e70fe0c39b79dba29f5d6dd7570ffbb98a0291c589c21f4cb8b843ec9a7e8fe7c810f4ca9c2cbbfb00512bdc51e2b075e9a3379f7560fafcf8e39c5b8391ecbf4a7bf082a70ac8b9c4146865e22ceb2cc23a5674bebf6b228a310f7954172b07525f3a3e52ba4bab1e72c0fff1241fb2cb3c397e1083a6015417d6668e51b49961128d4e270ed7c96232f6c84f503ec268b9d7e7b0430454c000291431800fc479e9bc4096972efc3ded412bbdbeb995fbac02b2d6b3c756c61f7ef1d0cfa12f688fd95f8651a4662a62e9cb2f61d68973f39b153fcada31578b1184696d072d029034b739373a062d0a43bc973bbba07cb0f12e3090a5087ffa830a8ce9a5b844b7c2b9760c9141593a04d73fc4865922d219ef79d8d2e3f06a76da73b62a950ddd6d5aef2096ab9e0d8ca166fd72c31d2a8b9384dbd5709f6da8ac918cacba062b80393667e474c5e9f2c684b4e1fd961b33d1842622662e2d97bd12636cecce3aed5eb9db270aa0662cabc2e1ac1540ab73cb9499d28155a018db5f9cb5ada10c7312305cfe45c205267c6b34d32a85bf9de129d2da21f5f2a81ca85f3f80fe3802bc7bd6e85d3e10c407a1903d5926ffba563730f0fc15d83837543624b9ede212473bcf62054d17f96bb912cd5fa51d1eb6c5f97cacf6ef3643752be40d2b6cab18c686f72e9ec41193b53f5d484aa071c48174773d15dff7cc4e97d1db76c98c654ade3e056434d6e9044e938e65b4ea11fb2a11370ff3df811a42b1244b3da1780d5ecc3d773647b6cd4fb37f99f799699acef7302eb66f9af15ddc449586dd5c4de7f68b745c5888280e75cb29c1cf9ac89c1b2332ece9334c42e7bc08d887edd3f75ef87018254d07acf3c9561ce684490f25e2bb2aede9150684890e8d4fe55541c3f0e7d9bb99e827f04027c88fa83ab099381ac56e2b3586d40d92a491589f49c6845f6df6c5dbeda85ce531b68ea782f84d5be78596fc327ff2d7411518ea7d3c252cf2dc9f6ee3b6ebb64ee833040259be2e2642a8a8791296335e699e423a5c7265135397ea4b40a572d2ed8c5f5c53f6bc8f6da5ea951eb7c606200a77899e7193fa333002fd50fc56873cbdbeb4c9131d01d44e382f4a5707c444de90eaa6d0d88debc2c3b6e6255ee75ffa9db9d2fe61c6b62d74f87b086be88f526239805f1ae155a12e1911d903fdb12e0a7c6e544c31475fd2da38c6d96b6729834da626e8baadf983ee29a0381193e7ecea79d8cd6521f498426ab263c9a3480b256e90f1f46f27df4573dbeecc5d53331411d9a13aa7ba583d887571b33f58b28a5deed822d97da8a2f96c07c3198a763ab6661f95dee0cb02ca6a3effed6bd55c9e6257eb8a86555334c3aaff7c00e4f33937d23bc51ce7802d59293f8cc0758e2289ec8c0456e89ea085484d048c887a0ccd5da7e17d48af64f811350aa8523aaf0efb470f543cc7c59214a6c0d2f3379bb03d50aae3f3768a12e6095a2c24c335a875f4f029ef5bb13037dbe4972ca4a4e2b1cd00fa33020c7d3000be2d325fb79865de906d3ed3ebd09f8bc07c2e3faf6c44f50dd3d9fe3f9eb03516f7ccfe2a0b0372af9c23c8e9cf467549fc0bd8d96792811fd3ce3e0dfe36453817d62cafe37e36b0fbd4cee74f8e93d65c623963517239e800332db3c8d230dbe3622e74f111ebc69c3705c7fd9b765ce933ed1197801d80bcca6e477cfb76c823667e17dc5aa7503b762a6cbe63473d2edbaab7333e5efaed054e82ce40adb9b0b9afc873ccf9b94afddf0c316a7435839ed62e7a68763e37d9c5767527d3b774afe419457b3d46ca38ae5e47e6022d017a1aebb0210d5a93b02a443b59f75e03598b358d245d7fdf4ca39fa5719eef021298d34d62038216d6a2e837be0995cb91b809fd02887038a8176c339dd9a206315716bba18e5e9035ca585a22b0a7b745e360f42d81ab7fdeb67ae8b2b1a13a03b65289e7f32d331306936440d45d73a65e81001b2b39781d005400ed01ea32896c5f3014f50f7e3c5f75b02e03db8c1cd1108f4efa3a5834f962d8f7bfb48f54707620b6c085f32e06a820cf2effbb00b99059681709221be52a496ea6aa33cf5b43aea495d60566876017be72b16b8fd8275eed26152f400da6601f99aa8b6b9821ce06173f6b0a4959402a7ff6cd9e601a3e68254932b360817334cf77bdc7b658b54b8c9a6b06c900b0527472db9024b6b11b845233454ee1ec4855cb69325a7b912262d402f98a3cc4156079d1d0d4e43bc6091c51c007879dd44f61817c4296fd7e91c913cba7a837a9970c0dc98dd3a2ce34a39e375fbf95b4a499e3a9e2d34a2f2c30c373a74ee21c96d29bb490e0756caab7b09538767317d878607809cb73e6ce393088ceae3e7cedbde8f13349147f237173c518d1ad4ea0fec28f74368a26feb8023aa75b8f8c173fde4bf775baf3d4a560658a76d4b1b85e8cb13f3e6f5e123b894cfe6e12d7c7b1c93d847b5d405fea0673217d1c7ae65cd6f99bfe6c2190f6bd40ebc1f69b7e972e122708dbe89d43ffc1f858871ea5fff5fa71c1e63056e8a13e39aeccb5a7a8a977f213bf9a4fc9a177e2bfb9dad2b2d8b60d82588c24218ef0ee67fd94bc2fb5ead3ed54c924fd5c9b46f84080606f210cf752e566929e3418ec327d217555cc9a18f17a64b8ff22ffd60cc4644e947d07783115f4dd03351d426874c675b3af7a813d74d3d2102e25f559712834db026c64dcb633d1c2beb2a7e2ee5507732d11841c431234ddd5c39f971718e145d69ad63e6187b053d0d6a641f0f9c5bcc506651119aed6cdcf022a4fcfd7ee2dbd5b3e084f27603ceaba63d4009c6d514ba9674e1abd27aa33e8947e5313c7d7ea68b0fd88399137c3ec58fe0ff5926caa7661cb668919f4360f561139bed7e5dd2cbca58c5dcc7ecbc7d1d9f53475fdea34ad9cd8c5297b2e8fe9ccc94bc3ed441b68758968bb90054d05a9796019d23a5ba0bb924cddacd75c243572e08cf5f35d803d952b660a731d23abd53da14b405237c698a4d6a66c54be7f1561502aac956b045a8deb2fe1753b4e729c7a55943730d9592a4a0e7869679ce22d71ed8180d79a565a43f8afef806dd44cbadedf22307dde7efe66c8321d8fc6c3adfee033dd4e3fee9b270e64b670002c7b9647c1e97a696d39f6be06cf0bc9d3dfb32275b1bedae318d9d6ccae6dddcf8abbffb4609f33dcbb5e092ab9cc41cc1fe4532a787f1ffeec63a41285d8997119f63bc79a6419e6bfb9ac35de236c986c30b1f6c669395e19e210493be0ce511ff382f0128b103e5af420ef012d54837d77a388990ebd6b555f83644b9b39d44a22ffbf13ced4ccc522ef101cc493108bf18207250c8316e070cad0bdb034002e8d791dd80bfa36a4008f4f579ef9d53b1e8ef1544e29f947aa6ee537379b981583f6692d8f1ee4fbc8e5238f83c3df6c6834ffc70eec09f073860ccb8db891b4d2547c169680704322b5e0eeeff275aeac91c85802b2984b934f27c86f511be2733d191e14250d5586e9a1e1968ae501729d70cb7395af049dd3b1aacb5cd49ec3fd87a8a4cdbef0e6c11bd0ba9b1e77d64dabfe3941993fd789efee5018c9d91f1792fee2140cb66a6afd0840a0d24dc0d54f631799c8a4c65fe9412c6fa0b673c6905ae3a64865c2e1b0a4b80c065f9ff35ec3c0776a5d87cf6bc442bb2510d8ccaebf56bc6d24b42280a18424b27ffe50c68495e90340615afea82e1c147f67ed870db7032f63fb322edfc2f656cdf479ecffacf41944a29a1bb04d3bd6423066422ac582474bde38add6ea4efa7065abd7894a83643f096ff24a09e9b69b3e55988af775ac36c72d052b57a96101306feeafd7ecdbfb164affc54bf6ada2cb269508bb698b96c46b43be900c655dead99fec5ba0e1c8d702d94db8333fd7af84f0eb865a61fc92a802ff313a4283b4d8ac71c63a1fc18453a3f9013040204d3f69f2c16700e70902f69ccf3c149bfe1e878523d1d07494fc83f1cc9b4befacf4c570da83762fc96720590e4056edab10ed24d0dba63c77029ce63d6856877167e3dccd5f0815d3cdb595f65f6094530cd177e939598abcdc85e22fe9cabff282d54210c54038422f90aed7276eb5259ca9034ad1edb51a5ae2ee8917eb8895024ad202bfafd3ac8542c5b3b0bd3edd4ea3687580dd622b00c305b1ef2d61cd35f79eeb77141cc9766452cc812fd01b87345255dc1331ad4847d4d13feb89c5de3cc7f0d247fd6445d3789359f06b28cd28ebfa3a532f9a85dda62f9199473d0dfddc73b857941e79642d07b7404af6b476b6eba8c6b5533fce42cc43836339b8b728322775362d927f85eaa29f2d1e5098a4a26878e9a6c7acc38523520e4d6832a9e80fa3e50851dd86feb1172671d09a5b67b423a1ae37826d18d09710e826bcfabc176732794409ece1895588432a5855eff376099633e1ed8aaf5b789f101ee7bfb3a86e88cffc958538e64815951f400e5e602cd7d23e9996f47f2023e7f447d43cc78bf175e179ba5284e71529950625c5a5da206d8945060efa105f20a02d165ff1344b7af9312f425892ed91f1d7f718ab7422d9b66b8b80dc0459bb08264b58dbb79a73c6dfde4e45ce99e50de85c93215eb54c716f3c41cf127b3f0644904c3757a34caf6051b0bc3d1965fb4914092d9a9e54d7be7559478dc25812de5f156aa658dc04ea4b7e94776fd3109644cb2ae2d2a6286e36286c75793e6bf512ff0629fae9d815b450dd77c820a2e742c06dfaf7cdb9b69593b80167c74ff02eafc6db0f3ae19e34114d4a117a9c3ed2eee5ee9597711929f3125af76e973fb6f0003ab6171ff141c6a297179bb8e2ecbb1621cc5e1f5c24e2bd2443ad5b3bd46a3053da731d6b2370a4db6579bf91c06c9fe4544dfbd1628e05c8adfee8203f69b3b6320907ec3d1b6a44b0c1c7fb7e12f66bc4f5e49601f4991af0c58e008550e81d5f3bc4cbf9bbd0f35f61ad6fe1106c79d2f5082184978bec0531904bcad7066183944f5d91565780a2156ab3a8013172633ba6ecc8306f8f814981b06708b613ec698dcf5fe82a3575477f01add12d5b083e4e9ca124c46639c6b514e538a578f9e7fcbc6f5f76bff67674689158335f32c38eaafba639e2a4df57ecb07c3102d3974d4d2b8e8668a6d6a4a29e02c48dd0530754e4ab1f73796ceb084221a225c80bb31983357a2d8fc72e17be0782d24616f0401af5277acf9738bb66f0354a01396640531b43be9729c59f5900060a0dd8e03ee220731e672db0132390a6758e03ab1a9205c0d2be9d0f2bf78451356871cb5e2aa0093f9689a428177361b7156e95e0580b94fec78602c7af52897b13c603e7f8f1dae596978e6028cbb8fcecb816baa7d6eaa91455497cb7395e706f7a5858de244a4b70b52318765711eee1f55ba92119ed323081321f5a06d96c1f4cdcaec150f4dae3eb156695bf09f335ad60081d55668b84078a173d0f9432c691b1040f95343ce4d763232289d6da5d25186c209356b5e7304e3513f168a9afa2a7cb7d8b8b625f36ebe01346f518b7d3301da0f158503145c4dc5836b1d42c06bbf7ca8516fe1e66c80584119b17ee5f86b54c726fb944ff466bdcf480836e4a791b40bf9c951142d3f14adb7027c7264eaf26a7eb74090aa8cbebee01ab437f30dd68ee3b368b17d91fd41f910cf753d445feca5cf45fa76bbba952f7c6f7404c3dabf02c07606fbb1e5c07ff2ca85486522a457fb4c9f3a462b0f23474dc81ee14acb338eb168794b44861720e41f2163fda97bbc82bec552cfa8974314a702ff3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统面试</title>
      <link href="/2022/03/16/cao-zuo-xi-tong-ba-gu/"/>
      <url>/2022/03/16/cao-zuo-xi-tong-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="77c66ba61a496fffda5060c5c76ddda6d85cdbba38f6a4546ab18fae38b4e8e7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>难理解的高频题</title>
      <link href="/2022/03/16/mian-jing-suan-fa-ti-mu/"/>
      <url>/2022/03/16/mian-jing-suan-fa-ti-mu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b6534aa022e749da626d04c00941c6552a65c2b88dddde7e5d41a714d4afe613"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找</title>
      <link href="/2022/03/15/er-fen-cha-zhao-suan-fa/"/>
      <url>/2022/03/15/er-fen-cha-zhao-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="二分查找算法"><a href="#二分查找算法" class="headerlink" title="二分查找算法"></a><a href="https://www.cnblogs.com/kyoner/p/11080078.html">二分查找算法</a></h1><h2 id="一、二分查找的框架"><a href="#一、二分查找的框架" class="headerlink" title="一、二分查找的框架"></a><strong>一、二分查找的框架</strong></h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>, right = ...;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(...) {</span><br><span class="line">     <span class="keyword">int</span> mid = (right + left) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       ...</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = ...</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = ...</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> ...;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><p><strong>分析二分查找的一个技巧是：不要出现 else，而是把所有情况用 else if 写清楚，这样可以清楚地展现所有细节</strong>。本文都会使用 else if，旨在讲清楚，读者理解后可自行简化。</p><p>其中…标记的部分，就是可能出现细节问题的地方，当你见到一个二分查找的代码时，首先注意这几个地方。后文用实例分析这些地方能有什么样的变化。</p><p>另外声明一下，计算 mid 时需要技巧防止溢出，建议写成: **<code>mid = left + (right - left) / 2</code>**，本文暂时忽略这个问题。</p><h2 id="二、寻找一个数（基本的二分搜索）"><a href="#二、寻找一个数（基本的二分搜索）" class="headerlink" title="二、寻找一个数（基本的二分搜索）"></a><strong>二、寻找一个数（基本的二分搜索）</strong></h2><p>这个场景是最简单的，可能也是大家最熟悉的，即搜索一个数，如果存在，返回其索引，否则返回 -1。</p><p><code>左闭右闭的模板</code></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>; </span><br><span class="line">   <span class="keyword">int</span> right = nums.length - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(left &lt;= right) { <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">int</span> mid = (right + left) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">       <span class="keyword">return</span> mid; </span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target)</span><br><span class="line">       left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target)</span><br><span class="line">       right = mid - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     }</span><br><span class="line">   <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么 while 循环的条件中是 &lt;=，而不是 &lt; ？</p><ul><li>答：因为初始化 right 的赋值是 nums.length - 1，即最后一个元素的索引，而不是 nums.length。</li><li>这二者可能出现在不同功能的二分查找中，区别是：前者相当于两端都闭区间 <code>[left, right]</code>，后者相当于左闭右开区间 <code>[left, right)</code>，因为索引大小为 nums.length 是越界的。</li><li>我们这个算法中使用的是 [left, right] 两端都闭的区间。**这个区间就是<code>每次进行搜索</code>的区间，我们不妨称为「搜索区间」(search space)**。</li><li>什么时候应该停止搜索呢？当然，找到了目标值的时候可以终止</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">  <span class="keyword">return</span> mid; </span><br></pre></td></tr></tbody></table></figure><ul><li>但如果没找到，就需要 while 循环终止，然后返回 -1。那 while 循环什么时候应该终止？<strong>搜索区间为空的时候应该终止</strong>，意味着你没得找了，就等于没找到嘛。</li><li><code>while(left &lt;= right)的终止条件是 left == right + 1</code>，写成区间的形式就是 <code>[right + 1, right]</code>，或者带个具体的数字进去 [3, 2]，可见<strong>这时候搜索区间为空</strong>，因为没有数字既大于等于 3 又小于等于 2 的吧。所以这时候 while 循环终止是正确的，直接返回 -1 即可。</li><li>while(left &lt; right)的终止条件是 left == right，写成区间的形式就是 [right, right]，或者带个具体的数字进去 [2, 2]，<strong>这时候搜索区间非空</strong>，还有一个数 2，但此时 while 循环终止了。也就是说这区间 [2, 2] 被漏掉了，索引 2 没有被搜索，如果这时候直接返回 -1 就可能出现错误。</li><li>当然，如果你非要用 while(left &lt; right) 也可以，我们已经知道了出错的原因，就打个补丁好了：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"> <span class="keyword">while</span>(left &lt; right) {</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line"> }</span><br><span class="line"> <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>; <span class="comment">//注意 如果是插入位置 需要先判段left是否越界</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>为什么 left = mid + 1，right = mid - 1？我看有的代码是 right = mid 或者 left = mid，没有这些加加减减，到底怎么回事，怎么判断？</p><ul><li>答：这也是二分查找的一个难点，不过只要你能理解前面的内容，就能够很容易判断。</li><li>刚才明确了「搜索区间」这个概念，而且本算法的搜索区间是两端都闭的，即 [left, right]。那么当我们发现索引 mid 不是要找的 target 时，如何<code>确定下一步的搜索区间</code>呢？</li><li>当然是去搜索 [left, mid - 1] 或者 [mid + 1, right] 对不对？因为 mid 已经搜索过，应该从搜索区间中去除。</li></ul></li><li><p>此算法有什么缺陷？</p><ul><li>答：至此，你应该已经掌握了该算法的所有细节，以及这样处理的原因。但是，这个算法存在局限性。</li><li>比如说给你有序数组 nums = [1,2,2,2,3]，target = 2，此算法返回的索引是 2，没错。但是如果我想得到 target 的左侧边界，即索引 1，或者我想得到 target 的右侧边界，即索引 3，这样的话此算法是无法处理的。</li><li>这样的需求很常见。你也许会说，找到一个 target 索引，然后向左或向右线性搜索不行吗？可以，但是不好，因为这样难以保证二分查找对数级的时间复杂度了。</li><li>我们后续的算法就来讨论这两种二分查找的算法。（==左闭右开==的 ==插入位置==的 ==刚好大于==的 二分方法）</li></ul></li></ol><h2 id="三、寻找左侧边界的二分搜索"><a href="#三、寻找左侧边界的二分搜索" class="headerlink" title="三、寻找左侧边界的二分搜索"></a>三、寻找左侧边界的二分搜索</h2><p> ==//搜索&gt;=target的第一个位置==</p><p>直接看代码，其中的标记是需要注意的细节： //正常二分法左闭右开的模板</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">if</span> (nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> right = nums.length; <span class="comment">// 注意</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt; right) { <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       right = mid;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = mid + <span class="number">1</span>;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = mid; <span class="comment">// 注意</span></span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> left;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么 while(left &lt; right) 而不是 &lt;= ?    //==注意 仅仅是因为right的初始化 两种模板没有差别 都可以使用==</p><ul><li>答：用相同的方法分析，因为初始化 right = nums.length 而不是 nums.length - 1 。因此每次循环的「搜索区间」是 [left, right) 左闭右开。</li><li>while(left &lt; right) 终止的条件是 <code>left == right</code>，此时搜索区间 <code>[left, left) 恰巧为空</code>，所以可以正确终止。</li></ul></li><li><p>为什么没有返回 -1 的操作？如果 nums 中不存在 target 这个值，怎么办？</p><ul><li><p>答：因为要一步一步来，先理解一下这个「左侧边界」有什么特殊含义：</p><blockquote><p>​     target = 2</p><p>pos:            left                        mid      mid+1     right</p><p>nums:          1             2             2            4</p><p>index:          0             1             2            3             4</p></blockquote></li><li><p>对于这个数组，算法会返回 1。这个 1 的含义可以这样解读：nums 中<code>小于</code> 2 的<code>元素有 1 个</code>。</p></li><li><p>比如对于有序数组 nums = [2,3,5,7], target = 1，算法会返回 0，含义是：nums 中小于 1 的元素有 0 个。如果 target = 8，算法会返回 4，含义是：nums 中小于 8 的元素有 4 个。</p></li><li><p>综上可以看出，函数的返回值（即 left 变量的值）取值区间是闭区间 [0, nums.length]，所以我们简单添加两行代码就能在正确的时候 return -1：</p></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line"> }</span><br><span class="line"> <span class="comment">// target 比所有数都大</span></span><br><span class="line"> <span class="keyword">if</span> (left == nums.length) <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line"> <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line"> <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br></pre></td></tr></tbody></table></figure></li><li><p>为什么 left = mid + 1，right = mid ？和之前的算法不一样？</p></li></ol><ul><li>答：这个很好解释，因为我们的「搜索区间」是 [left, right) 左闭右开，所以当 nums[mid] 被检测之后，下一步的搜索区间应该去掉 mid 分割成两个区间，即 <code>[left, mid) 或 [mid + 1, right)</code>。(mid已被被搜索判断)</li></ul><ol start="4"><li><p>为什么该算法能够搜索左侧边界？</p><ul><li>答：关键在于对于 nums[mid] == target 这种情况的处理：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">     right = mid;</span><br></pre></td></tr></tbody></table></figure><ul><li>可见，<u>找到 target 时<code>不要立即返回</code>，而是<code>缩小「搜索区间」的上界 right</code>，在区间 [left, mid) 中<code>继续搜索</code>，即<code>不断向左收缩</code>，达到<code>锁定左侧边界</code>的目的</u>。</li></ul></li><li><p>为什么返回 left 而不是 right？</p><ul><li>答：返回left和right都是一样的，因为 while 终止的条件是 left == right。</li></ul></li><li><p>经测试， 两种写法返回值完全一致</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二分法细节 &lt;写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> right = nums.<span class="built_in">size</span>(); <span class="comment">// 注意</span></span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt; right) { <span class="comment">// 注意</span></span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      right = mid;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid; <span class="comment">// 注意</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left;    //返回&gt;=target的左边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回第一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == nums.<span class="built_in">size</span>())</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line">                 <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line">    <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line"><span class="comment">//&lt;= 写法 完全一致</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound2</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> right = nums.<span class="built_in">size</span>() - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt;= right) { <span class="comment">// 注意</span></span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      right = mid - <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left; //返回&gt;=target的左边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回第一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == nums.<span class="built_in">size</span>())</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line">                 <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line">    <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="四、寻找右侧边界的二分查找"><a href="#四、寻找右侧边界的二分查找" class="headerlink" title="**四、寻找右侧边界的二分查找 **"></a>**四、寻找右侧边界的二分查找 **</h2><p>==//&gt; target的第一个位置==</p><p>寻找右侧边界和寻找左侧边界的代码差不多，只有两处不同，已标注：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">if</span> (nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">     <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = mid + <span class="number">1</span>;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = mid;</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> left - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么这个算法能够找到右侧边界？</p><ul><li>答：类似地，关键点还是这里：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">    left = mid + <span class="number">1</span>;     <span class="comment">//与模板对应一致</span></span><br></pre></td></tr></tbody></table></figure><ul><li>当 nums[mid] == target 时，不要立即返回，而是增大「搜索区间」的下界 left，使得区间不断向右收缩，达到锁定右侧边界的目的。</li></ul></li><li><p>为什么最后返回 ==left - 1== 而不像左侧边界的函数，返回 left？而且我觉得这里既然是搜索右侧边界，应该返回 right 才对。</p><ul><li><p>答：首先，while 循环的终止条件是 left == right，所以 left 和 right 是一样的，你非要体现右侧的特点，返回 right - 1 好了。  </p><blockquote><p>  target = 2</p><p>pos:            left                        mid      mid+1     right</p><p>nums:          1             2             2            4</p><p>index:          0             1             2            3             4</p></blockquote></li><li><p>==至于为什么要减一，这是搜索右侧边界的一个特殊点，关键在这个条件判断==：</p></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">     left = mid + <span class="number">1</span>;</span><br><span class="line">     <span class="comment">// 这样想: mid = left - 1</span></span><br></pre></td></tr></tbody></table></figure><ul><li>因为我们对 left 的更新必须是 left = mid + 1，就是说 while 循环结束时，nums[left] <strong>==一定不等于==</strong> target 了，而 nums[left - 1]<strong>可能是</strong>target。</li><li>至于为什么 left 的更新必须是 left = mid + 1，同左侧边界搜索，就不再赘述。</li></ul></li><li><p>为什么没有返回 -1 的操作？如果 nums 中不存在 target 这个值，怎么办？</p><ul><li>答：类似之前的左侧边界搜索，因为 while 的终止条件是 left == right，就是说 left 的取值范围是 [0, nums.length]，所以可以添加两行代码，正确地返回 -1：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (left == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line"><span class="keyword">return</span> nums[left<span class="number">-1</span>] == target ? (left<span class="number">-1</span>) : <span class="number">-1</span>;</span><br></pre></td></tr></tbody></table></figure></li><li><p>经测试，左闭右闭的写法也可以 这点<a href="https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/">剑指 Offer 53 - I. 在排序数组中查找数字 I</a>可以佐证</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二分法细节 查找右边界</span></span><br><span class="line"><span class="comment">//&lt;写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left - 1; //返回&gt;=target的右边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回最后一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line">    <span class="keyword">return</span> nums[left - <span class="number">1</span>] == target ? (left - <span class="number">1</span>) : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line"><span class="comment">//&lt;=写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound2</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid - <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left - 1; //返回&gt;=target的右边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回最后一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line">    <span class="keyword">return</span> nums[left - <span class="number">1</span>] == target ? (left - <span class="number">1</span>) : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="五、最后总结"><a href="#五、最后总结" class="headerlink" title="五、最后总结"></a><strong>五、最后总结</strong></h2><p>先来梳理一下这些细节差异的因果逻辑：</p><ol><li><p>第一个，最基本的二分查找算法：</p><blockquote><p>因为我们初始化 right = nums.length - 1<br>所以决定了我们的「搜索区间」是 [left, right]<br>所以决定了 while (left &lt;= right)<br>同时也决定了 left = mid+1 和 right = mid-1</p><p>因为我们只需找到一个 target 的索引即可<br>所以当 nums[mid] == target 时可以立即返回</p></blockquote></li><li><p>第二个，寻找左侧边界的二分查找：</p><blockquote><p>因为我们初始化 right = nums.length<br>所以决定了我们的「搜索区间」是 [left, right)<br>所以决定了 while (left &lt; right)<br>同时也决定了 left = mid+1 和 right = mid</p><p>因为我们需找到 target 的最左侧索引<br>所以当 nums[mid] == target 时不要立即返回<br>而要收紧右侧边界以锁定左侧边界</p></blockquote></li><li><p>第三个，寻找右侧边界的二分查找：</p><blockquote><p>因为我们初始化 right = nums.length<br>所以决定了我们的「搜索区间」是 [left, right)<br>所以决定了 while (left &lt; right)<br>同时也决定了 left = mid+1 和 right = mid</p><p>因为我们需找到 target 的最右侧索引<br>所以当 nums[mid] == target 时不要立即返回<br>而要收紧左侧边界以锁定右侧边界</p><p>又因为收紧左侧边界时必须 left = mid + 1<br>所以最后无论返回 left 还是 right，必须减一</p></blockquote></li></ol><ul><li>分析二分查找代码时，不要出现 else，全部展开成 else if 方便理解。</li></ul><ul><li>注意「搜索区间」和 while 的终止条件，如果存在漏掉的元素，记得在最后检查。</li><li>如需要搜索左右边界，只要在 nums[mid] == target 时做修改即可。搜索右侧时需要减一。</li></ul><h1 id="二分题目"><a href="#二分题目" class="headerlink" title="二分题目"></a>二分题目</h1><h3 id="剑指-Offer-II-068-查找插入位置"><a href="#剑指-Offer-II-068-查找插入位置" class="headerlink" title="剑指 Offer II 068. 查找插入位置"></a><a href="https://leetcode-cn.com/problems/N6YdxV/">剑指 Offer II 068. 查找插入位置</a></h3><p>难度简单13英文版讨论区</p><p>给定一个排序的整数数组 <code>nums</code> 和一个整数目标值<code> target</code> ，请在数组中找到 <code>target </code>，并返回其下标。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>请必须使用时间复杂度为 <code>O(log n)</code> 的算法。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 5</span><br><span class="line">输出: 2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 2</span><br><span class="line">输出: 1</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>这是一道典型的找左边界的题目</p><p>两种二分法都可以 左边界在于 缩小右边界</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><ol><li>两端闭区间写法<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target){</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            }<span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    }</span><br><span class="line">}; </span><br></pre></td></tr></tbody></table></figure></li><li>左闭右开<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - lefqt) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target){</span><br><span class="line">                right = mid;</span><br><span class="line">            }<span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    }</span><br><span class="line">}; </span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="剑指-Offer-53-I-在排序数组中查找数字-I"><a href="#剑指-Offer-53-I-在排序数组中查找数字-I" class="headerlink" title="剑指 Offer 53 - I. 在排序数组中查找数字 I"></a><a href="https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/">剑指 Offer 53 - I. 在排序数组中查找数字 I</a></h3><p>难度简单288收藏分享切换为英文接收动态反馈</p><p>统计一个数字在排序数组中出现的次数。</p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>查找左边界 向右数 (两种写法均可)</li><li>查找右边界 向左数 （<u>注意 只有左闭右开写法可以 另一种不行</u>）</li></ol><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [5,7,7,8,8,10], target = 8</span><br><span class="line">输出: 2</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><ol><li>左边界 左闭右闭写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target)</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        <span class="keyword">while</span>(left &lt;= nums.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left++;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>左边界 左闭右开写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target)</span><br><span class="line">                right = mid;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        <span class="keyword">while</span>(left &lt;= nums.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left++;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>右边界 左开右闭写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">                right = mid;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        left--;  <span class="comment">//注意 右边界搜索的特性 必须-1</span></span><br><span class="line">        <span class="keyword">while</span>(left &gt;=<span class="number">0</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left--;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>右边界 左闭右开写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        left--;   <span class="comment">//注意 右边界搜索的特性 必须-1</span></span><br><span class="line">        <span class="keyword">while</span>(left &gt;=<span class="number">0</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left--;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="旋转数组专题"><a href="#旋转数组专题" class="headerlink" title="旋转数组专题"></a>旋转数组专题</h2><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>旋转数组 经典二分</p><ol><li><p>查找最小值 推荐用 &lt; 开区间的模板 </p><blockquote><p>虽然是开区间 但是 初始值 n - 1 </p></blockquote></li><li><p>包含重复值 一般涉及到 left++ 或 right–</p></li></ol><h3 id="189-轮转数组"><a href="#189-轮转数组" class="headerlink" title="189. 轮转数组"></a><a href="https://leetcode-cn.com/problems/rotate-array/">189. 轮转数组</a></h3><p>难度中等1406</p><p>给你一个数组，将数组中的元素向右轮转 <code>k</code> 个位置，其中 <code>k</code> 是非负数。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,3,4,5,6,7], k = 3</span><br><span class="line">输出: [5,6,7,1,2,3,4]</span><br><span class="line">解释:</span><br><span class="line">向右轮转 1 步: [7,1,2,3,4,5,6]</span><br><span class="line">向右轮转 2 步: [6,7,1,2,3,4,5]</span><br><span class="line">向右轮转 3 步: [5,6,7,1,2,3,4]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [-1,-100,3,99], k = 2</span><br><span class="line">输出：[3,99,-1,-100]</span><br><span class="line">解释: </span><br><span class="line">向右轮转 1 步: [99,-1,-100,3]</span><br><span class="line">向右轮转 2 步: [3,99,-1,-100]</span><br></pre></td></tr></tbody></table></figure><h5 id="额外数组"><a href="#额外数组" class="headerlink" title="额外数组"></a>额外数组</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">newArr</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">            newArr[(i + k) % n] = nums[i];</span><br><span class="line">        }</span><br><span class="line">        nums.<span class="built_in">assign</span>(newArr.<span class="built_in">begin</span>(), newArr.<span class="built_in">end</span>());</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="三次反转"><a href="#三次反转" class="headerlink" title="三次反转"></a>三次反转</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">2</span>) <span class="keyword">return</span>;</span><br><span class="line">        k = k % n;</span><br><span class="line">        <span class="built_in">reverseArry</span>(nums, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">reverseArry</span>(nums, <span class="number">0</span>, k<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">reverseArry</span>(nums, k, n<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reverseArry</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span>{</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">            <span class="keyword">int</span> temp = nums[right];</span><br><span class="line">            nums[right] = nums[left];</span><br><span class="line">            nums[left] = temp;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="环状替换-最大公约数？"><a href="#环状替换-最大公约数？" class="headerlink" title="环状替换 最大公约数？"></a>环状替换 最大公约数？</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        k = k % n;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="built_in">gcd</span>(k, n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>; start &lt; count; ++start) {</span><br><span class="line">            <span class="keyword">int</span> current = start;</span><br><span class="line">            <span class="keyword">int</span> prev = nums[start];</span><br><span class="line">            <span class="keyword">do</span> {</span><br><span class="line">                <span class="keyword">int</span> next = (current + k) % n;</span><br><span class="line">                <span class="built_in">swap</span>(nums[next], prev);</span><br><span class="line">                current = next;</span><br><span class="line">            } <span class="keyword">while</span> (start != current);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="153-寻找旋转排序数组中的最小值"><a href="#153-寻找旋转排序数组中的最小值" class="headerlink" title="153. 寻找旋转排序数组中的最小值"></a><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">153. 寻找旋转排序数组中的最小值</a></h3><p>难度中等702</p><p>已知一个长度为 <code>n</code> 的数组，预先按照升序排列，经由 <code>1</code> 到 <code>n</code> 次 <strong>旋转</strong> 后，得到输入数组。例如，原数组 <code>nums = [0,1,2,4,5,6,7]</code> 在变化后可能得到：</p><ul><li>若旋转 <code>4</code> 次，则可以得到 <code>[4,5,6,7,0,1,2]</code></li><li>若旋转 <code>7</code> 次，则可以得到 <code>[0,1,2,4,5,6,7]</code></li></ul><p>注意，数组 <code>[a[0], a[1], a[2], ..., a[n-1]]</code> <strong>旋转一次</strong> 的结果为数组 <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code> 。</p><p>给你一个元素值 <strong>互不相同</strong> 的数组 <code>nums</code> ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 <strong>最小元素</strong> 。</p><p>你必须设计一个时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,4,5,1,2]</span><br><span class="line">输出：1</span><br><span class="line">解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2]</span><br><span class="line">输出：0</span><br><span class="line">解释：原数组为 [0,1,2,4,5,6,7] ，旋转 4 次得到输入数组。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>画个这样的图 分情况取讨论</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220325183754754.png" alt="image-20220325183754754" style="zoom:50%;"><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findMin</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n<span class="number">-1</span>;</span><br><span class="line">        <span class="comment">//取等号大多是为了在while中直return mid，不取等号就跳出while返回l的值</span></span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){  <span class="comment">//如果这里不 = 则最后直接返回nums[left]</span></span><br><span class="line">            <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]&lt; nums[right])</span><br><span class="line">                right = mid; <span class="comment">//不能mid-1不然会跳过最小 例如 4 5 1 2 3</span></span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> nums[left - <span class="number">1</span>];  <span class="comment">//终止区间为[left + 1, right]</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="154-寻找旋转排序数组中的最小值-II-重复元素"><a href="#154-寻找旋转排序数组中的最小值-II-重复元素" class="headerlink" title="154. 寻找旋转排序数组中的最小值 II 重复元素"></a><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/">154. 寻找旋转排序数组中的最小值 II 重复元素</a></h3><p>难度困难473</p><p>已知一个长度为 <code>n</code> 的数组，预先按照升序排列，经由 <code>1</code> 到 <code>n</code> 次 <strong>旋转</strong> 后，得到输入数组。例如，原数组 <code>nums = [0,1,4,4,5,6,7]</code> 在变化后可能得到：</p><ul><li>若旋转 <code>4</code> 次，则可以得到 <code>[4,5,6,7,0,1,4]</code></li><li>若旋转 <code>7</code> 次，则可以得到 <code>[0,1,4,4,5,6,7]</code></li></ul><p>注意，数组 <code>[a[0], a[1], a[2], ..., a[n-1]]</code> <strong>旋转一次</strong> 的结果为数组 <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code> 。</p><p>给你一个可能存在 <strong>重复</strong> 元素值的数组 <code>nums</code> ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 <strong>最小元素</strong> 。</p><p>你必须尽可能减少整个过程的操作步骤。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,3,5]</span><br><span class="line">输出：1</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,2,2,0,1]</span><br><span class="line">输出：0</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220325202117864.png" alt="image-20220325202117864" style="zoom: 50%;"><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findMin</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">int</span> right =  n - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//直接 之改成&lt;=也能过</span></span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &lt; nums[right])</span><br><span class="line">                right = mid;</span><br><span class="line">            <span class="comment">//看上图的第三种情况</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] == nums[right])  </span><br><span class="line">                right--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> nums[left];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="33-搜索旋转排序数组"><a href="#33-搜索旋转排序数组" class="headerlink" title="33. 搜索旋转排序数组"></a><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">33. 搜索旋转排序数组</a></h3><p>难度中等1937英文版讨论区</p><p>整数数组 <code>nums</code> 按升序排列，数组中的值 <strong>互不相同</strong> 。</p><p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong>，使数组变为 <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,5,6,7]</code> 在下标 <code>3</code> 处经旋转后可能变为 <code>[4,5,6,7,0,1,2]</code> 。</p><p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回它的下标，否则返回 <code>-1</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2], target = 0</span><br><span class="line">输出：4</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2], target = 3</span><br><span class="line">输出：-1</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = (<span class="keyword">int</span>)nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">            <span class="keyword">int</span> mid = (right-left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target) <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="comment">//判断左边一半是否有序</span></span><br><span class="line">            <span class="keyword">if</span> (nums[<span class="number">0</span>] &lt;= nums[mid]) {</span><br><span class="line">                <span class="comment">//target落在左半部分有序区域内</span></span><br><span class="line">                <span class="keyword">if</span> (nums[<span class="number">0</span>] &lt;= target &amp;&amp; target &lt; nums[mid]) {</span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="comment">//target落在右半部分无序区域内</span></span><br><span class="line">                    left = mid + <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">else</span> {  <span class="comment">//右半部分是有序</span></span><br><span class="line">                <span class="comment">//target落在右半部分有序区域内</span></span><br><span class="line">                <span class="keyword">if</span> (nums[mid] &lt; target &amp;&amp; target &lt;= nums[n - <span class="number">1</span>]) {</span><br><span class="line">                    left = mid + <span class="number">1</span>;</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="comment">//target落在左半部分无序区域内</span></span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="81-搜索旋转排序数组-II-包含重复元素"><a href="#81-搜索旋转排序数组-II-包含重复元素" class="headerlink" title="81. 搜索旋转排序数组 II 包含重复元素"></a><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">81. 搜索旋转排序数组 II 包含重复元素</a></h3><p>难度中等562</p><p>已知存在一个按非降序排列的整数数组 <code>nums</code> ，数组中的值不必互不相同。</p><p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong> ，使数组变为 <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,4,4,5,6,6,7]</code> 在下标 <code>5</code> 处经旋转后可能变为 <code>[4,5,6,6,7,0,1,2,4,4]</code> 。</p><p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，请你编写一个函数来判断给定的目标值是否存在于数组中。如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回 <code>true</code> ，否则返回 <code>false</code> 。</p><p>你必须尽可能减少整个操作步骤。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,5,6,0,0,1,2], target = 0</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,5,6,0,0,1,2], target = 3</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>对于数组中有重复元素的情况，二分查找时可能会有 nums[left] = nums[mid] = nums[right]，此时无法判断哪个区间有序</p><p>例如nums=[3,1,2,3,3,3,3]，target=2，首次二分时无法判断区间 [0,3][0,3] 和区间 [4,6][4,6] 哪个是有序的。</p><p>对于这种情况，我们只能将当前二分区间的左边界加一，右边界减一，然后在新区间上继续二分查找。</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">            <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//这两个都不是 target 所以++--</span></span><br><span class="line">            <span class="keyword">if</span> (nums[left] == nums[mid] &amp;&amp; nums[mid] == nums[right]) {</span><br><span class="line">                ++left;</span><br><span class="line">                --right;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (nums[left] &lt;= nums[mid]) {</span><br><span class="line">                <span class="keyword">if</span> (nums[left] &lt;= target &amp;&amp; target &lt; nums[mid])</span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    left = mid + <span class="number">1</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">if</span> (nums[mid] &lt; target &amp;&amp; target &lt;= nums[n - <span class="number">1</span>]) </span><br><span class="line">                    left = mid + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="面试题-10-03-搜索旋转数组"><a href="#面试题-10-03-搜索旋转数组" class="headerlink" title="面试题 10.03. 搜索旋转数组"></a><a href="https://leetcode-cn.com/problems/search-rotate-array-lcci/">面试题 10.03. 搜索旋转数组</a></h3><p>难度中等83</p><p>搜索旋转数组。给定一个排序后的数组，包含n个整数，但这个数组已被旋转过很多次了，次数不详。请编写代码找出数组中的某个元素，假设数组元素原先是按升序排列的。若有多个相同元素，返回索引值最小的一个。</p><p><strong>示例1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 5</span><br><span class="line">输出: 8（元素5在该数组中的索引）</span><br></pre></td></tr></tbody></table></figure><p><strong>示例2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 11</span><br><span class="line">输出：-1 （没有找到）</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>和上面的一样</p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; arr, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(arr[<span class="number">0</span>]==target)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> r=arr.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> mid=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r){</span><br><span class="line">            mid=l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="comment">//mid值==target,则继续往左搜寻，找到最小的索引，最小索引一定不为0</span></span><br><span class="line">            <span class="keyword">if</span>(arr[mid]==target){</span><br><span class="line">                <span class="keyword">while</span>(mid&gt;<span class="number">0</span>&amp;&amp;arr[mid<span class="number">-1</span>]==arr[mid])  mid--;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//说明mid~r是递增序列，判读target是否在中间</span></span><br><span class="line">            <span class="keyword">if</span>(arr[mid]&lt;arr[r]){</span><br><span class="line">                <span class="keyword">if</span>(arr[mid]&lt;target&amp;&amp;target&lt;=arr[r]) l=mid+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span>    r=mid<span class="number">-1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//说明 l~mid 是递增序列，判读target是否在中间</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(arr[mid]&gt;arr[r]){</span><br><span class="line">                <span class="keyword">if</span>(arr[l]&lt;=target&amp;&amp;target&lt;arr[mid]) r=mid<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//arr[mid]==arr[r]说明要么r~0~mid都相等，要么mid~r都相等，无论哪种r 都可以舍去</span></span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                r--;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法</title>
      <link href="/2022/03/15/pai-xu-suan-fa/"/>
      <url>/2022/03/15/pai-xu-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h1><h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><p><a href="https://wiki.jikexueyuan.com/project/easy-learn-algorithm/bucket-sort.html">桶排序</a>是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。为了使桶排序更加高效，我们需要做到这两点：</p><ol><li>在额外空间充足的情况下，尽量增大桶的数量</li><li>使用的映射函数能够将输入的 N 个数据均匀的分配到 K 个桶中</li></ol><p>同时，对于桶中元素的排序，选择何种比较排序算法对于性能的影响至关重要。</p><h3 id="1-什么时候最快"><a href="#1-什么时候最快" class="headerlink" title="1. 什么时候最快"></a>1. 什么时候最快</h3><p>当输入的数据可以均匀的分配到每一个桶中。</p><h3 id="2-什么时候最慢"><a href="#2-什么时候最慢" class="headerlink" title="2. 什么时候最慢"></a>2. 什么时候最慢</h3><p>当输入的数据被分配到了同一个桶中。</p><h3 id="3-示意图"><a href="#3-示意图" class="headerlink" title="3. 示意图"></a>3. 示意图</h3><p>元素分布在桶中：</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/Bucket_sort_1.svg_.png" alt="img"></p><p>然后，元素在每个桶中排序：</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/Bucket_sort_2.svg_.png" alt="img"></p><p>代码：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iterator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUCKET_NUM = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>{</span></span><br><span class="line">        <span class="function"><span class="keyword">explicit</span> <span class="title">ListNode</span><span class="params">(<span class="keyword">int</span> i=<span class="number">0</span>)</span>:mData(i),mNext(NULL){</span>}</span><br><span class="line">        ListNode* mNext;</span><br><span class="line">        <span class="keyword">int</span> mData;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//有序链表插入val</span></span><br><span class="line"><span class="function">ListNode* <span class="title">insert</span><span class="params">(ListNode* head,<span class="keyword">int</span> val)</span></span>{</span><br><span class="line">        ListNode dummyNode;</span><br><span class="line">        ListNode *newNode = <span class="keyword">new</span> <span class="built_in">ListNode</span>(val);</span><br><span class="line">        ListNode *pre,*curr;</span><br><span class="line">        dummyNode.mNext = head;</span><br><span class="line">        pre = &amp;dummyNode;</span><br><span class="line">        curr = head;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">NULL</span>!=curr &amp;&amp; curr-&gt;mData&lt;=val){</span><br><span class="line">                pre = curr;</span><br><span class="line">                curr = curr-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">        newNode-&gt;mNext = curr;  <span class="comment">//插入val</span></span><br><span class="line">        pre-&gt;mNext = newNode;  <span class="comment">//拼接</span></span><br><span class="line">        <span class="keyword">return</span> dummyNode.mNext;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//合并两个有序链表</span></span><br><span class="line"><span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode *head1,ListNode *head2)</span></span>{</span><br><span class="line">        ListNode dummyNode;</span><br><span class="line">        ListNode *dummy = &amp;dummyNode;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">NULL</span>!=head1 &amp;&amp; <span class="literal">NULL</span>!=head2){</span><br><span class="line">                <span class="keyword">if</span>(head1-&gt;mData &lt;= head2-&gt;mData){</span><br><span class="line">                        dummy-&gt;mNext = head1;</span><br><span class="line">                        head1 = head1-&gt;mNext;</span><br><span class="line">                }<span class="keyword">else</span>{</span><br><span class="line">                        dummy-&gt;mNext = head2;</span><br><span class="line">                        head2 = head2-&gt;mNext;</span><br><span class="line">                }</span><br><span class="line">                dummy = dummy-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>!=head1) dummy-&gt;mNext = head1;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>!=head2) dummy-&gt;mNext = head2;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">return</span> dummyNode.mNext;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BucketSort</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> arr[])</span></span>{</span><br><span class="line">        <span class="function">vector&lt;ListNode*&gt; <span class="title">buckets</span><span class="params">(BUCKET_NUM,(ListNode*)(<span class="number">0</span>))</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i){</span><br><span class="line">                <span class="keyword">int</span> index = arr[i]/BUCKET_NUM;</span><br><span class="line">                ListNode *head = buckets.<span class="built_in">at</span>(index);</span><br><span class="line">                buckets.<span class="built_in">at</span>(index) = <span class="built_in">insert</span>(head,arr[i]);</span><br><span class="line">        }</span><br><span class="line">        ListNode *head = buckets.<span class="built_in">at</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;BUCKET_NUM;++i){</span><br><span class="line">                head = <span class="built_in">Merge</span>(head,buckets.<span class="built_in">at</span>(i));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i){</span><br><span class="line">                arr[i] = head-&gt;mData;</span><br><span class="line">                head = head-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p>冒泡排序（Bubble Sort）也是一种简单直观的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢”浮”到数列的顶端。</p><p>作为最简单的排序算法之一，冒泡排序给我的感觉就像 Abandon 在单词书里出现的感觉一样，每次都在第一页第一位，所以最熟悉。冒泡排序还有一种优化算法，就是立一个 flag，当在一趟序列遍历中元素没有发生交换，则证明该序列已经有序。但这种改进对于提升性能来</p><p>说并没有什么太大作用。</p><h3 id="1-算法步骤"><a href="#1-算法步骤" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</p><p>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。</p><p>针对所有的元素重复以上的步骤，除了最后一个。</p><p>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p><h3 id="2-动图演示"><a href="#2-动图演示" class="headerlink" title="2. 动图演示"></a>2. 动图演示</h3><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/bubbleSort.gif" alt="img"></p><p>每次遍历都会把极大值固定在最右侧，所以不需要完整的两个for</p><h3 id="3-什么时候最快"><a href="#3-什么时候最快" class="headerlink" title="3. 什么时候最快"></a>3. 什么时候最快</h3><p>当输入的数据已经是正序时（都已经是正序了，我还要你冒泡排序有何用啊）。</p><h3 id="4-什么时候最慢"><a href="#4-什么时候最慢" class="headerlink" title="4. 什么时候最慢"></a>4. 什么时候最慢</h3><p>当输入的数据是反序时（写一个 for 循环反序输出数据不就行了，干嘛要用你冒泡排序呢，我是闲的吗）。</p><h3 id="5-代码"><a href="#5-代码" class="headerlink" title="5. 代码"></a>5. 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">//整数或浮点数皆可使用,若要使用类(class)或结构体(struct)时必须重载大于(&gt;)运算符</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubble_sort</span><span class="params">(T arr[], <span class="keyword">int</span> len)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">                        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">                                <span class="built_in">swap</span>(arr[j], arr[j + <span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> arr[] = { <span class="number">61</span>, <span class="number">17</span>, <span class="number">29</span>, <span class="number">22</span>, <span class="number">34</span>, <span class="number">60</span>, <span class="number">72</span>, <span class="number">21</span>, <span class="number">50</span>, <span class="number">1</span>, <span class="number">62</span> };</span><br><span class="line">        <span class="keyword">int</span> len = (<span class="keyword">int</span>) <span class="built_in"><span class="keyword">sizeof</span></span>(arr) / <span class="built_in"><span class="keyword">sizeof</span></span>(*arr);</span><br><span class="line">        <span class="built_in">bubble_sort</span>(arr, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                cout &lt;&lt; arr[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">float</span> arrf[] = { <span class="number">17.5</span>, <span class="number">19.1</span>, <span class="number">0.6</span>, <span class="number">1.9</span>, <span class="number">10.5</span>, <span class="number">12.4</span>, <span class="number">3.8</span>, <span class="number">19.7</span>, <span class="number">1.5</span>, <span class="number">25.4</span>, <span class="number">28.6</span>, <span class="number">4.4</span>, <span class="number">23.8</span>, <span class="number">5.4</span> };</span><br><span class="line">        len = (<span class="keyword">float</span>) <span class="built_in"><span class="keyword">sizeof</span></span>(arrf) / <span class="built_in"><span class="keyword">sizeof</span></span>(*arrf);</span><br><span class="line">        <span class="built_in">bubble_sort</span>(arrf, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                cout &lt;&lt; arrf[i] &lt;&lt; <span class="string">' '</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><h3 id="1-算法步骤-1"><a href="#1-算法步骤-1" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><ol><li>从数列中挑出一个元素，称为 “基准”（pivot）;</li><li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</li><li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序；</li></ol><h3 id="2-动图演示-1"><a href="#2-动图演示-1" class="headerlink" title="2. 动图演示"></a>2. <a href="https://www.bilibili.com/video/BV1at411T75o">动图演示</a></h3><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/quickSort.gif" alt="img"></p><h3 id="3-代码-（二叉树的前序遍历）"><a href="#3-代码-（二叉树的前序遍历）" class="headerlink" title="3. 代码 （二叉树的前序遍历）"></a>3. 代码 （二叉树的前序遍历）</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分割函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Paritition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">    <span class="keyword">int</span> pivot = A[low];</span><br><span class="line">    <span class="keyword">while</span>(low&lt;high){</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high &amp;&amp; A[high] &gt;= pivot)</span><br><span class="line">            --high;  <span class="comment">//从右向左查找到第一个小于pivot的坐标</span></span><br><span class="line">        A[low] = A[high];</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high &amp;&amp; A[low] &lt;= pivot)</span><br><span class="line">            ++low;   <span class="comment">//从左向右查找到第一个大于pivot的坐标</span></span><br><span class="line">        A[high] = A[low];</span><br><span class="line">    }</span><br><span class="line">    A[low] = pivot; <span class="comment">//拿走的值返还 放到排序的位置</span></span><br><span class="line">    <span class="keyword">return</span> low;   <span class="comment">//返回的是一个位置</span></span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 洗牌算法，将输入的数组随机打乱 避免极端情况</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span></span>{</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> r = i + <span class="built_in">rand</span>()%(nums.<span class="built_in">size</span>() - i)</span><br><span class="line">        <span class="built_in">swap</span>(nums[i], nums[r]);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//快排母函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(low&lt;high){</span><br><span class="line">        <span class="keyword">int</span> pivot = <span class="built_in">Paritition</span>(A, low, high);</span><br><span class="line">        <span class="built_in">quickSort</span>(A, low, pivot<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">quickSort</span>(A, pivot+<span class="number">1</span>, high);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="215-数组中的第K个最大元素"><a href="#215-数组中的第K个最大元素" class="headerlink" title="215. 数组中的第K个最大元素"></a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第K个最大元素</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=215&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/#">思路</a></p><p>难度中等1553</p><p>给定整数数组 <code>nums</code> 和整数 <code>k</code>，请返回数组中第 <code>**k**</code> 个最大的元素。</p><p>请注意，你需要找的是数组排序后的第 <code>k</code> 个最大的元素，而不是第 <code>k</code> 个不同的元素。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,2,1,5,6,4] 和 k = 2</span><br><span class="line">输出: 5</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,2,3,1,2,4,5,5,6] 和 k = 4</span><br><span class="line">输出: 4</span><br></pre></td></tr></tbody></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= k &lt;= nums.length &lt;= 104</code></li><li><code>-104 &lt;= nums[i] &lt;= 104</code></li></ul><p>思路： </p><ol><li>快速排序  洗牌算法打乱原数组</li><li>明确排序区间 分治 以及 及时返回</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//快速排序</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//分割函数</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Paritition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> pivot = A[low];</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high){</span><br><span class="line">            <span class="keyword">while</span>(low&lt;high &amp;&amp; A[high] &gt;= pivot)</span><br><span class="line">                --high;</span><br><span class="line">            A[low] = A[high];</span><br><span class="line">            <span class="keyword">while</span>(low&lt;high &amp;&amp; A[low] &lt;= pivot)</span><br><span class="line">                ++low;</span><br><span class="line">            A[high] = A[low];</span><br><span class="line">        }</span><br><span class="line">        A[low] = pivot;  <span class="comment">//拿走的值返还 放到排序的位置</span></span><br><span class="line">        <span class="keyword">return</span> low;  <span class="comment">//返回的是一个位置</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(low&lt;high){</span><br><span class="line">            <span class="keyword">int</span> pivot = <span class="built_in">Paritition</span>(A, low, high);</span><br><span class="line">            <span class="comment">//注意 每一次快排都会确定一个位置，位置满足时，直接返回</span></span><br><span class="line">            <span class="keyword">if</span>(pivot == A.<span class="built_in">size</span>()-k) </span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//优化排序区间 有点类似于二分查找了</span></span><br><span class="line">            <span class="keyword">if</span>(pivot&gt;= A.<span class="built_in">size</span>() - k)</span><br><span class="line">                <span class="built_in">quickSort</span>(A, low, pivot<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">quickSort</span>(A, pivot+<span class="number">1</span>, high);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k;</span><br><span class="line">        <span class="built_in">shuffle</span>(nums);</span><br><span class="line">        <span class="built_in">quickSort</span>(nums, <span class="number">0</span>, nums.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span> nums[nums.<span class="built_in">size</span>()-k];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 洗牌算法，将输入的数组随机打乱 避免极端情况</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span></span>{</span><br><span class="line">        <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">int</span> r = i + <span class="built_in">rand</span>()%(nums.<span class="built_in">size</span>() - i);</span><br><span class="line">            <span class="built_in">swap</span>(nums[i], nums[r]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p>归并排序（Merge sort）是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。</p><p>作为一种典型的分而治之思想的算法应用，归并排序的实现由两种方法：</p><ul><li>自上而下的递归（所有递归的方法都可以用迭代重写，所以就有了第 2 种方法）；</li><li>自下而上的迭代；</li></ul><p>在《数据结构与算法 JavaScript 描述》中，作者给出了自下而上的迭代方法。但是对于递归法，作者却认为：</p><blockquote><p>However, it is not possible to do so in JavaScript, as the recursion goes too deep for the language to handle.</p><p>然而，在 JavaScript 中这种方式不太可行，因为这个算法的递归深度对它来讲太深了。</p></blockquote><p>说实话，我不太理解这句话。意思是 JavaScript 编译器内存太小，递归太深容易造成内存溢出吗？还望有大神能够指教。</p><p>和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是 O(nlogn) 的时间复杂度。代价是需要额外的内存空间。</p><h3 id="1-算法步骤-2"><a href="#1-算法步骤-2" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><ol><li>申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列；</li><li>设定两个指针，最初位置分别为两个已经排序序列的起始位置；</li><li>比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置；</li><li>重复步骤 3 直到某一指针达到序列尾；</li><li>将另一序列剩下的所有元素直接复制到合并序列尾。</li></ol><h3 id="2-动图演示-2"><a href="#2-动图演示-2" class="headerlink" title="2. 动图演示"></a>2. 动图演示</h3><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/mergeSort.gif" alt="img"></p><h3 id="3-代码-（二叉树的后序遍历）"><a href="#3-代码-（二叉树的后序遍历）" class="headerlink" title="3. 代码 （二叉树的后序遍历）"></a>3. 代码 （二叉树的后序遍历）</h3><p>迭代：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">// 整數或浮點數皆可使用,若要使用物件(class)時必須設定"小於"(&lt;)的運算子功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(T arr[], <span class="keyword">int</span> len)</span> </span>{</span><br><span class="line">    T *a = arr;</span><br><span class="line">    T *b = <span class="keyword">new</span> T[len];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> seg = <span class="number">1</span>; seg &lt; len; seg += seg) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>; start &lt; len; start += seg + seg) {</span><br><span class="line">            <span class="keyword">int</span> low = start, mid = <span class="built_in">min</span>(start + seg, len), high = <span class="built_in">min</span>(start + seg + seg, len);</span><br><span class="line">            <span class="keyword">int</span> k = low;</span><br><span class="line">            <span class="keyword">int</span> start1 = low, end1 = mid;</span><br><span class="line">            <span class="keyword">int</span> start2 = mid, end2 = high;</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1 &amp;&amp; start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start1] &lt; a[start2] ? a[start1++] : a[start2++];</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1)</span><br><span class="line">                b[k++] = a[start1++];</span><br><span class="line">            <span class="keyword">while</span> (start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start2++];</span><br><span class="line">        }</span><br><span class="line">        T *temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (a != arr) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            b[i] = a[i];</span><br><span class="line">        b = a;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">delete</span>[] b;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>递归：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, l, mid);</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, mid + <span class="number">1</span>, r);</span><br><span class="line">        <span class="keyword">int</span> i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r) {</span><br><span class="line">            <span class="keyword">if</span> (nums[i] &lt;= nums[j]) {</span><br><span class="line">                tmp[cnt++] = nums[i++];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line">                tmp[cnt++] = nums[j++];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) {</span><br><span class="line">            tmp[cnt++] = nums[i++];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= r) {</span><br><span class="line">            tmp[cnt++] = nums[j++];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; r - l + <span class="number">1</span>; ++i) {</span><br><span class="line">            nums[i + l] = tmp[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">sortArray</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        tmp.<span class="built_in">resize</span>((<span class="keyword">int</span>)nums.<span class="built_in">size</span>(), <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, <span class="number">0</span>, (<span class="keyword">int</span>)nums.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> nums;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前缀和/差分/字典树</title>
      <link href="/2022/03/15/xiao-suan-fa/"/>
      <url>/2022/03/15/xiao-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="前缀和数组"><a href="#前缀和数组" class="headerlink" title="前缀和数组"></a>前缀和数组</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrefixSum</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// 前缀和数组</span></span><br><span class="line">  vector&lt;<span class="keyword">int</span>&gt; prefix;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/* 输入一个数组，构造前缀和 */</span></span><br><span class="line">  <span class="built_in">PrefixSum</span>(vector&lt;<span class="keyword">int</span>&gt; nums) {</span><br><span class="line">    <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    prefix.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 计算 nums 的累加和</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">      prefix[i] = prefix[i - <span class="number">1</span>] + nums[i - <span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 查询闭区间 [i, j] 的累加和 */</span></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> prefix[j + <span class="number">1</span>] - prefix[i];</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="一维数组中的前缀和"><a href="#一维数组中的前缀和" class="headerlink" title="一维数组中的前缀和"></a>一维数组中的前缀和</h2><h3 id="303-区域和检索-数组不可变"><a href="#303-区域和检索-数组不可变" class="headerlink" title="303. 区域和检索 - 数组不可变"></a><a href="https://leetcode-cn.com/problems/range-sum-query-immutable/">303. 区域和检索 - 数组不可变</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=303&amp;target=gitee&amp;_=1646830143357">labuladong 题解</a><a href="https://leetcode-cn.com/problems/range-sum-query-immutable/#">思路</a></p><p>给定一个整数数组  <code>nums</code>，处理以下类型的多个查询:</p><ol><li>计算索引 <code>left</code> 和 <code>right</code> （包含 <code>left</code> 和 <code>right</code>）之间的 <code>nums</code> 元素的 <strong>和</strong> ，其中 <code>left &lt;= right</code></li></ol><p>实现 <code>NumArray</code> 类：</p><ul><li><code>NumArray(int[] nums)</code> 使用数组 <code>nums</code> 初始化对象</li><li><code>int sumRange(int i, int j)</code> 返回数组 <code>nums</code> 中索引 <code>left</code> 和 <code>right</code> 之间的元素的 <strong>总和</strong> ，包含 <code>left</code> 和 <code>right</code> 两点（也就是 <code>nums[left] + nums[left + 1] + ... + nums[right]</code> )</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["NumArray", "sumRange", "sumRange", "sumRange"]</span><br><span class="line">[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]</span><br><span class="line">输出：</span><br><span class="line">[null, 1, -1, -3]</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">NumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);</span><br><span class="line">numArray.sumRange(0, 2); // return 1 ((-2) + 0 + 3)</span><br><span class="line">numArray.sumRange(2, 5); // return -1 (3 + (-5) + 2 + (-1)) </span><br><span class="line">numArray.sumRange(0, 5); // return -3 ((-2) + 0 + 3 + (-5) + 2 + (-1))</span><br></pre></td></tr></tbody></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; preSum;</span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      preSum.<span class="built_in">resize</span>(nums.<span class="built_in">size</span>());</span><br><span class="line">      <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        sum+=nums[i];</span><br><span class="line">        preSum[i] = sum;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> left == <span class="number">0</span>?preSum[right]:(preSum[right] - preSum[left<span class="number">-1</span>]);</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单写法, 避免边界判断</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; preSum;</span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">      preSum.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n+<span class="number">1</span>; i++){</span><br><span class="line">        preSum[i] = preSum[i<span class="number">-1</span>] + nums[i<span class="number">-1</span>];</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> preSum[right+<span class="number">1</span>] - preSum[left];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="二维数组中的前缀和"><a href="#二维数组中的前缀和" class="headerlink" title="二维数组中的前缀和"></a>二维数组中的前缀和</h2><h3 id="304-二维区域和检索-矩阵不可变"><a href="#304-二维区域和检索-矩阵不可变" class="headerlink" title="304. 二维区域和检索 - 矩阵不可变"></a><a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/">304. 二维区域和检索 - 矩阵不可变</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=304&amp;target=gitee&amp;_=1646830216742">labuladong 题解</a><a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/#">思路</a></p><p>给定一个二维矩阵 <code>matrix</code>，以下类型的多个请求：</p><ul><li>计算其子矩形范围内元素的总和，该子矩阵的 <strong>左上角</strong> 为 <code>(row1, col1)</code> ，<strong>右下角</strong> 为 <code>(row2, col2)</code> 。</li></ul><p>实现 <code>NumMatrix</code> 类：</p><ul><li><code>NumMatrix(int[][] matrix)</code> 给定整数矩阵 <code>matrix</code> 进行初始化</li><li><code>int sumRegion(int row1, int col1, int row2, int col2)</code> 返回 <strong>左上角</strong> <code>(row1, col1)</code> 、<strong>右下角</strong> <code>(row2, col2)</code> 所描述的子矩阵的元素 <strong>总和</strong> 。</li></ul><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626332422-wUpUHT-image.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入: </span><br><span class="line">["NumMatrix","sumRegion","sumRegion","sumRegion"]</span><br><span class="line">[[[[3,0,1,4,2],[5,6,3,2,1],[1,2,0,1,5],[4,1,0,1,7],[1,0,3,0,5]]],[2,1,4,3],[1,1,2,2],[1,2,2,4]]</span><br><span class="line">输出: </span><br><span class="line">[null, 8, 11, 12]</span><br><span class="line"></span><br><span class="line">解释:</span><br><span class="line">NumMatrix numMatrix = new NumMatrix([[3,0,1,4,2],[5,6,3,2,1],[1,2,0,1,5],[4,1,0,1,7],[1,0,3,0,5]]);</span><br><span class="line">numMatrix.sumRegion(2, 1, 4, 3); // return 8 (红色矩形框的元素总和)</span><br><span class="line">numMatrix.sumRegion(1, 1, 2, 2); // return 11 (绿色矩形框的元素总和)</span><br><span class="line">numMatrix.sumRegion(1, 2, 2, 4); // return 12 (蓝色矩形框的元素总和)</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//笨比前缀和</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumMatrix</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; preSum;</span><br><span class="line">    <span class="built_in">NumMatrix</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix) {</span><br><span class="line">      <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">int</span> n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;n+<span class="number">1</span>; j++){</span><br><span class="line">          temp[j] = temp[j<span class="number">-1</span>] + matrix[i][j<span class="number">-1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        preSum.<span class="built_in">push_back</span>(temp);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRegion</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> col1, <span class="keyword">int</span> row2, <span class="keyword">int</span> col2)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> minRow = <span class="built_in">min</span>(row1, row2);</span><br><span class="line">      <span class="keyword">int</span> maxRow = <span class="built_in">max</span>(row1, row2);</span><br><span class="line">      <span class="keyword">int</span> minCol = <span class="built_in">min</span>(col1, col2);</span><br><span class="line">      <span class="keyword">int</span> maxCol = <span class="built_in">max</span>(col1, col2);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = minRow; i&lt;= maxRow; i++){</span><br><span class="line">        ans += preSum[i][maxCol+<span class="number">1</span>] - preSum[i][minCol];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//真正的二维前缀和数组</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumMatrix</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 定义：preSum[i][j] 记录 matrix 中子矩阵 [0, 0, i-1, j-1] 的元素和</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; preSum;</span><br><span class="line">    <span class="built_in">NumMatrix</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix) {</span><br><span class="line">      <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">int</span> n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">      <span class="comment">// 构造前缀和矩阵</span></span><br><span class="line">      preSum.<span class="built_in">resize</span>(m+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(n+<span class="number">1</span>));</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=m; i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;=n; j++){</span><br><span class="line">          <span class="comment">// 计算每个矩阵 [0, 0, i, j] 的元素和</span></span><br><span class="line">          preSum[i][j] = preSum[i<span class="number">-1</span>][j] + preSum[i][j<span class="number">-1</span>] - preSum[i<span class="number">-1</span>][j<span class="number">-1</span>] + matrix[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//速记 前缀和做减法的时候 永远是大的那边需要+1</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRegion</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> col1, <span class="keyword">int</span> row2, <span class="keyword">int</span> col2)</span> </span>{</span><br><span class="line">      <span class="comment">// 计算子矩阵 [x1, y1, x2, y2] 的元素和</span></span><br><span class="line">      <span class="keyword">return</span> preSum[row2 + <span class="number">1</span>][col2 + <span class="number">1</span>] - preSum[row1][col2+<span class="number">1</span>] -preSum[row2+<span class="number">1</span>][col1]  + preSum[row1][col1];</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="和为-k-的子数组"><a href="#和为-k-的子数组" class="headerlink" title="和为 k 的子数组"></a>和为 k 的子数组</h2><h3 id="560-和为-K-的子数组"><a href="#560-和为-K-的子数组" class="headerlink" title="560. 和为 K 的子数组"></a><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/">560. 和为 K 的子数组</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=560&amp;target=gitee&amp;_=1646835188259">labuladong 题解</a><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/#">思路</a></p><p>给你一个整数数组 <code>nums</code> 和一个整数 <code>k</code> ，请你统计并返回该数组中和为 <code>k</code> 的连续子数组的个数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,1], k = 2</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3], k = 3</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>重点在于哈希的初始化 </p><blockquote><p><u>比如说 从0到某个索引i的前缀和 就是k 也就是从头开始到i的连续子数组和presum[i]就是k，这个时候presum - k 就等于0了，提前把0放一个val = 1就可以统计这个情况了</u></p><p><u>当出现前缀和等于k的时候会把这段算到答案里，不然hashmap[0]默认为0，就会少一个解</u></p><blockquote><p><code>比如1 2 1 target = 2 就不会少</code></p><p><code>而1 1 1 target = 2 会少一个 情况为前两个1</code></p></blockquote></blockquote><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//笨比的前缀和用法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">preSum</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">        preSum[i] = preSum[i<span class="number">-1</span>] + nums[i<span class="number">-1</span>];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;=n; i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j&lt;=n; j++){</span><br><span class="line">          <span class="keyword">if</span>(preSum[j] - preSum[i] == k){</span><br><span class="line">            ans++;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>; start &lt; nums.<span class="built_in">size</span>(); ++start) {</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> end = start; end &gt;= <span class="number">0</span>; --end) {</span><br><span class="line">                sum += nums[end];</span><br><span class="line">                <span class="keyword">if</span> (sum == k) {</span><br><span class="line">                    count++;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//前缀和的最优解</span></span><br><span class="line"><span class="comment">//  3 5 2  -2 4  1    k = 5</span></span><br><span class="line"><span class="comment">//0 3 8 10 8 12 13  -5的个数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        mapp[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">//初始化</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); ++i) {</span><br><span class="line">          sum+=nums[i];</span><br><span class="line">          <span class="keyword">int</span> cc = mapp[sum-k];</span><br><span class="line">          count+=cc;</span><br><span class="line">          mapp[sum]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-011-0-和-1-个数相同的子数组"><a href="#剑指-Offer-II-011-0-和-1-个数相同的子数组" class="headerlink" title="剑指 Offer II 011. 0 和 1 个数相同的子数组"></a><a href="https://leetcode-cn.com/problems/A1NYOS/">剑指 Offer II 011. 0 和 1 个数相同的子数组</a></h3><p>难度中等54</p><p>给定一个二进制数组 <code>nums</code> , 找到含有相同数量的 <code>0</code> 和 <code>1</code> 的最长连续子数组，并返回该子数组的长度。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [0,1]</span><br><span class="line">输出: 2</span><br><span class="line">说明: [0, 1] 是具有相同数量 0 和 1 的最长连续子数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [0,1,0]</span><br><span class="line">输出: 2</span><br><span class="line">说明: [0, 1] (或 [1, 0]) 是具有相同数量 0 和 1 的最长连续子数组。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>将数组中的0换成-1， 求和为0的最长子数组 转换成前缀和问题</li><li>注意！处理0位置</li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findMaxLength</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    <span class="comment">//将数组中的0换成-1， 求和为0的最长子数组 转换成前缀和问题</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>&amp; num : nums) <span class="comment">//这样写一定要&amp;</span></span><br><span class="line">            <span class="keyword">if</span>(num == <span class="number">0</span>) num = <span class="number">-1</span>;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        mapp[<span class="number">0</span>] = <span class="number">-1</span>; <span class="comment">//注意！处理0位置</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            sum += nums[i];</span><br><span class="line">            <span class="keyword">if</span>(mapp.<span class="built_in">count</span>(sum)) <span class="comment">//之前也有前缀和 == sum</span></span><br><span class="line">                ans = <span class="built_in">max</span>(ans, i - mapp[sum]);</span><br><span class="line">            <span class="keyword">else</span> mapp[sum] = i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h1 id="差分数组"><a href="#差分数组" class="headerlink" title="差分数组"></a>差分数组</h1><p><strong>差分数组的主要适用场景是频繁对原始数组的某个区间的元素进行增减</strong>。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 差分数组工具类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Difference</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// 差分数组</span></span><br><span class="line">  vector&lt;<span class="keyword">int</span>&gt; diff;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/* 输入一个初始数组，区间操作将在这个数组上进行 */</span></span><br><span class="line">  <span class="built_in">Difference</span>(vector&lt;<span class="keyword">int</span>&gt; nums) {</span><br><span class="line">   <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    diff.<span class="built_in">resize</span>(n);;</span><br><span class="line">    <span class="comment">// 根据初始数组构造差分数组</span></span><br><span class="line">    diff[<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">      diff[i] = nums[i] - nums[i - <span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 给闭区间 [i,j] 增加 val（可以是负数）*/</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">increment</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">    diff[i] += val;</span><br><span class="line">    <span class="keyword">if</span> (j + <span class="number">1</span> &lt; diff.length) {</span><br><span class="line">      diff[j + <span class="number">1</span>] -= val;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 返回结果数组 */</span></span><br><span class="line">  <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">result</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(diff.size())</span></span>;</span><br><span class="line">    <span class="comment">// 根据差分数组构造结果数组</span></span><br><span class="line">    res[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; diff.length; i++) </span><br><span class="line">      res[i] = res[i - <span class="number">1</span>] + diff[i]</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="370-区间加法"><a href="#370-区间加法" class="headerlink" title="370. 区间加法"></a>370. 区间加法</h3><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/title1.png" alt="img" style="zoom:50%;"><p>可以直接用刚才的套路解决</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getModifiedArray</span><span class="params">(<span class="keyword">int</span> length, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; updates)</span> </span>{</span><br><span class="line">    <span class="comment">// nums 初始化为全 0</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nums</span><span class="params">(length)</span></span>;</span><br><span class="line">    <span class="comment">// 构造差分解法</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(length)</span></span>;</span><br><span class="line">  <span class="comment">//因为初始全为0 所以不需要如下初始化</span></span><br><span class="line">  <span class="comment">//diff[0] = nums[0];</span></span><br><span class="line">  <span class="comment">//for(int i = 1; i&lt;length; i++){</span></span><br><span class="line">    <span class="comment">//  diff[i] = nums[i] - nums[i-1];</span></span><br><span class="line">    <span class="comment">//}</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> update : updates) {</span><br><span class="line">        <span class="keyword">int</span> i = update[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> j = update[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> val = update[<span class="number">2</span>];</span><br><span class="line">        diff[i]+=val;</span><br><span class="line">      <span class="keyword">if</span>(j+<span class="number">1</span>&lt;length)</span><br><span class="line">          diff[j+<span class="number">1</span>]-=val;</span><br><span class="line">    }</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;length; i++){</span><br><span class="line">ans[i] = ans[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> df.<span class="built_in">result</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="1109-航班预订统计"><a href="#1109-航班预订统计" class="headerlink" title="1109. 航班预订统计"></a><a href="https://leetcode-cn.com/problems/corporate-flight-bookings/">1109. 航班预订统计</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=1109&amp;target=gitee&amp;_=1646842649748">labuladong 题解</a><a href="https://leetcode-cn.com/problems/corporate-flight-bookings/#">思路</a></p><p>这里有 <code>n</code> 个航班，它们分别从 <code>1</code> 到 <code>n</code> 进行编号。</p><p>有一份航班预订表 <code>bookings</code> ，表中第 <code>i</code> 条预订记录 <code>bookings[i] = [firsti, lasti, seatsi]</code> 意味着在从 <code>firsti</code> 到 <code>lasti</code> （<strong>包含</strong> <code>firsti</code> 和 <code>lasti</code> ）的 <strong>每个航班</strong> 上预订了 <code>seatsi</code> 个座位。</p><p>请你返回一个长度为 <code>n</code> 的数组 <code>answer</code>，里面的元素是每个航班预定的座位总数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入：bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5</span><br><span class="line">输出：[10,55,45,25,25]</span><br><span class="line">解释：</span><br><span class="line">航班编号        1   2   3   4   5</span><br><span class="line">预订记录 1 ：   10  10</span><br><span class="line">预订记录 2 ：       20  20</span><br><span class="line">预订记录 3 ：       25  25  25  25</span><br><span class="line">总座位数：      10  55  45  25  25</span><br><span class="line">因此，answer = [10,55,45,25,25]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">corpFlightBookings</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; bookings, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">origin</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="comment">//diff不需要初始化了；</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;bookings.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> left = bookings[i][<span class="number">0</span>]<span class="number">-1</span>; <span class="comment">//nmd坑老子</span></span><br><span class="line">        <span class="keyword">int</span> right = bookings[i][<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> val = bookings[i][<span class="number">2</span>];</span><br><span class="line">        <span class="comment">//操作</span></span><br><span class="line">        diff[left] += val;</span><br><span class="line">        <span class="keyword">if</span>(right + <span class="number">1</span> &lt;n){</span><br><span class="line">          diff[right+<span class="number">1</span>]-=val;</span><br><span class="line">        } </span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// for(int i = 0; i&lt;n; i++)</span></span><br><span class="line">      <span class="comment">//   cout&lt;&lt;diff[i]&lt;&lt;endl;</span></span><br><span class="line">      ans[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n; i++){</span><br><span class="line">        ans[i] = ans[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="1094-拼车"><a href="#1094-拼车" class="headerlink" title="1094. 拼车"></a><a href="https://leetcode-cn.com/problems/car-pooling/">1094. 拼车</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=1094&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/car-pooling/#">思路</a></p><p>假设你是一位顺风车司机，车上最初有 <code>capacity</code> 个空座位可以用来载客。由于道路的限制，车 <strong>只能</strong> 向一个方向行驶（也就是说，<strong>不允许掉头或改变方向</strong>，你可以将其想象为一个向量）。</p><p>这儿有一份乘客行程计划表 <code>trips[][]</code>，其中 <code>trips[i] = [num_passengers, start_location, end_location]</code> 包含了第 <code>i</code> 组乘客的行程信息：</p><ul><li>必须接送的乘客数量；</li><li>乘客的上车地点；</li><li>以及乘客的下车地点。</li></ul><p>这些给出的地点位置是从你的 <strong>初始</strong> 出发位置向前行驶到这些地点所需的距离（它们一定在你的行驶方向上）。</p><p>请你根据给出的行程计划表和车子的座位数，来判断你的车是否可以顺利完成接送所有乘客的任务（当且仅当你可以在所有给定的行程中接送所有乘客时，返回 <code>true</code>，否则请返回 <code>false</code>）。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：trips = [[2,1,5],[3,3,7]], capacity = 4</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：trips = [[2,1,5],[3,3,7]], capacity = 5</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">carPooling</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; trips, <span class="keyword">int</span> capacity)</span> </span>{</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(<span class="number">1001</span>)</span></span>;</span><br><span class="line">      <span class="comment">//diff不用初始化</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;trips.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> left = trips[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> right = trips[i][<span class="number">2</span>] - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> val = trips[i][<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//jiajiajia</span></span><br><span class="line">        diff[left]+=val;</span><br><span class="line">        <span class="keyword">if</span>(right + <span class="number">1</span>&lt;<span class="number">1001</span>)</span><br><span class="line">          diff[right+<span class="number">1</span>] -= val;</span><br><span class="line">      }</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">1001</span>)</span></span>;</span><br><span class="line">      res[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">if</span>(res[<span class="number">0</span>]&gt;capacity) <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//不要忘记</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;<span class="number">1001</span>; i++){</span><br><span class="line">        res[i] = res[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">        <span class="keyword">if</span>(res[i]&gt;capacity)</span><br><span class="line">          <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h1 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h1><h3 id="440-字典序的第K小数字"><a href="#440-字典序的第K小数字" class="headerlink" title="440. 字典序的第K小数字"></a><a href="https://leetcode-cn.com/problems/k-th-smallest-in-lexicographical-order/">440. 字典序的第K小数字</a></h3><p>难度困难450</p><p>给定整数 <code>n</code> 和 <code>k</code>，返回 <code>[1, n]</code> 中字典序第 <code>k</code> 小的数字。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 13, k = 2</span><br><span class="line">输出: 10</span><br><span class="line">解释: 字典序的排列是 [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9]，所以第二小的数字是 10。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 1, k = 1</span><br><span class="line">输出: 1</span><br></pre></td></tr></tbody></table></figure><p><strong>提示:</strong></p><ul><li><code>1 &lt;= k &lt;= n &lt;= 10e9</code></li></ul><p>思路：</p><ol><li><p>主要到此题数据量较大 不然可以直接使用sort   (对string)</p></li><li><p>字典树 统计节点个数 判断向下还是向右</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/v2-4af05d4805b7384eee3e7ab496940f75_r.jpg" alt="img" style="zoom:50%;"><ul><li>首先我们初始化 cur = 1</li><li>然后我们让 left = cur，right = cur + 1，此时 right-left 就是第一棵树第一层的节点个数</li><li>接下来 left *= 10, right *= 10，这样就进入到了第二层，此时 right-left 就是第二层的节点个数，以此类推直到 left &gt; n</li><li>但如果我们是统计 109 以内的字典序，进入第三层时，right 不能指向 200 而只能指向 109 (此时<code>right</code>也就是题目给定的范围个<code>n</code>)，<strong>此时 right-left+1 才是当前层的节点个数</strong></li></ul><p>假设我们统计完第一棵树的节点数为 node_num</p><ul><li>如果 K &gt;= node_num，我们需要继续向后查找，在后面的树中查找第 K-node_num 小的数字，也即更新 cur += 1</li><li>如果 K &lt; node_num，说明第 K 小的数字在子树中，我们需要进入子树继续向下查找，也即更新 cur *= 10</li></ul></li></ol><p>代码</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findKthNumber</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> curr = <span class="number">1</span>;</span><br><span class="line">        k--;</span><br><span class="line">        <span class="keyword">while</span>(k&gt;<span class="number">0</span>){</span><br><span class="line">            <span class="comment">//这里的left和right很巧妙的统计了下层节点的个数</span></span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> left = curr;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> right = curr + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> node_num = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 统计树中每一层的节点个数</span></span><br><span class="line">            <span class="keyword">while</span>(left&lt;=n){</span><br><span class="line">                node_num += <span class="built_in">min</span>(right, (<span class="keyword">long</span> <span class="keyword">long</span>)(n+<span class="number">1</span>)) - left;</span><br><span class="line">                left*=<span class="number">10</span>;</span><br><span class="line">                right*=<span class="number">10</span>; </span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(node_num&lt;=k){<span class="comment">// 向右查找</span></span><br><span class="line">                curr++;</span><br><span class="line">                k-=node_num;</span><br><span class="line">            }<span class="keyword">else</span>{ <span class="comment">// 进入子树查找</span></span><br><span class="line">                curr*=<span class="number">10</span>;</span><br><span class="line">                k--;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> curr;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图论</title>
      <link href="/2022/03/15/tu-lun/"/>
      <url>/2022/03/15/tu-lun/</url>
      
        <content type="html"><![CDATA[<h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><h3 id="797-所有可能的路径"><a href="#797-所有可能的路径" class="headerlink" title="797. 所有可能的路径"></a><a href="https://leetcode-cn.com/problems/all-paths-from-source-to-target/">797. 所有可能的路径</a></h3><p>难度中等262收藏分享切换为英文接收动态反馈</p><p>给你一个有 <code>n</code> 个节点的 <strong>有向无环图（DAG）</strong>，请你找出所有从节点 <code>0</code> 到节点 <code>n-1</code> 的路径并输出（<strong>不要求按特定顺序</strong>）</p><p> <code>graph[i]</code> 是一个从节点 <code>i</code> 可以访问的所有节点的列表（即从节点 <code>i</code> 到节点 <code>graph[i][j]</code>存在一条有向边）。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/all_1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,2],[3],[3],[]]</span><br><span class="line">输出：[[0,1,3],[0,2,3]]</span><br><span class="line">解释：有两条路径 0 -&gt; 1 -&gt; 3 和 0 -&gt; 2 -&gt; 3</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/all_2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[4,3,1],[3,2,4],[3],[4],[]]</span><br><span class="line">输出：[[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>类似多叉树的遍历</li><li>for内for外两种写法</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="两种写法"><a href="#两种写法" class="headerlink" title="两种写法"></a>两种写法</h5><ol><li>==push pop在for外 但是最后需要pop==</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">allPathsSourceTarget</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph) {</span><br><span class="line">        <span class="built_in">traverse</span>(graph, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        path.<span class="built_in">push_back</span>(s);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(s == graph.<span class="built_in">size</span>()<span class="number">-1</span>){</span><br><span class="line">            res.<span class="built_in">push_back</span>(path);</span><br><span class="line">            path.<span class="built_in">pop_back</span>(); <span class="comment">//！</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v : graph[s]){</span><br><span class="line">            <span class="built_in">traverse</span>(graph, v);</span><br><span class="line">        }</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><u>==push pop在for内 但是第一个元素需要先压入==</u></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">allPathsSourceTarget</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph) {</span><br><span class="line">        path.<span class="built_in">push_back</span>(<span class="number">0</span>);  <span class="comment">//!</span></span><br><span class="line">        <span class="built_in">traverse</span>(graph, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(s == graph.<span class="built_in">size</span>()<span class="number">-1</span>){</span><br><span class="line">            res.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v : graph[s]){</span><br><span class="line">            path.<span class="built_in">push_back</span>(v);</span><br><span class="line">            <span class="built_in">traverse</span>(graph, v);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a><a href="https://labuladong.gitee.io/algo/2/20/38/">拓扑排序</a></h2><h3 id="207-课程表"><a href="#207-课程表" class="headerlink" title="207. 课程表"></a><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=207&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/course-schedule/#">思路</a></p><p>你这个学期必须选修 <code>numCourses</code> 门课程，记为 <code>0</code> 到 <code>numCourses - 1</code> 。</p><p>在选修某些课程之前需要一些先修课程。 先修课程按数组 <code>prerequisites</code> 给出，其中 <code>prerequisites[i] = [ai, bi]</code> ，表示如果要学习课程 <code>ai</code> 则 <strong>必须</strong> 先学习课程 <code>bi</code> 。</p><ul><li>例如，先修课程对 <code>[0, 1]</code> 表示：想要学习课程 <code>0</code> ，你需要先完成课程 <code>1</code> 。</li></ul><p>请你判断是否可能完成所有课程的学习？如果可以，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0]]</span><br><span class="line">输出：true</span><br><span class="line">解释：总共有 2 门课程。学习课程 1 之前，你需要完成课程 0 。这是可能的。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0],[0,1]]</span><br><span class="line">输出：false</span><br><span class="line">解释：总共有 2 门课程。学习课程 1 之前，你需要先完成课程 0 ；并且学习课程 0 之前，你还应先完成课程 1 。这是不可能的。</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;  <span class="comment">//记录的是遍历过的 用于终止遍历 提高效率 不加会超时 用 visited 数组防止走回头路</span></span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; onPath;   <span class="comment">//记录每次遍历过的节点，用于查环</span></span><br><span class="line">    <span class="keyword">bool</span> hasCycle;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canFinish</span><span class="params">(<span class="keyword">int</span> numCourses, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; prerequisites)</span> </span>{</span><br><span class="line">        <span class="comment">//建图</span></span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">graph</span>(numCourses);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> edge: prerequisites){</span><br><span class="line">            <span class="keyword">int</span> from = edge[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> to = edge[<span class="number">0</span>];</span><br><span class="line">            graph[from].<span class="built_in">push_back</span>(to);</span><br><span class="line">        }</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        onPath = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        hasCycle = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numCourses; i++){</span><br><span class="line">            <span class="comment">//遍历所有节点</span></span><br><span class="line">            <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> !hasCycle;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(onPath[s]) <span class="comment">//出现环</span></span><br><span class="line">            hasCycle = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(visited[s] || hasCycle)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//前序代码位置</span></span><br><span class="line">        visited[s] = <span class="number">1</span>;</span><br><span class="line">        onPath[s] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t : graph[s])</span><br><span class="line">            <span class="built_in">traverse</span>(graph, t);</span><br><span class="line">        <span class="comment">//后序遍历位置</span></span><br><span class="line">        onPath[s] = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="210-课程表-II"><a href="#210-课程表-II" class="headerlink" title="210. 课程表 II"></a><a href="https://leetcode-cn.com/problems/course-schedule-ii/">210. 课程表 II</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=210&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/course-schedule-ii/#">思路</a></p><p>难度中等582收藏分享切换为英文接收动态反馈</p><p>现在你总共有 <code>numCourses</code> 门课需要选，记为 <code>0</code> 到 <code>numCourses - 1</code>。给你一个数组 <code>prerequisites</code> ，其中 <code>prerequisites[i] = [ai, bi]</code> ，表示在选修课程 <code>ai</code> 前 <strong>必须</strong> 先选修 <code>bi</code> 。</p><ul><li>例如，想要学习课程 <code>0</code> ，你需要先完成课程 <code>1</code> ，我们用一个匹配来表示：<code>[0,1]</code> 。</li></ul><p>返回你为了学完所有课程所安排的学习顺序。可能会有多个正确的顺序，你只要返回 <strong>任意一种</strong> 就可以了。如果不可能完成所有课程，返回 <strong>一个空数组</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0]]</span><br><span class="line">输出：[0,1]</span><br><span class="line">解释：总共有 2 门课程。要学习课程 1，你需要先完成课程 0。因此，正确的课程顺序为 [0,1] 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]</span><br><span class="line">输出：[0,2,1,3]</span><br><span class="line">解释：总共有 4 门课程。要学习课程 3，你应该先完成课程 1 和课程 2。并且课程 1 和课程 2 都应该排在课程 0 之后。</span><br><span class="line">因此，一个正确的课程顺序是 [0,1,2,3] 。另一个正确的排序是 [0,2,1,3] 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 1, prerequisites = []</span><br><span class="line">输出：[0]</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; onPath;</span><br><span class="line">    <span class="keyword">bool</span> hasCycle;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; postOrder;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">findOrder</span><span class="params">(<span class="keyword">int</span> numCourses, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; prerequisites)</span> </span>{</span><br><span class="line">        <span class="comment">//建图</span></span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">graph</span>(numCourses);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> edge: prerequisites){</span><br><span class="line">            <span class="keyword">int</span> from = edge[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> to = edge[<span class="number">0</span>];</span><br><span class="line">            graph[from].<span class="built_in">push_back</span>(to);</span><br><span class="line">        }</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        onPath = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        hasCycle = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numCourses; i++){</span><br><span class="line">            <span class="comment">//遍历所有节点</span></span><br><span class="line">            <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(hasCycle)  <span class="keyword">return</span> vector&lt;<span class="keyword">int</span>&gt;{};</span><br><span class="line">        <span class="built_in">reverse</span>(postOrder.<span class="built_in">begin</span>(), postOrder.<span class="built_in">end</span>());  <span class="comment">//拓扑排序是后序遍历的反转 注意 后序的常规理解图的后序遍历</span></span><br><span class="line">        <span class="keyword">return</span> postOrder;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(onPath[s]) <span class="comment">//出现环</span></span><br><span class="line">            hasCycle = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(visited[s] || hasCycle)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//前序代码位置</span></span><br><span class="line">        visited[s] = <span class="number">1</span>;</span><br><span class="line">        onPath[s] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t : graph[s])</span><br><span class="line">            <span class="built_in">traverse</span>(graph, t);</span><br><span class="line">        <span class="comment">//后序遍历位置</span></span><br><span class="line">        onPath[s] = <span class="number">0</span>;</span><br><span class="line">        postOrder.<span class="built_in">push_back</span>(s); <span class="comment">//记录后序遍历</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="二分图判定"><a href="#二分图判定" class="headerlink" title="二分图判定"></a><a href="https://labuladong.gitee.io/algo/2/20/40/">二分图判定</a></h2><h3 id="785-判断二分图"><a href="#785-判断二分图" class="headerlink" title="785. 判断二分图"></a><a href="https://leetcode-cn.com/problems/is-graph-bipartite/">785. 判断二分图</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=785&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/is-graph-bipartite/#">思路</a></p><p>难度中等347收藏分享切换为英文接收动态反馈</p><p>存在一个 <strong>无向图</strong> ，图中有 <code>n</code> 个节点。其中每个节点都有一个介于 <code>0</code> 到 <code>n - 1</code> 之间的唯一编号。给你一个二维数组 <code>graph</code> ，其中 <code>graph[u]</code> 是一个节点数组，由节点 <code>u</code> 的邻接节点组成。形式上，对于 <code>graph[u]</code> 中的每个 <code>v</code> ，都存在一条位于节点 <code>u</code> 和节点 <code>v</code> 之间的无向边。该无向图同时具有以下属性：</p><ul><li>不存在自环（<code>graph[u]</code> 不包含 <code>u</code>）。</li><li>不存在平行边（<code>graph[u]</code> 不包含重复值）。</li><li>如果 <code>v</code> 在 <code>graph[u]</code> 内，那么 <code>u</code> 也应该在 <code>graph[v]</code> 内（该图是无向图）</li><li>这个图可能不是连通图，也就是说两个节点 <code>u</code> 和 <code>v</code> 之间可能不存在一条连通彼此的路径。</li></ul><p><strong>二分图</strong> 定义：如果能将一个图的节点集合分割成两个独立的子集 <code>A</code> 和 <code>B</code> ，并使图中的每一条边的两个节点一个来自 <code>A</code> 集合，一个来自 <code>B</code> 集合，就将这个图称为 <strong>二分图</strong> 。</p><p>如果图是二分图，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/bi2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,2,3],[0,2],[0,1,3],[0,2]]</span><br><span class="line">输出：false</span><br><span class="line">解释：不能将节点分割成两个独立的子集，以使每条边都连通一个子集中的一个节点与另一个子集中的一个节点。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/bi1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,3],[0,2],[1,3],[0,2]]</span><br><span class="line">输出：true</span><br><span class="line">解释：可以将节点分成两组: {0, 2} 和 {1, 3} 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>对整个图进行交替染色 若可以完全染色 则为二分图</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 给图上色 如果可以完全上色 则表示为二分图</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isBipartite</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph)</span> </span>{</span><br><span class="line">        <span class="keyword">bool</span> ok = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = graph.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">color</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">0</span>; v&lt;n; v++){</span><br><span class="line">            <span class="keyword">if</span>(!used[v])</span><br><span class="line">                <span class="built_in">traverse</span>(graph, v, used, color, ok);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ok;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> v, vector&lt;<span class="keyword">bool</span>&gt;&amp; used, vector&lt;<span class="keyword">bool</span>&gt;&amp; color, <span class="keyword">bool</span>&amp; ok)</span></span>{</span><br><span class="line">        <span class="comment">//如果确定不是二分图了 就不用再浪费时间遍历了</span></span><br><span class="line">        <span class="keyword">if</span>(!ok) <span class="keyword">return</span>;</span><br><span class="line">        used[v] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> w : graph[v]){</span><br><span class="line">            <span class="keyword">if</span>(!used[w]){</span><br><span class="line">                color[w] = !color[v];</span><br><span class="line">                <span class="built_in">traverse</span>(graph, w, used, color, ok);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">if</span>(color[w] == color[v]){</span><br><span class="line">                    ok = <span class="literal">false</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="886-可能的二分法"><a href="#886-可能的二分法" class="headerlink" title="886. 可能的二分法"></a><a href="https://leetcode-cn.com/problems/possible-bipartition/">886. 可能的二分法</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=886&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/possible-bipartition/#">思路</a></p><p>难度中等161</p><p>给定一组 <code>n</code> 人（编号为 <code>1, 2, ..., n</code>）， 我们想把每个人分进<strong>任意</strong>大小的两组。每个人都可能不喜欢其他人，那么他们不应该属于同一组。</p><p>给定整数 <code>n</code> 和数组 <code>dislikes</code> ，其中 <code>dislikes[i] = [ai, bi]</code> ，表示不允许将编号为 <code>ai</code> 和 <code>bi</code>的人归入同一组。当可以用这种方法将所有人分进两组时，返回 <code>true</code>；否则返回 <code>false</code>。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, dislikes = [[1,2],[1,3],[2,4]]</span><br><span class="line">输出：true</span><br><span class="line">解释：group1 [1,4], group2 [2,3]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, dislikes = [[1,2],[1,3],[2,3]]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>首先构造邻接表（细节， 编号为1-n）</li><li>上色</li></ol><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">bool</span> ans;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; color;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="comment">//注意编号 1-n</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">possibleBipartition</span><span class="params">(<span class="keyword">int</span> n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes)</span> </span>{</span><br><span class="line">        ans = <span class="number">1</span>;</span><br><span class="line">        color.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(n+<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; dislikess = <span class="built_in">buildGraph</span>(dislikes,n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i])</span><br><span class="line">                <span class="built_in">traverse</span>(dislikess, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这是一个双向图 你恨我 我恨你</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">buildGraph</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes, <span class="keyword">int</span> n){</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">res</span>(n+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span>; i&lt;dislikes.<span class="built_in">size</span>(); i++){</span><br><span class="line">            res[dislikes[i][<span class="number">0</span>]].<span class="built_in">push_back</span>(dislikes[i][<span class="number">1</span>]);</span><br><span class="line">            res[dislikes[i][<span class="number">1</span>]].<span class="built_in">push_back</span>(dislikes[i][<span class="number">0</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//上色函数 经典 完全一致</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">       ·</span><br><span class="line">        visited[index] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> newIndex : dislikes[index]){</span><br><span class="line">            <span class="keyword">if</span>(!visited[newIndex]){</span><br><span class="line">                color[newIndex] = !color[index];</span><br><span class="line">                <span class="built_in">traverse</span>(dislikes, newIndex);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">if</span>(color[index] == color[newIndex])</span><br><span class="line">                    ans = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="并查集（UNION-FIND）算法"><a href="#并查集（UNION-FIND）算法" class="headerlink" title="并查集（UNION-FIND）算法"></a>并查集（UNION-FIND）算法</h2><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//连同分量的个数</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="comment">// 存储每个节点的父节点</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// n 为图中节点的个数</span></span><br><span class="line"><span class="built_in">UF</span>(<span class="keyword">int</span> n) {</span><br><span class="line">cnt = n;</span><br><span class="line">parent.<span class="built_in">resize</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">parent[i] = i;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//联通节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">if</span> (rootP == rootQ)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">parent[rootQ] = rootP;</span><br><span class="line">cnt--;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断节点 p 和节点 q 是否连通</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">return</span> rootP == rootQ;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回节点 x 的连通分量根节点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (parent[x] != x) {</span><br><span class="line"><span class="comment">// 进行路径压缩</span></span><br><span class="line">parent[x] = parent[parent[x]];</span><br><span class="line">x = parent[x];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回图中的连通分量个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span> </span>{ <span class="keyword">return</span> cnt; }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="547-省份数量"><a href="#547-省份数量" class="headerlink" title="547. 省份数量"></a><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></h3><p>难度中等747</p><p>有 <code>n</code> 个城市，其中一些彼此相连，另一些没有相连。如果城市 <code>a</code> 与城市 <code>b</code> 直接相连，且城市 <code>b</code> 与城市 <code>c</code> 直接相连，那么城市 <code>a</code> 与城市 <code>c</code> 间接相连。</p><p><strong>省份</strong> 是一组直接或间接相连的城市，组内不含其他没有相连的城市。</p><p>给你一个 <code>n x n</code> 的矩阵 <code>isConnected</code> ，其中 <code>isConnected[i][j] = 1</code> 表示第 <code>i</code> 个城市和第 <code>j</code> 个城市直接相连，而 <code>isConnected[i][j] = 0</code> 表示二者不直接相连。</p><p>返回矩阵中 <strong>省份</strong> 的数量。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/graph1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：isConnected = [[1,1,0],[1,1,0],[0,0,1]]</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/graph2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：isConnected = [[1,0,0],[0,1,0],[0,0,1]]</span><br><span class="line">输出：3</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li>标准的并查集题目 模板直接使用</li><li>转换成邻接表dfs</li><li>邻接图 dfs 按相连的逻辑去进行dfs 最优</li></ol><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><ol><li>标准的并查集题目 模板直接使用</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//连同分量的个数</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="comment">// 存储每个节点的父节点</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// n 为图中节点的个数</span></span><br><span class="line"><span class="built_in">UF</span>(<span class="keyword">int</span> n) {</span><br><span class="line">cnt = n;</span><br><span class="line">parent.<span class="built_in">resize</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">parent[i] = i;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//联通节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">if</span> (rootP == rootQ)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">parent[rootQ] = rootP;</span><br><span class="line">cnt--;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断节点 p 和节点 q 是否连通</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">return</span> rootP == rootQ;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回节点 x 的连通分量根节点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (parent[x] != x) {</span><br><span class="line"><span class="comment">// 进行路径压缩</span></span><br><span class="line">parent[x] = parent[parent[x]];</span><br><span class="line">x = parent[x];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回图中的连通分量个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span> </span>{ <span class="keyword">return</span> cnt; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="function">UF <span class="title">uf</span><span class="params">(isConnected.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;isConnected[i].<span class="built_in">size</span>(); j++){</span><br><span class="line">                <span class="keyword">if</span>(isConnected[i][j])</span><br><span class="line">                    uf.<span class="built_in">unionn</span>(i, j);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> uf.<span class="built_in">count</span>();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>转换成邻接表dfs</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = isConnected.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; graph = <span class="built_in">buildGraph</span>(isConnected);</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i]){</span><br><span class="line">                <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">                ans++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">        visited[index] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> newIndex : graph[index]){</span><br><span class="line">            <span class="keyword">if</span>(!visited[newIndex]){</span><br><span class="line">                <span class="comment">//如果使用全局ans 在此处--是不对的</span></span><br><span class="line">                <span class="built_in">traverse</span>(graph, newIndex); </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">buildGraph</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected){</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">res</span>(isConnected.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;isConnected[i].<span class="built_in">size</span>(); j++){</span><br><span class="line">                <span class="keyword">if</span>(isConnected[i][j] == <span class="number">1</span>){</span><br><span class="line">                    res[i].<span class="built_in">push_back</span>(j);</span><br><span class="line">                    res[j].<span class="built_in">push_back</span>(i);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>邻接图 dfs</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = isConnected.<span class="built_in">size</span>();</span><br><span class="line">        visited =vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i]){</span><br><span class="line">                ans++;</span><br><span class="line">                <span class="built_in">dfs</span>(isConnected, i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected, <span class="keyword">int</span> nowPro)</span></span>{</span><br><span class="line">        visited[nowPro] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected[nowPro].<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i] &amp;&amp; isConnected[nowPro][i] == <span class="number">1</span>){</span><br><span class="line">                <span class="built_in">dfs</span>(isConnected, i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }   </span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="130-被围绕的区域"><a href="#130-被围绕的区域" class="headerlink" title="130. 被围绕的区域"></a><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=130&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/surrounded-regions/#">思路</a></p><p>难度中等750收藏分享切换为英文接收动态反馈</p><p>给你一个 <code>m x n</code> 的矩阵 <code>board</code> ，由若干字符 <code>'X'</code> 和 <code>'O'</code> ，找到所有被 <code>'X'</code> 围绕的区域，并将这些区域里所有的 <code>'O'</code> 用 <code>'X'</code> 填充。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/xogrid.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：board = [["X","X","X","X"],["X","O","O","X"],["X","X","O","X"],["X","O","X","X"]]</span><br><span class="line">输出：[["X","X","X","X"],["X","X","X","X"],["X","X","X","X"],["X","O","X","X"]]</span><br><span class="line">解释：被围绕的区间不会存在于边界上，换句话说，任何边界上的 'O' 都不会被填充为 'X'。 任何不在边界上，或不与边界上的 'O' 相连的 'O' 最终都会被填充为 'X'。如果两个元素在水平或垂直方向相邻，则称它们是“相连”的。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li>dfs这也是比较常规的 四周开始</li><li>并查集 重点理解如何使用这种数据结构</li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><h5 id="dfs"><a href="#dfs" class="headerlink" title="dfs"></a>dfs</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = board.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> n = board[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">bool</span>&gt;&gt; <span class="built_in">isIsland</span>(m, vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">if</span>(board[i][<span class="number">0</span>] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, i, <span class="number">0</span>, isIsland);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(board[i][n<span class="number">-1</span>] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, i, n<span class="number">-1</span>, isIsland);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(board[<span class="number">0</span>][i] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, <span class="number">0</span>, i, isIsland);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(board[m<span class="number">-1</span>][i] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, m<span class="number">-1</span>, i, isIsland);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(board[i][j] == <span class="string">'O'</span> &amp;&amp; !isIsland[i][j])</span><br><span class="line">                    board[i][j] = <span class="string">'X'</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">effect</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board, <span class="keyword">int</span> x, <span class="keyword">int</span> y, vector&lt;vector&lt;<span class="keyword">bool</span>&gt;&gt;&amp; isIsland)</span></span>{</span><br><span class="line">        <span class="comment">//如果不加入island判断就会陷入死循环</span></span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span> || y&lt;<span class="number">0</span> || x&gt;= board.<span class="built_in">size</span>() || y&gt;=board[<span class="number">0</span>].<span class="built_in">size</span>() || board[x][y]!=<span class="string">'O'</span> || isIsland[x][y]){</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        isIsland[x][y] = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">effect</span>(board, x+<span class="number">1</span>, y, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x<span class="number">-1</span>, y, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x, y+<span class="number">1</span>, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x, y<span class="number">-1</span>, isIsland);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h5><p><code>使用node为节点进行连接 将网格上的节点映射到数值上</code></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">   vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">UF</span>(<span class="keyword">int</span> n){</span><br><span class="line">        parent.<span class="built_in">resize</span>(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line">        <span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line">        <span class="keyword">if</span>(rootP == rootQ) <span class="keyword">return</span>;</span><br><span class="line">        parent[rootP] = rootQ;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line">        <span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line">        <span class="keyword">return</span> rootQ == rootP;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>{</span><br><span class="line">        <span class="keyword">while</span>(parent[x]!= x){</span><br><span class="line">            parent[x] = parent[parent[x]];</span><br><span class="line">            x = parent[x];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board)</span> </span>{</span><br><span class="line">        m = board.<span class="built_in">size</span>();</span><br><span class="line">        n = board[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">UF <span class="title">uf</span><span class="params">(m*n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">int</span> dumpyNode = m*n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(board[i][j] == <span class="string">'O'</span>){</span><br><span class="line">                    <span class="keyword">if</span>(i == <span class="number">0</span> || j == <span class="number">0</span> || i == m<span class="number">-1</span> || j == n<span class="number">-1</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(dumpyNode, <span class="built_in">node</span>(i, j));</span><br><span class="line">                    <span class="keyword">else</span>{</span><br><span class="line">                    <span class="comment">//里面的和上下左右联通</span></span><br><span class="line">                    <span class="keyword">if</span>(i&gt;<span class="number">0</span> &amp;&amp; board[i<span class="number">-1</span>][j] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i<span class="number">-1</span>, j));</span><br><span class="line">                    <span class="keyword">if</span>(j&gt;<span class="number">0</span> &amp;&amp; board[i][j<span class="number">-1</span>] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i, j<span class="number">-1</span>));</span><br><span class="line">                    <span class="keyword">if</span>(i&lt;m<span class="number">-1</span> &amp;&amp; board[i+<span class="number">1</span>][j] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i+<span class="number">1</span>, j));</span><br><span class="line">                    <span class="keyword">if</span>(j&lt;n<span class="number">-1</span> &amp;&amp; board[i][j+<span class="number">1</span>] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i, j+<span class="number">1</span>));</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(uf.<span class="built_in">connected</span>(<span class="built_in">node</span>(i, j), dumpyNode))</span><br><span class="line">                    board[i][j] = <span class="string">'O'</span>;</span><br><span class="line">                <span class="keyword">else</span> board[i][j] = <span class="string">'X'</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>{</span><br><span class="line">        <span class="keyword">return</span>  x*n + y;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/15/lian-biao/"/>
      <url>/2022/03/15/lian-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="单链表解题套路"><a href="#单链表解题套路" class="headerlink" title="单链表解题套路"></a>单链表解题套路</h2><h3 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21. 合并两个有序链表"></a><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=21&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/#">思路</a></p><p>难度简单2259</p><p>将两个升序链表合并为一个新的 <strong>升序</strong> 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 </p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203121556763.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [1,2,4], l2 = [1,3,4]</span><br><span class="line">输出：[1,1,2,3,4,4]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [], l2 = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></tbody></table></figure><p><strong>提示：</strong></p><ul><li>两个链表的节点数目范围是 <code>[0, 50]</code></li><li><code>-100 &lt;= Node.val &lt;= 100</code></li><li><code>l1</code> 和 <code>l2</code> 均按 <strong>非递减顺序</strong> 排列</li></ul><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>虚拟头节点占位</li><li>while循环&amp;&amp; 交替前进 </li><li>[1 2 3] [4 5 6] 这种情况 会先遍历完第一个 然后在后面的if判断中 拼接第二个list</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode* list1, ListNode* list2)</span> </span>{</span><br><span class="line">      ListNode* pre = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">      ListNode* curr = pre;</span><br><span class="line">      <span class="keyword">while</span>(list1 &amp;&amp; list2){</span><br><span class="line">        <span class="keyword">if</span>(list1-&gt;val &lt; list2-&gt;val){</span><br><span class="line">          curr-&gt;next = list1;</span><br><span class="line">          list1 = list1-&gt;next;</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">          curr-&gt;next = list2;</span><br><span class="line">          list2 = list2-&gt;next;         </span><br><span class="line">        }</span><br><span class="line">        curr = curr-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(list1) curr-&gt;next = list1;</span><br><span class="line">      <span class="keyword">if</span>(list2) curr-&gt;next = list2;</span><br><span class="line">      <span class="keyword">return</span> pre-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="23-合并K个升序链表"><a href="#23-合并K个升序链表" class="headerlink" title="23. 合并K个升序链表"></a><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/">23. 合并K个升序链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=23&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/#">思路</a></p><p>难度困难1803收藏分享切换为英文接收动态反馈</p><p>给你一个链表数组，每个链表都已经按升序排列。</p><p>请你将所有链表合并到一个升序链表中，返回合并后的链表。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：lists = [[1,4,5],[1,3,4],[2,6]]</span><br><span class="line">输出：[1,1,2,3,4,4,5,6]</span><br><span class="line">解释：链表数组如下：</span><br><span class="line">[</span><br><span class="line">  1-&gt;4-&gt;5,</span><br><span class="line">  1-&gt;3-&gt;4,</span><br><span class="line">  2-&gt;6</span><br><span class="line">]</span><br><span class="line">将它们合并到一个有序链表中得到。</span><br><span class="line">1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>顶堆解法 （笨一点的解法 vector sort）</li><li>循环merger two list</li></ol><h4 id="顶堆解法"><a href="#顶堆解法" class="headerlink" title="顶堆解法"></a>顶堆解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Status</span> {</span></span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        ListNode *ptr;</span><br><span class="line">        <span class="comment">//return 1 表示左边形参优先级低 靠后放  例如  &lt;  (1, 3) return 1&gt;3 左边优先级高 往前放 就是升序排列 小顶堆</span></span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Status &amp;rhs) <span class="keyword">const</span> {</span><br><span class="line">            <span class="keyword">return</span> val &gt; rhs.val;</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    priority_queue &lt;Status&gt; q;</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(vector&lt;ListNode*&gt;&amp; lists)</span> </span>{</span><br><span class="line">        <span class="comment">//所有非空链表 压入queue</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> node: lists) {</span><br><span class="line">            <span class="keyword">if</span> (node) q.<span class="built_in">push</span>({node-&gt;val, node});</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//注意 这里这样写 一方面可以做到虚拟头的备份</span></span><br><span class="line">        <span class="comment">//另一方面 可以保证虚拟头被析构</span></span><br><span class="line">        ListNode head, *tail = &amp;head;</span><br><span class="line">        <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) {</span><br><span class="line">            <span class="comment">//顶堆用的时候都是先top 再pop</span></span><br><span class="line">            <span class="keyword">auto</span> f = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>(); </span><br><span class="line">            tail-&gt;next = f.ptr; </span><br><span class="line">            tail = tail-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (f.ptr-&gt;next) q.<span class="built_in">push</span>({f.ptr-&gt;next-&gt;val, f.ptr-&gt;next});</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="涉及到的知识点"><a href="#涉及到的知识点" class="headerlink" title="涉及到的知识点"></a><u>涉及到的知识点</u></h4><ol><li><p>顶堆的一般用法，即先top存储临时变量，再pop</p></li><li><p><a href="https://www.cnblogs.com/shona/p/12163381.html">顶堆的自定义数据结构和比较方式</a></p><blockquote><p>这里用到的就是封装到一个struct ，重载他的&lt;，</p><p>顶堆的排序方式是按照&lt;进行比较排序，返回为1时，左边形参的优先级低于右边形参 表现为升序 小顶堆</p></blockquote></li></ol><h4 id="双链表merge解法"><a href="#双链表merge解法" class="headerlink" title="双链表merge解法"></a>双链表merge解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode *a, ListNode *b)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> ((!a) || (!b)) <span class="keyword">return</span> a ? a : b;</span><br><span class="line">        ListNode head, *tail = &amp;head, *aPtr = a, *bPtr = b;</span><br><span class="line">        <span class="keyword">while</span> (aPtr &amp;&amp; bPtr) {</span><br><span class="line">            <span class="keyword">if</span> (aPtr-&gt;val &lt; bPtr-&gt;val) {</span><br><span class="line">                tail-&gt;next = aPtr; aPtr = aPtr-&gt;next;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tail-&gt;next = bPtr; bPtr = bPtr-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            tail = tail-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        tail-&gt;next = (aPtr ? aPtr : bPtr);</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(vector&lt;ListNode*&gt;&amp; lists)</span> </span>{</span><br><span class="line">        ListNode *ans = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; lists.<span class="built_in">size</span>(); ++i) {</span><br><span class="line">            ans = <span class="built_in">mergeTwoLists</span>(ans, lists[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-22-链表中倒数第k个节点"><a href="#剑指-Offer-22-链表中倒数第k个节点" class="headerlink" title="剑指 Offer 22. 链表中倒数第k个节点"></a><a href="https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/">剑指 Offer 22. 链表中倒数第k个节点</a></h3><p>输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。</p><p>例如，一个链表有 <code>6</code> 个节点，从头节点开始，它们的值依次是 <code>1、2、3、4、5、6</code>。这个链表的倒数第 <code>3</code> 个节点是值为 <code>4</code> 的节点。</p><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">给定一个链表: 1-&gt;2-&gt;3-&gt;4-&gt;5, 和 k = 2.</span><br><span class="line"></span><br><span class="line">返回链表 4-&gt;5.</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>笨解法 一次遍历记录长度，一次遍历计算结果</li><li>一次遍历 fast先走k，然后slow fast 同时前进 直到fast为空</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//两次遍历</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">getKthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">      ListNode* cpy = head;</span><br><span class="line">      <span class="keyword">while</span>(cpy){</span><br><span class="line">        length++;</span><br><span class="line">        cpy = cpy-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* node = head;</span><br><span class="line">      <span class="keyword">while</span>(node){</span><br><span class="line">        <span class="keyword">if</span>(length == k)</span><br><span class="line">          <span class="keyword">return</span> node;</span><br><span class="line">        node = node-&gt;next;</span><br><span class="line">        length--;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">  <span class="comment">//一次遍历</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">getKthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      <span class="keyword">int</span> step = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        step++;</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(step == k){</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }        </span><br><span class="line">      }</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="19-删除链表的倒数第-N-个结点"><a href="#19-删除链表的倒数第-N-个结点" class="headerlink" title="19. 删除链表的倒数第 N 个结点"></a><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=19&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/#">思路</a></p><p>给你一个链表，删除链表的倒数第 <code>n</code> 个结点，并且返回链表的头结点。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203121922903.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], n = 2</span><br><span class="line">输出：[1,2,3,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1], n = 1</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比遍历</li><li>一次遍历 但是要注意 ==可能会删除头节点 所以遍历应该使用虚拟头==</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//笨比遍历法</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(cur-&gt;next != <span class="literal">NULL</span>){</span><br><span class="line">            i++;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        ListNode* curr = head;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;=i-n<span class="number">-1</span>){</span><br><span class="line">            <span class="keyword">if</span> (j == i-n<span class="number">-2</span>) curr-&gt;next = curr-&gt;next-&gt;next;</span><br><span class="line">            j++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//一次遍历法</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">      ListNode* pre = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">      pre-&gt;next = head;</span><br><span class="line">      ListNode* fast = pre;</span><br><span class="line">      <span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n+<span class="number">1</span>; i++)</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">      ListNode* slow = pre;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      slow-&gt;next = slow-&gt;next-&gt;next;</span><br><span class="line">      <span class="keyword">return</span> pre-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="876-链表的中间结点"><a href="#876-链表的中间结点" class="headerlink" title="876. 链表的中间结点"></a><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">876. 链表的中间结点</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=876&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/#">思路</a></p><p>难度简单505</p><p>给定一个头结点为 <code>head</code> 的非空单链表，返回链表的中间结点。</p><p>如果有两个中间结点，则返回第二个中间结点。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：[1,2,3,4,5]</span><br><span class="line">输出：此列表中的结点 3 (序列化形式：[3,4,5])</span><br><span class="line">返回的结点值为 3 。 (测评系统对该结点序列化表述是 [3,4,5])。</span><br><span class="line">注意，我们返回了一个 ListNode 类型的对象 ans，这样：</span><br><span class="line">ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, 以及 ans.next.next.next = NULL.</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：[1,2,3,4,5,6]</span><br><span class="line">输出：此列表中的结点 4 (序列化形式：[4,5,6])</span><br><span class="line">由于该列表有两个中间结点，值分别为 3 和 4，我们返回第二个结点</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比</li><li>快慢指针 注意判断条件  ==while(fast &amp;&amp; fast-&gt;next)==</li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">nullptr</span>) {</span><br><span class="line">            ++n;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        cur = head;</span><br><span class="line">        <span class="keyword">while</span> (k &lt; n / <span class="number">2</span>) {</span><br><span class="line">            ++k;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){  <span class="comment">//刚开始准备重新用！就尼玛用混了 老老实实==nullptr吧</span></span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="链表环问题"><a href="#链表环问题" class="headerlink" title="链表环问题"></a>链表环问题</h3><h4 id="1-判断是否有环"><a href="#1-判断是否有环" class="headerlink" title="1. 判断是否有环"></a>1. 判断是否有环</h4><ul><li>哈希</li><li>「Floyd 判圈算法」（又称龟兔赛跑算法）</li><li>奇葩方法：修改节点的值</li></ul><p><strong>代码</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hash</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        unordered_set&lt;ListNode*&gt; sett;</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">while</span>(cur){</span><br><span class="line">            <span class="keyword">if</span>(sett.<span class="built_in">count</span>(cur)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            sett.<span class="built_in">insert</span>(cur);</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//龟兔赛跑</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        ListNode* slow = head;</span><br><span class="line">        ListNode* fast = head;</span><br><span class="line">        <span class="keyword">while</span>(fast != <span class="literal">NULL</span> &amp;&amp; fast-&gt;next!= <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(fast == slow) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//修改节点值的判圈方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      <span class="keyword">while</span>(head){</span><br><span class="line">        <span class="keyword">if</span>(head-&gt;val == <span class="string">'12458256442311234856461'</span>)</span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> head-&gt;val = <span class="string">'12458256442311234856461'</span>;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="2-环的位置"><a href="#2-环的位置" class="headerlink" title="2. 环的位置"></a>2. <a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/">环的位置</a></h4><p>我们假设快慢指针相遇时，慢指针 <code>slow</code> 走了 <code>k</code> 步，那么快指针 <code>fast</code> 一定走了 <code>2k</code> 步：</p><p><a href="https://labuladong.gitee.io/algo/images/%E5%8F%8C%E6%8C%87%E9%92%88/3.jpeg"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122004655.jpeg" alt="img"></a></p><p><code>fast</code> 一定比 <code>slow</code> 多走了 <code>k</code> 步，这多走的 <code>k</code> 步其实就是 <code>fast</code> 指针在环里转圈圈，所以 <code>k</code> 的值就是环长度的「整数倍」。</p><p>假设相遇点距环的起点的距离为 <code>m</code>，那么结合上图的 <code>slow</code> 指针，环的起点距头结点 <code>head</code> 的距离为 <code>k - m</code>，也就是说如果从 <code>head</code> 前进 <code>k - m</code> 步就能到达环起点。</p><p>巧的是，如果从相遇点继续前进 <code>k - m</code> 步，也恰好到达环起点。因为结合上图的 <code>fast</code> 指针，从相遇点开始走k步可以转回到相遇点，那走 <code>k - m</code> 步肯定就走到环起点了：</p><p><a href="https://labuladong.gitee.io/algo/images/%E5%8F%8C%E6%8C%87%E9%92%88/2.jpeg"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122004506.jpeg" alt="img"></a></p><p>所以，只要我们把快慢指针中的任一个重新指向 <code>head</code>，然后两个指针同速前进，<code>k - m</code> 步后一定会相遇，相遇之处就是环的起点了。</p><p><strong>代码</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hash</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      unordered_set &lt;ListNode*&gt; set;</span><br><span class="line">      <span class="keyword">while</span>(head != <span class="literal">NULL</span>){</span><br><span class="line">        <span class="keyword">if</span> (set.<span class="built_in">count</span>(head)) <span class="keyword">return</span> head;</span><br><span class="line">          set.<span class="built_in">insert</span>(head);</span><br><span class="line">          head = head-&gt;next;</span><br><span class="line">        }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//数学</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){</span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(fast == slow) <span class="keyword">break</span>;</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="comment">//判断是否有环</span></span><br><span class="line">      <span class="keyword">if</span>(fast == <span class="literal">nullptr</span> || fast-&gt;next == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">      fast = head; <span class="comment">//重新指向头节点</span></span><br><span class="line">      <span class="keyword">while</span>(slow != fast){</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="160-相交链表"><a href="#160-相交链表" class="headerlink" title="160. 相交链表"></a><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/">160. 相交链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=160&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/#">思路</a></p><p>给你两个单链表的头节点 <code>headA</code> 和 <code>headB</code> ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 <code>null</code> 。</p><p>图示两个链表在节点 <code>c1</code> 开始相交<strong>：</strong></p><p><a href="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122026344.png" alt="img"></a></p><p>题目数据 <strong>保证</strong> 整个链式结构中不存在环。</p><p><strong>注意</strong>，函数返回结果后，链表必须 <strong>保持其原始结构</strong> 。</p><p><strong>自定义评测：</strong></p><p><strong>评测系统</strong> 的输入如下（你设计的程序 <strong>不适用</strong> 此输入）：</p><ul><li><code>intersectVal</code> - 相交的起始节点的值。如果不存在相交节点，这一值为 <code>0</code></li><li><code>listA</code> - 第一个链表</li><li><code>listB</code> - 第二个链表</li><li><code>skipA</code> - 在 <code>listA</code> 中（从头节点开始）跳到交叉节点的节点数</li><li><code>skipB</code> - 在 <code>listB</code> 中（从头节点开始）跳到交叉节点的节点数</li></ul><p>评测系统将根据这些输入创建链式数据结构，并将两个头节点 <code>headA</code> 和 <code>headB</code> 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 <strong>视作正确答案</strong> 。</p><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比hash</li><li>挺神奇的首尾相连</li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122027928.jpeg" alt="img" style="zoom:50%;"><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//笨比hash</span></span><br><span class="line">    <span class="function">ListNode *<span class="title">getIntersectionNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>{</span><br><span class="line">      unordered_set&lt;ListNode*&gt; sett;</span><br><span class="line">      <span class="keyword">while</span>(headA){</span><br><span class="line">        sett.<span class="built_in">insert</span>(headA);</span><br><span class="line">        headA = headA-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">while</span>(headB){</span><br><span class="line">        <span class="keyword">if</span>(sett.<span class="built_in">count</span>(headB))</span><br><span class="line">          <span class="keyword">return</span> headB;</span><br><span class="line">        headB = headB-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//首尾相接</span></span><br><span class="line">    <span class="function">ListNode *<span class="title">getIntersectionNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span> (headA == <span class="literal">nullptr</span> || headB == <span class="literal">nullptr</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      }</span><br><span class="line">      ListNode *pA = headA, *pB = headB;</span><br><span class="line">      <span class="keyword">while</span> (pA != pB) {</span><br><span class="line">        pA = pA == <span class="literal">nullptr</span> ? headB : pA-&gt;next;</span><br><span class="line">        pB = pB == <span class="literal">nullptr</span> ? headA : pB-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> pA;    </span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="剑指-Offer-II-026-重排链表"><a href="#剑指-Offer-II-026-重排链表" class="headerlink" title="剑指 Offer II 026. 重排链表"></a><a href="https://leetcode-cn.com/problems/LGjMqU/">剑指 Offer II 026. 重排链表</a></h4><p>难度中等47英文版讨论区</p><p>给定一个单链表 <code>L</code> 的头节点 <code>head</code> ，单链表 <code>L</code> 表示为：</p><p><code>L0 → L1 → … → Ln-1 → Ln</code><br>请将其重新排列后变为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">L0 → Ln → L1 → Ln-1 → L2 → Ln-2 → …</span><br></pre></td></tr></tbody></table></figure><p>不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。</p><p><strong>示例 1:</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626420311-PkUiGI-image.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: head = [1,2,3,4]</span><br><span class="line">输出: [1,4,2,3]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626420320-YUiulT-image.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: head = [1,2,3,4,5]</span><br><span class="line">输出: [1,5,2,4,3]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><ol><li><p>找中点 截断 反转后半部分、</p></li><li><ul><li><p>按照官方题解找中间节点<br>1 2 3 4 5<br>变为<br>1 2 3<br>5 4<br>但是<br>1 2 3 4 5 6<br>变为<br>1 2 3 4<br>6 5<br>这样拼接没什么问题 因为3-&gt;4本身就是连接的 无需再更改指向了</p></li><li><p>也可以 找中间节点的时候 按链表长度的奇偶性返回</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ListNode* <span class="title">findMiddle</span><span class="params">(ListNode* head)</span></span>{</span><br><span class="line">    ListNode* slow = head;</span><br><span class="line">    ListNode* fast = head;</span><br><span class="line">    ListNode* preSlow;</span><br><span class="line">    <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){</span><br><span class="line">        preSlow = slow;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//奇数节点返回中间 偶数返回中间前一个</span></span><br><span class="line">    <span class="keyword">return</span> fast == <span class="literal">nullptr</span>?preSlow:slow;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reversList</span><span class="params">(ListNode* head)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">nullptr</span> || head-&gt;next == <span class="literal">nullptr</span>)</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        ListNode* last = <span class="built_in">reversList</span>(head-&gt;next);</span><br><span class="line">        head-&gt;next-&gt;next = head;</span><br><span class="line">        head-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">findMiddle</span><span class="params">(ListNode* head)</span></span>{</span><br><span class="line">        ListNode* slow = head;</span><br><span class="line">        ListNode* fast = head;</span><br><span class="line">        ListNode* preSlow;</span><br><span class="line">        <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){</span><br><span class="line">            preSlow = slow;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//奇数节点返回中间 偶数返回中间前一个</span></span><br><span class="line">        <span class="keyword">return</span> fast == <span class="literal">nullptr</span>?preSlow:slow;</span><br><span class="line">        <span class="comment">//return slow  //没什么问题 因为最终默认指向了 无需更改</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mergeList</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>{</span><br><span class="line">        ListNode* l1_tmp;</span><br><span class="line">        ListNode* l2_tmp;</span><br><span class="line">        <span class="keyword">while</span> (l1 != <span class="literal">nullptr</span> &amp;&amp; l2 != <span class="literal">nullptr</span>) {</span><br><span class="line">            <span class="comment">//存储下一个节点</span></span><br><span class="line">            l1_tmp = l1-&gt;next;</span><br><span class="line">            l2_tmp = l2-&gt;next;</span><br><span class="line">            <span class="comment">//l1指向l2 并更新l1</span></span><br><span class="line">            l1-&gt;next = l2;</span><br><span class="line">            l1 = l1_tmp;</span><br><span class="line">            <span class="comment">//l2指向新的l1(也就是l1temp) 并更新l2</span></span><br><span class="line">            l2-&gt;next = l1;</span><br><span class="line">            l2 = l2_tmp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reorderList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        ListNode* l1 = head;</span><br><span class="line">        ListNode* middle = <span class="built_in">findMiddle</span>(head);</span><br><span class="line">        ListNode* l2 = <span class="built_in">reversList</span>(middle-&gt;next);</span><br><span class="line">        middle-&gt;next = <span class="literal">nullptr</span>;  <span class="comment">//切断 并且保证l1的长度&gt;=l2 且长度差最大为1</span></span><br><span class="line">        <span class="built_in">mergeList</span>(l1, l2);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="递归反转链表"><a href="#递归反转链表" class="headerlink" title="递归反转链表"></a>递归反转链表</h2><h3 id="206-反转整个链表"><a href="#206-反转整个链表" class="headerlink" title="206. 反转整个链表"></a><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转整个链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=206&amp;target=gitee">labuladong 题解</a></p><p>给你单链表的头节点 <code>head</code> ，请你反转链表，并返回反转后的链表。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122035241.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5]</span><br><span class="line">输出：[5,4,3,2,1]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122035302.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：[2,1]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><ol><li>while循环迭代</li><li>递归反转整个链表</li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122221482.jpeg" alt="img" style="zoom: 50%;"><img src="https://labuladong.gitee.io/algo/images/%e5%8f%8d%e8%bd%ac%e9%93%be%e8%a1%a8/2.jpg" alt="img" style="zoom: 50%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122221914.jpeg" alt="img" style="zoom: 50%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122222312.jpeg" alt="img" style="zoom: 50%;"><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//while迭代</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* cur = head;</span><br><span class="line">      ListNode* pre = <span class="literal">nullptr</span>;</span><br><span class="line">      ListNode* temp;</span><br><span class="line">      <span class="keyword">while</span>(cur){</span><br><span class="line">        temp = cur-&gt;next;</span><br><span class="line">        cur-&gt;next = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = temp;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      <span class="comment">//注意head == nullptr是判断传进来的链表为空</span></span><br><span class="line">      <span class="comment">//注意head-&gt;next == nullptr是真正的base case</span></span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span> || head-&gt;next == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">      ListNode* last = <span class="built_in">reverseList</span>(head-&gt;next);</span><br><span class="line">      <span class="comment">//nmb 秀到头晕</span></span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      head-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="反转链表前-N-个节点"><a href="#反转链表前-N-个节点" class="headerlink" title="反转链表前 N 个节点"></a>反转链表前 N 个节点</h3><p><em>// 将链表的前 n 个节点反转（n &lt;= 链表长度）</em></p><p>比如说对于下图链表，执行 <code>reverseN(head, 3)</code>：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/6.jpg" alt="img" style="zoom: 50%;"><p>解决思路和反转整个链表差不多，只要稍加修改即可：</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ListNode* successor = <span class="literal">nullptr</span>; <span class="comment">// 后驱节点</span></span><br><span class="line"><span class="comment">// 反转以 head 为起点的 n 个节点，返回新的头结点</span></span><br><span class="line"><span class="function">ListNode* <span class="title">reverseN</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) {</span><br><span class="line">        <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">        successor = head.next;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 以 head.next 为起点，需要反转前 n - 1 个节点</span></span><br><span class="line">    ListNode* last = <span class="built_in">reverseN</span>(head-&gt;next, n - <span class="number">1</span>);</span><br><span class="line">    head-&gt;next-&gt;next = head;</span><br><span class="line">    <span class="comment">// 让反转之后的 head 节点和后面的节点连起来</span></span><br><span class="line">    head-&gt;next = successor;</span><br><span class="line">    <span class="keyword">return</span> last;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="具体的区别："><a href="#具体的区别：" class="headerlink" title="具体的区别："></a>具体的区别：</h4><p>1、base case 变为 <code>n == 1</code>，反转一个元素，就是它本身，同时<strong>要记录后驱节点</strong>。</p><p>2、刚才我们直接把 <code>head.next</code> 设置为 null，因为整个链表反转后原来的 <code>head</code> 变成了整个链表的最后一个节点。但现在 <code>head</code> 节点在递归反转之后不一定是最后一个节点了，所以要记录后驱 <code>successor</code>（第 n + 1 个节点），反转之后将 <code>head</code> 连接上。</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122323670.jpeg" alt="img" style="zoom: 50%;"><p>OK，如果这个函数你也能看懂，就离实现「反转一部分链表」不远了。</p><h3 id="92-反转链表的一部分"><a href="#92-反转链表的一部分" class="headerlink" title="92. 反转链表的一部分"></a><a href="https://leetcode-cn.com/problems/reverse-linked-list-ii/">92. 反转链表的一部分</a></h3><p>给你单链表的头指针 head 和两个整数 left 和 right ，其中 left &lt;= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。</p><p>示例 1：</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122331490.jpeg" alt="img"></p><p>输入：head = [1,2,3,4,5], left = 2, right = 4<br>输出：[1,4,3,2,5]</p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseBetween</span><span class="params">(ListNode* head, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(left == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">reverseN</span>(head, right);</span><br><span class="line">      <span class="comment">//前进到反转的起点触发basecase</span></span><br><span class="line">      <span class="comment">//left和right一起向前移动，right要跟随着left-- </span></span><br><span class="line">      <span class="comment">//因为right表示的是位置，N的长度应该是移动left为头的 right跟着减的长度</span></span><br><span class="line">      head-&gt;next = <span class="built_in">reverseBetween</span>(head-&gt;next, left<span class="number">-1</span>, right<span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    ListNode* successor; <span class="comment">// 后驱节点</span></span><br><span class="line">    <span class="comment">// 反转以 head 为起点的 n 个节点，返回新的头结点</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseN</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(n == <span class="number">1</span>){</span><br><span class="line">        <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">        successor = head-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">      ListNode* last = <span class="built_in">reverseN</span>(head-&gt;next, n<span class="number">-1</span>);</span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">      head-&gt;next = successor;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>详细的迭代写法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reverseLinkedList</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        <span class="comment">// 也可以使用递归反转一个链表</span></span><br><span class="line">        ListNode *pre = <span class="literal">nullptr</span>;</span><br><span class="line">        ListNode *cur = head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">nullptr</span>) {</span><br><span class="line">            ListNode *next = cur-&gt;next;</span><br><span class="line">            cur-&gt;next = pre;</span><br><span class="line">            pre = cur;</span><br><span class="line">            cur = next;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">reverseBetween</span><span class="params">(ListNode *head, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">        <span class="comment">// 因为头节点有可能发生变化，使用虚拟头节点可以避免复杂的分类讨论</span></span><br><span class="line">        ListNode *dummyNode = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">        dummyNode-&gt;next = head;</span><br><span class="line"></span><br><span class="line">        ListNode *pre = dummyNode;</span><br><span class="line">        <span class="comment">// 第 1 步：从虚拟头节点走 left - 1 步，来到 left 节点的前一个节点</span></span><br><span class="line">        <span class="comment">// 建议写在 for 循环里，语义清晰</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; left - <span class="number">1</span>; i++) {</span><br><span class="line">            pre = pre-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 2 步：从 pre 再走 right - left + 1 步，来到 right 节点</span></span><br><span class="line">        ListNode *rightNode = pre;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; right - left + <span class="number">1</span>; i++) {</span><br><span class="line">            rightNode = rightNode-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 3 步：切断出一个子链表（截取链表）</span></span><br><span class="line">        ListNode *leftNode = pre-&gt;next;</span><br><span class="line">        ListNode *curr = rightNode-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注意：切断链接</span></span><br><span class="line">        pre-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">        rightNode-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 4 步：同第 206 题，反转链表的子区间</span></span><br><span class="line">        <span class="built_in">reverseLinkedList</span>(leftNode);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 5 步：接回到原来的链表中</span></span><br><span class="line">        pre-&gt;next = rightNode;</span><br><span class="line">        leftNode-&gt;next = curr;</span><br><span class="line">        <span class="keyword">return</span> dummyNode-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="如何-K-个一组反转链表"><a href="#如何-K-个一组反转链表" class="headerlink" title="如何 K 个一组反转链表"></a>如何 K 个一组反转链表</h2><h3 id="25-K-个一组翻转链表"><a href="#25-K-个一组翻转链表" class="headerlink" title="25. K 个一组翻转链表"></a><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">25. K 个一组翻转链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=25&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/#">思路</a></p><p>难度困难1520</p><p>给你一个链表，每 <em>k</em> 个节点一组进行翻转，请你返回翻转后的链表。</p><p><em>k</em> 是一个正整数，它的值小于或等于链表的长度。</p><p>如果节点总数不是 <em>k</em> 的整数倍，那么请将最后剩余的节点保持原有顺序。</p><p><strong>进阶：</strong></p><ul><li>你可以设计一个只使用常数额外空间的算法来解决此问题吗？</li><li><strong>你不能只是单纯的改变节点内部的值</strong>，而是需要实际进行节点交换。</li></ul><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130004385.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 2</span><br><span class="line">输出：[2,1,4,3,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130004388.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 3</span><br><span class="line">输出：[3,2,1,4,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 1</span><br><span class="line">输出：[1,2,3,4,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 4：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1], k = 1</span><br><span class="line">输出：[1]</span><br></pre></td></tr></tbody></table></figure><p>难理解但是写起来相对简单的解法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** 反转区间 [a, b) 的元素，注意是左闭右开 */</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverse</span><span class="params">(ListNode* a, ListNode* b)</span> </span>{</span><br><span class="line">      ListNode* pre;</span><br><span class="line">      ListNode* cur;</span><br><span class="line">      ListNode* nxt;</span><br><span class="line">      pre = <span class="literal">nullptr</span>; cur = a; nxt = a;</span><br><span class="line">      <span class="comment">// while 终止的条件改一下就行了</span></span><br><span class="line">      <span class="keyword">while</span> (cur != b) {</span><br><span class="line">        nxt = cur-&gt;next;</span><br><span class="line">        cur-&gt;next = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = nxt;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// 返回反转后的头结点</span></span><br><span class="line">      <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseKGroup</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      ListNode* a;</span><br><span class="line">      ListNode* b;</span><br><span class="line">      a = b = head;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;k; i++){</span><br><span class="line">        <span class="keyword">if</span>(b == <span class="literal">nullptr</span>) <span class="keyword">return</span> head;</span><br><span class="line">        b = b-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* newHead = <span class="built_in">reverse</span>(a, b);</span><br><span class="line">      a-&gt;next = <span class="built_in">reverseKGroup</span>(b, k);</span><br><span class="line">      <span class="keyword">return</span> newHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>解释一下 <code>for</code> 循环之后的几句代码，注意 <code>reverse</code> 函数是反转区间 <code>[a, b)</code>，所以情形是这样的：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130047155.jpeg" alt="img" style="zoom:50%;"><p>递归部分就不展开了，整个函数递归完成之后就是这个结果，完全符合题意：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130047037.jpeg" alt="img" style="zoom:50%;"><h4 id="好理解但是写起来困难的解法"><a href="#好理解但是写起来困难的解法" class="headerlink" title="好理解但是写起来困难的解法"></a>好理解但是写起来困难的解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 翻转一个子链表，并且返回新的头与尾</span></span><br><span class="line">    <span class="function">pair&lt;ListNode*, ListNode*&gt; <span class="title">myReverse</span><span class="params">(ListNode* head, ListNode* tail)</span> </span>{</span><br><span class="line">        <span class="comment">//ListNode* prev = tail-&gt;next; //这个指向没有任何作用,函数外面添加了指向</span></span><br><span class="line">        ListNode* prev;</span><br><span class="line">        ListNode* p = head;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不能使用p!=tail-&gt;next,这是因为tail-&gt;next指向发生了更改</span></span><br><span class="line">        <span class="comment">//不能while(p) 因为p只有有链接</span></span><br><span class="line">        <span class="keyword">while</span> (prev != tail) { <span class="comment">//pre &lt;- p 这样循环向前移动的</span></span><br><span class="line">            ListNode* nex = p-&gt;next;</span><br><span class="line">            p-&gt;next = prev;</span><br><span class="line">            prev = p;</span><br><span class="line">            p = nex;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> {tail, head};</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseKGroup</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        ListNode* hair = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        hair-&gt;next = head;</span><br><span class="line">        ListNode* pre = hair;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (head) {</span><br><span class="line">            ListNode* tail = pre;</span><br><span class="line">            <span class="comment">// 查看剩余部分长度是否大于等于 k</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; ++i) {</span><br><span class="line">                tail = tail-&gt;next;</span><br><span class="line">                <span class="keyword">if</span> (!tail) {</span><br><span class="line">                    <span class="keyword">return</span> hair-&gt;next;  <span class="comment">//不足k，此区域不反转 直接返回</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            ListNode* nexHead = tail-&gt;next;  <span class="comment">//区域外的下一区域的头</span></span><br><span class="line">            <span class="comment">// 这里是 C++17 的写法，也可以写成</span></span><br><span class="line">            <span class="comment">// pair&lt;ListNode*, ListNode*&gt; result = myReverse(head, tail);</span></span><br><span class="line">            <span class="comment">// head = result.first;</span></span><br><span class="line">            <span class="comment">// tail = result.second;</span></span><br><span class="line">            <span class="built_in">tie</span>(head, tail) = <span class="built_in">myReverse</span>(head, tail);</span><br><span class="line">            <span class="comment">// 把子链表重新接回原链表</span></span><br><span class="line">            pre-&gt;next = head;</span><br><span class="line">            tail-&gt;next = nexHead;</span><br><span class="line">            pre = tail;</span><br><span class="line">            head = nexHead;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> hair-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="如何判断回文链表"><a href="#如何判断回文链表" class="headerlink" title="如何判断回文链表"></a>如何判断回文链表</h2><h3 id="234-回文链表"><a href="#234-回文链表" class="headerlink" title="234. 回文链表"></a><a href="https://leetcode-cn.com/problems/palindrome-linked-list/">234. 回文链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=234&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/palindrome-linked-list/#">思路</a></p><p>难度简单1293</p><p>给你一个单链表的头节点 <code>head</code> ，请你判断该链表是否为回文链表。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130110029.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,2,1]</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130110233.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//辅助容器</span></span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; vals;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">nullptr</span>) {</span><br><span class="line">      vals.<span class="built_in">emplace_back</span>(head-&gt;val);</span><br><span class="line">      head = head-&gt;next;</span><br><span class="line">    }</span><br><span class="line">      <span class="comment">//回文判断的双指针写法 记一下</span></span><br><span class="line">    <span class="comment">// for (int i = 0, j = (int)vals.size() - 1; i &lt; j; ++i, --j) {</span></span><br><span class="line">    <span class="comment">//   if (vals[i] != vals[j]) {</span></span><br><span class="line">    <span class="comment">//       return false;</span></span><br><span class="line">    <span class="comment">//   }</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = vals.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">        <span class="keyword">if</span>(vals[left]!= vals[right])</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        left++;</span><br><span class="line">        right--;</span><br><span class="line">      }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归模拟双指针</span></span><br><span class="line">    ListNode* left;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      left = head;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">traverse</span>(head);</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">traverse</span><span class="params">(ListNode* right)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(right == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">bool</span> res = <span class="built_in">traverse</span>(right-&gt;next);</span><br><span class="line">      <span class="comment">//后序遍历代码</span></span><br><span class="line">      res = res &amp;&amp; (right-&gt;val == left-&gt;val);</span><br><span class="line">      left = left-&gt;next;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//双指针 优化 为了秀而秀 秀nm呢</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* slow;</span><br><span class="line">      ListNode* fast;</span><br><span class="line">      slow = fast = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(fast){ <span class="comment">//奇数个元素</span></span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* left = head;</span><br><span class="line">      ListNode* right = <span class="built_in">reverse</span>(slow);</span><br><span class="line">      <span class="keyword">while</span>(right){</span><br><span class="line">        <span class="keyword">if</span>(left-&gt;val!=right-&gt;val)</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        left = left-&gt;next;</span><br><span class="line">        right = right-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    <span class="function">ListNode* <span class="title">reverse</span><span class="params">(ListNode* head)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span> || head-&gt;next == <span class="literal">nullptr</span>) <span class="keyword">return</span> head;</span><br><span class="line">      ListNode* last = <span class="built_in">reverse</span>(head-&gt;next);</span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      head-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>滑动窗口</title>
      <link href="/2022/03/15/hua-dong-chuang-kou/"/>
      <url>/2022/03/15/hua-dong-chuang-kou/</url>
      
        <content type="html"><![CDATA[<h2 id="滑动窗口模板"><a href="#滑动窗口模板" class="headerlink" title="滑动窗口模板"></a>滑动窗口模板</h2><p>框架</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滑动窗口算法框架 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slidingWindow</span><span class="params">(string s, string t)</span> </span>{</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c : t) need[c]++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> valid = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">        <span class="comment">// c 是将移入窗口的字符</span></span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        <span class="comment">// 右移窗口</span></span><br><span class="line">        right++;</span><br><span class="line">        <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*** debug 输出的位置 ***/</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"window: [%d, %d)\n"</span>, left, right);</span><br><span class="line">        <span class="comment">/********************/</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 判断左侧窗口是否要收缩</span></span><br><span class="line">        <span class="keyword">while</span> (window needs shrink) {</span><br><span class="line">            <span class="comment">// d 是将移出窗口的字符</span></span><br><span class="line">            <span class="keyword">char</span> d = s[left];</span><br><span class="line">            <span class="comment">// 左移窗口</span></span><br><span class="line">            left++;</span><br><span class="line">            <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">            ...</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="相关题目"><a href="#相关题目" class="headerlink" title="相关题目"></a>相关题目</h2><h3 id="76-最小覆盖子串-困难-滑滑滑"><a href="#76-最小覆盖子串-困难-滑滑滑" class="headerlink" title="76. 最小覆盖子串 困难 滑滑滑"></a><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. 最小覆盖子串</a> 困难 滑滑滑</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function">string <span class="title">minWindow</span><span class="params">(string s, string t)</span> </span>{</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c : t)</span><br><span class="line">      need[c]++;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> valid = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//记录最小覆盖字串的其实索引和长度</span></span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">0</span>, len = INT_MAX;</span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">      <span class="comment">// c是移入窗口的字符</span></span><br><span class="line">      <span class="keyword">char</span> c = s[right];</span><br><span class="line">      right++;</span><br><span class="line">      <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">      <span class="keyword">if</span> (need.<span class="built_in">count</span>(c)) {</span><br><span class="line">        window[c]++;</span><br><span class="line">        <span class="keyword">if</span> (window[c] == need[c])</span><br><span class="line">          valid++;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">//判断左窗口是否需要收缩</span></span><br><span class="line">      <span class="keyword">while</span> (valid == need.<span class="built_in">size</span>()) { <span class="comment">//窗口满足条件</span></span><br><span class="line">                                     <span class="comment">// 在这里更新最小覆盖子串</span></span><br><span class="line">        <span class="keyword">if</span> (right - left &lt; len) {</span><br><span class="line">          start = left;</span><br><span class="line">          len = right - left;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// d 是将移出窗口的字符</span></span><br><span class="line">        <span class="keyword">char</span> d = s[left];</span><br><span class="line">        <span class="comment">// 左移窗口</span></span><br><span class="line">        left++;</span><br><span class="line">        <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">        <span class="keyword">if</span> (need.<span class="built_in">count</span>(d)) {</span><br><span class="line">          <span class="keyword">if</span> (window[d] == need[d]) {</span><br><span class="line">            valid--;</span><br><span class="line">          }</span><br><span class="line">          window[d]--;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> len == INT_MAX ? <span class="string">""</span> : s.<span class="built_in">substr</span>(start, len);</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="567-字符串的排列-中等-滑滑滑"><a href="#567-字符串的排列-中等-滑滑滑" class="headerlink" title="567. 字符串的排列 中等 滑滑滑"></a><a href="https://leetcode-cn.com/problems/permutation-in-string/">567. 字符串的排列</a> 中等 滑滑滑</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkInclusion</span><span class="params">(string t, string s)</span> </span>{</span><br><span class="line">      unordered_map&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; window, need;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">char</span> c : t) need[c]++;</span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> valid = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(right &lt; s.<span class="built_in">size</span>()){</span><br><span class="line">        <span class="comment">//扩大 知道满足 window = need</span></span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        right++;</span><br><span class="line">        <span class="keyword">if</span>(need.<span class="built_in">count</span>(c)){</span><br><span class="line">          window[c]++;</span><br><span class="line">          <span class="keyword">if</span>(window[c] == need[c])</span><br><span class="line">            valid++;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//个数满足</span></span><br><span class="line">        <span class="keyword">while</span>(right-left&gt;=t.<span class="built_in">size</span>()){  <span class="comment">//缩减窗口到t的长度</span></span><br><span class="line">          <span class="keyword">if</span>(valid == need.<span class="built_in">size</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">          <span class="keyword">char</span> d = s[left];</span><br><span class="line">          left++;</span><br><span class="line">          <span class="keyword">if</span>(need.<span class="built_in">count</span>(d)){</span><br><span class="line">            <span class="keyword">if</span>(window[d] == need[d])</span><br><span class="line">              valid--;</span><br><span class="line">            window[d]--;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="438-找到字符串中所有字母异位词-中等-滑滑滑-接着滑"><a href="#438-找到字符串中所有字母异位词-中等-滑滑滑-接着滑" class="headerlink" title="438. 找到字符串中所有字母异位词 中等 滑滑滑 接着滑"></a><a href="https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/">438. 找到字符串中所有字母异位词</a> 中等 滑滑滑 接着滑</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//     map&lt;char, int&gt; checkAna;</span></span><br><span class="line"><span class="comment">//     map&lt;char, int&gt; checkAnb;</span></span><br><span class="line"><span class="comment">//     vector&lt;int&gt; findAnagrams(string s, string p) {</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; res;</span></span><br><span class="line"><span class="comment">//         int n = s.size(); </span></span><br><span class="line"><span class="comment">//         int nn = p.size();</span></span><br><span class="line"><span class="comment">//         if(isAnagrams("abc", "bca")){</span></span><br><span class="line"><span class="comment">//             cout&lt;&lt;"check"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;n-nn+1; i++){</span></span><br><span class="line"><span class="comment">//             cout&lt;&lt;s.substr(i, nn) &lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//             if(isAnagrams(s.substr(i, nn), p))</span></span><br><span class="line"><span class="comment">//                 res.push_back(i);</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return res;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">//     bool isAnagrams(string a, string b){</span></span><br><span class="line"><span class="comment">//         checkAna.clear();</span></span><br><span class="line"><span class="comment">//         checkAnb.clear();</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;a.size(); i++){</span></span><br><span class="line"><span class="comment">//             checkAna[a[i]]++;</span></span><br><span class="line"><span class="comment">//             checkAnb[b[i]]++;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         for(auto it = checkAna.begin(); it !=checkAna.end(); it++){</span></span><br><span class="line"><span class="comment">//             if(it-&gt;second != checkAnb[it-&gt;first])</span></span><br><span class="line"><span class="comment">//                 return 0;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return 1;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//     vector&lt;int&gt; findAnagrams(string s, string p) {</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; res;</span></span><br><span class="line"><span class="comment">//         int n = s.size(); </span></span><br><span class="line"><span class="comment">//         int nn = p.size();</span></span><br><span class="line"><span class="comment">//         if(n&lt;nn) return vector&lt;int&gt;();</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; ss(26);</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; pp(26);</span></span><br><span class="line"><span class="comment">//         //初始化保证窗口初始移动</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;nn; i++){</span></span><br><span class="line"><span class="comment">//             ss[s[i]-'a']++;</span></span><br><span class="line"><span class="comment">//             pp[p[i]-'a']++;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         if(ss == pp) res.push_back(0);</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;n-nn; i++){</span></span><br><span class="line"><span class="comment">//             ss[s[i]-'a']--;</span></span><br><span class="line"><span class="comment">//             ss[s[i+nn]-'a']++;</span></span><br><span class="line"><span class="comment">//             if(ss == pp) res.push_back(i+1);</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return res;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">findAnagrams</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">      vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">      unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">char</span> c : p) need[c]++;</span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>, valid = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        right++;</span><br><span class="line">        <span class="keyword">if</span>(need.<span class="built_in">count</span>(c)){</span><br><span class="line">          window[c]++;</span><br><span class="line">          <span class="keyword">if</span>(window[c] == need[c])</span><br><span class="line">            valid++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span>(right-left &gt;= p.<span class="built_in">size</span>()){</span><br><span class="line">          <span class="keyword">if</span>(valid == need.<span class="built_in">size</span>()) ans.<span class="built_in">push_back</span>(left);</span><br><span class="line">          <span class="keyword">char</span> d = s[left];</span><br><span class="line">          left++;</span><br><span class="line">          <span class="keyword">if</span>(need.<span class="built_in">count</span>(d)){</span><br><span class="line">            <span class="keyword">if</span>(need[d] == window[d])</span><br><span class="line">              valid--;</span><br><span class="line">            window[d]--;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="3-无重复字符的最长子串"><a href="#3-无重复字符的最长子串" class="headerlink" title="3. 无重复字符的最长子串"></a><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(string s)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; window;</span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">      <span class="keyword">char</span> c = s[right];</span><br><span class="line">      right++;</span><br><span class="line">      window[c]++;</span><br><span class="line">      <span class="keyword">while</span> (window[c] &gt; <span class="number">1</span>) { <span class="comment">//有重复就要从left++ 直到消除当前重复</span></span><br><span class="line">        <span class="keyword">char</span> d = s[left];</span><br><span class="line">        left++;</span><br><span class="line">        window[d]--;</span><br><span class="line">      }</span><br><span class="line">      ans = <span class="built_in">max</span>(ans, right - left);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//   int lengthOfLongestSubstring(string s) {</span></span><br><span class="line"><span class="comment">//     if (s.size() == 0)</span></span><br><span class="line"><span class="comment">//       return 0;</span></span><br><span class="line"><span class="comment">//     unordered_set&lt;char&gt; lookup;</span></span><br><span class="line"><span class="comment">//     int maxStr = 0;</span></span><br><span class="line"><span class="comment">//     int left = 0;</span></span><br><span class="line"><span class="comment">//     for (int i = 0; i &lt; s.size(); i++) {</span></span><br><span class="line"><span class="comment">//       while (lookup.find(s[i]) != lookup.end()) {</span></span><br><span class="line"><span class="comment">//         lookup.erase(s[left]);</span></span><br><span class="line"><span class="comment">//         left++;</span></span><br><span class="line"><span class="comment">//       }</span></span><br><span class="line"><span class="comment">//       maxStr = max(maxStr, i - left + 1);</span></span><br><span class="line"><span class="comment">//       lookup.insert(s[i]);</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">//     return maxStr;</span></span><br><span class="line"><span class="comment">//   }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line">  <span class="comment">//int lengthOfLongestSubstring(string s) {</span></span><br><span class="line">  <span class="comment">//  if (s.size() == 0) {</span></span><br><span class="line">  <span class="comment">//    return 0;</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  vector&lt;string&gt; ss;</span></span><br><span class="line">  <span class="comment">//  for (int i = 0; i &lt; s.size(); i++) {</span></span><br><span class="line">  <span class="comment">//    unordered_map&lt;char, int&gt; temp_map;</span></span><br><span class="line">  <span class="comment">//    for (int j = i; j &lt; s.size(); j++) {</span></span><br><span class="line">  <span class="comment">//      ++temp_map[s[j]];</span></span><br><span class="line">  <span class="comment">//      if (temp_map[s[j]] &gt; 1) {</span></span><br><span class="line">  <span class="comment">//        string sss = s.substr(i, j - i);</span></span><br><span class="line">  <span class="comment">//        ss.push_back(sss);</span></span><br><span class="line">  <span class="comment">//        break;</span></span><br><span class="line">  <span class="comment">//      }</span></span><br><span class="line">  <span class="comment">//      if (j == s.size() - 1) {</span></span><br><span class="line">  <span class="comment">//        string sss = s.substr(i, s.size() - i);</span></span><br><span class="line">  <span class="comment">//        ss.push_back(sss);</span></span><br><span class="line">  <span class="comment">//      }</span></span><br><span class="line">  <span class="comment">//    }</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  if (ss.size() == 0) {</span></span><br><span class="line">  <span class="comment">//    return s.size();</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  sort(ss.begin(), ss.end(),</span></span><br><span class="line">  <span class="comment">//       [](string &amp;a, string &amp;b) { return a.size() &gt; b.size(); });</span></span><br><span class="line">  <span class="comment">//  return ss[0].size();</span></span><br><span class="line">  <span class="comment">//}</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="2024-考试的最大困扰度"><a href="#2024-考试的最大困扰度" class="headerlink" title="2024. 考试的最大困扰度"></a><a href="https://leetcode-cn.com/problems/maximize-the-confusion-of-an-exam/">2024. 考试的最大困扰度</a></h3><p>一位老师正在出一场由 <code>n</code> 道判断题构成的考试，每道题的答案为 true （用 <code>'T'</code> 表示）或者 false （用 <code>'F'</code> 表示）。老师想增加学生对自己做出答案的不确定性，方法是 <strong>最大化</strong> 有 <strong>连续相同</strong> 结果的题数。（也就是连续出现 true 或者连续出现 false）。</p><p>给你一个字符串 <code>answerKey</code> ，其中 <code>answerKey[i]</code> 是第 <code>i</code> 个问题的正确结果。除此以外，还给你一个整数 <code>k</code> ，表示你能进行以下操作的最多次数：</p><ul><li>每次操作中，将问题的正确答案改为 <code>'T'</code> 或者 <code>'F'</code> （也就是将 <code>answerKey[i]</code> 改为 <code>'T'</code> 或者 <code>'F'</code> ）。</li></ul><p>请你返回在不超过 <code>k</code> 次操作的情况下，<strong>最大</strong> 连续 <code>'T'</code> 或者 <code>'F'</code> 的数目。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：answerKey = "TTFF", k = 2</span><br><span class="line">输出：4</span><br><span class="line">解释：我们可以将两个 'F' 都变为 'T' ，得到 answerKey = "TTTT" 。</span><br><span class="line">总共有四个连续的 'T' 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：answerKey = "TFFT", k = 1</span><br><span class="line">输出：3</span><br><span class="line">解释：我们可以将最前面的 'T' 换成 'F' ，得到 answerKey = "FFFT" 。</span><br><span class="line">或者，我们可以将第二个 'T' 换成 'F' ，得到 answerKey = "TFFF" 。</span><br><span class="line">两种情况下，都有三个连续的 'F' 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>用框架 但需要使用额外的 On   90ms 10mb</li><li>官方题解 有点类似分治的思想 以T和F都当作最大值基准算一遍 取结果最大值  30ms 10mb</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>框架  90ms 10mb</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//滑动窗口 框架</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxConsecutiveAnswers</span><span class="params">(string answerKey, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = answerKey.<span class="built_in">size</span>();</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; window;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            <span class="keyword">char</span> c = answerKey[right];</span><br><span class="line">            right++;</span><br><span class="line">            window[c]++;</span><br><span class="line">            <span class="comment">//窗口缩小</span></span><br><span class="line">            <span class="keyword">while</span>(window[<span class="string">'F'</span>]&gt; k &amp;&amp; window[<span class="string">'T'</span>]&gt;k){</span><br><span class="line">                <span class="keyword">char</span> d = answerKey[left];</span><br><span class="line">                left++;</span><br><span class="line">                window[d]--;</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(window[<span class="string">'F'</span>]+window[<span class="string">'T'</span>], ans);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>官方 30ms 10mb</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//ch 假设的最大值字母</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxConsecutiveChar</span><span class="params">(string&amp; answerKey, <span class="keyword">int</span> k, <span class="keyword">char</span> ch)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = answerKey.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//sum 为另一种 杂质字母的数量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>, sum = <span class="number">0</span>; right &lt; n; right++) {</span><br><span class="line">            sum += answerKey[right] != ch;</span><br><span class="line">            <span class="keyword">while</span> (sum &gt; k) {</span><br><span class="line">                <span class="comment">//不断left++ 减小另一个字母数量</span></span><br><span class="line">                sum -= answerKey[left++] != ch;</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, right - left + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxConsecutiveAnswers</span><span class="params">(string answerKey, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">maxConsecutiveChar</span>(answerKey, k, <span class="string">'T'</span>),</span><br><span class="line">                   <span class="built_in">maxConsecutiveChar</span>(answerKey, k, <span class="string">'F'</span>));</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="1004-最大连续1的个数-III"><a href="#1004-最大连续1的个数-III" class="headerlink" title="1004. 最大连续1的个数 III"></a><a href="https://leetcode-cn.com/problems/max-consecutive-ones-iii/">1004. 最大连续1的个数 III</a></h3><p>难度中等393</p><p>给定一个二进制数组 <code>nums</code> 和一个整数 <code>k</code>，如果可以翻转最多 <code>k</code> 个 <code>0</code> ，则返回 <em>数组中连续 <code>1</code> 的最大个数</em> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,1,0,0,0,1,1,1,1,0], K = 2</span><br><span class="line">输出：6</span><br><span class="line">解释：[1,1,1,0,0,1,1,1,1,1,1]</span><br><span class="line">粗体数字从 0 翻转到 1，最长的子数组长度为 6。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3</span><br><span class="line">输出：10</span><br><span class="line">解释：[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]</span><br><span class="line">粗体数字从 0 翻转到 1，最长的子数组长度为 10。</span><br></pre></td></tr></tbody></table></figure><p>思路</p><p>滑动窗口是一个思想 重点在于窗口指针的移动 </p><p>所以 哈希只是通用性比较强 在有的情况下是可以替换乃至省去的</p><p>代码</p><p>模板</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">longestOnes</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; window;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            <span class="keyword">int</span> c = nums[right];</span><br><span class="line">            window[c]++;</span><br><span class="line">            right++;</span><br><span class="line">            <span class="keyword">while</span>(window[<span class="number">0</span>]&gt;k){</span><br><span class="line">                <span class="keyword">int</span> d = nums[left];</span><br><span class="line">                left++;</span><br><span class="line">                window[d]--;</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, window[<span class="number">1</span>] + window[<span class="number">0</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>空间优化版本：只需要维护0的个数就可以了</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">longestOnes</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> K)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>, zeros = <span class="number">0</span>, left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> right = <span class="number">0</span>; right &lt; A.<span class="built_in">size</span>(); ++right) {</span><br><span class="line">            <span class="keyword">if</span> (A[right] == <span class="number">0</span>) ++zeros;</span><br><span class="line">            <span class="keyword">while</span> (zeros &gt; K) {</span><br><span class="line">                <span class="keyword">if</span> (A[left++] == <span class="number">0</span>) --zeros;</span><br><span class="line">            }</span><br><span class="line">            res = <span class="built_in">max</span>(res, right - left + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="424-替换后的最长重复字符"><a href="#424-替换后的最长重复字符" class="headerlink" title="424. 替换后的最长重复字符"></a><a href="https://leetcode-cn.com/problems/longest-repeating-character-replacement/">424. 替换后的最长重复字符</a></h3><p>难度中等576</p><p>给你一个字符串 <code>s</code> 和一个整数 <code>k</code> 。你可以选择字符串中的任一字符，并将其更改为任何其他大写英文字符。该操作最多可执行 <code>k</code> 次。</p><p>在执行上述操作后，返回包含相同字母的最长子字符串的长度。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "ABAB", k = 2</span><br><span class="line">输出：4</span><br><span class="line">解释：用两个'A'替换为两个'B',反之亦然。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "AABABBA", k = 1</span><br><span class="line">输出：4</span><br><span class="line">解释：</span><br><span class="line">将中间的一个'A'替换为'B',字符串变为 "AABBBBA"。</span><br><span class="line">子串 "BBBB" 有最长重复字母, 答案为 4。</span><br></pre></td></tr></tbody></table></figure><p>思路</p><p>滑动窗口融会贯通，比如这个题 就没想到怎么用map滑</p><p>代码</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">characterReplacement</span><span class="params">(string s, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">num</span><span class="params">(<span class="number">26</span>)</span></span>;</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (right &lt; n) {</span><br><span class="line">            num[s[right] - <span class="string">'A'</span>]++;</span><br><span class="line">            <span class="comment">//maxn维护窗口最多元素的个数 以进行非最多元素个数的统计判断</span></span><br><span class="line">            maxn = <span class="built_in">max</span>(maxn, num[s[right] - <span class="string">'A'</span>]);</span><br><span class="line">            <span class="keyword">if</span> (right - left + <span class="number">1</span> - maxn &gt; k) {</span><br><span class="line">                num[s[left] - <span class="string">'A'</span>]--;</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">            right++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> right - left;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-008-和大于等于-target-的最短子数组"><a href="#剑指-Offer-II-008-和大于等于-target-的最短子数组" class="headerlink" title="剑指 Offer II 008. 和大于等于 target 的最短子数组"></a><a href="https://leetcode-cn.com/problems/2VG8Kg/">剑指 Offer II 008. 和大于等于 target 的最短子数组</a></h3><p>难度中等53</p><p>给定一个含有 <code>n</code> 个正整数的数组和一个正整数 <code>target</code> <strong>。</strong></p><p>找出该数组中满足其和 <code>≥ target</code> 的长度最小的 <strong>连续子数组</strong> <code>[numsl, numsl+1, ..., numsr-1, numsr]</code> ，并返回其长度<strong>。</strong>如果不存在符合条件的子数组，返回 <code>0</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 7, nums = [2,3,1,2,4,3]</span><br><span class="line">输出：2</span><br><span class="line">解释：子数组 [4,3] 是该条件下的长度最小的子数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 4, nums = [1,4,4]</span><br><span class="line">输出：1</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 11, nums = [1,1,1,1,1,1,1,1]</span><br><span class="line">输出：0</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>滑动窗口 模板大概还是那个模板 两个while比较好理解</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minSubArrayLen</span><span class="params">(<span class="keyword">int</span> target, vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">int</span> ans = INT_MAX;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            sum += nums[right];</span><br><span class="line">            right++;</span><br><span class="line">            <span class="keyword">while</span>(sum&gt;=target) {</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, right - left);</span><br><span class="line">                sum -= nums[left];</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans == INT_MAX ? <span class="number">0</span> : ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-009-乘积小于-K-的子数组"><a href="#剑指-Offer-II-009-乘积小于-K-的子数组" class="headerlink" title="剑指 Offer II 009. 乘积小于 K 的子数组"></a><a href="https://leetcode-cn.com/problems/ZVAVXX/">剑指 Offer II 009. 乘积小于 K 的子数组</a></h3><p>难度中等63</p><p>给定一个正整数数组 <code>nums</code>和整数 <code>k</code> ，请找出该数组内乘积小于 <code>k</code> 的连续的子数组的个数。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [10,5,2,6], k = 100</span><br><span class="line">输出: 8</span><br><span class="line">解释: 8 个乘积小于 100 的子数组分别为: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]。</span><br><span class="line">需要注意的是 [10,5,2] 并不是乘积小于100的子数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,3], k = 0</span><br><span class="line">输出: 0</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li><p>这道题 正确解法 应该是滑动窗口</p><blockquote><p><code>重点 right - left + 1</code></p><p>比如某次遍历符合题意的子数组为 ABCX，那么在该条件下符合条件的有X，CX，BCX，ABCX共四个（可以进行多个例子，发现个数符合right-left+1）</p></blockquote></li><li><p>但是 做这道题的过程中 感觉这个 不跳步的回溯 挺有意思 外层循环backtrack </p><p>其实 好像相当于两层for循环了 卧槽 我真是垃圾</p><p><u><code>其实 也好像有点类似n叉树 有向图的遍历吧？</code></u><a href="https://qianxunslimg.github.io/2022/03/15/tu-lun/">图论 | qianxunslimgのblog</a></p></li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><p>正确的滑动窗口解法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSubarrayProductLessThanK</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> multi = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(k &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right &lt; n){</span><br><span class="line">            multi*=nums[right];</span><br><span class="line">            <span class="keyword">while</span>(multi&gt;=k){</span><br><span class="line">                multi/=nums[left];</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">            ans += (right - left + <span class="number">1</span>); <span class="comment">//注意 每次+的是窗口的长度</span></span><br><span class="line">            right++;  <span class="comment">//这个写在前面也是可以的 只是right - left 不加1</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>回溯（假）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="comment">//vector&lt;vector&lt;int&gt;&gt; all;</span></span><br><span class="line">    <span class="comment">//vector&lt;int&gt; path;</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSubarrayProductLessThanK</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="built_in">backtrack</span>(nums, i, <span class="number">1</span>, k);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// cout&lt;&lt;all.size()&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// for(int i = 0; i&lt;all.size(); i++){</span></span><br><span class="line">        <span class="comment">//     for(int j = 0; j&lt;all[i].size(); j++){</span></span><br><span class="line">        <span class="comment">//         cout&lt;&lt;all[i][j]&lt;&lt;" ";</span></span><br><span class="line">        <span class="comment">//     }</span></span><br><span class="line">        <span class="comment">//     cout&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// }</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> preK, <span class="keyword">int</span> k)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;=nums.<span class="built_in">size</span>() || preK&gt;=k) <span class="keyword">return</span>;</span><br><span class="line">        preK*=nums[startIndex];</span><br><span class="line">        <span class="comment">//path.push_back(nums[startIndex]);</span></span><br><span class="line">        <span class="keyword">if</span>(preK&lt;k){</span><br><span class="line">          ans++;  </span><br><span class="line">          <span class="comment">//all.push_back(path);</span></span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, startIndex+<span class="number">1</span>, preK, k);</span><br><span class="line">        preK /= nums[startIndex];</span><br><span class="line">        <span class="comment">//path.pop_back();</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回溯</title>
      <link href="/2022/03/15/hui-su/"/>
      <url>/2022/03/15/hui-su/</url>
      
        <content type="html"><![CDATA[<h1 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h1><h3 id="回溯模板"><a href="#回溯模板" class="headerlink" title="回溯模板"></a>回溯模板</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(参数)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (终止条件) {</span><br><span class="line">        存放结果;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (选择：本层集合中元素（树中节点孩子的数量就是集合的大小）) {</span><br><span class="line">        处理节点;</span><br><span class="line">        <span class="built_in">backtracking</span>(路径，选择列表); <span class="comment">// 递归</span></span><br><span class="line">        回溯，撤销处理结果</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="1-组合问题"><a href="#1-组合问题" class="headerlink" title="1. 组合问题"></a>1. 组合问题</h2><ol><li>组合问题 ==每次for都是从startIndex开始==</li><li>每个元素 用一次和用多次体现在 ==backtrack(i+1)==用一次还是==backtrack(i)用多次==上</li><li>组合问题==不需要used数组==，去重也不需要used数组那个判断</li></ol><h3 id="77-n元素下的k元素组合"><a href="#77-n元素下的k元素组合" class="headerlink" title="77. n元素下的k元素组合"></a><a href="https://leetcode-cn.com/problems/combinations/">77. n元素下的k元素组合</a></h3><p>给定两个整数 <code>n</code> 和 <code>k</code>，返回范围 <code>[1, n]</code> 中所有可能的 <code>k</code> 个数的组合。</p><p>你可以按 <strong>任何顺序</strong> 返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, k = 2</span><br><span class="line">输出：</span><br><span class="line">[</span><br><span class="line">  [2,4],</span><br><span class="line">  [3,4],</span><br><span class="line">  [2,3],</span><br><span class="line">  [1,2],</span><br><span class="line">  [1,3],</span><br><span class="line">  [1,4],</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 1, k = 1</span><br><span class="line">输出：[[1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><ol><li>按回溯模板 直接写 </li><li>注意剪枝操作， 超过k个元素不再进入递归 24ms-&gt;8ms</li></ol><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combine</span>(<span class="keyword">int</span> n, <span class="keyword">int</span> k) {</span><br><span class="line">        <span class="keyword">this</span>-&gt;n = n;</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k;</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        all.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtrack</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(<span class="keyword">int</span> num)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(path.<span class="built_in">size</span>() == k){</span><br><span class="line">            all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"><span class="comment">//进行剪枝， 超过k个元素不再进入递归 24ms-&gt;8ms</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = num; i&lt;=n - (k-path.<span class="built_in">size</span>()) + <span class="number">1</span>; i++){</span><br><span class="line">            path.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="built_in">backtrack</span>(i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="39-组合总和"><a href="#39-组合总和" class="headerlink" title="39. 组合总和"></a><a href="https://leetcode-cn.com/problems/combination-sum/">39. 组合总和</a></h3><p>给你一个 <strong>无重复元素</strong> 的整数数组 <code>candidates</code> 和一个目标整数 <code>target</code> ，找出 <code>candidates</code> 中可以使数字和为目标数 <code>target</code> 的 <em>所有</em> <strong>不同组合</strong> ，并以列表形式返回。你可以按 <strong>任意顺序</strong> 返回这些组合。</p><p><code>candidates</code> 中的 <strong>同一个</strong> 数字可以 <strong>无限制重复被选取</strong> 。如果至少一个数字的被选数量不同，则两种组合是不同的。 </p><p>对于给定的输入，保证和为 <code>target</code> 的不同组合数少于 <code>150</code> 个。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：candidates = [2,3,6,7], target = 7</span><br><span class="line">输出：[[2,2,3],[7]]</span><br><span class="line">解释：</span><br><span class="line">2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。</span><br><span class="line">7 也是一个候选， 7 = 7 。</span><br><span class="line">仅有这两种组合。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [2,3,5], target = 8</span><br><span class="line">输出: [[2,2,2,2],[2,3,3],[3,5]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h5><ol><li>注意这个题 <code>单个元素是可以重复使用的</code> 表现在代码上 for循环内 <code>backtrack是i 而不是i+1</code></li><li>sum 和 target 的判断逻辑注意下</li></ol><h5 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> index, <span class="keyword">int</span> target, <span class="keyword">int</span> sum)</span></span>{</span><br><span class="line">      <span class="comment">//这里sum和target的判断逻辑注意下</span></span><br><span class="line">      <span class="keyword">if</span>(sum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">if</span>(sum == target) {</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path); </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = index; i&lt;candidates.<span class="built_in">size</span>(); i++){</span><br><span class="line">        path.<span class="built_in">push_back</span>(candidates[i]);</span><br><span class="line">        <span class="built_in">backtracking</span>(candidates, i, target, sum + candidates[i]); <span class="comment">//注意 这里的i不加1 不然没有数重复的</span></span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target) {</span><br><span class="line">      <span class="built_in">backtracking</span>(candidates,<span class="number">0</span>, target, <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="216-组合总和-III"><a href="#216-组合总和-III" class="headerlink" title="216. 组合总和 III"></a><a href="https://leetcode-cn.com/problems/combination-sum-iii/">216. 组合总和 III</a></h3><p>找出所有相加之和为 <code>n</code> 的 <code>k</code> 个数的组合，且满足下列条件：</p><ul><li>只使用数字1到9</li><li>每个数字 <strong>最多使用一次</strong></li></ul><p>返回 <em>所有可能的有效组合的列表</em> 。该列表不能包含相同的组合两次，组合可以以任何顺序返回。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入: k = 3, n = 7</span><br><span class="line">输出: [[1,2,4]]</span><br><span class="line">解释:</span><br><span class="line">1 + 2 + 4 = 7</span><br><span class="line">没有其他符合的组合了。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入: k = 3, n = 9</span><br><span class="line">输出: [[1,2,6], [1,3,5], [2,3,4]]</span><br><span class="line">解释:</span><br><span class="line">1 + 2 + 6 = 9</span><br><span class="line">1 + 3 + 5 = 9</span><br><span class="line">2 + 3 + 4 = 9</span><br><span class="line">没有其他符合的组合了。</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h5><ol><li>结束终止满足两个条件之一 <code>nowSum &gt;= n || path.size() == k</code>即可  </li><li>满足条件的结果  <code>nowSum == n &amp;&amp; path.size() == k</code></li></ol><h5 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    <span class="keyword">int</span> k,n ;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum3</span>(<span class="keyword">int</span> k, <span class="keyword">int</span> n) {</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k; </span><br><span class="line">        <span class="keyword">this</span>-&gt;n = n;</span><br><span class="line">        <span class="built_in">backtrack</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> nowSum)</span></span>{</span><br><span class="line">        <span class="comment">//if(cur&gt;9) return;  //注意这句不能要 不然会 9 45判错 最后cur 10 直接返回掉</span></span><br><span class="line">        <span class="keyword">if</span>(nowSum &gt;= n || path.<span class="built_in">size</span>() == k){</span><br><span class="line">            <span class="keyword">if</span>(nowSum == n &amp;&amp; path.<span class="built_in">size</span>() == k)</span><br><span class="line">                all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = cur; i&lt;=<span class="number">9</span>; i++){</span><br><span class="line">            path.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="built_in">backtrack</span>(i+<span class="number">1</span>, nowSum + i);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="40-组合总和-II"><a href="#40-组合总和-II" class="headerlink" title="40. 组合总和 II"></a><a href="https://leetcode-cn.com/problems/combination-sum-ii/">40. 组合总和 II</a></h3><p>给定一个候选人编号的集合 <code>candidates</code> 和一个目标数 <code>target</code> ，找出 <code>candidates</code> 中所有可以使数字和为 <code>target</code> 的组合。</p><p><code>candidates</code> 中的每个数字在每个组合中只能使用 <strong>一次</strong> 。</p><p><strong>注意：</strong>解集不能包含重复的组合。 </p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [10,1,2,7,6,1,5], target = 8,</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">[1,1,6],</span><br><span class="line">[1,2,5],</span><br><span class="line">[1,7],</span><br><span class="line">[2,6]</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [2,5,2,1,2], target = 5,</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">[1,2,2],</span><br><span class="line">[5]</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h5><ol><li>结束终止满足两个条件之一 <code>nowSum &gt;= n || path.size() == k</code>即可  </li><li>满足条件的结果  <code>nowSum == n &amp;&amp; path.size() == k</code></li></ol><h5 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//去重操作 数组中包含重复元素 所以要去重</span></span><br><span class="line">    <span class="comment">//注意 并不需要used数组 used数组只在排列中用到?即(for(int i = 0)的时候用到)</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum2</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target) {</span><br><span class="line">        <span class="comment">//排序让相同的元素挨着</span></span><br><span class="line">        <span class="built_in">sort</span>(candidates.<span class="built_in">begin</span>(), candidates.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">backtrack</span>(candidates, target, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target, <span class="keyword">int</span> curIndex, <span class="keyword">int</span> nowSum)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(nowSum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(nowSum == target){</span><br><span class="line">            all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = curIndex; i&lt;candidates.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="comment">// 经典的去重操作 全排列中也用到了</span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;curIndex &amp;&amp; candidates[i] == candidates[i<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(candidates[i]);</span><br><span class="line">            <span class="comment">//这里是i+1，每个数字在每个组合中只能使用一次</span></span><br><span class="line">            <span class="built_in">backtrack</span>(candidates, target, i+<span class="number">1</span>,  nowSum+candidates[i]);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="377-组合总和-Ⅳ"><a href="#377-组合总和-Ⅳ" class="headerlink" title="377. 组合总和 Ⅳ"></a><a href="https://leetcode-cn.com/problems/combination-sum-iv/">377. 组合总和 Ⅳ</a></h4><p>给你一个由 <strong>不同</strong> 整数组成的数组 <code>nums</code> ，和一个目标整数 <code>target</code> 。请你从 <code>nums</code> 中找出并返回总和为 <code>target</code> 的元素组合的个数。</p><p>题目数据保证答案符合 32 位整数范围。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3], target = 4</span><br><span class="line">输出：7</span><br><span class="line">解释：</span><br><span class="line">所有可能的组合为：</span><br><span class="line">(1, 1, 1, 1)</span><br><span class="line">(1, 1, 2)</span><br><span class="line">(1, 2, 1)</span><br><span class="line">(1, 3)</span><br><span class="line">(2, 1, 1)</span><br><span class="line">(2, 2)</span><br><span class="line">(3, 1)</span><br><span class="line">请注意，顺序不同的序列被视作不同的组合。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [9], target = 3</span><br><span class="line">输出：0</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h5><ol><li>名为组合 实为排列 解法dp</li><li>回溯超时 dp解答</li><li>记忆化dfs 其实就是dp了吧</li></ol><h5 id="暴力回溯代码"><a href="#暴力回溯代码" class="headerlink" title="暴力回溯代码"></a>暴力回溯代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, <span class="number">0</span>, target);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> nowSum, <span class="keyword">int</span> target)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(nowSum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(nowSum == target){</span><br><span class="line">            ans++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">      <span class="comment">//可以反向 就是排列了</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="built_in">backtrack</span>(nums, nowSum+nums[i], target);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="记忆化dfs"><a href="#记忆化dfs" class="headerlink" title="记忆化dfs"></a>记忆化dfs</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(nums, target);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//备忘录，保存每层递归的计算结果，用于实现记忆化。</span></span><br><span class="line">    unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; memo;</span><br><span class="line">    <span class="comment">//dfs(target)的定义： 用nums中的元素凑成总和为target（每个元素可以使用多次），用多少中凑法。</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(target == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(target &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(memo.<span class="built_in">count</span>(target) == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> memo[target];</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            res += <span class="built_in">dfs</span>(nums, target - nums[i]);</span><br><span class="line">        }</span><br><span class="line">        memo[target] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="dp代码"><a href="#dp代码" class="headerlink" title="dp代码"></a>dp代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="comment">//使用dp数组，dp[i]代表组合数为i时使用nums中的数能组成的组合数的个数</span></span><br><span class="line">        <span class="comment">//dp[i]=dp[i-nums[0]]+dp[i-nums[1]]+dp[i=nums[2]]+...</span></span><br><span class="line">        <span class="comment">//举个例子比如nums=[1,3,4],target=7;</span></span><br><span class="line">        <span class="comment">//dp[7]=dp[6]+dp[4]+dp[3]</span></span><br><span class="line">        <span class="comment">//其实就是说7的组合数可以由三部分组成，1和dp[6]，3和dp[4],4和dp[3];</span></span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>&gt; <span class="title">dp</span><span class="params">(target+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="comment">//是为了算上自己的情况，比如dp[1]可以由dp【0】和1这个数的这种情况组成。</span></span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=target; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> num : nums){</span><br><span class="line">                <span class="comment">//dp用int的话 有一个很傻逼的越界，需要 &amp;&amp; dp[i - num] &lt; INT_MAX - dp[i]</span></span><br><span class="line">                <span class="keyword">if</span>(i&gt;=num)  </span><br><span class="line">                    dp[i] += dp[i-num];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[target];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="131-分割回文串-比较难"><a href="#131-分割回文串-比较难" class="headerlink" title="131. 分割回文串  比较难"></a><a href="https://leetcode-cn.com/problems/palindrome-partitioning/">131. 分割回文串  比较难</a></h3><p>难度中等1062收藏分享切换为英文接收动态反馈</p><p>给你一个字符串 <code>s</code>，请你将 <code>s</code> 分割成一些子串，使每个子串都是 <strong>回文串</strong> 。返回 <code>s</code> 所有可能的分割方案。</p><p><strong>回文串</strong> 是正着读和反着读都一样的字符串。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "aab"</span><br><span class="line">输出：[["a","a","b"],["aa","b"]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "a"</span><br><span class="line">输出：[["a"]]</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;vector&lt;string&gt;&gt; result;</span><br><span class="line">    vector&lt;string&gt; path; <span class="comment">// 放已经回文的子串</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtracking</span> <span class="params">(<span class="keyword">const</span> string&amp; s, <span class="keyword">int</span> startIndex)</span> </span>{</span><br><span class="line">        <span class="comment">// 如果起始位置已经大于s的大小，说明已经找到了一组分割方案了</span></span><br><span class="line">        <span class="keyword">if</span> (startIndex &gt;= s.<span class="built_in">size</span>()) {</span><br><span class="line">            result.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = startIndex; i &lt; s.<span class="built_in">size</span>(); i++) {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isPalindrome</span>(s, startIndex, i)) {   <span class="comment">// 是回文子串</span></span><br><span class="line">                <span class="comment">// 获取[startIndex,i]在s中的子串</span></span><br><span class="line">                string str = s.<span class="built_in">substr</span>(startIndex, i - startIndex + <span class="number">1</span>);</span><br><span class="line">                path.<span class="built_in">push_back</span>(str);</span><br><span class="line">            } <span class="keyword">else</span> {                                <span class="comment">// 不是回文，跳过</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">backtracking</span>(s, i + <span class="number">1</span>); <span class="comment">// 寻找i+1为起始位置的子串</span></span><br><span class="line">            path.<span class="built_in">pop_back</span>(); <span class="comment">// 回溯过程，弹出本次已经填在的子串</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">const</span> string&amp; s, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start, j = end; i &lt; j; i++, j--) {</span><br><span class="line">            <span class="keyword">if</span> (s[i] != s[j]) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;string&gt;&gt; <span class="built_in">partition</span>(string s) {</span><br><span class="line">        result.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtracking</span>(s, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="93-复原-IP-地址-虾皮字节-很难"><a href="#93-复原-IP-地址-虾皮字节-很难" class="headerlink" title="93. 复原 IP 地址  虾皮字节  很难"></a><a href="https://leetcode-cn.com/problems/restore-ip-addresses/">93. 复原 IP 地址  虾皮字节  很难</a></h3><p>难度中等846收藏分享切换为英文接收动态反馈</p><p><strong>有效 IP 地址</strong> 正好由四个整数（每个整数位于 <code>0</code> 到 <code>255</code> 之间组成，且不能含有前导 <code>0</code>），整数之间用 <code>'.'</code> 分隔。</p><ul><li>例如：<code>"0.1.2.201"</code> 和<code> "192.168.1.1"</code> 是 <strong>有效</strong> IP 地址，但是 <code>"0.011.255.245"</code>、<code>"192.168.1.312"</code> 和 <code>"192.168@1.1"</code> 是 <strong>无效</strong> IP 地址。</li></ul><p>给定一个只包含数字的字符串 <code>s</code> ，用以表示一个 IP 地址，返回所有可能的<strong>有效 IP 地址</strong>，这些地址可以通过在 <code>s</code> 中插入 <code>'.'</code> 来形成。你 <strong>不能</strong> 重新排序或删除 <code>s</code> 中的任何数字。你可以按 <strong>任何</strong> 顺序返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "25525511135"</span><br><span class="line">输出：["255.255.11.135","255.255.111.35"]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "0000"</span><br><span class="line">输出：["0.0.0.0"]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "101023"</span><br><span class="line">输出：["1.0.10.23","1.0.102.3","10.1.0.23","10.10.2.3","101.0.2.3"]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>看代码</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;string&gt; result;<span class="comment">// 记录结果</span></span><br><span class="line">    <span class="comment">// startIndex: 搜索的起始位置，pointNum:添加逗点的数量</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(string&amp; s, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> pointNum)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (pointNum == <span class="number">3</span>) { <span class="comment">// 逗点数量为3时，分隔结束</span></span><br><span class="line">            <span class="comment">// 判断第四段子字符串是否合法，如果合法就放进result中</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isValid</span>(s, startIndex, s.<span class="built_in">size</span>() - <span class="number">1</span>)) {</span><br><span class="line">                result.<span class="built_in">push_back</span>(s);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = startIndex; i &lt; s.<span class="built_in">size</span>(); i++) {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isValid</span>(s, startIndex, i)) { <span class="comment">// 判断 [startIndex,i] 这个区间的子串是否合法</span></span><br><span class="line">                s.<span class="built_in">insert</span>(s.<span class="built_in">begin</span>() + i + <span class="number">1</span> , <span class="string">'.'</span>);  <span class="comment">// 在i的后面插入一个逗点</span></span><br><span class="line">                pointNum++;</span><br><span class="line">                <span class="built_in">backtracking</span>(s, i + <span class="number">2</span>, pointNum);   <span class="comment">// 插入逗点之后下一个子串的起始位置为i+2</span></span><br><span class="line">                pointNum--;                         <span class="comment">// 回溯</span></span><br><span class="line">                s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>() + i + <span class="number">1</span>);         <span class="comment">// 回溯删掉逗点</span></span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">break</span>; <span class="comment">// 不合法，直接结束本层循环</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 判断字符串s在左闭又闭区间[start, end]所组成的数字是否合法</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValid</span><span class="params">(<span class="keyword">const</span> string&amp; s, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (start &gt; end) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (s[start] == <span class="string">'0'</span> &amp;&amp; start != end) { <span class="comment">// 0开头的数字不合法</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= end; i++) {</span><br><span class="line">            <span class="keyword">if</span> (s[i] &gt; <span class="string">'9'</span> || s[i] &lt; <span class="string">'0'</span>) { <span class="comment">// 遇到非数字字符不合法</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            num = num * <span class="number">10</span> + (s[i] - <span class="string">'0'</span>);</span><br><span class="line">            <span class="keyword">if</span> (num &gt; <span class="number">255</span>) { <span class="comment">// 如果大于255了不合法</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">restoreIpAddresses</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        result.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">size</span>() &gt; <span class="number">12</span>) <span class="keyword">return</span> result; <span class="comment">// 算是剪枝了</span></span><br><span class="line">        <span class="built_in">backtracking</span>(s, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="78-子集"><a href="#78-子集" class="headerlink" title="78. 子集"></a><a href="https://leetcode-cn.com/problems/subsets/">78. 子集</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=78">labuladong 题解</a><a href="https://leetcode-cn.com/problems/subsets/#">思路</a></p><p>难度中等1556</p><p>给你一个整数数组 <code>nums</code> ，数组中的元素 <strong>互不相同</strong> 。返回该数组所有可能的子集（幂集）。</p><p>解集 <strong>不能</strong> 包含重复的子集。你可以按 <strong>任意顺序</strong> 返回解集。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0]</span><br><span class="line">输出：[[],[0]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>简单回溯</p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">subsets</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);<span class="comment">//空的先压入</span></span><br><span class="line">        <span class="built_in">backTrack</span>(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backTrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;=nums.<span class="built_in">size</span>()) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIndex; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="built_in">backTrack</span>(nums, i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="90-子集-II"><a href="#90-子集-II" class="headerlink" title="90. 子集 II"></a><a href="https://leetcode-cn.com/problems/subsets-ii/">90. 子集 II</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=90">labuladong 题解</a></p><p>难度中等783收藏分享切换为英文接收动态反馈</p><p>给你一个整数数组 <code>nums</code> ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。</p><p>解集 <strong>不能</strong> 包含重复的子集。返回的解集中，子集可以按 <strong>任意顺序</strong> 排列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,2]</span><br><span class="line">输出：[[],[1],[1,2],[1,2,2],[2],[2,2]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0]</span><br><span class="line">输出：[[],[0]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><p>含重复元素的组合去重</p><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">subsetsWithDup</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">backTrack</span>(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backTrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;nums.<span class="built_in">size</span>()) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIndex; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(i&gt;startIndex &amp;&amp; nums[i] == nums[i<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="built_in">backTrack</span>(nums, i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="491-递增子序列-不能sort的去重"><a href="#491-递增子序列-不能sort的去重" class="headerlink" title="491. 递增子序列  不能sort的去重"></a><a href="https://leetcode-cn.com/problems/increasing-subsequences/">491. 递增子序列  不能sort的去重</a></h3><p>难度中等412收藏分享切换为英文接收动态反馈</p><p>给你一个整数数组 <code>nums</code> ，找出并返回所有该数组中不同的递增子序列，递增子序列中 <strong>至少有两个元素</strong> 。你可以按 <strong>任意顺序</strong> 返回答案。</p><p>数组中可能含有重复元素，如出现两个整数相等，也可以视作递增序列的一种特殊情况。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,6,7,7]</span><br><span class="line">输出：[[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,4,3,2,1]</span><br><span class="line">输出：[[4,4]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h4><ol><li>去重的产生 比 4 7 6 7 数组，不去重的话 4 7 会出现两次，但是去重不能用sort因为破坏原排列的顺序</li><li>应考虑用哈希 或者其他方式去重 最后去重的话 没有起到剪枝效果</li></ol><h4 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h4><ol><li>最终暴力去重 sort-&gt;unique-&gt;erase</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">findSubsequences</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backTrack</span>(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">        ans.<span class="built_in">erase</span>(<span class="built_in">unique</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>()), ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backTrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;nums.<span class="built_in">size</span>()){</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIndex; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(path.<span class="built_in">size</span>()&gt;<span class="number">0</span> &amp;&amp; nums[i]&lt;path.<span class="built_in">back</span>()) <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">            <span class="keyword">if</span>(path.<span class="built_in">size</span>()&gt;<span class="number">1</span>) ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="built_in">backTrack</span>(nums, i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>使用单层的set进行去重 注意 set定义在每一层 <code>作用只在定义的这一层</code></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">findSubsequences</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backTrack</span>(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// sort(ans.begin(), ans.end());</span></span><br><span class="line">        <span class="comment">// ans.erase(unique(ans.begin(), ans.end()), ans.end());</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backTrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;nums.<span class="built_in">size</span>()) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        unordered_set&lt;<span class="keyword">int</span>&gt; uset; <span class="comment">// 使用set对本层元素进行去重</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIndex; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(path.<span class="built_in">size</span>()&gt;<span class="number">0</span> &amp;&amp; nums[i]&lt;path.<span class="built_in">back</span>() || uset.<span class="built_in">find</span>(nums[i]) != uset.<span class="built_in">end</span>())</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">            <span class="keyword">if</span>(path.<span class="built_in">size</span>()&gt;<span class="number">1</span>) ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            uset.<span class="built_in">insert</span>(nums[i]);</span><br><span class="line">            <span class="built_in">backTrack</span>(nums, i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="2-排列问题"><a href="#2-排列问题" class="headerlink" title="2. 排列问题"></a>2. 排列问题</h2><ol><li>排列问题 ==每次for都是从0开始==</li><li>因为是排列 不能限制顺序 所以不传入index</li><li>==需要used数组==，去重判断重中之重</li></ol><h3 id="46-全排列"><a href="#46-全排列" class="headerlink" title="46. 全排列"></a><a href="https://leetcode-cn.com/problems/permutations/">46. 全排列</a></h3><p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <em>所有可能的全排列</em> 。你可以 <strong>按任意顺序</strong> 返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1]</span><br><span class="line">输出：[[0,1],[1,0]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1]</span><br><span class="line">输出：[[1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h5><ol><li>数组不重复 最简简单单的全排列，基本回溯解法</li><li>不讲五的解法 next_permutation （略）</li></ol><h5 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:    </span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, vector&lt;<span class="keyword">bool</span>&gt;&amp; used)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(path.<span class="built_in">size</span>() == nums.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">if</span>(used[i]) <span class="keyword">continue</span>;  <span class="comment">//数字不重复使用 需要used数组</span></span><br><span class="line">        used[i] = <span class="number">1</span>;</span><br><span class="line">        path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">        used[i] = <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">permute</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      ans.<span class="built_in">clear</span>();</span><br><span class="line">      path.<span class="built_in">clear</span>();</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(), <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="31-下一个排列"><a href="#31-下一个排列" class="headerlink" title="31. 下一个排列"></a><a href="https://leetcode-cn.com/problems/next-permutation/">31. 下一个排列</a></h3><p>整数数组的一个 <strong>排列</strong> 就是将其所有成员以序列或线性顺序排列。</p><ul><li>例如，<code>arr = [1,2,3]</code> ，以下这些都可以视作 <code>arr</code> 的排列：<code>[1,2,3]</code>、<code>[1,3,2]</code>、<code>[3,1,2]</code>、<code>[2,3,1]</code> 。</li></ul><p>整数数组的 <strong>下一个排列</strong> 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 <strong>下一个排列</strong> 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。</p><ul><li>例如，<code>arr = [1,2,3]</code> 的下一个排列是 <code>[1,3,2]</code> 。</li><li>类似地，<code>arr = [2,3,1]</code> 的下一个排列是 <code>[3,1,2]</code> 。</li><li>而 <code>arr = [3,2,1]</code> 的下一个排列是 <code>[1,2,3]</code> ，因为 <code>[3,2,1]</code> 不存在一个字典序更大的排列。</li></ul><p>给你一个整数数组 <code>nums</code> ，找出 <code>nums</code> 的下一个排列。</p><p>必须**<a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95"> 原地 </a>**修改，只允许使用额外常数空间。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[1,3,2]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,2,1]</span><br><span class="line">输出：[1,2,3]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,5]</span><br><span class="line">输出：[1,5,1]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h5><p>题目要求实现 next_permutation</p><blockquote><p>我们需要将一个左边的「较小数」与一个右边的「较大数」交换，以能够让当前排列变大，从而得到下一个排列。</p><p>同时我们要让这个「较小数」尽量靠右，而「较大数」尽可能小。当交换完成后，「较大数」右边的数需要按照升序重新排列。这样可以在保证新排列大于原来排列的情况下，使变大的幅度尽可能小。</p><p>以排列 [4,5,2,6,3,1][4,5,2,6,3,1] 为例：</p><p>我们能找到的符合条件的一对「较小数」与「较大数」的组合为 2与 3，满足「较小数」尽量靠右，而「较大数」尽可能小。</p><p>当我们完成交换后排列变为 [4,5,3,6,2,1][4,5,3,6,2,1]，此时我们可以重排「较小数」右边的序列，序列变为 [4,5,3,1,2,6][4,5,3,1,2,6]。</p></blockquote><p>不明白就调试调试</p><h5 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">nextPermutation</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> i = nums.<span class="built_in">size</span>() - <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; nums[i] &gt;= nums[i + <span class="number">1</span>]) {</span><br><span class="line">            i--; <span class="comment">//从后往前找到第一个增长的点 例子中i指向2</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">int</span> j = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; nums[i] &gt;= nums[j]) { <span class="comment">//从后往前找到第一个大于nums[i]的点 例子中j指向3</span></span><br><span class="line">                j--;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//453621 //此时满足 较小的&gt;2的3替换了2，满足了大排列，而i之后单减</span></span><br><span class="line">            <span class="built_in">swap</span>(nums[i], nums[j]); </span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//453126</span></span><br><span class="line">        <span class="built_in">reverse</span>(nums.<span class="built_in">begin</span>() + i + <span class="number">1</span>, nums.<span class="built_in">end</span>());</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="47-全排列-II"><a href="#47-全排列-II" class="headerlink" title="47. 全排列 II"></a><a href="https://leetcode-cn.com/problems/permutations-ii/">47. 全排列 II</a></h3><p>给定一个可包含重复数字的序列 <code>nums</code> ，<em><strong>按任意顺序</strong></em> 返回所有不重复的全排列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,2]</span><br><span class="line">输出：</span><br><span class="line">[[1,1,2],</span><br><span class="line"> [1,2,1],</span><br><span class="line"> [2,1,1]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h5><ol><li><p>重点！重复元素全排列主要是去重问题</p><blockquote><p><code>(i&gt;0 &amp;&amp; !used[i-1] &amp;&amp; nums[i] == nums[i-1])</code></p></blockquote></li><li></li></ol><h5 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">permuteUnique</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());  <span class="comment">//去重需要排序 使得相同的元素挨在一起</span></span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(), <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, vector&lt;<span class="keyword">bool</span>&gt;&amp; used)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(path.<span class="built_in">size</span>() == nums.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="comment">//注意这里的去重判断是重中之重</span></span><br><span class="line">        <span class="keyword">if</span>(used[i] || (i&gt;<span class="number">0</span> &amp;&amp; !used[i<span class="number">-1</span>] &amp;&amp; nums[i] == nums[i<span class="number">-1</span>]))  </span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        used[i] = <span class="number">1</span>;</span><br><span class="line">        path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">        used[i] = <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="784-字母大小写全排列"><a href="#784-字母大小写全排列" class="headerlink" title="784. 字母大小写全排列"></a><a href="https://leetcode-cn.com/problems/letter-case-permutation/">784. 字母大小写全排列</a></h3><p>难度中等368</p><p>给定一个字符串 <code>s</code> ，通过将字符串 <code>s</code> 中的每个字母转变大小写，我们可以获得一个新的字符串。</p><p>返回 <em>所有可能得到的字符串集合</em> 。以 <strong>任意顺序</strong> 返回输出。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "a1b2"</span><br><span class="line">输出：["a1b2", "a1B2", "A1b2", "A1B2"]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "3z4"</span><br><span class="line">输出: ["3z4","3Z4"]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h5><h5 id="代码-12"><a href="#代码-12" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    string path;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">letterCasePermutation</span><span class="params">(string s)</span> </span>{</span><br><span class="line">      <span class="built_in">backtrack</span>(s, <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(string &amp;s, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(index == s.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(!<span class="built_in">isalpha</span>(s[index])){</span><br><span class="line">        path+=s[index];</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }<span class="keyword">else</span>{</span><br><span class="line">        path+=(<span class="built_in">tolower</span>(s[index]));</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">  </span><br><span class="line">        path+=(<span class="built_in">toupper</span>(s[index]));</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="60-排列序列"><a href="#60-排列序列" class="headerlink" title="60. 排列序列"></a><a href="https://leetcode-cn.com/problems/permutation-sequence/">60. 排列序列</a></h3><p>难度困难641</p><p>给出集合 <code>[1,2,3,...,n]</code>，其所有元素共有 <code>n!</code> 种排列。</p><p>按大小顺序列出所有排列情况，并一一标记，当 <code>n = 3</code> 时, 所有排列如下：</p><ol><li><code>"123"</code></li><li><code>"132"</code></li><li><code>"213"</code></li><li><code>"231"</code></li><li><code>"312"</code></li><li><code>"321"</code></li></ol><p>给定 <code>n</code> 和 <code>k</code>，返回第 <code>k</code> 个排列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, k = 3</span><br><span class="line">输出："213"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, k = 9</span><br><span class="line">输出："2314"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, k = 1</span><br><span class="line">输出："123"</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h5><p>完全回溯无法通过 要实现==精准剪枝==</p><h5 id="代码-13"><a href="#代码-13" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// 普通回溯过不了，需要精准剪枝到第k个叶节点</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">dsssfs</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k, unordered_set&lt;<span class="keyword">int</span>&gt; &amp;used, string &amp;tmp,</span></span></span><br><span class="line"><span class="params"><span class="function">              vector&lt;<span class="keyword">int</span>&gt; &amp;factorial)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (tmp.<span class="built_in">size</span>() == n) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> ind =</span><br><span class="line">        <span class="number">0</span>; <span class="comment">// 用来标记当前是第几次循环,直接用i的话有问题，比如说i是3，但是只是第一次循环，那就错了</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) {</span><br><span class="line">      <span class="keyword">if</span> (used.<span class="built_in">find</span>(i) != used.<span class="built_in">end</span>())</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      ++ind;</span><br><span class="line">      <span class="comment">// 需要看当前层切分后每个子节点包含的叶节点个数，所以要减一</span></span><br><span class="line">      <span class="keyword">int</span> size = factorial[n - used.<span class="built_in">size</span>() - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (k &gt; (ind - <span class="number">1</span>) * size &amp;&amp; k &lt;= ind * size) {</span><br><span class="line">        tmp.<span class="built_in">push_back</span>(i + <span class="string">'0'</span>);</span><br><span class="line">        used.<span class="built_in">insert</span>(i);</span><br><span class="line">        <span class="built_in">dsssfs</span>(n, k - size * (ind - <span class="number">1</span>), used, tmp, factorial);</span><br><span class="line">        <span class="comment">// 无需回溯，因为从dfs出来后就已经是结果了</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function">string <span class="title">getPermutation</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">    unordered_set&lt;<span class="keyword">int</span>&gt; used;</span><br><span class="line">    string tmp;</span><br><span class="line">    <span class="comment">// 提前吧阶乘算出来</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; factorial = {<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">24</span>, <span class="number">120</span>, <span class="number">720</span>, <span class="number">5040</span>, <span class="number">40320</span>, <span class="number">362880</span>};</span><br><span class="line">    <span class="built_in">dsssfs</span>(n, k, used, tmp, factorial);</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="特殊回溯"><a href="#特殊回溯" class="headerlink" title="特殊回溯"></a>特殊回溯</h2><p>个人认为 特殊情况 应用的挺特殊的回溯</p><h3 id="剑指-Offer-II-009-乘积小于-K-的子数组"><a href="#剑指-Offer-II-009-乘积小于-K-的子数组" class="headerlink" title="剑指 Offer II 009. 乘积小于 K 的子数组"></a><a href="https://leetcode-cn.com/problems/ZVAVXX/">剑指 Offer II 009. 乘积小于 K 的子数组</a></h3><p>难度中等63</p><p>给定一个正整数数组 <code>nums</code>和整数 <code>k</code> ，请找出该数组内乘积小于 <code>k</code> 的连续的子数组的个数。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [10,5,2,6], k = 100</span><br><span class="line">输出: 8</span><br><span class="line">解释: 8 个乘积小于 100 的子数组分别为: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]。</span><br><span class="line">需要注意的是 [10,5,2] 并不是乘积小于100的子数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,3], k = 0</span><br><span class="line">输出: 0</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-14"><a href="#思路-14" class="headerlink" title="思路"></a>思路</h4><ol><li><p>这道题 正确解法 应该是滑动窗口</p><blockquote><p><code>重点 right - left + 1</code></p><p>比如某次遍历符合题意的子数组为 ABCX，那么在该条件下符合条件的有X，CX，BCX，ABCX共四个（可以进行多个例子，发现个数符合right-left+1）</p></blockquote></li><li><p>但是 做这道题的过程中 感觉这个 不跳步的回溯 挺有意思 外层循环backtrack </p><p>其实 好像相当于两层for循环了 卧槽 我真是垃圾</p><p><u><code>其实 也好像有点类似n叉树 有向图的遍历吧？</code></u><a href="https://qianxunslimg.github.io/2022/03/15/tu-lun/">图论 | qianxunslimgのblog</a></p></li></ol><h4 id="代码-14"><a href="#代码-14" class="headerlink" title="代码"></a>代码</h4><p>正确的滑动窗口解法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSubarrayProductLessThanK</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> multi = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(k &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right &lt; n){</span><br><span class="line">            multi*=nums[right];</span><br><span class="line">            <span class="keyword">while</span>(multi&gt;=k){</span><br><span class="line">                multi/=nums[left];</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">            ans += (right - left + <span class="number">1</span>); <span class="comment">//注意 每次+的是窗口的长度</span></span><br><span class="line">            right++;  <span class="comment">//这个写在前面也是可以的 只是right - left 不加1</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>回溯（假）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="comment">//vector&lt;vector&lt;int&gt;&gt; all;</span></span><br><span class="line">    <span class="comment">//vector&lt;int&gt; path;</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSubarrayProductLessThanK</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="built_in">backtrack</span>(nums, i, <span class="number">1</span>, k);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// cout&lt;&lt;all.size()&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// for(int i = 0; i&lt;all.size(); i++){</span></span><br><span class="line">        <span class="comment">//     for(int j = 0; j&lt;all[i].size(); j++){</span></span><br><span class="line">        <span class="comment">//         cout&lt;&lt;all[i][j]&lt;&lt;" ";</span></span><br><span class="line">        <span class="comment">//     }</span></span><br><span class="line">        <span class="comment">//     cout&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// }</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> preK, <span class="keyword">int</span> k)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;=nums.<span class="built_in">size</span>() || preK&gt;=k) <span class="keyword">return</span>;</span><br><span class="line">        preK*=nums[startIndex];</span><br><span class="line">        <span class="comment">//path.push_back(nums[startIndex]);</span></span><br><span class="line">        <span class="keyword">if</span>(preK&lt;k){</span><br><span class="line">          ans++;  </span><br><span class="line">          <span class="comment">//all.push_back(path);</span></span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, startIndex+<span class="number">1</span>, preK, k);</span><br><span class="line">        preK /= nums[startIndex];</span><br><span class="line">        <span class="comment">//path.pop_back();</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>位运算</title>
      <link href="/2022/03/15/wei-yun-suan/"/>
      <url>/2022/03/15/wei-yun-suan/</url>
      
        <content type="html"><![CDATA[<h2 id="位操作技巧"><a href="#位操作技巧" class="headerlink" title="位操作技巧"></a>位操作技巧</h2><h3 id="位运算概览"><a href="#位运算概览" class="headerlink" title="位运算概览"></a><a href="https://www.runoob.com/w3cnote/bit-operation.html">位运算概览</a></h3><table><thead><tr><th align="left">符号</th><th align="left">描述</th><th align="left">运算规则</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">与</td><td align="left">两个位都为1时，结果才为1</td></tr><tr><td align="left">|</td><td align="left">或</td><td align="left">两个位都为0时，结果才为0</td></tr><tr><td align="left">^</td><td align="left">异或</td><td align="left"><code>两个位相同为0，相异为1</code></td></tr><tr><td align="left">~</td><td align="left">取反</td><td align="left">0变1，1变0</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">左移</td><td align="left">各二进位全部左移若干位，高位丢弃，低位补0</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">右移</td><td align="left">各二进位全部右移若干位，对无符号数，高位补0，有符号数，各编译器处理方法不一样，有的补符号位（算术右移），有的补0（逻辑右移）</td></tr></tbody></table><h3 id="有趣的位操作"><a href="#有趣的位操作" class="headerlink" title="有趣的位操作"></a>有趣的位操作</h3><ol><li><strong>利用或操作 <code>|</code> 和空格将英文字符转换为小写</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">'a'</span> | <span class="string">' '</span>) = <span class="string">'a'</span></span><br><span class="line">(<span class="string">'A'</span> | <span class="string">' '</span>) = <span class="string">'a'</span></span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><strong>利用与操作 <code>&amp;</code> 和下划线将英文字符转换为大写</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">'b'</span> &amp; <span class="string">'_'</span>) = <span class="string">'B'</span></span><br><span class="line">(<span class="string">'B'</span> &amp; <span class="string">'_'</span>) = <span class="string">'B'</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li><u><strong>利用异或操作 <code>^</code> 和空格进行英文字符大小写互换</strong></u></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">'d'</span> ^ <span class="string">' '</span>) = <span class="string">'D'</span></span><br><span class="line">(<span class="string">'D'</span> ^ <span class="string">' '</span>) = <span class="string">'d'</span></span><br></pre></td></tr></tbody></table></figure><ol start="4"><li><u><strong>判断两个数是否异号</strong></u></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">-1</span>, y = <span class="number">2</span>;</span><br><span class="line">boolean f = ((x ^ y) &lt; <span class="number">0</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">3</span>, y = <span class="number">2</span>;</span><br><span class="line">boolean f = ((x ^ y) &lt; <span class="number">0</span>); <span class="comment">// false</span></span><br></pre></td></tr></tbody></table></figure><ol start="5"><li><strong>不用临时变量交换两个数</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>;</span><br><span class="line">a ^= b;</span><br><span class="line">b ^= a;</span><br><span class="line">a ^= b;</span><br><span class="line"><span class="comment">// 现在 a = 2, b = 1</span></span><br></pre></td></tr></tbody></table></figure><ol start="6"><li><strong>加一</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = <span class="number">1</span>;</span><br><span class="line">n = -~n;</span><br><span class="line"><span class="comment">// 现在 n = 2</span></span><br></pre></td></tr></tbody></table></figure><ol start="7"><li><strong>减一</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = <span class="number">2</span>;</span><br><span class="line">n = ~-n;</span><br><span class="line"><span class="comment">// 现在 n = 1</span></span><br></pre></td></tr></tbody></table></figure><h3 id="n-amp-n-1-的运用"><a href="#n-amp-n-1-的运用" class="headerlink" title="n &amp; (n-1) 的运用"></a><code>n &amp; (n-1)</code> 的运用</h3><p><strong><code>n &amp; (n-1)</code> 这个操作是算法中常见的，作用是消除数字 <code>n</code> 的二进制表示中的最后一个 1</strong>。</p><p>看个图就很容易理解了：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220401104149833.png" alt="image-20220401104149833" style="zoom: 67%;"><p>其核心逻辑就是，<code>n - 1</code> 一定可以消除最后一个 1，同时把其后的 0 都变成 1，这样再和 <code>n</code> 做一次 <code>&amp;</code> 运算，就可以仅仅把最后一个 1 变成 0 了。</p><h3 id="a-a-0-的运用"><a href="#a-a-0-的运用" class="headerlink" title="a ^ a = 0 的运用"></a><code>a ^ a = 0</code> 的运用</h3><p><u>异或运算的性质是需要我们牢记的：</u></p><p><u>一个数和它本身做异或运算结果为 0，即 <code>a ^ a = 0</code>；一个数和 0 做异或运算的结果为它本身，即 <code>a ^ 0 = a</code>。</u></p><h2 id="一些位运算的题目"><a href="#一些位运算的题目" class="headerlink" title="一些位运算的题目"></a>一些位运算的题目</h2><h3 id="191-位1的个数"><a href="#191-位1的个数" class="headerlink" title="191. 位1的个数"></a><a href="https://leetcode-cn.com/problems/number-of-1-bits/">191. 位1的个数</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=191">labuladong 题解</a> <a href="https://leetcode-cn.com/problems/number-of-1-bits/#">思路</a></p><p>编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为<a href="https://baike.baidu.com/item/%E6%B1%89%E6%98%8E%E9%87%8D%E9%87%8F">汉明重量</a>）。</p><p><strong>提示：</strong></p><ul><li>请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。</li><li>在 Java 中，编译器使用<a href="https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A5%E7%A0%81/5295284">二进制补码</a>记法来表示有符号整数。因此，在上面的 <strong>示例 3</strong> 中，输入表示有符号整数 <code>-3</code>。</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：00000000000000000000000000001011</span><br><span class="line">输出：3</span><br><span class="line">解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>n&amp;(n-1)的应用</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n){</span><br><span class="line">            n = n &amp; (n<span class="number">-1</span>);</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="231-2-的幂"><a href="#231-2-的幂" class="headerlink" title="231. 2 的幂"></a><a href="https://leetcode-cn.com/problems/power-of-two/">231. 2 的幂</a></h4><p><a href="https://labuladong.gitee.io/article/?qno=231">labuladong 题解</a><a href="https://leetcode-cn.com/problems/power-of-two/#">思路</a></p><p>难度简单481收藏分享切换为英文接收动态反馈</p><p>给你一个整数 <code>n</code>，请你判断该整数是否是 2 的幂次方。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p>如果存在一个整数 <code>x</code> 使得 <code>n == 2x</code> ，则认为 <code>n</code> 是 2 的幂次方。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 1</span><br><span class="line">输出：true</span><br><span class="line">解释：20 = 1</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 16</span><br><span class="line">输出：true</span><br><span class="line">解释：24 = 16</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>2的幂表示为二进制 只有一个1</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//2的幂在二进制中只有一个1</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> (n&amp;(n<span class="number">-1</span>)) == <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="136-只出现一次的数字"><a href="#136-只出现一次的数字" class="headerlink" title="136. 只出现一次的数字"></a><a href="https://leetcode-cn.com/problems/single-number/">136. 只出现一次的数字</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=136">labuladong 题解</a><a href="https://leetcode-cn.com/problems/single-number/#">思路</a></p><p>难度简单2344英文版讨论区</p><p>给定一个<strong>非空</strong>整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><p><strong>说明：</strong></p><p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [2,2,1]</span><br><span class="line">输出: 1</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>利用异或的性质a ^ a = 0, a ^ 0 = a 全部异或即可得到唯一的值</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> num : nums)</span><br><span class="line">        ans ^= num;</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="268-丢失的数字"><a href="#268-丢失的数字" class="headerlink" title="268. 丢失的数字"></a><a href="https://leetcode-cn.com/problems/missing-number/">268. 丢失的数字</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=268">labuladong 题解</a><a href="https://leetcode-cn.com/problems/missing-number/#">思路</a></p><p>难度简单584收藏分享切换为英文接收动态反馈</p><p>给定一个包含 <code>[0, n]</code> 中 <code>n</code> 个数的数组 <code>nums</code> ，找出 <code>[0, n]</code> 这个范围内没有出现在数组中的那个数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,0,1]</span><br><span class="line">输出：2</span><br><span class="line">解释：n = 3，因为有 3 个数字，所以所有的数字都在范围 [0,3] 内。2 是丢失的数字，因为它没有出现在 nums 中。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1]</span><br><span class="line">输出：2</span><br><span class="line">解释：n = 2，因为有 2 个数字，所以所有的数字都在范围 [0,2] 内。2 是丢失的数字，因为它没有出现在 nums 中。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><p>异或一下即可</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            ans^=i;</span><br><span class="line">            ans^=nums[i];</span><br><span class="line">        }</span><br><span class="line">        ans^=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-56-I-数组中数字出现的次数"><a href="#剑指-Offer-56-I-数组中数字出现的次数" class="headerlink" title="剑指 Offer 56 - I. 数组中数字出现的次数"></a><a href="https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/">剑指 Offer 56 - I. 数组中数字出现的次数</a></h3><p>难度中等597收藏分享切换为英文接收动态反馈英文版讨论区</p><p>一个整型数组 <code>nums</code> 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,1,4,6]</span><br><span class="line">输出：[1,6] 或 [6,1]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,10,4,1,4,3,3]</span><br><span class="line">输出：[2,10] 或 [10,2]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><p><a href="https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/solution/shua-bao-leetcode-yi-huo-yun-suan-xiao-b-cc5a/"><strong>我就知道总有人能给我讲明白，nb</strong></a></p><ul><li>我们将所有的数据都异或起来，不难理解最后的结果是两个 n = n1 ^ n2(n1和n2是只出现一次的数)</li><li>我们对n进行分析，因为n是n1和n2异或得来的，所以n的二进制中第一次出现1的地方就是n1和n2二进制表示中第一次出现不同的情况，我们可以以此作为区分</li><li>将数组中的数分成第bit位为1和bit为0的两组</li></ul><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">singleNumbers</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> find = <span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(<span class="number">2</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num : nums){</span><br><span class="line">            find^=num;</span><br><span class="line">        }<span class="comment">//所有异或 最终是两个不同数的异或结果</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> bit = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//注意这里的优先级 先1&lt;&lt;bit 在find&amp;</span></span><br><span class="line">        <span class="keyword">while</span>((find&amp; <span class="number">1</span>&lt;&lt; bit) == <span class="number">0</span>){  <span class="comment">//找到第一个1</span></span><br><span class="line">            bit++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">1</span>&lt;&lt;bit;  <span class="comment">//移到两个数bit不同的位置</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:nums){</span><br><span class="line">            <span class="keyword">if</span>(num&amp;temp) <span class="comment">//包含第bit位为1的数</span></span><br><span class="line">                ans[<span class="number">0</span>]^=num;</span><br><span class="line">            <span class="keyword">else</span>             <span class="comment">//包含第bit位不为1的数</span></span><br><span class="line">                ans[<span class="number">1</span>]^=num;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-56-II-数组中数字出现的次数-II"><a href="#剑指-Offer-56-II-数组中数字出现的次数-II" class="headerlink" title="剑指 Offer 56 - II. 数组中数字出现的次数 II"></a><a href="https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof/">剑指 Offer 56 - II. 数组中数字出现的次数 II</a></h3><p>难度中等316收藏分享切换为英文接收动态反馈英文版讨论区</p><p>在一个数组 <code>nums</code> 中除一个数字只出现一次之外，其他数字都出现了三次。请找出那个只出现一次的数字。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,4,3,3]</span><br><span class="line">输出：4</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [9,1,7,9,7,9,7]</span><br><span class="line">输出：1</span><br></pre></td></tr></tbody></table></figure><p><strong>限制：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 10000</code></li><li><code>1 &lt;= nums[i] &lt; 2^31</code></li></ul><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>题目限制32位int遍历每一位 将所有数字的该位 0/1 相加 如果目标数字该位为1，则该位相加不为3的倍数 </p><p>利用这个特征可以将数字还原</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">32</span>; i++){</span><br><span class="line">            <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> num: nums)</span><br><span class="line">                <span class="comment">//右移&amp;1得到每一位</span></span><br><span class="line">                total+= (num&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(total%<span class="number">3</span>)</span><br><span class="line">                <span class="comment">//还原这个数 左移回相应的位数 异或取回该值</span></span><br><span class="line">                ans |= (<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-003-前-n-个数字二进制中-1-的个数"><a href="#剑指-Offer-II-003-前-n-个数字二进制中-1-的个数" class="headerlink" title="剑指 Offer II 003. 前 n 个数字二进制中 1 的个数"></a><a href="https://leetcode-cn.com/problems/w3tCBm/">剑指 Offer II 003. 前 n 个数字二进制中 1 的个数</a></h3><p>难度简单54</p><p>给定一个非负整数 <code>n</code> ，请计算 <code>0</code> 到 <code>n</code> 之间的每个数字的二进制表示中 1 的个数，并输出一个数组。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 2</span><br><span class="line">输出: [0,1,1]</span><br><span class="line">解释: </span><br><span class="line">0 --&gt; 0</span><br><span class="line">1 --&gt; 1</span><br><span class="line">2 --&gt; 10</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 5</span><br><span class="line">输出: [0,1,1,2,1,2]</span><br><span class="line">解释:</span><br><span class="line">0 --&gt; 0</span><br><span class="line">1 --&gt; 1</span><br><span class="line">2 --&gt; 10</span><br><span class="line">3 --&gt; 11</span><br><span class="line">4 --&gt; 100</span><br><span class="line">5 --&gt; 101</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><ol><li>笨方法 遍历每个都数</li><li>dp 奇数是/2偶数1的个数+1 偶数是/2偶数的个数</li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><p>笨比遍历</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">countBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;=n; i++){</span><br><span class="line">            ans[i] = <span class="built_in">countOne</span>(i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countOne</span><span class="params">(<span class="keyword">int</span> num)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(num){</span><br><span class="line">            ans++;</span><br><span class="line">            num &amp;= (num<span class="number">-1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>奇偶关系dp</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">countBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">if</span>((i&amp;<span class="number">1</span>) == <span class="number">1</span>) <span class="comment">//奇数</span></span><br><span class="line">                ans[i] = ans[i&gt;&gt;<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans[i] = ans[i&gt;&gt;<span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-005-单词长度的最大乘积"><a href="#剑指-Offer-II-005-单词长度的最大乘积" class="headerlink" title="剑指 Offer II 005. 单词长度的最大乘积"></a><a href="https://leetcode-cn.com/problems/aseY1I/">剑指 Offer II 005. 单词长度的最大乘积</a></h3><p>难度中等58</p><p>给定一个字符串数组 <code>words</code>，请计算当两个字符串 <code>words[i]</code> 和 <code>words[j]</code> 不包含相同字符时，它们长度的乘积的最大值。假设字符串中只包含英语的小写字母。如果没有不包含相同字符的一对字符串，返回 0。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: words = ["abcw","baz","foo","bar","fxyz","abcdef"]</span><br><span class="line">输出: 16 </span><br><span class="line">解释: 这两个单词为 "abcw", "fxyz"。它们不包含相同字符，且长度的乘积最大。</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProduct</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = words.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">masks</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> ch : words[i]){</span><br><span class="line">                <span class="comment">//用二进制中的最多26位，记录每个字母是否存在</span></span><br><span class="line">                masks[i] |= <span class="number">1</span>&lt;&lt;(ch - <span class="string">'a'</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j&lt;n; j++){</span><br><span class="line">                <span class="comment">//不存在相同数字</span></span><br><span class="line">                <span class="keyword">if</span>((masks[i] &amp; masks[j]) == <span class="number">0</span>){</span><br><span class="line">                    ans = <span class="built_in">max</span>(<span class="built_in"><span class="keyword">int</span></span>(words[i].<span class="built_in">size</span>()*words[j].<span class="built_in">size</span>()), ans);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode高频</title>
      <link href="/2022/03/14/leetcode-gao-pin/"/>
      <url>/2022/03/14/leetcode-gao-pin/</url>
      
        <content type="html"><![CDATA[<h1 id="Leetcode-retag"><a href="#Leetcode-retag" class="headerlink" title="Leetcode-retag"></a>Leetcode-retag</h1><p>重新分类 Leetcode 高频题 2021 版</p><ul><li>题目按照面试频率降序排列</li><li>增加难度分类，适合从简单开始学习</li><li>增加细分类别，例如单调栈，前缀树等，一道题目可能会有多个类别</li></ul><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%F0%90%80%B4-%E9%93%BE%E8%A1%A8">𐀴 链表</a><ul><li>单链表</li><li>双链表</li></ul></li><li><a href="#%F0%90%80%B4-%E6%A0%91">𐀴 树</a><ul><li>遍历</li><li>构造</li><li>路径 | 深度 | 翻转</li><li>二叉搜索树</li><li>前缀树</li><li><ul><li>线段树</li></ul></li></ul></li><li><a href="#%F0%90%80%B4-%E6%A0%88">𐀴 栈</a><ul><li>基础</li><li>单调栈</li></ul></li><li><a href="#%F0%90%80%B4-%E5%A0%86">𐀴 堆</a><ul><li>基础</li></ul></li><li><a href="#%F0%90%80%B4-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE">𐀴 二分查找</a></li><li><a href="#%F0%90%80%B4-%E4%BD%8D%E8%BF%90%E7%AE%97">𐀴 位运算</a></li><li><a href="#%F0%90%80%B4-%E5%8F%8C%E6%8C%87%E9%92%88%E4%B8%8E%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3">𐀴 双指针与滑动窗口</a></li><li><a href="#%F0%90%80%B4-%E7%9F%A9%E9%98%B5">𐀴 矩阵</a></li><li><a href="#%F0%90%80%B4-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">𐀴 动态规划</a><ul><li>一维</li><li>二维</li></ul></li><li><a href="#%F0%90%80%B4-%E5%9B%BE%E8%AE%BA">𐀴 图论</a><ul><li>DFS</li><li>BFS</li><li><ul><li>Dijkstra</li></ul></li><li>拓扑排序</li></ul></li><li><a href="#%F0%90%80%B4-%E5%B9%B6%E6%9F%A5%E9%9B%86">𐀴 并查集</a></li><li><a href="#%F0%90%80%B4-%E8%AE%BE%E8%AE%A1">𐀴 设计</a></li><li><a href="#%F0%90%80%B4-%E8%B4%AA%E5%BF%83">𐀴 贪心</a></li><li><a href="#%F0%90%80%B4-%E5%9B%9E%E6%BA%AF">𐀴 回溯</a></li><li><a href="#%F0%90%80%B4-%E5%85%8B%E9%9A%86">𐀴 克隆</a></li><li><a href="#%F0%90%80%B4-%E6%95%B0%E5%AD%A6">𐀴 数学</a></li><li><a href="#%F0%90%80%B4-%E6%9E%81%E5%A4%A7%E6%9E%81%E5%B0%8F%E5%8C%96">𐀴 * 极大极小化</a></li><li><a href="#%F0%90%80%B4-%E5%87%A0%E4%BD%95">𐀴 * 几何</a></li></ul><h2 id="𐀴-链表"><a href="#𐀴-链表" class="headerlink" title="𐀴 链表"></a>𐀴 链表</h2><h4 id="单链表："><a href="#单链表：" class="headerlink" title="单链表："></a>单链表：</h4><h6 id="简单："><a href="#简单：" class="headerlink" title="简单："></a>简单：</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转链表</a></li><li><a href="https://leetcode-cn.com/problems/linked-list-cycle/">141. 环形链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/">83. 删除排序链表中的重复元素</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-linked-list/">234. 回文链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-linked-list-elements/">203. 移除链表元素</a></li><li><a href="https://leetcode-cn.com/problems/delete-node-in-a-linked-list/">237. 删除链表中的节点</a></li><li><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">876. 链表的中间结点</a></li></ul><h6 id="中等"><a href="#中等" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-linked-list-ii/">92. 反转链表 II</a></li><li><a href="https://leetcode-cn.com/problems/reorder-list/">143. 重排链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/">82. 删除排序链表中的重复元素 II</a></li><li><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></li><li><a href="https://leetcode-cn.com/problems/sort-list/">148. 排序链表</a></li><li><a href="https://leetcode-cn.com/problems/partition-list/">86. 分隔链表</a></li><li><a href="https://leetcode-cn.com/problems/rotate-list/">61. 旋转链表</a></li><li><a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/">142. 环形链表 II</a></li><li><a href="https://leetcode-cn.com/problems/insertion-sort-list/">147. 对链表进行插入排序</a></li><li><a href="https://leetcode-cn.com/problems/copy-list-with-random-pointer/">138. 复制带随机指针的链表</a></li><li><a href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/">24. 两两交换链表中的节点</a></li><li><a href="https://leetcode-cn.com/problems/odd-even-linked-list/">328. 奇偶链表</a></li><li><a href="https://leetcode-cn.com/problems/design-linked-list/">707. 设计链表</a></li><li><a href="https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/">109. 有序链表转换二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/flatten-a-multilevel-doubly-linked-list/">430. 扁平化多级双向链表</a></li><li><a href="https://leetcode-cn.com/problems/split-linked-list-in-parts/">725. 分隔链表</a></li></ul><h6 id="困难"><a href="#困难" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">25. K 个一组翻转链表</a></li></ul><h4 id="双链表："><a href="#双链表：" class="headerlink" title="双链表："></a>双链表：</h4><h6 id="简单：-1"><a href="#简单：-1" class="headerlink" title="简单："></a>简单：</h6><ul><li><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/">160. 相交链表</a></li></ul><h6 id="中级"><a href="#中级" class="headerlink" title="中级"></a>中级</h6><ul><li><a href="https://leetcode-cn.com/problems/add-two-numbers/">2. 两数相加</a></li><li><a href="https://leetcode-cn.com/problems/add-two-numbers-ii/">445. 两数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/merge-in-between-linked-lists/">1669. 合并两个链表</a></li></ul><h6 id="困难-1"><a href="#困难-1" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/">23. 合并 K 个升序链表</a></li></ul><h2 id="𐀴-树"><a href="#𐀴-树" class="headerlink" title="𐀴 树"></a>𐀴 树</h2><h4 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h4><h6 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal/">145. 二叉树的后序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal/">94. 二叉树的中序遍历</a></li><li><a href="https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/">589. N 叉树的前序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal/">144. 二叉树的前序遍历</a></li><li><a href="https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/">590. N 叉树的后序遍历</a></li></ul><h6 id="中等-1"><a href="#中等-1" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/">102. 二叉树的层序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/">103. 二叉树的锯齿形层序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/">107. 二叉树的层序遍历 II</a></li></ul><h4 id="构造"><a href="#构造" class="headerlink" title="构造"></a>构造</h4><h6 id="简单-1"><a href="#简单-1" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/">108. 将有序数组转换为二叉搜索树</a></li></ul><h6 id="中等-2"><a href="#中等-2" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/">105. 从前序与中序遍历序列构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/">106. 从中序与后序遍历序列构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/">114. 二叉树展开为链表</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/">889. 根据前序和后序遍历构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-search-tree-from-preorder-traversal/">1008. 前序遍历构造二叉搜索树</a></li></ul><h6 id="困难-2"><a href="#困难-2" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/">297. 二叉树的序列化与反序列化</a></li></ul><h4 id="路径-深度-翻转"><a href="#路径-深度-翻转" class="headerlink" title="路径 | 深度 | 翻转"></a>路径 | 深度 | 翻转</h4><h6 id="简单-2"><a href="#简单-2" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/">104. 二叉树的最大深度</a></li><li><a href="https://leetcode-cn.com/problems/symmetric-tree/">101. 对称二叉树</a></li><li><a href="https://leetcode-cn.com/problems/invert-binary-tree/">226. 翻转二叉树</a></li><li><a href="https://leetcode-cn.com/problems/diameter-of-binary-tree/">543. 二叉树的直径</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-paths/">257. 二叉树的所有路径</a></li><li><a href="https://leetcode-cn.com/problems/balanced-binary-tree/">110. 平衡二叉树</a></li><li><a href="https://leetcode-cn.com/problems/merge-two-binary-trees/">617. 合并二叉树</a></li><li><a href="https://leetcode-cn.com/problems/same-tree/">100. 相同的树</a></li><li><a href="https://leetcode-cn.com/problems/path-sum/">112. 路径总和</a></li><li><a href="https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/">111. 二叉树的最小深度</a></li></ul><h6 id="中等-3"><a href="#中等-3" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/">236. 二叉树的最近公共祖先</a></li><li><a href="https://leetcode-cn.com/problems/count-complete-tree-nodes/">222. 完全二叉树的节点个数</a></li><li><a href="https://leetcode-cn.com/problems/path-sum-ii/">113. 路径总和 II</a></li><li><a href="https://leetcode-cn.com/problems/path-sum-iii/">437. 路径总和 III</a></li><li><a href="https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/">129. 求根节点到叶节点数字之和</a></li><li><a href="https://leetcode-cn.com/problems/maximum-width-of-binary-tree/">662. 二叉树最大宽度</a></li><li><a href="https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/">114. 二叉树展开为链表</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-right-side-view/">199. 二叉树的右视图</a></li><li><a href="https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/">116. 填充每个节点的下一个右侧节点指针</a></li><li><a href="https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/">515. 在每个树行中找最大值</a></li></ul><h6 id="困难-3"><a href="#困难-3" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/">124. 二叉树中的最大路径和</a></li><li><a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/">297. 二叉树的序列化与反序列化</a></li></ul><h4 id="二叉搜索树"><a href="#二叉搜索树" class="headerlink" title="二叉搜索树"></a>二叉搜索树</h4><h6 id="简单-3"><a href="#简单-3" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/">108. 将有序数组转换为二叉搜索树</a></li></ul><h6 id="中等-4"><a href="#中等-4" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/validate-binary-search-tree/">98. 验证二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/unique-binary-search-trees/">96. 不同的二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/unique-binary-search-trees-ii/">95. 不同的二叉搜索树 II</a></li><li><a href="https://leetcode-cn.com/problems/binary-search-tree-iterator/">173. 二叉搜索树迭代器</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/">230. 二叉搜索树中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/recover-binary-search-tree/">99. 恢复二叉搜索树</a></li></ul><h4 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h4><h6 id="简单-4"><a href="#简单-4" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-word-in-dictionary/">720. 词典中最长的单词</a></li></ul><h6 id="中等-5"><a href="#中等-5" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-words/">692. 前 K 个高频单词</a></li><li><a href="https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/">421. 数组中两个数的最大异或值</a></li></ul><h6 id="困难-4"><a href="#困难-4" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/word-search-ii/">212. 单词搜索 II</a></li></ul><h4 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h4><h6 id="中等-6"><a href="#中等-6" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/maximum-number-of-events-that-can-be-attended/">1353. 最多可以参加的会议数目</a></li><li><a href="https://leetcode-cn.com/problems/range-sum-query-mutable/">307. 区域和检索 - 数组可修改</a></li></ul><h6 id="困难-5"><a href="#困难-5" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/count-of-smaller-numbers-after-self/">315. 计算右侧小于当前元素的个数</a></li><li><a href="https://leetcode-cn.com/problems/reverse-pairs/">493. 翻转对</a></li><li><a href="https://leetcode-cn.com/problems/the-skyline-problem/">218. 天际线问题</a></li><li><a href="https://leetcode-cn.com/problems/range-module/">715. Range 模块</a></li><li><a href="https://leetcode-cn.com/problems/rectangle-area-ii/">850. 矩形面积 II</a></li><li><a href="https://leetcode-cn.com/problems/online-majority-element-in-subarray/">1157. 子数组中占绝大多数的元素</a></li><li><a href="https://leetcode-cn.com/problems/falling-squares/">699. 掉落的方块</a></li><li><a href="https://leetcode-cn.com/problems/count-of-range-sum/">327. 区间和的个数</a></li></ul><h2 id="𐀴-栈"><a href="#𐀴-栈" class="headerlink" title="𐀴 栈"></a>𐀴 栈</h2><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><h6 id="简单-5"><a href="#简单-5" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/valid-parentheses/">20. 有效的括号</a></li><li><a href="https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string/">1047. 删除字符串中的所有相邻重复项</a></li><li><a href="https://leetcode-cn.com/problems/implement-queue-using-stacks/">232. 用栈实现队列</a></li><li><a href="https://leetcode-cn.com/problems/min-stack/">155. 最小栈</a></li><li><a href="https://leetcode-cn.com/problems/implement-stack-using-queues/">225. 用队列实现栈</a></li><li><a href="https://leetcode-cn.com/problems/remove-outermost-parentheses/">1021. 删除最外层的括号</a></li><li><a href="https://leetcode-cn.com/problems/baseball-game/">682. 棒球比赛</a></li><li><a href="https://leetcode-cn.com/problems/backspace-string-compare/">844. 比较含退格的字符串</a></li></ul><h6 id="中等-7"><a href="#中等-7" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-substrings-between-each-pair-of-parentheses/">1190. 反转每对括号间的子串</a></li><li><a href="https://leetcode-cn.com/problems/decode-string/">394. 字符串解码</a></li><li><a href="https://leetcode-cn.com/problems/132-pattern/">456. 132 模式</a></li><li><a href="https://leetcode-cn.com/problems/basic-calculator-ii/">227. 基本计算器 II</a></li><li><a href="https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/">150. 逆波兰表达式求值</a></li><li><a href="https://leetcode-cn.com/problems/next-greater-element-ii/">503. 下一个更大元素 II</a></li><li><a href="https://leetcode-cn.com/problems/simplify-path/">71. 简化路径</a></li><li><a href="https://leetcode-cn.com/problems/score-of-parentheses/">856. 括号的分数</a></li><li><a href="https://leetcode-cn.com/problems/sum-of-subarray-minimums/">907. 子数组的最小值之和</a></li><li><a href="https://leetcode-cn.com/problems/mini-parser/">385. 迷你语法分析器</a></li><li><a href="https://leetcode-cn.com/problems/minimum-remove-to-make-valid-parentheses/">1249. 移除无效的括号</a></li><li><a href="https://leetcode-cn.com/problems/exclusive-time-of-functions/">636. 函数的独占时间</a></li><li><a href="https://leetcode-cn.com/problems/flatten-nested-list-iterator/">341. 扁平化嵌套列表迭代器</a></li></ul><h6 id="困难-6"><a href="#困难-6" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/basic-calculator/">224. 基本计算器</a></li><li><a href="https://leetcode-cn.com/problems/number-of-atoms/">726. 原子的数量</a></li></ul><h4 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a>单调栈</h4><h6 id="简单-6"><a href="#简单-6" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/next-greater-element-i/">496. 下一个更大元素 I</a></li></ul><h6 id="中等-8"><a href="#中等-8" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/daily-temperatures/">739. 每日温度</a></li><li><a href="https://leetcode-cn.com/problems/remove-k-digits/">402. 移掉 K 位数字</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicate-letters/">316. 去除重复字母</a></li><li><a href="https://leetcode-cn.com/problems/longest-well-performing-interval/">1124. 表现良好的最长时间段</a></li></ul><h6 id="困难-7"><a href="#困难-7" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/trapping-rain-water/">42. 接雨水</a></li><li><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram/">84. 柱状图中最大的矩形</a></li><li><a href="https://leetcode-cn.com/problems/maximal-rectangle/">85. 最大矩形</a></li><li><a href="https://leetcode-cn.com/problems/create-maximum-number/">321. 拼接最大数</a></li></ul><h2 id="𐀴-堆"><a href="#𐀴-堆" class="headerlink" title="𐀴 堆"></a>𐀴 堆</h2><h4 id="基础-1"><a href="#基础-1" class="headerlink" title="基础"></a>基础</h4><h6 id="简单-7"><a href="#简单-7" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/last-stone-weight/">1046. 最后一块石头的重量</a></li><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/">703. 数据流中的第 K 大元素</a></li></ul><h6 id="中等-9"><a href="#中等-9" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第 K 个最大元素</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-elements/">347. 前 K 个高频元素</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-words/">692. 前K个高频单词</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/">378. 有序矩阵中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/sort-characters-by-frequency/">451. 根据字符出现频率排序</a></li><li><a href="https://leetcode-cn.com/problems/network-delay-time/">743. 网络延迟时间</a></li><li><a href="https://leetcode-cn.com/problems/cheapest-flights-within-k-stops/">787. K 站中转内最便宜的航班</a></li><li><a href="https://leetcode-cn.com/problems/k-closest-points-to-origin/">973. 最接近原点的 K 个点</a></li></ul><h6 id="困难-8"><a href="#困难-8" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/sliding-window-maximum/">239. 滑动窗口最大值</a></li><li><a href="https://leetcode-cn.com/problems/find-median-from-data-stream/">295. 数据流的中位数</a></li><li><a href="https://leetcode-cn.com/problems/the-skyline-problem/">218. 天际线问题</a></li></ul><h2 id="𐀴-二分查找"><a href="#𐀴-二分查找" class="headerlink" title="𐀴 二分查找"></a>𐀴 二分查找</h2><h6 id="简单-8"><a href="#简单-8" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/sqrtx/">69. x 的平方根</a></li><li><a href="https://leetcode-cn.com/problems/binary-search/">704. 二分查找</a></li><li><a href="https://leetcode-cn.com/problems/search-insert-position/">35. 搜索插入位置</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">349. 两个数组的交集</a></li><li><a href="https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/">167. 两数之和 II - 输入有序数组</a></li><li><a href="https://leetcode-cn.com/problems/first-bad-version/">278. 第一个错误的版本</a></li></ul><h6 id="中等-10"><a href="#中等-10" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">300. 最长递增子序列</a></li><li><a href="https://leetcode-cn.com/problems/search-a-2d-matrix/">74. 搜索二维矩阵</a></li><li><a href="https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/">34. 在排序数组中查找元素的第一个和最后一个位置</a></li><li><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">81. 搜索旋转排序数组 II</a></li><li><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">33. 搜索旋转排序数组</a></li><li><a href="https://leetcode-cn.com/problems/4sum-ii/">454. 四数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/search-a-2d-matrix-ii/">240. 搜索二维矩阵 II</a></li><li><a href="https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/">718. 最长重复子数组</a></li><li><a href="https://leetcode-cn.com/problems/powx-n/">50. Pow(x, n)</a></li><li><a href="https://leetcode-cn.com/problems/divide-two-integers/">29. 两数相除</a></li><li><a href="https://leetcode-cn.com/problems/find-the-duplicate-number/">287. 寻找重复数</a></li><li><a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">209. 长度最小的子数组</a></li><li><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">153. 寻找旋转排序数组中的最小值</a></li><li><a href="https://leetcode-cn.com/problems/find-peak-element/">162. 寻找峰值</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/">378. 有序矩阵中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/">230. 二叉搜索树中第K小的元素</a></li></ul><h6 id="困难-9"><a href="#困难-9" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">4. 寻找两个正序数组的中位数</a></li><li><a href="https://leetcode-cn.com/problems/super-egg-drop/">887. 鸡蛋掉落</a></li><li><a href="https://leetcode-cn.com/problems/split-array-largest-sum/">410. 分割数组的最大值</a></li><li><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/">154. 寻找旋转排序数组中的最小值 II</a></li></ul><h2 id="𐀴-位运算"><a href="#𐀴-位运算" class="headerlink" title="𐀴 位运算"></a>𐀴 位运算</h2><h6 id="简单-9"><a href="#简单-9" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/single-number/">136. 只出现一次的数字</a></li><li><a href="https://leetcode-cn.com/problems/number-of-1-bits/">191. 位1的个数</a></li><li><a href="https://leetcode-cn.com/problems/majority-element/">169. 多数元素</a></li><li><a href="https://leetcode-cn.com/problems/reverse-bits/">190. 颠倒二进制位</a></li><li><a href="https://leetcode-cn.com/problems/power-of-two/">231. 2的幂</a></li><li><a href="https://leetcode-cn.com/problems/find-the-difference/">389. 找不同</a></li><li><a href="https://leetcode-cn.com/problems/hamming-distance/">461. 汉明距离</a></li><li><a href="https://leetcode-cn.com/problems/convert-a-number-to-hexadecimal/">405. 数字转换为十六进制数</a></li><li><a href="https://leetcode-cn.com/problems/missing-number/">268. 丢失的数字</a></li></ul><h6 id="中等-11"><a href="#中等-11" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/subsets/">78. 子集</a></li><li><a href="https://leetcode-cn.com/problems/counting-bits/">338. 比特位计数</a></li><li><a href="https://leetcode-cn.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/">1318. 或运算的最小翻转次数</a></li><li><a href="https://leetcode-cn.com/problems/gray-code/">89. 格雷编码</a></li><li><a href="https://leetcode-cn.com/problems/single-number-iii/">260. 只出现一次的数字 III</a></li><li><a href="https://leetcode-cn.com/problems/sum-of-two-integers/">371. 两整数之和</a></li><li><a href="https://leetcode-cn.com/problems/single-number-ii/">137. 只出现一次的数字 II</a></li><li><a href="https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/">421. 数组中两个数的最大异或值</a></li></ul><h2 id="𐀴-双指针与滑动窗口"><a href="#𐀴-双指针与滑动窗口" class="headerlink" title="𐀴 双指针与滑动窗口"></a>𐀴 双指针与滑动窗口</h2><h6 id="简单-10"><a href="#简单-10" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/first-unique-character-in-a-string/">387. 字符串中的第一个唯一字符</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">349. 两个数组的交集</a></li><li><a href="https://leetcode-cn.com/problems/longest-palindrome/">409. 最长回文串</a></li><li><a href="https://leetcode-cn.com/problems/contains-duplicate/">217. 存在重复元素</a></li><li><a href="https://leetcode-cn.com/problems/count-primes/">204. 计数质数</a></li><li><a href="https://leetcode-cn.com/problems/merge-sorted-array/">88. 合并两个有序数组</a></li><li><a href="https://leetcode-cn.com/problems/move-zeroes/">283. 移动零</a></li><li><a href="https://leetcode-cn.com/problems/valid-palindrome/">125. 验证回文串</a></li><li><a href="https://leetcode-cn.com/problems/reverse-string/">344. 反转字符串</a></li><li><a href="https://leetcode-cn.com/problems/remove-element/">27. 移除元素</a></li><li><a href="https://leetcode-cn.com/problems/squares-of-a-sorted-array/">977. 有序数组的平方</a></li></ul><h6 id="中等-12"><a href="#中等-12" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></li><li><a href="https://leetcode-cn.com/problems/rabbits-in-forest/">781. 森林中的兔子</a></li><li><a href="https://leetcode-cn.com/problems/group-anagrams/">49. 字母异位词分组</a></li><li><a href="https://leetcode-cn.com/problems/4sum/">18. 四数之和</a></li><li><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/">560. 和为 K 的子数组</a></li><li><a href="https://leetcode-cn.com/problems/4sum-ii/">454. 四数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/container-with-most-water/">11. 盛最多水的容器</a></li><li><a href="https://leetcode-cn.com/problems/3sum-closest/">16. 最接近的三数之和</a></li><li><a href="https://leetcode-cn.com/problems/4sum/">18. 四数之和</a></li><li><a href="https://leetcode-cn.com/problems/longest-repeating-character-replacement/">424. 替换后的最长重复字符</a></li><li><a href="https://leetcode-cn.com/problems/subarray-product-less-than-k/">713. 乘积小于K的子数组</a></li></ul><h6 id="困难-10"><a href="#困难-10" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. 最小覆盖子串</a></li><li><a href="https://leetcode-cn.com/problems/subarrays-with-k-different-integers/">992. K 个不同整数的子数组</a></li></ul><h2 id="𐀴-矩阵"><a href="#𐀴-矩阵" class="headerlink" title="𐀴 矩阵"></a>𐀴 矩阵</h2><h6 id="简单-11"><a href="#简单-11" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/transpose-matrix/">867. 转置矩阵</a></li><li><a href="https://leetcode-cn.com/problems/flipping-an-image/">832. 翻转图像</a></li></ul><h6 id="中等-13"><a href="#中等-13" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/spiral-matrix/">54. 螺旋矩阵</a></li><li><a href="https://leetcode-cn.com/problems/spiral-matrix-ii/">59. 螺旋矩阵 II</a></li><li><a href="https://leetcode-cn.com/problems/set-matrix-zeroes/">73. 矩阵置零</a></li><li><a href="https://leetcode-cn.com/problems/rotate-image/">48. 旋转图像</a></li></ul><h2 id="𐀴-动态规划"><a href="#𐀴-动态规划" class="headerlink" title="𐀴 动态规划"></a>𐀴 动态规划</h2><h3 id="一维"><a href="#一维" class="headerlink" title="一维"></a>一维</h3><h6 id="简单-12"><a href="#简单-12" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/climbing-stairs/">70. 爬楼梯</a></li><li><a href="https://leetcode-cn.com/problems/maximum-subarray/">53. 最大子序和</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/">121. 买卖股票的最佳时机</a></li><li><a href="https://leetcode-cn.com/problems/min-cost-climbing-stairs/">746. 使用最小花费爬楼梯</a></li></ul><h6 id="中等-14"><a href="#中等-14" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/house-robber-iii/">337. 打家劫舍 III</a></li><li><a href="https://leetcode-cn.com/problems/coin-change/">322. 零钱兑换</a></li><li><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">300. 最长递增子序列</a></li><li><a href="https://leetcode-cn.com/problems/word-break/">139. 单词拆分</a></li><li><a href="https://leetcode-cn.com/problems/maximum-product-subarray/">152. 乘积最大子数组</a></li><li><a href="https://leetcode-cn.com/problems/counting-bits/">338. 比特位计数</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">309. 最佳买卖股票时机含冷冻期</a></li><li><a href="https://leetcode-cn.com/problems/ugly-number-ii/">264. 丑数 II</a></li><li><a href="https://leetcode-cn.com/problems/perfect-squares/">279. 完全平方数</a></li></ul><h6 id="困难-11"><a href="#困难-11" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-valid-parentheses/">32. 最长有效括号</a></li><li><a href="https://leetcode-cn.com/problems/russian-doll-envelopes/">354. 俄罗斯套娃信封问题</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">123. 买卖股票的最佳时机 III</a></li></ul><h3 id="二维"><a href="#二维" class="headerlink" title="二维"></a>二维</h3><h6 id="中等-15"><a href="#中等-15" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-palindromic-substring/">5. 最长回文子串</a></li><li><a href="https://leetcode-cn.com/problems/longest-common-subsequence/">1143. 最长公共子序列</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-partitioning/">131. 分割回文串</a></li><li><a href="https://leetcode-cn.com/problems/unique-paths/">62. 不同路径</a></li><li><a href="https://leetcode-cn.com/problems/minimum-path-sum/">64. 最小路径和</a></li><li><a href="https://leetcode-cn.com/problems/maximal-square/">221. 最大正方形</a></li><li><a href="https://leetcode-cn.com/problems/partition-equal-subset-sum/">416. 分割等和子集</a></li><li><a href="https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/">718. 最长重复子数组</a></li><li><a href="https://leetcode-cn.com/problems/target-sum/">494. 目标和</a></li></ul><h6 id="困难-12"><a href="#困难-12" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/regular-expression-matching/">10. 正则表达式匹配</a></li><li><a href="https://leetcode-cn.com/problems/edit-distance/">72. 编辑距离</a></li><li><a href="https://leetcode-cn.com/problems/super-egg-drop/">887. 鸡蛋掉落</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-partitioning-ii/">132. 分割回文串 II</a></li><li><a href="https://leetcode-cn.com/problems/wildcard-matching/">44. 通配符匹配</a></li><li><a href="https://leetcode-cn.com/problems/split-array-largest-sum/">410. 分割数组的最大值</a></li></ul><h2 id="𐀴-图论"><a href="#𐀴-图论" class="headerlink" title="𐀴 图论"></a>𐀴 图论</h2><h3 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h3><h6 id="中等-16"><a href="#中等-16" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/decode-string/">394. 字符串解码</a></li><li><a href="https://leetcode-cn.com/problems/accounts-merge/">721. 账户合并</a></li><li><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></li><li><a href="https://leetcode-cn.com/problems/target-sum/">494. 目标和</a></li><li><a href="https://leetcode-cn.com/problems/max-area-of-island/">695. 岛屿的最大面积</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/path-with-minimum-effort/">1631. 最小体力消耗路径</a> </li><li><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></li><li><a href="https://leetcode-cn.com/problems/pacific-atlantic-water-flow/">417. 太平洋大西洋水流问题</a></li></ul><h6 id="困难-13"><a href="#困难-13" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/24-game/">679. 24 点游戏</a></li></ul><h3 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h3><h6 id="简单-13"><a href="#简单-13" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/employee-importance/">690. 员工的重要性</a></li></ul><h6 id="中等-17"><a href="#中等-17" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/perfect-squares/">279. 完全平方数</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/number-of-operations-to-make-network-connected/">1319. 连通网络的操作次数</a></li><li><a href="https://leetcode-cn.com/problems/shortest-bridge/">934. 最短的桥</a></li><li><a href="https://leetcode-cn.com/problems/is-graph-bipartite/">785. 判断二分图</a></li><li><a href="https://leetcode-cn.com/problems/rotting-oranges/">994. 腐烂的橘子</a></li><li><a href="https://leetcode-cn.com/problems/open-the-lock/">752. 打开转盘锁</a></li><li><a href="https://leetcode-cn.com/problems/as-far-from-land-as-possible/">1162. 地图分析</a></li><li><a href="https://leetcode-cn.com/problems/minesweeper/">529. 扫雷游戏</a></li></ul><h6 id="困难-14"><a href="#困难-14" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/bus-routes/">815. 公交路线</a></li><li><a href="https://leetcode-cn.com/problems/word-ladder/">127. 单词接龙</a></li><li><a href="https://leetcode-cn.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/">1293. 网格中的最短路径</a></li><li><a href="https://leetcode-cn.com/problems/sliding-puzzle/">773. 滑动谜题</a></li><li><a href="https://leetcode-cn.com/problems/making-a-large-island/">827. 最大人工岛</a></li></ul><h3 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h3><ul><li><a href="https://leetcode-cn.com/problems/cheapest-flights-within-k-stops/">787. K 站中转内最便宜的航班</a></li></ul><h3 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h3><h6 id="中等-18"><a href="#中等-18" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></li><li><a href="https://leetcode-cn.com/problems/course-schedule-ii/">210. 课程表 II</a></li></ul><h6 id="困难-15"><a href="#困难-15" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-increasing-path-in-a-matrix/">329. 矩阵中的最长递增路径</a></li><li><a href="https://leetcode-cn.com/problems/sort-items-by-groups-respecting-dependencies/">1203. 项目管理</a></li></ul><h2 id="𐀴-并查集"><a href="#𐀴-并查集" class="headerlink" title="𐀴 并查集"></a>𐀴 并查集</h2><h6 id="中等-19"><a href="#中等-19" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/number-of-islands/">200. 岛屿数量</a></li><li><a href="https://leetcode-cn.com/problems/accounts-merge/">721. 账户合并</a></li><li><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/path-with-minimum-effort/">1631. 最小体力消耗路径</a></li><li><a href="https://leetcode-cn.com/problems/evaluate-division/">399. 除法求值</a></li><li><a href="https://leetcode-cn.com/problems/number-of-operations-to-make-network-connected/">1319. 连通网络的操作次数</a></li><li><a href="https://leetcode-cn.com/problems/redundant-connection/">684. 冗余连接</a></li></ul><h6 id="困难-16"><a href="#困难-16" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-consecutive-sequence/">128. 最长连续序列</a></li><li><a href="https://leetcode-cn.com/problems/couples-holding-hands/">765. 情侣牵手</a></li></ul><h2 id="𐀴-设计"><a href="#𐀴-设计" class="headerlink" title="𐀴 设计"></a>𐀴 设计</h2><h6 id="简单-14"><a href="#简单-14" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/design-parking-system/">1603. 设计停车系统</a></li><li><a href="https://leetcode-cn.com/problems/design-hashset/">705. 设计哈希集合</a></li><li><a href="https://leetcode-cn.com/problems/design-hashmap/">706. 设计哈希映射</a></li><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/">703. 数据流中的第 K 大元素</a></li></ul><h6 id="中等-20"><a href="#中等-20" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/lru-cache/">146. LRU 缓存机制</a></li><li><a href="https://leetcode-cn.com/problems/flatten-nested-list-iterator/">341. 扁平化嵌套列表迭代器</a></li><li><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></li><li><a href="https://leetcode-cn.com/problems/binary-search-tree-iterator/">173. 二叉搜索树迭代器</a></li><li><a href="https://leetcode-cn.com/problems/design-circular-queue/">622. 设计循环队列</a></li><li><a href="https://leetcode-cn.com/problems/insert-delete-getrandom-o1/">380. O(1) 时间插入、删除和获取随机元素</a></li></ul><h6 id="困难-17"><a href="#困难-17" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/find-median-from-data-stream/">295. 数据流的中位数</a></li><li><a href="https://leetcode-cn.com/problems/lfu-cache/">460. LFU 缓存</a></li></ul><h2 id="𐀴-贪心"><a href="#𐀴-贪心" class="headerlink" title="𐀴 贪心"></a>𐀴 贪心</h2><h6 id="中等-21"><a href="#中等-21" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/ugly-number-ii/">264. 丑数 II</a></li><li><a href="https://leetcode-cn.com/problems/validate-stack-sequences/">946. 验证栈序列</a></li><li><a href="https://leetcode-cn.com/problems/reorganize-string/">767. 重构字符串</a></li><li><a href="https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums/">373. 查找和最小的 K 对数字</a></li><li><a href="https://leetcode-cn.com/problems/super-ugly-number/">313. 超级丑数</a></li></ul><h2 id="𐀴-回溯"><a href="#𐀴-回溯" class="headerlink" title="𐀴 回溯"></a>𐀴 回溯</h2><h6 id="中等-22"><a href="#中等-22" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/permutations/">46. 全排列</a></li><li><a href="https://leetcode-cn.com/problems/generate-parentheses/">22. 括号生成</a></li><li><a href="https://leetcode-cn.com/problems/restore-ip-addresses/">93. 复原 IP 地址</a></li><li><a href="https://leetcode-cn.com/problems/subsets/">78. 子集</a></li><li><a href="https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/">17. 电话号码的字母组合</a></li><li><a href="https://leetcode-cn.com/problems/word-search/">79. 单词搜索</a></li><li><a href="https://leetcode-cn.com/problems/subsets-ii/">90. 子集 II</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum/">39. 组合总和</a></li><li><a href="https://leetcode-cn.com/problems/combinations/">77. 组合</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum-ii/">40. 组合总和 II</a></li><li><a href="https://leetcode-cn.com/problems/permutations-ii/">47. 全排列 II</a></li><li><a href="https://leetcode-cn.com/problems/split-array-into-fibonacci-sequence/">842. 将数组拆分成斐波那契序列</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum-iii/">216. 组合总和 III</a></li><li><a href="https://leetcode-cn.com/problems/gray-code/">89. 格雷编码</a></li></ul><h6 id="困难-18"><a href="#困难-18" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/n-queens/">51. N 皇后</a></li><li><a href="https://leetcode-cn.com/problems/sudoku-solver/">37. 解数独</a></li><li><a href="https://leetcode-cn.com/problems/word-ladder-ii/">126. 单词接龙 II</a></li><li><a href="https://leetcode-cn.com/problems/maximize-grid-happiness/">1659. 最大化网格幸福感</a></li></ul><h2 id="𐀴-克隆"><a href="#𐀴-克隆" class="headerlink" title="𐀴 克隆"></a>𐀴 克隆</h2><h6 id="中等-23"><a href="#中等-23" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/clone-graph/">133. 克隆图</a></li><li><a href="https://leetcode-cn.com/problems/copy-list-with-random-pointer/">138. 复制带随机指针的链表</a></li></ul><h2 id="𐀴-数学"><a href="#𐀴-数学" class="headerlink" title="𐀴 数学"></a>𐀴 数学</h2><h5 id="简单-15"><a href="#简单-15" class="headerlink" title="简单"></a>简单</h5><ul><li><a href="https://leetcode-cn.com/problems/count-primes/">204. 计数质数</a></li><li><a href="https://leetcode-cn.com/problems/maximum-product-of-three-numbers/">628. 三个数的最大乘积</a></li><li><a href="https://leetcode-cn.com/problems/largest-perimeter-triangle/">976. 三角形的最大周长</a></li><li><a href="https://leetcode-cn.com/problems/happy-number/">202. 快乐数</a></li><li><a href="https://leetcode-cn.com/problems/check-if-it-is-a-straight-line/">1232. 缀点成线</a></li></ul><h6 id="中等-24"><a href="#中等-24" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/divide-two-integers/">29. 两数相除</a></li><li><a href="https://leetcode-cn.com/problems/integer-break/">343. 整数拆分</a></li><li><a href="https://leetcode-cn.com/problems/fraction-to-recurring-decimal/">166. 分数到小数</a></li></ul><h6 id="困难-19"><a href="#困难-19" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/max-points-on-a-line/">149. 直线上最多的点数</a></li></ul><h2 id="𐀴-极大极小化"><a href="#𐀴-极大极小化" class="headerlink" title="𐀴 极大极小化"></a>𐀴 极大极小化</h2><h6 id="简单-16"><a href="#简单-16" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/nim-game/">292. Nim 游戏</a></li></ul><h6 id="中等-25"><a href="#中等-25" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/">375. 猜数字大小 II</a></li><li><a href="https://leetcode-cn.com/problems/predict-the-winner/">486. 预测赢家</a></li><li><a href="https://leetcode-cn.com/problems/can-i-win/">464. 我能赢吗</a></li><li><a href="https://leetcode-cn.com/problems/stone-game/">877. 石子游戏</a></li></ul><h2 id="𐀴-几何"><a href="#𐀴-几何" class="headerlink" title="𐀴 几何"></a>𐀴 几何</h2><h6 id="简单-17"><a href="#简单-17" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/check-if-it-is-a-straight-line/">1232. 缀点成线</a></li><li><a href="https://leetcode-cn.com/problems/minimum-time-visiting-all-points/">1266. 访问所有点的最小时间</a></li><li><a href="https://leetcode-cn.com/problems/surface-area-of-3d-shapes/">892. 三维形体的表面积</a></li></ul><h6 id="中等-26"><a href="#中等-26" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/circle-and-rectangle-overlapping/">1401. 圆和矩形是否有重叠</a></li><li><a href="https://leetcode-cn.com/problems/minimum-area-rectangle-ii/">963. 最小面积矩形 II</a></li></ul><h6 id="困难-20"><a href="#困难-20" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/erect-the-fence/">587. 安装栅栏</a></li><li><a href="https://leetcode-cn.com/problems/best-position-for-a-service-centre/">1515. 服务中心的最佳位置</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware打开ubantu黑屏无反应</title>
      <link href="/2021/12/03/vmware-da-kai-ubantu-hei-ping-wu-fan-ying/"/>
      <url>/2021/12/03/vmware-da-kai-ubantu-hei-ping-wu-fan-ying/</url>
      
        <content type="html"><![CDATA[<p>设置VMware编辑–&gt;首选项–&gt;设备–&gt;启用虚拟打印机 即可</p><p><img src="/./VMware%E6%89%93%E5%BC%80ubantu%E9%BB%91%E5%B1%8F%E6%97%A0%E5%8F%8D%E5%BA%94/1.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QT编写串口助手</title>
      <link href="/2021/12/02/qt-bian-xie-chuan-kou-zhu-shou/"/>
      <url>/2021/12/02/qt-bian-xie-chuan-kou-zhu-shou/</url>
      
        <content type="html"><![CDATA[<p><em><strong>.pro文件中</strong></em></p><p>QT += serialport</p><p><em><strong>serial.h:</strong></em></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">ifndef</span> SERIAL_H</span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">define</span> SERIAL_H</span></span><br><span class="line"> <span class="number">3</span> </span><br><span class="line"> <span class="number">4</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"> <span class="number">5</span> </span><br><span class="line"> <span class="number">6</span> <span class="comment">/*-------user--------------------*/</span></span><br><span class="line"> <span class="number">7</span> <span class="comment">//port</span></span><br><span class="line"> <span class="number">8</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QSerialPort&gt;</span></span></span><br><span class="line"> <span class="number">9</span> <span class="comment">//debug</span></span><br><span class="line"><span class="number">10</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="number">11</span> <span class="comment">/*-------------------------------*/</span></span><br><span class="line"><span class="number">12</span> </span><br><span class="line"><span class="number">13</span> <span class="keyword">namespace</span> Ui {</span><br><span class="line"><span class="number">14</span> <span class="class"><span class="keyword">class</span> <span class="title">Serial</span>;</span></span><br><span class="line"><span class="number">15</span> }</span><br><span class="line"><span class="number">16</span> </span><br><span class="line"><span class="number">17</span> <span class="class"><span class="keyword">class</span> <span class="title">Serial</span> :</span> <span class="keyword">public</span> QMainWindow</span><br><span class="line"><span class="number">18</span> {</span><br><span class="line"><span class="number">19</span>     Q_OBJECT</span><br><span class="line"><span class="number">20</span> </span><br><span class="line"><span class="number">21</span> <span class="keyword">public</span>:</span><br><span class="line"><span class="number">22</span>     <span class="function"><span class="keyword">explicit</span> <span class="title">Serial</span><span class="params">(QWidget *parent = <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="number">23</span>     ~<span class="built_in">Serial</span>();</span><br><span class="line"><span class="number">24</span> </span><br><span class="line"><span class="number">25</span> <span class="keyword">private</span> slots:</span><br><span class="line"><span class="number">26</span>     <span class="comment">//button</span></span><br><span class="line"><span class="number">27</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_open_port</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">28</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_close_port</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">29</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_send_data</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">30</span> </span><br><span class="line"><span class="number">31</span>     <span class="comment">//receive data</span></span><br><span class="line"><span class="number">32</span>     <span class="function"><span class="keyword">void</span> <span class="title">receive_data</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">33</span> </span><br><span class="line"><span class="number">34</span> <span class="keyword">private</span>:</span><br><span class="line"><span class="number">35</span>     Ui::Serial *ui;</span><br><span class="line"><span class="number">36</span>     <span class="comment">/*----------funtion-------------------*/</span></span><br><span class="line"><span class="number">37</span>     <span class="function"><span class="keyword">void</span> <span class="title">system_init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">38</span>     <span class="comment">/*----------variable-------------------*/</span></span><br><span class="line"><span class="number">39</span>     QSerialPort global_port;</span><br><span class="line"><span class="number">40</span> };</span><br><span class="line"><span class="number">41</span> </span><br><span class="line"><span class="number">42</span> <span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// SERIAL_H</span></span></span><br></pre></td></tr></tbody></table></figure><p>main.cpp:</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"> <span class="number">3</span> </span><br><span class="line"> <span class="number">4</span> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"> 5 </span>{</span><br><span class="line"> <span class="number">6</span>     <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"> <span class="number">7</span>     Serial w;</span><br><span class="line"> <span class="number">8</span>     w.<span class="built_in">show</span>();</span><br><span class="line"> <span class="number">9</span> </span><br><span class="line"><span class="number">10</span>     <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line"><span class="number">11</span> }</span><br></pre></td></tr></tbody></table></figure><p><em><strong>serial.cpp:</strong></em></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">  <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line">  <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_serial.h"</span></span></span><br><span class="line">  <span class="number">3</span> </span><br><span class="line">  <span class="number">4</span> Serial::<span class="built_in">Serial</span>(QWidget *parent) :</span><br><span class="line">  <span class="number">5</span>     <span class="built_in">QMainWindow</span>(parent),</span><br><span class="line">  <span class="number">6</span>     <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Serial)</span><br><span class="line">  <span class="number">7</span> {</span><br><span class="line">  <span class="number">8</span>     ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">  <span class="number">9</span>     <span class="comment">//user</span></span><br><span class="line"> <span class="number">10</span>     <span class="built_in">system_init</span>();</span><br><span class="line"> <span class="number">11</span> }</span><br><span class="line"> <span class="number">12</span> </span><br><span class="line"> <span class="number">13</span> Serial::~<span class="built_in">Serial</span>()</span><br><span class="line"> <span class="number">14</span> {</span><br><span class="line"> <span class="number">15</span>     <span class="keyword">delete</span> ui;</span><br><span class="line"> <span class="number">16</span> }</span><br><span class="line"> <span class="number">17</span> </span><br><span class="line"> <span class="number">18</span> <span class="comment">/*--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> 19  *          funtions</span></span><br><span class="line"><span class="comment"> 20  * -------------------------------------------------------------------------*/</span></span><br><span class="line"> <span class="number">21</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::system_init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 22 </span>{</span><br><span class="line"> <span class="number">23</span>     <span class="comment">//port config</span></span><br><span class="line"> <span class="number">24</span>     global_port.<span class="built_in">setParity</span>(QSerialPort::NoParity);</span><br><span class="line"> <span class="number">25</span>     global_port.<span class="built_in">setDataBits</span>(QSerialPort::Data8);</span><br><span class="line"> <span class="number">26</span>     global_port.<span class="built_in">setStopBits</span>(QSerialPort::OneStop);</span><br><span class="line"> <span class="number">27</span> </span><br><span class="line"> <span class="number">28</span>     <span class="comment">//connect</span></span><br><span class="line"> <span class="number">29</span>     <span class="built_in">connect</span>(ui-&gt;btn_open,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_open_port);</span><br><span class="line"> <span class="number">30</span>     <span class="built_in">connect</span>(ui-&gt;btn_close,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_close_port);</span><br><span class="line"> <span class="number">31</span>     <span class="built_in">connect</span>(ui-&gt;btn_send,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_send_data);</span><br><span class="line"> <span class="number">32</span>     <span class="built_in">connect</span>(&amp;global_port,&amp;QSerialPort::readyRead,<span class="keyword">this</span>,&amp;Serial::receive_data);</span><br><span class="line"> <span class="number">33</span> }</span><br><span class="line"> <span class="number">34</span> <span class="comment">/*--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> 35  *          slots</span></span><br><span class="line"><span class="comment"> 36  * -------------------------------------------------------------------------*/</span></span><br><span class="line"> <span class="number">37</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_open_port</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function"> 38 </span>{</span><br><span class="line"> <span class="number">39</span>     <span class="comment">/*--------port name------------------------*/</span></span><br><span class="line"> <span class="number">40</span>     <span class="built_in">qDebug</span>()&lt;&lt;ui-&gt;cmb_port_name-&gt;<span class="built_in">currentIndex</span>();<span class="comment">//printf 0</span></span><br><span class="line"> <span class="number">41</span> <span class="comment">//    int i = 10;</span></span><br><span class="line"> <span class="number">42</span> <span class="comment">//    qDebug("%d",i);</span></span><br><span class="line"> <span class="number">43</span>     <span class="built_in"><span class="keyword">switch</span></span> (ui-&gt;cmb_port_name-&gt;<span class="built_in">currentIndex</span>()) {</span><br><span class="line"> <span class="number">44</span>     <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"> <span class="number">45</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM1"</span>);</span><br><span class="line"> <span class="number">46</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">47</span>     <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> <span class="number">48</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM2"</span>);</span><br><span class="line"> <span class="number">49</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">50</span>     <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> <span class="number">51</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM3"</span>);</span><br><span class="line"> <span class="number">52</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">53</span>     <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"> <span class="number">54</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM4"</span>);</span><br><span class="line"> <span class="number">55</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">56</span>     <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"> <span class="number">57</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM5"</span>);</span><br><span class="line"> <span class="number">58</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">59</span>     <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"> <span class="number">60</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM6"</span>);</span><br><span class="line"> <span class="number">61</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">62</span>     <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"> <span class="number">63</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM7"</span>);</span><br><span class="line"> <span class="number">64</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">65</span>     <span class="keyword">default</span>:</span><br><span class="line"> <span class="number">66</span>          global_port.<span class="built_in">setPortName</span>(<span class="string">"COM8"</span>);</span><br><span class="line"> <span class="number">67</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">68</span>     }</span><br><span class="line"> <span class="number">69</span>     <span class="comment">/*--------baud rate-----------------------------*/</span></span><br><span class="line"> <span class="number">70</span>     <span class="built_in"><span class="keyword">switch</span></span> (ui-&gt;cmb_baud_rate-&gt;<span class="built_in">currentIndex</span>()) {</span><br><span class="line"> <span class="number">71</span>     <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"> <span class="number">72</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud115200);</span><br><span class="line"> <span class="number">73</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">74</span>     <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> <span class="number">75</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud57600);</span><br><span class="line"> <span class="number">76</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">77</span>     <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> <span class="number">78</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud38400);</span><br><span class="line"> <span class="number">79</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">80</span>     <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"> <span class="number">81</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud19200);</span><br><span class="line"> <span class="number">82</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">83</span>     <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"> <span class="number">84</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud9600);</span><br><span class="line"> <span class="number">85</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">86</span>     <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"> <span class="number">87</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud4800);</span><br><span class="line"> <span class="number">88</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">89</span>     <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"> <span class="number">90</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud2400);</span><br><span class="line"> <span class="number">91</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">92</span>     <span class="keyword">default</span>:</span><br><span class="line"> <span class="number">93</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud1200);</span><br><span class="line"> <span class="number">94</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">95</span>     }</span><br><span class="line"> <span class="number">96</span>     <span class="comment">//open</span></span><br><span class="line"> <span class="number">97</span>     global_port.<span class="built_in">open</span>(QIODevice::ReadWrite);</span><br><span class="line"> <span class="number">98</span>     ui-&gt;lab_status-&gt;<span class="built_in">setText</span>(<span class="string">"Connected"</span>);</span><br><span class="line"> <span class="number">99</span>     <span class="comment">//test</span></span><br><span class="line"><span class="number">100</span> <span class="comment">//    global_port.write("1");</span></span><br><span class="line"><span class="number">101</span> }</span><br><span class="line"><span class="number">102</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_close_port</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function">103 </span>{</span><br><span class="line"><span class="number">104</span>     ui-&gt;lab_status-&gt;<span class="built_in">setText</span>(<span class="string">"Disconnected"</span>);</span><br><span class="line"><span class="number">105</span>     global_port.<span class="built_in">close</span>();</span><br><span class="line"><span class="number">106</span> }</span><br><span class="line"><span class="number">107</span> <span class="comment">/*------------sending data---------------------*/</span></span><br><span class="line"><span class="number">108</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_send_data</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function">109 </span>{</span><br><span class="line"><span class="number">110</span>    QString data = ui-&gt;lint_send_data-&gt;<span class="built_in">text</span>();</span><br><span class="line"><span class="number">111</span>    QByteArray array = data.<span class="built_in">toLatin1</span>();<span class="comment">//QString---&gt;QByteArray</span></span><br><span class="line"><span class="number">112</span>    global_port.<span class="built_in">write</span>(array);</span><br><span class="line"><span class="number">113</span> }</span><br><span class="line"><span class="number">114</span> <span class="comment">/*-----------receive data-----------------*/</span></span><br><span class="line"><span class="number">115</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::receive_data</span><span class="params">()</span></span></span><br><span class="line"><span class="function">116 </span>{</span><br><span class="line"><span class="number">117</span>    QByteArray array = global_port.<span class="built_in">readAll</span>();</span><br><span class="line"><span class="number">118</span>    <span class="built_in">qDebug</span>()&lt;&lt;array;</span><br><span class="line"><span class="number">119</span>    <span class="keyword">if</span>(ui-&gt;checkBox-&gt;<span class="built_in">checkState</span>() == Qt::Checked){</span><br><span class="line"><span class="number">120</span>       ui-&gt;plainTextEdit-&gt;<span class="built_in">insertPlainText</span>(<span class="built_in">QString</span>(array.<span class="built_in">toHex</span>(<span class="string">' '</span>).<span class="built_in">toUpper</span>().<span class="built_in">append</span>(<span class="string">' '</span>)));</span><br><span class="line"><span class="number">121</span>    }<span class="keyword">else</span> {</span><br><span class="line"><span class="number">122</span>        ui-&gt;plainTextEdit-&gt;<span class="built_in">insertPlainText</span>(<span class="built_in">QString</span>(array));</span><br><span class="line"><span class="number">123</span>    }</span><br><span class="line"><span class="number">124</span> }</span><br></pre></td></tr></tbody></table></figure><p><em><strong>ui:</strong></em></p><p><img src="https://img2020.cnblogs.com/blog/2092994/202009/2092994-20200913005814247-966532200.png" alt="img"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>串口发送问题</title>
      <link href="/2021/12/02/chuan-kou-fa-song-wen-ti/"/>
      <url>/2021/12/02/chuan-kou-fa-song-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>　串口发送hex命令为char型的十六进制命令，并用到了CRC16校验，分别取校验结果数据的高低位</p><p>　　10进制int型数据转16进制，并取高低位：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">  <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">  <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">  <span class="number">3</span> <span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">  <span class="number">4</span> </span><br><span class="line">  <span class="number">5</span> <span class="meta">#<span class="meta-keyword">define</span> TABLE_METHOD    1</span></span><br><span class="line">  <span class="number">6</span> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> CRCHi[] = {</span><br><span class="line">  <span class="number">7</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">  <span class="number">8</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">  <span class="number">9</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">10</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">11</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">12</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">13</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">14</span>     <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">15</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">16</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">17</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">18</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">19</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">20</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">21</span>     <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">22</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">23</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">24</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">25</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">26</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">27</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">28</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span></span><br><span class="line"> <span class="number">29</span> };</span><br><span class="line"> <span class="number">30</span> </span><br><span class="line"> <span class="number">31</span> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> CRCLo[] = {</span><br><span class="line"> <span class="number">32</span>     <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0xC1</span>, <span class="number">0x01</span>, <span class="number">0xC3</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0xC2</span>, <span class="number">0xC6</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0xC7</span>,</span><br><span class="line"> <span class="number">33</span>     <span class="number">0x05</span>, <span class="number">0xC5</span>, <span class="number">0xC4</span>, <span class="number">0x04</span>, <span class="number">0xCC</span>, <span class="number">0x0C</span>, <span class="number">0x0D</span>, <span class="number">0xCD</span>, <span class="number">0x0F</span>, <span class="number">0xCF</span>, <span class="number">0xCE</span>, <span class="number">0x0E</span>,</span><br><span class="line"> <span class="number">34</span>     <span class="number">0x0A</span>, <span class="number">0xCA</span>, <span class="number">0xCB</span>, <span class="number">0x0B</span>, <span class="number">0xC9</span>, <span class="number">0x09</span>, <span class="number">0x08</span>, <span class="number">0xC8</span>, <span class="number">0xD8</span>, <span class="number">0x18</span>, <span class="number">0x19</span>, <span class="number">0xD9</span>,</span><br><span class="line"> <span class="number">35</span>     <span class="number">0x1B</span>, <span class="number">0xDB</span>, <span class="number">0xDA</span>, <span class="number">0x1A</span>, <span class="number">0x1E</span>, <span class="number">0xDE</span>, <span class="number">0xDF</span>, <span class="number">0x1F</span>, <span class="number">0xDD</span>, <span class="number">0x1D</span>, <span class="number">0x1C</span>, <span class="number">0xDC</span>,</span><br><span class="line"> <span class="number">36</span>     <span class="number">0x14</span>, <span class="number">0xD4</span>, <span class="number">0xD5</span>, <span class="number">0x15</span>, <span class="number">0xD7</span>, <span class="number">0x17</span>, <span class="number">0x16</span>, <span class="number">0xD6</span>, <span class="number">0xD2</span>, <span class="number">0x12</span>, <span class="number">0x13</span>, <span class="number">0xD3</span>,</span><br><span class="line"> <span class="number">37</span>     <span class="number">0x11</span>, <span class="number">0xD1</span>, <span class="number">0xD0</span>, <span class="number">0x10</span>, <span class="number">0xF0</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0xF1</span>, <span class="number">0x33</span>, <span class="number">0xF3</span>, <span class="number">0xF2</span>, <span class="number">0x32</span>,</span><br><span class="line"> <span class="number">38</span>     <span class="number">0x36</span>, <span class="number">0xF6</span>, <span class="number">0xF7</span>, <span class="number">0x37</span>, <span class="number">0xF5</span>, <span class="number">0x35</span>, <span class="number">0x34</span>, <span class="number">0xF4</span>, <span class="number">0x3C</span>, <span class="number">0xFC</span>, <span class="number">0xFD</span>, <span class="number">0x3D</span>,</span><br><span class="line"> <span class="number">39</span>     <span class="number">0xFF</span>, <span class="number">0x3F</span>, <span class="number">0x3E</span>, <span class="number">0xFE</span>, <span class="number">0xFA</span>, <span class="number">0x3A</span>, <span class="number">0x3B</span>, <span class="number">0xFB</span>, <span class="number">0x39</span>, <span class="number">0xF9</span>, <span class="number">0xF8</span>, <span class="number">0x38</span>,</span><br><span class="line"> <span class="number">40</span>     <span class="number">0x28</span>, <span class="number">0xE8</span>, <span class="number">0xE9</span>, <span class="number">0x29</span>, <span class="number">0xEB</span>, <span class="number">0x2B</span>, <span class="number">0x2A</span>, <span class="number">0xEA</span>, <span class="number">0xEE</span>, <span class="number">0x2E</span>, <span class="number">0x2F</span>, <span class="number">0xEF</span>,</span><br><span class="line"> <span class="number">41</span>     <span class="number">0x2D</span>, <span class="number">0xED</span>, <span class="number">0xEC</span>, <span class="number">0x2C</span>, <span class="number">0xE4</span>, <span class="number">0x24</span>, <span class="number">0x25</span>, <span class="number">0xE5</span>, <span class="number">0x27</span>, <span class="number">0xE7</span>, <span class="number">0xE6</span>, <span class="number">0x26</span>,</span><br><span class="line"> <span class="number">42</span>     <span class="number">0x22</span>, <span class="number">0xE2</span>, <span class="number">0xE3</span>, <span class="number">0x23</span>, <span class="number">0xE1</span>, <span class="number">0x21</span>, <span class="number">0x20</span>, <span class="number">0xE0</span>, <span class="number">0xA0</span>, <span class="number">0x60</span>, <span class="number">0x61</span>, <span class="number">0xA1</span>,</span><br><span class="line"> <span class="number">43</span>     <span class="number">0x63</span>, <span class="number">0xA3</span>, <span class="number">0xA2</span>, <span class="number">0x62</span>, <span class="number">0x66</span>, <span class="number">0xA6</span>, <span class="number">0xA7</span>, <span class="number">0x67</span>, <span class="number">0xA5</span>, <span class="number">0x65</span>, <span class="number">0x64</span>, <span class="number">0xA4</span>,</span><br><span class="line"> <span class="number">44</span>     <span class="number">0x6C</span>, <span class="number">0xAC</span>, <span class="number">0xAD</span>, <span class="number">0x6D</span>, <span class="number">0xAF</span>, <span class="number">0x6F</span>, <span class="number">0x6E</span>, <span class="number">0xAE</span>, <span class="number">0xAA</span>, <span class="number">0x6A</span>, <span class="number">0x6B</span>, <span class="number">0xAB</span>,</span><br><span class="line"> <span class="number">45</span>     <span class="number">0x69</span>, <span class="number">0xA9</span>, <span class="number">0xA8</span>, <span class="number">0x68</span>, <span class="number">0x78</span>, <span class="number">0xB8</span>, <span class="number">0xB9</span>, <span class="number">0x79</span>, <span class="number">0xBB</span>, <span class="number">0x7B</span>, <span class="number">0x7A</span>, <span class="number">0xBA</span>,</span><br><span class="line"> <span class="number">46</span>     <span class="number">0xBE</span>, <span class="number">0x7E</span>, <span class="number">0x7F</span>, <span class="number">0xBF</span>, <span class="number">0x7D</span>, <span class="number">0xBD</span>, <span class="number">0xBC</span>, <span class="number">0x7C</span>, <span class="number">0xB4</span>, <span class="number">0x74</span>, <span class="number">0x75</span>, <span class="number">0xB5</span>,</span><br><span class="line"> <span class="number">47</span>     <span class="number">0x77</span>, <span class="number">0xB7</span>, <span class="number">0xB6</span>, <span class="number">0x76</span>, <span class="number">0x72</span>, <span class="number">0xB2</span>, <span class="number">0xB3</span>, <span class="number">0x73</span>, <span class="number">0xB1</span>, <span class="number">0x71</span>, <span class="number">0x70</span>, <span class="number">0xB0</span>,</span><br><span class="line"> <span class="number">48</span>     <span class="number">0x50</span>, <span class="number">0x90</span>, <span class="number">0x91</span>, <span class="number">0x51</span>, <span class="number">0x93</span>, <span class="number">0x53</span>, <span class="number">0x52</span>, <span class="number">0x92</span>, <span class="number">0x96</span>, <span class="number">0x56</span>, <span class="number">0x57</span>, <span class="number">0x97</span>,</span><br><span class="line"> <span class="number">49</span>     <span class="number">0x55</span>, <span class="number">0x95</span>, <span class="number">0x94</span>, <span class="number">0x54</span>, <span class="number">0x9C</span>, <span class="number">0x5C</span>, <span class="number">0x5D</span>, <span class="number">0x9D</span>, <span class="number">0x5F</span>, <span class="number">0x9F</span>, <span class="number">0x9E</span>, <span class="number">0x5E</span>,</span><br><span class="line"> <span class="number">50</span>     <span class="number">0x5A</span>, <span class="number">0x9A</span>, <span class="number">0x9B</span>, <span class="number">0x5B</span>, <span class="number">0x99</span>, <span class="number">0x59</span>, <span class="number">0x58</span>, <span class="number">0x98</span>, <span class="number">0x88</span>, <span class="number">0x48</span>, <span class="number">0x49</span>, <span class="number">0x89</span>,</span><br><span class="line"> <span class="number">51</span>     <span class="number">0x4B</span>, <span class="number">0x8B</span>, <span class="number">0x8A</span>, <span class="number">0x4A</span>, <span class="number">0x4E</span>, <span class="number">0x8E</span>, <span class="number">0x8F</span>, <span class="number">0x4F</span>, <span class="number">0x8D</span>, <span class="number">0x4D</span>, <span class="number">0x4C</span>, <span class="number">0x8C</span>,</span><br><span class="line"> <span class="number">52</span>     <span class="number">0x44</span>, <span class="number">0x84</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0x87</span>, <span class="number">0x47</span>, <span class="number">0x46</span>, <span class="number">0x86</span>, <span class="number">0x82</span>, <span class="number">0x42</span>, <span class="number">0x43</span>, <span class="number">0x83</span>,</span><br><span class="line"> <span class="number">53</span>     <span class="number">0x41</span>, <span class="number">0x81</span>, <span class="number">0x80</span>, <span class="number">0x40</span></span><br><span class="line"> <span class="number">54</span> };</span><br><span class="line"> <span class="number">55</span> </span><br><span class="line"> <span class="number">56</span> <span class="function"><span class="keyword">uint16_t</span> <span class="title">CRC16</span><span class="params">( <span class="keyword">uint8_t</span> *Frame, <span class="keyword">uint16_t</span> Len )</span></span></span><br><span class="line"><span class="function"> 57 </span>{</span><br><span class="line"> <span class="number">58</span>     <span class="keyword">uint8_t</span>        ucCRCHi = <span class="number">0xFF</span>;</span><br><span class="line"> <span class="number">59</span>     <span class="keyword">uint8_t</span>        ucCRCLo = <span class="number">0xFF</span>;</span><br><span class="line"> <span class="number">60</span>     <span class="keyword">int</span>                iIndex;</span><br><span class="line"> <span class="number">61</span> </span><br><span class="line"> <span class="number">62</span>     <span class="keyword">while</span>( Len-- )</span><br><span class="line"> <span class="number">63</span>     {</span><br><span class="line"> <span class="number">64</span>         iIndex = ucCRCLo ^ *( Frame++ );</span><br><span class="line"> <span class="number">65</span>         ucCRCLo = ( <span class="keyword">uint8_t</span> )( ucCRCHi ^ CRCHi[iIndex] );</span><br><span class="line"> <span class="number">66</span>         ucCRCHi = CRCLo[iIndex];</span><br><span class="line"> <span class="number">67</span>     }</span><br><span class="line"> <span class="number">68</span>     <span class="keyword">return</span> ( <span class="keyword">uint16_t</span> )( ucCRCHi &lt;&lt; <span class="number">8</span> | ucCRCLo );</span><br><span class="line"> <span class="number">69</span> }</span><br><span class="line"> <span class="number">70</span> </span><br><span class="line"> <span class="number">93</span> </span><br><span class="line"> <span class="number">94</span> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span> </span>{</span><br><span class="line"> <span class="number">95</span>   <span class="keyword">char</span> a[] = {<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>, <span class="number">0x0d</span>};</span><br><span class="line"> <span class="number">96</span>   <span class="keyword">char</span>* temp = a;</span><br><span class="line"> <span class="number">97</span>   <span class="keyword">uint16_t</span> c = <span class="built_in">CRC16</span>((<span class="keyword">uint8_t</span> *)temp, <span class="number">4</span>);</span><br><span class="line"> <span class="number">98</span>   cout&lt;&lt; c &lt;&lt;endl;</span><br><span class="line"> <span class="number">99</span>   <span class="keyword">int</span> cL= c%<span class="number">256</span> &amp; <span class="number">0xff</span>;   <span class="comment">//校验结果的低位</span></span><br><span class="line"><span class="number">100</span>   <span class="keyword">int</span> cH = c/ <span class="number">256</span> &amp; <span class="number">0xff</span>; <span class="comment">//校验结果的高位</span></span><br><span class="line"><span class="number">101</span> }</span><br></pre></td></tr></tbody></table></figure><p>　　后续只需对得到的高低位数据进行强制类型转换就可以插入到命令字符串中发送了~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>The difference between join and detach</title>
      <link href="/2021/12/02/the-difference-between-join-and-detach/"/>
      <url>/2021/12/02/the-difference-between-join-and-detach/</url>
      
        <content type="html"><![CDATA[<p>A C++ <code>thread</code> object generally (but not always) represents a thread of execution, which is an OS or platform concept.</p><p>When <code>thread::join()</code> is called, the calling thread will block until the thread of execution has completed. Basically, this is one mechanism that can be used to know when a thread has finished. When <code>thread::join()</code> returns, the OS thread of execution has completed and the C++ <code>thread</code> object can be destroyed.</p><p>The <code>thread::detach()</code> is called, the thread of execution is “detached” from the <code>thread</code> object and is no longer represented by a <code>thread</code> object - they are two independent things. The C++ <code>thread</code> object can be destroyed and the OS thread of execution can continue on. If the program needs to know when that thread of execution has completed, some other mechanism needs to be used. <code>join()</code> cannot be called on that <code>thread</code> object any more, since it is no longer associated with a thread of execution.</p><p>It is considered an error to destroy a C++ <code>thread</code> object while it is still “joinable”. That is, in order to destroy a C++ <code>thread</code> object either <code>join()</code> needs to be called (and completed) or <code>detach()</code> must be called. If a C++ <code>thread</code> object is still joinable when it’s destroyed, an exception will be thrown.</p><p>Some other ways that a C++ <code>thread</code> object will not represent a thread of execution (ie., can be unjoinable):</p><ul><li>A default constructed <code>thread</code> object does not represent a thread of execution, so is not joinable.</li><li>A thread that has been moved from will no longer represent a thread of execution, so is not joinable.</li></ul><p><code>join()</code> doesn’t kill the thread. Actually it waits until thread main function returns. So if your thread main function looks like this:</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>join()</code> is going to wait forever.</p><p><code>detatch()</code> doesn’t kill thread either. Actually it tells <code>std::thread</code> that this thread should continue to run even when <code>std::thread</code> object is destroyed. C++ checks in std::thread destructor that thread is either joined or detached and terminates program if this check fails.</p><p>So if you uncomment first line in <code>main</code> function of the following code it will crash. If you uncomment second or third line it will work ok.</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>{</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fail1</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    <span class="comment">// will fail when we try to destroy t since it is not joined or detached</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">works1</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    t.<span class="built_in">join</span>();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">works2</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    t.<span class="built_in">detach</span>();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="comment">// fail1();</span></span><br><span class="line">    <span class="comment">// works1();</span></span><br><span class="line">    <span class="comment">// works2();</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QT文件操作-遍历</title>
      <link href="/2021/12/02/qt-wen-jian-cao-zuo-bian-li/"/>
      <url>/2021/12/02/qt-wen-jian-cao-zuo-bian-li/</url>
      
        <content type="html"><![CDATA[<p>QT的路径格式使用 / 或 \</p><p>读写文本</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span>     <span class="comment">//写文本</span></span><br><span class="line"> <span class="number">2</span>     <span class="function">QFile <span class="title">f</span><span class="params">(<span class="string">"F:/src/1.txt"</span>)</span></span>;</span><br><span class="line"> <span class="number">3</span>     <span class="keyword">if</span>(!f.<span class="built_in">open</span>(QIODevice::WriteOnly | QIODevice::Text))</span><br><span class="line"> <span class="number">4</span>     {</span><br><span class="line"> <span class="number">5</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"Open failed."</span> &lt;&lt; endl;</span><br><span class="line"> <span class="number">6</span>     }</span><br><span class="line"> <span class="number">7</span> </span><br><span class="line"> <span class="number">8</span>     <span class="function">QTextStream <span class="title">txtOutput</span><span class="params">(&amp;f)</span></span>;</span><br><span class="line"> <span class="number">9</span>     <span class="function">QString <span class="title">s1</span><span class="params">(<span class="string">"123"</span>)</span></span>;</span><br><span class="line"><span class="number">10</span>     <span class="function">quint32 <span class="title">n1</span><span class="params">(<span class="number">123</span>)</span></span>;</span><br><span class="line"><span class="number">11</span> </span><br><span class="line"><span class="number">12</span>     txtOutput &lt;&lt; s1 &lt;&lt; endl;</span><br><span class="line"><span class="number">13</span>     txtOutput &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line"><span class="number">14</span> </span><br><span class="line"><span class="number">15</span>     f.<span class="built_in">close</span>();</span><br><span class="line"><span class="number">16</span> </span><br><span class="line"><span class="number">17</span> </span><br><span class="line"><span class="number">18</span>    <span class="comment">//读文本</span></span><br><span class="line"><span class="number">19</span>     <span class="function">QFile <span class="title">f</span><span class="params">(<span class="string">"F:/src/1.txt"</span>)</span></span>;</span><br><span class="line"><span class="number">20</span>     <span class="keyword">if</span>(!f.<span class="built_in">open</span>(QIODevice::ReadOnly | QIODevice::Text))</span><br><span class="line"><span class="number">21</span>     {</span><br><span class="line"><span class="number">22</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"Open failed."</span> &lt;&lt; endl;</span><br><span class="line"><span class="number">23</span>     }</span><br><span class="line"><span class="number">24</span> </span><br><span class="line"><span class="number">25</span>     <span class="function">QTextStream <span class="title">txtInput</span><span class="params">(&amp;f)</span></span>;</span><br><span class="line"><span class="number">26</span>     QString lineStr;</span><br><span class="line"><span class="number">27</span>     <span class="keyword">while</span>(!txtInput.<span class="built_in">atEnd</span>())</span><br><span class="line"><span class="number">28</span>     {</span><br><span class="line"><span class="number">29</span>         lineStr = txtInput.<span class="built_in">readLine</span>();</span><br><span class="line"><span class="number">30</span>         <span class="built_in">qDebug</span>() &lt;&lt; lineStr &lt;&lt; endl;</span><br><span class="line"><span class="number">31</span>     }</span><br><span class="line"><span class="number">32</span> </span><br><span class="line"><span class="number">33</span>     f.<span class="built_in">close</span>();</span><br></pre></td></tr></tbody></table></figure><p>查找路径下所有特定文件（和文件夹）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="function"><span class="keyword">void</span> <span class="title">fllemanage::on_pushButton_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 2 </span>{</span><br><span class="line"> <span class="number">3</span>     <span class="comment">//    int count = 0;</span></span><br><span class="line"> <span class="number">4</span>     <span class="comment">//    QString dirpath = "C:/Users/00/Desktop/git clone/OpenCV-Python-Tutorial/.idea";</span></span><br><span class="line"> <span class="number">5</span>     <span class="comment">//    //设置要遍历的目录</span></span><br><span class="line"> <span class="number">6</span>     <span class="comment">//    QDir dir(dirpath);</span></span><br><span class="line"> <span class="number">7</span>     <span class="comment">//    qDebug()&lt;&lt;dirpath&lt;&lt;endl;</span></span><br><span class="line"> <span class="number">8</span>     <span class="comment">//    //设置文件过滤器</span></span><br><span class="line"> <span class="number">9</span>     <span class="comment">//    QStringList nameFilters;</span></span><br><span class="line"><span class="number">10</span>     <span class="comment">//    //设置文件过滤格式</span></span><br><span class="line"><span class="number">11</span>     <span class="comment">//    nameFilters &lt;&lt; "*.xml";</span></span><br><span class="line"><span class="number">12</span>     <span class="comment">//    dir.setNameFilters(nameFilters);</span></span><br><span class="line"><span class="number">13</span>     <span class="comment">//    qDebug()&lt;&lt;dir.entryList()&lt;&lt;endl;</span></span><br><span class="line"><span class="number">14</span>     <span class="comment">//    qDebug()&lt;&lt;dir.entryInfoList()&lt;&lt;endl;</span></span><br><span class="line"><span class="number">15</span>     <span class="comment">//    //将过滤后的文件名称存入到files列表中</span></span><br><span class="line"><span class="number">16</span>     <span class="comment">//    QStringList files = dir.entryList(nameFilters, QDir::Files|QDir::Readable, QDir::Name);</span></span><br><span class="line"><span class="number">17</span>     <span class="comment">//    for(int i = 0; i&lt;files.size(); i++)</span></span><br><span class="line"><span class="number">18</span>     <span class="comment">//    {</span></span><br><span class="line"><span class="number">19</span>     <span class="comment">//        qDebug()&lt;&lt;"now, it's output from QStringlist"&lt;&lt;endl;</span></span><br><span class="line"><span class="number">20</span>     <span class="comment">//        qDebug()&lt;&lt;files[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="number">21</span>     <span class="comment">//    }</span></span><br><span class="line"><span class="number">22</span> </span><br><span class="line"><span class="number">23</span>     QStringList list = <span class="built_in">findALLfiles</span>(<span class="string">"C:/Users/00/Desktop/vsrun/123"</span>);</span><br><span class="line"><span class="number">24</span>     <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="number">25</span>     <span class="comment">//for(int i = 0 ; i &lt;list.size(); i++)</span></span><br><span class="line"><span class="number">26</span>       <span class="comment">//qDebug() &lt;&lt;list[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="number">27</span>     QStringList purposelist;</span><br><span class="line"><span class="number">28</span>     purposelist = list.<span class="built_in">filter</span>(<span class="string">".txt"</span>);</span><br><span class="line"><span class="number">29</span>     <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="number">30</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="number">31</span>     {</span><br><span class="line"><span class="number">32</span>         <span class="built_in">qDebug</span>() &lt;&lt; purposelist[i] &lt;&lt; endl;</span><br><span class="line"><span class="number">33</span>         count++;</span><br><span class="line"><span class="number">34</span>     }</span><br><span class="line"><span class="number">35</span>     <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the max file has "</span> &lt;&lt; list.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="number">36</span>     <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the purpose file has "</span> &lt;&lt; count &lt;&lt; endl;</span><br><span class="line"><span class="number">37</span> </span><br><span class="line"><span class="number">38</span>     <span class="comment">//新建文件夹（目标文件保存的位置）</span></span><br><span class="line"><span class="number">39</span> <span class="comment">//     QDir dir("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="number">40</span> <span class="comment">//     if(!dir.exists("copy to here")){</span></span><br><span class="line"><span class="number">41</span> <span class="comment">//         dir.mkdir("copy to here");</span></span><br><span class="line"><span class="number">42</span> <span class="comment">//     }</span></span><br><span class="line"><span class="number">43</span>     QString toDir = <span class="string">"C:/Users/00/Desktop/123"</span>;</span><br><span class="line"><span class="number">44</span>     <span class="comment">//toDir.replace("\\","/");</span></span><br><span class="line"><span class="number">45</span> </span><br><span class="line"><span class="number">46</span>     <span class="function">QDir <span class="title">dir</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="number">47</span>     <span class="keyword">if</span> (!dir.<span class="built_in">exists</span>(toDir)) {</span><br><span class="line"><span class="number">48</span>         dir.<span class="built_in">mkdir</span>(toDir);</span><br><span class="line"><span class="number">49</span>     }</span><br><span class="line"><span class="number">50</span> </span><br><span class="line"><span class="number">51</span>     <span class="function">QFile <span class="title">destFile</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="number">52</span>     <span class="keyword">bool</span> success = <span class="literal">true</span>;</span><br><span class="line"><span class="number">53</span>     success &amp;= destFile.<span class="built_in">open</span>(QFile::WriteOnly | QFile::Truncate);</span><br><span class="line"><span class="number">54</span> </span><br><span class="line"><span class="number">55</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="number">56</span>     {</span><br><span class="line"><span class="number">57</span>         <span class="keyword">if</span> (QFile::<span class="built_in">copy</span>(purposelist[i], toDir)) {  <span class="comment">//将文件复制到新的文件路径下</span></span><br><span class="line"><span class="number">58</span>             {<span class="comment">//QFile::copy(purposelist[i],toDir);</span></span><br><span class="line"><span class="number">59</span>                 <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">QStringLiteral</span>(<span class="string">"复制成功"</span>);</span><br><span class="line"><span class="number">60</span>             }</span><br><span class="line"><span class="number">61</span>         }</span><br><span class="line"><span class="number">62</span>     }</span><br><span class="line"><span class="number">63</span> }</span><br><span class="line"><span class="number">64</span> </span><br><span class="line"><span class="number">65</span> <span class="comment">//迭代器遍历所有文件并返回</span></span><br><span class="line"><span class="number">66</span> <span class="function">QStringList <span class="title">fllemanage::findALLfiles</span><span class="params">(<span class="keyword">const</span> QString &amp;dir_path)</span> </span>{</span><br><span class="line"><span class="number">67</span>     QStringList get_files;</span><br><span class="line"><span class="number">68</span>     <span class="function">QDir <span class="title">dir</span><span class="params">(dir_path)</span></span>;</span><br><span class="line"><span class="number">69</span>     <span class="keyword">if</span> (!dir.<span class="built_in">exists</span>())</span><br><span class="line"><span class="number">70</span>     {</span><br><span class="line"><span class="number">71</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"it is not true dir_path"</span>;</span><br><span class="line"><span class="number">72</span>     }</span><br><span class="line"><span class="number">73</span> </span><br><span class="line"><span class="number">74</span>     <span class="comment">/*设置过滤参数，QDir::NoDotAndDotDot表示不会去遍历上层目录*/</span></span><br><span class="line"><span class="number">75</span>     <span class="function">QDirIterator <span class="title">dir_iterator</span><span class="params">(dir_path, QDir::Files | QDir::Dirs | QDir::NoDotAndDotDot, QDirIterator::Subdirectories)</span></span>;</span><br><span class="line"><span class="number">76</span> </span><br><span class="line"><span class="number">77</span>     <span class="keyword">while</span> (dir_iterator.<span class="built_in">hasNext</span>())</span><br><span class="line"><span class="number">78</span>     {</span><br><span class="line"><span class="number">79</span>         dir_iterator.<span class="built_in">next</span>();</span><br><span class="line"><span class="number">80</span>         QFileInfo file_info = dir_iterator.<span class="built_in">fileInfo</span>();</span><br><span class="line"><span class="number">81</span>         QString files = file_info.<span class="built_in">absoluteFilePath</span>();</span><br><span class="line"><span class="number">82</span>         get_files.<span class="built_in">append</span>(files);</span><br><span class="line"><span class="number">83</span>     }</span><br><span class="line"><span class="number">84</span> </span><br><span class="line"><span class="number">85</span>     <span class="keyword">return</span> get_files;</span><br><span class="line"><span class="number">86</span> }</span><br></pre></td></tr></tbody></table></figure><p>QFile copy（报错未实现 QIodevce not opened） </p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    copy测试！！！！！！</span></span><br><span class="line"><span class="comment">//    QFile src("F:/src");</span></span><br><span class="line"><span class="comment">//    QFile dst("F:/dst");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    bool success = true;</span></span><br><span class="line"><span class="comment">//    success &amp;= src.open( QFile::ReadOnly );</span></span><br><span class="line"><span class="comment">//    success &amp;= dst.open( QFile::WriteOnly | QFile::Truncate );</span></span><br><span class="line"><span class="comment">//    success &amp;= dst.write( src.readAll() ) &gt;= 0;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   QFile::copy("F:/src/1.txt" , "F:/dst");</span></span><br><span class="line"><span class="comment">//    src.close();</span></span><br><span class="line"><span class="comment">//    dst.close();</span></span><br></pre></td></tr></tbody></table></figure><p>更新：QFile copy 函数写法：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QFile::<span class="built_in">copy</span>(<span class="string">"F:/src/1.txt"</span> , <span class="string">"F:/dst/2.txt"</span>)；  <span class="comment">//（具体文件名 to 具体文件名）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">copy函数不能对string类型的路径进行操作，可从QString转string操作再转QString：</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> std::string pur = purposelist[i].<span class="built_in">toStdString</span>();<span class="comment">//都转换为string</span></span><br><span class="line"><span class="comment">// qDebug()&lt;&lt;pur&lt;&lt;endl;</span></span><br><span class="line"> std::string sdir = toDir.<span class="built_in">toStdString</span>();</span><br><span class="line"> <span class="keyword">int</span> pos = pur.<span class="built_in">find_last_of</span>(<span class="string">'/'</span>); <span class="comment">//找到最后/</span></span><br><span class="line"> <span class="function">std::string <span class="title">s</span><span class="params">(pur.substr(pos+<span class="number">1</span>))</span></span>;</span><br><span class="line"> sdir.<span class="built_in">append</span>(<span class="string">"/"</span>);</span><br><span class="line"> sdir.<span class="built_in">append</span>(s);</span><br><span class="line"> QString qsdir = <span class="built_in">QString</span>(QString::<span class="built_in">fromLocal8Bit</span>(sdir.<span class="built_in">c_str</span>()));</span><br><span class="line"> <span class="built_in">qDebug</span>()&lt;&lt;qsdir&lt;&lt;endl;</span><br><span class="line"> </span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>备份程序-遍历</title>
      <link href="/2021/12/02/bei-fen-cheng-xu-bian-li/"/>
      <url>/2021/12/02/bei-fen-cheng-xu-bian-li/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"fllemanage.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_fllemanage.h"</span></span></span><br><span class="line"></span><br><span class="line">fllemanage::<span class="built_in">fllemanage</span>(QWidget *parent)</span><br><span class="line">: <span class="built_in">QWidget</span>(parent)</span><br><span class="line">, <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::fllemanage)</span><br><span class="line">{</span><br><span class="line">ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//copy测试！！！！！！</span></span><br><span class="line"><span class="comment">//        QFile src("F:/src");</span></span><br><span class="line"><span class="comment">//        QFile dst("F:/dst");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        bool success = true;</span></span><br><span class="line"><span class="comment">//        success &amp;= src.open( QFile::ReadOnly );</span></span><br><span class="line"><span class="comment">//        success &amp;= dst.open( QFile::WriteOnly | QFile::Truncate );</span></span><br><span class="line"><span class="comment">//        success &amp;= dst.write( src.readAll() ) &gt;= 0;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//       QFile::copy("F:/src/1.txt" , "F:/dst/2.txt");</span></span><br><span class="line"><span class="comment">//        src.close();</span></span><br><span class="line"><span class="comment">//        dst.close();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    //写文本</span></span><br><span class="line"><span class="comment">//    QFile f("F:/src/1.txt");</span></span><br><span class="line"><span class="comment">//    if(!f.open(QIODevice::WriteOnly | QIODevice::Text))</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; "Open failed." &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    QTextStream txtOutput(&amp;f);</span></span><br><span class="line"><span class="comment">//    QString s1("123");</span></span><br><span class="line"><span class="comment">//    quint32 n1(123);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    txtOutput &lt;&lt; s1 &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    txtOutput &lt;&lt; n1 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    f.close();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   //读文本</span></span><br><span class="line"><span class="comment">//    QFile f("F:/src/1.txt");</span></span><br><span class="line"><span class="comment">//    if(!f.open(QIODevice::ReadOnly | QIODevice::Text))</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; "Open failed." &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    QTextStream txtInput(&amp;f);</span></span><br><span class="line"><span class="comment">//    QString lineStr;</span></span><br><span class="line"><span class="comment">//    while(!txtInput.atEnd())</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        lineStr = txtInput.readLine();</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; lineStr &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    f.close();</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">fllemanage::~<span class="built_in">fllemanage</span>()</span><br><span class="line">{</span><br><span class="line"><span class="keyword">delete</span> ui;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fllemanage::on_pushButton_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//    int count = 0;</span></span><br><span class="line"><span class="comment">//    QString dirpath = "C:/Users/00/Desktop/git clone/OpenCV-Python-Tutorial/.idea";</span></span><br><span class="line"><span class="comment">//    //设置要遍历的目录</span></span><br><span class="line"><span class="comment">//    QDir dir(dirpath);</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dirpath&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    //设置文件过滤器</span></span><br><span class="line"><span class="comment">//    QStringList nameFilters;</span></span><br><span class="line"><span class="comment">//    //设置文件过滤格式</span></span><br><span class="line"><span class="comment">//    nameFilters &lt;&lt; "*.xml";</span></span><br><span class="line"><span class="comment">//    dir.setNameFilters(nameFilters);</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dir.entryList()&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dir.entryInfoList()&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    //将过滤后的文件名称存入到files列表中</span></span><br><span class="line"><span class="comment">//    QStringList files = dir.entryList(nameFilters, QDir::Files|QDir::Readable, QDir::Name);</span></span><br><span class="line"><span class="comment">//    for(int i = 0; i&lt;files.size(); i++)</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug()&lt;&lt;"now, it's output from QStringlist"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//        qDebug()&lt;&lt;files[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun/123");</span></span><br><span class="line">    <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line">    QStringList list = <span class="built_in">findALLfiles</span>(<span class="string">"C:/Users/00/Desktop/git clone"</span>);</span><br><span class="line">                                                                        <span class="comment">//for(int i = 0 ; i &lt;list.size(); i++)</span></span><br><span class="line">  <span class="comment">//qDebug() &lt;&lt;list[i]&lt;&lt;endl;</span></span><br><span class="line">QStringList purposelist;</span><br><span class="line">    purposelist = list.<span class="built_in">filter</span>(<span class="string">".jpg"</span>);</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; purposelist[i] &lt;&lt; endl;</span><br><span class="line">count++;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the max file has "</span> &lt;&lt; list.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the purpose file has "</span> &lt;&lt; count &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//新建文件夹（目标文件保存的位置）</span></span><br><span class="line"><span class="comment">//     QDir dir("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="comment">//     if(!dir.exists("copy to here")){</span></span><br><span class="line"><span class="comment">//         dir.mkdir("copy to here");</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line">    QString toDir = <span class="string">"C:/Users/00/Desktop/123"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//toDir.replace("\\","/");</span></span><br><span class="line"></span><br><span class="line"><span class="function">QDir <span class="title">dir</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!dir.<span class="built_in">exists</span>(toDir)) {</span><br><span class="line">dir.<span class="built_in">mkdir</span>(toDir);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">QFile <span class="title">destFile</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="keyword">bool</span> success = <span class="literal">true</span>;</span><br><span class="line">success &amp;= destFile.<span class="built_in">open</span>(QFile::WriteOnly | QFile::Truncate);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">    {</span><br><span class="line">        std::string pur = purposelist[i].<span class="built_in">toStdString</span>();<span class="comment">//都转换为string</span></span><br><span class="line">       <span class="comment">// qDebug()&lt;&lt;pur&lt;&lt;endl;</span></span><br><span class="line">        std::string sdir = toDir.<span class="built_in">toStdString</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> pos = pur.<span class="built_in">find_last_of</span>(<span class="string">'/'</span>); <span class="comment">//找到最后/</span></span><br><span class="line">        <span class="function">std::string <span class="title">s</span><span class="params">(pur.substr(pos+<span class="number">1</span>))</span></span>;</span><br><span class="line">        sdir.<span class="built_in">append</span>(<span class="string">"/"</span>);</span><br><span class="line"></span><br><span class="line">        sdir.<span class="built_in">append</span>(s);</span><br><span class="line">        QString qsdir = <span class="built_in">QString</span>(QString::<span class="built_in">fromLocal8Bit</span>(sdir.<span class="built_in">c_str</span>()));</span><br><span class="line">        <span class="built_in">qDebug</span>()&lt;&lt;qsdir&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">if</span> (QFile::<span class="built_in">copy</span>(purposelist[i], qsdir)) {  <span class="comment">//将文件复制到新的文件路径下</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(QFile::<span class="built_in">copy</span>(purposelist[i],toDir))</span><br><span class="line">                 <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">QStringLiteral</span>(<span class="string">"复制成功"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//迭代器遍历所有文件并返回</span></span><br><span class="line"><span class="function">QStringList <span class="title">fllemanage::findALLfiles</span><span class="params">(<span class="keyword">const</span> QString &amp;dir_path)</span> </span>{</span><br><span class="line">QStringList get_files;</span><br><span class="line"><span class="function">QDir <span class="title">dir</span><span class="params">(dir_path)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!dir.<span class="built_in">exists</span>())</span><br><span class="line">{</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"it is not true dir_path"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设置过滤参数，QDir::NoDotAndDotDot表示不会去遍历上层目录*/</span></span><br><span class="line"><span class="function">QDirIterator <span class="title">dir_iterator</span><span class="params">(dir_path, QDir::Files | QDir::Dirs | QDir::NoDotAndDotDot, QDirIterator::Subdirectories)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (dir_iterator.<span class="built_in">hasNext</span>())</span><br><span class="line">{</span><br><span class="line">dir_iterator.<span class="built_in">next</span>();</span><br><span class="line">QFileInfo file_info = dir_iterator.<span class="built_in">fileInfo</span>();</span><br><span class="line">QString files = file_info.<span class="built_in">absoluteFilePath</span>();</span><br><span class="line">get_files.<span class="built_in">append</span>(files);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> get_files;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>垃圾文件助手</title>
      <link href="/2021/12/02/la-ji-wen-jian-zhu-shou/"/>
      <url>/2021/12/02/la-ji-wen-jian-zhu-shou/</url>
      
        <content type="html"><![CDATA[<p>没看程序，白天搞的雕刻机（呕~~）</p><p>强行凑每日一篇，上传一个自己写的拉吉文件助手</p><p>可以实现目标文件下的文件名搜寻，并进行删除和复制整理到新文件夹（拉吉如我）</p><p>博客园竟然还有文件上传限制。。。github链接：<a href="https://github.com/qianxunslimg/QFileManage">https://github.com/qianxunslimg/QFileManage</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ui文件和Qt代码的关系(转载自大神Mike江)</title>
      <link href="/2021/12/02/ui-wen-jian-he-qt-dai-ma-de-guan-xi-zhuan-zai-zi-da-shen-mike-jiang/"/>
      <url>/2021/12/02/ui-wen-jian-he-qt-dai-ma-de-guan-xi-zhuan-zai-zi-da-shen-mike-jiang/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/tennysonsky/article/details/48030333">https://blog.csdn.net/tennysonsky/article/details/48030333</a></p><p>如果现有类与新建ui文件的话。除了修改上述地方外，还要修改UI编译产生的头文件，</p><p>修改方法参照Widget自动生成的ui_***.h</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vs程序 copy 到Qt的若干错误</title>
      <link href="/2021/12/02/vs-cheng-xu-copy-dao-qt-de-ruo-gan-cuo-wu/"/>
      <url>/2021/12/02/vs-cheng-xu-copy-dao-qt-de-ruo-gan-cuo-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="vs程序-copy-到Qt的若干错误"><a href="#vs程序-copy-到Qt的若干错误" class="headerlink" title="vs程序 copy 到Qt的若干错误"></a><a href="https://www.cnblogs.com/qianxunslimg/p/14347565.html">vs程序 copy 到Qt的若干错误</a></h1><p>就nm菜的离谱，，菜归菜，还是学到一些东西</p><p>\1. 首先是windows.h在qt下的使用  LIBS +=User32.LIB</p><p>\2. 离谱的 dependent error .h does not exist  </p><p>　　看网上说的是.pro文件存在缓存？解决方案：瞎jb乱摁</p><p>　　通过一下步骤乱搞： （1）ctrl A ctrlX .pro文件，编译，ctrl v编译</p><p>　　　　　　　　　　　（2）删除相关头文件及代码的使用，重新添加并编译（傻逼操作）</p><p>\3. 无法解析的外部符号 __imp_DeleteObject 等等， 解决方法</p><p>　　#pragma comment(lib, “Gdi32.lib”)</p><p>\4. Cmd命令无法进行直接调用  system(“start C:\Users\00\Desktop\发票\1.24-\思巴克72.ofd”);</p><p>   解决方法：使用QProcess运行cmd命令  <a href="https://blog.csdn.net/vample/article/details/78872587">https://blog.csdn.net/vample/article/details/78872587</a></p><p>　　啊呸，直接打开文件搞什么逼逼赖赖</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QString fileName = <span class="string">"C:\\Users\\00\\Desktop\\发票\\1.24-\\思巴克72.ofd"</span>;</span><br><span class="line"><span class="function">QFile <span class="title">file</span><span class="params">(fileName)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(file.<span class="built_in">exists</span>()){</span><br><span class="line">    QDesktopServices::<span class="built_in">openUrl</span>(QUrl::<span class="built_in">fromLocalFile</span>(fileName));</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>　　</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Qt Windows.h 后台按键监测</title>
      <link href="/2021/12/02/qt-windows-h-hou-tai-an-jian-jian-ce/"/>
      <url>/2021/12/02/qt-windows-h-hou-tai-an-jian-jian-ce/</url>
      
        <content type="html"><![CDATA[<p>首先 pro：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">LIBS +=User32.LIB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main.cpp：</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"hooktest.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_hooktest.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">LRESULT CALLBACK <span class="built_in">keyProc</span>(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam);</span><br><span class="line"></span><br><span class="line">HHOOK keyHook=<span class="literal">NULL</span>;</span><br><span class="line">WPARAM lastkey=<span class="number">0</span>;</span><br><span class="line">QString lastStr;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">starthook</span><span class="params">()</span></span>;</span><br><span class="line">HookTest::<span class="built_in">HookTest</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::HookTest)</span><br><span class="line">{</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">        keyHook = <span class="built_in">SetWindowsHookEx</span>(WH_KEYBOARD_LL, keyProc, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        MSG msg = { <span class="number">0</span> };</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>)) {  <span class="comment">//WM_QUIT消息 退出</span></span><br><span class="line">        <span class="comment">//将虚拟键消息转换为字符消息,虚拟键值                `</span></span><br><span class="line">        <span class="comment">//VK_UP,VK_DOWN</span></span><br><span class="line">        <span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line">        <span class="comment">//将消息分发给窗口处理函数</span></span><br><span class="line">        <span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">        }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">HookTest::~<span class="built_in">HookTest</span>()</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">keyProc</span><span class="params">(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span>{</span><br><span class="line">    PKBDLLHOOKSTRUCT key = (PKBDLLHOOKSTRUCT)lParam;</span><br><span class="line">    <span class="built_in">qDebug</span>()&lt;&lt;key-&gt;vkCode&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CallNextHookEx</span>(keyHook, nCode, wParam, lParam);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows API关闭exe</title>
      <link href="/2021/12/02/windows-api-guan-bi-exe/"/>
      <url>/2021/12/02/windows-api-guan-bi-exe/</url>
      
        <content type="html"><![CDATA[<h1 id="windows-API关闭exe"><a href="#windows-API关闭exe" class="headerlink" title="windows API关闭exe"></a><a href="https://www.cnblogs.com/qianxunslimg/p/14351941.html">windows API关闭exe</a></h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Tlhelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winnt.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">terminateSuwellReader</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    HANDLE hSnapShot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS,<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//现在我们获得了所有进程的信息。</span></span><br><span class="line">    <span class="comment">//将从hSnapShot中抽取数据到一个PROCESSENTRY32结构中</span></span><br><span class="line">    <span class="comment">//这个结构代表了一个进程，是ToolHelp32 API的一部分。</span></span><br><span class="line">    <span class="comment">//抽取数据靠Process32First()和Process32Next()这两个函数。</span></span><br><span class="line">    <span class="comment">//这里我们仅用Process32Next()，他的原形是：</span></span><br><span class="line">    <span class="comment">//BOOL WINAPI Process32Next(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);</span></span><br><span class="line">    <span class="comment">//我们程序的代码中加入：</span></span><br><span class="line">    PROCESSENTRY32* processInfo=<span class="keyword">new</span> PROCESSENTRY32;</span><br><span class="line">    <span class="comment">// 必须设置PROCESSENTRY32的dwSize成员的值 ;</span></span><br><span class="line">    processInfo-&gt;dwSize=<span class="built_in"><span class="keyword">sizeof</span></span>(PROCESSENTRY32);</span><br><span class="line">    <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//这里我们将快照句柄和PROCESSENTRY32结构传给Process32Next()。</span></span><br><span class="line">    <span class="comment">//执行之后，PROCESSENTRY32 结构将获得进程的信息。我们循环遍历，直到函数返回FALSE。</span></span><br><span class="line">    <span class="keyword">int</span> ID = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">Process32Next</span>(hSnapShot,processInfo)!=FALSE)</span><br><span class="line">    {</span><br><span class="line">        index++;</span><br><span class="line">        <span class="keyword">int</span> size=<span class="built_in">WideCharToMultiByte</span>(CP_ACP,<span class="number">0</span>,processInfo-&gt;szExeFile,<span class="number">-1</span>,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">char</span> *ch=<span class="keyword">new</span> <span class="keyword">char</span>[size+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">WideCharToMultiByte</span>(CP_ACP,<span class="number">0</span>,processInfo-&gt;szExeFile,<span class="number">-1</span>,ch,size,<span class="literal">NULL</span>,<span class="literal">NULL</span>))</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//使用这段代码的时候只需要改变"cmd.exe".将其改成你要结束的进程名就可以了。</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strstr</span>(ch,str))</span><br><span class="line">            {</span><br><span class="line">                ID = processInfo-&gt;th32ProcessID;</span><br><span class="line">                HANDLE hProcess;</span><br><span class="line">                <span class="comment">// 现在我们用函数 TerminateProcess()终止进程，这里我们用PROCESS_ALL_ACCESS</span></span><br><span class="line">                hProcess=<span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS,TRUE,ID);</span><br><span class="line">                <span class="built_in">TerminateProcess</span>(hProcess,<span class="number">0</span>);</span><br><span class="line">                <span class="built_in">CloseHandle</span>(hProcess);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hSnapShot);</span><br><span class="line">    <span class="keyword">delete</span> processInfo;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="built_in">terminateSuwellReader</span>(<span class="string">"SuwellReader.exe"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>　　</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vector clear() 方法 内存释放问题</title>
      <link href="/2021/12/02/vector-clear-fang-fa-nei-cun-shi-fang-wen-ti/"/>
      <url>/2021/12/02/vector-clear-fang-fa-nei-cun-shi-fang-wen-ti/</url>
      
        <content type="html"><![CDATA[<div class="com-markdown-collpase-main"><div class="rno-markdown J-articleContent"><pre class="prism-token token  language-javascript">自己查到的三处说法的对比：</pre><pre class="prism-token token  language-javascript">一、转自知道的答案：https<span class="token operator">:<span class="token operator">/<span class="token operator">/zhidao<span class="token punctuation">.baidu<span class="token punctuation">.com<span class="token operator">/question<span class="token operator">/<span class="token number">323662520.html<span class="token operator">?qq<span class="token operator">-pf<span class="token operator">-to<span class="token operator">=pcqq<span class="token punctuation">.c2c#</span></span></span></span></span></span></span></span></span></span></span></span></span></pre><pre class="prism-token token  language-javascript"><span class="token function">vector，clear<span class="token punctuation">(<span class="token punctuation">)<span class="token function">并不真正释放内存<span class="token punctuation">(这是为优化效率所做的事<span class="token punctuation">)<span class="token function">，clear实际所做的是为vector中所保存的所有对象调用析构函数<span class="token punctuation">(如果有的话<span class="token punctuation">)<span class="token punctuation">,然后初始化size这些东西，让觉得把所有的对象清除了。　　真正释放内存是在vector的析构函数里进行的，所以一旦超出vector的作用域（如函数返回<span class="token punctuation">)，首先它所保存的所有对象会被析构，然后会调用allocator中的deallocate函数回收对象本身的内存。　　所以，某些编译器clear后还能访问到对象数据（因为它根本没清除），在一些比较新的<span class="token constant">C<span class="token operator">++<span class="token function">编译器上<span class="token punctuation">(例如<span class="token constant">VS2008<span class="token punctuation">)<span class="token function">，当进行数组引用时<span class="token punctuation">(例如a<span class="token punctuation">[<span class="token number">2<span class="token punctuation">]这种用法<span class="token punctuation">)<span class="token punctuation">,<span class="token constant">STL库中会有一些check函数根据当前容器的size值来判断下标引用是否超出范围，如果超出，则会执行这样一句：　　<span class="token function">_THROW<span class="token punctuation">(out_of_range<span class="token punctuation">, <span class="token string">"invalid vector&lt;T&gt; subscript"<span class="token punctuation">)<span class="token punctuation">;　　即抛出一个越界异常，clear后没有捕获异常，程序在新编译器编译后就会崩溃掉。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><pre class="prism-token token  language-javascript"><span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">-分割线<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>二、转自博客：<a href="https://www.cnblogs.com/summerRQ/articles/2407974.html">https://www.cnblogs.com/summerRQ/articles/2407974.html</a></p><p>vector ： C++ STL中的顺序容器，封装数组</p><ol><li>vector容器的内存自增长&amp;nbsp;</li></ol><p>与其他容器不同，其内存空间只会增长，不会减小。先来看看”C++ Primer”中怎么说：为了支持快速的随机访问，vector容器的元素以连续方式存放，每一个元素都紧挨着前一个元素存储。设想一下，当vector添加一个元素时，为了满足连续存放这个特性，都需要重新分配空间、拷贝元素、撤销旧空间，这样性能难以接受。因此STL实现者在对vector进行内存分配时，其实际分配的容量要比当前所需的空间多一些。就是说，vector容器预留了一些额外的存储区，用于存放新添加的元素，这样就不必为每个新元素重新分配整个容器的内存空间。</p><p>关于vector的内存空间，有两个函数需要注意：size()成员指当前拥有的元素个数；capacity()成员指当前(容器必须分配新存储空间之前)可以存储的元素个数。reserve()成员可以用来控制容器的预留空间。vector另外一个特性在于它的内存空间会自增长，每当vector容器不得不分配新的存储空间时，会以加倍当前容量的分配策略实现重新分配。例如，当前capacity为50，当添加第51个元素时，预留空间不够用了，vector容器会重新分配大小为100的内存空间，作为新连续存储的位置。</p><p>2.&amp;nbsp;vector内存释放</p><p>由于vector的内存占用空间只增不减，比如你首先分配了10,000个字节，然后erase掉后面9,999个，留下一个有效元素，但是内存占用仍为10,000个。所有内存空间是在vector析构时候才能被系统回收。empty()用来检测容器是否为空的，clear()可以清空所有元素。但是即使clear()，vector所占用的内存空间依然如故，无法保证内存的回收。</p><p>如果需要空间动态缩小，可以考虑使用deque。如果非vector不可，可以用swap()来帮助你释放内存。具体方法如下：</p><pre class="prism-token token  language-javascript">vector<span class="token operator">&lt;int<span class="token operator">&gt; nums<span class="token punctuation">; nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">1<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">1<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">2<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">2<span class="token punctuation">)<span class="token punctuation">; vector<span class="token operator">&lt;int<span class="token operator">&gt;<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">(nums<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">//或者nums.swap(vector&lt;int&gt; ())</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>或者如下所示，使用一对大括号，意思一样的：</p><pre class="prism-token token  language-javascript"><span class="token comment">//加一对大括号是可以让tmp退出{}的时候自动析构<span class="token punctuation">{     std<span class="token operator">:<span class="token operator">:vector<span class="token operator">&lt;int<span class="token operator">&gt; tmp <span class="token operator">=   nums<span class="token punctuation">;      nums<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">(tmp<span class="token punctuation">)<span class="token punctuation">; <span class="token punctuation">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>&amp;nbsp;swap()是交换函数，使vector离开其自身的作用域，从而强制释放vector所占的内存空间，总而言之，释放vector内存最简单的方法是vector&lt;int&gt;.swap(nums)。当时如果nums是一个类的成员，不能把vector&lt;int&gt;.swap(nums)写进类的析构函数中，否则会导致double free or corruption (fasttop)的错误，原因可能是重复释放内存。标准解决方法如下：</p><pre class="prism-token token  language-javascript">template <span class="token operator">&lt; <span class="token keyword">class <span class="token class-name">T <span class="token operator">&gt;<span class="token keyword">void <span class="token function">ClearVector<span class="token punctuation">( <span class="token parameter">vector<span class="token operator">&lt; <span class="token constant">T <span class="token operator">&gt;<span class="token operator">&amp; vt <span class="token punctuation">) <span class="token punctuation">{    vector<span class="token operator">&lt; <span class="token constant">T <span class="token operator">&gt; vtTemp<span class="token punctuation">;     veTemp<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">( vt <span class="token punctuation">)<span class="token punctuation">;<span class="token punctuation">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><ol start="3"><li>利用vector释放指针</li></ol><p>如果vector中存放的是指针，那么当vector销毁时，这些指针指向的对象不会被销毁，那么内存就不会被释放。如下面这种情况，vector中的元素时由new操作动态申请出来的对象指针：</p><pre class="prism-token token  language-javascript">#include <span class="token operator">&lt;vector<span class="token operator">&gt; using namespace std<span class="token punctuation">; vector<span class="token operator">&lt;<span class="token keyword">void <span class="token operator">*<span class="token operator">&gt; v<span class="token punctuation">;</span></span></span></span></span></span></span></span></pre><p>每次new之后调用v.push_back()该指针，在程序退出或者根据需要，用以下代码进行内存的释放：&amp;nbsp;</p><pre class="prism-token token  language-javascript"><span class="token keyword">for <span class="token punctuation">(vector<span class="token operator">&lt;<span class="token keyword">void <span class="token operator">*<span class="token operator">&gt;<span class="token operator">:<span class="token operator">:iterator it <span class="token operator">= v<span class="token punctuation">.<span class="token function">begin<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">; it <span class="token operator">!= v<span class="token punctuation">.<span class="token function">end<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">; it <span class="token operator">++<span class="token punctuation">)     <span class="token keyword">if <span class="token punctuation">(<span class="token constant">NULL <span class="token operator">!= <span class="token operator">*it<span class="token punctuation">)     <span class="token punctuation">{        <span class="token keyword">delete <span class="token operator">*it<span class="token punctuation">;         <span class="token operator">*it <span class="token operator">= <span class="token constant">NULL<span class="token punctuation">;    <span class="token punctuation">}v<span class="token punctuation">.<span class="token function">clear<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>三、转自博客：<a href="https://blog.csdn.net/hk_john/article/details/72463318">https://blog.csdn.net/hk_john/article/details/72463318</a></p><p>最近经常用到vector容器，发现它的clear（）函数有点意思，经过验证之后进行一下总结。</p><p>clear（）函数的调用方式是，vector&lt;datatype&gt; temp（50）;//定义了50个datatype大小的空间。temp.clear();</p><p>作用：将会清空temp中的所有元素，包括temp开辟的空间（size），但是capacity会保留，即不可以以temp[1]这种形式赋初值，只能通过temp.push_back(value)的形式赋初值。</p><p>同样对于vector&lt;vector&lt;datatype&gt; &gt; temp1（50）这种类型的变量，使用temp1.clear()之后将会不能用temp1[1].push_back(value)进行赋初值，只能使用temp1.push_back(temp)；的形式。</p><p>下面的代码是可以运行的。</p><pre class="prism-token token  language-javascript"></pre><ol><li>#include &lt;iostream&gt;</li><li>#include&lt;vector&gt;<br>3.4.  using namespace std;<br>5.6.  int main(){<br>7.8.  vector&lt;vector&lt;int&gt;&gt; test(50);</li><li>vector&lt;int&gt; temp;</li><li>test[10].push_back(1);</li><li>cout&lt;&lt;test[10][0]&lt;&lt;endl;</li><li>test.clear();<br>13.14.15.  for(int i=0;i&lt;51;i++)</li><li>test.push_back(temp);<br>17.18.  system(“pause”);</li><li>return 0;</li><li>}</li></ol><p>但是这样是会越界错误的。</p><pre class="prism-token token  language-javascript"></pre><ol><li>#include &lt;iostream&gt;</li><li>#include&lt;vector&gt;<br>3.4.  using namespace std;<br>5.6.  int main(){<br>7.8.  vector&lt;vector&lt;int&gt;&gt; test(50);</li><li>vector&lt;int&gt; temp;</li><li>test[10].push_back(1);</li><li>cout&lt;&lt;test[10][0]&lt;&lt;endl;</li><li>test.clear();<br>13.14.  for(int i=0;i&lt;50;i++)</li><li>test[i].push_back(1);<br>16.17.  system(“pause”);</li><li>return 0;</li><li>}</li></ol><p>并且即使我们使用</p><pre class="prism-token token  language-javascript"></pre><ol><li>for(int i=0;i&lt;100;i++)</li><li>test[i].push_back(1);</li></ol><p>都是可以的，因为size已经被清除了。</p></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c++ 自然排序-window文件排序</title>
      <link href="/2021/12/02/c-zi-ran-pai-xu-window-wen-jian-pai-xu/"/>
      <url>/2021/12/02/c-zi-ran-pai-xu-window-wen-jian-pai-xu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自然排序</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compareNat</span><span class="params">(<span class="keyword">const</span> std::string &amp;a, <span class="keyword">const</span> std::string &amp;b)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (a.<span class="built_in">empty</span>())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (b.<span class="built_in">empty</span>())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; !std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (!std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (!std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; !std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>])) {</span><br><span class="line">    <span class="keyword">if</span> (std::<span class="built_in">toupper</span>(a[<span class="number">0</span>]) == std::<span class="built_in">toupper</span>(b[<span class="number">0</span>]))</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">compareNat</span>(a.<span class="built_in">substr</span>(<span class="number">1</span>), b.<span class="built_in">substr</span>(<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> (std::<span class="built_in">toupper</span>(a[<span class="number">0</span>]) &lt; std::<span class="built_in">toupper</span>(b[<span class="number">0</span>]));</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Both strings begin with digit --&gt; parse both numbers</span></span><br><span class="line">  <span class="function">std::istringstream <span class="title">issa</span><span class="params">(a)</span></span>;</span><br><span class="line">  <span class="function">std::istringstream <span class="title">issb</span><span class="params">(b)</span></span>;</span><br><span class="line">  <span class="keyword">int</span> ia, ib;</span><br><span class="line">  issa &gt;&gt; ia;</span><br><span class="line">  issb &gt;&gt; ib;</span><br><span class="line">  <span class="keyword">if</span> (ia != ib)</span><br><span class="line">    <span class="keyword">return</span> ia &lt; ib;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Numbers are the same --&gt; remove numbers and recurse</span></span><br><span class="line">  std::string anew, bnew;</span><br><span class="line">  std::<span class="built_in">getline</span>(issa, anew);</span><br><span class="line">  std::<span class="built_in">getline</span>(issb, bnew);</span><br><span class="line">  <span class="keyword">return</span> (<span class="built_in">compareNat</span>(anew, bnew));</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">const</span> pair&lt;string, string&gt; a, <span class="keyword">const</span> pair&lt;string, string&gt; b)</span> </span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">compareNat</span>(a.first, b.first);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最小堆make_heap(), pop_heap()和push_heap()</title>
      <link href="/2021/12/02/zui-xiao-dui-make-heap-pop-heap-he-push-heap/"/>
      <url>/2021/12/02/zui-xiao-dui-make-heap-pop-heap-he-push-heap/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20211114224004410-1010288954.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>make_heap<br>在容器范围内，就地建堆，保证最大值在所给范围的最前面，其他值的位置不确定</p><p>pop_heap<br>将堆顶(所给范围的最前面)元素移动到所给范围的最后，并且将新的最大值置于所给范围的最前面</p><p>push_heap<br>当已建堆的容器范围内有新的元素插入末尾后，应当调用push_heap将该元素插入堆中。</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> #include&lt;iostream&gt;<span style="color: #008080;"> 2</span> #include&lt;vector&gt;<span style="color: #008080;"> 3</span> #include&lt;ctime&gt;<span style="color: #008080;"> 4</span> #include&lt;deque&gt;<span style="color: #008080;"> 5</span> #include&lt;list&gt;<span style="color: #008080;"> 6</span> #include&lt;algorithm&gt;<span style="color: #008080;"> 7</span> #include&lt;queue&gt;<span style="color: #008080;"> 8</span> #include&lt;functional&gt;<span style="color: #008000;">//</span><span style="color: #008000;">greater使用</span><span style="color: #008080;"> 9</span>  <span style="color: #008080;">10</span> <span style="color: #0000ff;">using</span> <span style="color: #0000ff;">namespace</span><span style="color: #000000;"> std;</span><span style="color: #008080;">11</span>  <span style="color: #008080;">12</span> <span style="color: #0000ff;">void</span> print(vector&lt;<span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;"> a) {</span><span style="color: #008080;">13</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; a.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">14</span>         cout &lt;&lt; a[i] &lt;&lt; <span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">15</span> <span style="color: #000000;">    }</span><span style="color: #008080;">16</span>     cout &lt;&lt;<span style="color: #000000;"> endl;</span><span style="color: #008080;">17</span> <span style="color: #000000;">}</span><span style="color: #008080;">18</span>  <span style="color: #008080;">19</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> main() {</span><span style="color: #008080;">20</span>  <span style="color: #008080;">21</span>     <span style="color: #008000;">//</span><span style="color: #008000;">堆排序算法（heapsort）</span><span style="color: #008080;">22</span>     <span style="color: #008000;">//</span><span style="color: #008000;">make_heap();</span><span style="color: #008080;">23</span>     <span style="color: #008000;">//</span><span style="color: #008000;">push_heap()</span><span style="color: #008080;">24</span>     <span style="color: #008000;">//</span><span style="color: #008000;">sort_heap()</span><span style="color: #008080;">25</span>     <span style="color: #008000;">//</span><span style="color: #008000;">pop_heap()</span><span style="color: #008080;">26</span>     <span style="color: #008000;">//</span><span style="color: #008000;">堆就是一种特殊的二叉树，最关心的就是根</span><span style="color: #008080;">27</span>     <span style="color: #008000;">//</span><span style="color: #008000;">大根堆，小根堆</span><span style="color: #008080;">28</span>  <span style="color: #008080;">29</span>     vector&lt;<span style="color: #0000ff;">int</span>&gt; ivec{<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">8</span>,<span style="color: #800080;">9</span>,<span style="color: #800080;">1</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span><span style="color: #000000;">};</span><span style="color: #008080;">30</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">31</span>     <span style="color: #008000;">//</span><span style="color: #008000;">向量里所有的数据变成一个堆</span><span style="color: #008080;">32</span>  <span style="color: #008080;">33</span> <span style="color: #000000;">    make_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">34</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">35</span>  <span style="color: #008080;">36</span>     pop_heap(ivec.begin(), ivec.end());<span style="color: #008000;">//</span><span style="color: #008000;">最大的数据取走，但是并没s有删除</span><span style="color: #008080;">37</span>     <span style="color: #008000;">//</span><span style="color: #008000;">把最大的数据放在结尾，剩下的元素排成一个堆</span><span style="color: #008080;">38</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">39</span> <span style="color: #000000;">    ivec.pop_back();</span><span style="color: #008080;">40</span>     <span style="color: #008000;">//</span><span style="color: #008000;">push_heap 使用首先要先把数据加在向量里</span><span style="color: #008080;">41</span>  <span style="color: #008080;">42</span>     ivec.push_back(<span style="color: #800080;">17</span><span style="color: #000000;">);</span><span style="color: #008080;">43</span> <span style="color: #000000;">    make_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">44</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">45</span>  <span style="color: #008080;">46</span>     <span style="color: #008000;">//</span><span style="color: #008000;">sort_heap 把堆变成不是堆,普通的排序</span><span style="color: #008080;">47</span> <span style="color: #000000;">    sort_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">48</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">49</span>  <span style="color: #008080;">50</span>     system(<span style="color: #800000;">"</span><span style="color: #800000;">pause</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">51</span> }</pre></div><p><img src="https://img2020.cnblogs.com/blog/2092994/202111/2092994-20211114224224870-302527741.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合数 防溢出</title>
      <link href="/2021/12/02/zu-he-shu-fang-yi-chu/"/>
      <url>/2021/12/02/zu-he-shu-fang-yi-chu/</url>
      
        <content type="html"><![CDATA[<pre><span style="color: #008080;">1</span>  <span style="color: #008080;">2</span> <span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> C(<span style="color: #0000ff;">int</span> N, <span style="color: #0000ff;">int</span><span style="color: #000000;"> M) {</span><span style="color: #008080;">3</span>     <span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> sum = <span style="color: #800080;">1</span><span style="color: #000000;">;</span><span style="color: #008080;">4</span>     <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i=<span style="color: #800080;">1</span>;i&lt;=M; i++<span style="color: #000000;">) {</span><span style="color: #008080;">5</span>         sum=sum*(N-M+i)/<span style="color: #000000;">i;</span><span style="color: #008080;">6</span> <span style="color: #000000;">    }</span><span style="color: #008080;">7</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;"> sum;</span><span style="color: #008080;">8</span> }</pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vector&lt;pair&gt;或者有序map</title>
      <link href="/2021/12/02/vector-pair-huo-zhe-you-xu-map/"/>
      <url>/2021/12/02/vector-pair-huo-zhe-you-xu-map/</url>
      
        <content type="html"><![CDATA[<p>功能相同</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>   <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">bool</span> sortPair(pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt; a, pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;"> b) {</span><span style="color: #008080;"> 2</span>     <span style="color: #0000ff;">return</span> a.second &gt;<span style="color: #000000;"> b.second;</span><span style="color: #008080;"> 3</span> <span style="color: #000000;">  }</span><span style="color: #008080;"> 4</span>   vector&lt;<span style="color: #0000ff;">string</span>&gt; findRelativeRanks(vector&lt;<span style="color: #0000ff;">int</span>&gt; &amp;<span style="color: #000000;">score) {</span><span style="color: #008080;"> 5</span>     vector&lt;<span style="color: #0000ff;">string</span>&gt;<span style="color: #000000;"> res(score.size());</span><span style="color: #008080;"> 6</span> <span style="color: #008080;"> 7</span>     vector&lt;pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;&gt;<span style="color: #000000;"> pairr;</span><span style="color: #008080;"> 8</span> <span style="color: #008080;"> 9</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; score.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">10</span>       pairr.push_back(pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;">(i, score[i]));</span><span style="color: #008080;">11</span> <span style="color: #000000;">    }</span><span style="color: #008080;">12</span> <span style="color: #008080;">13</span> <span style="color: #000000;">    sort(pairr.begin(), pairr.end(), sortPair);</span><span style="color: #008080;">14</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; pairr.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">15</span>       <span style="color: #0000ff;">switch</span><span style="color: #000000;"> (i) {</span><span style="color: #008080;">16</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">0</span><span style="color: #000000;">:</span><span style="color: #008080;">17</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Gold Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">18</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">19</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">1</span><span style="color: #000000;">:</span><span style="color: #008080;">20</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Silver Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">21</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">22</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">2</span><span style="color: #000000;">:</span><span style="color: #008080;">23</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Bronze Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">24</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">25</span>       <span style="color: #0000ff;">default</span><span style="color: #000000;">:</span><span style="color: #008080;">26</span>         res[pairr[i].first] = to_string(i + <span style="color: #800080;">1</span><span style="color: #000000;">);</span><span style="color: #008080;">27</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">28</span> <span style="color: #000000;">      }</span><span style="color: #008080;">29</span> <span style="color: #000000;">    }</span><span style="color: #008080;">30</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;"> res;</span><span style="color: #008080;">31</span>   }</pre></div><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>     vector&lt;<span style="color: #0000ff;">string</span>&gt; findRelativeRanks(vector&lt;<span style="color: #0000ff;">int</span>&gt;&amp;<span style="color: #000000;"> score) {</span><span style="color: #008080;"> 2</span>         <span style="color: #0000ff;">int</span> n=<span style="color: #000000;">score.size();</span><span style="color: #008080;"> 3</span>         map&lt;<span style="color: #0000ff;">int</span>,<span style="color: #0000ff;">int</span>,greater&lt;<span style="color: #0000ff;">int</span>&gt;&gt;<span style="color: #000000;">num2index;</span><span style="color: #008080;"> 4</span>         <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i=<span style="color: #800080;">0</span>;i&lt;n;i++)num2index[score[i]]=<span style="color: #000000;">i;</span><span style="color: #008080;"> 5</span>         vector&lt;<span style="color: #0000ff;">string</span>&gt;<span style="color: #000000;">ans(n);</span><span style="color: #008080;"> 6</span>         <span style="color: #0000ff;">int</span> i=<span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;"> 7</span>         <span style="color: #0000ff;">for</span><span style="color: #000000;">(auto mPair:num2index){</span><span style="color: #008080;"> 8</span>             <span style="color: #0000ff;">int</span> index=<span style="color: #000000;">mPair.second;</span><span style="color: #008080;"> 9</span>             <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">0</span><span style="color: #000000;">){</span><span style="color: #008080;">10</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Gold Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">11</span>             }<span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">1</span><span style="color: #000000;">){</span><span style="color: #008080;">12</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Silver Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">13</span>             }<span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">2</span><span style="color: #000000;">){</span><span style="color: #008080;">14</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Bronze Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">15</span>             }<span style="color: #0000ff;">else</span> ans[index]+=to_string(i+<span style="color: #800080;">1</span><span style="color: #000000;">);</span><span style="color: #008080;">16</span>             i++<span style="color: #000000;">;</span><span style="color: #008080;">17</span> <span style="color: #000000;">        }</span><span style="color: #008080;">18</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> ans;</span><span style="color: #008080;">19</span>     }</pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1920. 基于排列构建数组</title>
      <link href="/2021/12/02/1920-ji-yu-pai-lie-gou-jian-shu-zu/"/>
      <url>/2021/12/02/1920-ji-yu-pai-lie-gou-jian-shu-zu/</url>
      
        <content type="html"><![CDATA[<p>原地修改</p><p>class Solution {<br>public:<br>    vector&lt;int&gt; buildArray(vector&lt;int&gt;&amp; nums) {<br>        int n = nums.size();<br>        // 第一次遍历编码最终值<br>        for (int i = 0; i &lt; n; ++i){<br>            nums[i] += 1000 * (nums[nums[i]] % 1000);<br>        }<br>        // 第二次遍历修改为最终值<br>        for (int i = 0; i &lt; n; ++i){<br>            nums[i] /= 1000;<br>        }<br>        return nums;<br>    }<br>};</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>priority_queue和tuple</title>
      <link href="/2021/12/02/priority-queue-tuple-he-lamda/"/>
      <url>/2021/12/02/priority-queue-tuple-he-lamda/</url>
      
        <content type="html"><![CDATA[<p>&amp;nbsp;</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20211115202419249-1916870940.png"></p><p>&amp;nbsp;</p><h1 id="1-顶堆"><a href="#1-顶堆" class="headerlink" title="1.顶堆"></a>1.顶堆</h1><p>&amp;nbsp;&amp;nbsp;C++11中，针对顺序容器(如vector、deque、list)，新标准引入了三个新成员：emplace_front、emplace和emplace_back，这些操作构造而不是拷贝元素。这些操作分别对应push_front、insert和push_back，允许我们将元素放置在容器头部、一个指定位置之前或容器尾部</p><p>priority_queue 默认从大到小排序， 从小到大：priority_queue&lt;<span class="hljs-type">int, vector&lt;<span class="hljs-type">int&gt;, greater&lt;<span class="hljs-type">int&gt; &gt; p;</span></span></span></p><p>pair举例<br>//默认是使用大根堆<br>priority_queue&lt;pair&lt;int,int&gt;&gt; pq0;<br>//小根堆，按照pair的first排，再按照second排序<br>priority_queue&lt;pair&lt;int,int&gt;,vector&lt;pair&lt;int,int&gt;&gt;,greater&lt;pair&lt;int,int&gt;&gt;&gt; pq1;<br>//大根堆<br>priority_queue&lt;pair&lt;int,int&gt;,vector&lt;pair&lt;int,int&gt;&gt;,less&lt;pair&lt;int,int&gt;&gt;&gt; pq2;</p><p>tuple举例<br>//默认是使用大根堆<br>priority_queue&lt;tuple&lt;int,int,int&gt;&gt; tp0;<br>//小根堆，按照tuple的0元素排，再按照1元素排，最后按2元素排<br>priority_queue&lt;tuple&lt;int,int,int&gt;,vector&lt;tuple&lt;int,int,int&gt;&gt;,greater&lt;tuple&lt;int,int,int&gt;&gt;&gt; tp1;<br>//大根堆<br>priority_queue&lt;tuple&lt;int,int,int&gt;,vector&lt;tuple&lt;int,int,int&gt;&gt;,less&lt;tuple&lt;int,int,int&gt;&gt;&gt; tp2;</p><h1 id="2-元组tuple"><a href="#2-元组tuple" class="headerlink" title="2.元组tuple"></a><span class="hljs-type"><span class="hljs-type"><span class="hljs-type">2.元组tuple</span></span></span></h1><p>tuple是一个固定大小的不同类型值的集合，是泛化的std::pair。我们也可以把他当做一个通用的结构体来用，不需要创建结构体又获取结构体的特征，在某些情况下可以取代结构体使程序更简洁，直观。std::tuple理论上可以有无数个任意类型的成员变量，而std::pair只能是2个成员，因此在需要保存3个及以上的数据时就需要使用tuple元组了。&amp;nbsp;</p><p>tuple获取指定位置的值:</p><p> auto d = get&lt;0&gt;(tmp);<br>      auto x = get&lt;1&gt;(tmp);<br>      auto y = get&lt;2&gt;(tmp);</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT打包程序</title>
      <link href="/2021/12/02/qt-da-bao-cheng-xu/"/>
      <url>/2021/12/02/qt-da-bao-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h2 id="1-发布release版本的QT程序"><a href="#1-发布release版本的QT程序" class="headerlink" title="1.发布release版本的QT程序"></a>1.发布release版本的QT程序</h2><p>　　在build release文件夹内找到exe文件，将其单独放在一个自建的空文件夹内</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165117303-604984762.png"></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165455009-910788885.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><h2 id="amp-nbsp-2-cd到含exe的空文件夹"><a href="#amp-nbsp-2-cd到含exe的空文件夹" class="headerlink" title="&amp;nbsp;2.cd到含exe的空文件夹"></a>&amp;nbsp;2.cd到含exe的空文件夹</h2><p>　　在QT命令行cd到含exe的空文件夹，cd /d E:\QDIR</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165604874-1233279110.png"><img src="https://img2020.cnblogs.com/blog/2092994/202009/2092994-20200927165951305-446477392.png"></p><h2 id="3-使用windeployqt-exe进行打包"><a href="#3-使用windeployqt-exe进行打包" class="headerlink" title="3.使用windeployqt.exe进行打包"></a>3.使用windeployqt.exe进行打包</h2><p>首先找到windeployqt.exe的路径&amp;nbsp;</p><p>&amp;nbsp;<img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170127591-1210427907.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>输入命令D:\QT\5.14.2\msvc2017_64\bin\windeployqt&amp;nbsp;QDIR.exe即完成了打包</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170421891-1644738339.png"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170550570-2063963822.png"></p><p>&amp;nbsp;</p><h2 id="amp-nbsp-附：打包前修改exe图标"><a href="#amp-nbsp-附：打包前修改exe图标" class="headerlink" title="&amp;nbsp;附：打包前修改exe图标"></a>&amp;nbsp;附：打包前修改exe图标</h2><h2 id="改变exe的图标"><a href="#改变exe的图标" class="headerlink" title="改变exe的图标"></a>改变exe的图标</h2><p>1、下载一个.ico格式的图标（如：bucket and shovel.ico），将bucket and shovel.ico复制到工程目录下。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927172502714-1388114573.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>2、工程目录下新建一个空白txt文档，文档内添加如下内容<br><code>IDI_ICON1 ICON DISCARDABLE "bucket and shovel.ico"</code><br>3、将文档后缀修改为.rc（如：bucke.rc, !!注意!!rc文件名不要含空格）&amp;nbsp;<br>4、在工程的pro文件添加如下内容<br><code>RC_FILE = bucket.rc</code><br>5、重新编译程序，即可发现生成的程序图标变成了bucket.ico</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927172701527-227417489.png"></p><p>&amp;nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QString截断（string截断）</title>
      <link href="/2021/12/02/qstring-jie-duan-string-jie-duan/"/>
      <url>/2021/12/02/qstring-jie-duan-string-jie-duan/</url>
      
        <content type="html"><![CDATA[<h2 id="最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法："><a href="#最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法：" class="headerlink" title="最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法："></a>最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法：</h2><h3 id="方法一：由于对QString没有深入了解，所以采用的QString–-gt-string–-gt-QString，代码如下："><a href="#方法一：由于对QString没有深入了解，所以采用的QString–-gt-string–-gt-QString，代码如下：" class="headerlink" title="方法一：由于对QString没有深入了解，所以采用的QString–>string–>QString，代码如下："></a>方法一：由于对QString没有深入了解，所以采用的QString–&gt;string–&gt;QString，代码如下：</h3><div class="cnblogs_code"><pre><span style="font-size: 18px;"><span style="color: #008080;"> 1</span>         std::<span style="color: #0000ff;">string</span> pur = purposelist[i].toStdString();<span style="color: #008000;">//</span><span style="color: #008000;">都转换为string</span><span style="color: #008080;"> 2</span>        <span style="color: #008000;">//</span><span style="color: #008000;"> qDebug()&lt;&lt;pur&lt;&lt;endl;</span><span style="color: #008080;"> 3</span>         std::<span style="color: #0000ff;">string</span> sdir =<span style="color: #000000;"> dstpath.toStdString();</span><span style="color: #008080;"> 4</span> <span style="color: #008080;"> 5</span>         <span style="color: #0000ff;">int</span> pos = pur.find_last_of(<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>); <span style="color: #008000;">//</span><span style="color: #008000;">找到最后/</span><span style="color: #008080;"> 6</span>         std::<span style="color: #0000ff;">string</span> s(pur.substr(pos + <span style="color: #800080;">1</span><span style="color: #000000;">));</span><span style="color: #008080;"> 7</span>         sdir.append(<span style="color: #800000;">"</span><span style="color: #800000;">/</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;"> 8</span> <span style="color: #008080;"> 9</span> <span style="color: #000000;">        sdir.append(s);</span><span style="color: #008080;">10</span>         QString qsdir =<span style="color: #000000;"> QString(QString::fromLocal8Bit(sdir.c_str()));</span><span style="color: #008080;">11</span>         qDebug() &lt;&lt; qsdir &lt;&lt; endl;</span></pre></div><h3 id="用这种方法出现的问题是，string中的中文字符转到QString会乱码…"><a href="#用这种方法出现的问题是，string中的中文字符转到QString会乱码…" class="headerlink" title="用这种方法出现的问题是，string中的中文字符转到QString会乱码…"></a>用这种方法出现的问题是，string中的中文字符转到QString会乱码…</h3><p>&amp;nbsp;</p><h3 id="方法二：QString直接进行截断拼接（吐了，我好蠢）"><a href="#方法二：QString直接进行截断拼接（吐了，我好蠢）" class="headerlink" title="方法二：QString直接进行截断拼接（吐了，我好蠢）"></a>方法二：QString直接进行截断拼接（吐了，我好蠢）</h3><div class="cnblogs_code"><pre><span style="font-size: 18px;"><span style="color: #008080;">1</span>     <span style="color: #008000;">//</span><span style="color: #008000;">QString截断学习</span><span style="color: #008080;">2</span>     QString src(<span style="color: #800000;">"</span><span style="color: #800000;">E:/qq接收文件/MobileFile/thumb/碎裂收据.jpg</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">3</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">original path: </span><span style="color: #800000;">"</span>&lt;&lt;src&lt;&lt;<span style="color: #000000;">endl;</span><span style="color: #008080;">4</span>     QString dir(<span style="color: #800000;">"</span><span style="color: #800000;">E:/目标文件夹</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">5</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">the last string '/' pos is </span><span style="color: #800000;">"</span>&lt;&lt;src.lastIndexOf(<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>)&lt;&lt;<span style="color: #000000;">endl;</span><span style="color: #008080;">6</span>     QString filename = src.right(src.size() - (src.lastIndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">/</span><span style="color: #800000;">"</span>)+<span style="color: #800080;">1</span><span style="color: #000000;">));</span><span style="color: #008080;">7</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">the true filename is </span><span style="color: #800000;">"</span>&lt;&lt;filename&lt;&lt;endl;</span></pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简单的滑动窗口 643. 子数组最大平均数 I</title>
      <link href="/2021/12/02/jian-dan-de-hua-dong-chuang-kou-643-zi-shu-zu-zui-da-ping-jun-shu-i/"/>
      <url>/2021/12/02/jian-dan-de-hua-dong-chuang-kou-643-zi-shu-zu-zui-da-ping-jun-shu-i/</url>
      
        <content type="html"><![CDATA[<p>给你一个由 n 个元素组成的整数数组 nums 和一个整数 k 。</p><p>请你找出平均数最大且 长度为 k 的连续子数组，并输出该最大平均数。</p><p>任何误差小于 10-5 的答案都将被视为正确答案。</p><p>&amp;nbsp;</p><p>示例 1：</p><p>输入：nums = [1,12,-5,-6,50,3], k = 4<br>输出：12.75<br>解释：最大平均数 (12-5-6+50)/4 = 51/4 = 12.75<br>示例 2：</p><p>输入：nums = [5], k = 1<br>输出：5.00000</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Solution {</span><span style="color: #008080;"> 2</span> <span style="color: #0000ff;">public</span><span style="color: #000000;">:</span><span style="color: #008080;"> 3</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> double findMaxAverage(vector&lt;int&gt;&amp; nums, int k) {</span><span style="color: #008080;"> 4</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double res = -10000.0;</span><span style="color: #008080;"> 5</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double sum = 0;</span><span style="color: #008080;"> 6</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double ave;</span><span style="color: #008080;"> 7</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     for(int i = 0; i&lt;=nums.size()-k; i++){</span><span style="color: #008080;"> 8</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         if( i == 0){</span><span style="color: #008080;"> 9</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             for(int j = 0; j&lt;k; j++){</span><span style="color: #008080;">10</span>     <span style="color: #008000;">//</span><span style="color: #008000;">                 sum+=nums[i+j];</span><span style="color: #008080;">11</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             }</span><span style="color: #008080;">12</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         }else{</span><span style="color: #008080;">13</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             sum-=nums[i-1];</span><span style="color: #008080;">14</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             sum+=nums[i+k-1];</span><span style="color: #008080;">15</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         }</span><span style="color: #008080;">16</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         ave = sum/k;</span><span style="color: #008080;">17</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         cout &lt;&lt;ave&lt;&lt;endl;</span><span style="color: #008080;">18</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         res = res&gt;ave?res:ave;</span><span style="color: #008080;">19</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     }</span><span style="color: #008080;">20</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     return res;</span><span style="color: #008080;">21</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> }</span><span style="color: #008080;">22</span>     <span style="color: #0000ff;">double</span> findMaxAverage(vector&lt;<span style="color: #0000ff;">int</span>&gt;&amp; nums, <span style="color: #0000ff;">int</span><span style="color: #000000;"> k) {</span><span style="color: #008080;">23</span>         <span style="color: #0000ff;">int</span> sum = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;">24</span>         <span style="color: #0000ff;">int</span> n =<span style="color: #000000;"> nums.size();</span><span style="color: #008080;">25</span>         <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; k; i++<span style="color: #000000;">) {</span><span style="color: #008080;">26</span>             sum +=<span style="color: #000000;"> nums[i];</span><span style="color: #008080;">27</span> <span style="color: #000000;">        }</span><span style="color: #008080;">28</span>         <span style="color: #0000ff;">int</span> maxSum =<span style="color: #000000;"> sum;</span><span style="color: #008080;">29</span>         <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = k; i &lt; n; i++<span style="color: #000000;">) {</span><span style="color: #008080;">30</span>             sum = sum - nums[i - k] +<span style="color: #000000;"> nums[i];</span><span style="color: #008080;">31</span>             maxSum =<span style="color: #000000;"> max(maxSum, sum);</span><span style="color: #008080;">32</span> <span style="color: #000000;">        }</span><span style="color: #008080;">33</span>         <span style="color: #0000ff;">return</span> static_cast&lt;<span style="color: #0000ff;">double</span>&gt;(maxSum) /<span style="color: #000000;"> k;</span><span style="color: #008080;">34</span> <span style="color: #000000;">    }</span><span style="color: #008080;">35</span> <span style="color: #008080;">36</span> };</pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片平滑器</title>
      <link href="/2021/12/02/tu-pian-ping-hua-qi/"/>
      <url>/2021/12/02/tu-pian-ping-hua-qi/</url>
      
        <content type="html"><![CDATA[<p>包含整数的二维矩阵 M 表示一个图片的灰度。你需要设计一个平滑器来让每一个单元的灰度成为平均灰度&amp;nbsp;(向下舍入) ，平均灰度的计算是周围的8个单元和它本身的值求平均，如果周围的单元格不足八个，则尽可能多的利用它们。</p><p>示例 1:</p><p>输入:<br>[[1,1,1],<br> [1,0,1],<br> [1,1,1]]<br>输出:<br>[[0, 0, 0],<br> [0, 0, 0],<br> [0, 0, 0]]<br>解释:<br>对于点 (0,0), (0,2), (2,0), (2,2): 平均(3/4) = 平均(0.75) = 0<br>对于点 (0,1), (1,0), (1,2), (2,1): 平均(5/6) = 平均(0.83333333) = 0<br>对于点 (1,1): 平均(8/9) = 平均(0.88888889) = 0</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>     vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt; imageSmoother(vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt;&amp;<span style="color: #000000;"> img) {</span><span style="color: #008080;"> 2</span>         <span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> n =<span style="color: #000000;"> img.size();</span><span style="color: #008080;"> 3</span>         <span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> m = img[<span style="color: #800080;">0</span><span style="color: #000000;">].size();</span><span style="color: #008080;"> 4</span>         vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt; ans(n, vector&lt;<span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;">(m));</span><span style="color: #008080;"> 5</span>         <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; n; ++i){  <span style="color: #008000;">//</span><span style="color: #008000;">遍历每一个点</span><span style="color: #008080;"> 6</span>             <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> j = <span style="color: #800080;">0</span>; j &lt; m; ++<span style="color: #000000;">j){</span><span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">int</span> sum = <span style="color: #800080;">0</span>, num = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> k = -<span style="color: #800080;">1</span>; k &lt;= <span style="color: #800080;">1</span>; ++k){  <span style="color: #008000;">//</span><span style="color: #008000;">遍历周围的格子</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> l = -<span style="color: #800080;">1</span>; l &lt;= <span style="color: #800080;">1</span>; ++l){   <span style="color: #008000;">//</span><span style="color: #008000;">判断是否出界</span><span style="color: #008080;">10</span>                         <span style="color: #0000ff;">if</span>(i + k &gt;= <span style="color: #800080;">0</span> &amp;&amp; i + k &lt; n &amp;&amp; j + l &gt;= <span style="color: #800080;">0</span> &amp;&amp; j + l &lt;<span style="color: #000000;"> m){</span><span style="color: #008080;">11</span>                             ++num; <span style="color: #008000;">//</span><span style="color: #008000;">没有出界，格子个数+1</span><span style="color: #008080;">12</span>                             sum += img[i + k][j + l]; <span style="color: #008000;">//</span><span style="color: #008000;">计算总和</span><span style="color: #008080;">13</span> <span style="color: #000000;">                        }</span><span style="color: #008080;">14</span> <span style="color: #000000;">                    }</span><span style="color: #008080;">15</span> <span style="color: #000000;">                }</span><span style="color: #008080;">16</span>                 ans[i][j] = sum / num; <span style="color: #008000;">//</span><span style="color: #008000;">计算平均值</span><span style="color: #008080;">17</span> <span style="color: #000000;">            }</span><span style="color: #008080;">18</span> <span style="color: #000000;">        }</span><span style="color: #008080;">19</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> ans;</span><span style="color: #008080;">20</span>     }</pre></div>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP/IP讲解</title>
      <link href="/2021/12/02/tcp-ip-jiang-jie/"/>
      <url>/2021/12/02/tcp-ip-jiang-jie/</url>
      
        <content type="html"><![CDATA[<p>从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/242fbebe730ea864c312370614791f45.jpeg-wh_651x-s_431133179.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>一图看完本文</p><h2 id="一、-计算机网络体系结构分层"><a href="#一、-计算机网络体系结构分层" class="headerlink" title="一、 计算机网络体系结构分层"></a>一、 计算机网络体系结构分层</h2><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/aaf923228df01d11a7b805d4db5d1d33.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>计算机网络体系结构分层</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f58f6ad856c6802b636d20d8f5ba2c3e.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>计算机网络体系结构分层</p><p><strong>不难看出，TCP/IP 与 OSI 在分层模块上稍有区别。OSI 参考模型注重&amp;ldquo;通信协议必要的功能是什么&amp;rdquo;，而 TCP/IP 则更强调&amp;ldquo;在计算机上实现协议应该开发哪种程序&amp;rdquo;。</strong></p><h2 id="二、-TCP-x2F-IP-基础"><a href="#二、-TCP-x2F-IP-基础" class="headerlink" title="二、 TCP/IP 基础"></a>二、 TCP/IP 基础</h2><p><strong>1. TCP/IP 的具体含义</strong></p><p>从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。他们与 TCP 或 IP 的关系紧密，是互联网必不可少的组成部分。TCP/IP 一词泛指这些协议，因此，有时也称 TCP/IP 为网际协议群。</p><p>互联网进行通信时，需要相应的网络协议，TCP/IP 原本就是为使用互联网而开发制定的协议族。因此，互联网的协议就是 TCP/IP，TCP/IP 就是互联网的协议。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/06645dfb1e9914c032358fbc8ee2641c.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>网际协议群</p><p><strong>2. 数据包</strong></p><p><strong>包、帧、数据包、段、消息</strong></p><p>以上五个术语都用来表述数据的单位，大致区分如下：</p><ul><li>包可以说是全能性术语；</li><li>帧用于表示数据链路层中包的单位；</li><li>数据包是 IP 和 UDP 等网络层以上的分层中包的单位；</li><li>段则表示 TCP 数据流中的信息；</li><li>消息是指应用协议中数据的单位。</li></ul><p>每个分层中，都会对所发送的数据附加一个首部，在这个首部中包含了该层必要的信息，如发送的目标地址以及协议相关信息。通常，为协议提供的信息为包首部，所要发送的内容为数据。在下一层的角度看，从上一层收到的包全部都被认为是本层的数据。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/23180acf2b82efe5b1821de16e9d55e5.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>数据包首部</p><p>网络中传输的数据包由两部分组成：一部分是协议所要用到的首部，另一部分是上一层传过来的数据。首部的结构由协议的具体规范详细定义。在数据包的首部，明确标明了协议应该如何读取数据。反过来说，看到首部，也就能够了解该协议必要的信息以及所要处理的数据。<strong>包首部就像协议的脸。</strong></p><p><strong>3. 数据处理流程</strong></p><p>下图以用户 a 向用户 b 发送邮件为例子：</p><p>数据处理流程</p><p>① 应用程序处理</p><p>首先应用程序会进行编码处理，这些编码相当于 OSI 的表示层功能；</p><p>编码转化后，邮件不一定马上被发送出去，这种何时建立通信连接何时发送数据的管理功能，相当于 OSI 的会话层功能。</p><p>② TCP 模块的处理</p><p>TCP 根据应用的指示，负责建立连接、发送数据以及断开连接。TCP 提供将应用层发来的数据顺利发送至对端的可靠传输。为了实现这一功能，需要在应用层数据的前端附加一个 TCP 首部。</p><p>③ IP 模块的处理</p><p>IP 将 TCP 传过来的 TCP 首部和 TCP 数据合起来当做自己的数据，并在 TCP 首部的前端加上自己的 IP 首部。IP 包生成后，参考路由控制表决定接受此 IP 包的路由或主机。</p><p>④ 网络接口（以太网驱动）的处理</p><p>从 IP 传过来的 IP 包对于以太网来说就是数据。给这些数据附加上以太网首部并进行发送处理，生成的以太网数据包将通过物理层传输给接收端。</p><p>⑤ 网络接口（以太网驱动）的处理</p><p>主机收到以太网包后，首先从以太网包首部找到 MAC 地址判断是否为发送给自己的包，若不是则丢弃数据。</p><p>如果是发送给自己的包，则从以太网包首部中的类型确定数据类型，再传给相应的模块，如 IP、ARP 等。这里的例子则是 IP 。</p><p>⑥ IP 模块的处理</p><p>IP 模块接收到 数据后也做类似的处理。从包首部中判断此 IP 地址是否与自己的 IP 地址匹配，如果匹配则根据首部的协议类型将数据发送给对应的模块，如 TCP、UDP。这里的例子则是 TCP。</p><p>另外吗，对于有路由器的情况，接收端地址往往不是自己的地址，此时，需要借助路由控制表，在调查应该送往的主机或路由器之后再进行转发数据。</p><p>⑦ TCP 模块的处理</p><p>在 TCP 模块中，首先会计算一下校验和，判断数据是否被破坏。然后检查是否在按照序号接收数据。***检查端口号，确定具体的应用程序。数据被完整地接收以后，会传给由端口号识别的应用程序。</p><p>⑧ 应用程序的处理</p><p>接收端应用程序会直接接收发送端发送的数据。通过解析数据，展示相应的内容。</p><h2 id="三、传输层中的-TCP-和-UDP"><a href="#三、传输层中的-TCP-和-UDP" class="headerlink" title="三、传输层中的 TCP 和 UDP"></a>三、传输层中的 TCP 和 UDP</h2><p>TCP/IP 中有两个具有代表性的传输层协议，分别是 TCP 和 UDP。</p><ul><li>TCP 是面向连接的、可靠的流协议。流就是指不间断的数据结构，当应用程序采用 TCP 发送消息时，虽然可以保证发送的顺序，但还是犹如没有任何间隔的数据流发送给接收端。TCP 为提供可靠性传输，实行&amp;ldquo;顺序控制&amp;rdquo;或&amp;ldquo;重发控制&amp;rdquo;机制。此外还具备&amp;ldquo;流控制（流量控制）&amp;rdquo;、&amp;ldquo;拥塞控制&amp;rdquo;、提高网络利用率等众多功能。</li><li>UDP 是不具有可靠性的数据报协议。细微的处理它会交给上层的应用去完成。在 UDP 的情况下，虽然可以确保发送消息的大小，却不能保证消息一定会到达。因此，应用有时会根据自己的需要进行重发处理。</li><li>TCP 和 UDP 的优缺点无法简单地、绝对地去做比较：TCP 用于在传输层有必要实现可靠传输的情况；而在一方面，UDP 主要用于那些对高速传输和实时性有较高要求的通信或广播通信。TCP 和 UDP 应该根据应用的目的按需使用。</li></ul><p><strong>1. 端口号</strong></p><p>数据链路和 IP 中的地址，分别指的是 MAC 地址和 IP 地址。前者用来识别同一链路中不同的计算机，后者用来识别 TCP/IP 网络中互连的主机和路由器。在传输层也有这种类似于地址的概念，那就是端口号。端口号用来识别同一台计算机中进行通信的不同应用程序。因此，它也被称为程序地址。</p><p><strong>1.1 根据端口号识别应用</strong></p><p>一台计算机上同时可以运行多个程序。传输层协议正是利用这些端口号识别本机中正在进行通信的应用程序，并准确地将数据传输。</p><p>通过端口号识别应用</p><p><strong>1.2 通过 IP 地址、端口号、协议号进行通信识别</strong></p><ul><li>仅凭目标端口号识别某一个通信是远远不够的。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/b5365660969c04412663a89676037c2a.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/4abc87010b97139a5f8860c5b4d74592.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>通过端口号、IP地址、协议号进行通信识别</p><p>① 和② 的通信是在两台计算机上进行的。它们的目标端口号相同，都是80。这里可以根据源端口号加以区分。</p><p>③ 和 ① 的目标端口号和源端口号完全相同，但它们各自的源 IP 地址不同。</p><p>此外，当 IP 地址和端口号全都一样时，我们还可以通过协议号来区分（TCP 和 UDP）。</p><p><strong>1.3 端口号的确定</strong></p><ul><li>标准既定的端口号：这种方法也叫静态方法。它是指每个应用程序都有其指定的端口号。但并不是说可以随意使用任何一个端口号。例如 HTTP、FTP、TELNET 等广为使用的应用协议中所使用的端口号就是固定的。这些端口号被称为知名端口号，分布在 0<del>1023 之间；除知名端口号之外，还有一些端口号被正式注册，它们分布在 1024</del>49151 之间，不过这些端口号可用于任何通信用途。</li><li>时序分配法：服务器有必要确定监听端口号，但是接受服务的客户端没必要确定端口号。在这种方法下，客户端应用程序完全可以不用自己设置端口号，而全权交给操作系统进行分配。动态分配的端口号范围在 49152~65535 之间。</li></ul><p><strong>1.4 端口号与协议</strong></p><ul><li>端口号由其使用的传输层协议决定。因此，不同的传输层协议可以使用相同的端口号。</li><li>此外，那些知名端口号与传输层协议并无关系。只要端口一致都将分配同一种应用程序进行处理。</li></ul><ol start="2"><li>UDP</li></ol><ul><li>UDP 不提供复杂的控制机制，利用 IP 提供面向无连接的通信服务。</li><li>并且它是将应用程序发来的数据在收到的那一刻，立即按照原样发送到网络上的一种机制。即使是出现网络拥堵的情况，UDP 也无法进行流量控制等避免网络拥塞行为。</li><li>此外，传输途中出现丢包，UDP 也不负责重发。</li><li>甚至当包的到达顺序出现乱序时也没有纠正的功能。</li><li>如果需要以上的细节控制，不得不交由采用 UDP 的应用程序去处理。</li><li>UDP 常用于一下几个方面：1.包总量较少的通信（DNS、SNMP等）；2.视频、音频等多媒体通信（即时通信）；3.限定于 LAN 等特定网络中的应用通信；4.广播通信（广播、多播）。</li></ul><ol start="3"><li>TCP</li></ol><ul><li>TCP 与 UDP 的区别相当大。它充分地实现了数据传输时各种控制功能，可以进行丢包时的重发控制，还可以对次序乱掉的分包进行顺序控制。而这些在 UDP 中都没有。</li><li>此外，TCP 作为一种面向有连接的协议，只有在确认通信对端存在时才会发送数据，从而可以控制通信流量的浪费。</li><li>根据 TCP 的这些机制，在 IP 这种无连接的网络上也能够实现高可靠性的通信（ 主要通过检验和、序列号、确认应答、重发控制、连接管理以及窗口控制等机制实现）。</li></ul><p><strong>3.1 三次握手（重点）</strong></p><ul><li>TCP 提供面向有连接的通信传输。面向有连接是指在数据通信开始之前先做好两端之间的准备工作。</li><li>所谓三次握手是指建立一个 TCP 连接时需要客户端和服务器端总共发送三个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发。</li></ul><p>下面来看看三次握手的流程图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/7b09f56589ba71b99fad5aeae19f363d.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>三次握手</p><ul><li>***次握手：客户端将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给服务器端，客户端进入SYN_SENT状态，等待服务器端确认。</li><li>第二次握手：服务器端收到数据包后由标志位SYN=1知道客户端请求建立连接，服务器端将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给客户端以确认连接请求，服务器端进入SYN_RCVD状态。</li><li>第三次握手：客户端收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给服务器端，服务器端检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，客户端和服务器端进入ESTABLISHED状态，完成三次握手，随后客户端与服务器端之间可以开始传输数据了。</li></ul><p><strong>3.2 四次挥手（重点）</strong></p><ul><li>四次挥手即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发。</li><li>由于TCP连接是全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭。</li></ul><p>下面来看看四次挥手的流程图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f0adfc32f118133170ad1a48b5a2eb58.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>四次挥手</p><ul><li>中断连接端可以是客户端，也可以是服务器端。</li><li>***次挥手：客户端发送一个FIN=M，用来关闭客户端到服务器端的数据传送，客户端进入FIN_WAIT_1状态。意思是说”我客户端没有数据要发给你了”，但是如果你服务器端还有数据没有发送完成，则不必急着关闭连接，可以继续发送数据。</li><li>第二次挥手：服务器端收到FIN后，先发送ack=M+1，告诉客户端，你的请求我收到了，但是我还没准备好，请继续你等我的消息。这个时候客户端就进入FIN_WAIT_2 状态，继续等待服务器端的FIN报文。</li><li>第三次挥手：当服务器端确定数据已发送完成，则向客户端发送FIN=N报文，告诉客户端，好了，我这边数据发完了，准备好关闭连接了。服务器端进入LAST_ACK状态。</li><li>第四次挥手：客户端收到FIN=N报文后，就知道可以关闭连接了，但是他还是不相信网络，怕服务器端不知道要关闭，所以发送ack=N+1后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。服务器端收到ACK后，就知道可以断开连接了。客户端等待了2MSL后依然没有收到回复，则证明服务器端已正常关闭，那好，我客户端也可以关闭连接了。最终完成了四次握手。</li></ul><p><strong>上面是一方主动关闭，另一方被动关闭的情况，实际中还会出现同时发起主动关闭的情况。</strong></p><p>具体流程如下图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/d4d0fa887aa88281b11090c771159662.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>同时挥手</p><p><strong>3.3 通过序列号与确认应答提高可靠性</strong></p><ul><li>在 TCP 中，当发送端的数据到达接收主机时，接收端主机会返回一个已收到消息的通知。这个消息叫做确认应答（ACK）。当发送端将数据发出之后会等待对端的确认应答。如果有确认应答，说明数据已经成功到达对端。<strong>反之，则数据丢失的可能性很大</strong>。</li><li>在一定时间内没有等待到确认应答，发送端就可以认为数据已经丢失，并进行重发。由此，即使产生了丢包，仍然能够保证数据能够到达对端，实现可靠传输。</li><li>未收到确认应答并不意味着数据一定丢失。也有可能是数据对方已经收到，只是返回的确认应答在途中丢失。这种情况也会导致发送端误以为数据没有到达目的地而重发数据。</li><li>此外，也有可能因为一些其他原因导致确认应答延迟到达，在源主机重发数据以后才到达的情况也屡见不鲜。此时，源主机只要按照机制重发数据即可。</li><li>对于目标主机来说，反复收到相同的数据是不可取的。为了对上层应用提供可靠的传输，目标主机必须放弃重复的数据包。为此我们引入了序列号。</li><li><strong>序列号是按照顺序给发送数据的每一个字节（8位字节）都标上号码的编号。接收端查询接收数据 TCP 首部中的序列号和数据的长度，将自己下一步应该接收的序列号作为确认应答返送回去。通过序列号和确认应答号，TCP 能够识别是否已经接收数据，又能够判断是否需要接收，从而实现可靠传输。</strong></li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/88e571b0cec17ee0f212dfb5a9558702.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>序列号和确认应答</p><p><strong>3.4 重发超时的确定</strong></p><ul><li><strong>重发超时是指在重发数据之前，等待确认应答到来的那个特定时间间隔。</strong>如果超过这个时间仍未收到确认应答，发送端将进行数据重发。最理想的是，找到一个最小时间，它能保证&amp;ldquo;确认应答一定能在这个时间内返回&amp;rdquo;。</li><li>TCP 要求不论处在何种网络环境下都要提供高性能通信，并且无论网络拥堵情况发生何种变化，都必须保持这一特性。为此，它在每次发包时都会计算往返时间及其偏差。将这个往返时间和偏差时间相加，重发超时的时间就是比这个总和要稍大一点的值。</li><li>在 BSD 的 Unix 以及 Windows 系统中，超时都以0.5秒为单位进行控制，因此重发超时都是0.5秒的整数倍。不过，最初其重发超时的默认值一般设置为6秒左右。</li><li>数据被重发之后若还是收不到确认应答，则进行再次发送。此时，等待确认应答的时间将会以2倍、4倍的指数函数延长。</li><li>此外，<strong>数据也不会被</strong><em>、反复地重发。达到一定重发次数之后，如果仍没有任何确认应答返回，就会判断为网络或对端主机发生了异常，强制关闭连接。并且通知应用通信异常强行终止。</em>*</li></ul><p><strong>3.5 以段为单位发送数据</strong></p><ul><li>在建立 TCP 连接的同时，也可以确定发送数据包的单位，我们也可以称其为&amp;ldquo;<em><strong>消息长度&amp;rdquo;（MSS）。最理想的情况是，</strong></em>消息长度正好是 IP 中不会被分片处理的***数据长度。</li><li>TCP 在传送大量数据时，是以 MSS 的大小将数据进行分割发送。进行重发时也是以 MSS 为单位。</li><li>MSS 在三次握手的时候，在两端主机之间被计算得出。两端的主机在发出建立连接的请求时，会在 TCP 首部中写入 MSS 选项，告诉对方自己的接口能够适应的 MSS 的大小。然后会在两者之间选择一个较小的值投入使用。</li></ul><p><strong>3.6 利用窗口控制提高速度</strong></p><ul><li><p>TCP 以1个段为单位，每发送一个段进行一次确认应答的处理。这样的传输方式有一个缺点，就是包的往返时间越长通信性能就越低。</p></li><li><p>为解决这个问题，TCP 引入了窗口这个概念。确认应答不再是以每个分段，而是以更大的单位进行确认，转发时间将会被大幅地缩短。也就是说，发送端主机，在发送了一个段以后不必要一直等待确认应答，而是继续发送。如下图所示：</p></li><li><p>窗口控制</p></li><li><p>窗口大小就是指无需等待确认应答而可以继续发送数据的***值。上图中窗口大小为4个段。这个机制实现了使用大量的缓冲区，通过对多个段同时进行确认应答的功能。</p></li></ul><p><strong>3.7 滑动窗口控制</strong></p><p>滑动窗口</p><ul><li>上图中的窗口内的数据即便没有收到确认应答也可以被发送出去。不过，在整个窗口的确认应答没有到达之前，如果其中部分数据出现丢包，那么发送端仍然要负责重传。为此，发送端主机需要设置缓存保留这些待被重传的数据，直到收到他们的确认应答。</li><li>在滑动窗口以外的部分包括未发送的数据以及已经确认对端已收到的数据。当数据发出后若如期收到确认应答就可以不用再进行重发，此时数据就可以从缓存区清除。</li><li>收到确认应答的情况下，将窗口滑动到确认应答中的序列号的位置。这样可以顺序地将多个段同时发送提高通信性能。这种机制也别称为滑动窗口控制。</li></ul><p><strong>3.8 窗口控制中的重发控制</strong></p><p>在使用窗口控制中， 出现丢包一般分为两种情况：</p><p>① 确认应答未能返回的情况。在这种情况下，数据已经到达对端，是不需要再进行重发的，如下图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/8e7aff97ff49a06c5ba30dc80fc08930.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>部分确认应答丢失</p><p>② 某个报文段丢失的情况。接收主机如果收到一个自己应该接收的序列号以外的数据时，会针对当前为止收到数据返回确认应答。如下图所示，当某一报文段丢失后，发送端会一直收到序号为1001的确认应答，因此，在窗口比较大，又出现报文段丢失的情况下，同一个序列号的确认应答将会被重复不断地返回。而发送端主机如果连续3次收到同一个确认应答，就会将其对应的数据进行重发。这种机制比之前提到的超时管理更加高效，因此也被称为高速重发控制。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/c254cf5d196a1c00e915807edb5437fb.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><h2 id="四、网络层中的-IP-协议"><a href="#四、网络层中的-IP-协议" class="headerlink" title="四、网络层中的 IP 协议"></a>四、网络层中的 IP 协议</h2><ul><li>IP（IPv4、IPv6）相当于 OSI 参考模型中的第3层&amp;mdash;&amp;mdash;网络层。网络层的主要作用是&amp;ldquo;实现终端节点之间的通信&amp;rdquo;。这种终端节点之间的通信也叫&amp;ldquo;点对点通信&amp;rdquo;。</li><li>网络的下一层&amp;mdash;&amp;mdash;数据链路层的主要作用是在互连同一种数据链路的节点之间进行包传递。而一旦跨越多种数据链路，就需要借助网络层。网络层可以跨越不同的数据链路，即使是在不同的数据链路上也能实现两端节点之间的数据包传输。</li><li><strong>IP 大致分为三大作用模块，它们是 IP 寻址、路由（最终节点为止的转发）以及 IP 分包与组包。</strong></li></ul><p><strong>1. IP 地址</strong></p><p><strong>1.1 IP 地址概述</strong></p><ul><li>在计算机通信中，为了识别通信对端，必须要有一个类似于地址的识别码进行标识。在数据链路中的 MAC 地址正是用来标识同一个链路中不同计算机的一种识别码。</li><li>作为网络层的 IP ,也有这种地址信息，一般叫做 IP 地址。IP 地址用于在&amp;ldquo;连接到网络中的所有主机中识别出进行通信的目标地址&amp;rdquo;。因此，在 TCP/IP 通信中所有主机或路由器必须设定自己的 IP 地址。</li><li>不论一台主机与哪种数据链路连接，其 IP 地址的形式都保持不变。</li><li>IP 地址（IPv4 地址）由32位正整数来表示。IP 地址在计算机内部以二进制方式被处理。然而，由于我们并不习惯于采用二进制方式，我们将32位的 IP 地址以每8位为一组，分成4组，每组以 &amp;ldquo;.&amp;rdquo; 隔开，再将每组数转换成十进制数。如下：</li></ul><p><strong>1.2 IP 地址由网络和主机两部分标识组成</strong></p><ul><li>如下图，网络标识在数据链路的每个段配置不同的值。网络标识必须保证相互连接的每个段的地址不相重复。而相同段内相连的主机必须有相同的网络地址。IP 地址的&amp;ldquo;主机标识&amp;rdquo;则不允许在同一个网段内重复出现。由此，可以通过设置网络地址和主机地址，在相互连接的整个网络中保证每台主机的 IP 地址都不会相互重叠。即 IP 地址具有了唯一性。</li></ul><p>IP地址的主机标识</p><ul><li>如下图，IP 包被转发到途中某个路由器时，正是利用目标 IP 地址的网络标识进行路由。因为即使不看主机标识，只要一见到网络标识就能判断出是否为该网段内的主机。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/6bd79d8b235618f4a63c102a89387e2d.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>IP地址的网络标识</p><p><strong>1.3 IP 地址的分类</strong></p><ul><li><strong>IP 地址分为四个级别，分别为A类、B类、C类、D类。它根据 IP 地址中从第 1 位到第 4 位的比特列对其网络标识和主机标识进行区分。</strong></li><li><strong>A 类 IP 地址是首位以 &amp;ldquo;0&amp;rdquo; 开头的地址。</strong>从第 1 位到第 8 位是它的网络标识。用十进制表示的话，0.0.0.0~127.0.0.0 是 A 类的网络地址。A 类地址的后 24 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为16,777,214个。</li><li><strong>B 类 IP 地址是前两位 &amp;ldquo;10&amp;rdquo; 的地址。</strong>从第 1 位到第 16 位是它的网络标识。用十进制表示的话，128.0.0.0~191.255.0.0 是 B 类的网络地址。B 类地址的后 16 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为65,534个。</li><li><strong>C 类 IP 地址是前三位为 &amp;ldquo;110&amp;rdquo; 的地址。</strong>从第 1 位到第 24 位是它的网络标识。用十进制表示的话，192.0.0.0~223.255.255.0 是 C 类的网络地址。C 类地址的后 8 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为254个。</li><li><strong>D 类 IP 地址是前四位为 &amp;ldquo;1110&amp;rdquo; 的地址。</strong>从第 1 位到第 32 位是它的网络标识。用十进制表示的话，224.0.0.0~239.255.255.255 是 D 类的网络地址。D 类地址没有主机标识，常用于多播。</li><li>在分配 IP 地址时关于主机标识有一点需要注意。即要用比特位表示主机地址时，不可以全部为 0 或全部为 1。因为全部为 0 只有在表示对应的网络地址或 IP 地址不可以获知的情况下才使用。而全部为 1 的主机通常作为广播地址。因此，在分配过程中，应该去掉这两种情况。这也是为什么 C 类地址每个网段最多只能有 254（ 2<sup>8</sup>&amp;nbsp;- 2 = 254）个主机地址的原因。</li></ul><p><strong>1.4 广播地址</strong></p><ul><li>广播地址用于在同一个链路中相互连接的主机之间发送数据包。将 IP 地址中的主机地址部分全部设置为 1，就成了广播地址。</li><li>广播分为本地广播和直接广播两种。在本网络内的广播叫做本地广播；在不同网络之间的广播叫做直接广播。</li></ul><p><strong>1.5 IP 多播</strong></p><ul><li><p>多播用于将包发送给特定组内的所有主机。由于其直接使用 IP 地址，因此也不存在可靠传输。</p></li><li><p>相比于广播，多播既可以穿透路由器，又可以实现只给那些必要的组发送数据包。请看下图：</p></li><li><p>IP 多播</p></li><li><p>多播使用 D 类地址。因此，如果从首位开始到第 4 位是 &amp;ldquo;1110&amp;rdquo;，就可以认为是多播地址。而剩下的 28 位可以成为多播的组编号。</p></li><li><p>此外， 对于多播，所有的主机（路由器以外的主机和终端主机）必须属于 224.0.0.1 的组，所有的路由器必须属于 224.0.0.2 的组。</p></li></ul><p><strong>1.6 子网掩码</strong></p><ul><li>现在一个 IP 地址的网络标识和主机标识已不再受限于该地址的类别，而是由一个叫做&amp;ldquo;子网掩码&amp;rdquo;的识别码通过子网网络地址细分出比 A 类、B 类、C 类更小粒度的网络。这种方式实际上就是将原来 A 类、B 类、C 类等分类中的主机地址部分用作子网地址，可以将原网络分为多个物理网络的一种机制。</li><li>子网掩码用二进制方式表示的话，也是一个 32 位的数字。它对应 IP 地址网络标识部分的位全部为 &amp;ldquo;1&amp;rdquo;，对应 IP 地址主机标识的部分则全部为 &amp;ldquo;0&amp;rdquo;。由此，一个 IP 地址可以不再受限于自己的类别，而是可以用这样的子网掩码自由地定位自己的网络标识长度。当然，子网掩码必须是 IP 地址的首位开始连续的 &amp;ldquo;1&amp;rdquo;。</li><li>对于子网掩码，目前有两种表示方式。***种是，将 IP 地址与子网掩码的地址分别用两行来表示。以 172.20.100.52 的前 26 位是网络地址的情况为例，如下：</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2cd6e3fd8f2c24e33f6ab2f8dce6efd4.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><ul><li>第二种表示方式是，在每个 IP 地址后面追加网络地址的位数用 &amp;ldquo;/ &amp;rdquo; 隔开</li></ul><p><strong>2. 路由</strong></p><ul><li>发送数据包时所使用的地址是网络层的地址，即 IP 地址。然而仅仅有 IP 地址还不足以实现将数据包发送到对端目标地址，在数据发送过程中还需要类似于&amp;ldquo;指明路由器或主机&amp;rdquo;的信息，以便真正发往目标地址。保存这种信息的就是路由控制表。</li><li>该路由控制表的形成方式有两种：一种是管理员手动设置，另一种是路由器与其他路由器相互交换信息时自动刷新。前者也叫做静态路由控制，而后者叫做动态路由控制。</li><li>IP 协议始终认为路由表是正确的。然后，IP 本身并没有定义制作路由控制表的协议。即 IP 没有制作路由控制表的机制。该表示由一个叫做&amp;ldquo;路由协议&amp;rdquo;的协议制作而成。</li></ul><p><strong>2.1 IP 地址与路由控制</strong></p><ul><li>IP 地址的网络地址部分用于进行路由控制。</li><li>路由控制表中记录着网络地址与下一步应该发送至路由器的地址。</li><li>在发送 IP 包时，首先要确定 IP 包首部中的目标地址，再从路由控制表中找到与该地址具有相同网络地址的记录，根据该记录将 IP 包转发给相应的下一个路由器。如果路由控制表中存在多条相同网络地址的记录，就选择一个最为吻合的网络地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f7196335235016e1f7486a8f34050f65.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>路由控制表与 IP 包发送</p><p><strong>3. IP 分包与组包</strong></p><ul><li>每种数据链路的***传输单元（MTU）都不尽相同，因为每个不同类型的数据链路的使用目的不同。使用目的不同，可承载的 MTU 也就不同。</li><li>任何一台主机都有必要对 IP 分片进行相应的处理。分片往往在网络上遇到比较大的报文无法一下子发送出去时才会进行处理。</li><li>经过分片之后的 IP 数据报在被重组的时候，只能由目标主机进行。路由器虽然做分片但不会进行重组。</li></ul><p><strong>3.1 路径 MTU 发现</strong></p><ul><li>分片机制也有它的不足。如路由器的处理负荷加重之类。因此，只要允许，是不希望由路由器进行 IP 数据包的分片处理的。</li><li>为了应对分片机制的不足，&amp;ldquo;路径 MTU 发现&amp;rdquo; 技术应运而生。路径 MTU 指的是，从发送端主机到接收端主机之间不需要分片是*** MTU 的大小。即路径中存在的所有数据链路中最小的 MTU 。</li><li>进行路径 MTU 发现，就可以避免在中途的路由器上进行分片处理，也可以在 TCP 中发送更大的包。</li></ul><p><strong>4. IPv6</strong></p><ul><li>IPv6（IP version 6）是为了根本解决 IPv4 地址耗尽的问题而被标准化的网际协议。IPv4 的地址长度为 4 个 8 位字节，即 32 比特。而 IPv6 的地址长度则是原来的 4 倍，即 128 比特，一般写成 8 个 16 位字节。</li></ul><p><strong>4.1 IPv6 的特点</strong></p><ul><li>IP 得知的扩大与路由控制表的聚合。</li><li>性能提升。包首部长度采用固定的值（40字节），不再采用首部检验码。简化首部结构，减轻路由器负担。路由器不再做分片处理。</li><li>支持即插即用功能。即使没有DHCP服务器也可以实现自动分配 IP 地址。</li><li>采用认证与加密功能。应对伪造 IP 地址的网络安全功能以及防止线路窃听的功能。</li><li>多播、Mobile IP 成为扩展功能。</li></ul><p><strong>4.2 IPv6 中 IP 地址的标记方法</strong></p><ul><li>一般人们将 128 比特 IP 地址以每 16 比特为一组，每组用冒号（&amp;ldquo;：&amp;rdquo;）隔开进行标记。</li><li>而且如果出现连续的 0 时还可以将这些 0 省略，并用两个冒号（&amp;ldquo;：：&amp;rdquo;）隔开。但是，一个 IP 地址中只允许出现一次两个连续的冒号。</li></ul><p><strong>4.3 IPv6 地址的结构</strong></p><ul><li>IPv6 类似 IPv4，也是通过 IP 地址的前几位标识 IP 地址的种类。</li><li>在互联网通信中，使用一种全局的单播地址。它是互联网中唯一的一个地址，不需要正式分配 IP 地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/ab4237bc8a7b577a112ad378b5559038.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p><strong>4.4 全局单播地址</strong></p><ul><li>全局单播地址是指世界上唯一的一个地址。它是互联网通信以及各个域内部通信中最为常用的一个 IPv6 地址。</li><li>格式如下图所示，现在 IPv6 的网络中所使用的格式为，n = 48，m = 16 以及 128 - n - m = 64。即前 64 比特为网络标识，后 64 比特为主机标识。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f9bfdef073be77e2ddadd80549d19a83.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>全局单播地址</p><p><strong>4.5 链路本地单播地址</strong></p><ul><li>链路本地单播地址是指在同一个数据链路内唯一的地址。它用于不经过路由器，在同一个链路中的通信。通常接口 ID 保存 64 比特版的 MAC 地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/5978f86afcbd2a720c6bd9229a196810.jpeg-wh_600x-s_2695201089.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>链路本地单播地址</p><p><strong>4.6 唯一本地地址</strong></p><ul><li>唯一本地地址是不进行互联网通信时所用的地址。</li><li>唯一本地地址虽然不会与互联网连接，但是也会尽可能地随机生成一个唯一的全局 ID。</li><li>L 通常被置为 1</li><li>全局 ID 的值随机决定</li><li>子网 ID 是指该域子网地址</li><li>接口 ID 即为接口的 ID</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/446f67e636c944343808de6754155f62.jpeg-wh_600x-s_36418080.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>唯一本地地址</p><p><strong>4.7 IPv6 分段处理</strong></p><ul><li>IPv6 的分片处理只在作为起点的发送端主机上进行，路由器不参与分片。</li><li>IPv6 中最小 MTU 为 1280 字节，因此，在嵌入式系统中对于那些有一定系统资源限制的设备来说，不需要进行&amp;ldquo;路径 MTU 发现&amp;rdquo;，而是在发送 IP 包时直接以 1280 字节为单位分片送出。</li></ul><p><strong>4.8 IP 首部（暂略）</strong></p><p><strong>5. IP 协议相关技术</strong></p><ul><li>IP 旨在让最终目标主机收到数据包，但是在这一过程中仅仅有 IP 是无法实现通信的。必须还有能够解析主机名称和 MAC 地址的功能，以及数据包在发送过程中异常情况处理的功能。</li></ul><p><strong>5.1 DNS</strong></p><ul><li>我们平常在访问某个网站时不适用 IP 地址，而是用一串由罗马字和点号组成的字符串。而一般用户在使用 TCP/IP 进行通信时也不使用 IP 地址。能够这样做是因为有了 DNS （Domain Name System）功能的支持。DNS 可以将那串字符串自动转换为具体的 IP 地址。</li><li>这种 DNS 不仅适用于 IPv4，还适用于 IPv6。</li></ul><p><strong>5.2 ARP</strong></p><ul><li>只要确定了 IP 地址，就可以向这个目标地址发送 IP 数据报。然而，在底层数据链路层，进行实际通信时却有必要了解每个 IP 地址所对应的 MAC 地址。</li><li>ARP 是一种解决地址问题的协议。以目标 IP 地址为线索，用来定位下一个应该接收数据分包的网络设备对应的 MAC 地址。不过 ARP 只适用于 IPv4，不能用于 IPv6。IPv6 中可以用 ICMPv6 替代 ARP 发送邻居探索消息。</li><li>RARP 是将 ARP 反过来，从 MAC 地址定位 IP 地址的一种协议。</li></ul><p><strong>5.3 ICMP</strong></p><ul><li>ICMP 的主要功能包括，确认 IP 包是否成功送达目标地址，通知在发送过程当中 IP 包被废弃的具体原因，改善网络设置等。</li><li>IPv4 中 ICMP 仅作为一个辅助作用支持 IPv4。也就是说，在 IPv4 时期，即使没有 ICMP，仍然可以实现 IP 通信。然而，在 IPv6 中，ICMP 的作用被扩大，如果没有 ICMPv6，IPv6 就无法进行正常通信。</li></ul><p><strong>5.4 DHCP</strong></p><ul><li>如果逐一为每一台主机设置 IP 地址会是非常繁琐的事情。特别是在移动使用笔记本电脑、只能终端以及平板电脑等设备时，每移动到一个新的地方，都要重新设置 IP 地址。</li><li>于是，为了实现自动设置 IP 地址、统一管理 IP 地址分配，就产生了 DHCP（Dynamic Host Configuration Protocol）协议。有了 DHCP，计算机只要连接到网络，就可以进行 TCP/IP 通信。也就是说，DHCP 让即插即用变得可能。</li><li>DHCP 不仅在 IPv4 中，在 IPv6 中也可以使用。</li></ul><p><strong>5.5 NAT</strong></p><ul><li>NAT（Network Address Translator）是用于在本地网络中使用私有地址，在连接互联网时转而使用全局 IP 地址的技术。</li><li>除转换 IP 地址外，还出现了可以转换 TCP、UDP 端口号的 NAPT（Network Address Ports Translator）技术，由此可以实现用一个全局 IP 地址与多个主机的通信。</li><li>NAT（NAPT）实际上是为正在面临地址枯竭的 IPv4 而开发的技术。不过，在 IPv6 中为了提高网络安全也在使用 NAT，在 IPv4 和 IPv6 之间的相互通信当中常常使用 NAT-PT。</li></ul><p><strong>5.6 IP 隧道</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/65a040c9fc1b39941515e063e048d99e.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>夹着 IPv4 网络的两个 IPv6 网络</p><ul><li>如上图的网络环境中，网络 A 与网络 B 之间无法直接进行通信，为了让它们之间正常通信，这时必须得采用 IP 隧道的功能。</li><li>IP 隧道可以将那些从网络 A 发过来的 IPv6 的包统合为一个数据，再为之追加一个 IPv4 的首部以后转发给网络 C。</li><li>一般情况下，紧接着 IP 首部的是 TCP 或 UDP 的首部。然而，现在的应用当中&amp;ldquo; IP 首部的后面还是 IP 首部&amp;rdquo;或者&amp;ldquo; IP 首部的后面是 IPv6 的首部&amp;rdquo;等情况与日俱增。这种在网络层的首部后面追加网络层首部的通信方法就叫做&amp;ldquo; IP 隧道&amp;rdq</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubantu搜狗输入法候选汉字乱码</title>
      <link href="/2021/12/02/ubantu-sou-gou-shu-ru-fa-hou-xuan-han-zi-luan-ma/"/>
      <url>/2021/12/02/ubantu-sou-gou-shu-ru-fa-hou-xuan-han-zi-luan-ma/</url>
      
        <content type="html"><![CDATA[<p>Ubantu搜狗输入法候选汉字乱码</p><p>可能原因，自己手贱删除了/etc/apt/sources.list.d中的fcitx的一个列表</p><p>&amp;nbsp;</p><p>解决方法：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200813170919380-560000114.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;配置当前输入发，将搜狗输入法下移放在第二个位置（MDZZ）</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200813171020437-1675339877.png"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
