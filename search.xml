<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树</title>
      <link href="/2022/04/04/shu/"/>
      <url>/2022/04/04/shu/</url>
      
        <content type="html"><![CDATA[<h1 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h1><h2 id="1-从遍历数据重建二叉树"><a href="#1-从遍历数据重建二叉树" class="headerlink" title="1. 从遍历数据重建二叉树"></a>1. 从遍历数据重建二叉树</h2><ul><li><p>重建方式 递归</p></li><li><p>三种遍历的数组分布</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/2.jpeg" alt="img" style="zoom:67%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/6.jpeg" alt="img" style="zoom:67%;"></li></ul><h3 id="105-从前序与中序遍历序列构造二叉树"><a href="#105-从前序与中序遍历序列构造二叉树" class="headerlink" title="105. 从前序与中序遍历序列构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/">105. 从前序与中序遍历序列构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// 又臭又长的就 不看了</span></span><br><span class="line">    <span class="comment">// TreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {</span></span><br><span class="line">    <span class="comment">//   if(preorder.size() == 0) return nullptr;</span></span><br><span class="line">    <span class="comment">//   int rootVal = preorder[0];</span></span><br><span class="line">    <span class="comment">//   int inorder_rootPos = find(inorder.begin(), inorder.end(), rootVal) - inorder.begin();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//   //前序左右子树</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; preorderL = vector&lt;int&gt;(preorder.begin()+1, preorder.begin()+1+inorder_rootPos);</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; preorderR =vector&lt;int&gt;(preorder.begin()+1+inorder_rootPos, preorder.end());</span></span><br><span class="line">    <span class="comment">//   //中序左右子树</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; inorderL = vector&lt;int&gt;(inorder.begin(), inorder.begin()+inorder_rootPos);</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; inorderR = vector&lt;int&gt;(inorder.begin() + inorder_rootPos + 1, inorder.end());</span></span><br><span class="line">    <span class="comment">//   //cout&lt;&lt;inorder_rootPos;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//   TreeNode* root = new TreeNode(rootVal);</span></span><br><span class="line">    <span class="comment">//   root-&gt;left = buildTree(preorderL, inorderL);</span></span><br><span class="line">    <span class="comment">//   root-&gt;right = buildTree(preorderR, inorderR);</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">//   return root;</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">buildTree</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, vector&lt;<span class="keyword">int</span>&gt;&amp; inorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(preorder, <span class="number">0</span> ,preorder.<span class="built_in">size</span>()<span class="number">-1</span>, inorder, <span class="number">0</span>, inorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, <span class="keyword">int</span> preS, <span class="keyword">int</span> preE, vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, <span class="keyword">int</span> inS, <span class="keyword">int</span> inE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(preS&gt;preE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">int</span> rootVal = preorder[preS];</span><br><span class="line">      <span class="keyword">int</span> index;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = inS; i&lt;=inE; i++){   <span class="comment">//注意这里是小于等于</span></span><br><span class="line">        <span class="keyword">if</span>(inorder[i] == rootVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index - inS;</span><br><span class="line">      TreeNode* root = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      root-&gt;left = <span class="built_in">build</span>(preorder,preS + <span class="number">1</span>, preS + leftSize, inorder, inS, index<span class="number">-1</span>);</span><br><span class="line">      root-&gt;right = <span class="built_in">build</span>(preorder, preS + <span class="number">1</span> + leftSize, preE, inorder, index+ <span class="number">1</span>, inE);</span><br><span class="line">      <span class="keyword">return</span> root;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="106-从中序与后序遍历序列构造二叉树"><a href="#106-从中序与后序遍历序列构造二叉树" class="headerlink" title="106. 从中序与后序遍历序列构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/">106. 从中序与后序遍历序列构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">buildTree</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(inorder, <span class="number">0</span>, inorder.<span class="built_in">size</span>()<span class="number">-1</span>, postorder, <span class="number">0</span>, postorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, <span class="keyword">int</span> inS, <span class="keyword">int</span> inE, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder, <span class="keyword">int</span> posS, <span class="keyword">int</span> posE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(inS&gt;inE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">int</span> rootVal = postorder[posE];</span><br><span class="line">      <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = inS; i&lt;=inE; i++){  <span class="comment">//注意这里是&lt;= 需要全部遍历</span></span><br><span class="line">        <span class="keyword">if</span>(inorder[i] == rootVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index - inS;</span><br><span class="line">      TreeNode* root = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      root-&gt;left = <span class="built_in">build</span>(inorder, inS, index<span class="number">-1</span>, postorder, posS, posS + leftSize<span class="number">-1</span>);</span><br><span class="line">      root-&gt;right = <span class="built_in">build</span>(inorder, index+<span class="number">1</span>, inE, postorder, posS + leftSize, posE<span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> root;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="889-根据前序和后序遍历构造二叉树"><a href="#889-根据前序和后序遍历构造二叉树" class="headerlink" title="889. 根据前序和后序遍历构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/">889. 根据前序和后序遍历构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode {</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() : val(0), left(nullptr), right(nullptr) {}</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}</span></span><br><span class="line"><span class="comment"> * };</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">constructFromPrePost</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(preorder, <span class="number">0</span>, preorder.<span class="built_in">size</span>()<span class="number">-1</span>, postorder, <span class="number">0</span>, postorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, <span class="keyword">int</span> preS, <span class="keyword">int</span> preE, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder, <span class="keyword">int</span> posS, <span class="keyword">int</span> posE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(preS&gt;preE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">if</span>(preS == preE) <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">TreeNode</span>(preorder[preS]);</span><br><span class="line">      <span class="keyword">int</span> rootVal = preorder[preS];</span><br><span class="line">      <span class="keyword">int</span> secVal = preorder[preS + <span class="number">1</span>];</span><br><span class="line">      <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = posS; i&lt;posE; i++){</span><br><span class="line">        <span class="keyword">if</span>(postorder[i] == secVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index-posS;</span><br><span class="line">      TreeNode* node = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      node-&gt;left = <span class="built_in">build</span>(preorder, preS+<span class="number">1</span>, preS+<span class="number">1</span>+leftSize, postorder, posS, posS + leftSize);</span><br><span class="line">      node-&gt;right = <span class="built_in">build</span>(preorder, preS+<span class="number">1</span>+leftSize+ <span class="number">1</span>, preE, postorder, posS + leftSize+<span class="number">1</span>, posE <span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> node;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="2-递归改迭代"><a href="#2-递归改迭代" class="headerlink" title="2. 递归改迭代"></a>2. <a href="https://labuladong.gitee.io/algo/2/19/34/">递归改迭代</a></h2><p>简单说就是这样一个流程：</p><p><strong>1、拿到一个节点，就一路向左遍历（因为 <code>traverse(root.left)</code> 排在前面），把路上的节点都压到栈里</strong>。</p><p><strong>2、往左走到头之后就开始退栈，看看栈顶节点的右指针，非空的话就重复第 1 步</strong>。</p><p>写成迭代代码就是这样：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Stack&lt;TreeNode*&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">traverse</span><span class="params">(TreeNode* root)</span> </span>{</span><br><span class="line">    <span class="built_in">pushLeftBranch</span>(root);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!stk.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        TreeNode p = stk.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="built_in">pushLeftBranch</span>(p.right);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左侧树枝一撸到底，都放入栈中</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushLeftBranch</span><span class="params">(TreeNode* p)</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (p != null) {</span><br><span class="line">        stk.<span class="built_in">push</span>(p);</span><br><span class="line">        p = p.left;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="迭代代码框架"><a href="#迭代代码框架" class="headerlink" title="迭代代码框架"></a>迭代代码框架</h4><p>想在迭代代码中体现前中后序遍历，关键点在哪里？</p><p><strong>当我从栈中拿出一个节点 <code>p</code>，我应该想办法搞清楚这个节点 <code>p</code> 左右子树的遍历情况</strong>。</p><p>如果 <code>p</code> 的左右子树都没有被遍历，那么现在对 <code>p</code> 进行操作就属于前序遍历代码。</p><p>如果 <code>p</code> 的左子树被遍历过了，而右子树没有被遍历过，那么现在对 <code>p</code> 进行操作就属于中序遍历代码。</p><p>如果 <code>p</code> 的左右子树都被遍历过了，那么现在对 <code>p</code> 进行操作就属于后序遍历代码。</p><p>上述逻辑写成伪码如下：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模拟函数调用栈</span></span><br><span class="line"><span class="keyword">private</span> :</span><br><span class="line">stack&lt;TreeNode*&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左侧树枝一撸到底</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushLeftBranch</span><span class="params">(TreeNode* p)</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">nullptr</span>) {</span><br><span class="line">        <span class="comment">/*******************/</span></span><br><span class="line">        <span class="comment">/** 前序遍历代码位置 **/</span></span><br><span class="line">        <span class="comment">/*******************/</span></span><br><span class="line">        stk.<span class="built_in">push</span>(p);</span><br><span class="line">        p = p-&gt;left;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">traverse</span><span class="params">(TreeNode* root)</span> </span>{</span><br><span class="line">    <span class="comment">// 指向上一次遍历完的子树根节点</span></span><br><span class="line">    TreeNode* visited = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(<span class="number">-1</span>);</span><br><span class="line">    <span class="comment">// 开始遍历整棵树</span></span><br><span class="line">    <span class="built_in">pushLeftBranch</span>(root);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!stk.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        TreeNode* p = stk.<span class="built_in">top</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// p 的左子树被遍历完了，且右子树没有被遍历过</span></span><br><span class="line">        <span class="keyword">if</span> ((p-&gt;left == <span class="literal">nullptr</span> || p.left == visited) </span><br><span class="line">          &amp;&amp; p-&gt;right != visited) {</span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">/** 中序遍历代码位置 **/</span></span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">// 去遍历 p 的右子树</span></span><br><span class="line">            <span class="built_in">pushLeftBranch</span>(p-&gt;right);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// p 的右子树被遍历完了</span></span><br><span class="line">        <span class="keyword">if</span> (p-&gt;right == <span class="literal">nullptr</span> || p-&gt;right == visited) {</span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">/** 后序遍历代码位置 **/</span></span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">// 以 p 为根的子树被遍历完了，出栈</span></span><br><span class="line">            <span class="comment">// visited 指针指向 p</span></span><br><span class="line">            visited = stk.<span class="built_in">pop</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="字典树-Trie"><a href="#字典树-Trie" class="headerlink" title="字典树 (Trie)"></a><a href="https://oi-wiki.org/string/trie/">字典树 (Trie)</a></h1><p><code>Trie 树又叫字典树、前缀树、单词查找树，是一种二叉树衍生出来的高级数据结构，主要应用场景是处理字符串前缀相关的操作。</code></p><p>为什么说非典型呢？因为它和一般的多叉树不一样，尤其在结点的数据结构设计上，比如一般的多叉树的结点是这样的：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span> {</span></span><br><span class="line">    VALUETYPE value;    <span class="comment">//结点值</span></span><br><span class="line">    vector&lt;TreeNode*&gt; children;    <span class="comment">//指向孩子结点</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>而 Trie 的结点是这样的(假设只包含’a’~’z’中的字符)：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TrieNode</span> {</span></span><br><span class="line">    <span class="keyword">bool</span> isEnd; <span class="comment">//该结点是否是一个串的结束</span></span><br><span class="line">    vector&lt;TrieNode*&gt; next; <span class="comment">//字母映射表 26 or 其他</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="包含三个单词-“sea”-”sells”-”she”-的-Trie"><a href="#包含三个单词-“sea”-”sells”-”she”-的-Trie" class="headerlink" title="包含三个单词 “sea”,”sells”,”she” 的 Trie"></a>包含三个单词 “sea”,”sells”,”she” 的 Trie</h4><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220405131024751.png" alt="image-20220405131024751" style="zoom:50%;"><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>){}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//树中插入单词</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含单词word</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">contianWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含以word为前缀的单词</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">containWordStartsWith</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在树中查找word的最短前缀 没有则返回为空</span></span><br><span class="line">    <span class="function">string <span class="title">shortestPrefixOf</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span>  </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        string res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> ch : word){</span><br><span class="line">            <span class="keyword">if</span> (node-&gt;isEnd || node-&gt;next[ch - <span class="string">'a'</span>] == <span class="literal">nullptr</span>) <span class="keyword">break</span>;</span><br><span class="line">            res += ch;</span><br><span class="line">            node = node-&gt;next[ch - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd ? res : <span class="string">""</span>;         <span class="comment">//有前缀返回前缀，没有则返回空字符串</span></span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//带通配符.的匹配 例如 a.c 匹配 abc</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasKeyWithPattern</span><span class="params">(<span class="keyword">const</span> string&amp; word, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="comment">//字符串到头 检测树枝是否到头</span></span><br><span class="line">        <span class="keyword">if</span>(index &gt;= word.<span class="built_in">size</span>()) <span class="keyword">return</span> node-&gt;isEnd == <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> ch = word[index];</span><br><span class="line">        <span class="comment">//没有遇到通配符</span></span><br><span class="line">        <span class="keyword">if</span>(ch != <span class="string">'.'</span> )</span><br><span class="line">            <span class="keyword">return</span> node-&gt;next[ch - <span class="string">'a'</span>] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[ch -  <span class="string">'a'</span>]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遇到通配符</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">26</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[i] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[i]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//没有找到</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="前缀树算法模板秒杀-5-道算法题-qq-com"><a href="#前缀树算法模板秒杀-5-道算法题-qq-com" class="headerlink" title="前缀树算法模板秒杀 5 道算法题 (qq.com)"></a><a href="https://mp.weixin.qq.com/s/hGrTUmM1zusPZZ0nA9aaNw">前缀树算法模板秒杀 5 道算法题 (qq.com)</a></h3><h4 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h4><p>描述：向 Trie 中插入一个单词 word</p><p>实现：这个操作和构建链表很像。首先从根结点的子结点开始与 word 第一个字符进行匹配，一直匹配到前缀链上没有对应的字符，这时开始不断开辟新的结点，直到插入完 word 的最后一个字符，同时还要将最后一个结点isEnd = true;，表示它是一个单词的末尾。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">        <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">            node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">        node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">    }</span><br><span class="line">    node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4><p>描述：查找 Trie 中是否存在单词 word</p><p>实现：从根结点的子结点开始，一直向下匹配即可，如果出现结点值为空就返回 false，如果匹配到了最后一个字符，那我们只需判断 node-&gt;isEnd即可。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">contianWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">        node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="前缀匹配"><a href="#前缀匹配" class="headerlink" title="前缀匹配"></a>前缀匹配</h4><p>描述：判断 Trie 中是或有以 word为前缀的单词</p><p>实现：和 search 操作类似，只是不需要判断最后一个字符结点的isEnd，因为既然能匹配到最后一个字符，那后面一定有单词是以它为前缀的。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">containWordStartsWith</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">        node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="最短词根"><a href="#最短词根" class="headerlink" title="最短词根"></a>最短词根</h4><p>描述：判断 string str在Trie 中的最短词根 （满足 isEnd）</p><p>实现：在前缀树上遍历单词，如果当前isEnd（表示找到了一个词根）或者 遍历到树尖，停止遍历</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找并返回前缀</span></span><br><span class="line"><span class="function">string <span class="title">shortestPrefixOf</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span>  </span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    string res = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> ch : word){</span><br><span class="line">        <span class="keyword">if</span> (node-&gt;isEnd || node-&gt;next[ch - <span class="string">'a'</span>] == <span class="literal">nullptr</span>) <span class="keyword">break</span>;</span><br><span class="line">        res += ch;</span><br><span class="line">        node = node-&gt;next[ch - <span class="string">'a'</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> node-&gt;isEnd ? res : <span class="string">""</span>;         <span class="comment">//有前缀返回前缀，没有则返回空字符串</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="带通配符的查找"><a href="#带通配符的查找" class="headerlink" title="带通配符的查找"></a>带通配符的查找</h4><p>描述：使用通配符来匹配多个键，其关键就在于通配符<code>.</code>可以匹配所有字符。</p><p>实现：见代码</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//带通配符.的匹配 例如 a.c 匹配 abc</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">hasKeyWithPattern</span><span class="params">(<span class="keyword">const</span> string&amp; word, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">    Trie* node = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">//字符串到头 检测树枝是否到头</span></span><br><span class="line">    <span class="keyword">if</span>(index &gt;= word.<span class="built_in">size</span>()) <span class="keyword">return</span> node-&gt;isEnd == <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> ch = word[index];</span><br><span class="line">    <span class="comment">//没有遇到通配符</span></span><br><span class="line">    <span class="keyword">if</span>(ch != <span class="string">'.'</span> )</span><br><span class="line">        <span class="keyword">return</span> node-&gt;next[ch - <span class="string">'a'</span>] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[ch -  <span class="string">'a'</span>]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遇到通配符</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">26</span>; i++){</span><br><span class="line">        <span class="keyword">if</span>(node-&gt;next[i] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[i]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//没有找到</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="208-实现-Trie-前缀树"><a href="#208-实现-Trie-前缀树" class="headerlink" title="208. 实现 Trie (前缀树)"></a><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=208">labuladong 题解</a></p><p>难度中等1135收藏分享切换为英文接收动态反馈</p><p>**<a href="https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E6%A0%91/9825209?fr=aladdin">Trie</a>**（发音类似 “try”）或者说 <strong>前缀树</strong> 是一种树形数据结构，用于高效地存储和检索字符串数据集中的键。这一数据结构有相当多的应用情景，例如自动补完和拼写检查。</p><p>请你实现 Trie 类：</p><ul><li><code>Trie()</code> 初始化前缀树对象。</li><li><code>void insert(String word)</code> 向前缀树中插入字符串 <code>word</code> 。</li><li><code>boolean search(String word)</code> 如果字符串 <code>word</code> 在前缀树中，返回 <code>true</code>（即，在检索之前已经插入）；否则，返回 <code>false</code> 。</li><li><code>boolean startsWith(String prefix)</code> 如果之前已经插入的字符串 <code>word</code> 的前缀之一为 <code>prefix</code> ，返回 <code>true</code> ；否则，返回 <code>false</code> 。</li></ul><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">输入</span><br><span class="line">["Trie", "insert", "search", "search", "startsWith", "insert", "search"]</span><br><span class="line">[[], ["apple"], ["apple"], ["app"], ["app"], ["app"], ["app"]]</span><br><span class="line">输出</span><br><span class="line">[null, null, true, false, true, null, true]</span><br><span class="line"></span><br><span class="line">解释</span><br><span class="line">Trie trie = new Trie();</span><br><span class="line">trie.insert("apple");</span><br><span class="line">trie.search("apple");   // 返回 True</span><br><span class="line">trie.search("app");     // 返回 False</span><br><span class="line">trie.startsWith("app"); // 返回 True</span><br><span class="line">trie.insert("app");</span><br><span class="line">trie.search("app");     // 返回 True</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>构建前缀树</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>() : <span class="built_in">isEnd</span>(<span class="number">0</span>), <span class="built_in">next</span>(<span class="number">26</span>){}</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(string word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">startsWith</span><span class="params">(string prefix)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : prefix){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="648-单词替换-查找最短前缀"><a href="#648-单词替换-查找最短前缀" class="headerlink" title="648. 单词替换 查找最短前缀"></a><a href="https://leetcode-cn.com/problems/replace-words/">648. 单词替换 查找最短前缀</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=648">labuladong 题解</a></p><p>难度中等163收藏分享切换为英文接收动态反馈</p><p>在英语中，我们有一个叫做 <code>词根</code>(root) 的概念，可以词根<strong>后面</strong>添加其他一些词组成另一个较长的单词——我们称这个词为 <code>继承词</code>(successor)。例如，词根<code>an</code>，跟随着单词 <code>other</code>(其他)，可以形成新的单词 <code>another</code>(另一个)。</p><p>现在，给定一个由许多<strong>词根</strong>组成的词典 <code>dictionary</code> 和一个用空格分隔单词形成的句子 <code>sentence</code>。你需要将句子中的所有<strong>继承词</strong>用<strong>词根</strong>替换掉。如果<strong>继承词</strong>有许多可以形成它的<strong>词根</strong>，则用<strong>最短</strong>的词根替换它。</p><p>你需要输出替换之后的句子。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：dictionary = ["cat","bat","rat"], sentence = "the cattle was rattled by the battery"</span><br><span class="line">输出："the cat was rat by the bat"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：dictionary = ["a","b","c"], sentence = "aadsfasf absbs bbab cadsfafs"</span><br><span class="line">输出："a a b c"</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>){}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//树中插入单词</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含单词word</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">contianWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含以word为前缀的单词</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">containWordStartsWith</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在树中查找word的最短前缀 没有则返回为空</span></span><br><span class="line">    <span class="function">string <span class="title">shortestPrefixOf</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span>  </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        string res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> ch : word){</span><br><span class="line">            <span class="keyword">if</span> (node-&gt;isEnd || node-&gt;next[ch - <span class="string">'a'</span>] == <span class="literal">nullptr</span>) <span class="keyword">break</span>;</span><br><span class="line">            res += ch;</span><br><span class="line">            node = node-&gt;next[ch - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd ? res : <span class="string">""</span>;         <span class="comment">//有前缀返回前缀，没有则返回空字符串</span></span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">replaceWords</span><span class="params">(vector&lt;string&gt;&amp; dictionary, string sentence)</span> </span>{</span><br><span class="line">        Trie* trie = <span class="keyword">new</span> Trie;</span><br><span class="line">        <span class="function">stringstream <span class="title">ss</span><span class="params">(sentence)</span></span>;</span><br><span class="line">        string s;</span><br><span class="line">        <span class="built_in">sort</span>(dictionary.<span class="built_in">begin</span>(), dictionary.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//词根存入字典树</span></span><br><span class="line">        <span class="keyword">for</span>(string str : dictionary)</span><br><span class="line">            trie-&gt;<span class="built_in">insert</span>(str);</span><br><span class="line"></span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        vector&lt;string&gt; all;</span><br><span class="line">        <span class="keyword">while</span>(ss &gt;&gt; s)</span><br><span class="line">            all.<span class="built_in">push_back</span>(s);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(string word : all){</span><br><span class="line">            string prefix = trie-&gt;<span class="built_in">shortestPrefixOf</span>(word);</span><br><span class="line">            <span class="keyword">if</span>(prefix.<span class="built_in">size</span>() != <span class="number">0</span>){</span><br><span class="line">                ans += prefix;</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                ans += word;</span><br><span class="line">            }</span><br><span class="line">            ans += <span class="string">" "</span>;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        ans.<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="211-添加与搜索单词-数据结构设计-带通配符的查找"><a href="#211-添加与搜索单词-数据结构设计-带通配符的查找" class="headerlink" title="211. 添加与搜索单词 - 数据结构设计 带通配符的查找"></a><a href="https://leetcode-cn.com/problems/design-add-and-search-words-data-structure/">211. 添加与搜索单词 - 数据结构设计 带通配符的查找</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=211">labuladong 题解</a></p><p>难度中等416英文版讨论区</p><p>请你设计一个数据结构，支持 添加新单词 和 查找字符串是否与任何先前添加的字符串匹配 。</p><p>实现词典类 <code>WordDictionary</code> ：</p><ul><li><code>WordDictionary()</code> 初始化词典对象</li><li><code>void addWord(word)</code> 将 <code>word</code> 添加到数据结构中，之后可以对它进行匹配</li><li><code>bool search(word)</code> 如果数据结构中存在字符串与 <code>word</code> 匹配，则返回 <code>true</code> ；否则，返回 <code>false</code> 。<code>word</code> 中可能包含一些 <code>'.'</code> ，每个 <code>.</code> 都可以表示任何一个字母。</li></ul><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["WordDictionary","addWord","addWord","addWord","search","search","search","search"]</span><br><span class="line">[[],["bad"],["dad"],["mad"],["pad"],["bad"],[".ad"],["b.."]]</span><br><span class="line">输出：</span><br><span class="line">[null,null,null,null,false,true,true,true]</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">WordDictionary wordDictionary = new WordDictionary();</span><br><span class="line">wordDictionary.addWord("bad");</span><br><span class="line">wordDictionary.addWord("dad");</span><br><span class="line">wordDictionary.addWord("mad");</span><br><span class="line">wordDictionary.search("pad"); // 返回 False</span><br><span class="line">wordDictionary.search("bad"); // 返回 True</span><br><span class="line">wordDictionary.search(".ad"); // 返回 True</span><br><span class="line">wordDictionary.search("b.."); // 返回 True</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>前缀树带通配符的匹配 加入startIndex进行递归</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>) {}</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span></span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> ch : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[ch - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[ch - <span class="string">'a'</span>] = <span class="keyword">new</span> Trie;</span><br><span class="line">            node = node-&gt;next[ch - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasKeyWithPattern</span><span class="params">(<span class="keyword">const</span> string&amp; word, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="comment">//字符串到头 检测树枝是否到头</span></span><br><span class="line">        <span class="keyword">if</span>(index &gt;= word.<span class="built_in">size</span>()) <span class="keyword">return</span> node-&gt;isEnd == <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> ch = word[index];</span><br><span class="line">        <span class="comment">//没有遇到通配符</span></span><br><span class="line">        <span class="keyword">if</span>(ch != <span class="string">'.'</span> )</span><br><span class="line">            <span class="keyword">return</span> node-&gt;next[ch - <span class="string">'a'</span>] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[ch -  <span class="string">'a'</span>]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遇到通配符</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">26</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[i] != <span class="literal">nullptr</span> &amp;&amp; node-&gt;next[i]-&gt;<span class="built_in">hasKeyWithPattern</span>(word, index+<span class="number">1</span>))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//没有找到</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WordDictionary</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Trie* trie;</span><br><span class="line">    <span class="built_in">WordDictionary</span>() {</span><br><span class="line">        trie = <span class="keyword">new</span> Trie;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addWord</span><span class="params">(string word)</span> </span>{</span><br><span class="line">        trie-&gt;<span class="built_in">insert</span>(word);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(string word)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> trie-&gt;<span class="built_in">hasKeyWithPattern</span>(word, <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="720-词典中最长的单词-经典"><a href="#720-词典中最长的单词-经典" class="headerlink" title="720. 词典中最长的单词 经典"></a><a href="https://leetcode-cn.com/problems/longest-word-in-dictionary/">720. 词典中最长的单词 经典</a></h3><p>难度简单301</p><p>给出一个字符串数组 <code>words</code> 组成的一本英语词典。返回 <code>words</code> 中最长的一个单词，该单词是由 <code>words</code> 词典中其他单词逐步添加一个字母组成。</p><p>若其中有多个可行的答案，则返回答案中字典序最小的单词。若无答案，则返回空字符串。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：words = ["w","wo","wor","worl", "world"]</span><br><span class="line">输出："world"</span><br><span class="line">解释： 单词"world"可由"w", "wo", "wor", 和 "worl"逐步添加一个字母组成。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：words = ["a", "banana", "app", "appl", "ap", "apply", "apple"]</span><br><span class="line">输出："apple"</span><br><span class="line">解释："apply" 和 "apple" 都能由词典中的单词组成。但是 "apple" 的字典序小于 "apply" </span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>哈希解法 sort后 依次substr检查是否存在 存在则压入</li><li>字典树  需要自己构建函数 isGoodWord查找单词路径上每个节点 是否都是isEnd</li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>){}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//树中插入单词</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含单词word</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isGoodWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span> || node-&gt;isEnd == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestWord</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>{</span><br><span class="line">        Trie trie;</span><br><span class="line">        <span class="keyword">for</span>(string word : words)  trie.<span class="built_in">insert</span>(word);</span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(string word : words){</span><br><span class="line">            <span class="keyword">if</span>(trie.<span class="built_in">isGoodWord</span>(word)){</span><br><span class="line">                <span class="keyword">if</span>(word.<span class="built_in">size</span>()&gt;ans.<span class="built_in">size</span>() || (word.<span class="built_in">size</span>() == ans.<span class="built_in">size</span>() &amp;&amp; word&lt;ans))</span><br><span class="line">                    ans = word;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Trie*&gt; next;</span><br><span class="line">    <span class="keyword">bool</span> isEnd;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Trie</span>(): <span class="built_in">next</span>(<span class="number">26</span>), <span class="built_in">isEnd</span>(<span class="number">0</span>){}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//树中插入单词</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;next[c - <span class="string">'a'</span>] == <span class="literal">nullptr</span>)</span><br><span class="line">                node-&gt;next[c - <span class="string">'a'</span>] = <span class="keyword">new</span> <span class="built_in">Trie</span>();</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">        }</span><br><span class="line">        node-&gt;isEnd = <span class="number">1</span>;  <span class="comment">//最后不要忘了 置为1</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找树中是否包含单词word</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isGoodWord</span><span class="params">(<span class="keyword">const</span> string&amp; word)</span> </span>{</span><br><span class="line">        Trie* node = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : word){</span><br><span class="line">            node = node-&gt;next[c - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(node == <span class="literal">nullptr</span> || node-&gt;isEnd == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> node-&gt;isEnd;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestWord</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>{</span><br><span class="line">        Trie trie;</span><br><span class="line">        <span class="keyword">for</span>(string word : words)  trie.<span class="built_in">insert</span>(word);</span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(string word : words){</span><br><span class="line">            <span class="keyword">if</span>(trie.<span class="built_in">isGoodWord</span>(word)){</span><br><span class="line">                <span class="keyword">if</span>(word.<span class="built_in">size</span>()&gt;ans.<span class="built_in">size</span>() || (word.<span class="built_in">size</span>() == ans.<span class="built_in">size</span>() &amp;&amp; word&lt;ans))</span><br><span class="line">                    ans = word;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//哈希解法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">longestWord</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>{</span><br><span class="line">        <span class="built_in">sort</span>(words.<span class="built_in">begin</span>(), words.<span class="built_in">end</span>());</span><br><span class="line">        unordered_set&lt;string&gt; sett;</span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        sett.<span class="built_in">insert</span>(ans);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;words.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(sett.<span class="built_in">count</span>(words[i].<span class="built_in">substr</span>(<span class="number">0</span>, words[i].<span class="built_in">size</span>() <span class="number">-1</span>))){</span><br><span class="line">                <span class="keyword">if</span>(words[i].<span class="built_in">size</span>()&gt;ans.<span class="built_in">size</span>())</span><br><span class="line">                    ans = words[i];</span><br><span class="line">                sett.<span class="built_in">insert</span>(words[i]); <span class="comment">//满足条件才会insert</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h1 id="线段树和树状数组"><a href="#线段树和树状数组" class="headerlink" title="线段树和树状数组"></a><a href="https://oi-wiki.org/ds/seg/">线段树</a>和树状数组</h1><h3 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h3><p>线段树是算法竞赛中常用的用来维护 <strong>区间信息</strong> 的数据结构。</p><p>线段树可以在Ologn 的时间复杂度内实现单点修改、区间修改、区间查询（区间求和，求区间最大值，求区间最小值）等操作。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220405022002717.png" alt="image-20220405022002717"></p><h3 id="线段树-1"><a href="#线段树-1" class="headerlink" title="线段树"></a>线段树</h3><p>树状数组和线段树具有相似的功能，但他俩毕竟还有一些区别：树状数组能有的操作，线段树一定有；线段树有的操作，树状数组不一定有。但是树状数组的代码要比线段树短，思维更清晰，速度也更快，在解决一些单点修改的问题时，树状数组是不二之选。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220405024155141.png" alt="image-20220405024155141"></p><h3 id="307-区域和检索-数组可修改"><a href="#307-区域和检索-数组可修改" class="headerlink" title="307. 区域和检索 - 数组可修改"></a><u><a href="https://leetcode-cn.com/problems/range-sum-query-mutable/">307. 区域和检索 - 数组可修改</a></u></h3><p>难度中等470英文版讨论区</p><p>给你一个数组 <code>nums</code> ，请你完成两类查询。</p><ol><li>其中一类查询要求 <strong>更新</strong> 数组 <code>nums</code> 下标对应的值</li><li>另一类查询要求返回数组 <code>nums</code> 中索引 <code>left</code> 和索引 <code>right</code> 之间（ <strong>包含</strong> ）的nums元素的 <strong>和</strong> ，其中 <code>left &lt;= right</code></li></ol><p>实现 <code>NumArray</code> 类：</p><ul><li><code>NumArray(int[] nums)</code> 用整数数组 <code>nums</code> 初始化对象</li><li><code>void update(int index, int val)</code> 将 <code>nums[index]</code> 的值 <strong>更新</strong> 为 <code>val</code></li><li><code>int sumRange(int left, int right)</code> 返回数组 <code>nums</code> 中索引 <code>left</code> 和索引 <code>right</code> 之间（ <strong>包含</strong> ）的nums元素的 <strong>和</strong> （即，<code>nums[left] + nums[left + 1], ..., nums[right]</code>）</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["NumArray", "sumRange", "update", "sumRange"]</span><br><span class="line">[[[1, 3, 5]], [0, 2], [1, 2], [0, 2]]</span><br><span class="line">输出：</span><br><span class="line">[null, 9, null, 8]</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">NumArray numArray = new NumArray([1, 3, 5]);</span><br><span class="line">numArray.sumRange(0, 2); // 返回 1 + 3 + 5 = 9</span><br><span class="line">numArray.update(1, 2);   // nums = [1,2,5]</span><br><span class="line">numArray.sumRange(0, 2); // 返回 1 + 2 + 5 = 8</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线段树</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; segmentTree;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> node, <span class="keyword">int</span> s, <span class="keyword">int</span> e, vector&lt;<span class="keyword">int</span>&gt; &amp;nums)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (s == e) {</span><br><span class="line">            segmentTree[node] = nums[s];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> m = s + (e - s) / <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">build</span>(node * <span class="number">2</span> + <span class="number">1</span>, s, m, nums);</span><br><span class="line">        <span class="built_in">build</span>(node * <span class="number">2</span> + <span class="number">2</span>, m + <span class="number">1</span>, e, nums);</span><br><span class="line">        segmentTree[node] = segmentTree[node * <span class="number">2</span> + <span class="number">1</span>] + segmentTree[node * <span class="number">2</span> + <span class="number">2</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> val, <span class="keyword">int</span> node, <span class="keyword">int</span> s, <span class="keyword">int</span> e)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (s == e) {</span><br><span class="line">            segmentTree[node] = val;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> m = s + (e - s) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (index &lt;= m) {</span><br><span class="line">            <span class="built_in">change</span>(index, val, node * <span class="number">2</span> + <span class="number">1</span>, s, m);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">change</span>(index, val, node * <span class="number">2</span> + <span class="number">2</span>, m + <span class="number">1</span>, e);</span><br><span class="line">        }</span><br><span class="line">        segmentTree[node] = segmentTree[node * <span class="number">2</span> + <span class="number">1</span>] + segmentTree[node * <span class="number">2</span> + <span class="number">2</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">range</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span> node, <span class="keyword">int</span> s, <span class="keyword">int</span> e)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (left == s &amp;&amp; right == e) {</span><br><span class="line">            <span class="keyword">return</span> segmentTree[node];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> m = s + (e - s) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (right &lt;= m) {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">range</span>(left, right, node * <span class="number">2</span> + <span class="number">1</span>, s, m);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (left &gt; m) {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">range</span>(left, right, node * <span class="number">2</span> + <span class="number">2</span>, m + <span class="number">1</span>, e);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">range</span>(left, m, node * <span class="number">2</span> + <span class="number">1</span>, s, m) + <span class="built_in">range</span>(m + <span class="number">1</span>, right, node * <span class="number">2</span> + <span class="number">2</span>, m + <span class="number">1</span>, e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) : <span class="built_in">n</span>(nums.<span class="built_in">size</span>()), <span class="built_in">segmentTree</span>(nums.<span class="built_in">size</span>() * <span class="number">4</span>) {</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">0</span>, <span class="number">0</span>, n - <span class="number">1</span>, nums);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">        <span class="built_in">change</span>(index, val, <span class="number">0</span>, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">range</span>(left, right, <span class="number">0</span>, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//树状数组</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; A;<span class="comment">// 原数组</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; C;   <span class="comment">// 树状数组</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lowBit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums):<span class="built_in">A</span>(nums) {</span><br><span class="line">        C = vector&lt;<span class="keyword">int</span>&gt; (A.<span class="built_in">size</span>() + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//构造树形数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=A.<span class="built_in">size</span>(); i++) {</span><br><span class="line">            C[i] += A[i - <span class="number">1</span>];</span><br><span class="line">            <span class="comment">//父结点要加上子结点的值</span></span><br><span class="line">            <span class="keyword">if</span>(i + <span class="built_in">lowBit</span>(i) &lt;= A.<span class="built_in">size</span>()) </span><br><span class="line">                C[i + <span class="built_in">lowBit</span>(i)] += C[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> d = val - A[index];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index + <span class="number">1</span>; i &lt; C.<span class="built_in">size</span>(); i += <span class="built_in">lowBit</span>(i)) </span><br><span class="line">            C[i] += d; <span class="comment">// 更新树状数组       </span></span><br><span class="line">        A[index] = val; <span class="comment">// 更新原数组</span></span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> r = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//求right的前缀和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = right + <span class="number">1</span>; i &gt;= <span class="number">1</span>; i -= <span class="built_in">lowBit</span>(i)) r += C[i];</span><br><span class="line">        <span class="comment">//求left的前缀和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = left; i &gt;= <span class="number">1</span>; i -= <span class="built_in">lowBit</span>(i)) l += C[i];</span><br><span class="line">        <span class="keyword">return</span> r - l;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window开机内存占用高</title>
      <link href="/2022/04/04/window-kai-ji-nei-cun-zhan-yong-gao/"/>
      <url>/2022/04/04/window-kai-ji-nei-cun-zhan-yong-gao/</url>
      
        <content type="html"><![CDATA[<p>16g的内存，开机动不动就飙过50%</p><p>尤其是之前发现但从未去解决的 Lenovo.Modern.ImController.exe 服务 不断跑内存的情况 下定决心处理一下</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol><li><p>win + r  msconfig</p><p>服务-&gt;隐藏所有Microsoft服务  然后剩余的服务 感觉用不到的该关关 </p><p>不建议全部禁用 影响一些自己设置的开机启动项，个人就是lenovo全部禁用 解决了Lenovo.Modern.ImController.exe的问题</p><p>其他的 也多多少少禁用下 很多没用的服务</p></li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220404164932465.png" alt="image-20220404164932465" style="zoom: 67%;"><ol start="2"><li><p>任务管理器的 启动项 该关关</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220404165413230.png" alt="image-20220404165413230" style="zoom: 67%;"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 开发随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针</title>
      <link href="/2022/04/03/shuang-zhi-zhen/"/>
      <url>/2022/04/03/shuang-zhi-zhen/</url>
      
        <content type="html"><![CDATA[<h3 id="剑指-Offer-II-007-数组中和为-0-的三个数"><a href="#剑指-Offer-II-007-数组中和为-0-的三个数" class="headerlink" title="剑指 Offer II 007. 数组中和为 0 的三个数"></a><a href="https://leetcode-cn.com/problems/1fGaJU/">剑指 Offer II 007. 数组中和为 0 的三个数</a></h3><p>难度中等50收藏分享切换为英文接收动态反馈英文版讨论区</p><p>给定一个包含 <code>n</code> 个整数的数组 <code>nums</code>，判断 <code>nums</code> 中是否存在三个元素 <code>a</code> ，<code>b</code> ，<code>c</code> <em>，</em>使得 <code>a + b + c = 0</code> ？请找出所有和为 <code>0</code> 且 <strong>不重复</strong> 的三元组。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [-1,0,1,2,-1,-4]</span><br><span class="line">输出：[[-1,-1,2],[-1,0,1]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0]</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>遍历起始点 然后双指针遍历</li><li>注意 去重去重 每一个数 都需要去重</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">threeSum</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">3</span> || n == <span class="number">0</span>) <span class="keyword">return</span> {}; <span class="comment">//特判</span></span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历 然后双指针</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>) <span class="keyword">break</span>; <span class="comment">//剪枝</span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span> &amp;&amp; nums[i] == nums[i<span class="number">-1</span>]) <span class="keyword">continue</span>; <span class="comment">//去重</span></span><br><span class="line">            <span class="keyword">int</span> left = i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> right = n<span class="number">-1</span>;</span><br><span class="line">            <span class="comment">//注意 这里并不是二分判定 而是双指针</span></span><br><span class="line">            <span class="keyword">while</span>(left &lt; right){ </span><br><span class="line">                <span class="keyword">int</span> sum = nums[i] + nums[left] + nums[right];</span><br><span class="line">                <span class="keyword">if</span>(sum &gt; <span class="number">0</span>){</span><br><span class="line">                    right--;</span><br><span class="line">                }<span class="keyword">else</span> <span class="keyword">if</span>(sum&lt;<span class="number">0</span>){</span><br><span class="line">                    left++;</span><br><span class="line">                }<span class="keyword">else</span>{</span><br><span class="line">                    ans.<span class="built_in">push_back</span>({nums[i], nums[left], nums[right]});</span><br><span class="line">                    <span class="comment">//很重要的去重</span></span><br><span class="line">                    <span class="keyword">while</span>(left&lt;right &amp;&amp; nums[left] == nums[left+<span class="number">1</span>]) left++;</span><br><span class="line">                    <span class="keyword">while</span>(left&lt;right &amp;&amp; nums[right] == nums[right<span class="number">-1</span>]) right--;</span><br><span class="line">                    left++;right--;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回文</title>
      <link href="/2022/04/02/hui-wen/"/>
      <url>/2022/04/02/hui-wen/</url>
      
        <content type="html"><![CDATA[<h3 id="剑指-Offer-II-018-有效的回文"><a href="#剑指-Offer-II-018-有效的回文" class="headerlink" title="剑指 Offer II 018. 有效的回文"></a><a href="https://leetcode-cn.com/problems/XltzEq/">剑指 Offer II 018. 有效的回文</a></h3><p>难度简单18</p><p>给定一个字符串 <code>s</code> ，验证 <code>s</code> 是否是 <strong>回文串</strong> ，只考虑字母和数字字符，可以忽略字母的大小写。</p><p>本题中，将空字符串定义为有效的 <strong>回文串</strong> 。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "A man, a plan, a canal: Panama"</span><br><span class="line">输出: true</span><br><span class="line">解释："amanaplanacanalpanama" 是回文串</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "race a car"</span><br><span class="line">输出: false</span><br><span class="line">解释："raceacar" 不是回文串</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>开辟新string 判断是否回文</li><li>原地判断 一次遍历</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>开辟新string 判断是否回文</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        string ss;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;s.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">tolower</span>(s[i])&gt;=<span class="string">'a'</span> &amp;&amp; <span class="built_in">tolower</span>(s[i])&lt;=<span class="string">'z'</span>  ||(s[i]&gt;=<span class="string">'0'</span> &amp;&amp;s[i]&lt;=<span class="string">'9'</span>))</span><br><span class="line">                ss += <span class="built_in">tolower</span>(s[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isHuiWen</span>(ss);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isHuiWen</span><span class="params">(string s)</span></span>{</span><br><span class="line">        string ss = s;</span><br><span class="line">        <span class="built_in">reverse</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">        cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> ss == s;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>原地判断 一次遍历</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">            <span class="keyword">while</span>(left&lt;s.<span class="built_in">size</span>() &amp;&amp; !<span class="built_in">isValid</span>(s[left])){</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">while</span>(right&gt;=<span class="number">0</span> &amp;&amp; !<span class="built_in">isValid</span>(s[right])){</span><br><span class="line">                right--;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//越界 为空 直接返回1</span></span><br><span class="line">            <span class="keyword">if</span>(left&gt;=s.<span class="built_in">size</span>()|| right&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">tolower</span>(s[left]) != <span class="built_in">tolower</span>(s[right]))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValid</span><span class="params">(<span class="keyword">char</span>&amp; ch)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">tolower</span>(ch)&gt;=<span class="string">'a'</span> &amp;&amp; <span class="built_in">tolower</span>(ch)&lt;=<span class="string">'z'</span>  ||(ch&gt;=<span class="string">'0'</span> &amp;&amp;ch&lt;=<span class="string">'9'</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-027-回文链表"><a href="#剑指-Offer-II-027-回文链表" class="headerlink" title="剑指 Offer II 027. 回文链表"></a><a href="https://leetcode-cn.com/problems/aMhZSa/">剑指 Offer II 027. 回文链表</a></h3><p>难度简单42</p><p>给定一个链表的 <strong>头节点</strong> <code>head</code> <strong>，</strong>请判断其是否为回文链表。</p><p>如果一个链表是回文，那么链表节点序列从前往后看和从后往前看是相同的。</p><p><strong>示例 1：</strong></p><p><strong><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626421737-LjXceN-image.png" alt="img"></strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: head = [1,2,3,3,2,1]</span><br><span class="line">输出: true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><strong><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626422231-wgvnWh-image.png" alt="img"></strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: head = [1,2]</span><br><span class="line">输出: false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比vector</li><li>快慢指针 反转一半</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; nums;</span><br><span class="line">        <span class="keyword">while</span>(head){</span><br><span class="line">            nums.<span class="built_in">push_back</span>(head-&gt;val);</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">isPalindrome</span>(nums);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">            <span class="keyword">if</span>(nums[left]!=nums[right])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>快慢指针 反转一半</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">nullptr</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找到前半部分链表的尾节点并反转后半部分链表</span></span><br><span class="line">        ListNode* firstHalfEnd = <span class="built_in">endOfFirstHalf</span>(head);</span><br><span class="line">        ListNode* secondHalfStart = <span class="built_in">reverseList</span>(firstHalfEnd-&gt;next);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否回文</span></span><br><span class="line">        ListNode* p1 = head;</span><br><span class="line">        ListNode* p2 = secondHalfStart;</span><br><span class="line">        <span class="keyword">bool</span> result = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (result &amp;&amp; p2 != <span class="literal">nullptr</span>) {</span><br><span class="line">            <span class="keyword">if</span> (p1-&gt;val != p2-&gt;val) {</span><br><span class="line">                result = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">        }        </span><br><span class="line"></span><br><span class="line">        <span class="comment">// 还原链表并返回结果</span></span><br><span class="line">        firstHalfEnd-&gt;next = <span class="built_in">reverseList</span>(secondHalfStart);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        ListNode* prev = <span class="literal">nullptr</span>;</span><br><span class="line">        ListNode* curr = head;</span><br><span class="line">        <span class="keyword">while</span> (curr != <span class="literal">nullptr</span>) {</span><br><span class="line">            ListNode* nextTemp = curr-&gt;next;</span><br><span class="line">            curr-&gt;next = prev;</span><br><span class="line">            prev = curr;</span><br><span class="line">            curr = nextTemp;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> prev;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">endOfFirstHalf</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        ListNode* fast = head;</span><br><span class="line">        ListNode* slow = head;</span><br><span class="line">        <span class="keyword">while</span> (fast-&gt;next != <span class="literal">nullptr</span> &amp;&amp; fast-&gt;next-&gt;next != <span class="literal">nullptr</span>) {</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="9-回文数"><a href="#9-回文数" class="headerlink" title="9. 回文数"></a><a href="https://leetcode-cn.com/problems/palindrome-number/">9. 回文数</a></h3><p>难度简单1921</p><p>给你一个整数 <code>x</code> ，如果 <code>x</code> 是一个回文整数，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><ul><li>例如，<code>121</code> 是回文，而 <code>123</code> 不是。</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 121</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：x = -121</span><br><span class="line">输出：false</span><br><span class="line">解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</span><br></pre></td></tr></tbody></table></figure><p><strong>进阶：</strong>你能不将整数转为字符串来解决这个问题吗？</p><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>难点在于不转换为字符串或者数组</li><li>反转一半 反转后的数字为大半 剩余的为小半</li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line">        <span class="comment">// 特殊情况：</span></span><br><span class="line">        <span class="comment">// 如上所述，当 x &lt; 0 时，x 不是回文数。</span></span><br><span class="line">        <span class="comment">// 同样地，如果数字的最后一位是 0，为了使该数字为回文，</span></span><br><span class="line">        <span class="comment">// 则其第一位数字也应该是 0</span></span><br><span class="line">        <span class="comment">// 只有 0 满足这一属性</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> revertedNumber = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x &gt; revertedNumber) {</span><br><span class="line">            revertedNumber = revertedNumber * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。</span></span><br><span class="line">        <span class="comment">// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，</span></span><br><span class="line">        <span class="comment">// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。</span></span><br><span class="line">        <span class="keyword">return</span> x == revertedNumber || x == revertedNumber / <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="面试题-01-04-回文排列"><a href="#面试题-01-04-回文排列" class="headerlink" title="面试题 01.04. 回文排列"></a><a href="https://leetcode-cn.com/problems/palindrome-permutation-lcci/">面试题 01.04. 回文排列</a></h3><p>难度简单78英文版讨论区</p><p>给定一个字符串，编写一个函数判定其是否为某个回文串的排列之一。</p><p>回文串是指正反两个方向都一样的单词或短语。排列是指字母的重新排列。</p><p>回文串不一定是字典当中的单词。</p><p><strong>示例1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入："tactcoa"</span><br><span class="line">输出：true（排列有"tacocat"、"atcocta"，等等）</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><p>用到回文一个性质 奇数个数的元素 只可能存在一个 或 0个</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canPermutePalindrome</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        <span class="keyword">int</span> jishuCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> ch:s)</span><br><span class="line">            mapp[ch]++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> it = mapp.<span class="built_in">begin</span>(); it!=mapp.<span class="built_in">end</span>(); it++){</span><br><span class="line">            <span class="keyword">if</span>(it-&gt;second%<span class="number">2</span>)</span><br><span class="line">                jishuCount++;</span><br><span class="line">            <span class="keyword">if</span>(jishuCount&gt;<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-019-最多删除一个字符得到回文"><a href="#剑指-Offer-II-019-最多删除一个字符得到回文" class="headerlink" title="剑指 Offer II 019. 最多删除一个字符得到回文"></a><a href="https://leetcode-cn.com/problems/RQku0D/">剑指 Offer II 019. 最多删除一个字符得到回文</a></h3><p>难度简单28英文版讨论区</p><p>给定一个非空字符串 <code>s</code>，请判断如果 <strong>最多</strong> 从字符串中删除一个字符能否得到一个回文字符串。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "aba"</span><br><span class="line">输出: true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "abca"</span><br><span class="line">输出: true</span><br><span class="line">解释: 可以删除 "c" 字符 或者 "b" 字符</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "abc"</span><br><span class="line">输出: false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><p>不等的时候 判断两次字串</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">validPalindrome</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">bool</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">if</span>(s[left] != s[right]){</span><br><span class="line">                <span class="comment">//cout&lt;&lt;s.substr(left + 1, right-left)&lt;&lt;endl;</span></span><br><span class="line">                <span class="comment">//cout&lt;&lt;s.substr(left, right-left)&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">isPalidromee</span>(s.<span class="built_in">substr</span>(left + <span class="number">1</span>, right-left)) || </span><br><span class="line">                <span class="built_in">isPalidromee</span>(s.<span class="built_in">substr</span>(left, right-left));</span><br><span class="line">                <span class="comment">//return isPalidrome(s, left) || isPalidrome(s, right);</span></span><br><span class="line">            }</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalidrome</span><span class="params">(string&amp; s, <span class="keyword">int</span> pos)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">            <span class="keyword">if</span>(left == pos || right == pos){</span><br><span class="line">                <span class="keyword">if</span>(left == pos)</span><br><span class="line">                    left++;</span><br><span class="line">                <span class="keyword">else</span> right--;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(s[left] != s[right]){</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalidromee</span><span class="params">(string s)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">if</span>(s[left] != s[right])</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="866-回文素数-构造回文数"><a href="#866-回文素数-构造回文数" class="headerlink" title="866. 回文素数 构造回文数"></a><a href="https://leetcode-cn.com/problems/prime-palindrome/">866. 回文素数</a> 构造回文数</h3><p>难度中等77英文版讨论区</p><p>求出大于或等于 <code>N</code> 的最小回文素数。</p><p>回顾一下，如果一个数大于 1，且其因数只有 1 和它自身，那么这个数是<em>素数</em>。</p><p>例如，2，3，5，7，11 以及 13 是素数。</p><p>回顾一下，如果一个数从左往右读与从右往左读是一样的，那么这个数是<em>回文数。</em></p><p>例如，12321 是回文数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：6</span><br><span class="line">输出：7</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：8</span><br><span class="line">输出：11</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：13</span><br><span class="line">输出：101</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>枚举所有回文数, 并判断是否为质数;<br>模拟回文数的方法, 计算回文根, 再生成回文数;<br>举例: 回文根为123, 可以构成的回文数为12321, 123321; </p><blockquote><p>left - right 1-10 一次while生成的回文数 1-9 和11 22 33 44 55…99</p><p>left - right 10-100 一次while生成的回文数 101 111 121 131…999 和 1001 1111 1221 1331…9999</p><p>……</p></blockquote><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPrim</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{ <span class="comment">/* 质数判断 */</span></span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">1</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(x); i++) {</span><br><span class="line">            <span class="keyword">if</span> (x % i == <span class="number">0</span>) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重点函数 背一下</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">primePalindrome</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) {</span><br><span class="line">            <span class="keyword">int</span> right = left * <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> op = <span class="number">0</span>; op &lt; <span class="number">2</span>; op++) {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = left; i &lt; right; i++) {</span><br><span class="line">                    <span class="keyword">int</span> sum = i;</span><br><span class="line">                    <span class="keyword">int</span> x = (op == <span class="number">0</span>) ? i / <span class="number">10</span> : i;</span><br><span class="line">                    <span class="keyword">while</span> (x &gt; <span class="number">0</span>) { <span class="comment">/* 构造回文数 */</span></span><br><span class="line">                        sum = sum * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">                        x /= <span class="number">10</span>;</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">if</span> (sum &gt;= n &amp;&amp; <span class="built_in">isPrim</span>(sum)) { <span class="comment">/* 判断是否&gt;=n且为质数 */</span></span><br><span class="line">                        <span class="keyword">return</span> sum;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            left = right;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="剑指-Offer-II-020-回文子字符串的个数"><a href="#剑指-Offer-II-020-回文子字符串的个数" class="headerlink" title="剑指 Offer II 020. 回文子字符串的个数"></a><a href="https://leetcode-cn.com/problems/a7VOhD/">剑指 Offer II 020. 回文子字符串的个数</a></h4><p>难度中等40</p><p>给定一个字符串 <code>s</code> ，请计算这个字符串中有多少个回文子字符串。</p><p>具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被视作不同的子串。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "abc"</span><br><span class="line">输出：3</span><br><span class="line">解释：三个回文子串: "a", "b", "c"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "aaa"</span><br><span class="line">输出：6</span><br><span class="line">解释：6个回文子串: "a", "a", "a", "aa", "aa", "aaa"</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><ol><li>假设size = 4 一个循环解决回文中心奇数 偶数两种情况</li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220406112344685.png" alt="image-20220406112344685" style="zoom: 67%;"><ol start="2"><li>马拉车算法，我选择放弃<a href="https://www.zhihu.com/question/37289584">有什么浅显易懂的Manacher Algorithm讲解？ - 知乎 (zhihu.com)</a></li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一次</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;s.<span class="built_in">size</span>()*<span class="number">2</span><span class="number">-1</span>; i++){</span><br><span class="line">            <span class="keyword">int</span> left = i/<span class="number">2</span>, right = left + i%<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span>(left&gt;=<span class="number">0</span> &amp;&amp; right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">                <span class="keyword">if</span>(s[left] == s[right])</span><br><span class="line">                    ans++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">                left--;</span><br><span class="line">                right++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//两次好理解</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;s.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">int</span> left = i, right = i;</span><br><span class="line">            <span class="keyword">while</span>(left&gt;=<span class="number">0</span> &amp;&amp; right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">                <span class="keyword">if</span>(s[left] == s[right])</span><br><span class="line">                    ans++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">                left--;</span><br><span class="line">                right++;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            left = i, right = i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(left&gt;=<span class="number">0</span> &amp;&amp; right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">                <span class="keyword">if</span>(s[left] == s[right])</span><br><span class="line">                    ans++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">                left--;</span><br><span class="line">                right++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//马拉车算法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        string t = <span class="string">"$#"</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">char</span> &amp;c: s) {</span><br><span class="line">            t += c;</span><br><span class="line">            t += <span class="string">'#'</span>;</span><br><span class="line">        }</span><br><span class="line">        n = t.<span class="built_in">size</span>();</span><br><span class="line">        t += <span class="string">'!'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> f = vector &lt;<span class="keyword">int</span>&gt; (n);</span><br><span class="line">        <span class="keyword">int</span> iMax = <span class="number">0</span>, rMax = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) {</span><br><span class="line">            <span class="comment">// 初始化 f[i]</span></span><br><span class="line">            f[i] = (i &lt;= rMax) ? <span class="built_in">min</span>(rMax - i + <span class="number">1</span>, f[<span class="number">2</span> * iMax - i]) : <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 中心拓展</span></span><br><span class="line">            <span class="keyword">while</span> (t[i + f[i]] == t[i - f[i]]) ++f[i];</span><br><span class="line">            <span class="comment">// 动态维护 iMax 和 rMax</span></span><br><span class="line">            <span class="keyword">if</span> (i + f[i] - <span class="number">1</span> &gt; rMax) {</span><br><span class="line">                iMax = i;</span><br><span class="line">                rMax = i + f[i] - <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 统计答案, 当前贡献为 (f[i] - 1) / 2 上取整</span></span><br><span class="line">            ans += (f[i] / <span class="number">2</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window下添加右键操作</title>
      <link href="/2022/04/02/window-xia-tian-jia-you-jian-cao-zuo/"/>
      <url>/2022/04/02/window-xia-tian-jia-you-jian-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h3 id="以sublime为例"><a href="#以sublime为例" class="headerlink" title="以sublime为例"></a>以sublime为例</h3><h4 id="右键打开文件"><a href="#右键打开文件" class="headerlink" title="右键打开文件"></a>右键打开文件</h4><ol><li>Win + R，输入regedit,打开注册表</li><li>找到如图路径，做成我的目录结构就可以了</li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220402160540332.png" style="zoom: 67%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220402160516575.png" alt="image-20220402160516575" style="zoom: 67%;"><h4 id="右键打开文件夹"><a href="#右键打开文件夹" class="headerlink" title="右键打开文件夹"></a>右键打开文件夹</h4><h5 id="和上面差不多-做成类似如图的目录结构-简简单单"><a href="#和上面差不多-做成类似如图的目录结构-简简单单" class="headerlink" title="和上面差不多 做成类似如图的目录结构 简简单单"></a>和上面差不多 做成类似如图的目录结构 简简单单</h5><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220402160806130.png" alt="image-20220402160806130" style="zoom: 67%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220402160823636.png" alt="image-20220402160823636" style="zoom: 67%;">]]></content>
      
      
      
        <tags>
            
            <tag> 开发随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模拟加减乘除</title>
      <link href="/2022/04/01/mo-ni-yun-suan/"/>
      <url>/2022/04/01/mo-ni-yun-suan/</url>
      
        <content type="html"><![CDATA[<h3 id="剑指-Offer-II-002-二进制加法"><a href="#剑指-Offer-II-002-二进制加法" class="headerlink" title="剑指 Offer II 002. 二进制加法"></a><a href="https://leetcode-cn.com/problems/JFETK5/">剑指 Offer II 002. 二进制加法</a></h3><p>难度简单27</p><p>给定两个 01 字符串 <code>a</code> 和 <code>b</code> ，请计算它们的和，并以二进制字符串的形式输出。</p><p>输入为 <strong>非空</strong> 字符串且只包含数字 <code>1</code> 和 <code>0</code>。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: a = "11", b = "10"</span><br><span class="line">输出: "101"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: a = "1010", b = "1011"</span><br><span class="line">输出: "10101"</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>模拟相加 注意下写法</li><li>位运算</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>模拟</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">addBinary</span><span class="params">(string a, string b)</span> </span>{</span><br><span class="line">        string ans;</span><br><span class="line">        <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">reverse</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> n = <span class="built_in">max</span>(a.<span class="built_in">size</span>(), b.<span class="built_in">size</span>()), carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            carry+= i&lt;a.<span class="built_in">size</span>()?a[i] ==<span class="string">'1'</span>:<span class="number">0</span>;</span><br><span class="line">            carry+= i&lt;b.<span class="built_in">size</span>()?b[i] ==<span class="string">'1'</span>:<span class="number">0</span>;</span><br><span class="line">            ans += <span class="built_in">to_string</span>(carry%<span class="number">2</span>);</span><br><span class="line">            carry/=<span class="number">2</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (carry) {</span><br><span class="line">            ans.<span class="built_in">push_back</span>(<span class="string">'1'</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="989-数组形式的整数加法"><a href="#989-数组形式的整数加法" class="headerlink" title="989. 数组形式的整数加法"></a><a href="https://leetcode-cn.com/problems/add-to-array-form-of-integer/">989. 数组形式的整数加法</a></h3><p>难度简单191</p><p>整数的 <strong>数组形式</strong> <code>num</code> 是按照从左到右的顺序表示其数字的数组。</p><ul><li>例如，对于 <code>num = 1321</code> ，数组形式是 <code>[1,3,2,1]</code> 。</li></ul><p>给定 <code>num</code> ，整数的 <strong>数组形式</strong> ，和整数 <code>k</code> ，返回 <em>整数 <code>num + k</code> 的 <strong>数组形式</strong></em> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：num = [1,2,0,0], k = 34</span><br><span class="line">输出：[1,2,3,4]</span><br><span class="line">解释：1200 + 34 = 1234</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：num = [2,7,4], k = 181</span><br><span class="line">输出：[4,5,5]</span><br><span class="line">解释：274 + 181 = 455</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：num = [2,1,5], k = 806</span><br><span class="line">输出：[1,0,2,1]</span><br><span class="line">解释：215 + 806 = 1021</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>k转为vector 按位相加</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">addToArrayForm</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; num, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; num2;</span><br><span class="line">        <span class="keyword">while</span>(k){</span><br><span class="line">            <span class="keyword">int</span> temp = k%<span class="number">10</span>;</span><br><span class="line">            k/=<span class="number">10</span>;</span><br><span class="line">            num2.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">reverse</span>(num.<span class="built_in">begin</span>(), num.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> maxSize = <span class="built_in">max</span>(num.<span class="built_in">size</span>(), num2.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;maxSize; i++){</span><br><span class="line">            carry+=i&lt;num.<span class="built_in">size</span>()?num[i]:<span class="number">0</span>;</span><br><span class="line">            carry+=i&lt;num2.<span class="built_in">size</span>()?num2[i]:<span class="number">0</span>;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(carry%<span class="number">10</span>);</span><br><span class="line">            carry/=<span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(carry) ans.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="66-加一"><a href="#66-加一" class="headerlink" title="66. 加一"></a><a href="https://leetcode-cn.com/problems/plus-one/">66. 加一</a></h3><p>难度简单972</p><p>给定一个由 <strong>整数</strong> 组成的 <strong>非空</strong> 数组所表示的非负整数，在该数的基础上加一。</p><p>最高位数字存放在数组的首位， 数组中每个元素只存储<strong>单个</strong>数字。</p><p>你可以假设除了整数 0 之外，这个整数不会以零开头。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：digits = [1,2,3]</span><br><span class="line">输出：[1,2,4]</span><br><span class="line">解释：输入数组表示数字 123。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：digits = [4,3,2,1]</span><br><span class="line">输出：[4,3,2,2]</span><br><span class="line">解释：输入数组表示数字 4321。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：digits = [0]</span><br><span class="line">输出：[1]</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//统一写法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">plusOne</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; digits)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(digits.size())</span></span>;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = digits.<span class="built_in">size</span>()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--){</span><br><span class="line">            <span class="keyword">if</span>(i == digits.<span class="built_in">size</span>()<span class="number">-1</span>){</span><br><span class="line">                carry++;</span><br><span class="line">            }</span><br><span class="line">            carry+=digits[i];</span><br><span class="line">            ans[i] = (carry%<span class="number">10</span>);</span><br><span class="line">            carry/=<span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(carry) ans.<span class="built_in">insert</span>(ans.<span class="built_in">begin</span>(), <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//原地修改</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">plusOne</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; digits)</span> </span>{</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = digits.<span class="built_in">size</span>()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--){</span><br><span class="line">            <span class="keyword">if</span> (digits[i] == <span class="number">9</span>){</span><br><span class="line">                digits[i] = <span class="number">0</span>;</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                digits[i]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(digits[<span class="number">0</span>] == <span class="number">0</span>){</span><br><span class="line">            digits[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            digits.<span class="built_in">push_back</span>(<span class="number">0</span>); </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> digits;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="415-字符串相加"><a href="#415-字符串相加" class="headerlink" title="415. 字符串相加"></a><a href="https://leetcode-cn.com/problems/add-strings/">415. 字符串相加</a></h3><p>难度简单534</p><p>给定两个字符串形式的非负整数 <code>num1</code> 和<code>num2</code> ，计算它们的和并同样以字符串形式返回。</p><p>你不能使用任何內建的用于处理大整数的库（比如 <code>BigInteger</code>）， 也不能直接将输入的字符串转换为整数形式。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：num1 = "11", num2 = "123"</span><br><span class="line">输出："134"</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">addStrings</span><span class="params">(string num1, string num2)</span> </span>{</span><br><span class="line">        string ans = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> maxSize = <span class="built_in">max</span>(num1.<span class="built_in">size</span>(), num2.<span class="built_in">size</span>());</span><br><span class="line">        <span class="built_in">reverse</span>(num1.<span class="built_in">begin</span>(), num1.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">reverse</span>(num2.<span class="built_in">begin</span>(), num2.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;maxSize; i++){</span><br><span class="line">            carry+=i&lt;num1.<span class="built_in">size</span>()?(num1[i] - <span class="string">'0'</span>):<span class="number">0</span>;</span><br><span class="line">            carry+=i&lt;num2.<span class="built_in">size</span>()?(num2[i] - <span class="string">'0'</span>):<span class="number">0</span>;</span><br><span class="line">            ans+=<span class="built_in">to_string</span>(carry%<span class="number">10</span>);a</span><br><span class="line">            carry/=<span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(carry) ans+=<span class="string">"1"</span>;</span><br><span class="line">        <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="2-两数相加"><a href="#2-两数相加" class="headerlink" title="2. 两数相加"></a><a href="https://leetcode-cn.com/problems/add-two-numbers/">2. 两数相加</a></h3><p><a href="https://leetcode-cn.com/problems/add-two-numbers/#">思路</a></p><p>难度中等7812</p><p>给你两个 <strong>非空</strong> 的链表，表示两个非负的整数。它们每位数字都是按照 <strong>逆序</strong> 的方式存储的，并且每个节点只能存储 <strong>一位</strong> 数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/addtwonumber1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class="line">输出：[7,0,8]</span><br><span class="line">解释：342 + 465 = 807.</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [0], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</span><br><span class="line">输出：[8,9,9,9,0,0,0,1]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>就模拟吗</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>{</span><br><span class="line">        ListNode* ans = <span class="keyword">new</span> <span class="built_in">ListNode</span>();</span><br><span class="line">        ListNode* temp = ans;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l1 || l2){</span><br><span class="line">            carry+= l1?l1-&gt;val:<span class="number">0</span>;</span><br><span class="line">            carry+= l2?l2-&gt;val:<span class="number">0</span>;</span><br><span class="line">            l1 = l1?l1-&gt;next:l1;</span><br><span class="line">            l2 = l2?l2-&gt;next:l2;</span><br><span class="line">            temp-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(carry%<span class="number">10</span>);</span><br><span class="line">            temp = temp-&gt;next;</span><br><span class="line">            carry/=<span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(carry) temp-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> ans-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单调栈</title>
      <link href="/2022/03/30/dan-diao-zhan/"/>
      <url>/2022/03/30/dan-diao-zhan/</url>
      
        <content type="html"><![CDATA[<p><u><strong>通常是一维数组，要寻找任一个元素的右边或者左边第一个比自己大或者小的元素的位置，此时我们就要想到可以用单调栈了</strong>。</u></p><p>时间复杂度为$O(n)$。</p><p>例如本题其实就是找找到一个元素右边第一个比自己大的元素。</p><p>此时就应该想到用单调栈了。</p><p>那么单调栈的原理是什么呢？为什么时间复杂度是$O(n)$就可以找到每一个元素的右边第一个比它大的元素位置呢？</p><p>单调栈的本质是空间换时间，因为在遍历的过程中需要用一个栈来记录右边第一个比当前元素的元素，优点是只需要遍历一次。</p><p>在使用单调栈的时候首先要明确如下几点：</p><ol><li>单调栈里存放的元素是什么？</li></ol><p>单调栈里只需要存放元素的<code>下标i</code>就可以了，如果需要使用对应的元素，直接T[i]就可以获取。</p><ol start="2"><li>单调栈里元素是递增呢？ 还是递减呢？</li></ol><p><strong>注意一下顺序为 从栈头到栈底的顺序</strong>，因为单纯的说从左到右或者从前到后，不说栈头朝哪个方向的话，大家一定会越看越懵。</p><p>这里我们要使用递增循序（再强调一下是指从栈头到栈底的顺序），因为只有递增的时候，加入一个元素i，才知道栈顶元素在数组中右面第一个比栈顶元素大的元素是i。</p><p>使用单调栈主要有三个判断条件。</p><ul><li>当前遍历的元素T[i]小于栈顶元素T[st.top()]的情况</li><li>当前遍历的元素T[i]等于栈顶元素T[st.top()]的情况</li><li>当前遍历的元素T[i]大于栈顶元素T[st.top()]的情况</li></ul><p>==<u>约定： 递增栈为头到底递增</u>==</p><h3 id="739-每日温度"><a href="#739-每日温度" class="headerlink" title="739. 每日温度"></a><a href="https://leetcode-cn.com/problems/daily-temperatures/">739. 每日温度</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=739">labuladong 题解</a></p><p>难度中等1081收藏分享切换为英文接收动态反馈</p><p>给定一个整数数组 <code>temperatures</code> ，表示每天的温度，返回一个数组 <code>answer</code> ，其中 <code>answer[i]</code> 是指在第 <code>i</code> 天之后，才会有更高的温度。如果气温在这之后都不会升高，请在该位置用 <code>0</code> 来代替。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [73,74,75,71,69,72,76,73]</span><br><span class="line">输出: [1,1,4,2,1,1,0,0]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [30,40,50,60]</span><br><span class="line">输出: [1,1,1,0]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: temperatures = [30,60,90]</span><br><span class="line">输出: [1,1,0]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a><a href="https://programmercarl.com/0739.%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6.html#%E6%80%9D%E8%B7%AF">思路</a></h4><p>递增单调栈  （元素&lt;=栈顶元素时 入栈）</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dailyTemperatures</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="comment">//0特判</span></span><br><span class="line">            <span class="keyword">if</span>(stk.<span class="built_in">empty</span>()){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//元素&lt;=栈顶元素时 入栈</span></span><br><span class="line">            <span class="keyword">if</span>(nums[i]&lt;=nums[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; nums[stk.<span class="built_in">top</span>()]&lt;nums[i]){</span><br><span class="line">                    <span class="keyword">int</span> now = stk.<span class="built_in">top</span>();</span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                    ans[now] = (i - now);                    </span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="496-下一个更大元素-I"><a href="#496-下一个更大元素-I" class="headerlink" title="496. 下一个更大元素 I"></a><a href="https://leetcode-cn.com/problems/next-greater-element-i/">496. 下一个更大元素 I</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=496">labuladong 题解</a></p><p>难度简单676英文版讨论区</p><p><code>nums1</code> 中数字 <code>x</code> 的 <strong>下一个更大元素</strong> 是指 <code>x</code> 在 <code>nums2</code> 中对应位置 <strong>右侧</strong> 的 <strong>第一个</strong> 比 <code>x</code> 大的元素。</p><p>给你两个 <strong>没有重复元素</strong> 的数组 <code>nums1</code> 和 <code>nums2</code> ，下标从 <strong>0</strong> 开始计数，其中<code>nums1</code> 是 <code>nums2</code> 的子集。</p><p>对于每个 <code>0 &lt;= i &lt; nums1.length</code> ，找出满足 <code>nums1[i] == nums2[j]</code> 的下标 <code>j</code> ，并且在 <code>nums2</code> 确定 <code>nums2[j]</code> 的 <strong>下一个更大元素</strong> 。如果不存在下一个更大元素，那么本次查询的答案是 <code>-1</code> 。</p><p>返回一个长度为 <code>nums1.length</code> 的数组 <code>ans</code> 作为答案，满足 <code>ans[i]</code> 是如上所述的 <strong>下一个更大元素</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 = [4,1,2], nums2 = [1,3,4,2].</span><br><span class="line">输出：[-1,3,-1]</span><br><span class="line">解释：nums1 中每个值的下一个更大元素如下所述：</span><br><span class="line">- 4 ，用加粗斜体标识，nums2 = [1,3,4,2]。不存在下一个更大元素，所以答案是 -1 。</span><br><span class="line">- 1 ，用加粗斜体标识，nums2 = [1,3,4,2]。下一个更大元素是 3 。</span><br><span class="line">- 2 ，用加粗斜体标识，nums2 = [1,3,4,2]。不存在下一个更大元素，所以答案是 -1 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 = [2,4], nums2 = [1,2,3,4].</span><br><span class="line">输出：[3,-1]</span><br><span class="line">解释：nums1 中每个值的下一个更大元素如下所述：</span><br><span class="line">- 2 ，用加粗斜体标识，nums2 = [1,2,3,4]。下一个更大元素是 3 。</span><br><span class="line">- 4 ，用加粗斜体标识，nums2 = [1,2,3,4]。不存在下一个更大元素，所以答案是 -1 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>这道题虽然是简单题 但是难度比每日温度大</li><li>用一个哈希记录nums1，再对nums2使用单调栈</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nextGreaterElement</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums1, vector&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = nums1.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(m, <span class="number">-1</span>)</span></span>;</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">            mapp[nums1[i]] = i;</span><br><span class="line">        <span class="keyword">int</span> n = nums2.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(stk.<span class="built_in">empty</span>()){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(nums2[stk.<span class="built_in">top</span>()]&gt;= nums2[i])</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; nums2[stk.<span class="built_in">top</span>()] &lt; nums2[i]){</span><br><span class="line">                    <span class="keyword">int</span> nowI = stk.<span class="built_in">top</span>();</span><br><span class="line">                    <span class="comment">//判断是否是nums1中的元素</span></span><br><span class="line">                    <span class="keyword">if</span>(mapp.<span class="built_in">count</span>(nums2[nowI])){</span><br><span class="line">                        <span class="keyword">int</span> index = mapp[nums2[nowI]];</span><br><span class="line">                        ans[index] = nums2[i];</span><br><span class="line">                    }</span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="503-下一个更大元素-II"><a href="#503-下一个更大元素-II" class="headerlink" title="503. 下一个更大元素 II"></a><a href="https://leetcode-cn.com/problems/next-greater-element-ii/">503. 下一个更大元素 II</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=503">labuladong 题解</a></p><p>难度中等586英文版讨论区</p><p>给定一个循环数组 <code>nums</code> （ <code>nums[nums.length - 1]</code> 的下一个元素是 <code>nums[0]</code> ），返回 <em><code>nums</code> 中每个元素的 <strong>下一个更大元素</strong></em> 。</p><p>数字 <code>x</code> 的 <strong>下一个更大的元素</strong> 是按数组遍历顺序，这个数字之后的第一个比它更大的数，这意味着你应该循环地搜索它的下一个更大的数。如果不存在，则输出 <code>-1</code> 。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,1]</span><br><span class="line">输出: [2,-1,2]</span><br><span class="line">解释: 第一个 1 的下一个更大的数是 2；</span><br><span class="line">数字 2 找不到下一个更大的数； </span><br><span class="line">第二个 1 的下一个最大的数需要循环搜索，结果也是 2。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,3,4,3]</span><br><span class="line">输出: [2,3,4,-1,4]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>再拼接一个数组 对二倍长度的数组进行统计 最后将结果resize为原大小</li><li>循环起来，遍历的时候遍历二倍大小 用%n来进行循环</li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><h5 id="二倍数组拼接"><a href="#二倍数组拼接" class="headerlink" title="二倍数组拼接"></a>二倍数组拼接</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nextGreaterElements</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        n*=<span class="number">2</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nums1</span><span class="params">(nums.begin(), nums.end())</span></span>;</span><br><span class="line">        nums.<span class="built_in">insert</span>(nums.<span class="built_in">end</span>(), nums1.<span class="built_in">begin</span>(), nums1.<span class="built_in">end</span>());</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n, <span class="number">-1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(stk.<span class="built_in">empty</span>()){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(nums[stk.<span class="built_in">top</span>()]&gt;=nums[i]){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; nums[stk.<span class="built_in">top</span>()]&lt;nums[i]){</span><br><span class="line">                    ans[stk.<span class="built_in">top</span>()] = nums[i];</span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        ans.<span class="built_in">resize</span>(n/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="二倍循环-n"><a href="#二倍循环-n" class="headerlink" title="二倍循环%n"></a>二倍循环%n</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nextGreaterElements</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n, <span class="number">-1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n*<span class="number">2</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(stk.<span class="built_in">empty</span>()){</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; nums[stk.<span class="built_in">top</span>()]&lt;nums[i%n]){</span><br><span class="line">                ans[stk.<span class="built_in">top</span>()] = nums[i%n];</span><br><span class="line">                stk.<span class="built_in">pop</span>();</span><br><span class="line">            }</span><br><span class="line">            stk.<span class="built_in">push</span>(i%n);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="42-接雨水"><a href="#42-接雨水" class="headerlink" title="42. 接雨水"></a><a href="https://leetcode-cn.com/problems/trapping-rain-water/">42. 接雨水</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=42">labuladong 题解</a><a href="https://leetcode-cn.com/problems/trapping-rain-water/#">思路</a></p><p>难度困难3289英文版讨论区</p><p>给定 <code>n</code> 个非负整数表示每个宽度为 <code>1</code> 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/rainwatertrap.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：height = [0,1,0,2,1,0,1,3,2,1,2,1]</span><br><span class="line">输出：6</span><br><span class="line">解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。 </span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：height = [4,2,0,3,2,5]</span><br><span class="line">输出：9</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li>On2暴力 </li><li>dp 多次遍历 保存最值</li><li>最小栈</li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><h5 id="On2暴力"><a href="#On2暴力" class="headerlink" title="On2暴力"></a>On2暴力</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//暴力超时</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = height.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span> || i == n<span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> rHeight = height[i];</span><br><span class="line">            <span class="keyword">int</span> lHeight = height[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> r = i+<span class="number">1</span>; r&lt;n; r++){</span><br><span class="line">                <span class="keyword">if</span>(height[r]&gt;rHeight) rHeight = height[r];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> l = i<span class="number">-1</span>; l&gt;=<span class="number">0</span>; l--){</span><br><span class="line">                <span class="keyword">if</span>(height[l]&gt;lHeight) lHeight = height[l];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">int</span> h = <span class="built_in">min</span>(lHeight, rHeight) - height[i];</span><br><span class="line">            <span class="keyword">if</span>(h&gt;<span class="number">0</span>) sum+=h;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="dp-多次遍历-保存最值"><a href="#dp-多次遍历-保存最值" class="headerlink" title="dp 多次遍历 保存最值"></a>dp 多次遍历 保存最值</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dp解法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = height.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">leftH</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">rightH</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        leftH[<span class="number">0</span>] = height[<span class="number">0</span>];</span><br><span class="line">        rightH[n<span class="number">-1</span>] = height[n<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n; i++){</span><br><span class="line">            leftH[i] = <span class="built_in">max</span>(height[i], leftH[i<span class="number">-1</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n<span class="number">-2</span>; i&gt;=<span class="number">0</span>; i--){</span><br><span class="line">            rightH[i] = <span class="built_in">max</span>(height[i], rightH[i+<span class="number">1</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> h = <span class="built_in">min</span>(leftH[i], rightH[i]) - height[i];</span><br><span class="line">            <span class="keyword">if</span>(h&gt;<span class="number">0</span>) sum+=h;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="最小栈"><a href="#最小栈" class="headerlink" title="最小栈"></a>最小栈</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最小栈</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = height.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        stk.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(height[i]&lt;height[stk.<span class="built_in">top</span>()])</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(height[i] == height[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                stk.<span class="built_in">pop</span>();</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="comment">//每个坑坑洼洼的地方计算一次</span></span><br><span class="line">                <span class="keyword">while</span>(!stk.<span class="built_in">empty</span>() &amp;&amp; height[i]&gt;height[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                    <span class="keyword">int</span> mid = stk.<span class="built_in">top</span>();</span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                    <span class="keyword">if</span>(!stk.<span class="built_in">empty</span>()){</span><br><span class="line">                        <span class="keyword">int</span> h = <span class="built_in">min</span>(height[stk.<span class="built_in">top</span>()], height[i]) - height[mid];</span><br><span class="line">                        <span class="keyword">int</span> w = i - stk.<span class="built_in">top</span>() - <span class="number">1</span>;</span><br><span class="line">                        sum += h*w;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="84-柱状图中最大的矩形"><a href="#84-柱状图中最大的矩形" class="headerlink" title="84. 柱状图中最大的矩形"></a><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram/">84. 柱状图中最大的矩形</a></h3><p>难度困难1849</p><p>给定 <em>n</em> 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。</p><p>求在该柱状图中，能够勾勒出来的矩形的最大面积。</p><p><strong>示例 1:</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/histogram.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：heights = [2,1,5,6,2,3]</span><br><span class="line">输出：10</span><br><span class="line">解释：最大的矩形为图中红色区域，面积为 10</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/histogram-1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入： heights = [2,4]</span><br><span class="line">输出： 4</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li><p>动态规划</p><p>本题动态规划的写法整体思路和<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>是一致的，但要比<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>难一些。难就难在本题要记录记录每个柱子 左边第一个小于该柱子的下标，而不是左边第一个小于该柱子的高度。所以需要循环查找，也就是下面在寻找的过程中使用了while</p></li><li><p>单调栈</p><p>本地单调栈的解法和接雨水的题目是遥相呼应的。</p><p>为什么这么说呢，<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>是找每个柱子左右两边第一个大于该柱子高度的柱子，而本题是找每个柱子左右两边第一个小于该柱子的柱子。</p><p><strong>这里就涉及到了单调栈很重要的性质，就是单调栈里的顺序，是从小到大还是从大到小</strong>。</p><p>在题解<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>中我讲解了接雨水的单调栈从栈头（元素从栈头弹出）到栈底的顺序应该是从小到大的顺序。</p><p>那么因为本题是要找每个柱子左右两边第一个小于该柱子的柱子，所以从栈头（元素从栈头弹出）到栈底的顺序应该是从大到小的顺序！</p><p>我来举一个例子，如图：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/20210223155303971.jpg" alt="84.柱状图中最大的矩形" style="zoom:50%;"><p>只有栈里从大到小的顺序，才能保证栈顶元素找到左右两边第一个小于栈顶元素的柱子。</p><p>所以本题单调栈的顺序正好与接雨水反过来。</p><p>此时大家应该可以发现其实就是<strong>栈顶和栈顶的下一个元素以及要入栈的三个元素组成了我们要求最大面积的高度和宽度</strong></p><p>理解这一点，对单调栈就掌握的比较到位了。</p><p>除了栈内元素顺序和接雨水不同，剩下的逻辑就都差不多了，在题解<a href="https://programmercarl.com/0042.%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">42. 接雨水 (opens new window)</a>我已经对单调栈的各个方面做了详细讲解，这里就不赘述了。</p><p>剩下就是分析清楚如下三种情况：</p><ul><li>情况一：当前遍历的元素heights[i]小于栈顶元素heights[st.top()]的情况</li><li>情况二：当前遍历的元素heights[i]等于栈顶元素heights[st.top()]的情况</li><li>情况三：当前遍历的元素heights[i]大于栈顶元素heights[st.top()]的情况</li></ul></li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220331164646464.png" alt="image-20220331164646464" style="zoom: 67%;"><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><h5 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h5><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">largestRectangleArea</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; heights)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">minLeftIndex</span><span class="params">(heights.size())</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">minRightIndex</span><span class="params">(heights.size())</span></span>;</span><br><span class="line">        <span class="keyword">int</span> size = heights.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录每个柱子 左边第一个小于该柱子的下标</span></span><br><span class="line">        minLeftIndex[<span class="number">0</span>] = <span class="number">-1</span>; <span class="comment">// 注意这里初始化，防止下面while死循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; size; i++) {</span><br><span class="line">            <span class="keyword">int</span> t = i - <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 这里不是用if，而是不断向左寻找的过程</span></span><br><span class="line">            <span class="keyword">while</span> (t &gt;= <span class="number">0</span> &amp;&amp; heights[t] &gt;= heights[i]) t = minLeftIndex[t];</span><br><span class="line">            minLeftIndex[i] = t;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 记录每个柱子 右边第一个小于该柱子的下标</span></span><br><span class="line">        minRightIndex[size - <span class="number">1</span>] = size; <span class="comment">// 注意这里初始化，防止下面while死循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) {</span><br><span class="line">            <span class="keyword">int</span> t = i + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 这里不是用if，而是不断向右寻找的过程</span></span><br><span class="line">            <span class="keyword">while</span> (t &lt; size &amp;&amp; heights[t] &gt;= heights[i]) t = minRightIndex[t];</span><br><span class="line">            minRightIndex[i] = t;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 求和</span></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) {</span><br><span class="line">            <span class="keyword">int</span> sum = heights[i] * (minRightIndex[i] - minLeftIndex[i] - <span class="number">1</span>);</span><br><span class="line">            result = <span class="built_in">max</span>(sum, result);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="单调栈-略微背一下吧"><a href="#单调栈-略微背一下吧" class="headerlink" title="单调栈  略微背一下吧"></a>单调栈  略微背一下吧</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">largestRectangleArea</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; heights)</span> </span>{</span><br><span class="line">        stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        heights.<span class="built_in">insert</span>(heights.<span class="built_in">begin</span>(), <span class="number">0</span>);</span><br><span class="line">        heights.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">        stk.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;heights.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(heights[i]&gt;heights[stk.<span class="built_in">top</span>()])</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(heights[i] == heights[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                stk.<span class="built_in">pop</span>();</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">while</span>(heights[i] &lt; heights[stk.<span class="built_in">top</span>()]){</span><br><span class="line">                    <span class="keyword">int</span> mid = stk.<span class="built_in">top</span>(); <span class="comment">//当前矩形高的位置</span></span><br><span class="line">                    stk.<span class="built_in">pop</span>();</span><br><span class="line">                    <span class="keyword">int</span> left = stk.<span class="built_in">top</span>();</span><br><span class="line">                    <span class="keyword">int</span> right = i;  <span class="comment">//记录当前值以计算宽</span></span><br><span class="line">                    <span class="keyword">int</span> w = right - left - <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">int</span> h = heights[mid];</span><br><span class="line">                    ans = <span class="built_in">max</span>(ans, w*h);</span><br><span class="line">                }</span><br><span class="line">                stk.<span class="built_in">push</span>(i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++STL</title>
      <link href="/2022/03/30/c-stl-duan/"/>
      <url>/2022/03/30/c-stl-duan/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0c4a8247fbcf826e1cf2d258ac2059d7148ae8c6d9fb3ffd39c8f6786e71020e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目问题</title>
      <link href="/2022/03/26/xiang-mu-wen-ti/"/>
      <url>/2022/03/26/xiang-mu-wen-ti/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0e4b1715c70996eb5bf39b2a33cf53b57cbac88482c5e87754cd8fee27babb90"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode常用库函数</title>
      <link href="/2022/03/24/c-leetcode-chang-yong-ku-han-shu/"/>
      <url>/2022/03/24/c-leetcode-chang-yong-ku-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="c-leetcode-常用库函数"><a href="#c-leetcode-常用库函数" class="headerlink" title="c++ leetcode 常用库函数"></a>c++ leetcode 常用库函数</h1><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><h2 id="2-字符-串-相关"><a href="#2-字符-串-相关" class="headerlink" title="2. 字符(串)相关"></a>2. 字符(串)相关</h2><ol><li><p>判断字符是否为数字、字母</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">isalpha</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为字母</span></span><br><span class="line"><span class="built_in">isdigit</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为数字</span></span><br><span class="line"><span class="built_in">isalnum</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为数字或字母</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>字母的大小写转换</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tolower</span>(<span class="keyword">char</span> c)<span class="comment">//变成小写字母</span></span><br><span class="line"><span class="built_in">toupper</span>(<span class="keyword">char</span> c)<span class="comment">//变成大写字母</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>字符串转整型 stoi:</p><p>stoi(s,start,base)//s是要转换的字符串，start是起始位置，base是要转换的整数进制，默认是从0位置开始，转换为10进制</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">string str = <span class="string">"123"</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="built_in">stoi</span>(str);</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>数值转字符串 to_string</p><p>to_string(val)//val可以是任何数值类型</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">123</span>;</span><br><span class="line">string res = <span class="built_in">to_string</span>(num);</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>分割字符串 分割字符串可以使用getline和istringstream联合实现。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据','号分割字符串，getline默认的是按照行读取，但是指定就按照给定的标志分割。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">string str = <span class="string">"1,2,3,4,5"</span>;</span><br><span class="line"><span class="function">istringstream <span class="title">s_in</span><span class="params">(str)</span></span>;</span><br><span class="line">string c;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(s_in, c, <span class="string">','</span>)) {</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="3-有序查找"><a href="#3-有序查找" class="headerlink" title="3. 有序查找"></a>3. 有序查找</h2><ol><li><p>lower_bound()  大于等于<br>用于在指定区域内(左闭右开)查找<strong>不小于目标值的第一个元素</strong>，也就是说最终查找的不一定是和目标值想等的元素，也可能是比目标值大的元素。其底层实现是二分查找。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;nums{ <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span> };</span><br><span class="line"><span class="keyword">auto</span> it1 = <span class="built_in">lower_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">3</span>);</span><br><span class="line">cout &lt;&lt; *it1&lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="keyword">auto</span> it2 = <span class="built_in">lower_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">4</span>);</span><br><span class="line">cout &lt;&lt; *it2 &lt;&lt; endl; <span class="comment">//5</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>upper_bound() 大于<br>在指定目标区域中查找<strong>大于目标值的第一个元素</strong>，返回该元素所在位置的迭代器。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;nums{ <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span> };</span><br><span class="line"><span class="keyword">auto</span> it1 = <span class="built_in">upper_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">3</span>);</span><br><span class="line">cout &lt;&lt; it1-nums.<span class="built_in">begin</span>()&lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="keyword">auto</span> it2 = <span class="built_in">upper_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">4</span>);</span><br><span class="line">cout &lt;&lt; it2-nums.<span class="built_in">begin</span>() &lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dp</title>
      <link href="/2022/03/18/dp/"/>
      <url>/2022/03/18/dp/</url>
      
        <content type="html"><![CDATA[<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 状态<span class="number">1</span> in 状态<span class="number">1</span>的所有取值：</span><br><span class="line">    <span class="keyword">for</span> 状态<span class="number">2</span> in 状态<span class="number">2</span>的所有取值：</span><br><span class="line">        <span class="keyword">for</span> ...</span><br><span class="line">            dp[状态<span class="number">1</span>][状态<span class="number">2</span>][...] = 择优(选择<span class="number">1</span>，选择<span class="number">2.</span>..)</span><br></pre></td></tr></tbody></table></figure><h2 id="一些dp问题"><a href="#一些dp问题" class="headerlink" title="一些dp问题"></a>一些dp问题</h2><h3 id="322-零钱兑换"><a href="#322-零钱兑换" class="headerlink" title="322. 零钱兑换"></a><a href="https://leetcode-cn.com/problems/coin-change/">322. 零钱兑换</a></h3><blockquote><p>给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。</p><p>计算并返回可以凑成总金额所需的 最少的硬币个数 。如果没有任何一种硬币组合能组成总金额，返回 -1 。</p><p>你可以认为每种硬币的数量是无限的。</p><p>示例 1：</p><p>输入：coins = [1, 2, 5], amount = 11<br>输出：3<br>解释：11 = 5 + 5 + 1<br>示例 2：</p><p>输入：coins = [2], amount = 3<br>输出：-1<br>示例 3：</p><p>输入：coins = [1], amount = 0<br>输出：0</p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归暴力</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">int</span> res = INT_MAX;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;coins.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> subproblem = <span class="built_in">coinChange</span>(coins, amount - coins[i]);</span><br><span class="line">        <span class="keyword">if</span>(subproblem == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        res = <span class="built_in">min</span>(res, subproblem+<span class="number">1</span>);</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> res==INT_MAX?<span class="number">-1</span>:res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// //递归优化</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; memo;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      memo = vector&lt;<span class="keyword">int</span>&gt;(amount+<span class="number">1</span>, <span class="number">-666</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">dp</span>(coins, amount);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">dp</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 查备忘录，防止重复计算</span></span><br><span class="line">      <span class="keyword">if</span> (memo[amount] != <span class="number">-666</span>)</span><br><span class="line">        <span class="keyword">return</span> memo[amount];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> res = INT_MAX;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;coins.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> subproblem = <span class="built_in">dp</span>(coins, amount - coins[i]);</span><br><span class="line">        <span class="keyword">if</span>(subproblem == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        res = <span class="built_in">min</span>(res, subproblem+<span class="number">1</span>);</span><br><span class="line">      }</span><br><span class="line">      memo[amount] = res==INT_MAX?<span class="number">-1</span>:res;</span><br><span class="line">      <span class="keyword">return</span> memo[amount];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//dp</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(amount + <span class="number">1</span>, amount+<span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">      dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">// 外层 for 循环在遍历所有状态的所有取值</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;dp.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="comment">// 内层 for 循环在求所有选择的最小值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> coin : coins){</span><br><span class="line">          <span class="comment">//子问题无解 跳过</span></span><br><span class="line">          <span class="keyword">if</span>(i - coin &lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">          dp[i] = <span class="built_in">min</span>(dp[i], <span class="number">1</span>+dp[i-coin]);</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> (dp[amount] == amount + <span class="number">1</span>) ? <span class="number">-1</span> : dp[amount];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="279-完全平方数"><a href="#279-完全平方数" class="headerlink" title="279. 完全平方数"></a><a href="https://leetcode-cn.com/problems/perfect-squares/">279. 完全平方数</a></h3><p>给你一个整数 <code>n</code> ，返回 <em>和为 <code>n</code> 的完全平方数的最少数量</em> 。</p><p><strong>完全平方数</strong> 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。例如，<code>1</code>、<code>4</code>、<code>9</code> 和 <code>16</code> 都是完全平方数，而 <code>3</code> 和 <code>11</code> 不是。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 12</span><br><span class="line">输出：3 </span><br><span class="line">解释：12 = 4 + 4 + 4</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 13</span><br><span class="line">输出：2</span><br><span class="line">解释：13 = 4 + 9</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSquares</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">int</span> minVal = INT_MAX;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j*j&lt;=i; j++){</span><br><span class="line">                <span class="comment">//i-j*j是从大到小的遍历dp,这样才可以保证最小次数</span></span><br><span class="line">                minVal = <span class="built_in">min</span>(minVal, dp[i-j*j]);  </span><br><span class="line">            }</span><br><span class="line">            dp[i] = minVal + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//相比上面 耗时较多 难度是数组的赋值比较费时间？</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSquares</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(n + <span class="number">1</span>, n + <span class="number">1</span>)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j*j&lt;=i; j++){</span><br><span class="line">                <span class="comment">//i-j*j是从大到小的遍历dp,这样才可以保证最小次数</span></span><br><span class="line">                dp[i] = <span class="built_in">min</span>(dp[i], dp[i-j*j] + <span class="number">1</span>);  </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="300-最长递增子序列"><a href="#300-最长递增子序列" class="headerlink" title="300. 最长递增子序列"></a><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">300. 最长递增子序列</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=300">labuladong 题解</a><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/#">思路</a></p><p>难度中等2362收藏分享切换为英文接收动态反馈</p><p>给你一个整数数组 <code>nums</code> ，找到其中最长严格递增子序列的长度。</p><p><strong>子序列</strong> 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，<code>[3,6,2,7]</code> 是数组 <code>[0,3,1,6,2,2,7]</code> 的子序列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [10,9,2,5,3,7,101,18]</span><br><span class="line">输出：4</span><br><span class="line">解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1,0,3,2,3]</span><br><span class="line">输出：4</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>dp数组：注意 递增子序列与当前数字的大小有关 所以dp的含义为 以当前数结尾的最长子序列长度</li><li>状态转移：当前比之前的大  则更新dp[i] 为max(dp[j+1] , dp[i])</li><li>base case: 所有单个数字的序列dp均为1</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//主要是注意dp数组的含义</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(n, <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> nowI = nums[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;i; j++){</span><br><span class="line">                <span class="keyword">if</span>(nowI&gt;nums[j]){</span><br><span class="line">                    dp[i] = <span class="built_in">max</span>(dp[j] + <span class="number">1</span>, dp[i]);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(dp[i], ans);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h2><h4 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h4><p>背包最大重量为4， 每个物品只能用一次，问背包能装的最大价值？</p><table><thead><tr><th>物品</th><th>重量</th><th>价值</th></tr></thead><tbody><tr><td>物品0</td><td>1</td><td>15</td></tr><tr><td>物品1</td><td>3</td><td>20</td></tr><tr><td>物品2</td><td>4</td><td>30</td></tr></tbody></table><p>对于背包问题，有一种写法， 是使用二维数组，即<strong>dp[i] [j] 表示从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少</strong>。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202101101032124.png" alt="动态规划-背包问题5"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_2_wei_bag_problem1</span><span class="params">()</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; weight = {<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>};</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; value = {<span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>};</span><br><span class="line">    <span class="keyword">int</span> bagweight = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二维数组</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(weight.<span class="built_in">size</span>(), vector&lt;<span class="keyword">int</span>&gt;(bagweight + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = weight[<span class="number">0</span>]; j &lt;= bagweight; j++) {</span><br><span class="line">        dp[<span class="number">0</span>][j] = value[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// weight数组的大小 就是物品个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; weight.<span class="built_in">size</span>(); i++) { <span class="comment">// 遍历物品</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= bagweight; j++) { <span class="comment">// 遍历背包容量</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">else</span> dp[i][j] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; dp[weight.<span class="built_in">size</span>() - <span class="number">1</span>][bagweight] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">test_2_wei_bag_problem1</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="滚动一维数组"><a href="#滚动一维数组" class="headerlink" title="滚动一维数组"></a>滚动一维数组</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_1_wei_bag_problem</span><span class="params">()</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; weight = {<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>};</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; value = {<span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>};</span><br><span class="line">    <span class="keyword">int</span> bagWeight = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(bagWeight + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; weight.<span class="built_in">size</span>(); i++) { <span class="comment">// 遍历物品</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="comment">// 遍历背包容量</span></span><br><span class="line">            dp[j] = <span class="built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);  <span class="comment">//dp复用</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">test_1_wei_bag_problem</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="分割等和子集"><a href="#分割等和子集" class="headerlink" title="分割等和子集"></a><a href="https://leetcode-cn.com/problems/partition-equal-subset-sum/">分割等和子集</a></h3><p>给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。</p><blockquote><p>示例 1：</p><p>输入：nums = [1,5,11,5]<br>输出：true<br>解释：数组可以分割成 [1, 5, 5] 和 [11] 。</p><p>示例 2：</p><p>输入：nums = [1,2,3,5]<br>输出：false<br>解释：数组不能分割成两个元素和相等的子集。</p></blockquote><p>这也是一道经典的背包题</p><p>理解：</p><blockquote><p>背包的最大重量为sum/2</p><p>物品的重量为nums[i]</p><p>物品的价值为nums[i]</p><p><code>每个物品只有一个 求背包装最大的价值</code></p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canPartition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> allSum = <span class="built_in">accumulate</span>(<span class="built_in">begin</span>(nums), <span class="built_in">end</span>(nums), <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span>(allSum%<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> target = allSum/<span class="number">2</span>;</span><br><span class="line">      vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(nums.<span class="built_in">size</span>(), vector&lt;<span class="keyword">int</span>&gt;(target+<span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = nums[<span class="number">0</span>]; j&lt;=target; j++){</span><br><span class="line">        dp[<span class="number">0</span>][j] = nums[<span class="number">0</span>];</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;=target; j++){</span><br><span class="line">          <span class="keyword">if</span>(j &lt; nums[i]) dp[i][j] = dp[i<span class="number">-1</span>][j];</span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">            dp[i][j] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][j], dp[i<span class="number">-1</span>][j-nums[i]] + nums[i]);            </span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> dp[nums.<span class="built_in">size</span>()<span class="number">-1</span>][target] == target;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canPartition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> allSum = <span class="built_in">accumulate</span>(<span class="built_in">begin</span>(nums), <span class="built_in">end</span>(nums), <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span>(allSum%<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> target = allSum/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// dp[i]中的i表示背包内总和</span></span><br><span class="line">      <span class="comment">// 题目中说：每个数组中的元素不会超过 100，数组的大小不会超过 200</span></span><br><span class="line">      <span class="comment">// 总和不会大于20000，背包最大只需要其中一半，所以10001大小就可以</span></span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(<span class="number">10001</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="comment">//begin 0/1</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = target; j&gt;=nums[i]; j--){</span><br><span class="line">          dp[j] = <span class="built_in">max</span>(dp[j], dp[j-nums[i]] + nums[i]);</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> dp[target] == target;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="118-杨辉三角"><a href="#118-杨辉三角" class="headerlink" title="118. 杨辉三角"></a><a href="https://leetcode-cn.com/problems/pascals-triangle/">118. 杨辉三角</a></h3><p>给定一个非负整数 <em><code>numRows</code>，</em>生成「杨辉三角」的前 <em><code>numRows</code></em> 行。</p><p>在「杨辉三角」中，每个数是它左上方和右上方的数的和。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203132135089.gif" alt="img"></p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: numRows = 5</span><br><span class="line">输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>dp迭代 生成二维ans数组</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">generate</span>(<span class="keyword">int</span> numRows) {</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numRows; i++){</span><br><span class="line">            <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(i+<span class="number">1</span>)</span></span>;</span><br><span class="line">            temp[<span class="number">0</span>] = temp[i] = <span class="number">1</span>;  <span class="comment">//首位数据是确定的 base case</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;i; j++){</span><br><span class="line">                <span class="comment">//状态转移方程</span></span><br><span class="line">                temp[j] = ans[i<span class="number">-1</span>][j<span class="number">-1</span>] + ans[i<span class="number">-1</span>][j];</span><br><span class="line">            }</span><br><span class="line">            ans.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="119-杨辉三角-II"><a href="#119-杨辉三角-II" class="headerlink" title="119. 杨辉三角 II "></a><a href="https://leetcode-cn.com/problems/pascals-triangle-ii/">119. 杨辉三角 II </a></h3><p>给定一个非负索引 rowIndex，返回「杨辉三角」的第 rowIndex 行。</p><p>在「杨辉三角」中，每个数是它左上方和右上方的数的和。</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203132138328.gif" alt="img"></p><p>示例 1:</p><p>输入: rowIndex = 3<br>输出: [1,3,3,1]</p><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>注意 此处的rowIndex 从0开始</li></ol><h4 id="朴素的dp解法"><a href="#朴素的dp解法" class="headerlink" title="朴素的dp解法"></a>朴素的dp解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp解法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">C</span>(rowIndex + <span class="number">1</span>); <span class="comment">//这道题rowindex从0开始</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            C[i].<span class="built_in">resize</span>(i + <span class="number">1</span>);</span><br><span class="line">            C[i][<span class="number">0</span>] = C[i][i] = <span class="number">1</span>; <span class="comment">//base case 首尾必定是1</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) {</span><br><span class="line">                C[i][j] = C[i - <span class="number">1</span>][j - <span class="number">1</span>] + C[i - <span class="number">1</span>][j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> C[rowIndex];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="滚动数组优化"><a href="#滚动数组优化" class="headerlink" title="滚动数组优化"></a>滚动数组优化</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; pre, cur;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            cur.<span class="built_in">resize</span>(i + <span class="number">1</span>);</span><br><span class="line">            cur[<span class="number">0</span>] = cur[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) {</span><br><span class="line">                cur[j] = pre[j - <span class="number">1</span>] + pre[j];</span><br><span class="line">            }</span><br><span class="line">            pre = cur;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="继续优化-从后到前"><a href="#继续优化-从后到前" class="headerlink" title="继续优化 从后到前"></a>继续优化 从后到前</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">row</span><span class="params">(rowIndex + <span class="number">1</span>)</span></span>;</span><br><span class="line">        row[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span>; --j) {</span><br><span class="line">                row[j] += row[j - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> row;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="线性递推"><a href="#线性递推" class="headerlink" title="线性递推"></a>线性递推</h4><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203132145601.jpeg" alt="img" style="zoom: 67%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/202203132150495.png" alt="image-20220313215002446" style="zoom:50%;"><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">row</span><span class="params">(rowIndex + <span class="number">1</span>)</span></span>;</span><br><span class="line">        row[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">          <span class="comment">//杨辉三角 组合数规律</span></span><br><span class="line">            row[i] = <span class="number">1LL</span> * row[i - <span class="number">1</span>] * (rowIndex - i + <span class="number">1</span>) / i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> row;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="72-编辑距离"><a href="#72-编辑距离" class="headerlink" title="72. 编辑距离"></a><a href="https://leetcode-cn.com/problems/edit-distance/">72. 编辑距离</a></h4><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=72&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/edit-distance/#">思路</a></p><p>难度困难2239英文版讨论区</p><p>给你两个单词 <code>word1</code> 和 <code>word2</code>， <em>请返回将 <code>word1</code> 转换成 <code>word2</code> 所使用的最少操作数</em> 。</p><p>你可以对一个单词进行如下三种操作：</p><ul><li>插入一个字符</li><li>删除一个字符</li><li>替换一个字符</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：word1 = "horse", word2 = "ros"</span><br><span class="line">输出：3</span><br><span class="line">解释：</span><br><span class="line">horse -&gt; rorse (将 'h' 替换为 'r')</span><br><span class="line">rorse -&gt; rose (删除 'r')</span><br><span class="line">rose -&gt; ros (删除 'e')</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：word1 = "intention", word2 = "execution"</span><br><span class="line">输出：5</span><br><span class="line">解释：</span><br><span class="line">intention -&gt; inention (删除 't')</span><br><span class="line">inention -&gt; enention (将 'i' 替换为 'e')</span><br><span class="line">enention -&gt; exention (将 'n' 替换为 'x')</span><br><span class="line">exention -&gt; exection (将 'n' 替换为 'c')</span><br><span class="line">exection -&gt; execution (插入 'u')</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li><p>dp含义：由于我们的目的求将 word1 转换成 word2 所使用的最少操作数 。那我们就定义 dp[i] [j]的含义为：**当字符串 word1 的长度为 i，字符串 word2 的长度为 j 时，将 word1 转化为 word2 所使用的最少操作次数为 dp[i] [j]**。</p></li><li><p>状态方程：</p><ul><li><p>如果我们 word1[i] 与 word2 [j] 相等，这个时候不需要进行任何操作，显然有 dp[i] [j] = dp[i-1] [j-1]。</p></li><li><p>如果我们 word1[i] 与 word2 [j] 不相等，这个时候我们就必须进行调整，而调整的操作有 3 种，我们要选择一种。三种操作对应的关系试如下（注意字符串与字符的区别）：</p><ul><li>如果把字符 word1[i] 替换成与 word2[j] 相等，则有 dp[i] [j] = dp[i-1] [j-1] + 1;</li><li>如果在字符串 word1末尾插入一个与 word2[j] 相等的字符，则有 dp[i] [j] = dp[i] [j-1] + 1;</li><li>如果把字符 word1[i] 删除，则有 dp[i] [j] = dp[i-1] [j] + 1;那么我们应该选择一种操作，使得 dp[i] [j] 的值最小，显然有<strong>dp[i] [j] = min(dp[i-1] [j-1]，dp[i] [j-1]，dp[[i-1] [j]]) + 1;</strong></li></ul></li></ul></li><li><p>base case: 当 dp[i] [j] 中，如果 i 或者 j 有一个为 0，这个时候把 i - 1 或者 j - 1，就变成负数了，数组就会出问题了，所以我们的初始值是计算出所有的 dp[0] [0….n] 和所有的 dp[0….m] [0]。这个还是非常容易计算的，因为当有一个字符串的长度为 0 时，转化为另外一个字符串，那就只能一直进行插入或者删除操作了。</p></li></ol><blockquote><p>大佬：90%的字符串问题都可以用dp解决</p><p>我：** * **</p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minDistance</span><span class="params">(string word1, string word2)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = word1.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> n = word2.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(m+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(n+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">            dp[i][<span class="number">0</span>] = dp[i<span class="number">-1</span>][<span class="number">0</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            dp[<span class="number">0</span>][i] = dp[<span class="number">0</span>][i<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;=n; j++){</span><br><span class="line">                <span class="keyword">if</span>(word1[i<span class="number">-1</span>] == word2[j<span class="number">-1</span>])</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = <span class="built_in">min</span>(<span class="built_in">min</span>(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]), dp[i<span class="number">-1</span>][j<span class="number">-1</span>]) + <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="10-正则表达式匹配"><a href="#10-正则表达式匹配" class="headerlink" title="10. 正则表达式匹配"></a><a href="https://leetcode-cn.com/problems/regular-expression-matching/">10. 正则表达式匹配</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=10&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/regular-expression-matching/#">思路</a></p><p>难度困难2842英文版讨论区</p><p>给你一个字符串 <code>s</code> 和一个字符规律 <code>p</code>，请你来实现一个支持 <code>'.'</code> 和 <code>'*'</code> 的正则表达式匹配。</p><ul><li><code>'.'</code> 匹配任意单个字符</li><li><code>'*'</code> 匹配零个或多个前面的那一个元素</li></ul><p>所谓匹配，是要涵盖 <strong>整个</strong> 字符串 <code>s</code>的，而不是部分字符串。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//背这个</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (p.<span class="built_in">empty</span>()) <span class="keyword">return</span> s.<span class="built_in">empty</span>();</span><br><span class="line">        <span class="comment">//当前位置匹配</span></span><br><span class="line">        <span class="keyword">auto</span> first_match = !s.<span class="built_in">empty</span>() &amp;&amp; (s[<span class="number">0</span>] == p[<span class="number">0</span>] || p[<span class="number">0</span>] == <span class="string">'.'</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (p.<span class="built_in">length</span>() &gt;= <span class="number">2</span> &amp;&amp; p[<span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">            <span class="comment">//通配符匹配0次 || 通配符匹配多次</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">isMatch</span>(s, p.<span class="built_in">substr</span>(<span class="number">2</span>)) || (first_match &amp;&amp; <span class="built_in">isMatch</span>(s.<span class="built_in">substr</span>(<span class="number">1</span>), p));</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="comment">//无通配符，向前匹配</span></span><br><span class="line">            <span class="keyword">return</span> first_match &amp;&amp; <span class="built_in">isMatch</span>(s.<span class="built_in">substr</span>(<span class="number">1</span>), p.<span class="built_in">substr</span>(<span class="number">1</span>));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    unordered_map&lt;string, <span class="keyword">int</span>&gt; memo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dp</span>(s, <span class="number">0</span>, p, <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line"><span class="comment">/* 计算 p[j..] 是否匹配 s[i..] */</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">dp</span><span class="params">(string&amp; s, <span class="keyword">int</span> i, string&amp; p, <span class="keyword">int</span> j)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = s.<span class="built_in">size</span>(), n = p.<span class="built_in">size</span>();</span><br><span class="line">        <span class="comment">// base case</span></span><br><span class="line">        <span class="keyword">if</span> (j == n) {</span><br><span class="line">            <span class="keyword">return</span> i == m;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (i == m) {</span><br><span class="line">            <span class="comment">// 如果能匹配空串，一定是字符和 * 成对儿出现</span></span><br><span class="line">            <span class="keyword">if</span> ((n - j) % <span class="number">2</span> == <span class="number">1</span>) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 检查是否为 x*y*z* 这种形式</span></span><br><span class="line">            <span class="keyword">for</span> (; j + <span class="number">1</span> &lt; n; j += <span class="number">2</span>) {</span><br><span class="line">                <span class="keyword">if</span> (p[j + <span class="number">1</span>] != <span class="string">'*'</span>) {</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 记录状态 (i, j)，消除重叠子问题</span></span><br><span class="line">        string key = <span class="built_in">to_string</span>(i) + <span class="string">","</span> + <span class="built_in">to_string</span>(j);</span><br><span class="line">        <span class="keyword">if</span> (memo.<span class="built_in">count</span>(key)) <span class="keyword">return</span> memo[key];</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">bool</span> res = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (s[i] == p[j] || p[j] == <span class="string">'.'</span>) {</span><br><span class="line">            <span class="comment">// 匹配</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; n - <span class="number">1</span> &amp;&amp; p[j + <span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">   <span class="comment">// 1.1 通配符匹配 0 次或多次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i, p, j + <span class="number">2</span>) || <span class="built_in">dp</span>(s, i + <span class="number">1</span>, p, j);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">// 1.2 常规匹配 1 次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i + <span class="number">1</span>, p, j + <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">             <span class="comment">// 不匹配</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; n - <span class="number">1</span> &amp;&amp; p[j + <span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">                <span class="comment">// 2.1 通配符匹配 0 次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i, p, j + <span class="number">2</span>);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">// 2.2 无法继续匹配</span></span><br><span class="line">                res = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 将当前结果记入备忘录</span></span><br><span class="line">        memo[key] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="炒股专题"><a href="#炒股专题" class="headerlink" title="炒股专题"></a>炒股专题</h2><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/1.png" alt="img" style="zoom:67%;"><h3 id="121-买卖股票的最佳时机-一次买卖"><a href="#121-买卖股票的最佳时机-一次买卖" class="headerlink" title="121. 买卖股票的最佳时机 一次买卖"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/">121. 买卖股票的最佳时机 一次买卖</a></h3><p>给定一个数组 <code>prices</code> ，它的第 <code>i</code> 个元素 <code>prices[i]</code> 表示一支给定股票第 <code>i</code> 天的价格。</p><p>你只能选择 <strong>某一天</strong> 买入这只股票，并选择在 <strong>未来的某一个不同的日子</strong> 卖出该股票。设计一个算法来计算你所能获取的最大利润。</p><p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 <code>0</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：[7,1,5,3,6,4]</span><br><span class="line">输出：5</span><br><span class="line">解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。</span><br><span class="line">     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [7,6,4,3,1]</span><br><span class="line">输出：0</span><br><span class="line">解释：在这种情况下, 没有交易完成, 所以最大利润为 0。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li><p>贪心 一次遍历 得到 当前值和当前之前的最小值做差 取max</p></li><li><p>动态规划</p><blockquote><p>dp数组的含义</p><ol><li><p>dp{i}{0}表述第i天手中==没有==股票 时 的最大利润    = max(昨天手中就没有股票， 昨天手中有股票但是今天(i)给==卖==了)</p></li><li><p>dp{i}{1}表述第i天手中==有==股票 时 的最大利润       = max(昨天手中就有股票， 昨天手中没有股票但是今天(i)==买==了)</p></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp[i][<span class="number">0</span>]= <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br></pre></td></tr></tbody></table></figure></blockquote></li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                <span class="comment">//base case</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = INT_MIN;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>]= <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            <span class="comment">//注意这里不能时dp[i-1][0],因为只有一次操作</span></span><br><span class="line">            <span class="comment">//前面没有股票买卖 没有利润</span></span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="comment">// dp[i][0] = max(dp[i-1][0], dp[i-1][1] + prices[i])</span></span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            <span class="comment">// dp[i][1] = max(dp[i-1][1], -prices[i])</span></span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, -prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//贪心</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n =prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>; <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            <span class="keyword">if</span>(prices[left]&lt;prices[right])</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, prices[right] - prices[left]);</span><br><span class="line">            <span class="keyword">else</span> left = right;</span><br><span class="line">            right++;            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{    </span><br><span class="line">        <span class="keyword">int</span> mmin = INT_MAX;<span class="comment">//遇到最小的数</span></span><br><span class="line">        <span class="keyword">int</span> mmax = <span class="number">0</span>;<span class="comment">//差值最大数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i : prices) {</span><br><span class="line">            mmin = <span class="built_in">min</span>(i, mmin); </span><br><span class="line">            mmax = <span class="built_in">max</span>(i - mmin, mmax);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> mmax ;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="122-买卖股票的最佳时机-无限次买卖"><a href="#122-买卖股票的最佳时机-无限次买卖" class="headerlink" title="122. 买卖股票的最佳时机 无限次买卖"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/">122. 买卖股票的最佳时机 无限次买卖</a></h3><p>给定一个数组 <code>prices</code> ，其中 <code>prices[i]</code> 表示股票第 <code>i</code> 天的价格。</p><p>在每一天，你可能会决定购买和/或出售股票。你在任何时候 <strong>最多</strong> 只能持有 <strong>一股</strong> 股票。你也可以购买它，然后在 <strong>同一天</strong> 出售。<br>返回 <em>你能获得的 <strong>最大</strong> 利润</em> 。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [7,1,5,3,6,4]</span><br><span class="line">输出: 7</span><br><span class="line">解释: 在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。</span><br><span class="line">随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6-3 = 3 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [1,2,3,4,5]</span><br><span class="line">输出: 4</span><br><span class="line">解释: 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。</span><br><span class="line">注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><ol><li><p>贪心 每次相邻两天涨价都卖股票</p></li><li><p>dp 同上 但是更为贴近经典模板 允许多次买卖 注意状态方程</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br></pre></td></tr></tbody></table></figure></li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//没有购买次数的限制</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//滚动优化</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_i_0; <span class="comment">//临时存储上个dp_i_0     dp_i_1写在dp_i_0之前则无需temp </span></span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, temp - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//贪心 每次相邻两天涨价都卖股票</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; prices.<span class="built_in">size</span>()<span class="number">-1</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(prices[i]&lt;prices[i+<span class="number">1</span>]){</span><br><span class="line">                max+=prices[i+<span class="number">1</span>]-prices[i];</span><br><span class="line">            }  </span><br><span class="line">        }   </span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="714-买卖股票的最佳时机-含手续费"><a href="#714-买卖股票的最佳时机-含手续费" class="headerlink" title="714. 买卖股票的最佳时机 含手续费"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/">714. 买卖股票的最佳时机 含手续费</a></h3><p>给定一个整数数组 <code>prices</code>，其中 <code>prices[i]</code>表示第 <code>i</code> 天的股票价格 ；整数 <code>fee</code> 代表了交易股票的手续费用。</p><p>你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。</p><p>返回获得利润的最大值。</p><p><strong>注意：</strong>这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1, 3, 2, 8, 4, 9], fee = 2</span><br><span class="line">输出：8</span><br><span class="line">解释：能够达到的最大利润:  </span><br><span class="line">在此处买入 prices[0] = 1</span><br><span class="line">在此处卖出 prices[3] = 8</span><br><span class="line">在此处买入 prices[4] = 4</span><br><span class="line">在此处卖出 prices[5] = 9</span><br><span class="line">总利润: ((8 - 1) - 2) + ((9 - 4) - 2) = 8</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1,3,7,5,10,3], fee = 3</span><br><span class="line">输出：6</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>一样的套路 只是注意 -fee -fee…….在dp0上可能引发的越界问题 除非给定特别合适的初始值（-1？错）</p><blockquote><p>[9,8,7,1,2] 3</p><p>例如上面那个 会导致dp1错误  老老实实放在dp1上吧   -1000000是可以通过的</p></blockquote><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_0;</span><br><span class="line">            <span class="comment">//注意 这里-fee最好不要写在dp0上 不然INT_MIN可能越界，不好控制初始值</span></span><br><span class="line">            dp_0 = <span class="built_in">max</span>(dp_0, dp_1 + prices[i]);</span><br><span class="line">            dp_1 = <span class="built_in">max</span>(dp_1, temp - prices[i] - fee);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="309-最佳买卖股票时机-含冷冻期"><a href="#309-最佳买卖股票时机-含冷冻期" class="headerlink" title="309. 最佳买卖股票时机 含冷冻期"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">309. 最佳买卖股票时机 含冷冻期</a></h3><p>给定一个整数数组<code>prices</code>，其中第 <code>prices[i]</code> 表示第 <code>*i*</code> 天的股票价格 。</p><p>设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:</p><ul><li>卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。</li></ul><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [1,2,3,0,2]</span><br><span class="line">输出: 3 </span><br><span class="line">解释: 对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><p>0 1单独判断  注意代码中的状态方程</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;prices.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">1</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-2</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">int</span> dp_pre_0 = <span class="number">0</span>; <span class="comment">//代表dp[i-2][0];</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_i_0;</span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, dp_pre_0 - prices[i]);       </span><br><span class="line">            dp_pre_0 = temp;    </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="123-买卖股票的最佳时机-限制两笔交易"><a href="#123-买卖股票的最佳时机-限制两笔交易" class="headerlink" title="123. 买卖股票的最佳时机 限制两笔交易"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">123. 买卖股票的最佳时机 限制两笔交易</a></h3><p>给定一个数组，它的第 <code>i</code> 个元素是一支给定的股票在第 <code>i</code> 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>两笔</strong> 交易。</p><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [3,3,5,0,0,3,1,4]</span><br><span class="line">输出：6</span><br><span class="line">解释：在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。</span><br><span class="line">     随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1,2,3,4,5]</span><br><span class="line">输出：4</span><br><span class="line">解释：在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。   </span><br><span class="line">     注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。   </span><br><span class="line">     因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h4><ol><li>有次数限制k for循环加一层k</li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> maxk = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                    dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                    dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//滚动优化</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> dp_i10 = <span class="number">0</span>, dp_i20 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i11 = INT_MIN, dp_i21 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> price: prices){</span><br><span class="line">            dp_i20 = <span class="built_in">max</span>(dp_i20, dp_i21 + price);</span><br><span class="line">            dp_i21 = <span class="built_in">max</span>(dp_i21, dp_i10 - price);</span><br><span class="line">            dp_i10 = <span class="built_in">max</span>(dp_i10, dp_i11 + price);</span><br><span class="line">            dp_i11 = <span class="built_in">max</span>(dp_i11, -price);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i20;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="188-买卖股票的最佳时机-限制k笔交易"><a href="#188-买卖股票的最佳时机-限制k笔交易" class="headerlink" title="188. 买卖股票的最佳时机 限制k笔交易"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/">188. 买卖股票的最佳时机 限制k笔交易</a></h3><p>给定一个整数数组 <code>prices</code> ，它的第 <code>i</code> 个元素 <code>prices[i]</code> 是一支给定的股票在第 <code>i</code> 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>k</strong> 笔交易。</p><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：k = 2, prices = [2,4,1]</span><br><span class="line">输出：2</span><br><span class="line">解释：在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：k = 2, prices = [3,2,6,5,0,3]</span><br><span class="line">输出：7</span><br><span class="line">解释：在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出, 这笔交易所能获得利润 = 6-2 = 4 。</span><br><span class="line">     随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出, 这笔交易所能获得利润 = 3-0 = 3 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h4><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span> maxk, vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(maxk&gt;n/<span class="number">2</span>){<span class="comment">//一次交易完成需要两天</span></span><br><span class="line">            <span class="comment">//复用之前交易次数k没有限制的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">maxProfit_k_inf</span>(prices);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                    dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                    dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不限制次数k的买卖</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_k_inf</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, dp_i_0 - prices[i]);</span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="万法归一"><a href="#万法归一" class="headerlink" title="万法归一"></a><code>万法归一</code></h3><p>输入股票价格数组 <code>prices</code>，你最多进行 <code>max_k</code> 次交易，每次交易需要额外消耗 <code>fee</code> 的手续费，而且每次交易之后需要经过 <code>cooldown</code> 天的冷冻期才能进行下一次交易，请你计算并返回可以获得的最大利润。</p><p>怎么样，有没有被吓到？如果你直接给别人出一道这样的题目，估计对方要当场吐血，不过我们这样一步步做过来，你应该很容易发现这道题目就是之前我们探讨的几种情况的组合体嘛。</p><p>所以，我们只要把之前实现的几种代码掺和到一块，<strong>在 base case 和状态转移方程中同时加上 <code>cooldown</code> 和 <code>fee</code> 的约束就行了</strong>：</p><p>==怕难以理解 此处全用完整dp数组==</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_all_in_one</span><span class="params">(<span class="keyword">int</span> maxk, vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> cooldown, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(maxk&gt;n/<span class="number">2</span>){<span class="comment">//一次交易完成需要两天</span></span><br><span class="line">            <span class="comment">//复用之前交易次数k没有限制的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">maxProfit_k_inf_cool</span>(prices, cooldown, fee);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> == <span class="number">-1</span>){</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 包含 cooldown 的 base case</span></span><br><span class="line">            <span class="keyword">if</span>(i-cooldown <span class="number">-1</span>&lt; <span class="number">0</span>){</span><br><span class="line">            dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                <span class="comment">// 别忘了减 fee</span></span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], -prices[i]- fee);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i-cooldown<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i] -fee);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// k 无限制，包含手续费和冷冻期</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_k_inf_cool</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> cooldown, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;prices.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> == <span class="number">-1</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 包含 cooldown 的 base case</span></span><br><span class="line">            <span class="keyword">if</span>(i-cooldown <span class="number">-1</span>&lt; <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                <span class="comment">// 别忘了减 fee</span></span><br><span class="line">                dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]- fee);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            <span class="comment">// 同时考虑 cooldown 和 fee</span></span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i-cooldown<span class="number">-1</span>][<span class="number">0</span>] - prices[i]- fee);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="二维矩阵dp"><a href="#二维矩阵dp" class="headerlink" title="二维矩阵dp"></a>二维矩阵dp</h2><h3 id="62-不同路径-经典简单的二维dp"><a href="#62-不同路径-经典简单的二维dp" class="headerlink" title="62. 不同路径 经典简单的二维dp"></a><a href="https://leetcode-cn.com/problems/unique-paths/">62. 不同路径 经典简单的二维dp</a></h3><p>一个机器人位于一个 <code>m x n</code> 网格的左上角 （起始点在下图中标记为 “Start” ）。</p><p>机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。</p><p>问总共有多少条不同的路径？</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/robot_maze.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：m = 3, n = 7</span><br><span class="line">输出：28</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h4><ol><li><p>dp的含义：当前位置可以到达的路径数</p><p>所以base case为横竖1</p></li><li><p>状态转移方程 dp [i] [j] = dp[i-1] [j] + dp[i] [j-1]</p></li></ol><h4 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">uniquePaths</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(m, vector&lt;<span class="keyword">int</span>&gt;(n));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            dp[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;n; j++){</span><br><span class="line">                dp[i][j] = dp[i<span class="number">-1</span>][j] + dp[i][j<span class="number">-1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[m<span class="number">-1</span>][n<span class="number">-1</span>];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="64-最小路径和"><a href="#64-最小路径和" class="headerlink" title="64. 最小路径和"></a><a href="https://leetcode-cn.com/problems/minimum-path-sum/">64. 最小路径和</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=64&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/minimum-path-sum/#">思路</a></p><p>难度中等1191</p><p>给定一个包含非负整数的 <code>*m* x *n*</code> 网格 <code>grid</code> ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。</p><p><strong>说明：</strong>每次只能向下或者向右移动一步。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/minpath.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [[1,3,1],[1,5,1],[4,2,1]]</span><br><span class="line">输出：7</span><br><span class="line">解释：因为路径 1→3→1→1→1 的总和最小。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：grid = [[1,2,3],[4,5,6]]</span><br><span class="line">输出：12</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h4><ol><li>可以记一下这个短路的万能写法</li><li>横 竖的 路径和是确定的 所以 这是base case</li><li>状态转移方程 dp[i] [j] = min(dp[i-1] [j], dp[i] [j-1]) + grid[i] [j];</li></ol><h4 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h4><ol><li>回溯超时</li><li>dp</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// vector&lt;int&gt; allAns;</span></span><br><span class="line">    <span class="comment">// int minPathSum(vector&lt;vector&lt;int&gt;&gt;&amp; grid) {</span></span><br><span class="line">    <span class="comment">//   int ans = 0;</span></span><br><span class="line">    <span class="comment">//   int m = grid.size();</span></span><br><span class="line">    <span class="comment">//   int n = grid[0].size();</span></span><br><span class="line">    <span class="comment">//   goWay(ans, grid, 0 , 0);</span></span><br><span class="line">    <span class="comment">//   return *std::min_element(allAns.begin(), allAns.end());</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// void goWay(int tempans, vector&lt;vector&lt;int&gt;&gt; grid, int x, int y){</span></span><br><span class="line">    <span class="comment">//   if(x == grid.size()-1 &amp;&amp; y == grid[0].size()-1){</span></span><br><span class="line">    <span class="comment">//     tempans+=grid[x][y];</span></span><br><span class="line">    <span class="comment">//     allAns.push_back(tempans);       </span></span><br><span class="line">    <span class="comment">//   }</span></span><br><span class="line">    <span class="comment">//   if(x &gt;= grid.size() || y &gt;= grid[0].size())</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">//   tempans += grid[x][y];</span></span><br><span class="line">    <span class="comment">//   goWay(tempans, grid, x+1, y);</span></span><br><span class="line">    <span class="comment">//   goWay(tempans, grid, x, y+1);</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minPathSum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; grid)</span> </span>{</span><br><span class="line">        <span class="comment">//这个判断应该比较万能</span></span><br><span class="line">        <span class="keyword">if</span> (grid.<span class="built_in">size</span>() == <span class="number">0</span> || grid[<span class="number">0</span>].<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> m = grid.<span class="built_in">size</span>(), n = grid[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">auto</span> dp = vector &lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(m, vector &lt;<span class="keyword">int</span>&gt; (n));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = grid[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) {</span><br><span class="line">            dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>] + grid[i][<span class="number">0</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) {</span><br><span class="line">            dp[<span class="number">0</span>][j] = dp[<span class="number">0</span>][j - <span class="number">1</span>] + grid[<span class="number">0</span>][j];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) {</span><br><span class="line">                dp[i][j] = <span class="built_in">min</span>(dp[i - <span class="number">1</span>][j], dp[i][j - <span class="number">1</span>]) + grid[i][j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="120-三角形最小路径和"><a href="#120-三角形最小路径和" class="headerlink" title="120. 三角形最小路径和"></a><a href="https://leetcode-cn.com/problems/triangle/">120. 三角形最小路径和</a></h3><p>难度中等995</p><p>给定一个三角形 <code>triangle</code> ，找出自顶向下的最小路径和。</p><p>每一步只能移动到下一行中相邻的结点上。<strong>相邻的结点</strong> 在这里指的是 <strong>下标</strong> 与 <strong>上一层结点下标</strong> 相同或者等于 <strong>上一层结点下标 + 1</strong> 的两个结点。也就是说，如果正位于当前行的下标 <code>i</code> ，那么下一步可以移动到下一行的下标 <code>i</code> 或 <code>i + 1</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]</span><br><span class="line">输出：11</span><br><span class="line">解释：如下面简图所示：</span><br><span class="line">   2</span><br><span class="line">  3 4</span><br><span class="line"> 6 5 7</span><br><span class="line">4 1 8 3</span><br><span class="line">自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 = 11）。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：triangle = [[-10]]</span><br><span class="line">输出：-10</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h4><p>同上</p><h4 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; &amp;nums)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> ans = INT_MAX;</span><br><span class="line"><span class="keyword">int</span> m = nums.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) {</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(i + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="comment">// base case</span></span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span>) {</span><br><span class="line">temp[<span class="number">0</span>] = nums[i][<span class="number">0</span>];</span><br><span class="line">dp[i] = temp;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i + <span class="number">1</span>; j++) {</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">temp[j] = dp[i - <span class="number">1</span>][j] + nums[i][j];</span><br><span class="line"><span class="keyword">if</span> (j == i)</span><br><span class="line">temp[j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + nums[i][j];</span><br><span class="line"><span class="keyword">if</span> (j != <span class="number">0</span> &amp;&amp; j != i)</span><br><span class="line">temp[j] = <span class="built_in">min</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - <span class="number">1</span>]) + nums[i][j];</span><br><span class="line">}</span><br><span class="line">dp[i] = temp;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dp[m - <span class="number">1</span>].<span class="built_in">size</span>(); i++) {</span><br><span class="line"><span class="comment">//cout &lt;&lt; dp[m - 1][i] &lt;&lt; endl;</span></span><br><span class="line">ans = <span class="built_in">min</span>(ans, dp[m - <span class="number">1</span>][i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h3 id="221-最大正方形"><a href="#221-最大正方形" class="headerlink" title="221. 最大正方形"></a><a href="https://leetcode-cn.com/problems/maximal-square/">221. 最大正方形</a></h3><p>难度中等1091英文版讨论区</p><p>在一个由 <code>'0'</code> 和 <code>'1'</code> 组成的二维矩阵内，找到只包含 <code>'1'</code> 的最大正方形，并返回其面积。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/max1grid.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：matrix = [["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]]</span><br><span class="line">输出：4</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h4><ol><li>dp含义： 当前点 之上 的最大正方形的面积</li><li>状态转移：之前三方向的 最小dp值（最小说明受这个方向的限制） + 1</li><li>base case: 第一行第一列 为1的位置</li></ol><h4 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maximalSquare</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; matrix)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> maxSide = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(matrix.<span class="built_in">size</span>() == <span class="number">0</span> || matrix[<span class="number">0</span>].<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(m, vector&lt;<span class="keyword">int</span>&gt;(n));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(matrix[i][j] == <span class="string">'1'</span>){</span><br><span class="line">                    <span class="keyword">if</span>(i == <span class="number">0</span> || j == <span class="number">0</span>){</span><br><span class="line">                        dp[i][j] = <span class="number">1</span>;</span><br><span class="line">                    }<span class="keyword">else</span>{</span><br><span class="line">                        dp[i][j] = <span class="built_in">min</span>(<span class="built_in">min</span>(dp[i<span class="number">-1</span>][j], dp[i<span class="number">-1</span>][j<span class="number">-1</span>]), dp[i][j<span class="number">-1</span>]) + <span class="number">1</span>;</span><br><span class="line">                    }</span><br><span class="line">                    maxSide = <span class="built_in">max</span>(maxSide, dp[i][j]);</span><br><span class="line">                }     </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> maxSide* maxSide;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针数组赋值越界引发的bug</title>
      <link href="/2022/03/16/zhi-zhen-shu-zu-fu-zhi-yue-jie-yin-fa-de-bug/"/>
      <url>/2022/03/16/zhi-zhen-shu-zu-fu-zhi-yue-jie-yin-fa-de-bug/</url>
      
        <content type="html"><![CDATA[<h2 id="指针数组赋值越界引发的bug"><a href="#指针数组赋值越界引发的bug" class="headerlink" title="指针数组赋值越界引发的bug"></a>指针数组赋值越界引发的bug</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><ul><li>项目中写了这么一段代码，整段代码在while循环中循环读取数据</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">if</span> (!<span class="built_in">GetAveData</span>(strFilePath, m_ppHVFreq[i], m_ppHV[i], m_pnHVSize[i]))  <span class="comment">//读取hv数据</span></span><br><span class="line">     <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">   nSize = m_pnHVSize[i];  <span class="comment">//nSize为300</span></span><br><span class="line">   m_ppdHVFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize];</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nSize; m++) {</span><br><span class="line">     m_ppdHVFreqLog[i][m] = <span class="built_in">log</span>(m_ppHVFreq[i][m]);</span><br><span class="line">     allHvFreMax =</span><br><span class="line">         allHvFreMax &gt; m_ppHVFreq[i][m] ? allHvFreMax : m_ppHVFreq[i][m];</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">//读取spec数据</span></span><br><span class="line">   <span class="keyword">if</span> (!<span class="built_in">ReadSpecFile</span>(m_arrDataFiles[i], m_ppdSpecFreq[i], m_ppdSpecV[i],</span><br><span class="line">                     m_pnSpecSize[i]))</span><br><span class="line">     <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//保存spec 的 log frequency</span></span><br><span class="line">   <span class="keyword">int</span> nnSize = m_pnSpecSize[i];</span><br><span class="line"><span class="comment">//命名不规范，调试两行泪</span></span><br><span class="line">   m_ppdSpecFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize]; <span class="comment">// 100 hv 300 spec</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nnSize; m++) {</span><br><span class="line">     m_ppdSpecFreqLog[i][m] = <span class="built_in">log</span>(m_ppdSpecFreq[i][m]);</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><ul><li>在代码的第21行<code>m_ppdSpecFreqLog[i] = new double[nSize]; // 100 hv 300 spec</code>，这段代码中想着用nnSize(300)开辟，结果开辟成了nSize(100)大小，导致在后续的处理中，对数组进行了越界的赋值</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">m_ppdSpecFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize]; <span class="comment">// 100 hv 300 spec</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nnSize; m++) {</span><br><span class="line">  m_ppdSpecFreqLog[i][m] = <span class="built_in">log</span>(m_ppdSpecFreq[i][m]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>开辟了一百的大小却赋了300的值，这样的直接后果就是后面用new开辟指针数组 ==疯狂中断== 报访问异常，难以定位，难以排查</p><p><img src="https://github.com/qianxunslimg/cloudimg/blob/main/img/image-20220316192700569.png?raw=true" alt="image-20220316192700569.png"></p></li></ul><h3 id="教训"><a href="#教训" class="headerlink" title="教训"></a>教训</h3><ol><li>命名不规范，调试两行泪</li><li>认真认真认真</li><li>new出错，优先查找这个bug</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 开发随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络面试</title>
      <link href="/2022/03/16/ji-suan-ji-wang-luo-ba-gu/"/>
      <url>/2022/03/16/ji-suan-ji-wang-luo-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8b786a9873283dd947bb69b2a9fa42d006c64f659d1493cbe533e4f763f8bc35">35a9ddd7c9100bf1388697aeb95c0eecb7f421e1c3515f6bd78ed3d301a6cd0e6c0afec736ffc46d390de790fc2e766996203c882822df65c2535e296d50311fcfaf3dc9d63b24fa34f663f6ee8b9a535eee2d8afd988d394635749168a2bbdd252300744688c06919b26c6db5d73e786c7df98af7814a6cda7bd8494824aa818c258f949cc1f6f8d3610249a606a28941222e55cd8c9b3311974bd83a460f814741d5a46f6dbd8c9cfe29ca8ecdb21324557b1eb2d468fc23a7e56923df32f41f60ac2b1fef6f120ed899ab76cc7108e4013046d46f255352b07f73fd6e377ff51bfa44b746b4b41b34495670f3793f2ff722896b7ac850e11e08be26401ae8cb634fc7c30db988b55477244707259ba04c3d752b84605bb100f7ba4033a4cf2b9cf0815d0e6f956c2eea871ffa13c857dc9286e284b8ebf5adcba9399e4e064610c2ca64bc071567a4f681aafa8370fd5430a42c830478501779d496067f093c15a16d2f5d87c18e8aaa4f3b7efb2ddd9b919cf1f3b57798a11b5de27e80a0f736859899f21981e2ce2d745e5cafe541626cc47ec6015fe2833b34e16cd52e5e9960d345f72fe3aa411e028066b15b16d39fa446385f7665222d56d41950e0dec031f121dce9f045f0cd1ad4162beeabe5ba0e36a1287d8a289c6d7ac0b0f16849bebcf8722cebaeaf2b1fb02d3bc7872780ca5f5330c9a8490f27e1065969deea1d04f7884a142108c8c203958bb43177f5241399bfdcb4b48634cfca54ba4c37eaa6fc69200dd17da4e2a26db0cb78b97393558b700d1faff81d6fd039321b0a9fcef50f82c8f51c4491412a4caa446fd699d6321888d944d618591c13021a89f33240008892c8982d5da3d5936a47027fca1e93b3b7e892c90d3626a4f2ed6bdc88e7adf488bda7d5eb4cee2658c773eb771d72e24d2ab34bbe6859bf156a63c4fc951351256a799e33ee4d2f99418cd460c13c469a7ecb957d410c415a4270faca29ae2cd7bed1fb15a4309ea285e16a34ee07328c517c266413dc36665ed3ba398ab4969b3c034a97b020a432627043b856549e17aa803002914ae5e31c1930dea69577dce6669d305f4a93ee655601eb63e34603f137055190b3a01b5a44b119382356e9fb73f5b5332916e7b679f1bc7d7609242d8ad2f0187fdfa0b7ea3a6c3dfd0801d0965d7f9991375e89b44f7fbfa02e357dd709d2255e4540bd754526f800458f9fabc47395c3b1a5900a1c7478cd860da7262ad54759eb5fe8a00d49f1f9229780ab7af84ced8b0bc7c0b49d928070b5949dc395c5b5d797ca870ba4e6b099a9b04951c80f6ed5aa74f0ceb19940ed2e7255b0fa78ed62e2e3e9f2a921b58fc857ae4ffcaa311d3b5e3575f34aa94d28b17e0bcec687a43c8c339cac5ab77309451f9709d4b38ab2648612d88366d9866e5032ac4d44b4df744a67e8e3a6843bcbb25e11f4fe47db07a8afc6feb3ad3de99c8b8245a24577bb7f0e9dbc2de7924883afd19c49e04800c2d54afd0919df981c3b123cc146237cf22e6c30b121c131d38ca36d29baef5c9ffbd84ebaaff39352eb20e895f1f5da856a556bbae758bbdfcaf20a554e4a610f4031d3f1494a6e4f45a9150e3dcd190a34a0e9814590ce8ff07e92b80bc4af6fecbb4eccfa3b03291532acfb7f5a42c6e5a96a9cc739f07c97cef2bc0d641839120030622e9bafc5fb4539150c75fca037e529c1cf0d2eb8484af4816445260aa3a7075db560687a0558d079b0e763a50672f22a7c633c9cc68952c63089ae43541b4783c312f7feb4ffbcf0346182e89f3c05a308b371709ceb8b04c914cf554113b7d954e6f29e7e15a78bbbd5cd0cca0d847e01ade0ef7a3fbd132b9f96e03f49d2b1890bfc60f27e8d3eee2048150d4e8a342e13170c2015a137d32a6ad281fac90cb0b7cc8df4443a3e132b99450be3d631154e6b63518770a73423ee21687a3dd49802a9a37b1638fefc14c33091ea00856962284cc2b4ce4146b75b76316efc04775433a1ab53d3395f301adceddc507dcd6ea94e1dbb10e11f85de03b7807ee43d61d5a05ef4a58d667d3829d032c94c8a30a9503776949526f973d4a7dd8fd4858bbf58cb9508fa311e98eb7519002a38e808229099c8dd20a759e513c4864b5adfa583c01779db64b879f4deb44537c26f65ac7e625400606b623f6e195c3a98b42cf370d2d0ce2670bcdb6270d65c6bc8352b0e17001ab07f81231f24950c92e64a582d967efa6b36012a46e18aedc4521847b26281e8467632abe2386e5cd9673169a6c62160cdd4077af5af779fcb9b9297cfe28df42841fb57ee356078f4dbacaa2d950051a77d48626c7bf47fd66a0771c523a87a689132aee6de16e3f433edfb636e3bba3c9f19c6322f8e586a90892391a62c26e12f58444e5985dd27a761bf7fbd78981ae804f8cdbefeb21859ff263a615d7c076b59f1ab9c198fffdf5e104fd13b09f52d378c23b33790756efa631cc99900b7171cfdb60be0c12704d1f7d5afc1b4fe18cd2f47c48bc3b609898b3b84c52ae1e056ab6b662e934865bb22d677c0241617a135fdfc1dbb47b0f5448ec88841c8a59506d78df7bef4a8924a0d0fdad09b6565e53b9fd5a788f5770c34a50f3554fee92fd7c045790c738da42de5b4c25179fe4a5cb7c1e597ff05f131c4071075dd98d779210f29fe39ff9497680fe98c924037aa0a1d943fd95981dacfccc97fe2d54d0835b34a0dd415fa42958bb63cc96127deb620c85cbbf5d66980795ee537be56c4354b2d74264cf20e57a670ee63f971c37132ff930179d53d88e13fbad8437bdd5f1bacc38f1fd3885f9501dbe03b78125b5ea2ed4fb8aab4ff2183710171cd82d726fc93c87e65b5a73d4acda4b718c01523a4440ec078dccd7b8ebccf424a31ccd4f9f31a27fd2b6d52f92fd29166b272ce93d798b76c96423c4f909453d4a9cd9ffdcc165db36b898227e72ea9fb493e7090ad407d82dd2b24fafe61af8ff45c7fe2302fc0d9e00fff6c37adc5ae9de55daf0a74c21458bf95090fd0fc8f387b365380e7cc9030e86c96b415e74306a37a3d8888478720b5e2cff90b3f8817f1d6c98719a64b0546da864db99388145055c9bb83db17e9c14ae4a1eb2d1c25837adb33b10752fc29a0d538cb69e50231afc20c79355bdfccdd4e6a6e3ffd74df20d4b399c5a7d28176f8db74eed32989f59c3bfe16c361b925bdc79d7460913b5032361ddc86beb003cf145cd896ba0d74768ef17f70d8f19fecc4b6563933873ab056dd5a50858dc1bf35cdaf6c0c2b649169218e00de89213166c8d8500adbabe0a0156bc3dfd589fed7c77108f055cff0aa52b78480ecc42bc16ace229ed087bafce5a93c938e6529e2c82110359a63a4454b1ad012b964e39adb82662456fe58d2594c2f5c08fd0cf3265309492d5e1d569bb1e65a6c6c990cb34c6b4693d7ebbb7bfe3f55ba8f184de3402e7e6f6470393e9ce218d957d275bd1e1ed0accfa295474464d5f89c48bbd0b5e40aa23b261c88d365a2eaeda6f30bff0054721893e332891bfacde27b186ed864ccaf1b6762e303fb2ccd47381d3314bdf4c4dfb75f7a98530a4bb670422d60c3b95fb7812a63e1c29aebe80e1dadf3d0b89f929120d788896683c66c63ca6480a1178c497c4130f398b3aa13cd9a9a9d44fe3177a9fc039d046ec9a541c97075ec1654b3d10fb8cbec31083c80531348bd4c5f543e03a132ca4e8a6b4fa68c9e60320d7ad191d40647b45c37f26796ec3fd46cb7a9ab463b7918f6705592d3aa2741fa6681d8b6abaed7c21d2e8fab807b6738f2edfe1d371fd5b8d3dbe328a4bacc45705a9e83da7362c9465cb04ab36ab1d06cb0e0edd6e36b1a8c49e99c68a8e5a19e5c6f82c263d702af1ae0568db6ea6fb376b06f69bd483b4a0c1bb38411c195f673b748502463656aefd8dc06501d9e793392b1ced6bc4c6e5f4d955d791a3bb12fc6ff85147efbeff91485ae80b1e56c4786ecb17378116ea16180d50e195475f3aa75b7f52bde574f7ea66f7a47655816f46a5774599a33b90904a438b5cc9134143920c5a54a09e89296af7cf8d19f9caee453154456f7f2f91d792b47d9d9464bf8b64c97bf6c8e394da151cacb404baa1eb3d488e3c04b16dd4ef16885ab28da0ad3bc419749844300b8b1ce45d5c4c477cd729c0b2d9dcc566b1e397c62de3258feb2a46f9aa6c838bed667adea27476362e975748d0b1a503ed7d4ad4c5819033a05c3c6b55604761b87277c769310c69d96c89e8795ed9984d0fab7b0a2643d02411352bfb421a905dcf99569b045d69e302b297a24ed7383527e757adeda73973a013dcff479bf341ce6f0f7c4d9e7acf332fd262e2d9347974edf6b4f99e02e251db48a93673e8c3376ad1e5a6f99f10798a27af1a0de665901cb8582bb7e4d14074984354e9042d8e6de265dc956b26929ca6a5c916a0a5625ff0226f6544cb4d7a41e8dd1e720d465d2191b31702225ac476af5b2ac9e3a16aed515072124816f57c3a9d55bddacf1f9fdadc437eaa213826975abc0a9eb525be77cbc99d03cabccb7a473c9554427803b2efd227209f82d3ff2ca425afe3fce40b97b8cd5fd73dea619ac4a9d0376a5288698ea041ad2c073f993180f9794ea77be2e910aaf5ab909fcd2ae724fee0d156a90408b2c4f3c1f371b868ca68b06d781743f7c987e9eaaeefd23e6215e572756ef79d0bb22246bd70b7c1037defc574a383adba9b592490812ec77a962262637866ee55d7374cc5711030098d8ae15829f56378c952fae8cd18e0a56565beaef20478195889a86e1620fb172c50fc1f309f853b0ef860e2264e0b073dca9f13563a8ac1e2a294087c35d22f8373dfb967d70aab2237439f53dc04a94657147abbd6c95fd2832d482430c49c0e4be9954de462b5b0b616e0d54d06d6cbc8a95afa8eb28d9d899ca95f9a04926539492fec14a59600a2a17515330c6c65412292fa8fbf3456f6866d3db261e3cfc154ec0cda9b2242504d1848699d4e75a94eaa0dc7974e37507e0f048c8009db320dec4473fae7a705892815f91d0e9e13718612594ae94ab9a183953d28e7dfea6e1fd98af792e8db92583e71894caa0d3fda1df1b93f7e7ca80217138c51cb448de7010ddfffb0d8ef80f1bf83eedbf7749d4b620160d6f2351b2822991e4864a99ffc69493f62c38a89557392a34a0ac535035905dbdc9737e7df4fe7a152446899424a5215706ee8152737db6a6e8be38f4d8f61d21610482e3d9d48fc01b615eba9ce82722df69894ac22c86e6193b18c617e25b488401df2801a63f16874f485061d4da2fdf0051ec51fc2df0ae8d9447ff780f72468bac2743515ec04cc2825b8c5779e308e35ed3ece8582934e15091d54217d5f8804ab1f758b946454f5d29d07015a12f1dd554e6136d299c8c255f7d6cc9388d72db57fbb2b6ed6364653af904ffc84f498ab2e8730189539e26b459a807e484143051ee59edf1609cbc0d90208b9c51be1d06d7efc15fe2ce8fe9e895ae3076d0b31def27b45af3d8571edc60a66cbffe5a6216aad8da61b54caf29edf24220897096af36a2b416a7d14dae1f1b29d440b62b2e77ace32d46b6a57cf65b335830aeea8118444f9fdc96a279d03313518d535e183883908d9990b6ce1017c9096a617d3f7e1d80408d4393da284fa0631c8c16073c9e4f33292c5d1aeaf5ad8fc2590b42167164d5ca671a96c307464ade50ee4c3318b7cd794ad09649496e79816aafdee073ee16ffe755c0abe9dfc00085b987763464e675f2a379ddb3e2305dc1ec22d03e633bb723dd6888b50b96cfe5cb408da9d1e0c401bcae162abfc934c25bc552916e0501a75a2ded48f09ede1fd2624d61f4de9e7d61184f115d9e0d796fecee95b67211df744bc6bfb6a46462abd02d54ec0f77b6c7beb0e4d7b083392a8a995cff147c9a3be26e38d0ac5ad6e2f3a799784a8d30c837034af7a162eeb4b349b322e2c786b5bc86a369d16d5511531ca2fde5c4796f56eed52a96547edfa3d020d8a39f11f183472c4662fbc992466b58da891349f91cafc27d779be3c260ea7106cb6988f3eb727836c28f0f30bed796afbc18fb7375f0c1fa231652f35d0efcce4fbcae406d3929e82b0e0bd07bdaf6798dc5cc7bc2c8f31190915f8cb458186d8acaf8f04a47365dec90cf41469fc7cd346221a2f9f9883bf9bd6176911875b36e24c2ef62fca95f8cb751337d26b44cead4203954d5c40294314f9f6ffd528a270b7ca79f2c4949cff735c61fb60918827237104d29c2b9ffd0aa87dd4351fa02e461f7821de726bf005f60955c9ea06132c6fb23320be0244f320dbb3970aa816b1f3f9e8cce73b021fe0499a8ea61c24d5d509b05db60b26beee99beed12b18dbd9e6b9488fb0ba92c35555fc950ca01d4c4d60d1e3802e0e0b584d4bc7d0fb2c5d6ef989f28a06c8cedfea4e93375aaa047d0a357935d187d9cbd9b3a793521241bc05323702bbec76f7437bfd26f1cdf2703d6a6307835af09ac634aeb8fcc847f2184d29dbb39058f1456dac094a8139abfe93fdeb7708721c391ee3ecf90365414179b5cf18548e0099977a80bfd9801ad30ad1a26f4cac0095bbbba2436e5de19eb78b4626e8e961ef2e6737bbd6060c80019c61eb24e0ede757dad5fed8d1cfb9c5dcbf12ec55d18716a5588ebda25c7d99da8b7c09cd9b715d46bf4c33b62107d456dca7ce3f1e4066aa276b7cc3e43f8aaf7aa18fd3d015c12548bb6aa5fe2d051a4a21141ecc11df5d6676588fee2f5533ee92268db85ec904ff0fa7363cb6f4ff775398a4aee1d1768fa8a349ea6aea001d5e36fa5d2ff317aab1525b5be2ac97f9967428773e1af693fc8471b013de8021bb6bf359516ff2adab826f548db7991b7556928a95de9d11e42b394e967b96dee123da4d3700f96d0f353546bcda6eb02d65a703a398d0eee701b48b269d81748e6c9e16d6db629e18a1c5acf76132157560b916e2f8edd7d0e1685c19c4828f47b65482fc01053f00c9dbad1b10b702a8fd4db3b74833825371d60436ca5665db81e6b36514781021c6f34522a3908d4aa1c1ffa0cce64c6d307d1136978f36a32a96229009c933c3a7c68b53feffdc67e1d7a8c41ec06faf94319132531570d9dbca9d51231e56f0f9e974941f04a7f5158a442964d2f8cd55a10c12c401191ea7050c99c50f85ac9fd706b6321783113182e1b6df3b20cc2c6a608bb3f8ba8c27e96140a2a6383868ad9360c3426cf2b532dd66442786099e24d6926535fe86c95c9a5d9561beedf11067baecdafe423723181a7e3b6d86bb3a95caf58da118aa31c74dd3bf7c87e64b369883acaafe143d370eb4d50a7f31d2ff6fd84be79be0f0158c0412cf6e4896381c056d04486d33e8366a9b5c46601b793a224ff3336402ec45621ba8b06050cf031d81fb0275f18c5376cf2d7ce99221a0959a4212a91fa547c30d48c8425e1f1ad5f62bf3b6992fdb40f76c6701b875ab1dd8b337a242829888405e9e7f434877d964e252473a0baa5b4ccbee121080a8ecf44588de52681acae3d5f156d0eaa2f966db43051b74f47f0fff04f7cb9d56888cb31ec507af1045b58d24341aa06c62e86d2170f083df55276e3424fc114af0966dfd17cb700f74bf43bed1db8664995759c8e6ce344ffd153b719dff03037bafbb84008dc310a7083971c8a1585919f767532ec89fb7cc6cd5b512da1aadb5a34926dbdb6bf6c88ae99d3a842c72e61b3102f9376d84cfb612aef0fde49f629ef1c895b82e64d274470ce4646d0844b515dab8ebe997c0b3d4163b0a809a30f33ec63f16c943499ce604d4d001f770760c663aa37769bdcd2418ca60663b6c8e153db32f468da1b299876f3a43c22d53ea6a6aa23b8d91d129b7ec074b8ad59b7a81a8c7d03a282af90cdadf3a8b77443c66f895dc4f9563ca3f6e89f796ca1d79be56099afd8ec3b28e44839a72eda10fbe7f3d1ff6b505387d5b0987c808816a72e3a8c72476555a572db8b625d0a69ddd89fe6166d2a26d21409e90a328c4288cf1b9e86226917a750c5d618eaf31fb3cf85e02d844ce727398718ce9aa7953f0a8ffb1d7634df032a129019889f82b25863c0c27a267ab522008694e6ddfe1f1af17c694b77d2c041bac38743db4ea9f5d317755c8c6b4f543bd934a9304c62d5183527fad4bcf2a8dd5bcf1c9951cd68a5b6915bf701f5c48df12207f3085505d849caa1531c4bbd58cdc2eb78111841574eb6504de688c39519b60c939eae47b7e7bc0386a576e3cc2a0817b94d949f87bb7e63c72dd1631f9318ed66ca13a89d43f63f2dad16d2bb10c8d649737bd5badb5a8a612ca1c41ddb66fc6a22503652f38c4add5c086c00f150f694cf1a34edecba65ef7599035bcf30a8498dc17cdbb1810190e348539f02988afd8078f94b8a4565ac123467a3f33e07f5bdf96f36fc9090962d1624c43b3e6caf7e84e90b0055f2565be9c271d818ec26500b7a30b177000490062d6afea3b2d3d34ed08ce817ce6a7cb282587f97edc2aa02c0ef7651a95f8e73b34541b7d2ead55f736aa3fe8458b16cc718bb9cdc3246148987086e9972cb944ea8ff8dd03b6093512b1ee64149212c9384ed9bf2841b795e83133f93effd026804d59b224e20014454e4f79a5e58a3377fac985dbc839ef0af87d3dcdd0a2df6b9a69da3d93acb3370e5324b4c65e6d9b429ff6ada4ee6ef42218e967c1d7de5aec5c21452b026f48f9228e542da1670ff34a7075cf32bce0ffa67039c0081a9070976d1c1956e0e91755f9ae6e6a7101078131126e3c7e32155ea474f3b41c57464e76dd1836633ab3cec65482915f8740d65958769dfe5e1679ce48842e85963071f6457b4b94ce376d6562814408a3b89ebcde9c42f81f92d197931b4f139095cef315a32f426fd8076f20de9640eab6056f40ac1c00dd6e5c260e30cb296fef4ac7d2040bb1267735d9848883cfe62ae00f7afe32cb04641ad56c456acded93e862c036bffb373884b07a9bd717aeb0d1a32ec9cea64b3fef4e221eb08fd5f1bcbe56549d4b12a96f14425dd7168d325e83b2429563afe0c1938f75ec264355141497fed08db1d91a86cfdc1061201398a08116a5ba729cca422e606d5e0f7e67b5f653266c9baae6c651c4549aa0b03d12abe9769add3af561fa4b148aa38c5b532e5bf0c6a9af55135417f378023d35cb7baef89fbda6924544d6682b88bc4acfb267411daf60f88481539a5f3cc836da996e8c4a3e21a6c8fd343fee7d6c3f0ca8cc13ed4d0077b922f99eca7e4d661351c0dd771ef5b84320031793eb9b191babc30ae4ed81d9df9cd1b66a8efd45d2a0174bc62695847e3e255c617e5a9f60b2e2e37e1f683d67d577d2809e53e3a2910ec2bda227a4c49fac3fe2713179cdb3fb164fe382650d1e2a36c911460b1904483c57c2b4a3549d9b6e9acc8ca0ab331ab44ab0793a6487ac6d5b0abeefe04fee0e348bfb8f9902dbceaa614ef9468da3c1899d176ce04f7149ebc7d41bb2ec0495d0dd31b53c6d0a992c7392eb4a1e346e42555f0bf86380801b292d13cbd3772022f046db0fe7a19008cefb4ad21592417c3136afbd3eb00d915172245ee9b76dd391c91ce3786c653c7d500512d090b344d1d18a5b03994a62bb5ddcf416866495e874dff90b0443d900b7a1086423d7fc0e130bad8e54b8e71cc7e57e446eb18410ed18dd619d941646807e8000da7aa89da402da743054c57042eb472333b7da465ce9d9b6753a39608136b78532e257e053a689f2d31865e02b12c398d01d825b5dc0d7f5ef6105745dd2ee44f4ea03f87a274e64b421f9aabdaf0b3f88d818f16abcbdd3a2c6461d285b6a9d80ac488687aa36cdafec8b5bec250900e3ffbf7a5ea79e4b6c3a53fc641ccde253c2714764d81192ed89ad4744dde29e0e0cfde0bc7148b9f3c079b6c09a0fc94acaded0b95433513c3effb3449cdb3355b58814b0356c0d44df8139ff199ea173e7705f7d59e2b0d633acf89b858c4b1568aad1796e92c191f594d024ba0772232ecd6e5cd4c69f46138ef5e907da708c61262ed4ecbdde0a95b858f4023b55ae50a5f1e4d6026e62262b28615e3efe0f9b8e3c29313ea2be6ef0577492b428a61f0a6040c0ee43aff7c94d93a8b299d65b3f64c1b717703abc39eb49358700a9a486c609c6b69ecf7be4d81210c1257ae070067a51516f5fc332413b2bf1a982e4de4d05997a951aa2ede23cb7d0dbe517ab54a4b9b55f074e63145b10de09ed221e844c41514f96ac6e45222ca9fce0cfecb2c8d9ef75e3d072e138aebda488a89cf28bb1b0072d2fc21ccb080f71437c9c867958bbe0274a02bce1868bb210e15b5316d3a181417697c8fcfec565d454bc7b7d1d9fc6fc5e18491180363493e88e3325241ef0d6d6d1293fd2038667c896335f259322cb82b08ee633312f8e8045b5cd59a1af2f28e9e15709d16db999542762a38212c52a3bf2f095902981e6a60c0af87b9a97f61fc667ce03b0090d6d18cc3e1c0fad2eec9d0d900ea9b6faad843eea5fb1827d0b5007678f56dd9868d7e1e327fa78261806b8749a96694bbc61d84f62888e53a477b8fd91f0630b3aab3280a4b100a38ad853134fc5e587fa276047ddb6076a74f98562dc85fc5143919b8f60b4f4e6d3f23a44e9b6d4b2af2b9a0c3f0ccb7e122a0b39df6b83821655ad704ebd467facfa5abe53b48f6fe51b356ed95ab7fb58fc71421c806aa2c71b1e9863dd8fe3700999dd1be5fcbee395613ce3bfb08b574c9d0bb3286150a5b8943493402c065595c84571d9b4a4162ea04021e093e39f416f4e77d90ba653254f68310c76efc826c25deda7100243cb49ad4b5e58cf25215bec55b09e91eb6a1b1917e09b4dfdb0329120d2940d9a42c4ea31cc13dac944246e62a0f2d1e9bbf36387e1732382d24dde5ea347850158fc983b908c2512306422ed8e36d9b8e1bc7a411531202101d0aaa82bd12a5b0c7ec9b12a201511c08e51ea8d4bd482062bfc233e810694da6d5a4116c7a76620790ff8dee6e6405f2f8244496f19c3684309cc6395658067bae5ad28f4bc071657820ca584357f3a2091f8992d0a51e86d3609e2c9fe1ced40f56cbd07e66182cacd43e20b1df16bbd2a923a3edd70fdced80d375eb606adaf407834234c1a56db42f99aee69ff1cac28ef2df4a0870aadc54b83c4d8da87d941f3259280fc16519915d0b6fa09bea2aa583b5b7309729b11df78746836d98d9c15eaed1e37398e644c989cb15a3dd02cf1729d37dae6aefc677f3129fb8cf0ce7846bd680d4beec9007b34470af9690c0ccbea1fbd2550994f7546c7b21ca3b29bea58a291b98c70b3ed3f5e388b40d1ab7993742a53648679a9ad299fe26775559047e9e86719b37c2fee7bf19ad578e5a865bb72722339a0b9b616214710753201abf519334135614fcb622d943049b436ca9e8b8f3b355478c3bc021de081d1724199ef9032ab333825b748f865d705fef8070a4ee91cf852e9e8387c90b0718944166850dd8688a5046c3d3dfa438adf904c3ad67ff534f8ba2e57c0fece118aa521a98fd0857ec67c3b32e6172e261370ae688e4921dc1058c873cfa3e17ba75e45e90b3dc2ab7f4d99d0c8846ad6681ff5c50d9e4b311114131e30415d60d3ff0046c45ae74e2fef05655fdeaf610f6115d7f6d5ef86665b31da9ea9b07a9e01586230c6a51538e73df162daf35e452633818195fd46f397bc213f7b38eefe763f5fdb1ce59d139fed033e914f9de67997e8af32dc7f47bae8c1c18e655b4beea4ca33bfdeea85edfabb1c6d89907ed711bb1a7bd3490688ce0fbce76d5e56fa0ed3b4f39955f57651fca750d19e7b6dcefc04730db5ae87a746cbcce967d8c946a5bfcbbde01b41f16649a2436aca893994b23c9591f5ae557fb5e6523fe72a7c03ba808e41f659021e8abe2df4bdeac7b61ef4d675a3e192e46aede36e0bbedcbe2ea110f37943872002362d7995dce62ed48bced7b8a9e5855124da77b3dff31b16b81c8c54567cb0740d774217b0336305b279f9066b3b90f0d0347d3a6900338a48284445e81dda20c8a300883088f3e6ce3111b3b089ec537ad90d594155589844fd346ad66dbbb438bcb2a7c7f876215159284afe4d2b3cb3199db6df15d4021db4760bca0c684a197fe739e78a04716d9e0cc01dbf23c6e7468fd45263dfbf1100365f65cf92faf3684395aed1d357ec2f7747083c566041e5ca1ab0fd52c5b235c478ce0ec92b0c3582fff1102f11915a4da3b6754c38deb9e5efe98b566d3d95b23ea7b38637fb965d43fede72e611f5fec5ba1b434c8e63f9b0a2f61448df04ecff65940dfa33e51123b2329b5d8d096cd79f899e08159dcaabf814d5dba718d35a7ab15be0f4c6e4b20269f7bbef6fd7bdd99b0a4d9d74c0416ac853fc3ee6793092083060c9e66de94bba56ca76b180479e7a45b724484b82097bb9f287ea7aea48c0b36946e933018c66b3518505f5caffc8c44ec20cbe7de10ccdbd2abe71b6a1ad8ee53ee773f1817df027b14d6f636af0083a9ff080c55361e251e9390314304702b3b58cdc05d8ac6d7aee48903142fc57cc592d0d0eb2c99fa085c9867dcaca2d7ad4e44c071c1c81dafb46e97a581fc4da8feda3c230a90f8263843e9ac00288258a871ed2035982f978b59029f6f978d845073a620fc08915edce22f794e334a295950255dfff7b283c7f142bc90c754255a54f2306ca08c15ed4e13f19b5eaff092ae67eb7936f3c3cc53cefeac11094b034b0690f085869913e56f739e82dd153890c0c504dc50d13ae5f42cd8273ac67e4dab0f7fd91e70a03beea3bf6c6bd037eee43cbd81b109e0fce93c929f3b200aa773ef1a120e34e349b42888beaece7ac568bf98c7379273bdb07e486a7628d77c0951c17e77f82d252be77004b6d82383bc80f3c1318eb9ccfba8865b769b89b09818c22c55275a14859fdc351663f028db5dabd735b5d899dcfc189a6ea66f09dbd0c6f7774467a701ed050fba2695bc5037c226e68ff41cf96702ef2f9f042d2edf3007c1bb459e604fef54b7dc0491f8913d1ad9b2db5194c7f69420c5b25f22364e1e702a7e91a1307ac9402c46fe3df9bb616bc4aebc947e0137f8775c52354498db8deccd30e1156909d20ce107c5f3c8d7ece66637a57e90afa75ce6a239150a9824ae2060a12c858ffb1a165c38106da51797d12ba7fa9ee608e6756b699315275e36dbaa18329037bb640f09655f6ab47fa13b0e59c048ea44d611460e6879584e2d85e6c3f67a1fb6ecc5069c9eaa90e3cd31d36f26dd73445cb957bcc0902e654aaed4b218dc5fcd1f512c3ff3eb8931d27de81d1941b14eb9caf7b16946fb5b1a4c1dba242b0f8d255dacb45eef5bfcecd10033bc89739e02b04c500e9f4b39981c3466a82cda585745cc9d479671f867df29b5646491847aee402724a751b5a45fcaccc32711ea2f6537c081cc454709bf637c3fb565ee6e33ace3cd370d91246c83891759f102bf2138b8b3e9619306391e8be72e8de09f43b6f2d8a48e5d6ee1a09e9d75527a784737c7af002a67fc70de4d61f44d0760d1c299f8df03f3bd872e7033597a80677334db84792ae0350938acfc6c321b4385677f43276f797638ff43d165ef11dd499214b4ec087adc94c691cdceed2616f9804456a14f934f9f58c309a4b181d938529299337a90b821bf2bbdfb21c66ae68c169122b2bf9f67ac65d4264c03d70d79ace1aa2ef9708020e8778a26a1984480ba065f71e1d7a6e3cf7de423819cb71ff5beb618fc50cb29de0bb242519289e27221a8019440fce010aaa17bd945025ebbc0d795ac26dad7c5ff44fc6a50b98eff4d840a5674a7604d4a8097b5f50ebee56887b6c4f968b98112c5becbe89b4f228c77dc3d42dbe38ee4d0a553f8a7ade39ea8a8b58717d4c13e5500243641ff5e018cba32924409cd7eabb39f59915cc2267bd0cbf4ce3e558f28fc28a5ce56defadce3c8005efa390a172823acc34c379680095c23427f2c5653c6e07b1acfd28bef774867f17700d2bf1b68ea849938a777ae57da424369ae195e6efd7f043a17b4617921a358dd82e1175d69ac5f648afc96cbd49847ef7836f521791ca7df55978441fbce7b20d232bf6f8ce6df9c519d3103740f333cebdc8fe388b65fc9cbad169c26e57bf9eb154ef92b233e2bbeb4d91057ba9ecd92b78deb5246e56069c78d3ec523a414e564e03f2b6030877c931c4682a7712a1a7b46a553dddc7b2f12cfd526b1b00d96cc284c7fe3f90ab4061943272c24430c08545db3ceb538fa46fbcc961a71be71477054033c68653cd27f94b7c7afc635331b36c34f1933da9cb3ef14a3627c0090434c70bf6d61c2239683508f276c69438068fc01e65cab5a55bdf54d73869f25acb685df388cba0aafb20e925d206d5a15aec452d49bf4d9e3d956c45167d9212b31ca158437d63f2aab75b48765be08fcc9e2a3668d541b0fef3f80ba38f4fcf96572002cd37e9cd2572b68e0ae3ca9be8cc0e4aad3e9a38876f5d2aac3dadbf24f0cf7d1ed5546f8811e3bc43b645b001756c75bbc165a7f6e4ad72c5e46645902ae2ed538e6f75b31ad17ea81f146d34cc22595ea6520c2867ede2ef1f6d15a48b863e3536b34b2c305d3232acc1aeb9c8231d39adb5d1a0f88bc17c98d4627afbeae1717ff50c5899e07ff415137c0e31eecda1d53ec390f764c0c4497717055c028e8eed8b221ac25a5c4ba7c44735e7dc71792258095d55d92e899cafcbd3082d8832adc80cdf14a3bfb0b24b030b3b7868b2dcea3b6fa90e79c70c0557ca3a13deb029bb006dd68f66b3b408d3009ca820fb4169cbdde15ca6dc3b85a47a811e3bb34953ef58b91746d8b5b4bee6f2655c143721112345a0fc56cce0f8ad935bd7d47049820dd517ac6d713ae0486826361358a578fff85b041358b2a40af93bb42507067a3f600049dec4ca8b2b70121d098c895342be96c663e458b69a6b6a9b29c4f7d86dfc4f8c2e27e1b31a4ce147290b4eea7fd01d0adaa69996cc74bc1424c3b9345d7eb2f6341421829a9da2242fccdf7fea96110ac5531e44cda4897a8bb3b93f4aa2a9754c4832f142ebf4f1c713eb5aebafd3af8115979fbe04375e2e6a6a83a7473550e4bd57e599d7e849c0f1177fe7472f528fb9498a68f8ad77d1f5520d2de0745a5de8ba4e3366707402aab68f19ceb8f53e67aab69cb8710181cc2c2fab22914133cd2b506455c8c3eb75d24d9d792d9ce8c3104a842beec9bb95b96fbea2144240abf2c9e017603b591e9eda858f415d5694d97d907d751ee332988c6aa399fe4d1866d61fedf9d7cc9357ff05f2596a8a88612fc0e1145c56600c282af2ee667b0bb982a0a107190f705a9f931bd85c016c011188ad5477b0624a30b020ec28a710f66bfbcc8721c2cb7bbd2253fcbe9b57d8b13ff3e3d4a5c832b003ea1d5c5dd14ae3f5cc73a0404772bee303e14fb0fe14ea99c073d47a2116768e7d5ad3781b5e8b6cf70ce12be00d5ac175c6bc59a6da29e5d6f8bbed254c4187b20bee1e480eb894467cb1a6f20f503b39b223dfb723c3be515a68ee392907b55ab26649f91c953e9a676c6521b55d464b82534b6a25d1dbd2df049ce5414fc01fb688b42b4026464e7fc02129d3af53db8e56b4511e09681a84161a99b6cc7154fc818a8c92dc673c34142d7c10ad834008b8c5083b85f64ddf152ccb29adf9db23f54b7a72f7d7a866d873b5fbcd2e665b812efb29253ffc6dd0255f490a10aa86b453d43144b7c1e8376f4989a2b6491108b5b07d18a1772a659f24180a83b30aae77ce275bdbaf717e01b8ece74b160123df86cf5a4e225cec4c0e0940b5fbd33be368a87f2dacceb0a9254497709af3c85ab955c630607be9efe6d088b27e84d16d17c0a90450c13c992cc107ddf8afc82fa14ea3ff52abebd887b91fad97985f991092e9f29596e0e5f3344322e506151fed0e7d51ed64eb455dfdcb0ae1d5d88ab7a21e9ba3c3558e2a5f12def81ee35653cdede545cb2deef9bd7ed8a1dfece3e2751974eaa287fb4d18cc20885a0046cd6088cfaea223eaaf7c415f369cab6b108412ab0f10b3e385727a82b859b85c9954d95138894a422dcee0321818f968a220da2c1f0f72f14fa8b44ede8c0ef3cfa9cb28e79eba179a6f01eca74857408fe1697d5e805aea56abbd87a643ec0abe0d4653dc50a68b48ee88ac260d08b73556d20a36e72fdd08c443adca495ae19dcef15e1d67e8ea7d45e6d855218d5f36f51d0a6b25cddf653110dd0c4865028316cd7a85638b6be79d8a09274e6d4d5ee414a525278bd41efe5479c7d5b636cfb9de9b29400a0f350df9e42acfd415c5b5cb25fbd58e2e99cfedc758597efdecbdb07fe66dee005bc029fe3907135a6acda11f95071bec1eadfeb137e68a9d7511b6e79fbe59d41c01a83b629b3e79b41b0ad2196de183a2b324213d251f9c340d9f3e5260d811a5155be3a9664017d398565c9db6e273239dd14b5ffbe5280c0396e60b380bc3627e0f0035e4b2a232a128d914c853dfc5951175652c5170e3a46c659630a6377341cd7b6b75ac47312dc751ee339e652f585fd21f83188cf085a263605d2497c959fa14092b77a82fe469bac8d7ec0d7bcddd32439cf7aac593be61e27b25e9a50c7df925c6fa38665c4e896359a86714870651732d2b651882e2b8c379cbb991d2c8b634d116260bea5512d31576006267dac050e96dab2ad1283a9a23e4ebba60fafaf5e9425827cf17c6345becb0d1df6d238afcd9e6f864978962919e944a55586306330d0d1cd19a8868ed8bd433b37ce583b71ece039dac1a08b2281ddb5bcb892811d29186fd3fe3ac099decea0adc15b94d1812af0cff4512d59c7484f2f8bf846439a646c30723dd730e73abef9cfb53a75b8825c120fe883b42da0282ee4910d1dafebf61ca830f71f57533d5c9f10200e8a18a19f5e7f9a6307caa01d44e394815aa3824725a3a96eed82a81582e0768152e36356bc53fc5b53fbd17238f7d0ddf5cee73c1ca12d1bed80ae07c5cb7605be938fe3934d23c2dd8eb6e517b647061f1a08d01677dddbeca31ac35e25b6eea1f5cc9745319d0bbae047273a8a701ade694dc4b118819c7d8cc09f4aee63663f97f9945d40151a7c59b32c1dc44b506a9dd278c5c59b955e837723daea57d3c70d984fdad18acf407489b53c0e682ea62b522c9f87ed1099760480013ec3bade6718892c585b8a76ce2a0c587737083a71a20cb79523a4f892468b11373b0c9680d430c7f5b3aa5678d4baa582c31a2c25b7c43f4a105e826a1f0f69dd069fb1f3caf6f92270b6a0c5c50c2f30f946015463a48b4f0408f3004ac91a32836a7cad74578f39d17284872328fcf9db0e8bd646e10cbca7d7cceb0b0f3295b59637721550716e013c84a2dae5ca7012de6b20374e482c057cad413e06bf5f2410284aa0f47e40dc312146bf2ba233e09d29121b595c630d81a6e97c1e3c684f66c3642685d16f32ad1b27a22cf77e9dd199b90c2ec777733ac5d7d75ff06fb5b01d1e6660c8175ba80058ec0acf12b1828a9dd172eb52b1d8f676c9a9bffb99bc3b7de3a4410cc142d67ee7327e4d47681566a61dfa5bb861f1c3c51da0448a4f06b1546a3ddb37d8ce94f717385055723b660fda91785497525076e18336b8dc84709c790bf099068ca65a23f45f4cc6f962930da1e22306445e5906a88415c0f615fd116c1913eddee4ab46237ff7e0307d0e3103f4c8eaa50367ab1b3362ce306c6cadab3452ceb7dd053cff14dbce4bfbb8da21c1df7f3dfd066f7ac6f69474552d9a3700b71c8ebf8d37be135602ce11665e5dca03f2e52fde18e4065161c93a808028ad0ad51e0791bcf96f32f704d0e114f3d3497f79084cb9ef0c86cac1be7de2326a4ef3849842f078c4d62106f377fe440a2f0a1779b18532b06dfe0cb6848f22cd204a3e7a881bebdcb7cb1b429656bde2d4f765c1fec20973cdfd36a74e3268df852b352e0700c2c720ac4c3ea1a42515a40a6a202af1fba75b1facb3e2d17855eb2c9ed0ebe4b1f69fac618bdbc626feb5922d8404106e96972439f147ee60c8846a83d5bdc3e8708ca51b5293c54124bb7f2d8a8b4955b955bd58ba2925673016d101d9c34878fe506404f7305bdc297389c8a6d740672cf4b4cedf9470abf9b011fe5c5be48ec4fa858c70a915b9fa435896c07eb9607abd1e2be6ed1e123b70de4e3405e2d1075337d8c882ce86cb332a957eed11eda8dd2fa0693ece1509432ce73426df49a4f355c22880e889e5d3abea02fa7a829055dc095acc61bc26a225b410e92bd53c44082a4e261c59bed256f1d10385818df7d7ecf78fc2176f3000deba62fc6474d792f6da043719b304f5299e053a6fa298221d338ef1370e29dc4d66e80078c31e4531070a3bf14327c74119c79d2b09a9e755b6fcd150bb24e299a08741ba23091286bd94da16dc47cf8ae440028e517076171209166acf8305dcc5b9a2d988d59b660da7e11539704b063ccabd31dc7d3eaf553ffb6632f1d6b0caf7aff8b2f527fc653bdaa4c3aee352e67debd01df5cc47baadf14660f506e35fd222eed99aaa648acbeec1c57d23213fe582cf41ffe0befdacb6133a394ea378103fe135007012e7fc73afdf5ae64000a4615bfc12a0a9d7b80833c8c7709315a55d575c929dea8f087eba9b0e7b92f5cdf2e1bb62ad11faf2b929fb9aabefb9ad4f5abb31a987e20dd4f1af8f242acc719863a7a92a7a24eae8c7c7161dc995b49570a4ee67ce75f9cd58873c93599cbe4003f97cb240afaa34f7c3f66e82e82b670415e90610befab6f3cc7eaee13f78136475edb175c022ea18fd8e16f2efd4675df99cd218699f8d21409df7b4470d89898f5a20030f227d8f6c1b4ff30f4252cb7c86be81c52ee076d8ad65e27840954c3eb3e072e10829bea11b29dc0403259e76d7053f9457d2b3e1b2eca9f646e45b0878f78a1bc671b74756cee95005ef05d5527f745a25897d5809ad4f92f22078c9acbfe1a1b0a8aa1410ca0701c1fc3ccce6cd87be23fdb119c493e44ef4e7edffb60ba48cbeb9827d2d94af2efba4d4037a09930aab26b804cb31d38d97909ece8e35acad0c5dfd3a07b9ca89251df768aa37ff16c5bedb73f5f7cbd92aadd843f5c2645d3783f9b77e92171c1fabab636f94d1d9a47f8160fa8e24d03de758d0cb3fd30ed2af8e450727cf07ece9cd798aabad8d10a593ea94b06266a5fb1da0d82c0deffd5e79e850f6e1d51c81a8da1fb2201f44ef076275d0a24075d0ca08c1989f9ebde6dcac036120d5d01b61451000af168b1c08b5b44aa6759211634c6e29d360b4b35dcaae0d80b7838a466d197afaa120417d5f2ab337531e6aeda7aaf3dd36b7510723ba50f143340c5dc2e31a38d79ca4fb8cf32ea6744b6675109260c5b2de2f507c744f4adee584195797cbb2039c339b0aba2df29b9cf0a8491b8e57ed4086d64de6af936d7c4605432318013fc901a1921f6308088e18bf669dcb0025a109fa884b6644e9766e4fe6edcde8987988160e1d2cc3dc8ba040b67c5b972d1190a440e1d9f2b89d049795c2c95d7fcfef36e96556852e94447658b7ba7ee6ab85d22cb12d681a448689f065dcd90bbeca4e469abfd57ca398d07bd423d1b83c73b3924bf53aa01b65c4897abb31dc14178055660f48c2a5ea5cea5f136fd1e9e066ecaee480faca1953e723d766b6a248cca71a8be8bf90227318b2381fc8ebcbfe521495ce689ca9d88665058f1bed554657bbb7e8a50d9c39c40e5c504d836aaaa771ea6aa53d1fecacb0cc2979a75bc2c6e94f7551517145e6b124dc496ce2d6013e5803d0a0509dedc35836a2bccd2b90cf8657359a7988ce800968036148a2e2cbd4d31becf61e63f7628e9ecdb5a07d6735410dd6a08b67f18baecc340c2beaf48e7c01a974aa14b288bed9d0ed73ecb17d95e69121bacee6ad435c802a7b267cd91281a6d477edc51b076836ae7076e9c3bdbd12a682d50e4bfc206d49757adea0955088f747cc7c2fd1080f24e2339aeb4b8cd3f07149d78a36b7d9ec9d0feba3ef574777ad2fc430ff6c83fad25a4d9ca68e927a6a3a6c6b6bd0a08517c9f9c239892f36011caf067a25ab828272a78e6c67a67d0702e4efb57740f70a4d08f2e3ed7b5d2fa39e486f9843b2efb7c81a9e53b65ec9708cdaf5eb47d28738c4a883294f0bf025e3a8d9374a58f50c1e803a396bb0095824a40ce2dbc54342ef96020858233fe7e0c57043ad2e8c9b9adc525a4a9c96ae2929811924326253f5e60da8faabd413292e258431837e434015f3a927e25b9a5ddd3d9a9a42148f30aee92731261c94f33b7e7af1b6daa74fd4e937f919d41d2dd0ffce705662a8d237503e117d5ddfdb0180bda99f314a9b9cf4a25aee19647ca84fd21e018a44a9c549fbb140f392275f819a70d6cce26b5fa1f537281c3ca72e61a05393361c37f95469d549a5c08e1da0205a587c956f449addc282a39375384fc1f4420af9c549a012f3ce8ef77dd699fabe6d57ce7345be2ad52c168ac202406fc10370474c96702901dc9d1a5c740146a24f065bc16d24464d3b9c4208c8b580ce4b5f7cfcfb5c24bad3c64b2edb8de4cb6299afa7f18d59936416d8891194f4298804032945ef141ed73726daffceed066ce4a69ba3bdcdbf0926f2ebdd8af0a5f85aab693e021710eb7818643b9b0d8ad671e08c73c2fc7a40e57729f4ff8a9aec60c8d1d88b22172bb5b617e8c6b00dff166dbab12c75cac65a92cc0217faa4e6feef9ff92f9270972b53528e42cb2584be3467ba67715b5f295a3939e75cc9b4fd443ff569fd805f798431e32638d528d810e3e9270e8fd6519db3089300eb10cb67630991c533415214eabf2f5b1216142dc04f5ed8672677b4d3aefa3f1cca7e7565f0797b67de93e3130dceab7ab871f541892fb997327bbcc2ef63343a1773cd1e94c843d3d5cdacb75c7731beba4db1567536e390e7ff9b95c9df003aab48345bdc1ebb4e2b046f5f6a0b1184f9fd140d0357ebcf4e30ef0ae59684895eeb5007b7200a19d7f080dd7ee0e4a6e1f4b063d5bf22b369640d7ad18d5014a5f606fe9f8da2f7a7709ba3efcc89faf591c150a72202a74f3ef195d137e9b08afe7e7648f3829e4c4f24d5bec0d8abad3d95ab3ca40cfbdd5912facb5b817ab6f450aed55e2da41772a0bee64fa0b9b48f92067d1919c7da074ff13651c748076791377fee9318fb1d1a12a7a04a574f66d4c29394e985e71e52c6e7e6f88ef613edfce37206eb5104b2f88027d5445507ae7304b3593565dfe0446fd35ca6839e9b561aeed41e7d32d140d9b9ad17de7994e6928153d0443c3971f7d3f4a78f92e2e26820af8b58dc7afac7e270e4081f0ca3a97d17c43787a8f7b0aabdba0fdafa759f3ceea7e82ef401fbc9de9eb5f4090be5bf1a3997860c950ae92bbff7b9bebfaaabc08a1e5ea2163f6c73f85e24496b3058589620bd00561e6489ceee3ec5c393e6ca5a8df2f28b6391452115ebfaadf2ea85fbd8471ce82fac60724007b37cab42dcb1ab71d41ae395aeaaeb36bb404145f8212c981ba318eee4e5cbfeebd56ddaa3e003d967b4b6ce42ae171b40408f47661bb8a4ec78772c0591170c899e498c4223adf722d7799982c5e3e0bc97d59aa6ab7a53170fcbba92ee002a5295537cf3a4eb73e6855f8ac9f1c4b4d89a346718255bf8de1e15141de2b72b991ab13ee36bebbe2c730d9c68005019c708beb0934a2a5f78cd7f93cf187eee06005f2e7cf644f5bb8a6a64b06e92045a910133d1835051a800d60d0231313c05982108177bd3c3fecdc90818f12b9b7a52a46045e8171b22f3274db2cc028c000561c750cd9fbda1c041a0e6909b9ea401c9e3d92bbb35f0424e72a6e8ab146da4450caa4bf405ce30ecf7c8a187a3ff7091811faeed8f1e08ad47071a7adc95ea61cbb2213cfa8878df76cf4bc868937dd9eb7f53276898a14d612a62431f6724c68b4f52422f0dfc2539db836c91f6b8cd9edbce27880bcb968d84d8045ad1affbe791b3658627cfefdaa72a0229b2408159c30cab31d9f552bbf35c708350c1c53920742723e0a748afea1b80b4375bd2cb9e0d9209bec67ded7eb965f2003cb2fc00146369d521251b8f5483c94404cb37fffef3ef85e88d4ebd33ca514bc532435fbf179301f53abd9e0cc07e216487b9a05d819cf228a14371422ad46e80013b0c2fd8e89d1d788035f9729eea2f5d822f2f12313faee33d2c83fb066666ac54a6392179ec7b1c2c593f9e41d0d2805c9c61ed9b9e4ccb6eac327cdb6dc0053e30162f41a5d0b43807f575f9e058c61e01f09643549d69b1abd1d03ecbd22aadd7f33f421ca0381a3beef1534c567fe30c616e9593c65b4a8d862bfc3d095ead4d6436d862eace1e5c92d4058431dbd2077f1b18272f18bcf73d28d88b3551568d9bc85b10400470335777a2d10eb40ca0a780ff0f7c738754a65df7161d02d460f9b32997757860f87ce81eed0c347bf9c54d8507380284153e09c39d9f16fbcb9339dfa6edf4192a3248c1b66029f3f0f5afccf17188a10c8522a4b73780ab955ed47a9678d79a1779b9aab39116acdc4b9583c2032826355fbac8029fd56c040d27f32ca2709cc2a6ce87645f06358467f347dfc13f618d22a284cfa7580f1fa0b10e1e4a8ca57eb562b2d055c7533e9f7b6cedb71f7b4041db78997b0ba2c74759524c341b350f0327c167f7163174fa815a01261a7adbabbf1c38543daf234b3c75b390e532bae3b1e85625655d51f8ab81b63cf3b3ae01a664d56ded5f0917f2ad25ba1d9f92cbbdf02c3b8daf66feea7a51e17766bc7b471cae9348e9ec05e24039fc2f2f95490d1fceac3997252b3c2a9bea14a1235c4f0fc221db800c2410a8d381bc9ff90b79328cd0c8f362e198cc01018bb562b68cd5ceb957545dd5341312e8198ed9c4dbaf2199bd85c8a9288b19b070830f58362ea60712449d273477d51655d45794a932d6161374c438dcd4c33fc74dde2467963563458527ea2c82c686823ef8e40a528b8e4a476be912e6ffcc88178e1f77ed5091d25cc6387b0b269be97e374663722c358f44e12c25446efefd10a43423ece7a691686ae9839313b984de618a3dda7a9ce81756740bed4931e405c8654240ec0ac6d950e812a1d6fd994bba239952d3d79bf497b33e2fef6cc6db800528d3e5b90e8e136655d7bb8883b30aca2be471ddbe2b79135f21042fd1991cf680a34a52c6aa191029ccb4f61f427eabbb3a6e43b71a47e44d8b258e8b2fcbd92ce98c9e23e5c4b16149741aa2edaa1a44bfca19b7e808cd416591ce814bca2a9e245539def78478b0a52ce3b1b20b840bfdeb555079c785ec2d006aa346f8a2529ead8cbe065ae584de505a93c1779dbc9423c8c511c77b87520b040b03ea5122fa50b6e20cf6fe087a2c74994ac57b14acfbd4c15af682edc7ee7b78d5f94b4f8f5ff3fb91f771c0ecb5fd6fb3eeff57e89e855db28ba683c6a8e371a05009e3977fecac27a8c6ac6c2bbd24cef63cd3385895871c0d94afb4e0a3a07e9ca9567bbacef5547c6fa18b7f3683eedaecd42bc11483106a6d4e19a030c24243abbf19b76c4f884405758cc63efd9d257bae921d15b97dfffcd079b8472b43f8db9e4cdf65a05480df726430bb9023a433bc3e9181e85a4d5ef0f0432298f87805d26c48a93c5164497a46fff6da7bbdf2465052c5ef55f13d49d4d21cefcc958153d7715f86c1fd6cea81235c865b0d92d18c6b4822256daf3f858b8f52ce42469c6bf2d216b83a9ff9e7eadedb7aec7158f72831aff46c683498575c55f055d867f8c7a771be3c10eb4479246584cc7a4ed50af271331ad6fc694f76f9bfa3c767a8e25c46527f48aea2370700ce036304622e3f37ab04b74e9aee0cb7a500c4ec9272b1636b1eeb16e4163cdb8071a471fb28db8511a786fac4620a9df277db158b1ab46dfc0c3dfd25e53e62dd28f26b3679ab297b27d5be8745267c154018cd065b509c42bc0c78a81eede786218c4d057f0ad66fd475749aec7d530b9faaf752ea6fbba384e339f344e21e0b5160424ce413561a7fbd4d9b919afb2bfa800541010bd9c8117510dc3bc57b409ffa8559d6bf0dc541bd7c836d70c7608608648be7187b157f78c06ed5ce1ca1b5dc342e901365d40a1a5937ea979ac37c0270cd02d302f1c4561a1929c05fc9d0d4f7fee7478eff59c5e17d4a0cd31fbb6e4e6ecd242ecc1a24571c09c5b5572ef2d90f742545be40da568f41419405efcb824d462cc34d6d35f4c5901dd9de1e3c3984a7ed7fa525592698b3cd15b97d2d8c8a61d5cc6210b2a716472d799bdd4f742dba72e81f510159b13056956221b40b95e77ecf482471291b8686597bdfababcab01675ce1989994a9a6f514ea7122cba4894c74e9da5fbdc363e37fe31255a0ea501b20c8880e1373b54779b0bf5a90fd9258e85724bfcf3a3e80b0d3cbf8a4dfef9364ed6dbbab8cb02d7fee532633c924a9e3c93439e3705c25db4d3a4f524123291100706506ddb818cfbaf74fb1f10ba66f185b7a0d181483d76d29f2662b9848b678fcff1a98c494eb4bf471381ef5159c32783a7b81c2b694398871b2357d8cf29d978edfe0cb2abb747575bd796f3a1e6d925f3de9117f4cc88a2baae2675997e7bc9deab24facf96a6539cf4f92d0ffe796208c668007830c0e403e358481ccc7fafc76ea481b238cba3f515bd9f67b581ddf00ef6506d6d9e8d3bd65864fb9e75450ffc3f6b6b3ab460f01d50abfcee23354dd51e6951a5e008749da0436c88953315ea2359045e79f683ca1f3baae6fa6f3c7a0d5d732e2b3969b2cd1ddcc73f594121c133d5eb5dab10064ed3fa93713a6ded3bd75f906ca31a69610d8d16bc61356c7fe7f74c7e3d0a366e4d9f4a5f4666c536811099edffac4c92768aba07041e4fa824bf53bd44e6ade5bfa37af4e68197ca134e42842bec2f199a398e0740ea457d082b37afa21999eb44c5c06aed490f73750de2027615798f0ccafd1a89fa2cb491b14f623fd3179931b123acdd056d00b3de6b1907f6bb8770e3befdd63ebd62380989c1ae4a8a48fb5adcec5d2d3c2f56b8fdaa7fbb6d6e7251a97e442b03e4731514963ed8d5e3a62af20281e0c5ff2b1dec3976a78b33a412980adf136d9bdd6c606e1c96ab1efcddf8285ce5d44aae59118ba58599b7747cba48e5bdf382827ba3d5cb6b76c0b9f38c7e0db40a0642e2ac3869c63e35e64819069dea06f360ada36e3d7d3f70a3218d4c488d4bd9d33a8aa2eff3b4b81a04bb526ab300e8c2d51c2167406815f1c90756e683a668874095bc6ba94a6372a49276acbec42de5c5f80385fd081f59403d3fa72c9144e0357f44f293cb9c3d971ea7959ffd33339d961be0ef1bb5398ca331f5fc9abc2a1d6bd661a95c0c519238bc9d81b792870428697669757f2f5c9275058753075707e6a79a14c74e8b33839f6494bd83049e513ba98626423323b9dbd986d4f927a9d682e1213068b34d6e21ff3518aab52f298fbfcbe9209cfc966a58553cab47d780a650bfe3d637fff0cb6175766f9779f1c86c004e5afab4c4f2d2c15d64d0a5508e01cfc0ec033c423a974bd1d0b2e0590eac243666f6bc30aa7cb9e13ccc47957f80f55036381db8a9dd0bd9565b68fa4f65673e48cbc9977c621bd3527fa00b563266924b67846057e3182a47a47a98f9e05b2b433254af811264b034e116b3b9205437e7d08ec2ad75dd04f55250befbcef5c7542194edf1a337cdec05d9deaa3ca6a75b76b3801f5ac878b91fcd3cfe38c5d3154e1d5e2596fe6c0a6a882e2bb8b58881644a83fe2b446c4a046d4e85b905b00b9073f0d18e504aa9307d1886b73e9c952850e070fb26b189be1c292ddd673865df203e378427c8c84104b9ca3dd9197a8b9708288d9432d259d507b0dad37e20c3e989a7ceb954a1a4d9e7c1b238051ac0af6bc2305acbb586077e5bd49ca8bc93db4a899dcda8f3b1138ffbf88b5b9e02d74a7df7f165e78d2847f63bb841865115acc09b51ccb1993d503d8b2073f21785db6989f1ca8250ffe7dec149aac551053682cc4b45670f62b49cc2226b4ff05554072e671b98b817639be0a90022ce4854c41f76ad239d2f17090fc0245bf7b81ee460a8498583a4f4e1983721651ea8baac35cc3de79bc716bdc03612c80132bcdd5dc8c1fce5e1da1c76dfce33288c3db82c7d80b86f6c389bc3b793673e24da56f3b51b6380041d25fa60e2f184497eea67cb34c1c2bc195332494d785afbafcf1967177b253c512c36650edfad3677c4eaac82645d065847b0fd08eafd159a45675014c6e6e1167be5d25d7ad3d5930e712e7e805171ecb1641d7ad1bb707a36098defe27e7c5cc6dc39593189e7666fbbd30090c2169d630ca6feb1d4d68ebe2801c8e19e7097d85e5e0fc14e13d4059c72a77e0a288fbf413e32ce99594cf6359d3c51218338287b4a059fd9732eba2d325d959f6439aec66812502e03f58a96d3709174fb85bd07ad25c069e7b1ed9bfa6d3c735c7fc295a0fe889d533cd9d5c94dfd9788428ad03ab775ee4fd0bee6f654bf4508195142ec5769f635eab65d8dd165f2cbeee666dea2100939dd062d751a903e02fc268eb7b248ed241386ebc63cca56a208bafb6de11d827633465b3b6fee6a0ef2e7b6cef91d91c0de11d8e9a80e66258107013b478bcddf1a93de7741c44aecbcaf30b725d622cdaf28e162e4982c440228ec39bb2caa801ef7358e338d55886e148bace94eca8e2184c954f1ea991d1d81c2fe757d1a198ad56ed89d13379691eafebe3202449e4f0d5baaf8fd7fdb187c39ce7facde9f68401ab7126f0432ef0b67e2519b843dbe5969f8cee96ae142816be4d7139ddf06bd67332d0bb42f5fe3d7ce8ea77b0bf71de3e0e58d4d110d1586d7a2d14e8baaa1d42af7a7b5f4b09a5303ee5fef02d28376aab50878b9137f2a6d169c60654adb8caeff5b03b703f144990c479767148cb34387218fbb92637864746a26efa563409f365daffab68e2c3e8e00a90715881282b87bca3a184681408ff50ed458b09cb8c0404d24b98d9cda5f01b163b80835128ad34941922313754a59dfa44cd6013552ecb000cfb8fff2f5d8e31cecd71e78d10bfef85ee05fb922a12c921f37a10bb7c261d5bb33e533f6c77efe5caee4e4cac87f42528138ee3a91ba73a2e60b790eb3748899772da4633443c15234ecc4b50b2c47c4df675f97d2c4e7dd6db83704879d7ad83f6099985bbf7a3e1cd9fd8560c00db7d2c48e5cf9ff4fcf5c4331351c815c03f3771d83b7d1a5f1b196ee7719ce39f9f78cc39022fdefbb112bbbed133b4a19b07a0323f959a7785d741aed91d04f7ec144dbc36b81d3bf232f0165e23dad9b4d638262e3b178406b50503e2dd816a461a954a13bed4a6fca0866671b74c86fce28adb9fc6e2d99ea5b199be303fa442844089aa0c065dae83c12c1fe55d3ae5abcfe6e4b23d2296673c28048299828becb679a50537652baafdea861d5cc1b1012fcf4b79dfed44ebacf7720d8d86572bd06315319d2a5edfcd1322da3fa487092e7c8565a8e96a49a408a771679f152c44c2ebc98a84b38644d4ceaaa42362de317ae4d7602e0c915e7f73f1b7d30b9cb542003f0567ecec74a4f7035c995e23f13b6bd4b7d842d0254dea863d5de6839c5a3b1666215e7f963cd32bb72ee0a4804f9e0fe47e2335f8e8d355a19e07311569883eac17c118a6a845ea9bff178e79f11e10eeec0e8b1a46bf0459aba6deb5b86f86dca3ecbee105bd30af8417ec3275bdd972b1ba6172ec468cb7e2010eb8e4e906b255bbfe68bb9f92c05d45b25c56c97e9489cf02b53b0a81256efead0ae7ee9293eab905bfdbc9b85be2d48ed337c1f2a4a5a80e14eaad8877bdcfed8bca484f5e064e551f93424bcf69c43f9dda5133809fd39d830d244ada2117ac181fa58b1f3bfd9822f37be046f4f6dfc1f577345e14684f555c85a54068c74a65701b875c464750114be3dc57b3316b8950b9de4afb6b740a0921d2f7358a15e35de2206b6301fd94fc69c2c89900d330a99db6f7c2f171a5e70471be618266b90f3101d07ec51464392c8295cf385b154551aca887a63adca4af40dc9e85cbdf63967b1f2d29137d67dd35a87cf98527c5689aa4274f63e0ca92e426a2ae3157dd8c172d01c519864dc280d176812ca3b2d03336107ff5096702dc0c68d688fde9971ecf2b185057ab0146869024d20605090fb37318a5f8808d9bebe1b8bd869672cf838dd1e5b210186647c995692b17dc24584afef56047d7781e1c687c78a8135603a260ad216577a0f3e72a8bec7ce739081eb965784b4dd96f015f51ace4ce5bc4e77ccb44009c4a9c8f89b811ef1da8280c70a5fbe45e1610a6a773b12d2ed12d2853186df927d0b755aeaeca37456848d1c53e5c95e2a1c69b27f68146a098348d0491c802b8ceaaac62f0d6c3ef8470b78a08c198e0caff0231b0e3c3fc23654bea5f409a24538734de9c0b418ea9f1d9da8ecdd990077d4335c4015def3199fe477cb918a626fe888d21dd6fa076b0a6536bc6dc015542dcf49c691c905839860ff4ac382e041ce9fd768495aaf7b4174d7e8100ba940f73d4fa433c6e6006477d88c1fc9e8616336281934a58ce24f14d7689c92db9416595b6e9f77ea718f35a227459743924bd1ea55cb1a19be94f63bb5cabb121f7f5be82729979e9978c777c4693821bcc299fb33049b5fc58acfe8067db5a583917b04c29604c911e726f7d542dce0e144c22c24812aced1f78e390499f353a9061d5ad7d2a413d2cb6dde124c0e34b7c0e5b9d774da647e8892950214646ef5e29afe09c21fa8dc340f26bd8448beb8b6ab34d0a434913ebbd2d92ac0a43c81590cc6fe812747f7106fe666e62aab3885867cfd3d24b37fdb2af126f4a39861934acb13ccb7bf4abe5e09251dc66965a82c319604637ab37b55c343c9445be4aa6c907b0493bc3d9cd3af66dc086fc65b3436e5cfe1ad6015f299f6cc65509679ddb38f34ba1a443e5e57669c87af8171d13d877338cbc7c5800d35d8728de981041ec9a49a56666d83668acf986bf10fc08c0d750fc03c3eb1d7a68723ecef6fccb6ea9ccbe1c8dcfc25f6670ec0b8c8306021dcc1af7f05c60c0c491ccba7ee081ced5e5af1cdfb5c2204d7be90979b09fc024723acf10357fc3fce45f980cdc133f1c31978280469cde0eedfba19aa8c47810ba765217745d6cd7a1762138f7c588352b8ad160b73b450624ca1713cf0cfa0b888baa062a4cf9f3bfc56e9bfe9c1b1233a63a4ffa6c0b22cd209f27366c94b24a79df9d80d7d59f28db1439453a921ef01f787175639ad18e7e53d52e486ded88766ac9b10b7dbfc5de5671d19283b71ed605f827f312b419dab04a53f5952cb8677736a49e0177b75d8038913613877ab3cf33cbfa12915eb386cdd9c5ef8de65dac3010a144938ba37f687a357f235f9de6e2215d1960decb12d53f541ce1c77760bb70613719ac019b3c448fcd68ff00e20a21080e70fd4c911fd45ebc97abd5bdcaff9c435aa9642fca2350f5bb99e45d33f440f2d55441cce1e09cc49054aec8c698b8d2002861ce54f4db319016fe2e0bd718fd059ea2f1acfb45a9b212b81b61a594771fdb446312911e593394bc7a7991c944f6b412bd0b85a9a41cc59696e1d7febab5f70ba510859ef9c1ed9e427aade13994c5dc204fced24bfc293654d0aae7cc347d4550f6de6813a411dd96587cd629f57a0e3dabd6449ac95c0430c968bb2280e3b493f43d343a449d81624b99236d11950bd1136cb22ac64196bf8c6a8fbe93e833ed9d7df4c9e1d9c767a3162ce333b4939131814a623950b0226a553e95dbc88f3bb46421a5b9234f3bd1b1f53b3c4a63dd18784616f09f632681da8220ee9af8adfa2f741c66cdb009a11e4eea74ce963d153ae0dae84aa19256d282c3e65472123e63bc7fad7849acb716fe59a3c5d5c5e71346d9de15c72f1296f97f36aaec7d1420e6cd4ba5f25f5697d96ed677b526c970cb915bf586d88976a241cc65338b6fa21932b8da7492709d05acb986ae61891d4a7d5100fe304622a88031efba9718a61d76a6b39fb0b76539fc190c239cdd7cac3719607acbeef7b9421cc51c887b0fef4b015c764e454ebdef391bfd04d558e700ee2da380f4c2b643ebac47b2171de6d701e797ddfedf95cde96702a779a2cb634dd76206f4692991912af6908aea30acf517dc4216ba18fb5ab0e719f05a34bd417fa56832306b590ea142c906e8059c04c06bcdb270a2f5bf0564083fa226871e877af8775a3c503bde453cfcbd28ddc2ec733af770ddbc5dd9a9cc756c16d317a4fc4b76eb13c64cf2a30e7ac1c002b58f86d0fe9439db38b1a37d35808c57c08c9900dadb208a8d840238b0b2f072ea6d480f466a72c68012b75b3e7866f552d722697267972e345c77d79863534fbb5145d208c36c0aeed10dc572d9ae02d6695370805d7dadf44069009c1613370b7ce7d1b3872d13f51bcea1c2d1cbb00e3de889ec2d5dece90c43c8653d05e8a5085ca213609db52212f3f3ccdbb8354b1adbe18429cd2221df663209fdab18b6461e68ff084bb1bbe96460fef7fd5d34103691d0f69443ce75b653f689fbad62bf2647ebef53c79c70fb58f794b25b840259bd7d3cc6fbf17ec37a315a93e3787cc9caf692832f4f14597959f083065efba00741ead8fd839e02cf460ac4a9e5a4c304b8a05575be30bc1715a0a1356dede4c0a0f0ee7ae6b2e279cd20c8dc7ffe907543b3ac313ba1e2017ff5edc18163cbda4b0603ddbfec33276251963b8565b43f471319b28e9a0217bb777453a3582cbec2c89f3ed436ade62cd9b092479322e40df8a81bdda9fa489904070b7dc8e249796c1a7a6a2a962c83e87f40348b44b26fa5ab9ce9aedc86a1a402db3fdf7a192897c852d2a99cc5d736206bd935a8600fe8c916d87ecaf80c1be27998f1f335e177f919025e4e7d5fc2955aa0e60dd94367d09832db8791e456fe35393d314db0772fb2a6a83b5180b8b1f893649080b83b3208c21c04676ae273f490f3842aea3e1c9de31b01e19ed4d5aec2d6021781134c543ecc7c488888f452c88939f4f231d08b5e8b33ab1a45c6ac3ec248c73a48f478fda87145b85160af29a2d7d728bc591ed610a96329e6aea6c19d1ff7af456a942554e7e48c3a38e80a443b3cbed87e6e8120e18ec045e4ab3ed3a439b1494142d467f6426e4068629a8864d62e5ea37032a2f3454bcd252853889da5dbab3cde4ab74f4f38c11af154477a1ec641b1c97474b9cb4e805c5ef2811e219e5a1d2ab7a65ae29d9637ec1134c86f2152bbc5244776f66d08dd763adff99bde0265c581c8369247dfa5cfb2a84c96112bb50cb3fc925779e46dc17e40cdc54089fd578af00e23599cf36493303af5adb21dc74affc71dc273f98acba58e84f9dad08c95d00481698b2bd3318fe8107e4994f641b4abb3c41849e36ae663cf1107a0b7a2f6d77fca43b766d6a8f2914b315c121337b11f886f9c329381289f46542c22d5d4c1d768179b2ac2a1e2e323e3b59730fb22770ee9e5001025fdfda00751bda05c298226e47c7427debdf29c7b3f0b37b5619d5b60a1c5eb3c1ea12a176e9b238434c6033e9d052439cbcd3b5030fa09a815a8a1781c7c479ad7186ae1804486992eaa181466fef9ec3bfce275bf1440b52bc0b4941d0296a1fe8ad373f78c437f40e18eff0589d44e6dce36ebd05c084acf1c7d426dbcb0e11b893b073f5d041d726c830368164bab95232c48c7e324a7be5c9ab5573bc94f1b2a9c8ae6e8abb068937f357628a017859eba7766189145d0010a1e2bbab827376f51776e137f23a18b3886ac652c49e234595f67bdfbb78eeac90d43556c2d49da878ad31265e285ad7dcf6f3f1c67e7987d3684a3e01428074fd1f2a43b12b910b69d197126840cca7eeb7441ed3f329be9afd3c177aa2a81f7e52871fa6fdb14199c2269734ade205c5ac183d0e7e75453ba83c6b8c4dd5b20b59e9062dd6d49a75254b19011226f99d6fc88cc006fc880581c3854e3676c45efefb34cfe32e57cc61e42e3be3e69a41a6e0a5509ba4f5044de4cf0febdbe9a944a152ab3988fafdcaaf5641ca3cecaea102f405b0ad9308c4171e15e7a71279a39e80b54cdfc2db245b23fbe03f9407d52a8b9dff678bc893985ec486161c8d616bf17b32eefec174130b0e47aa61a5b6d96631997a47dff633c12ff895f5621ad7cbba93d8c8c78911e7ce276c671ade5af6bd28716123ab7a1853012c283ff91bd363a075852e33e39a0a43b9f41eb0eb3f69c9e0380434c0ee549f34ae51494b64bc31d0df9cd0d73efe116768ab9c7859ef94499851fa2709df19c06f73834ed79698aae0dab66f26fa720be22b0d15a3f65e36afdeb2e5b94091a98838c70977a62f5a09854be8221eb15f651514c02f9ea4f18e88790241051e64f7258f29c20eed384ccf645a97bf8b69cbb83dc88f0fca6eee6f027936c321251cde9ca804460116f2ef85c6fe838340ac5374328f46de55375fd92d9f9570e385482129d027ac41805c135dd734aa3ca79038a123c1728550dc49a0cc26631636fc7c77b9723ab2e388be85fab263190b6200c76942f5d1d0e7f25f80d6d5d1820ec4580ceb4cc38dbc242dca7f3da6e8231d6620901480844165feb40c1cfb73af196fd5b4cffc9f91da4d517be89b507cd834ffbd254630463f2f8797ce43bf89fcf6fefdf57f10b751368f6b7194bb9122e11cc557a1d04c43949979a5e0c70b2d98088a2e6f872ffe96732a5ec5030b76f64e545abe0fcd1f0a8fe54c28c31a2c7c9d0ecfbe9a9e0a2c9a8af045af7744115b7fbaa361d044f093176f6e95f30e174608e26225ea6f84790004760976fce81b024cdbef5d79bd76cb6e550448ad740388dae0354b63ddc7b92b7482bb0be8d7ab4b2aa1dbbc88fbceb7c43caaa9e4aa6106d7f70df550323eadcb8323b77b46b6fa48e7340d6198a57ad1990da8ab73c69d8e26fbca00b2fc20a754856dce1d1b016b26d5944ca0032c74870f81542ed57a8a65d04edf45d19afd86085692b847479edf4e641aabd0dcc2a44c023f16e196de3693a56d7f01517c4667be9714ac8c94ea264d5372da5b5f3a3ab1d402ed48120f6df38cc14e7ec234099de71bebcc8f69e46eb10b35a1268092d8d74b8459961577d125109a308a9f5852103f3fdeb8761a114fbc1c92c0ddf4e937aa1eb3b1ec014eedc5c92d5f8daa4a6ce5026e522ea965baa637cb4320cfe91d4b7df6f5c010463b289c90ed52d02482297b8fbb9182528843d10007535e718ebc0f72c4b2f25ea281eaa5d2c60eb68385f0723f54c5a1a3b58f906b7efeb8a60eb1867a285512cd84ca9cbe98b88a6e39cd766dbc01d77e4751a9794a82a29894075e59c38320b2778f3c2e2fe2bf8d37d3498f38cba3b3cbd33812718546e1baaf027c98f224a8ec29b8988295b7f47d3b9622c4e80ea12cf88af706c401bbb3cd3e8fb63552548759175597aec0131d34dcdd1113cd018096bbdd69fd6c8ea3dfa8402b78d053800aa9cb387c1f9a2af7b754c681584b5a44f0968cebf2e825dc3b2cb139f3253238326ffc7443f2b045fd58eb77f68a8890745f2e8af10de2c6e1d3fe68322d2e3371cc136eb760a42f9cf36b99c8febe6d2d1fcc25fdd051221d3783663c5ab86e7d418787867f4132254477db4baf0b0094ba7bbb794ea56314c6b793cce16904b109e44d0a6a8e7bc46b5438a7d9173b0445ecc5af85dfb3b857baaef7b39c0083acaba8a3ce17bdc42177cde70c141baa225811338fa8bc450a0840c4ec60c0a6c8a0f677e916ba2ad04211872f416a0b583764969365a5d5d8546a7782158d784ff937f9ecd2eef536fca0bc298a4c5cf687f176850c8ce21ba9097d988f517ead11c4f83dbcd4bf69d125c201c04491a68d80dde43e449508b832f288b999b8f11b1c0cfa2f31bd3ac9320cb4ad2b98943fac3237f5104d8c89462efa855a1f793be8efcd9b9b49bcb63fdd7a008e6646b4457a045e040a18e2408f0c06603cead4fad4b08c47093350c88e5dcb0d38a741829bce49fb340e1d98d1c2a5fa111c94e2780fd2fffd3f21f91a7b98f111c7358fd5bced19bf3d69c082c757d3689c15ab0f92cf7cd5371028fa06cdbd95e57a60e96e9e5759cfed7ccb4b61ec519ef850135b8c9df25ecf52441cfb6140080b883bba3e8463ec2472da027103dbd95e4fcc76d4298c14df3a3df478db932c18fc59b872472c43be3165a6ce73f965ec2793a69ca21d0224627ee873f3a407b8b19d642a9d0d8ef460f18745b52bfc9628beca245f90f15a9ce2bfab8da4102d0da5bce46c4346f3f6e5eba98e9591da055eeaf3507afa5087d255bd5aafc0c6f334248a17b411497265b7ce653cf1763bfc23ffa66c41396bbfd5c0c244d32b1d5c39590153885bd13ca698a8c23cedfb90b3ab5832a89cc3477525d62bbc6c1632c13aae5bc65e50b3671e4c332e114e04ddcc217f251008a4784ac610e0bf426334663fb13825a2355ede5f80c33271eb27c045193c7c90781ff8c990c314ffaf34dc9bdae077655660b884db4f8e015e80fe3211d8511e3b905afe8fbf89e2a3143a5160cb34beea871b71c5c9dd96842b6828bf10e014581d3a4f038f4d3d6987dc675b3f1029a0dad9fbb8de41c4f1cfd299da291c2b7dd57ff6551152cf282ec28967a77b2e2bef837394cb058abe8c130636c6f333a23ad1854d0d0928f315cd40322cb14b4ba137232b23128be3fdc9cbd8557dcbc071869570b0469b4661b5848b6dd8a3b5ffab51a8a43f5dbb3b1557abfc484100863d8c55b93e4f9c39373e75324bf291f8dc7baaa969b4c6e5245f52420472ebaa8fe4ddde30ef1ebe0dab8533bd05fdd8fa3ce4d026aee2b409395a08314f2c11a6ef9c999078c1e87eff51df6e09ba6e0332885443b340f1ef92e91748e823203cdb316ffffb2ea8bd75790d93b17657ccf057cb233bd375fb72243eafe4a35e62eb9a7e7fd5432849ba4071e675855063b440aa4965f11de62d7ec6d992642cbbb18779da1b6d510cf9c33771af239867ee447f331fc177d8524da0331813333039ef4d4772749b30cd458abf65a8b87c4d85c2013c399f5e397f69851a13b3b385820f30187c2e9a91f156e1d50b845c73af928fce3521c59d46e4e3a2f8a23c51ece04ff9f8abfb2c3fcea78a98572bf3c2fc42726f7d1906eb55786413558f65fb7cf532f29c2121d87542c448ee5c3aee6f8bd347e6ee01af42b2e1fc0265593efe0c6d682edcf7ebee4fd79db420c5f6cb0c92362e4ee596bf32ca4da8a4c989024a9370e622281f0bb832f8ace338b257b264817e283be85a19dc7ef7970205371d16040c93876af194c798bdf341f438fbc6fd2e3c6c422b2a38f2f3696d3d0465934eea117cd56656055b11912ad8745455874f217abc08928fad26ae8e3ca00181c9aab04568aef2f428062e42863de584a16573bcd53962a8083ffd9a2293253d74402f761faddd2eb9f2c43bdaf9dddf9ed6afa68d9e8b1c9506918c25063160f1e7905b9ee926370c0d866a26e773fb9702e9e3974d16098189bb0ec42dccc34afb9ce1d4505027de1d37d218262bf7dbc4c61552331670c47e83deebf5c35bc2990c0aa48a4a097ec25bbc9782f98776c70a1ac55d2444b2efcb2dd09d60246571f6c38fe48ec175a15ce354fad9172c2c05b5a1308d601c46ab898efee681d61471c248f39380ab4fa4a9d3c35b93abaddae3b062c9a805e64b6a5a26f6e5ef7f120c4539a69db19025c5cf58905628abecc87942e7995871742fe8d66e18de881a5c46a1cc1c29cb34ca2484af8fb0c91e03268d437b512d4da5a05201fa1c73baa2318fe17487f6cd9447f095adf08b273bdba51d1c39ed88dfc29dc7d0eea2fa60bac4178ad5c9fdb18a8fa56f17c4631ab1a9b0111e7d0103e71754e7bb091f54e3c79b390fcd9515a7c6958cfbf4da949aee4a39b43a80d073704feab926183091f665ab293107e5c98d3ab2a1aa772f8faaaf78353e8cd381e420a0b95704598bbb0131d98a0dc48dfe814d51e4e9d63b1f0b65001bf8774184db12776e37cc8ff6c592560a082053282baf40ea27f30e46d7ec003c8142a7fd4e930051da3db117c86fd13326a42f6f1ce1708cf7857f64ec61b2a6af2ccde5b88d1d61f0d5399f6585e8966c75c6e91aa16d45d187bbb7484f8ed8d9e7bc6eb6d820158758e31ddb738d284746a09fdc39cbeb935e4921207e4c6ec553845cb06f32241cc297f6fc51fd0b9670e93fb3a15949619b89236d89bee25b305eeddd20f5021d2638fb1e38a4fdb4324d272460d87aa407e5989d5e05c368057a7e2bb96957ec25dfbf89025ff656b3f416cbbdf000775f010ffe0788cb7e8a6031c5763dfc4f699135d9f014f581accf64fd6c2c8219a3a0e960a5f4749ebe467c8156d14cb12f9c4f507ae25ed9160a7c6a578a4d5630ac8afaa2555235f51ddadf993b45fbcbf76d698498a7fb1b7382f5063c062dee43502e1bf961cb3ee02600e60b7b0767a3e69c592ce8aeafba8eecbadc71dd98690ee587da734cd91ad0d2df5dce235a32fbd265655323151560f9e68b59d03fd446bae0efafd26f32329227b5ceea4d953adfd1f40885f687cf183c39993b163f2d595c352b86b2736f87ac0b141ed4ec75e6ec9dc3c6366772644fa1e776586549ba1e97d5b3993f7fead4d034ddb562ac799dfd52fd1556ffdc1cdbcb5ac99bb21bbb04400165f7b1ecd5e9865a1a5bceef61ac58232dc3c8a6d19305b93f579c6946c481b7000f3386598c9c4e8bad76c6c95b889333954ff67d21f5bc294a3501446651ea5ebe59b3f7037c56d426a187a3cd9b708d9f12b98f3b60253ad8d4df5073158b32f05711cfb3e55d8ce1ced05d102ca53adb9cf308fedbfcef9f8dea38ba8ff0c0aef39d720edef6f8e8b554a2ec9b614c24d2ac18428874693d3b54f1bd19621392438b4d9c3995f3a6a9fbaf5e204013a0b147787770e7c0e110f3185d7c053bdea36b6b99917bbb67cb8cfaa5a7f7b3ac2e4f37a1701c8e53cdf9d3dde792133bfaa4b57e9fe4f38775cbef2ca1a4821f9da499c56d036304f76a5c28fa1412051411f63b53ff4b2bae175aff496ffff20f6aeb6ce5e07531f83780b4d5e4dc12cb276bb0e522386dd5439b88596f01366df5c8980bcba107d8a75c4584ee55ef76d08dd724ca8f0f8a95a6dd138bd59bfffe6807b9c747bc004b6200ed5f8923f6d717a207f66e9990cee810eb1c945cab26318b3ad3b0bbc1935b6c9c27b47c4c77fc2ecdf795ed28186a3713329b2099dc75aabebcd1078e61e933b37b1d1bc6d37f8e51ae46fd097b06ebfe745c079238f8959841b61ea1e337966b9b75a8062909292bc205596bb8227e9e28c143798154a28f000955c562e36ac6d997dfceba92afa39aff9d2ddd2c0303ac3b2d22218ec454debce8c57f416123f7443f61f29bb7c2faa9355accd71f0d4aa89ff8c65635571d84b6ab30da0fb07d95edf10185ec75fecce40961a60bbade1030cf76e802a2ee93ddabf19480407ba0e227ba55fd839155271688a36d6ddba1c974dc7e0bd658a892de891f0740033e84b24f8597ba395fec274368239717133de4a4193ed9f2a82a2b25dbb011772a7b2dfbe85d883cd1a782c9aa110d322e6e2254ac747333d380aad57cc0267cde1b904ae896aeda8a5f340d242fe76c28a226a026ab95a5569b8efe9c6b049ea10cf885e2ee82b3259dd7303d3a5c572bcbd35860e7cb7615a605125c5e969575396cda7f3c4ff83ca7134f2604a022e0dc7df66b12d4ad96c727497f83d5f91ac7b48fee0332f768842fa02bf77116de1260fe2fb8ffa6c8d1e13a3f42a3d923816242a00db34f7cc002875a4001b3f5e2762f1a56ed07cc977ef489609308bb9e2302d261889a5f41602134101f348d99c7a4e5fb8ada163102e9a8996f96c1aaa62d0395423d502d63198fe773b4fdf648b04c126d85a884472e46bccbc5f946691583be7a670ba860d11a65641889f7156b0ce1951df608771b98d3d379ffc9de13e90f107c4c500c15eb464c60148217c71cbe045497849d60bab716e99d2fc6b015744c8ec57d6f5ace738aa775719d012613768050c4dea73b7e22489e713ca2b1c551ab85dff62b95da9e8fca4dd14729855f3ab71059e148eab33dd0b5f83a86a3f30565871064ceed5f091d434765d7b1bc144829bfed1224ab2c90b2788c7a9c41bb7f90d56e5261a5123062e30b592342d89dfbaa572c837a22450ed34652b71b81bcaf6e33fb37553383fc826db6a20a7064654f25d906e29e4cea60eb206465e876f81de447b156fa88cf5c4fb5c978f17238b3fc4c336c878fee93f5b9cdb9b4123bb18062a4e419aefcf8eba24edcb20759e6c67dba335c5f9b9bf35cccdb2647e5746be7f58616c2fc6bb04f0b0f192d36c1d7561ec64c816d4cc987123dc9215c0b09860f24321781000ff5e9f04e8f7e49fd02ca6c5bb77c7695d48b46a0952562cbcb013e903aee07b84714527811f8cf66e58e4511a90b4d43d0d30b7a7207bc084b5b62e3a0784adbf2474ef742071289c091d8e36922ef90d4aae6fccb289033ab41a6d1b186ca07d798e8f3340956a8a1c6792eda4f92056b610d7eb9d6de798e990da8e37e59d7f3fa1829017b255d130d32e07c6f7930ff6587d22c587ccea59c5e46936e32bbcdba925709239d2a8d22123b9d88dddb02960879973a20dd38a39380f4ca1f11b796a69687eaacb852523d161e59a5a579a7965b7c1decbc05d75e71e39d83e5ca3c550fbdf1f3d011a0434d2dc420c775b5aa441a4a9bcbcd23a635b1b227e795fda147c0aa25dd5ac7df51c20b5fc4fc5ad000cceda29230348f9dbaf09e37eeecea6acbcd5dfedb1aa938bfcfe69ac42ef4409125f9cd5d3566c41741b5e15d39faaf0811bfeb1fe49d15b0639a5217c75bbae5526961c01fc024b729d1160b555ec348b52659c19dec53fdfcc51c64de4521b0b2e5045981321fdd4c8454843508d101b991b523cdf093b2e6f26013ef7f30858e610bd39bc5751f923c5c050761d70c7a3e583eaab4e87a382709543bd8876188571e20236e3d810760a4270f439c8febc7db2d09d69bcc40a0e2fb430aa0f47fc8505a0a924a3837ffd6a02babd03b760a990f97e7510da85d2253e7cfd4c946d230ac90808c1a13dabdb652ce6f8a090c55898c5f11ece7e10a7dc695adeed2e665294d854f80c7ee98cbb5b44a8dc446fa390621c04a0d564e90fec8743c13b2267a69e29dba15cfe73956f7e6b5b084cca2f9877fb287497de4560e82b850de200a0b374868f614fc671750480b9ebc160c929e0d637bf4da3407b974c65710f344e6776d47e300b3e43530759a6f1c308e8831445e4f24c9637fb4ab90ae1b5de1c878881f0c14f3726f2cc3a667fcb17c08a8f3c4f4f6f89ddc0bad448497aa1f8ee11d3e20b0181c5c588064d403862065d1810cd1e83d265b8d972d7b8bc210ed03955c8c734e985070953c9bdcbae8d9a6262c5e0358acc7cdd7583725a25cc515ef45a039464b76d211aa484d74ea603dd9c898b3e1efd84dcffe050035a4496681780e077e3a443dc1747fb03ca1a088caaadd246148b10c5294c41470869a6f848eacd7bd99785fefc288db37cff392ca3cf734249ae27548be5ec5f1b026039a4de6a95ea8c34670127def7ffd8c2a0e05526b434ac070612df3cc44f02aab8297ce088cdcc3a0ce531075925824560d1cb65123f22757ac58447052c00946adf8d5f57bae7aceb931199d15686727b0b48c10ea580cefca724e4917e1312b498cc12daaa593e6d94d7f0973bd1636bc9aad7aec7d0b4e37812a49d490558cc7664ef4676786d02e843bca7e332a52bd8df6b280f5e270583fd9bd4d90af356e77cb6d3f3a7e49da82581bd58e98d9cc1315f2b3ee1a5676ca2d9ff318b66856dc53e12cf012d9f731654b1ba4eed0b59908dec2b000c30b9d72756e02a1a1756cb9ee33e3bdd66df147f89c95e6166e11d44ad9582cb14318b7dc637ec9d441222b745087f762e7fd505c0bdc7219ec3f0969f6d45e80271229500882098b8c3d5d12cfc7fcb4f9ee0f8c71737c95299e36b182849e9372c61c13faee67d6ff1e5d936a12b9984542625258a270694bffe232438744118b3e17423976d1a397485fceb34f2bbaa273916584ae08086bd03c21e8f4637ea3c2a697153aa8503b5e4bbf0048d6e5feefc1e8b6eae582c1751be7d3fb4e5a40a046ec2fcd2a7e7c2bb1a252be4af6c04bd2661787f6a4f8a20f22c6d03b1a4087324184dfff4b51b884512a65de071492095979a05d4b131729b3d8224e678d9779d8f2b4e96296238597427463cca836435c98eca784b7d6610ed14abc86afd642543fac143a88ca114b476802d0415467fcc133666ba3b82097cc3f9431a59523f7954efaa9b3572753a15e4655f37f5a3e2736ea71edc564481784771386f18be4b2aa55931f27a87e69bfc3dc5bdd8c6b40ba5845f20809ae4297e9f2826f068548eae39ea7ced8ac4db9fb99f0864ded0794e4b52c5b88e77ac14c719ab7eb95ba7ff12f0bdcc9daf56110ea68611d4f4a2da1893fc321c3bafd6df2177dea5111b7e80182ac25ffde72dccf5cf75bd50a2293f148c9a99721c2ae9252be698c78f5af3e59100601f312d206dddff05f1d56ea2446bc23ab48a72a3ddf262754af747af5e8dd8d93c2422e053d2cebeb9eefc1f5e2aa8c605edaa13a74f24a9d35ba9855f441ff5f1612bf4f121693894208fcbbb756449883710ca7dd7e560a86e834bb5ac0349eb6e406cca1808ea57e0de41c901b7cc7c43a394cab44b9851bf851a3a362d91500e8c2d48206048c7668aef38301092072e074b22d0c3bae4425c9aa7e2f97c58bf1a73e048cf8c78c1fb28cb72c2871a6b2463a753e058a067fdef3e252a33ef0168196170fac2f64fd30eb54cf37fcfa4a0e515420d04c6a4a2c5963eaf16733ff71802730a65dd01117d899bba453595a898ae69d94bd4634b7a8dbf847b3def160036ecf4c271aa96844afe2434f307d0907b1b43863dfa9f0ba00b6798dffe414ab8804ad5a0533eeafce3749827c8d0f8a0b09ee06558e3197f828f3378e2e1b68311711da89758ae35ae0f2e42a8af7ffbdfecdf9effcba5a776a1549df967d0d8efeae396c61936561e6f08623bf32a11a57216914ecf7239814e786d801a1dc6aa04602b142166fd5ea4edb428740b103ee777231c3047a7b087affcd588be57e516e3633be611c1d465028f9ddf080bbb0f1f685d4bd4b4a5dc8f4955acbd3fdd993b7b5d695670eacea12ccfbd5372d76a04b28597efa34aeba7d512b82d7e3accc1f12149186f9a0cad6287f219cfc26eefa76b5b8174e335165115f5b36cec55a2fa7d5ad1582f73dec1cd1bbd74a0a10f977d46d9cd83fca176751a332c7bce8a6ca0192d538833df1ea87c2002847a7955225b691653fb44d44bee462db2c1d22543323a37a48c3b262a055643818413d3e449e42be3236a7a0859c140d2b3187f2c89cadc3a15566edd615f2d571fa4137f30b57458534de5529637d942a197a2f111b6679011479f8836c83cd04ac83852c7f0f50965f95eda34b49d21fcafaab3df472b4e8191c3585e737e8c52e614290616fd684652cd99573a929bb04f4165ea02d33e78a67caa0f987f473ddb2bc4bae0fd018f1bd8b8bc1ce49a95ab1249075a1e26e8fb3b39f5776e08f6fc7937bcd75e64417788035b9e51680afa6a56f045bce621e63b194ce519ade84b729f8b49bc8060683ea733e8c7113a5d26baf89e52b8d8188e15b4f7ef83576f35075c87b7c0281ad5d9b31816f25071e2862535dad7b1a97e39d66fb090d6218a8042751b8dcb1f32af775d17ae72065a020b718b9c1be8d75bf07cd2a765f4d3a994486356b8cc5efed977654960598211c05459d893d8e26d56a30499ff902084c1ef22e1f350d37a753f6d27b18a837d7f10580c1a7d0817db8de87448028f3097f6c03ffd2f34f21716b5ed8efdca418c5691b19bff0966ad993394c72676fa31af717d08b6ef957268e436ed4729c1c85734e19d2662a37250d3fe9f24ec9eccbcf3dceeb10c1e051488a93a4ba9a8b429e46bb75d2394efbe7d938c9e757b928546239a3a75f8dfc60c0b4c10a93b7728ebecd9b866a305d85688e7ef9610d02d5facfc28a65b0d9db578b9a55cd09233d8f3224881075396e4f52b14dd56895ed3cc4b4e1889f28c844ae8bd086d484719d2010883c9a4ea31b19575447597e1f2e83240fc3b70cf08b9b3b64d45ac2869e784866b1b9bdc7ba19516bac55361674e04b2a72ec6cbb469ce3d78ded344a035248ea2fa8d3fcff48bdcbef6e495084b0adef91413935d6a4f48591426e821dc81232a30be541bf391ccfda350c017ee1366d247cc93c7ad1faa541bc5caf7fce42e294ffd53c773167a2da3eec285fdadd78aef4de5457925171f02ab692d3f274790845112201d951b286fc31b849172642883bc083ab314ef67ced56a30de85e46c50dd65e9be6b58545e61f94a394bfd8ab927ec7f48c3238620756de2b1d5e4f477d66c6c5b75a8cb2df6bee8fa332fb9b0ad081eb89a7b03d4d7f333274d29aaadb564f5f81cc5cf0e8dcd8b928899a86994160debd6527d80d0f8ed90ad8aeede9473db1c74c239c4b589e9830c86b40fcb806d8aea69d8c061f4bd5222c5ea40809cb05bd965ad72dec6a6b3b1735c2da6fcf7cf1521e69d8ab801c08b0affb47e59ebf02471d08d49a2e3a8251be099374efd54893030d2785e5e42c0962f1fa84e4e8c0208e9f5e942b624912bd3ef9ba3b5e2cfef0b3972971115f7db31a28f507a0369b1796fe9dc843ba5307ccf94b29e2516c1bf8e4779e3303081eeee8c3606784ff460720b139258c14489676f0b4b24ade834687cae008413b99133121ef12e0c6e7fcaa9103eb535783b0248f219fb6d7c5f3951288843e6a11cfc0aee8d8d061b72853d94ed59e8d40aa0f24e0c398e69fcdd6b530f30e76fd8fce92d42ffa55b0b08c6c9c0208124ac817de173dc8d123bfa3406024076d08cb77df37e6399ecac44ce8cc2227771d379890cbcaee68e51ad9357c84f2701927003effc002d76047c4b7b6d2b80267df39697564b70df8c138f9ee08e96fd559c8291d8ccbebe51275cdd4b9a1c5edd3d3a895aaa23afae2f7d5659bc0258ee71a31adab963bafed4f202570050c87ef600cb5fd3d590a161b2858445c880d18dd1893ec234718676b5f1016dd72a0620fb47e55f820f229ee3d9db32ec8cad26adab006f753014ab68798f564752f20e1275b392c33d3673124513c6d9a8bdd4e7756b4cefd95956b683ac1aaa0a4c3143bb8ddeab375de6526e540cbb602f3170c4138f85913b87029aa6ce80eab76b732f7b1366b332b03c039a66a460cb729157bc0d02dc4f338abc6160a444472e14e60d97d4296493410592624d221f22de6240b6b904138fd264d6fe6e96a284b0e55618e25e7732dc59b70ecf6fbbb1dc54f21ad67027e5fefaf22b263c5cae23cf3bd518fb533b630c1a6a417012a798a8c43e2262fa917ce426c9c8070711b254f75fedea50a15f06a49e530a635c853a0d3d5aa62be54525e18287f5cdcf24594f98354af29883d1829acc91481f3b6554cb26e4700ac27e23462abe61666c2dd5fd1390172f896312c2deadb293134596c08e02ba84bc1dfc034e511dc3288c55fce5a3cc8504a5d7bba3554c850e4638406193351f3c2292bd696b13c7d7a7fca4280024ef965dc1a8815d7bf25a5f09a4f0f5f3d65b453a70b744b71e2c285315440be345d4c44cb60e71d881e2e08e98fb44ca51b3269cdb07b9cf2d1ae87adaa3957c2c41af0beac3d871d5fcd491b617a53cfe165a0f08ff3e01b65a6088fbacac28363f57be876f96c2cb826b41102844e4015894ab94fbfa599f8d2da13b635de53801864812034cbb5064cf8d4b201e3d589628769c5065613f9fe96df497835228d948cb47e683e59bb7b67e7e4055bef3c6e9e6f50671d6344bb661c815997942f20dcbee790ded590297fe6e284d6ba8c7f09369afa8f54c41d7cc0733757f38be8c058bd38b341ec32cd1a622fcd2529f5f70c1a9194cfadf8fe0b596942836d093562cbcf8939ab8ae3e666f7d6cda31865104a3268fd7addcbf545a8cfcbc46bc0d433ee4edc329829cb60408ab1b902d04064177ff32b7594bc5ce3fcf4b35e16aa08fe95e9a817b6d96fd3b4dc404d5ef53e2f04be5faa8b662740b1b355a03f578771cea1907c6dc346d0706539181be2a1d197fcd246447073b245d5947f16263070bb84c88478ce6d608991bbe93ced991526744c6f9f5ef04960ed828f3e04296ea8f04a72337b57dc83048d9f3db4c5e1b17e5a690db2ae077f4fc651ec871801408dbe268af8cc67af931d13073a9f9cae04f397494ed899c73597ae5e98a5261e6a1d4e158a2233d8949300dba85e99d69e87fa6457f62340e78ec19b3f2892b86e4d1b468b8e1573528192a8d07914af23e35f4febf96855e8eba2432b0814f867e81ccce007865e72f1456d6f45f0d4e2a6c0a5822188779fa544638fb249f9dd8a69016c97a87d0fa7dde81b327eb188a810bc841ac1208ed744a920c8a19ad4ef984cd5e7b1420dd9b0f8a1437aefddda5762059b45a83c390bb402cdc44202ba5232b258ede570edf6bc09833a0d6454a87364c8e3611d7a693934c8f19fb85af638909e961f73d5bff46b3b8b37a024964e550ad3b3c136f71938a29b4143689dfe7c7342e3d7f938033aa120ed1b988f68a1f7483babdf6bfe0d10555fa9adc1acbd5aa43061f5c993d52ab13a542511411d881468daf7d58d11e52c48dfae50c67a7d24869dc94b4fc061582b572f74452e7d52802ebe4a6050a1eb9e629a44c9268dc6ed8a6bf47ec3fa82817140797db13ed105676adebec6cc967c5bc31a783593f6a3b45df0a1824af79b21f78143e14d2713c47dbad5b878e9a9a0815d70f6461c66763974911936c9bb3b41ecf83f34cd7a42bc62a0ab62d9cdd41dafd75b884aca27aae23673974b706255fdba2d82e532667cb46917a4ea33a0179d7b6c0adc6368a7e01fe8187e7d461f34915822de059bb4016f604e62d4fc9cabd2d6a499da72e275dd512faf02889b0902a7985717da14acaaf0a42efa879f44b260ac8a7cd2485fa33a89d7fc2b566ef6527f958bffbe066b9637f5bf537f97db89c72b71d2a8694dfb63ef6614b9936a30ae3c0014544b283fd5d879d1f54d4b14c1ce9e1f4163f970dba2661c5deed3720b1e504230213abaf0e34a143f671c002a5bf4652d97c9d3dc3a8e584d17dedba20173cd3897af55cd954fe42baa6c23e43ccdbf6b8535fd89324f925a1110449ecf379c034c0053b8f69d223b9a957124919229a94197c9b87b3e47e1d25eb153289f1918c1e536e5e008d877b9721a2f062c2c8c1eed1002e069c5147485783d75b7d51eb7bb444c9c8560b35e417850b0919c2650b52530f2e739325da21836246d7c6c54d897caac98db9dd72fc1c3201b794b82d17a19b063ab58cbdeec147c40bf5fcd2c376ec3f9b6992f83b81971fcd642744ddfb5460a64340c58d021ffcf891a12b1c6a7bd23ea014635be394f771381743e47beacece0cad2eb53dedd380360cf91139f4e808fa93d706853a6d40eb6e7ca77cda36fcde735a84b9d649be6af35399754bc51f4aeccc207ad43f1b92a60badae7db55bc0bea5a0dd946fc8d2dec36764d6e7b4b810d33ddf4ec766d9aee9ee60bd62d9ee12f7c5add16d30c79c44c7e8b676a2acd8fc30e95d70af284809da60f358dc6b574d4b687f2b80ecabd699b78e241f6e05796ff1d1beef54b1832bdf5aaa2edf867fe7cb21045ca54ed9771c700d07c0c6ac94f93e94e68af07411c1ae19b5a385014d27bcc9c97f799f7950383d1f4a884ac04522b84b9a5acdbbbd08afe50f9fb17586d79618c4a515e11f199a07d20d972f554f6739ef2eccc737a5c29a7d315a2747ab1f41d8737153bf3cbe8b292bc134aab4412c5335038779586b50b79d7b0fc99fc1b5aa0601ba90f6e8a1a70fbc7fb75e29b209d64fd0ff7b32f86eb99c2b66661da0e779b1ecb929537122c3a5c8579cd0112dc40728a103ca2c3bcfe510e3249103b2e9af0cb491e24d1139e0d3b0965bd5b2fce973f21969f75450500ffa47997246f21dc86b45fd6d0ca8b949e61e00f23af6b9d07068f2f701db5ad79961ddd6206f23e93429d0a3bcf93d7cff4b81efabd0984e81cfb89335b662f4b1dac7173bf35953ff9682b50338fb5e974d892bfad3c0c5aa1a1e588587c7b7d9111fd96452580c07836d95525daa7e5116e636d9871c6d499fa2dd24c9059d8f0d689e5955057b69f22b9605efc9c6c2093be4ab7eb0e72311f02964871ede9ebbf6445f1090a4f233f28b09503cf78737eb02d899f8f42316a76f708284e7e9d41ab0c6b55a15ceb1b22453713b3465dd6f922c8d87249c6af033473ddcb974a4ce372bbfd93cf3c28467c41626be5d530995527c15e45bdb2d4ff39e127e88a17caad205b35c9d68ae98f6fc4ef64f141d12b49fd86e2d984b372254caa677683bab1a9599066082a449f2ce1c05a170b5f6b7f53458f9c787cb0ed014ba0100eed8ad0e68d731c8f787817a8bf53569e04b388d10086c5a3b2351efbde894bf6479df905999763270a20805162427a09795e39bc259a053e9b193daab247764abcefa08f92a8a21cd08ba47750aeed49761b7249d40abeaa70eb93560bd1be1a80fbf96b6b7be0550119c899d0e6f6a2ab2726c0d3357e7bd3e04528b5a1963b6f2ebef71b4c5b261538f52c1e25ebfedde9f3e0c724b46813700bfe10896f5e0301cea1c4e33484b902951300d92302f61e4a14189f89532cc04386cf1347d05f873ffd54623f98e3d26678c3979bd61f973a1c525b28bc8fd277525c18298a58d7209179567844ea32d10abe9d3af0ceda6976a40ffbfc85534f89b57326e490a47e86872a760c356169622baffacb52ed760c15662e00cbae52f2596246c2a1e7d3aaec2bd53d3b134f5bac3f55d9bd9e29b7487f67242e1e12a39a0899fdaff94e7eb01009725d55a0a2405e9d49c3e679b6949e92a86cd96392b4f2cb979d75aef3840b893ed853218d06860b622bc0211a755a16151ae4e65ca449ff16d6d4811abbe94788f8cb4c535656e48ffe3f0744f809211dc5e8460bd63217b4dcd2540617dabd16b7ee5c7c7f8d9d01d5db0e7de487f131abd488c7504c71899690b31cdd9e7bbafc308ec7b21ffcaaa59a3afef0dc571a3f6450b05e45b5dc7fe9ca87cc5b40f6ba8ad3539028206063497ba8a4566e9bb5b2c98d9357e7ac5a9dd35644a32c3e1e3ec08ad3592c383ad8f0d6863e9dee71213010b9825e647ba8624cf04545fd54c831150426c66288c0fd37fb83e97a211619607923a27244d37054d178edf33c175eedfc660cf306e58e1330f467ad3c001789df696caadd818f51054ede3f74f7f4d23a74da2272aa09fa9e093e43406727074af5fa0f2e428010bc9acf68993f569cfa9e4c8ae81cefaa6d1fe20e21c5f263bde5d8d3de1c6b9c677df6fe893eabbceb5fd6322fd46c2973293491a6402460e593ce16d3fff5ec785d5f6d869a2506866a9de9bf4e5e5b429f935a653ded52ada5f1e1f8668b6f1ea1373469774c6a68c47fcb4a2ef9328a0e564c77ff78046590c927e47c9f948806b431414bc2a4adf70d2ece675a46fdfd814e54f5967352f711561fb4214ca0fff49f5008e36f25d70cdf1213671be8f5694b006add9bcead3c57cd7122f69ba1a5a9fcd037710820b3a8f7440fa5279044ba2631384ab641730591ff2b868275990e58005af49be60b9256c75f86c18c6280d4e06785231e08da92ce509ec8a45b64bc409aeb47b1191d8b11a045f8dddb0893001333302e3f44378dc2153875cad1687121f824a61cdddd2a8d3aa85a0c5440cc90cc198e1d803df2a9246756984787642410c87da69d3c645feee43cd05da09115864842e251a013c4192f4b764ca3fa442f8282e9fefc95325dcc3cd3696d14fe406f2369c2d376811e4a5d8e8953c0db5cfd709564e668170089768f285603dd8c83bf18118b7421e243980ea61f3c3ce43df5b7ed8c15c3910cfdbb9c29bd249e39455a4fed13b139b00dafdf5a3692aa03851b4fc71b523f2c28440db435f59d04a28104c07f0d92ce030ec56cb84263cdea78d152a37591d2a605cfedcfea8042d5c322c4e36c6665f79ec2bd8ee144a193e5225eec0088092ac0dfd0a646e3739d177496ce5b8afb5437205c8cec62782156773d6043b3a060c737fbe8fa8926fe6add1e3d25a2be54638afdcd03604e9a046924ad0ee0c5dcd88293f73a8aacb1f050d3397059e1670af0313f5eec19a03715b7a4653158734eb316e735694214e194df37b08289d7f6379139dd0fac699928e4f7c9a5bf099416aa112eb476b326fb5f8ea0256d7a11bfb639b532dfcec801f5353e24a1509ac20fe5d130e229ad70311ac60014c97609c92bc3026eb885f8a8c14fedeae0db6087c127394a31542927cbeafd99c6356563d9328e65793aea2573e39811c4ff469b475bc33ae122071b62d9b316c6037ff7abb001602817d78714863438fdab8053dc1310556ac073d41aac07f20e74b34d86496930a659aa8390cf1f1b38fabf1c5957887685e3e00203d62d4ea5bdd8aba2f71f4de2d49ef2ef40e53132b7ab6bc893557f800dfec2848cdafd5b14260736f2b0902580ece55cc8c89e83c4b9e69fd5b4abc294b3476804159531054e3b538eeafb502ec254a3cce7c8997943d8a68710ffc1bef4707cb9cb126d2d6fc563e70b61ff8f2ed86d288c674d2e1cffaa3dae3efbba3c6646abdab49595eda64e11dc387c6b199d3057e556d440f1367251694beb12294c3ead63ef4d61852d03066154c6f9915f3ac4bd1b2ab94fa77f4917ebfc7accc79ec28eea14d34a9105249c6834be2c4fad673a4f541159450223c84528aaedd7a0b212f7fde49fce97ff3d4d167e0732cebcc54f46cee73143e025f048ed3b743611dd93304c6d38dee7baab6805ed9afef809fef58a29ebb0df81f89c1a4114f263217ac7aa6c78f54f2aee38ecb3fa0a719cbe09fb25dd572160596ac1f88ac9fc4a2f97bffa45f25b3b6b22fb461a72ff67a830222255c651d7e4f0cec51bcd15c05649fd82c3e9b6ba1e2d9b5c1de66b162ff6b924def358bede5bb9cb793c84130e7d8debf4141a7615166db9c068dc6184f1ab6f26052b77bed1c0f8b5f099d5c956ac676a5a51a2ad2dba53b3848c879df2c91bda6dcaf12bbe6801a9929bc39630f877e0c1dc3a0103554312cd422bfd9124636b2372e936998bbf3490ae0afc7415c73206dafe1783bababc6b5e10898cba9f3a16c4013931cb2f6e9a7915b54e1301cebd0da541507c382549580d4a4884e5da9667a287c9f1591b49f4327843cf7a59778402231a45adb0c69da0c87f5e3aea119ac85fc8906f0fe1a70213767fb11936a9767f0bfe98873981c40970818b486c54df0d061aaf5443ead8aa17bf67d2564a6f37c7e00c8483026d6881acc31f297f71f2062612e578d2d931850640180b91318ee1ae74ba0ed349ec4447f381c51ea14ae38b9044f0a4013766c90eca22f7ac74202eaa3d73570a1a310e3ace32c76298d3d1258d9781339336eda52e573bfc2c66a733eb0a44bfc5c5629f5d26fd1ef2cea621611ab130c5c557c598cd2d374171093e374d9c825b63298a021d5786d453268d5038dc95e2d4a8e6c30b21ee785daebc1a4c1d858508018eb8c48b92144693a7e9ffc0c9d8f70e6c29c92605b68b654456c6f49ef8206709444ed4a347bbce6c970cb105c2774a5c67e53ab8b8fe299be6f9adb47b0a8ac788572d87a494eaf5f70c83b28322664c78efc901ebef8468cdf0ac4b6b5dbe96fa813ca73e3ca373fc2d574b8508e94ba9ecc2a6e0ad410bef60807dcd392f1e6a1fd16451d1827b1e57241c3a5a3b4a33208dfffcce6aad00575622bf5e48ea7eeaf527ece4eecf91faf61e0c0cdc052e1dd3092fdc02515c8bcd32f9945883bc65a85ad4f0f07372c4523e174c5c2de299b0fbcac7c24f852c6394fc988c6fde2ea4b371d040fc08a227479c773c9672842ed9385e8a02c00de811ab422613c2cd2fcadf4ddcba15824cfd02db080bff92e6de7c6392f959db5036f5efe5ae39e7e2d9f5d1b7892327404b84f2f6dc84c99087f3d90dd4b6e6e6a1bbe9df381422d1d35e9239921c50cb5807900c10c689566a7f0439d0f39826d4eb3b5e17c3731c2e8e128e5328cd8864b36c44490218ead9c507e8f60085febb598a1256478a66625c6587981e461f4796ecb6254a79cdce6eea4e8bbb178c6f23c9b9cf0d6a621bb4692fbb8929b0ea36d04fe132b0090432bbabf0de584b8afdd446b5ae031ee26d52c3bcfe79d237a800b34806d858fd410f8646b1478f850ce48905e595dc8ef0f71f38cf8820d86b0cf06b6ed1cd3f978ff672d24c46dd983788ad212c005677fc55363500e79abea41449a0bcc6f341801a699d2dca19ff36363beaf15b2521cc2d60ab2a2200d6ceac4eb8b68276f3de6cdb60948efa6bf8b6e60e02aa4a8871e20ed8792c7415d679f0826f32d9fe9968490c3a6b4ea2a4cb61f481c7baa4d9b9d0b63ed567102aab3572e690b8805cc9d18e98e2c04668ffb2a8ddc2f5777ce21ee2b6b696f4bcdbfecfdab93087e6e0199e9c60a03e4f6b3c8a48697f8c0b4d497acddd4a6ae1a0332be212f35bd55e969f072bbe4f4f78d330fef5138ffd48eced27ea5fb381adfb7b636b56df6f1f968a5c578384eb6cf91afbb17d7efbb3080fbaa5823a3c6db3d809beb418564f79a32b277cbbf237042adb0eba181add0c58458df08bb49cd7212c69e56d9a111f22ef362657525477028f80689a9dbba47c60bfefe74a33d7e010fd95e385244b08ad2ecf83999181e878b8434a1c322b2b7036b77a436999583b51459595378cf163a660d18e30c3384df9764e89f1c7aee745ea672491c7a3cffee4fa6c9e416b9c1755c208c6acd2a3bd8bb95ad8768203edbe5b8a0a660361921a909b199db11916960fea358f52776a16a3eb18be1c35222c8445b9db44d5bf33fb85e8b62d91c05a24d4d07df91e84f55c53bc0094b8b7f87c362fc75167f6b561125284557e35a56301a8b20d67bd52b40c6b2efc192d5b13ee8c0c86b0a36c449fb5158f2f332f90623b7ef61d36b4d4c84c1e615dcd1c3858fe98e56e0a92da52510acf32f67f6dc3da10fc8a90547acca957753550ec14222e505e29637bc313e8b685482192bde90dd35e512cb36638f009e5faf0959c98adc1f395a2973ce73fc4cafc5939c5b6c3edcaea26f0e44633ab184aab1b72116cd6d089022d0af228e17c8d0d4764c87cc08137ac0ca1670b68814f7fd712c254e767ddba7f69d2ee0bd51b1b3914cf07fab0ed5dc3338c45248cb67c4fc568f8175ebe6aa60fd9cc15cbfa30661863e73aaba6a00b5c07433ead4349df93ca0bf419ae178f99a98a6e1a640cf2f858ccb2e6444bf551d5adf7bdd7c55145c9892e030f73a204db0c387a19c6d71cf298f45305240871a0d18e44abe0bacfc4e87db470fd1f5cf872da108e3cbfcc8b0bb24effe38cab4170132a53b28977696348776b7e75b03bf37e95c4f3b3c66c983f31f54f15c6243db09cc8af03462a21498d51ee98a1aec20a63aca27772bdaaac538ccd6d273c50394114063540f08f1446dc834897b02d8d60b7a8fdd8fdff9e85019e6b43613eca454bee16dfb0e1c6b1acc5d91a896675dc48a6630215a13b252a217a6955cef554f1144fd9fa6aaa14226f9d6421603516579110385e17b95cd92e8cdca2ae734e199c0af0b4970565969e844c13007ec6519de8e665dd0c2c953fb4485fa351f47fa0b63dd92c8d83d66f3dd0eed920ab61c29fec26eed158aecdef710150588c0f1ca3855f30f8fc4f98e1cfccbe79fda0038603e69a20af30f171f81e02b44fd02aa0bf15b0885f33113b7352a25ca4d53d0a58d5b302fbcab431a18c28e132bd8d90b4beaa0fdc06cf974559154bfc0a5799b860f77bfb869045d8db16a5b9239ec30950e3d3b38c4b9baa778724fc3f1f004989bfcab27c0bdd9d8b92fe6048b702e717bbb866cbcab21b8d557553789cd8adda0882de3b2e92b6023326c1ac700aaa20dae0edadfe2499e3f36450503a683e9dba499307f6d9016a457071bcac855f1490318f7c0cb8ff11bd6b22636312456b835a6ce1813fddf5e9d999c15a1c2e716d010dfca014f89b73bafb8ffdf3d0981709e3b6a2a660f924c1fc40298d844873362a04b4daf215226c266b524aa3b39b38e4feece8ddeff23efe5d213e78bc8eaf0aff2f845acd4ea136edce31711ced82f340aa860f82e34fa1736dba6242c541c56b54281c76c0f678036f8b8bf2015c2484a171597e8070f0675196985a812d2c79768775a7cb5cb3628698021ac7b38488791447dd1bb88ca5112848e09cf07109993e75bdd093a41172b8ea883fc36f68cb480186b37bcba7eb43b079411b51c09ebc67991e0ccf1e8961d1e6081280a8dc997c03e1937b237493b30977573123a9d24b184eba9297b5fad646b8b63c36dc8c0088d4717b92388a99bf031e939c59a981e1fd5a9e036367e0f4a84b0907c30cc4e34c7b621b3db11195a1d7eb603f2e7193f6540949f0900a4512c3cfe295273bf071d767bfb86536c3955cbbabd99d0a3da339b752480fd044a69ba58d1ebf09d90ef60a8c118a0548eac3510ffbdfc4ffbd7324edd65d491bfb1310bcae9ad76e91877c6bfc3c35b360045f3983889b35b6d713e1f96ed53b1855e7875917ac4919d11d3909962e1a13ae3217cbf2e436e168f79dd533b8c774384560b509f7cf352a392031988c774f6eed4ac324873597793d362b58333a31d91c29543d738a11f1fc749661d40373bac99aeb6f33750a236b15b48a63ab82b85eba9cfb71e397f2f3b353c96af24889b966175998418fc627217e3367a38d99330c67fb15fb5c759ce7c59503f52e030df7b76511342d5218f0045846b89907bdacfb487bf69b47e4583ea07a7674ecb2bd38519ba8c24434cc2ed9b849b497f1f1c0fbb45072508f04f1a664425b6d54e9b210a5df7e39a45c7069816f67e9971ed3160105937c151c5b79ebe0baa01c9bf6132141bb55788df90ed2193e63afb5c7a46c6e2a88f8a705507f798e03f0965cd587bee8554c7e46b8949c21cd2e8e6b60a94962570c5a4fcc5c284d7043dabe04c3fe5b4ea7d674dcd2e4debfc43a0fe784a1b3ff1b4fce6022ab10442da202708fdacacaaeeff02d7d5ad9847f558d48bf4270bc75f5ad1d1bde3e8a67be41934b469943b01f6d38556c246bd49e4f4464cad715ef8d1633f06613ac001fe5380881f38d3a70d18b1ee19020e5952e6aefe96d31a1b7e00b6c819e68bdcb3e8c5219abe9058b7672cc4c5471aec17a76a758b1c7e76ba3387907ea96c6ba705e7e41e189eccf671fd83dba18cff68c0c173e2aaa201115dab678ab2cbdaab7adf02a6bb1716608e0877f0457c8fec6a4a7a723dafd0d0e2301d583317a1d1aa1c7d177f7fb8141df73d558c19706dcf2fff7c0cf21a95089060eaec0d411f59c3bd030bec68cd5b450ca9520224bc181164098f05227483f58a2a46915ee0a991f1f64335b32d6f35bb4f3be6e626eb53ee608689bb165d053ca4b78d9d1f201081010d5f307f22260998fbf7862069017e7e7aa312d7bffb3f43cbab995016c11c58faf845835ebec191b2758ddd5b36e9ae1b65e3418035fd855b640e992518f7284e7f873d46b3510a0b206ea5d1191f29a4a41799c78c6849d4c393a90302fe62a0ccb0f848dc00554080b084039092f924ce36183a6170e8e1d44f31c91539def415a0ef539f56b61b5daf534c17aef4dba2ddc0b87ee29f3ad091577d6189462b2748273c50c5e8ee864455139732007832cd7a9e6fda087c1071b5576eaeb14a212b23723fbab461b927b4b0cc8d979fcf7b9d4ba132f1dbde4bbf813c100ca4e27aaa725368f40ff034a962c53b8e65032c8d04b6b0c675e5386f7a4b6ffbbfe1fd3a56edef7c46d2d8d89298241b6f33170f0a1bc23de8dbe70e85b326bc68df1cee29097981398ce637483f1e40f67903428d1654a0e0ecf785c10605a8383b6679606d6a9dacf4899fb6cb71d886a0cf5017211cff6d89c89f61262ccd28c66fdfd204289198fb0c8289965dc31788327ee7c7394fa38f8140a6c656ddabc461446a54132ffc583fbbb130f5e764b88ab97da423990d19cfb5d624c0c48a5d8559f8948504ba6f25c5602f416da2dad8676eb92c1c133be56900e0dfa321963c30bfc7ab3b6bbca5d2bda031024112ab6d044fa77db95d55d6a1dd39d1080c68a080110c4ea5968ea0f19d9ef5c86ac6d1fb5f9e6ad5ad2152c2f68ea27f91cd7eba17bc3b57b5145c31c94fd9ac64f4e3fc1ec1559ba6f7e4e1ab0af1b6955097f33d7e5366c521447932a4adbe81c04b7f87ac2304c303ae264097e1cb79b3c6e2ed1195fb3935483854ecfe7dad1b1850da4b63e576309170f62e47131609fd9b83fe183e4bb22b7be7379aa4c392f6b4c88342fba9ae3d46501d34b7c7a479ec9153619d1f1d3aaa69cded58600090b5d04de7ebac517329e8be2ebd532d885e8b01b567d7d151f27788626423375be30cd896f856b82c4a1011be5a20a1add17ad866e9e2e0214cf2da5b6f1b96e6b5204f0a33bc8fbae6eaf2d3ad87955d5cad53571df2036a3d25854e6dbe2cad9fef852e6338c128a873b80639526782771b81fdd9eb005afe87e50cc73c42deb3eb40f1fa13b9c154928ed75f783c904c6d03175a05e4b8eb8fa9bfda896921b8db2eb7d55aeb2cea46ffd02dae831ac951531b6732068640e822f1dd272985e56cc173f79658b219e063622da2bbaf3c13d3a25b93ebf53698b5b3bf235c90263068e3b77aa62d43ab69c1c29edafe5f6a92ad5957bedd9ae0d013c4007b4392d56b739ec36caf4e014d94f9f101235275c7d100dcdd02e699835caf5a3c068349e0b510a30d78e233a9c69afa0bf43da916c5ee5ae769d1feb131c222fc540e379bc88d4b4f94a8a23d0c504d02f7c40135b635380b99b4c944a835066081dae4bb5fa57259a9f6479f54696669b9dce9a489e6c866c26c0208c195e8a8731d3478a1bd2bbf93132eaa5afcebbe6ffde8b34b7ce8da662cdc24c17fa1ceadd01518f2343b248e01c0ed8e7e083ec0ce6641982c6fb96892a522d86b3fa70d38f85129cf0b3df12035dc1440e62dd3c190391a4b8b1f22bd46aea9ae0786c6d0e4ac49bf6d4855d3c051d4376c66f2d0f2d5d341a8520e2ba4efa1a4cc3115a6cfc7082d06e74f743cf31887ee08f4665ebf60e9838bf0b5da7f83c5dab28abad7e511afd05de2dd15614cf21e39ba4d317d6e68b739d3fd8b8ba1b7167c3655eaba200c84c7d06594fd3f4eb6bbead2cf1ee53987a04d0439cf083f8730075f9018e3fb6998da62e6d96989673e925d78b35511cbfcebf2000b771c0a3e24e787433f46f73d0e3238b3ba08f891b7d9b2075474aa84c81bad7b148834fc0dfd554a9db2d1949eb02553411648fa68d91999332d679f68788037143ee61c31d31adba5b200535bb4a8a2db2fab7d252731137cef23cd840da9d199ef0f462bac082fa1184465790727af802a3504879534f1df4a9ecc5a7756d7ed22ee3fabdf13a9d41a9b14199af2b754771a497c8917a30368876ab8d00df5edbbc9f1cd49b57995c2b70effe19a0c51582344afda7785fedf7ac4f9a41cf14b7676da48be4a05e9cb740d0c0854ab1618e543b6f5b6741b42924ac8084b8b2f92fefa4c3336d7da6576735b2e0d018b2ffab1a03adbe845e34083b2951f608dddabf44ed95161f8e8ea0004c5610e47f8552e1306acb924c128fbdba934f85d07f59989945037e1a98049c34937a4537bcc20870bf10861a9c18b8d6f4b82f9831a6ad8f8e7f48c76f252e8f36b9d9a38021edd190a9dc694b9649a0954f7bdbf7d98ba1dbef0137a779bffc5e43972f3be5c98f498b646a213e251636e2ca22693c970912612f27920d3e9ea66193c0356a8aeb22885acb0438015ba47d170865e7eec9f0e3fa85c5cd049631e5c6a4fc95698edd253b45ab034aea1e7dcacbbb05eac0e31344e327544aa7175c1e3b5acc55cad42b5bda09a780ca4f2cb7509c9605310ab1ba301ca8d0d243634e31a99cc9e3f4bac1d377b8ea3fa72dd6f301c22f8277572f587ba98a9ec4c05fc556532b520bf9f31031bfef296ecd1fb91e05e38c30a0aed43e654c1bb5f647705a5fede4235513e227cd7e6ecf81e0adc936cc8efa74b4969f524e2c92bfcb5e0f39f11ae79d9860d4310c27c4e5dc7a9745330d7ecc2597bc878c3217c3b9dabde928bfbbf96d01438f30c4c395fdf3f1501172bb93df21e344fd4c8bc940fea1e016467693cbe047444728b0ef23cf26817589597387c82fce6a12ac0109bf4e20452de7dcf97cc292108b713367e6fe4bcc5907c800134c107fa98a891b1a2971ba40fd9f270f10f3900d8eba10a281e5c5ef563665a1299a1d9d106ca3b47c3ba7c3323b7b70457bc26f9999922d1a98c881aa68ecac9125970d84f760a8ada7b4ec65d988b134402ea51c1e571705e843b46aace975b3afccc0cc54ca719ef0e21643f5fe35845b2cfae8cb2fcc556e6b5557fcb8706a1205c31d5715b41ea83d64b0f1544608ac3bbc13088e1f74982583a686ab16083a613d76d45316539e4b15884cd55d1e73f0dbfe237d37f64b21910b45f2d837ca1ade4c2fc09654116e74ce147632a4a678662ec65439bf3b9ccbabd2c10a115fe507525d0c97ab461601e5f6e1550765d9e20b5424f7487c228972f69dd40e44adf32d90e835b51489a9bd8344d7b02658d5765140254adedb8f1a8cdcd92acc9b39a56b836380d7de28f79d82576500179452ec7e7ba429d7e05c774847f102c2cb61fd383a920f1d421b087c7d30e205d2c5c0dce8d1c410e27153f4848b8f9165a4e7fc45da39a333262da82b25e4c4ebf62f1d15a2981710b5b02a251fa32d8981e09a8684f46154179af83a9041c6ace8791ad68a7ff837ec7d139dbc3463fe1a1b51ff6d806ff0f47f76517df2a57d11ff00373ee30049cb370b285ad8292362e2bcf5af2d4131c49f2bf1f2209f839086338058bb4a4f82305b121d4194cb690f71fd0469d13cfa9b1ca03ed0ac3b35da0d7fea525d877c9b0ab48a4fe78ba55537909fd49d3f647f19d296ad8dcc80a776913ecc1637dd0d816bec5897bb5de5beede9ec4e703f1a7c56ba46c82b6472f58ae6904c95f77773e2dab1cea7ad9612b33879d6e37970e0141a4b7d4ff7ed3d30c18a3a5d04291e766347ade1e2be3e62abe5a4b14634ed6e5d14f9cf133690d6d90943dda8e1e44e043a6151b2cce7646e1f1633fa897ae2b9368205c34aad26c0966a10cc49e5d09e8abf42ce831db0fd4c4be75a00c7a91c0840c3d18f9fd2d41f163a623cabc9d6996a0be146ae81875c88149f2172dea6738fa54e8e338dac7bc0c324ce5402325c29523e3f1739e30001bca5f7a4d732b70261e1d734f53da3e3ffc8cb04fec5fcf337bf71b2fb3663ef8ff027f612c0d656d76110ba67d0159be56d9b2b81627c97044476db5f6b07ff37e47172b3aea8ef11aeaddc48657231d79758a777e7fa0c225ac49bef76f13c90dc0011c2e2e20249d5ab601b1440c4992570e270dfe12b229936bf9ea12671c78095673a84fa909f078b23cbf7b707d45ef31d6d40c564be341568383d80e087d79db313cd108c0a1670d46c979a6b775d620ba2821e31a9af1f91e9fba515af30cd1ff80e3456c8ecc34f1860e4f899b5b5fc3b7736d3b4a017abebe80a42d32277a3ba779a7e7044a08d8e7dd85818cfe36e0a1dbbe3f00ffdc28676af64c4af3a4fc655e328bcd986af179bcba37c43d4b1a5dba111c74796788e3ee0b87989e1c793ced57be83c744b7935bcaf6f74c0691dfab55a756feb0da983b650600b96c3eec3a144878521efde63a1ab12fed54e78a8754bedaa3a6c1704c240daf970436bdd6fb515c08ed978f9518158e84ae770ed6d646b3a9d4ecd7d814df40be7dc5a3109aaf28f125f213bbe46ae9dd03a86e68b23594cf2a69b5667e7822b9ed06736a84823efed1580147a31c4bb84611c0d27fdc9888fdb53e8f6b2916fc8eafe576de8dc4390130823d4006cf2ed94bd0686376c85b8ac7ff96520b5b5b4ba068cea997301479bc03247c89fa2015cedd13787627a89d743f205b6cdc89534899f3207aa7ebe268b1680398c44a0a0507abf4854c4dbb5ae5881baf858e72de23722cb9be850e2a3ea54ce9b8591898a092e7fa4a2dc8b8181c871b4f6904932e744cdb8731ad64cef04e124a6c31a977ace564d4f3e30b0fca80d898ac1df39c5407130eb3d139240af0c4198f38cd155f88dec9771e2f9e4249efa43f4d1db8b4b3451177b0e6ce3b87566e6a36e2de61b64d41c4f1664a49c4067ff41383dab1dbe60ff9c73d3346547337771a1d45383c18c15624585f5acb606bce1d2cba89eceda51b2e727301182b377ba190617ab94c7f0dfd3ca6082c487ca4c31d308bfe70c274a8d081887ae5ca6d3d8b56c14e49e7c5f02bcf5ff7db1aa539bfd67b54cc08dea076b26c8e6e9e44c525ea2ab182a98e110fac6f0a7e9e44fcc2bfef7d9297905eeff09f8b2f3c700960c1bfdcea4b19b291e40a54fe2d595810044543ad87b6e1468b691ae3f1871637d5984e43fa5f5f65532357c6f3f8c18126970704e125b68bef0d7d69b593a468d968e5e9451f5f14adf2d241b19194f4951f51cdaa6e0c3f9f5ebace1ec4371bd717c577ad918c423fa076a1f91f934370e428d874308474f1e5e0bf71ca4d56134db47e70ce3803307b4305964cf94ff9c764a006db8ee5e564c41e7ca43e5b32a9b25babd065f874f0b5963bf59f9394212169bd7234873068b7a767815e4e9304ca2200745dc61e955e78bb0f787a9f39488cb4a77a1c3234ac01df5805ac7b06d03e8e9ceca2a6bdf9dfae75b2978409c510349836691815ef7696a1c3e73b01a0f891a2ebc50991d887a90d8d910a1d977ff6687777c1a5c4437b69d3b0e6d2db0f3dbfa8f4f9dc041cb5c1ab428532699afa337d0c07eb7ebd39c9a9460a036a1f6bbc71d3270873ba4c82356ad816756b529f36eb435c016dccbd71b35208f9b890abbeab27480d21e1218bd314d46c1bb22397aef672fb3f7f08d6f9e1c43353cac2b503b98abef5c0524a356d8210f966dc99d8f11c6790b6c985d295a5f1ed3205af8067c7268cd1899d1353060a8a8993c324e038e8f7cdfa2aa2e0b55676344bbebee41667bced3533afee9141274c118c66470cff9b5ae35de0ca363dc1ed2392cb8c174dd1d4d6e548b235277ba16a9289785a24e22209e299884ff9f90eeafe9db0b1019111d22af4f5776830b40b30953288faa160b6e0cf3dd22795b3a9c91f809ae79c49aa716bde8d43d31554ed809dad213cd30fe8afda1bb5bd3c67080a4938cad45f2e4b6f27d9efb41605a53ee9e098948d5039e0295fbdfb7c697a8d325b8dadfe2f8161704562e4ddd2f28d2d2b051dc944bbd41b3a756adaa17ffd46e1d8e07c2fecc949b1a4c2f82165d1e605f48cb28b40d051344f350da859621e976dcd9d9b19d883861cb118d9edb13b4f86fd1a9f4c86c3301cbc4f55c5ab5b821e57a6003d7bd90dfff451cad832a501bcebfc45b6afed84a9ff6e294c0e14fb646aa0a490ac327c67fc7c8c1101a6fc258e9bb1adeda4ef3ba87e2f2b225442e6e3252b9eda7921799b6d0a24ed8f6fe11df6b0187c873446b6e48353b4f6bc804881612839aca43225c8cc590ab21e71f77d915c102b69ef2a4a8a2eb485f8bf10412249e33d01cce404978975923353ee50bdb853dc4c3a8904f2732d87889f4fbf8db191e7fd75038ee1d88ec4a839455d3623e97549551560a6ea735a053a885487a9cfb5b000cd8f959661ef5e0878775056df3370d38352b83f82890d9446867c936d34217d16de4ed93ec7698161681e7d72a7fff49d9739182e9c2270efc1aba1491995b6d450664a2371e4c9bcf3a8f6861b8d96c100db12cc044c7531160d4f8028bbd1e0ba3be86b8b9434b785a38ab71eaeeb55ee3600af8734b24c24c96d650f1812c112963a2c67bf634cacd13640d0710523fe1b8787e388a33fedbae256835b862f11b1bdf7e01fa17f7a928b04d34cb6cfa4527c28b023e5fca79d917b441606f9e186006570030094f93ba5d9571c7c3dcd566d1b975cb39207dd6cbb4161c747740d4217369094fe3144ce70fdf76c755528149fc288f863fedbc9df2e16656f97cd351cde6b4b892561b7537c30c0a7965466d3a3bd2ae45abc748d559580e3401c3d2f4aa9399bbada6d5758e276b043c8ece26d49fd30218d0d9ce0910bbfd6176e9fae6f1735a0c8e7504be9d183599334f2456d92a39241e155d5c990a946f903f9b529c57ffc5dd544cadbf85c07e447cea5638334d0920f8aa8dfa70b91e9ca3579380e14ddc4c78726625ac8b47806cdb8effc13646ad98898ed5fdc0bda8a7a2c69a07c87c069aabb92429c473162623d9058125a0edadd0bb45148b5d75ef873e437efc81e71e16b3cf5738fa9f76f76e82d8f36476eec33920b5cf5b83cf2f05601414ada981f83b3cbbb18a52a7bce31ab5dbe03ebaaf1361610436e52682187f1c03bc595a43514a7458b0d567c30b32fa9240ae273b73e002046af2ff5b968034f416ba6c34964fcef9bb89556d85d04b0554a6c7c1269e48a95bb994ae5fbc6b703b2fa68030fb664f3c8b070a7a5f253e2ec118bfc82ad8f1709490788b99f8e7b85672667d8baf3a240088e7c90ed4ac989383e745fa3868daed46ea8800581573247449ce15fa130ef345fd6674088314abac1e1e472d2ae6265456aecdcaff981056ae36a3aad290c17d7ea6c053b72a8e405791ca2733b490b8eeb37134cda4bd7c3a0bf48c442f49e960652fcf0f1709cd40cadef300d4a0fe31ddacd8c675e01635a997258094b5a75b61c4593b78e306794e371cc451cdbb46f7e91037e8d2ede6b5b9ef51cef789d98a05a21f16db17d1e988ceb8fc30b722914ac1c85a9b11d4eeeb58a933825b53cd02428f8635807c488e28bc9456a73ae0ae0a90ed9ef7e658b73af1a5d72219364283118f1a99b9a4374bc4a9c407c12a88ee56956406f1b2ae24b1e2324c3850db6065ca194d090385087b7e18d15064458c5991a4a4a2e383ce322945143f6d1fa51cb6f832856c9e4af3ef8259e2b862e909dc3763918e47fa794dfe5e33b3ee2dd700f6d848508d8964e0726d495921b27e303dd329ddce32c7e9e4778bbeb734d2bb28e5300cc8c527cb40265c98eee824c502aee3e2c176c36130f9419ae2b71b1d515197b7176ea75b9f2e185474d8e8118ec20e6c4e9350238ec5b60326ebf916b5df5bfd148e7ff68d7132687cdfb1147cb23a0ae0937075e84c593924bb0dfac8f9fb54b0ba2cb43ac04007040b76fa378997e565ef2beea181ebda62c40035da691f0fca674ed5d0ca0c16e220a6b22449bc3aa571cd687cc390ab5effeba9f309acb0ad032d3d05609eb8a998902d52c643dfe953f6f860d8ae534f4456b2efd72700461c857234e10fdb8d3106876cf55c5ab44b2c671141f229ee46eb514d54491f7508a368f75fd343c849123a151c6909278cf8bf819285c6435cf0cae6c19e23004c8c81ae46909cf82512aabd4012bf9d9644e7dfe36a0a0ec0a95f052ffea9ff6b0aa1ffa3a72a5683bf8a093c2308fd32fd5a0d973950576ca23557199ea818519b50f4abea2ce13f775da9b828b97d8e34d992eabda851e0585bff071609794b0aff170839d6f2361639e60be8985fefcaa897b1f0c47ce97b17e3797bd7091258be292c7322813d1d7f2b09a53f5f7fc8d341f7feacc231d8f6e6a2466366772b5472788c1eecfb82ee32cdf2c38185f46687701b08f41d5531b5d36d1f24cfd18a33f36e5cf86bd07b853704d4f1221e4f625d8910ac369863177330c4bd4b9db7dacd699a3df74f7f48ffbcd95426645aeaf7d68ad0d8e6fe6e5db931b7d9049a3ce01a15528b4913be1a553d1f7df4de3e2f05e24c5c66c3b64ccb7b84a0f869256013b5657475173982dfd0b540c5db9db757acbdfe335d1e051b3443efe94514f71b054cb14115892bd4fc95bc9be6f7579d92933f725533fd037e446e6798c9b154a8dd5702dd4c2d1f7731288c53e2cecf3ea2e02eef919c8ad032afad4e0173cd47dfa8c98dbde81f28855a3a7338789c47fb393e0861c31c2c22e55ef14c9092c9067f31ef3e63110243d8702636db1acdc125276db682c6f58a0114e63c6802e96f728274d60e4a8eccfd0fce7f82c730798192cbcacd659a1a54b728ea20cb0d16beb6984084b8497194c7e19728ce37b1ded616a4cb773a62b361a55449a27d512315a2962321c7313f7d7b40314e0282de0b3c5429bf58cbbd993340b8ab7d8a86788c103954a905f6972e8f8826b6f98d856a2db4d96a7b4433c07f6b9136d02e49768e198febeeacb731656c7d1bfed2453138d219c6341421764402c435a15cb5d0d7fd450920c9d93f04db50a1a4d1034ad250d53de8a7a69b253a0803dcceca1e22cfae3362d931ec62d4dfabbf6b52acf13cf1054c860525c46c08e56419cf97fc9983da418e6193f27a77bdfee6b5fa84f3c94f7fcb310d3ef1558a9f34f72f3485db26d4167954bede38944ea3e83acd5dda16e925fbaa39c5acbaa80b398cd370f3c3986defe128275001df364e2e77001d27b2f004ea14757a80cabef0b228edb47830865a4b812d3754c0b07175ca5f2278c52a8e489494ede2bf419c7a9e7dc6f1f22d2d0df21ed6a12fcb1da43bc271cc22cc0c0a4aa626395cbd6ef3e87f454c50ff3bbf100ada007bfc349d2b0509b77c1f4b6112255df5be3d68b244315d2fe040042cc929c52ec4feb917d10635796402b7872a582d837e16aafc7b272ba3b08895b0b46ecfced700ae1b99f5a404f43bc3498e3f898111a5335c86369784a70bb777992d80239769f87173a7bbb9db1270ede1e7cd0d77d76d9190c246f0561b54f227f79e2cde628414c38efa739d19ffd17343330fd4e96bdda012fcacbdde5aa4fc04dd7e0aa5a345e6c26c4f46d6a1658a258f787a1767eb17405a52e1c2e2fda244a014d985594d1c097465b24965cdaa1fedbadc078ced92c0164bc506dc0061ccef039abc48fa2309c09c16b8ee14e72cdde8587099279170c60a8037a3d3993ca2ae8570a2f1724aac480a6d81757318a7caa32676fb118079d76a0be05e4193dd194fe8d4edc22e7ffda9d59df52a1e778d031e465f6c9fa3e97162695e2b02791d2e89019dd08765cd12b50809a6e964975002b318ff5e83ff55748ee13b4e7c475603276ede8db2c95fe0dcee8f68777b35e77a1f8b80831b445bf61296d3f0395661715a870dd4f29410c3caefe88fb687c3eb1806ddc89e29b839f83e61299106b058534c8b16c28f0463b0b2addebe9888a44296bb3972cd752d663cc27e4300e951c1b82a2447a2bfcbab7c85dfe2a86fa0d460f206da778dfb32634a0ce9e3eb061d1a8fe949280f4b0878ec5a5465e176a567b7a8c4f86d77884e64de9feaf15cfce454cbcbbeb837ad3e1c737df51bdf871573c08305ca0baeac9593bc72207914ed9dc3930d3c66f7f7c5cbf477c2849a9b986bff0743b4685f43af39c77c92653e3913ee0e7dbb8bf23ed21505492c1e77a965cf99615c6042e81063c2d542bef0d02eae46a0e8f877bff35954511f52e4ed6f0cc9665d5a8deb22e917b5c94d3be8c51ae1eaf94c9ef5d567ec0b94ae2fa5dca6a9f2d0529ae516ca6ac64a5c4c5da906a5cf87cb020ef09f2474244102f8818f0c73bbee26325330b75d1b93bf1960c0f499c4ee892b33fbb1f5f378dbb9a9f4d242d285e41b7207fabad6e10498341a1b2682307115ade1b5326d9cc1163955a9e2471ea985f791b65789bf19a21541198379c9d7eba3f7bded081aa42f8799f50929090e2b142830c6005f6238d0cbfb8e196a60f20028ef1dade8d6244f11520f811bc5612e75d98af107010e944219661ca3aa921ccae5899be6d7ef237be690c618856d0c2816837c202da523a2ff9864d44e4e94ed4f6d8e30591a0ffc07912d5cd071e3101dab309b0eed2e0101c76f837163e4c51539fff2fb159093839d97e66ed52a2f0f81c0ca8737c389732b935cfbde5243303f4fb4e4c479d55fb738436574e1690df66d75da84ca0d51ef1d38a6e286ea8ee297dfc1ae07116b52efb9561bc9231af98ac0460e1504606351d9e0071a23b2c6dee958c9f1bda26fa10e3216829c1e5c0d79129ccf11b09e9da324a8a07aa70ff8ba4fe70732f9204ebdda1226a62554464d2dff3f682fdcbfcd33f60803914c2f4d2074b286d5e5af9f1f32f8087ea7ae9afeaa5dae3eea92183a0f189892ecc07522044099b7aec1ed133ac08ff3abfa0ea1c896236296e3e7152654faeab1c5be730c0c1cf62ad4e45504e404e9e32425ac4eba5d1e41df96b5c8a05ce5885a8b7ac3f89f57056635231a6bb5cada5ae94684f308a9437cdeb6f4c86ce6f1995129476a6269e4b854cc40148c0a358c49652376961a707931956bcebc68ce05d41c8b76bef54bac2768ab5ba6087a31978dd820e702027f05901a392126382fcc66f89ac7231db16a695096a4be80370629f292a87da917cb99570298caedd7d80ca12167a97df9f76ef95ea072ce69b4178b46fdbaacfe82d985ab4938f0d72742fc336c3c4a6c157265d5c2494b2d478b574afb0a10332da42b22cbd8d807ce0dccd9959cd5eb7c6990de70c6ca9055984535329832970513bc880868ccb4bdc0def80e5e466e40bb48fb6ef4d34c85a0b2ab7bb531863b307d5ff925d59481b57468e021f7f24824ca74685069054ddb0efff9df23a5461bc31c80b811d77f974f0e7bfcbdf819f295df1203079f8d560ad25deb1896470ae92de990c4ef7a848c9af871cf7a8228d3c3065fb43a1cb8e641e3b705a300f52e85df970d481c30019b3faa6696cc6f1ec23964bd868a6ee993b71e359990840b1d78f0c92aaa96517f407e12dfddeab7655488f568e561716b1c4bcf8f3bc5ad7568f86e38fa1a56ab6180838c850ec8ff38258a477b4ead69359200b241d269f99f2f789ba30ba4edb13f78fcac2bd5ce9a0671aa2f2269ae88ab7c71f01583487a3339a20ccd059c9cf05ad34b801b1dce164191d578d644a7abe1ba3dc70ff736942fa863b595f3764c2957678429ce0c9df84b40c4a59ec5685d7860568bd950563f9c5a1ce864ffb1c7f4be295b8456bfd8e4dbb09de199b8fdca282311320b46202e4edf019b5ddf4cf49f212b3140c4e5c1190067ef7acfd09206df7d0dca9e972ef32dea6589ff3cdc3395288841ef1c730b2b50e0792254eb953528f6832684eb9ac594843f41399286877df931abfb1d1c55248a91f5920cb6c94ac412b74cc1adc3ed439e3924f21fc71b11e246b2b1cd4db4b3c95b4215235eb4b2df4f20536e310b4c3b0e1fc778d82c79ce0f3b19dfc66330e7c81bf09fcf8afa6af4804f5419e0b28c2cb637f90d053eb5a2f8479006d8d29feae7d38484e056d5b0ef29604cb5cb0da70c94b405e3a55a12cc1dc78b4eacf85b4943f482f9f54d89206055bcc6e9f9190878af78ebeb6082b00e7fcfd3b662bfd4a30685289808faa65590ebc234dd8c597c4e15a7e91efdc5dab7b20404a47c0655d59fd7e7c1b3be1c74278ee0c79b340203bb43807c9087a7e986361271f5948283a3249d7f9880c4f2451bb636d436171b30cbecee850ea1ebab165c33e8cf53023d0e6f44c18447a9e6452395b1a63389ac2bb23ecdc947eb65d23e0f1e16ee278766ec50bdafee5de77ba4077d1aecf77ef4b9c0a21dba111d758b9cbb11a8bec7385834ee159b0bb1211e17d20ea9dd09d234f49d6a344c86b346543417badd2824bfef4919ef04751244201d7a55b770f660936415995454fdd801e0242e05669c118b282a7e9983b3f73b64cac9109273bcba8eaa6c3d6ce78d2e8595a2987607a86cf3446060bc4f24b7454e7eda865061ecd8d20101b26710a47b1f26f600cf547f58b2064e8df80645a2ef5739ed3e80387845887ecc8c5e40681cf700dd80c957fc795ccd8c8fafe7e68c8f1a94a7549bb105f630456fec6fdce92067520c37914cd82c7a159c661ea6bd5da4ab00223191d33ed2c717f2e2f37af9369f1029223ca00f5075a8827aeb23ca726f8cfc674429e878c4fbecdef937ad03625962145e4007638479f677509c4aa3b50cc660a7223e7074ff949607b0f34b3b8663dc92c716f62d0fd684a28382a9400651cdfba0e6946ff893c2a48c3aca650ac39bdd7c9470d764851b01414691dea3346f6a7d1b7ed79e23073fe99a4661f095e56cda3f93bbd63d08dfa38aad0f4c18285aa897547f724543dff2858d59450efb20db59f5f9c9cc7c8089e582a287710c3f07445153b7314f04bd1399b2df151836dc7de4aeb3164928b8a1e25e8e8cd841b3b26c50902b385529ed5ad2ef100763b4fed212f93028448e99c72485e501aa0c0bf60051fe8397ed97e6eb78645a4a995b8de27db1e613f911d5ea3685e0128115098d0b6a93878abe84229078a232cdb8147d206224aa2a4905c27d560f8e30f0361da93299e4235e8704fa792b7fce15d95af49dbd0212b7d023fd2a6ec61669a8c1bff7993e13e6bc063b9cd34c4945fc037f827065ca146fd39161a7b265633d750025fe1fd3165dceb3eb00d9c2e3b38fc716e01b91dca4e10635179724fdc59a7a3d00751a6a050eecb5625a2c206f803925faf42055dbd2f1b872b3c960f59f8c20cfea1cdd66913b76b14a157e7f1030efaa2fdf885fedf75be57cdd6d98811e43760812b8dc45610219ec8ab4824bfe5c5ef41d94022a43067dbc0789637541edf10d4b3c3b7f8f16f50c72849482ceb9f89e74e5355ae92fa44e50b387d63e6b58cc19b62ac73267250efc59efd0a1b344b1843c8664c67be9aa515dfa1aa08855e7cf5eaca7a73bad7439674e2c005344ec512a9c059679279001dccc57ad502db067d8c30dc41ed4a091b0eed9ff153d03cb4b9bb24cc89326d731aa190b806292ae9e892a19ff2103a0b7fa59a68939206285504cdcdc65555fe8a630949a664296ee87f76fc7e4964ad4bba72fad1d18415617ab5e726c69b7f7ec4e0542ae4856f32f072f13b55cb0aafac7540f3fbf4101485d0f5a7d8e3df0c413d90ad684286872d4be47fbba5537c184797bcf9c238b67336279b64bb231eccfccde92e1ba3cb7adccb10c54cd45948f2e00224cbf284a0f0aeecf0e0f0ea0cc388a1077e06c74441c73833495e4efc2c66dceda21324cd66ca327dec314d92c5497babfe27b60fe3ee853399de05ea81754dba3b0feff50a366c80c7820cba0ce102394626edc726e2292361cc1669f8b7996133981364866a85b9e4e7b5e0e33962f4d01a2141b2d20928c539736e73f12df17e31d018adea3eddd06aa007de3fc043c7e45666ec9d6c482b76603292ef5c7885bca99aebed5d4ff0cba428677c64a0a291ca385c0f13fe5ca8a0c87a2037ccc57eaa0a33968bb4e23813a4ec64f87963dd6fcb4fa1b8f295fc15ace84f64e2e92badf9eacac7cf084189c256f11c83f56fdd268604d62b694e0cc157bcdbe5d24feda62236e730b3f4d4bf9892b32e08bdf947428c816bab92047a12d54be7b8344f1ad970c9ad03a09f1aea978abe981396e1f380d4d6496362da14095fca45af24f87e7a05cf28a120eeb3d85b4764bb891b0725e893dceea4e50feb96a250a4a0644a75d6bcdc2cd9831b13040b0eafeabc120621fb7a8411f41dd64ff6082817cb80c1926839d88bcfa42d21c497e50a36abf2841ea5c2e262f3edb2ce4373cf86adb5ffe93ce22a43136284201fe50212838e906c84e2f30bbb4171b13b59f88ea0babae53a4848694d695f1bdfa12c55342b1bbb4e6727b81edd11c9fed7e1005401099996c1e46f1d81ac63a48efadccd98a01b746e0203d6b45f2579b6b04d9e20958e1a853e6d4d669a1a77d9c8e942f9904cce8f37572c4a398cbdbc91b0cb7d2cb24e903033d5ff448912f3a5a1e71288636a61389b47b42eb9ea0f3874ab315b10ec949d96baca6f18325eab59baa4a9407c03fa920bcf4af08f1ea76c097994b74c32311723e6eecf5bb5edb4fc1f4296198857d3fc5819e71759c76e893644740e40ee224089801273b02341aa1403f219b325da3d9413ce86a833494c6a67399eadac3afa6e07fe22a3b5816b584467daf78ad5291e0b811c36f3f2587ef49da68a78198225070f1587b106a025a54e1dbb9745aa0bed40fb827f65d10ebb0d6545b3d773871afc9f64d317b498d9290167734a68f076abdeab1d7d388cc1fa5f2329579d92cfeab032edf65f3df96119708125aad64eefae5cff0065c75ffb29bcd4f8926801a7e008643f500ebdfa55112b2b1d9fc75aee0d9258b35c5ea69769e23e895a4894599b7bf2d70909e91411d101bb75799839349b52ace72a428216694158cd2e06a6e86996987c4131a365c157c0c7833f2e0deb0a83bf7b0d5a70469aa263e51891b1dff5d64aa8fc00c7d389574f5decce1785a9d02c1ea8987d7bafc5873fbe98fc906e3ae3f42fb58741a5a97e2ffbdc59af452d818dac401bcb96fd4d5097e22e62339da4bdb5fa43b667e02e299253c78977706c6c8471ca14126d36182df0942e927a8779957251801e17dda0d77df40666a18a225589a657e8f89ad91bb3c5fc4bbcd057b573b57df90c3af0fa47f0d66875d893fd6f5a41f1f1f41a6a42a56a6e9a8f4f4d2322a20227eea7f3bfd3114dc8f7930bf43e18541fa480adb1f769647613d3c4b8ef3bd66bbc4862665a11712f0821cb01250b9a523fa9bf38a4e3707e9b3c1e6281769037b8da455f41609c5cdcd0c1d06bed102cce14a06505cf3e7daa1a4fa2cc63a85c30554a50b76d6ccb170d73407a6db18db577eb64aa15a60b349aa1094b08fe35e8fe40e07cd734439265eace36eff74f6a3037a7777b3f06fb63972b427240f49d6e2eaa5df9830fd4a5fbcd98b10bec7dae32019c50e5dde673928393cc778d0d2a930c790d715f182e99a5c48c7e114f6a4d73df7ba2f290a65f4a569e45b214595be6ca4d757c0821fca4c81d6b4ae1e030746667fe132bd17d170a8b0ab45ade32f26ef5f9cd0c9750011300f9ac960bfc6a022c97f61096b2eee8da4acc1fd2633e9a0fd9d47181ea0aaeb5ad19f4310baced8c108fdf2882b797d361b06d22df6d09b3b5698df9c13e560ac29b5d4154ccdb886629c4d0244a54503375d5601d6a378c022a50d2e06e123537173a5d5837d0a285f97c39dddf8c05dcef2b41bd8823589555cf284fe8e7f2b0b4ae47c57182d2ff4efe99b066d2d92ec44b5cfcaea05a9f3d6672c07e9072b5916264c19e923a35bf86eb4f40d24bde59b81886103441787b632ce0bae0a4767ad4d14abbdb32d53180b4cd3fdb35d29f0400cc5d0e9302399c8e32291c882c0dc25711dae6d2ed3f344141379c1b64709ab37fc361fa182db583121aa2c1faff463d129925e0071d5c50505ea9ce4243f9acf7f96634af67b20ffc1f06474b5518d389015c8c45baaceba472fd42f390d4843c6d78fdd9c52a446e75880e3453ee00a9f98c8b20a76abe2d394a593b92bb85446b99168edfb151f5f439ddb9e31f31416c442145b319a57ce8b8bca6742563ab21d296eed47a64776e28c8aa6206011be546110aacb44b56f341d286342a93ec44a4b4631614810544772f1b4e25cc808cfda2e7fea7d989096aaa330b96dfdb749952496025b2df9aaba1de31925f66e47d1ddf0df9dc99f8b6a210087272cf44c564910676dae4a47c33a4683e64041b6dc1ce940898514d886c861897a729486801996d0651582b8fd853ebec35eeb9b6f4863f3589bae003de003217809d17ff6e2aa5ee83e88609c4024fdd78a930c5cf208665eadcafa8ddcb6e7d9504a2bbcac99aa05e799cad7a698518df137e58cd7d922caa7c1c7105d5e27c3f45fdc7a5f55f6bbaca16772a14873456ffeda92673d87b398f86dec24d905726abca8317303b5f5e17e29f5f2f39f72d705238618c36ec33224a92431d4b4ec66cc9556254d990330681ce1cb369a70fdd9dcc7efc796ff734946834c03a2a5ff2d9ecce22ef9872e9d2e6524e7bda95cac89daa618d4859954ba9b3abb600fe7daf12620fb403f042b6dd8a95c7067be2c28515fdd958b51036288b133fc7ea5591914aaa2daef86652a91bab8e658f28e68f955ebdf04de070cd2ac75008d645707e6ab01bf8cab2e4c5bf328fca2ab6b878182c591338fbcb8680261601fdd1a2a8ea4bcad8071abc5f8c511c6d8cd787167c167ead0b32280720798629f1635c2a8d1e4d155927fb39c6351d2f7b87e560a8a8508e474b7d9d4ae8e4ff481d4bde76b9892b48b4ad5cd1e58c29f462c19126aa310d50f14bf26d2203f7a8b9c0f5ea8e14756ff4b5f66d34183ad59b6aab9bd9e293c6d426ed5909b3dcf3f03fb6a6b3ef8fa764826d19c5645cdc5147d5aa039581c50487754bc9f6d1d17b18abbc951f7267530a35ed7597b1ad772cdd7be15cb53244442c1e74acd23bf69f922a6d5aeac2ee59d0226cc361fb158099a758357b1437bf8ac5d7acfd04214ca7f500f84cc0fcc921fcbdcd2fd93bb4511d170fb99cee5b660fb5cea74b8085f54beb47209083280e3ce39c5d7ebdbeb8f169c80da66b1e5af54164f99de91641cda86a3ca81c106b6b260d635d5442a4faebb874f3c75ce41d2109b80d5e8eb6719f1f5f10347f7419b679d431e65efeae7b7d9e31f32ffb5b1d39ca149eef7d798a4ad5fb5741f6f8f25ff59a0dcd15bde383584fec30c95d1fcac2ed164c5e999d2b6d2591ba4f82b58b92351a6fe57d9f69610081812d989aa4462507e1c89314486294aded1f6b78d1584d79f45a53ea8c826df0065b9cb703c748cf5c3a4f6105af9fd5c7006de1e2ef16b7108caa6a4d6c9555ba23023bd5be63305b919c030186401fcd5182cbe607eaf7c9cbdc5856b07be575f3c87365a90191c8abc6116209143c6ec9900d98fd8706044611edf945fcae08ce4a43f0790eccc873d2a38311a6e7dcceb56e5a239fb70633874c288371c9ea9ff792c275edfa2390d75067d4323cb3fa66b6a6a1235059dd39d305c529ae4c2fb8eaae836c418050c0ef57d9d24e5faa9b810ad2216f50bc6ff1a42cc15d26cb064c07fa0c612efdc585a82ea28e8d45851ac2900f6080ca03126891e4c0902c86c03aa85c07261aff9f610b24ad9e454a5ccd2b1aca85216918c1e4272887ef4b21465cf41a30c3d38fbbf351ab5c4d5aad5b87e3c5993b89d78e7694ed0ef6f71be2284a37a674cf89e0f4a4b94042658b5f94038f33753f8972614ba6669617b97e60051b72557f7397d6583b49503a9e6e3657ab996f7853565929c2502220d367908cc87089eee6be567b748157de088abfb1d9c5e497491e94019626f7dbb165a34de3ed2835aff82ffb8f4ee70d0d4a4fae26d1c31fe5872add9f80aeb7f62c9fd7771fcd6ab83c43a32233a629348b830b66cb05a48ce6a2b982342c80303a4296837576153569f0acfee14dd2251503d5e5295cc76ca55795f931436b6434404ea84266de6754de39263419e35bfafa933250210369b84ccba0f6c1702a39acf3c70a2aa961eec0c2a0fa3ba2eaabe05551ecf0a0a0aab2f38511397d0e2290e33600689c74d09ac07d49ae555094084677a0392264ca8c68d3aff2a58230b5bc2da171f30c263ab48d940e1f27fefeb15e454290738fcf6fbc08d83e573477de2b6b80cddf6ca60df72fe82407bbc963b1d68b0dd5d2b78bc5d800fd94a1b039d9160d9474b36234dfb2572862efe74e6cbe2daf34234b7d2d8a438c5d95cadc3217dab759da042d77827e3ccb162fa6fc33f9d6078e82980f8fc9be76fb41c9f596064792fdcc2702492c416bbd876a58b9ffa226abb6e6f2288df466bd77b4ee4b626d99f8cb49ef2f27cc80e296f7770a7256c2ef43fffc94333677e291a09621b881c33b8f703120e921070220cba9cf06757ec3efe6873126adaee2f45f28d4c3b5d7cf696ea375d09492d406cc438d721e7673036598aa2d6fd4b8f5dcc21ae04693d6083ff67e87b2ff0470bf03896acf88c660be59864841f6ee94626b48eab985e0ffec2a39f8905f348f821d257b4154d5f2957879e773ab0fafec8f0fc1f3b9b41988ff65040f0fd282964b431f9f59b1809f2c20fb0cb8221b0d3d77210b025dfd62114031fad9636f9baad453931b592879a68b5d11ab70955850c617521acbb018fa113a8cf8c976f21fdf02d8f68c21144590b8a34121b0117e8b87efd3c967351fd27c92b21e6e4b927ea73d331dc98b1c422e24c91de1675671863a1e9a6a16970e323771dfc59d48641940fb3eddf35480836866b031c237a9dc1d1c5ecfd3ef8d616c504ce116f13755a26f6d148776435cc1cc23886d5f30c999c8b64b81fdb684f379e562129f29972ed4a2fe7b9810580efe797450576dc74319b4328e8c171e86bcf28690055276052ef6040205cfabaf19d68a6012c8a1a674dbc84b0a338b1907f38f9fa67e7a79bf22949519974e2ec9fcd1cb177f8e08bb3e1c9fa2261473c2bfa3c26cb0d3bef688633f7b0153e4f3d1efe96e62b73e4413feccd2e6fe10d9d4214ab6f9604eb0ece29e871050edfe7190bab1182d6f38fc273515a78cd46adf08fa95b37bcbd0826c9933c650d40df5ab15b7d41a4bbb18987c3f06d1d3205ea6ec79c8146a7a39f49709acf2317637600311eed9d1cc429a89af9e68c0b0ee7b396c8a55b8e4aa913e73061bdc2d388d00e53c3ebc58dc8b8c08cc7f56bee57cce94d4a373055cce50c579bdc06ce2cd3417425a5b61ad83667a4b5bb5a4ba0bbf19b626f14e64f4039349b913f8a784ed31e7c7705f09839da1318b7ca4c024a7f9c16a72d8cd3efc0bd85407050b3107ea28a0cef6466e1e42fdc5fb55d8a6b42b8ed107272cc20d0813a017324466696c1fdaf97625fb9b5ef744df0b95ecf0e82d4f468fb614994c2c992631758ec600546208f633630f9322de95ffd92ed124767050b0b59fabe9eb67850e3a93815d9639220b8e4b0b4a37ee35d2fa1aa8125db00c05ba71a8d6d9a2193ec9c700b96cdedf8f0d198510ff5222f35ca63644fb9b8bbbeb0eed4c638a651005308629263ba5304deae37659925669a1e7e893931fa78f66b8456113654927eda4bb6f92d43057b4fb7416315eb8ecc8517ae91a57fe2f1d43352dda0396bde1f8325a4b192af3fbc90bb685dc6091f1d07d43db24a878eebbd248c1e5e37dbb3ed314fc353ef22963cc9dbcb3c5d469a644ec3b4e9f285bea69cc03b16cab8e9b2f634775b30fd9d24e6fc0c279be0111756bac8fa9266e0be0151ac46666c1de939c67097983120fcaa3ff524e72d6bd0629ed3316ab7bf8e562af3fc16828b98e6f07c49a9d0b9f99df899dc2937ad3f149941011443a8d2b30715745553c4bc0bb6d882f675f07f94d3422d8c63a257f0472937cae167dac5c71f1daf35dc2c8b9840598a9397e49d086083d45f096f3ee209e4656aa4dd77debdb3984edd675b67d41ac0006fd064a20ad545c67c7fd36617d5891a1caa03b04c4ae7ee12d3a77eabf545609b9057db4fb0f2b9d93160fb12db60a477ba606d9b07749853d9968c7bccf606d2ef907d5ed6bdc42ef6c5ec4c5f837dfdd8b2f0fe14863757e5053700f1491a69f875514b380667d92242520e5c74ed0c7bb83ed7d5fa3deeb1db68473479d6dfa365f59cd2c48ed9683b9cecfd449d87aef73a60a01d48ff0f686014ab03bde8a602413ee67d7e8ff390c63847a0067fccfbc7a0c6d2e6265745a21f9715a540f09310577f26fefb502bfb9d53acbc48d86784852d71f5d87760e04242e0281d2274a6c067deb28ce2888ef94a6e0f79772c008a97a753d3122c93777c020d78eaf5dd1eb654af21cad354f133814374e3b6719173de5c09faff4bd49478e9086ea1108e571c88a499c854b4d1fbe9a7e45b31ba308a32596c6d489c434808b62f1bd0e3536469596de02659085903a959d20692465a97edf9632e89ed2eae8a542e00b0b9cc52fb9a99d311e33ff4166fbe155461e912b75071ffe4be89b85fe4ccc2abcfa9e3e4bd57cfbd710de6758c6c2e6eeabe36ba2faba2547d098eb649992db4167a099b783b1a33d2ed84043130fb24c217636428fa6e09c52ab1d08653b12809c06bba4a3493ef4a1584d5042eac03ea8d89b98637608e70bb215b46042878c88cd9fb6bf4f221ceaf7b001019be54aa3142ec0b3d2c84b55247f49a8a3b50250fd1d2be8dc0431dc859ee96d2a40c1262a603b0bc4d0ff90da15ef2a53509d05cba4d659fc9632e3c0906543e7afc4e1156eacb2346aba60fb50e0a312d000f159684374dc2e0bdb800d948c662c58a1ff69722e58d5a2f4e60587c6b9fbd2d966e6bd961ba033106b2a502dfd159f77ebfe9103fdcd44333e6364a832d6c53dfb57069924525bd842026574950e1926ca615c209f9c2b9d19abdeb64493b2701ee974a967d6594200409e8eb93bb96c10c836a9de98be8791371a8318a167c384eeafc299ddbceaa10b7567c696e9306bfc77a050b66cae281348fa4b352b3263ae7332ef1c2516e6a8956e3cf8972ebcc44b6a983c33352b864f50fcd119a3f867b9dc3f853fc76327801386d36a5c6a36d86b391acb5bcbc69cd14003c8eccdaced3687aae8793f435d67c86e009de15eed171d0e8f6f300d263a935419f677da9b5ed1b3f741777c19e682e47307621f5a1e96b252079f8530a01fa81b6f79b00f934e9d6c7c45746513473188310af99bd1ee61c95398148dc60b022a4eac7e67b7c9d18bdc488d5615768e2b82fe40c2b45f6fcb656470a684bd4cdc053fafc0c7df258dc1d89074d7143668e3a23373934f3653cd9800641091060bfb0a962b5f7c01f8aed5518cff3efcf78b3d29b25b6c2c7c2450dd41c579007f77009485bde508c4b76a87b86123cdb2259540750d8d1b354cbda096ec0eabd37eb8436d01b74126d31dcd052ffd25ba4424f5923007950663771fecdc7fce8117a8eeeeceb2456f5d2c928090dcf030ff46d310a9492759e2e11560b1a7565b8953292d4ed8fc938dede42156fb981f085335963edcd2333bede5c8d327804029147bf8e87fe723d8e70fd1137bfc0ba25930ed4871ca82e7bcb91e1eb6322d49592c78d55d4056ba48483978d8a5570cb2d3ca95fcf4ad36d67eaac4833dcd7e8a7f11c383e1853228436b3c97181d0abbe0a1ec52375e8112d5ea03749691bcf972031814653369930cdbe9770d590437d9d4398def4184475cb5f0abea6d01425ad197b423f368c1f15fa85d5fc083623def4b60e18b0efc8469251a46dd6487d253a254212481714f28c175a883fedf29c38313531a1ed1d36f969358a881c68a46c3719e583d9e819f2dee5173dbd8b211f1022c24c32a4261d2623b8e52aff90d51f517c144b84c85d54b29bb2f64ec8d0cde063eeda71d51f46a8a791353813709688888532f62a93a485713abbf753c6d5cd46668ccf4b6f6147cf15a7060737584686bb8ff3168d89e2c1ecaa2db5f3498732ca12af97ded7bb84d552025b7a2c471d1c4b52257ea7daa4839a05d74b75b19765da525a9228362b1c8ea7687366d3642fe94043871676e1d0fdd1d54666bc0a23c6dbb34ba63e1b5d5798c6afe295647f5bdb1a102e53a3a3445c53d2bde6e5ae8cbed28649b143acab4fccecbebcc3de0c33312bd1b354337a13e92477c9dac5bad0c0883aefdf6a48bf39a73449288347a27e7d3f21f76527a170418c7a87aaea5bbecd1ff930898523cb88f00916e9ab8a9feea31847b3e2699d5ad9e32a7927bd4296374a33d340e2555b5ac3f976dcd26051be61c4f16a38776c0a39975970db038a37be5816028df638bb4d86f3b9d0383e685f3dc56a89b9a3c15b5fec60d2e69f781f18ff09a184a8f9ec947ff86be9b8b7410cefcc28bc069455dd42f9a2aa9086ca92a75d399dfea87949c5abc13528c9f2bf74c1841563304f4375e38ea445bf9a823e6131baedd08446a31933ebb871ed06f1ddf259fdc983108f04bab4c6a2008cf52fb394cb87fa79486bbfca79ac1163e8f97fa9bdb5347eaf3586008f5a0f1387e3331edb1a8f1384fc96d9dff120fff1f9879d06959d19d186be0c79c24098666e49d57993024efa4341bac38956dedd5a8ce1628749117e431300119823b1ad25eae7610b870028204219109b6fa51017f4a708f9f583c470cd8aad13e8496417a89dc369e07130eb53d133682dd2308bf2b650651bf0c062f79e1699b894c7ec5941df1f144abba07f6fde77a49d0b1d2185e3bd629497a78783c45e1d6fd72fe671553353510ca42259f8d8c9240532d53fc499a3b246266bc8e2822efd5ab64007dd2d5f80f08ac3e45df63512ca5dbc1fa3d40c611c8d66a5a6db5f2207c58022bda429ddd7ef91cd3cddd272885cfe92419754c11d652518dc84f20c5d3f9635808fd3e7e9547278a79bd21a46af6d5bf838113203baff447552afeae83d5ad3e277fb44ed34c1c4f3a28ea32a1e17a42c8d2f4309835b96ae9236a85043dd88475fb09fd783e179462eaee0b1b1d894693610b634cbe52cfe694e0f385b83d07d0f39c23371fc02e6a7ec7596ceb0f1c23a903399bd15a03f7c010fd52486ceb42fdf14f9f63890c474f4eb49bf34e6c11848916e61295fb759e2eb9e47ece3b94b9a396c1ec86154af9475e3b1ba5fe9d089e283d3a3f3cff5b0288e155b1e33eba2a361399b36f73cc03b449523bd08a7c07571e0cce0140e4d6c11788fe85721efde2957f8df1d7c70447fdc4fc74bede4f3c31ed636ec546319a6a47ec4e6c035b813fa51af59257156cec8d714b95d3393626e6705116614be061a12502752089256d19db9df42e31d9bcf37ead0bc4d91b629ce35e810e2c4c7079a8b74894f7d9f90b7d317bcf050443c98d20f8b31bbddf52405acbf3468edf7f5d0deabb9deb53efd02080984ef031cc66b8644b36f0b50c529ba01a244d9b0c2cb06e503daf0c6edb996839389bb0b374026b9c0562cd1872b2f98f3d10127d4525672e414ee26777658e02f9ff64377050b0532259606c4b8da83e1b7c44cd35a8d190bdc9d2cdceefaac4b5d509774d74ff9a9a2818ff362c98ca3af99bcce32a0235c6cee724c93564c015c5fc1ecf4402ed81a081a20c3358c1e914158c9a24ea871f0a6354e7e811d225370895796929e891f564567956fc989a6529d38fc4f5197e804b593cf97ceffdc8b1fbc3c1ab86e576e2a3611d6cbf6838f5851597385c823b1911cea4386ae0647a773c5dadc4c9f58b0ce47610b9da414adf79ea81aa22a8a6830fca0dbe838d53b8b11ca36d78c7d15147bad1c66f8be28b3046fcd5884ab02350fc396d05bd45825c67a0aee17c8a58c4c4f3c695cdcbcf0b6df34976b6e654560e940d171dfc3b58bd51b47b3c38abe3009bf142f305b34026add550d73f93c576d0a76cee5d24055cb7560de6eeb5894d337cdd45dbd00785635cd74e8047d6dacb469cc781574e865a7f4a659dedc7e30c57f8ce614107cd01694aa24e3e390c6dfe818da05bf1afc4cab6e4cfacf66fca4d72a7177f66c46aa3d5c7605594e455af384935c385079eb23aaea5ce9146688cef5cb47bf107f0273b44b714f6ffa3a5c9c011b2d99d601f611528b45a47679ebd972bcfdc8fce447dbbc53770baf04eeacbc0cdd9eda14ac49d3788066e89b1ef212cc3d927b0c3e5cb1a79369bfa239ea9985f02f5fb87d07f6243cc00d1659833445c005e348d8f1542ac2f14a812e4544388cbe2278e1481d75c93e567b8db5984ab4947064c50817df457a5dfbe12fc9f1385e86ab51b27a88592393c5072f3f697b4fe50423e1cb0a24558720dad111fb71420d9e9725f84136c581cd87d35fc013425914e7d77529575ae741616840e657261550dd105e91d026c4bcf7c17f3a665f7b1888347a5b866a91c88b6d2c43ac4b1c050bd83e46e64814d14330ab9f6ef9856683cbc08b06d6a2396e122d733f5987705ee7e1cda518abeb29ad0d52d594d45eaf0f6e748d36c9ae0ce3ddd16adb25dc0243442cac48e4a4d1afd0dfd89b8c5e661041576aaaf75fc3b8fbe5be246c88fbcba792c5227da7a16c7fcffaf9a08accd87230f0a45be07f3d8915fa03319e52da188141e59c41971f018dc361e02e511c6e78d76ed2ababfef585a51da87fab9385d28001d800b0f8e98419649d0a7eb29becb47da5972f05c9c7adca2e32c35ffc5c811076ee6930a4244bcbe26a3c00cb20019e19b58acfb6edd523f2e195e4ba569937852ae7eed4052b823be9475e2c832ee9d7140772a92cb9487caa7c8f187ad1067860a9a91d3e78d874224ec628a4874821ade9194e92812f2b95ae09214554869410721ee828aa41df90d6118b4739824af962c423e8cdded4aecdfd04db2051a2ad82f42ae1ef96615d063f0c675ba38814b5e581811e306091b1fac944a5b83ea1c21e9a8f4fdd9bc53b5a51c06b17dcdfd87acdd162f3f9b4704e3c9cf51dfdc0d3c67e0b0cdbfadec8dfe197154351735188258fddd9d2a8f141fe410a2e1a9825a7cb282f39460b15e3c62ee011b8438ea7e59732c9f68584804f1f5c3097fd9114deaec8c5d8e06f59eb46b9655050da98627a7f58dc972539e5c260b89986c7300a79a648c9001bad843e549b7c7149ff1ce1cb2147d9b4d945d071e26e1cbacbb5536c185c770abd84917c1b106e76e89bea8a3fde9aa3f41536c008d05a900bca42a1cf43a9e24840e6ec1a5ed7e98d4b48ce39cccbf9b69aeef9c6ca486a24b391c59a52bbcc27524ab9c141ce2377cabe5d5bc06bfbb2f2103124d036a504cce01249607655efc31eb422527ebefeeb61a04544c2e367541fb85db68c7584dea08163bb61d5db505dff229d6f83e16e60fe7342fb265efea01ec0ec4a3aece87ec6080da9dae0fc210a400c258c01a6f284bb1f73ddd5be4339682f376b13129196d5d7bd8d04eff0c9f56621c396c1710e475572fd3634db78ceb6450a1f5452ac12c33a27bba40e3117b3ee863f89ab202946d4bdad16ac85b340508d7f5ed2b9d676a4e1ace13cdde2e063a73b190610359d3ca0ccf1ac1804e4243f1bb2a8f7a9335ff3f5d4697e7ea720e14d49a07425441c51beefdcf0d8e9cc255e53931a1e3910caa35062cebb9027ea4d9ffcfd063c0ac959ce3eb4506986a5b57d9b099f0b68f659ca4c1181c719f522772030425c23675af48926c270d9b827ad105d9d383590ae303b4d2d099dbc3dd31da66f6d15d052fa6d32b02fdbfb607f4b0f9937d1e31de44f8350da4f5c1f50ad114ccba77cefa49924f920e63b58172e239bc1a3f6f1f875cb85691e18737ebbc2231577c36960226b1373ee0e5067e9e11dd12a968f5bbaaa639b047d71902f54a840f72a8906663e5507f9a11a955cd2c2619e05370def75b7fee98ca983bebd1961ed69549673cb25a738bdf0b1788a38ba0315f069a833590e6ffd954210474653e60e4c99b0531b916d1a5c47f9a2c2dc06044b96986c1493b60da85b81c50c0a56b1a12939754eb562399477cb069f9a6d628dac473a256e2ac2d934e6ee56b3967df8ea79c0f0e749055b442008c0db1d960553d5bf54b2a98177bd2f3245471c9ee58926223fc7f0f6fd762c2a4728e94ab75ed1761112dd6c1aec3d6169350f8159369553c9569afb26622d5cd543f3a5197f23e6892a0c1f0fca3b2ef1448e669c3d386ceeae0fc8dfb13af6e733de4e6df290f909150f72ca90327a41077111cf3cf015bfbff992adddcb6f8d2b32dc11654d6493d89dd73b1cc3d3a1e6303647852069bf6d9a2a26cbc027bd8595cbb7b9ef1b00a97e2f401588480737c049e9383d420fd3596d5a080a402f22e9a368350948d99fe6cf3c8db14d8063d98600497c3f925e8edeccb070714500a50aa6f924bc9b0167b3dad080f9ce12d7d2c632ee9052337af564ea46973d16d2deff63ab03ac194c17c7d5d00299db11cbd4bb126e866c148ee7202391b22ad6541b1974bb3b1be71bb9ba5364d953f2a9242668707977d056db8485066845789247542392e12c859e0321fb6fd9b5f960238e1bc0dfca7826586b07135524d31f86d7730039ae9724f8f5bd9aa692c35c52851634b7e1b9515956b9f2f1a8803247eed926f6c8356f2557b091740a23edab31e42891af83068931da2692c37b9413c990c1bdb613262ed37e6ef95186fb3580c0f397af777c41e0c056fe45ea53335d1435e67f443e0a73ad06a3ee3794176796b9280f67bceeb64a3b312b738428e43c28f0029487c48330a1321f96b6f23e385469e31adfbe96141e533449c67851b8465ff1be325bdd2f467f5a35e3abe297869ccf3b611f88df0b091a5e61151edef670eae45a4b019bdf464e52f4e27f448e4259715d1d60879dda2abc8b77ba746f007c9654c9549f66103e3bf953ce225a0c1465c76e328c9c9623e99b6a01b67e30bd18428cdb7477ed0d8a02d519f0883900ea35bc1deedb46219e02005a7740b7faac6236d3a038aa6c7b0939493c2f48bf6472baffdf1ed8c2bc22b804e6c2d1f3290884f4292977d489e507a0985ff43c50d64667fcfb23cd75679888cf8a9a474c0e4b87d07ecbef021e251b7cb8a47bc0baabcac66cebdfba18e3cc6c0fb6cc82a42eeb5b18c5634f9b93795a0717a0db81593115d3c97328b076285495fb8c69554f3a0812972430ec01d4066e1ff82cc37edd4e727f0bd2f0d5e2cbcfd33bb34f234f45b246732f933122bd160cff246e4eedb71f9052da89b7e27cfa192496dc250f776a06857d0708ac2bc6d56227fc65f22a350dace2b1bb9ed572be7fd47d306e2eb8bb15aa0fedab9da415e2090041dd1a3a29e9fa2a0c2de3bc100d43684f091ab78e339ea6ad77d941c3cfc798b9cf56903d0f04bf4ca59556940220341ee4b59e849e9ba6a7cdb7ae21a10837bd50e415d10abd130e637f4c3cd477c13f56551d36ca26c646e4fe2056eb4d03434c013dcb6eb2980b4a647e90122ce01015a64c8e2902b7d99db7c49cfc271bf475349e87d0d2aae745fb406237df5629d515038d62f804e24707e444d3f3e3fa0fde0b630b4e363613b74fb73faacb71b6158a06cb0d69a7f4d463bcf1a251e57945920456964e9fdfabb3592bf8c6a44c79760d04ec5197f287d86105d3776b661b51fa7fcb837d78f7b8929383f587dec0ae96d01ed2b017f571ca3c7e8393daeec863b30f0b668d0ff31c4102bd7c3fb1f3b9a2450f5baa6e9efbf1d472d49e7995b4261678ff3caea095c6fbbc61b6b3335b32b084acae993c45d2ccfe98bb19f23d9b9f8e960fb635127075a08265fbbec6229aff9fb29966868255b3f57fa0b2054ebb7138e9606383bd7a5019086996145a8230e36b8b1a8c1b3f5ab021989a77158b810e3308c9d8898f38450436a6bc470aca9009d486f03b793706ccf27ca4a5ab613211676838e905ed14f83b956e625e2b33a9e5fb955624acdcb2f8c24dd329b60e31004637b2bf7ccf855b6c85a2ec71f4aabdb4c0849c927f06d13699389ad74a2aa807d741187f108478cdff121b1d2a8805c869bc4c56feb17e3c714aa97a97a9b028568a06d833f7dac5cea87809815871445b5024524c84e505922ce4e948d65e4307685182e4234660c8dc678147abbabd92364b25808241fd443d0629d1e822d4f47b53f0ef57cd27320dcf352898a6fc28466fee02535392037a3f5df729011d8b3575531585e775edcd6082c1ce77679fd5f04e44b3268a0dbe0ae74b6a2f385e5320c168625e290537d6deb68630df00b838b296545db244c4d3f633a86980bf6ac40f3bd2144e28a135c2a3e6e76c4b32ec2091b6d7b6d12712c966b542d447c97efd423e0a5963e98d9ce1b5b5f409f27f5e83116e8eeef7b5cbe704d5eb2d8e81f75b83076ddccaea8326c55a9104a9ed5f97f8a214320287ab5ba88bc75b5940eec9cbe224f3b3850f8818828336684875b992d87c02dba44f548a00a35c3ad2d15972cff312cb07a17318924a3d50249bcd38cfe78c9558eba4141cd3640bb55efdce6cc7a063311dd16f01692f869667a18cb27ab11b0b8a2a81f0f4a0b8600b0d53ab4fe751b0ac51a7c176265442df6a9ba1bb047867770693672d2c7907dbbb0e8ccf5cd34c87cf4c4062385050a664604bff9c31a8c43a4ac8eef3891e7bd508c15094cb13725602f98df101a2cbb14daa6d33ef881a0a17e69b83853bc60362d0b2a2e6a1b398e015829739a4624a2465cf45607ade2bd45e37ad70486e86298ba0ad2504900ef33eba8f48245d93fc24b793bd0dfed074f7080102023b29939dbda7cb13143ca1b83e8529b9a630e5c193f6fd892c4680751fa84000c206418a13b85e8f2d0a8fec64883a8940fd1fc20bb034e3cdfd301d484689a39295795abf08fdca432dffff2ac7b33131be07b71961d60a008b26a53cfbc36785ae6546618b0aa8345d64d2d90e938a4fefa20d84db150a00febc699f6d03104d41198f1143533fe7d96ab80ba2eb5a022a8f068800debd50b0df7955d20f66c3078e298eb6482855d504c3ac8b1af424a17e9c511dadd7d7e056b40d3e603009e7535cacff8d86c827e618f2171e074145b1c940b600b091e7f6950cd703cdb3c939c56fcac0c836a816d2f98a12575d7b912187e835fc94dd173926787ba77f0ba60bdd24a4d4ef1b1a7abe1d731f7733b021b761d132ed46e7a2981561bdd08f893bd0a355a10ec7c936ac4e721f093e5ae17c94b0e5d3db00ab7c3f4844fa33fb668242b80817bfc28ebe4d3815b3c8ff5c9e41760a74c101db9d4bf4e685abaefc51238de10e570fd2c3ecd349f4aadf9db067c8dc6cdf583cabb820e0e5857d399ffe967da45badfd00044a899bb062ac5c6b907639eadf5cc1f934e4b073c90f7d885f689c4bd9e122ee90b03627c137773bd83bfea4570bc4a0bca809d78f6e7e2289dbaada340a5294c48423232eb2efb102074f0c7dbff5064c4fbf35904f4fa5b3dd9332719b82889b9ba86a9e25802eefb77401f3a335aad38ebf02de305c04ef38edf1961054a15c26f7d0f266f7e6f67cdde9f2eb172cba19da90884c3860c10118eee1a00904732ef48900cfa7115b62718bbcdfab92bea6961797bf4d2d84495f54e9f6d2ef3d9de363b7205a34735e5f60486827cd70830ce6127087127cace254a3afa1d714d5d51c7674abba781a7cf0db46ecf9adc2472add112ef433aeffa0974c1091a01d6dcebe434a6c54c730094d4742a333556958efd8d13b66cbda74250ef757aabc6f32ae03d926c2680be7c6c06983c5e9438bf5e086b06f3e51d8d67497871a489e034b9bf8c888b5d168f56af2ce7563b9d71ebbce97d413dee8248d6b4327010cd2f2cb476e14313f8810ce0daa8f86871556fcf5162c6ed9529824363179dc1edf6119f950593c6938b9a63caeac61c4c06a6364322bfbf03601e235dd7976f735b31532fe1cb40e06b7123cdcf3af8782dd6eca9f959558ff2ca5ab36a81a35894c4a454f569dd69d7f9954c23b90c8c7b39e019e40a19a25525613b7b9480a6537e10975de3126b36c6d12224c6c9631476f1c729b2a15496eb2fe0bca20553277f6941152eef21b06eb27ded793a8cbe0e62c6b2be79adffcc1c1f65d3bd18a5a3d2a9cf0a604a522f79b155ea21948b6a96c2ffe07ada4873c1bcf6320e527cf17f66c523722e19b1d989745cfa2ca525fb8137422d503fd19741278021f3b91fcec6dbbf439a8c60f67820ce1666c787b979e1a241dc63a51d38353b3215bb584eeeca5596ce504854d7590e84ebeb7777336d8b07a3bff1e08e670a73de9b64375afc6a27495e86981488da4b584d6cc264689a30ff1e6aed88d2d2f10cc8f7608170df67855a08f42ac9c6774af6cfc55bf1861ebb3a4c77704bd21bddd91bb96777835209dddae1753b17ee47818818e368cc70589687b292ce5fb336b9495aba95312fa6e4c99043e3b382e909e3e463120908af754c7a745005e24caabb93b6f13b2468e76d3d3b61e8d0f16917829fe996b0d78ea12df451269df0dee99f3a8f0226b666bbf5a047911795d6ae2c6d8f10f0cd0926af8d5fe1db260f0e113742419b65211ad005ce01a301b1400da19d6c92cb107c630607bee7391faf1f30353ea100a30e1635d34417f5c30974c3b9ca11cd1f313964a0c7bab4d41f3e09f555f789a5df06c016435ac6f4b944e58e33076873853f1417be6c50ef40ca0951401f13ffcd5fb757ef273a222fcda8c7ca009c99aaca304d176b410457570fef315d0d54349393d012ecdac7a644654958680f8fb13f146e67e56d550d29f4a248d0d10eee373738b7e8030532b61bba83eb86d7352de8df68d1f8383e4bb067f9c85555471984599231110f621917e8b551e1775e19c82d0ab027681f2b8855f4558ae0876d6f044263088cb5612a8b48511e2f63a7cc8ced01bf1c16e279585d75df6a37a1c680dc62154c6c809c57b06ce8631386be92e4cec4c3839322c94641b5b0d3d6d496800d3af668082d11ea05b1ecb606359f688b8930b82640acd899099e04ece87ef8edd4ef80b7ad869be54ed0a5d5d4332d741ca97a5ddcc790d640f7934b58491244a2dd4dcd9353400b911c02bca2c5238f83f43424542bad1a3b6b9afe7d1eff1d8430e9f055c6230198aea92e8a3357761ac3065a09e923e6a5aa177469c7b80440cbd9964c33d4a50528a1afce641c66401373f01e68e9876e3a2c169fc30205e68a22544f3349589d72e5136f2557939573ef2fc3e33be8250d85a02a607a76e8c3ab4d84636b07bf24a22ecae60d9a68975a1a88f5f7c54cab3e9f64959dc9b50218bb861f932ad6cfa0e8a5a3fe7b520ee175b597277e0f5a9bccbac99ed99aed4632713169cc649e2b9b662c22a947d4f91397256a07d7a0de490dfa80d43d7daef5361ee61d89918053710c99cf48de3f899df5d1cb836123ff66769f48f6c68ced141cda4817b968d7254ce238d698e31a8ddd9d226f678417b0ddf4297730d9b118609f35b988666ce0461ee9018ae63bf59848c50cda69e379f35e30d8de29f3c80e44bed4ff100f4d70fd368f73416cb750cb784e24babd79c14d359fa603d1ffc82b7a561db374d10199337d73cdf8469f6fcd2afa453754e88899349d74a0144d3801ec0302b03e2c336a3ee68d909eaa880877beebdf4144357cb8705728eb16cc9fc2ebc10e50ad33d76f052328995d35aa26d7f0ba4f91ed1b1a0a39719141d3d7012b0ae4e6e725735767d2f093aed3bf5dd4b64c869675d9a9908c133f99c488827f3b37d1f484ab4d9e2c3065f2e651a1c6e3557083634ff651e3cb23ce932a0ad09f207c5a84b2d24cb4ab9548b2635eae7ea4c894e6e6a50b10641a9d24fdc5a62123524365152f25f7e6f30e07624fe0c02f36c5dbed7949c5b1f83fa386906619afe6c32981ccbd02f69974bf5adc1d749ebc58e8491d71abe1c42969258f9ad4adc1860b5e18925d7b41ea4a22980c8826fa10abcc633d1dbfb1dfc9eb592110fa6f2ef785b8136a3acc175a1791896cedea608fe46734e1911db20876b7ab994f6a1330851cd43e68dfa12ecaaacf290221caed5a40a00f356f9bca1a98e6f33b6a19c2382a9cc707ac8118bd45dff9c42951332b46b86ee859712bca6b6468708bb6239d627590be521a7f3fea76dd8b664890f54c0e8d23d1afafda62b87e73111d7a753fd4f0da2f97396ddf8122735ab4c77e3548e24cbba66000d5fe6b20781bfef5d5808a2cf991d15464b30551a60ebe2bc2018da490fc297235230afc2fc2ee537013c1745f30ca0255fa457393406b5d0067487b683930b9f2e09416740ce7fe2dc46046bbb3ad41cbee184d7001918ddd6327547a2af687696a19bbf9b7b038de6d4b559335ea1246474e6dfaa8458049c37bda6c0c2befc87261ecae25f32c336bd8b78062f662f37a248ef160b50a98f5222d75db6242a3fedd5d382a63a7c0d9438317e9ecb8027a57762a1ec5912d70dc257450bb5935f33491a9f0f1b190cf51e2c0a65e774529fd9fbda07489c185ffd716c227bad31faae7e810d83e361dbbda0a840b149af70222df3de7238502168cd1efe4b173777f10e4a9bb1b8622fb12f81f5ab700f4426d17b3d3c329723b620eb722e6b24ae6d9562afc982c57e0353d1361b2c12a57f64009e583b8aba068e624385e2cd2540ce25e3a1c6c239298315a8ebb4d0191d2a1e1fdb0e3936407957d531f64810001d7fb800b6cff9d5b4830b24bab2eeb550d94559b037a42b3937f4ba0100dc1bb970d5b1969dfbd0a9a71004b071ee0d2891f5f222fd1e8878d91423d903a135d733a0de25add46391c8116fbbe332e95cdc6d23832166237ab2e35104cbbee63e1ddf599f60052613aa536968e09dd1d9c13b537cb87022a9fca1217c1ec50946015b5cf9abb6e0b721a3e9f67a867ded255b02029f2c77acd5c9c04faa5f6bef37a3a4d0e9b69886688ecaf0d222a8c72a188b251e8f5154beb99360f6b294a7aa9cd7daec5524b98c1ad8bfa97b8d31adf6e618c744f62eb61ba8eb9dc69a678ad7711f391f20cb812dd3ef96621e4567078ce28a508a53251d61001a4ce346cc445557648d3b4df033e8aca691f66d9da1fa28ef40b3f40dc28a2ad43fcc1f9023a83c007de0aa8046a146fa5692e934e860f2b189c4f86b239bc8f070c2e054e4a6007ce695694ed9ae93003e5171cef82c2b57f30cf9f13dafe8ce2a1a399a6cb41eb46e4b34e6e1de164a79bd317241b2d58ce043dbd0e00b7ed008ddceb83a9c8f8c26f625ffb0a1b76ff0ba85cad91e18750b8cab3c306cc7985747007e2d0ee11bdd06cd352677aa71c129223024591d5666f1154949483d95fb97f1df15c84a6b4233d191bdb19969a233d28ae2df224f440af8e42fd5be284b4d8508c267a306ba8e227939abcafbc474a22e9d7fc8d7997a3f6d11ac9f1f21b47e92ca808b3f779827f8d0c69b3b00c8d5e221e950d1b075aa4c790fbe8b36370905a7ff1772c0adad6f1a2439808754f966b724226b36798c0e40a2c2cc77380026c63883e867abb6b347fbe060fcc6f8f4c9802e4f3e72660190a9e931edc6f9d917b4225c4bdffbc47a6cea28d99af3bac2c30fa661d8ba7ed74841c422493b20a0aa1a374d9984578cd7d4f35afdf83ba91fd7448feb5d91d094e707d46697e370a8a56a8845bf1d2ac223cd555c714c60dd124d3f72e24d362cc768ff5daf5d896a59a79afede0835b8a2b312c0b2f2653f6f0ff298275ed134c681158bc02a770bef944331621602a5f75cea14ba827b66235d0c2b1235d481188bd27ab3b7be2821ddacdd31aca9e151de9e90203da92e97d395d11f7a4c1ed61b6d6cd62f7fdca2fd5ee7c9e90c43401004b93e371f10ccb79e29d6a372ac5c1f6f630b6a78a749825b54f14ed481855ba19ec8d87a15573fd83a5ba382f475317f177ac90199b56379927ee799d1370af5a738e99b77fac80454a6464776d89028a216f55eaf04a01b8e8e3e336634272e0ff57c909271dc8a5f4cfe726470b359def594a5268cf6ecc2cdec67086d49dbe82ed77c0bdb85388c99441f39fc55e1c621f09826e589e8094924df93fc0535d7b51b547463847d86db525e5e11cdfa5971593655e26fe60cc55302f93239b5a5af1658933dfe75d1a56d04f1eee62d9d73e37149db7aa5f9220f4336ba362c49ca474f1d27c7e4fb964e3c4b6cc4e24d4aa40e0c236d1c9449eca019991c29f495caeb2e2e8abcdfebc896e1adad12333a7570ed6c386213d98456555fae00266745333f8e83d5cb7ce7fcd2a4ab4dec9124bb048e7369de72120521e3b05ece084200ac1cb29227249d2179402e6564ace7e298143fc519f1526812f4d8ed438bafd8503283a16b27d4e9d5ad9673f0ec2ac35f7aece1657e97ef3f68814e5c70edef896c789c2e5e7033749f3d75a40e64ab644633ac1cbea619474ed5741260d7f2d2dae953e6e5cc930b572bc21abda8f6f01a8ae7a2e45bfa1c841f07fc8fe781585bdff0d38536793ffbe4a489dad5e8e1b7a2235b1565a59a6c7ffc49e1d1190a6fa02e2c2103cb01cb4debe541ae1d192d651331928e7b2c272573b76e206d9f198f2a43198a6dbccc613dc4bc5b97d5f0e47fa81e2b2998f6843fbb9a5bfc793bd01ae015eca819f613d0a4d419478fa475b027ceab8c8ad859f4b4ba4460d6c0deeb1ee2e27845b11bab646a823051d242daed023c34e5e16ad09991799aa36425ff7103ad4d252f9afc1ddf27565e23f1e105024b6d22c3b869d2419afba68c9c1ae4345f0b0c92ac2871a993b7cddf4f6bad8ad7c8a721cb8d443a6636fe45d2b14d17fe877251eafc2eb7539bbea576f67eb7d46ed90116453679933b8a9a4ba95bc234f657c7237fadbbef10d7abb85fbb5dbc95ab1fa7d1b799379541bf26c2ec1fe07d1c7372d983f5ae3de6242baf5f7004038af5554c4b132a8022a079b78413803a4142bb94dfe90d93038765890dcae74b518646efedd7fb7bbc2cc5dfb1c4f26ccfee9fb4f876fcabd85a41ae44f84ab106f12f7f605d491c1ea4f86553ef3b847a2108065fa6e2d124016836112cbc826a17b83d46904dcfd287ff8b3a032b9e7d994217d0846bafb34a8a8292d89ef5ffca9dc8551712e6b9ee4822cef4ab4109d37ffe4a7d7ec73d499d4837cd92df964bbe8960e71bcd9428a9c8f7ed0a6950abb54f0ef12b839d46c8af50588881fc67a69dc5a23332be0fc9133b24ff0e8aceb88b83f267be7d50d1445c4239a3b7d856c3d51fa5610c2419f35d46f5ca8e8676bb51d80cddd317e3a3b3c4d72348cfdd9be2bcd531bfe81608450ff7f90cf6268c69a10503ef8aac19f62e521fa6bfe52d8c61492ec0717b5ed1267b6fdb1a6f8da4b5ae498d3a0c57f542a14aff71ce8db3c9d31742b5248a441c91289e7e96d67c6fc86f34d967a6fc9d887ba126056523ce6af279b77e01254aa754798fb7ae0150650bc77aa3d61911857a2bd9cb085d13740379b402366f64a842f47279dfdbd203d2311901a25edf430ad3546a09edcd88c2833ed1270b2db265038bc2283f5d8cae59aa800c3fa3da52126965978beadbe716feb682c778ceab1df6710bf272104086332a1963862a7bb2b6bbb3c4e00612ed3ca21ce4fb173ea1a4c77b3d0a35e4db74180463d82fe8b0a4f2069fe93a357cd39cdae9b479f2daa82056e6f6978ef134c3c5c2983fed5f442d5b98f42e8dc89ed2a6ba9f1eeed77291bb51b41a6bcab3b3ee482f4a63c1119b880274d219c9717b14539edfc4ff510c1cad7c40b7fb00fe5aa068932c9548b19de0bdc1c3cd7517fc03cc107e6f7fdda19aa438371462d5e8c3023421fefee74a51d52438f6ac92a29a4568d311c5ab28768220bda12f4ef1f02ae9637d5cabea5ceca87f5a9a13da4c9a27df899d30a225f017d53f0216362ae45593ecfc4c75df0f5a0cc19e072d8f584ed7c5950541d793fc5d5828393183207e0d86b6cef167d4a024b638412b829bcf3811222ff881575d30331ebcba735b2a66bb32ed5acb9a804b6b848992b8713f1e4571a9de13c59fb77eb0501b12e3e317db0eb69296376fdb9b4f25518f59be85d5fcbbf263006ee44d09ff7674177ff824a8d05b8d18dcbc070adeeca7bab6d21171829702a53fd0f308ce47ba16a864fdba90626135f87a89412e5dad0efd27d7366e98e941008cff09709388a7c064b9ed86568a4f8153da29181480e24b30addc4b6f54a1abcaf9d63c05bd2c26bdcf14d21954571f8848e03b6e24ba81393c1e110eda1cb03efc28bd7b77d0cf7e087b703bd04edb5f6ed0c2d489f8461470a582da33c018e0ab52c6829f14d9a0b7eace05714cf679ffa411a8c16424cf1322bb437564b46fe90c5e90e3c0b8a2a01278db22544fcd676ccd08aca4548179a059c4be93c0ca1ab6401c95d378b3658a63c71a175731970cf4b2e32da291496f04adad40cc429f81718f434a005a178446b5389f8f12325769ab2692f9efd9207fff3fa775e0244091a82a3f0c73c3138b51fe97535d46ef30e29b72f59b7c6f5f1e7b283c8de5e0be2f6394b592f2a862efdb7d213f83902f3ce5bf6906db787dab8a1eddb2ee4b8e34a5965c5c4937722020a6a5f109abfb2f891de75f5313db2eda5d33309a8b2cdf2d37d4a69e63d98f9cf21617015658c2a7fc13946bd9d3a76f56c60a120312ef418e958d93912a57a57c69b9b2deb726a2e5c9646b7af38bece09342d7c7ebc122b1bca8c0306ae2e6781c7611abc3c3c23d8ae8b31bee64d8e78e011c6d26d6adbb2e31329c119be4b7f8bb66e82ece7148cb107dd0fc5e0f15346502b01d2c11345a013f6adab0005a7182e251b5fcf498d18b5b2e8bdb6f2e03c3b19677d81422e212c2a60967723fae58a4d014a43b8cab3d6feb68d0662dd0fd9b59f4aee53d85b1f3c426fa00e613a4a3c138ae21fa341990a0d692f2b1a3c7f22d719c9fa589b311ac9996b34df3357b44f3b59e0976e9a43615e1b194c449ccabc90e3045a6c2f3dec973a7d77a780facdde36ee4afc18dd6acb0280e2659883d3a7ce3dbee6764cf029a4edea5302387e4cf49b4901beec862f998b53f6d8c280ac8f13a186abab0838a9db84281f8e92f0677a2238f9be4310a453a005487f625bbdc6b2bdadb56c0f8a206ae2b68fc99eb155b439349b1f0199f60e9cda54ef9174a1cc815a67c734a8fd2b35345c9f3075a08643deead1cadb514d377caa37841480064088247d703359e2081c0f7c6310be51fb58a9d0a7e8f802382ad3221b45a24714fbeed44b23a1aeab89b4fe409d29dda5d0be645b74ece23078ee89e4ae382df8a0d6fccd5617ce05626cba07446f443b51b9d844e6f4c4072ca9e851d046523fd8e06276b430ee2f729faaf3d4a1a570ca44a874b222e84ab46a3ea7916f6b630fcf39c80f27efebe6d4a0be8406a57de58678d75fb042efb4fe3f4c77cfd7de7bf84f0f90dfb0b1bd56ae4f3871885290570d3be97b47c6bcd0bba74a8d2a8cecf67c855db0ce073054baac2437ea4b5b31aaf611774f3677a90b31c06bb75f4bb15d8b830514dbf8c3f06cc92657c2e7eba01628669aac1a10a28008a6bc2c1ab65bfdab67e3787cbb0f9ce5af3e3610ad9d504ac07b30ca8de42f98123107dd7a1464751c5e163d7138c1cd6bed363073e31d853cd5bd175e870868d6e41b112ac7fcb7d585bce1eb725ac5471ac0735c54fad05c41322d7a362aba236303ff45a224ae551a9ed28534d5f07352f704a4d4081271b5a248cf41fdac4cab917083b55545c2add09cefdb94b5542aacc28e88fee1e7f76a001649bae0795d0a1c85ca8af19a5a2a942f1245d294b2c778b2a9c7357d9cc584134ca268da7244ce2848fbb3c32dddea2fc825974a16173fc642416ff0ff4534e21013f8be94c7564cd995c59548f984e4fe3d4d0a8aca1fac39b10251ab48517d017b7ff9c3fe30e25ec7b648b30f4c8c318e77def6a80a32141f52a77483caff7e3bfec7c262676e343ce4d740915a9c25cfc324e60b4a676788dc6228e67e848e6b0fdd5fe4699b89b5c4e4937c200c475016d80012dad406db48c41a4fe1067fe5c5b2b8a04d5fea08082327809d77964607f2536b5f46db7e58b7d788e0e6c0f98427c6e3de25167dee489f7fad238e0a4b9029c4c2f04fa051a2e9587fb4e225d3f16af29aa5dead65f50e302f41d4fc119d495bd844cbf5d07a6db27fc6e7b6ec108b6d7db02f7d0794029b7513b38c76d73a2712a3aa86e2d20086976e9aeb5898751ff52a9d069d1ac1c81583f1a541069747fb9af6788d09fbeb0136a77100735c71b541b86b756be2f7d77439ae589d4d238f2c2664444c98ae876242573aa855a23e98a4704181b1fb4c5349a50a17823d9117c6a90888f0c97ab081b64b862447d8fc04b8280f0a3e22ec35577a346b2636af64043271506fd3ff0dd6e48216faacb813bdef8c5bbed836e0506c346d338fde33ab7669ed236ccc08349d254f87b442c7a0cb7b3e5a4c65ffb88b71cf05437688d4deced93f34792044ec22198c50e453d2d7d6d04269731c938b77fc7f892cf13c7ef310a883bcf55d2e475246a8f7b5e9a2db1e40ec5fe0d97ca40f0dc58864251f0a3c557b5dcec2deeaeea836a6a4d4bf96f4618fd3772f1c6d8822009f6926f6876690df936d3553959a7f10e9f894039f4991f8c20bbb7368c96a52a7766e112a36b07d495e03d4058ad2db85577e30a234b970e828e2b86174b38d704024aaa440ba0fae584d2fef975bf9352e127a358777b0914a40e6b50ce9708e8a8af217f954e50fef7a3d32c6b592b92e60bad92339f483b04f1b9f4a18fa561ffb59496858c75f0fcc35364b9319e6f63ed41a85239bc50d076530252ff23b93b88a91fe4b8095872764b78c316195f3c04d7dcb6bd64b750f4c0847d7ca9fd8f0eb680515a1c4b7bf2c0109b6c2c662b47d67289bd28cb15c30287035f848d3765edbb872c9010147ef93088770ee412c2f58007d534a69e1437f58824c70a3d3fae3e3e9815c40b6684c99535f4f84bd05cd0c762de88d1e05dc35905c412d645491b8a7e96d63b9e77cc22413a3f0bf67f2127179f31a40154efefd4bda663f1344aa1bfbc20962f47f56d1d264d8bdbfea9e201eadcf8f6ec076076b905807b19f6b31aefb98de37bccd69dc8270d4db5b0436bc1ac953b333cce8b8084b645edddc9b3eb0b39e10443774d1347ca33ba23dc5b9996d19797c5858029321b814efccc172f1154620c6aeb90313725b925f0723f57b746cc7bd788c9df4f1c2658b43c533bd9f95e9443b11d70fade65fc2b056a5d0e3396f44cd4ef7b95500dbf3ee8c254e9271e53f6b0170692bdda611ee3a188861dd47f7f756096f271e3dd56d97731a6805bfe741892c1b0ce44aab6931ceafd325ae3f4c195d86bf884aa874615637638df4a8551ca9e643c56b4f8dfc5186ff18a166dcaee628f661834b7a2b2cafc0f603fef8d18dab8c59e729345727bcc596542e31de8449bb62263a07eb5aa3f0a8c43d7f7593cfa638f69aed5a56b5e1bc7ccc7026c32d66c81bf71ec20e73965d8894a2a75f57a43fedeafca58c163454eedf72f9c5cd823dd22a9bffabd221e3eb26af2c7ed57bc198074512cd29d89cec8567bebd4944773438735e18bdb623919f96ce2d2875b33f234d627da16ef0e28ade8f3b93e1ac64b2ac9279b5f0518afaa050f36dc335faa63dcb26a168765ec4da4e81a7f5f831e757a75da7832b460bad598230eacb47aa6c6243382cf00a2c1ca6a1eabc8c7426c206b57c808f84313a0517b440f9f531aa0cdab4c2f3927ed228d81e6d205134ff75e0a173c4a66f90a80010e2ea409940315db35ef2de5fa7907d54e371735879f0b208872d3edaefd7cff10f7a63d1b92115e97e4edc1eb53db35eb829e8c7f1ba4a31255a0824e3cfe7140dd3d65d67e5a6cf62886b1e8680c35267a2a9768112f2948c135512858fc32867208960f551dea936e9c0cf5070f72da79cbedc5fced50b98921d9be0ec27b2d3ca947d8af4874348dd1907c6f82d197bbd1871e21c45d8b04e03e0eec3a2c43f2653d83c949781ef5c36e6d40553d1135a1bb0a6c020e43575e895da13a0700b2166f5a6667ec74c873fd18a406cbd0889b3c86fcc37e29a0acbaaee6c6af4a1a2500059879152c9bcf626d208982934b6c79e4b7e799ebbd3a9de4286769ab9cd8466141e4998fe9b5edf75759945ab574ec1c3b6d331b019a005dea9a539bf92022d484c9d05bd88c8e94bae58ff716e87620b8f33d1d96bca63dd5171781f093435e6b1efa7fd75e6a3b8fa204ba321cd9bd44490c3b844b41d3c2f7b9d7584dc0d14e7376c5821265693ff22f77076f1a405f5d83ab83e0670533fcee306dc9994d842d74d5813872a67d241f20e9d1860805c3d3432fe78e717f9dd474e2ba3a4637a7c912343bd2fc3998969f783183bf85f6a33d5b950cb62911131e116432d9ca1c8b69f7b3d23d8e05749afcaf08a49d7c364b4e55452856550a9dbb2812033d335664a1773f2b37f12458adcd5b8bea7363a5915205309d1ec78ea8b9b84540ebb9facfff3b9c52b2c22f6d94ff93741430c32fc9f68341e4b1af75659ddd563505f6dbe8ad430ad36075d5c7b0ecf26039b9b8ef8d80381b29c50a4c917d06887d338a1453f39c02a7cf92f2fb8e024b844e1bdb2ae337fed82c2ab548bfd077a4d1d80c6fb6d877f873df2345a50f18d63a33d36ecefd0be1a16aa461378638a1253183f5a175ffd78f4dc668ad17b5201ec83bc0e9a55c81b1d09030cb8e2998a77e0ad1a683dcb695484614936a4aaf58f8bb28330ad89058118d8efd262965063e1fe67dbcf72deb22422587e551976c636899447252e839acfa5ebb22613ca62d930e929d420c7bc030b25732159ef9bd822807146de1b7e8abed11cd303777cb357b0be64d9ba878b78d02346fb353c11dda0de3901cbaf41ac98acfc180ab838d27ef2cf1a3ff0ea3ee09a777c50c77d4c632347a690283a569cf52b10c415767a057bdc6f574897ae6d3c89ceb58588430e73a235a5a4d48861920371c81f65c6cc20fd676d3660a3ad2fb7f9b959bf5bb7d33c770f0fe56343361f407a0cb4974660532e53d90700b99aa6903c2dd9c0002514fe8fcb1e522f20cf4aa616a808c133ef80144fc26470e615beb4ef70ae4a940e260d86c31a04bd9f932950c9b333c0eb32fc784269aa0fdfe646f92ac790e7a2519631d49b7ffde4d62e71b3c9958dd4279a0e824015ff871aa980911c7993277f6acdceefb816c3258713647f603b2a94bff4b751c1fa85fc00be8a3ffa337c04a38c515d9fb49134a23ea4025a297547591590ab0d20bbe20f8f5c4d729e08cd57114a158e90a83482cde9213c70a917e7280700753af92cfa42409a5acfb932f86e22d581d8989034af883d48f7359cc18f44ac3ad818275a4a35435d3141aeeba8a756ffd1bf142dc3498e3c10395a4fc0069ef1b15f91435980f370f4d1c9839464d031ea285b2285e732eafe95929b462734ea7d4dae41449098c57a9714bcfc37cf7efb3373eb878345dd38f7bcece07d6b74b5be0ba031053cad41aa2da87e6e686dd778edb5db6da667418a93134bbc4f9c19023f06d60ed292804a0cfc9c5b227ba905e2f76a50fcca46184c1c87155ddbf8edef2862b3e5dddee8e53d6745c09a8d9d2a23bcdef55169086ffeb5c7df65b8298fda207c6f363b3b38321e8c901b7795b24b8413c418d67e72230dff8ce5f32fb5b061ce25d18034413fe26a0e1521a04abc38efea99c2344b4de6c5e3521f5af5bcd91395209dbf2214e6e65fca2a3aeaf79331f5706bd02c2a06c9cd942cb52ec73c6a408d9632324ebf32d05bfcb2df8fdfa82992d1887d2fb8ba305f3054822799f89efe73f3d288c76af9c5d7dee9aaa4ca84c88725756ac666e974be1bb8aa162e7273cc0e8d25a24350d8c30e501eeab2dd76ba1d4b13f97fec99a8298073371d0e15217415cdb477ce32cd64ab6cece81c833722fd380c8d478ada5c37f7dc9b57bf23a3126bf6642f2b4c39fd61ddd7b7e26acd50448eabbc5215b0179b09ad509f92887d17435bbf5672827be69be499982feb282b308839814a35f9fbc4aeab42d8b0cef60458b4f95f281133f846bedec068aab4b9b4e93708cc11bee1c4660815b82c3e093d67c022be73c88748276ae42e9289c4e18c8091821ff6e7b3ee8a17a268e5df89ddb656227e862676ff613e0adce687b1c91af59b4ae9351234683a1032cbba27af414b84c9d0bd3e6a8c17fbe3d1b6b8fcdbb2fd64c52e38e1ec713061e2351648c5ab8808cd13500a55a5b187efbb2e0cffd091fa3a491828012bdfa57cd1fd741c8d5a85df1c471941b159dfbf9f612e1a32d043fdfabd003b6477d08d6c3c767b5d4b6d3a0f3091fac740ed301a302cb4244a963e1180127176ec29ed229d12a1b1c81f3f84e088ff151791ebecc623ae794a5cd903addb1cf9a5343a79282fddae2ece1265a645aca65355bb2fd54c6ced7f7811e6e9a191d7d3561094995ee5060098a3d4f435e908dbe465cee6cbfcf65ccf91e1dcb4fa02c88d638830391efc0187463a1c40798d896c546e36c66cc4406e08106523edcd47756e54130637e44531fd80fa86696827ecc904f99e48422fe5c365a336c8855d612bf6cae6f1782f2020fa8b9be495fcf022ee899416dead126ce17244978a676b2d5c2dc832e01dfe4b4a90413d21dec712341a00762323f91aef5a30b959f0c8e18e206ae12983136e26164cf99b0e953cb0b63a47a3a198c8acd904dae0d949c2db694d449de3d1b223b30e7ea7fe361e7e23b558bcb54322480b0283fbf667ca740de10a624697da1ecfaace60b8056395f896dc1a9d2916b3f1bbda0066694fca99226777a2d970660d8d8b885ca7fee4aa7622b0b7cd35279e598b034ede44d50c887b29ec005edd98ba71084e07abb9ada1dfd99c73a8b79b6668ae161f8df436da63f26a40599daaf58e1aae283d3a3159f513de103c0b6e854620b7d8fc399b121f48d2340488c1bf13d89339d9765973298becc9a56d84217cc6c4221b16130e93c925e5fde704a26e303318050ad9941e7f7ae7f8566ba56ad8a940c621da10cbcdfdf4932400da5abcd1765ee5fa057ff92f9ae006377d08c737224ad9fe9b7065eb23605dd7719a6834653f2cd0a04151ea6eb16c0e9a68cc4855982fcb2d52c5ea229b79882fa1d09b877aaf7bcc9689949c1d698e7dd2d734e952d1aa74c3c2aca334334b738ce8beb366d4f420c13dcd7b596d97d4b195240d00d2dd0f0b8b666ac09c888899e19598767c75f4a8157c5c3dd320c31335265cb2babf17dbbd01497bfbda4bdb5075bf50b4bfd3dd66ed9e0456f0bf5ab19c1ecd0a4f89a933bebd1555ac52b2109a850f7426251d9af216dc01e07ce72310efe3905e8409e36aad1e27d1e321151a26d006ff0f1810a4a4cad729a4680efbc0be0cd179ab715365c4a9edd95d7bc9f34d95d288fcc5e26fa78fcf30b43bfef452fec9ddbd399a252198a9a55dc278966ad8cf9d2fa565f79c72bbe2cd963eeec982a9ea7118efdcb44075dce35a47b021cc53c57c2d693745e5376a9188a4aa43bb57ca4a427a06bed76096776ab5f8eb86fe413226a96d9186dae086f625920e3e1bbfe96f31a00a5b86ee12ed36d4808439a20fd3540bf0f3ea27b4a4e292cb8a397098d8d96bf007f3c02f4cc64df09932395243a4498866df636e27a5990a5441f972518a975a697f77e0556575a84240d350aa9f5510fa4dc74c2e3ac276be93cfc6d72282fd3f863173e0285cbda3f3217005198152c207b30cb199d1a460ceed515a5879bf8140af88adaf410d260fff3b51cc6b57a08a212353a86246ca99af9fe77642d2c620cca8e2eea92b27555cf9b8fda700867dd392d4bc687096190dad593e7f01773dae3ee5de2b42540f1bf09b015527e32141fcaff1b859cbc9531386f3af90810f96a1e8d7b529b267c29201f6ff590b44340ffe3960613c54fcc43ef39fcd799446c92f61f9d437ff66cf101f80a22db871cfafe3a0b9153d5e448d17ccce3a80496d38e762edf6bdf603cbcf2583e1f83d84c876fcbd90572157a6b837750b9e56de9969cf593c84ac031dc5e2a1754bec0fd041a7c7ab2f3d4a31bfb4afa6c8af887cfb8e85a1a8b52dde8ddf073d1c7e9b95a48c3f512844f030a08fa875108f423e808c355632c8b46b5d11243f7cc3671c0223086beafb068851eae4c21a5c715c5b3c3e037163b3991231680ff9861d0da12e7c503cb9b90480bf38f533b79488485afc3957d129cd206c4be3814e6bd1348e8c2ed04a729d04f0f89df56ab4ca45118068d1817eea1c13b60207949aeb8460e9e8da72ec3164a4cfb3d1dc4e125bae2f1682a0a892ea2ae1f680b834046385517d5baee8bbcd5ce90b07a89cf7861243c5486983f2b9c26a5894ffc15457c9f77772809ade5f23f343098d32ed9fe38fa52f003ff9cb4bcdf460e03a2b2d9074d4c51e6e27152820b2d11dcb20ff1601101965dfe5299e770c09a00eb0d65b9de891fc7fc3885bf6cbc3aedd5da6185e91fb883a1af168743f640a6268febf2e2d9ad9c6576822d12b657a980b7296b1b98dca0c05b493f081814c673ab0c17792fc2fae5e43dd48f4a91c9a027f155cd645ae8effae17c387a7d27b35d03923d3f33a273056cf0504a7875c94e6550e18122e22ad5addf16ae16d7e73116f10a7cf09f64133b80f05b589a4132e446d7737b21fb46bd8e3123e568fdbde42b87a87209170579aebaad176d472cde8d01573832fb3ae117daa17624c3bffec28cac99e406f281df6e25f98f66a7c6fb223dd6c2f1ed32ea7bd0828d29c7c4ef5e88e65bf95487ba2f250f23f0f9ccfe8b762a5310a4f7725531aff3956d4d99d7f2770d9a6a852005d3cf56062608257743367cf84622677f83b01e93cea70407ffa08cddba0ddf0a10041e3c7e0649353cc5c0316dd650d7c815ece40b1f1b43fd1155a7ecab3ea399185d2ac0c5524f04bd61990a19fcc4270926aaaf2261c15e4b2b935a34cbda10aabdc19f68523df60009368d64dd6177388ae059beed211d83b5584a0d80c229deb982efb0b9843d2f5e87462bb07de946e73c2db5fe07872df80b635c304b4b0168298721a5d3b8079686964e84f0896fc33bd30e7e86363f0d2f326c6f81b79b52ac0cefc5619e6d6fc248d532656527819c0ee4cfd3fca2695256fc774253197e4d2601bcf6fdda7e8f10fb78e12a39585ceae36dee230a664e7064921815e4a8f4e5f167d8b3a3a5b16fd2f38e0f4ee41f85d9fcb69839c53123effa43418fcf35f5bc6bead9abe0c4324ef98fe1db4316c6b3901f5375b259f3ef30812dfc31b8f4d2d56002e50eee1460b42252f74c11a7f08a34965e56ef88a9ec1e33712aba38fbd2620d403cc640b6f7a09e698add22c03192967e3a6bd60465c15c25340410e30e725af2e2325ec358ccab1bf4cfad63b0869a2a06da024bc2c24e26f153c4d268fe6ab7b4612bd6cf6580e09f0284ddbe4d3eff617ce1c4c673a097735dd8781f2396e64b5d3a8d4a22c9b55a8ac1d725ff9f290f024cebe4b9d902caaf90f2cb624f96818da18cabf4c28b522dc97a6d753cdddc200248797941e79e4128cafd905270e3946d8aadcf6384f99ae6e392679f3a6f1cd79631a43521d0dee6c71a0b1777125aabac00fd85c2ba50c172cc5862428712e692fa427eb71bec1b6ac492e3dd8f418e4f7a3e1ee65fd1a419f48d6d7d5e9180f9793cdb2045a55797b6e6d5b347f78d3bdccf2f81ecd64fb1849f46709df2233346d41ee2a3281e44f71654033d7792b82a0279ec7b459a8ea224b91f090ec97f489762a1bbb2c42aadb912190fa7bc4401e987204f884e1f79467d2ed94c7a79ff92eaf2af70e36ebce5492d888c2afee203b150341d0b5ed105f523c81976996a08a864b6a707da6d4622d333829a7a1ea639475fab77f203a3f6c134f628644fd71d58c796d858fd9a0e504743daa233a1d1861351c487e0f2765bad8c44faf1075fe2b238e6fe1a93b42fff3d20ed3e825bff4abd1cbebb90eddfe0cad840c1b45f9ef88bfc496e38adfca1bfc42913049d9c9bb6fab43a9f1171e22864f55215fecb277470a43a7eafd8f6d114a1297df683cc90ebb130952dbb56f9b8af965bc172bc51a5cf09fed80a7991288832c70b31ab4ea7bbb5e104ba30a584b1582549300dab8bf8d5cf2298a0eef40223c2a4b0c107bb46b444c75da9070e9fffe6c8c343bd97eb46d796892acb767fcecde6aa3ae18d62b09cb199eca00fe72e8e361be67da88a9faf1d4eb18f00046a4501555bd8590cc53be0dabbbef8d50166a8c62a469345312a25fb762c1f866435f15a818301f49825285ea72c5f6378d92aa2c30043c2364ebfb075ad55102a08589094fc14d0d1386827b29f12c2b4aa200ee93d0ef7b1830ff8230c2159a73502e7b53ffc15b70974cc5aa6a1752833ec054d3ddd20d6769038a94669ad6c1c6dcf91b5853b43ba3dfb60a4e8ec9522a02765313c0dbd7e24ba98ca453e6937241d86252ab9cedcf1174196fa276509a9e867cf95bcce090fe4ae708cd658a824af96359f0df58ae72409d99005e60ffea6d71aacd725f4b2007c2822ef8fa81f7178f86bb241a2f5e2d85d792b53de2f30e207b2bdecf170d99d7dfa8bc0c53b7a5319c273ac4d7e7a9c3fc1f8b2e753a0295f6c8764507c6fab7e2db70556208fe3ec3ea518548ec36c80d00acb565a01fe59f4d48603351a9327dfa672076d08d65ec521be5565e35d50feb5694087e78df13f9a71ca68ae5d004fb1eaadfbdf001ef3333a9e932306bc1cc0d4c43ff4b3852944743085b1a2392d305a4a054ba99a25bdb5d3bafc86eadcd88746bd334f6d43258d2d1e5a59750757a8bbd0ad1b5554a4a47be6fb9ecb3c9baab20f0cca5625a0fa3e4c01fc4ef4869c57039ff902cc9fc883484e0d6dc0999ab5abcb0649344fdbd6dac9c3152e4dde854d239efc7879ffee55e42fd797852ce726156fd3d0d6ef376bbb60cb8e556a024571427c89bfb10ba8d19e27cb70d6253e65402fe4a8f8afd53b49ce6f54cf48f97da7c95e9c7a221ab825b1a9487b4f34cad2f646c9ce97ee41fc173a7557179e1c696931e7a6540d11f1326e7e70fa730a183ee175664bf30af04cc59960c3471ca1fb0134c51cdc5c15be9eb4f7ecaf160df0a137d91c32c118c72f1443b8b8a0f4ed4e89e50d3f5ab4fc08b24f08d2c4c962cd4e18f17d151f8493da70ecc1bf1634e57ac7ab7ed8d233dbc12e3210775cc3ac436cbac7d977c20c66625eade746930df7c866a31416c693ccc9c6e2c81e886b4a38d2eb0372a203212d16e5eed450af301c84cfe1adfc907543a625cd5309d157104c5660c37933385071a4c5cef1d78db1940e3f023df04350db5668f7e9fdc0c96c02b6aed47a52b0f0c36bbc3dadfbef604bebb5d11df833f1fcab3dae93a6a7c26e60c049958ca3a12ca22283ce3eb5b33e3a02ce7f9a0d360609df493db8254cfb5746e1250c16ae239e1697f26cb4429e3d834e9431a39ccb0c732557f869afa40d181e44416fc71f657283052739eb3af087ab62050c765b7bf2687f47cc800ae909d319c94e14507472eca65de94b99309a6face6e53bae80c86f0cae97f61e6e99aa34b36f03d8c67daec92bb296456665cb247556abc151330db6cbe3e5e2c1d017c4c56aaad4a6a3a8d5859f645499f14ea926a9860c2232a379cbb6867ad258b5a7a32f1d8c2e9858d0f5502075f0853b2a0daee2f2f86803eaf074f58c2b20753768ec150c640ff4e0fb37ef48713f83d54d1c866d58888034f58b61d9bc5786698964d1a1cc154e0f559331f7b87852368eb0d2e9c74ed950b9832946d930d704ffe2d73ff41ab9683aabc39827a870b1a29ab0481c762bcdbba5157447d13eed5ffedf1491d1095a5e6b439df276cb9e3068703ab444110fb5f364ee1f857d0a831908af60b5e79b5c963260bb944acb95ecdb0b0e225c8540e4aac015ef4fc53375a8f81ff0ee67490cf8e81d56d5495ca4ba6ae24d08a79d8a0a010f590c910e4e69e86b532166347df0a6a2ed3623e4d12dc7cf95043943e5521245de735c9d469f8ae035a9dc4157ce974b5c204aa1a5bc3dc340b95acfb1ffe808d7915355a976ad7c4036bc23575d87bab8503edd25f78d21d2caa955ab1a99795908869b81c3efe95fbb8f50792159e78070c5cee03c90b785838edea570e120ea88fa1cf3ab56ab4a76890eb5d1df6e882c7c095ba6a9c66e2a4a5953f8013d91be6db639a3fa5c66fe083d341667a26597cf0ec9944e42e7676c50d2473059d98cc7bd9a67d9f2ba39fe1923e10386f7425698c110e702d155cc0a14ef8c7cc689b28c42fd76b22a33f180b604d6cef414b786a8282e1a6c8da4e21b17e821fabffb7f7d5f97c491054efb2cfe0506d8213e9d8adff8df592dbff8cc486774a8176e9eef3b304da4bde082cc7019f5adf8b2c5c8d61ae2b34039d5b1d5b37bc536237dd5f11f7c735f137b517ea9db5e72d792cc04ac5ca7c4980a6a1cea7118f409dce1c0dd6482813c65ba174c232381656bb136c0916bc9a3d911c197cacab599c9a4c77802a6b428747c0a265f2281779a3054429cd884163a00b96c0929e7e592f969a2df991e5f6f1481bf44aa3a8652912bd3405376fee6f61fc4bf6e33fba9d327c4d247346ed2e8a86b554f8c18876a4a9254d59fb88fb6c713e238995bf5021caa3193ffc9ffcd4692f980bcee665f24486790743d0ee7c425589b08fe93184b1de43fc97f880f7348dd45fae9e877ff254c8ed20d106374e94d9019f5672e3dd7148d773ac57f4297c8d01f0ddcd1a9931791193048fbe1a3b08799f775772dfc010655490d07c20e469094b867ea2c986f0537d25039bb7999ee1077f1b8e7cd3b2732bce6182b3d216fe8a0b9e784c08762d33c2f132b240ae5f0d7e9cee4f6e4ed46854dac1976db753fb6e7a592a00e3c753971ad31cd4cf2917706dd73999f99d8ddd0fd9d5510934e58c263c938c051af9216fd456c54dc3c6dccd9f287326003cd7891a407c234661910653766b912276451c3b1199f4467d2f54a981055f2b266690627cbfca8f09763c3bbbc5318da53267a05e31f8e33a02d12e6567fb0a381cb37325565ac813981913b33256fd217c2bd745fed8b8274d180fb2442442ff6c6e1b4c4ce03e0e73dc95c9cd0c6abb626c8afc27065f7d9935621eb45e3ceac80bf2e0a4272a10975f52aab4e5a794ce083965e269aa5b582bd7539123a48d5b589b55d84e66049561315c6bccf8f0ccb0704d583f01ab2b3924100fa26804eafca211968841072cd07220963e9410683798879fecc4e8b81976e0b42c3e05ffe8906101b8a4a80c550a11dec0aee121efd03a8b8ee96a4ba058a0309f3d5b89b63b898cd5032ab5b98864b1af45a6281c6b8da70d2cfc8ac50ff5cd84353d2e5a57ade7b2640b7148b144d922559cb805380bf5f318e92b076570dd9f95084bc00aae90ebd5c88cc4aaa0a0090e068b14e1dacbdd7ad550253b1bbdeb10ad905f1d6e39dfcb06d0fdca6413424fa531cbee9d3f537fc6184f62a3cb91c2e670677f7703abb6f172a6bc3ca11726585272c9cd94030563e1d30af516d1497174909030b70215654cb5a59a39b870c486407164b9ed9d88cae5b9c157745795dee63deab1269257df4d7fb4c1911b80fff831866ab756aa8b16796e1926586bd95d8b642e69ec82b261697dd16f36f51bcabc5abaa6f0f3119f3a9e5512ffa66f2fd99549c1ebba292f9f0cd6dc0b389fc498831211113063d64435733e6dc97e403cc1689707d7c5edc870ceeca8a03ff6d4c14b7f1d3046cd7124e61374def38b2f4e215031ee7430dc6f76c31dd8367aa57007352331e9990a93d2d9bbfbfa8510c6fb2b9baa996414b8d2ad4aa0deb1387ea4645b7b7654ff4649ae6a8e9c208ff56cdd9c01c7a19806abee182e3bd59216280a012a10cf753c2bbc5a4e6d90a3791c371d4a593836ca5af31330fef52560c1b994b40235237cec39d908146e356ffb4f304ed5096fe5d862b4228d7bb1ac5448022d670484fbde24982e95da23996f06e579e1fc4941f941a57cbf92c975f79236a413cd268e4c6374117f6df7a2756e94d4f7a8e4706fbe5543f9ffd616ce2f83be1be16749fcf42559eec1e29baf6e936b6823d71fe331dbbfb02ca75292d6620239ae6ccbb895709cf20818048ae459aa8aaa9a7261f4d36007cf46a6a14ae2d9bf248eccc15eca560c0d7d5eca0fedf05ffcb9786e56b192dc8492df91ed127640e049a340f670e6656a1ddce879ab73838eb63daa1a95587559a054d43f0baf749e2f19de0028337a88f14429bbc40334035a8429baa359ff75d4bae68f53f7200ce2614b4a62ed6bf4d355d1a76fbbdaeb8a8f9553d84a664fae15b7131afbc2cfb94b2e0b5876333a16c85ce2735bb4f75fef25c6f0153ccb1ab1f79250785eb10e63751b677f43926f8ffb6c648baed048da8a2b16715567c3400f9906517420d29814dae0fb081a281d88b5c27cd7c92051d191a9b05473ebb1383ca139820784d42445f3b7240c41de81b0bc09145f693dcd6708cede364889a927bfc10bb1e5ed2fcd9c3554f531053820ab2d0ed6e2d5c73825f0e000ac2699d999ccc8513c3fa0f1a7625a44f375e0aad85d1936645083eee294b1522a198dd35a47ed466d0e40c490f00c91fe4e3b2b6b90346b68bf604bb0f943604f8dea4c2634ef25b2d8e411f68d95c2e2dfe576979aa424a2dfe453f03435945bcfaef2b42892088ded5e01a1773758abb1d9af075ebdba4d5da84bed09a068190551f99774728b1e5806b445263586351e25e8ddd3fb8d501078f1f34c6af6b3da14e3be2fd8c790c83b23dd174ded130ab36131250842a4f29e79c6f2c33b453fa6b9d8b668a8857247e6779e5675da8293d98d909b19a89a35b578ef8115b53b5930bc245a31d337b2728498af74153cee938bd04c70ce14bce641e41b216235a51e05a75152d31fd50cbc73bf09844358b8672412ec499f4d970381e30bc1184ddc6dc211649afc0613744bc97e791febb37507cc80ed560ea9eefcb235c08f589e273845a048df2b5f3fe8bb1f5a5727f574d3b3b70772058101930aed1bffea9f7335fa4b48548742229a8a443c0090d4ee9e1e6c5a85fa8d7364387925770c741ec2c82795185695eb1d027158932e3fd89ee82b57b5a98d42750103ee406edaf4e8b775f3b6a34526a8df342b5046e05c0432a9b1e0cce67c01639ed95310d58b24240456a42cf819d9b45b38bd818b37c2e864ddeb2d2f93c823e1cae556fc2f691ad70012aadb2118580211f2f70bae991ac862a0c19bf92b3565e8b36d19cc588cdfa910bb1454a6766ad2753ce6160916eb523fde0dc96997133305e25b6b23642cf612b891c1cd6b343f3dfff8b34ce5e96d8589ef7a10521e8a15f27f1aa2d822d1e1cd9e8605033c3801d065dfebdca6583e59d7ab27154e2854085de4524e0dbb898e387885123f2398cab5913acdf9e1d71130a69dfd7c29daa9c464ec7a18c09630ccad335e7983c6b1aa8e14b256504ddce79ed2a9113efbc312b37b36fd1eafcd6ae9239d3b712dd417f40597ec0369efe20ce86df32474ffceb9179640fbb11812eeec2646aeaff58a30f621e0661fccfac4a5588b758b9037f89b61d332d82224c9041793947092952dcfd3d94448088df1b821b7196eebec3d49042a25f695371b89e39a2ae845628e94c32f9c123f04e4d0c6ee276fbc213b6f3a3157700660c1aa77f8bd059d468b04fe9ac7b0da61491c3439290de56f5836516c26db01dd34b7172e743a009a76094db537265e5f434bc9dd5a93353893bf9dc2c3aed3f682061063c206a41d5e5d1e943130ba15c72a1e8434a9c3660c4b7246dce886b0b0d9cfc9a7815c4e7ab14b201ae6e344d5fa413db256e47728ef5cbac366d98ee76e6045745b1df98477a4e25d238fa2eb265b98c8c1a2f92c78f1816d68746fac6c9d697a6ad0b463f033b96dfc1359302421c9dafb63f1cffd49f7faf8932d056c7e8607a0a42e24747cebdfe4e815f6d9000ad642d53967dfd4f0e40d07887f614704efdee5096ccc24f1907f02e46edd788f7fe4ab6236c6479af5482a46cb14ac57fb4c2e4e09c1c2bcbbe306eccf16edc785ef4df78638924ad5f7b0977e605ae72a9544ae58e8703c955435e8db2da436dd4f6d63337cb897bf3f2f49ee1413d8b4e351f8a93524d278ed4053345c30bf6188f1e2474137a5cae0f4bdac4fd276420e7394a56a48282e828b00274228386f22605c243cc3bf71aeb1772f7527fefc08091998dee15314631be541339f48f6bcac43888c072fe628b2c8d30819e179e384093b30f1a12436594a05203a9fa73553c2964f35400ea9255649ee907594fab75d110ccff84c5db29a0806a1ccf5a0f9098d5ad399190375b35991c1f41875453c9945710b6d7e05d5e59828c480e4e21f1284a3f62bca1c42d2bc4a441a6e50539619e3d3a65c79722eb03034b5b60fbca3358497296d762879c50c6468ec4fa4a466d064c0221843d7f5767185a928a497bed93795977a98c1afd8a6b7d5eca5ed4b2ebba88a2d02d9af9872ba494c088df02b91f765fcfe1f95fb349aba85bc00676571ca68af1b018a31ab997411ba3ad27d8793d086de0062f76b1ad87c862ccd906e270aa9f11e218723ac6d82422b7ea3e0d9ad555d88870c8cf44bf974f107ff646c1655a5346b397a53ac062ed3cc56a4deb7ce7b3dc4bbe4e9fba795da48931bd387b81bc6542ed1351e721dd5dc94d2208c45179e87a487e97dc9970e2ac1b7622a4a5fc03a46a3066f686c3734f7e14b7aed59774adbc9f378a9b44c99d89177d50fe4dc752ded189959230ce810372626a7d472f001f2cd8b2b59175020c29e75d2410eee96af243a4a62a68c268ee87bdcfb84f46170eec0f9c8ddd78dcf4030cd8858a88b677b971c0b8e18c47a77defb94d498fe8773d6eca9a962c16fcd63a0fe84052741b20a06e8c4eb462741054978ef3e1219da873afd6fd27c5dedd4e9d058964d8fdacd880a5ffd33234aa0acd80a8085d6dd173925e36e255211926eb193aae34775fe050579124de08f53f1c4bb5dda3da15af8b42a30ca3fec6dfd03267206cf99cc23acdb0041b9a1cb0d3f64f557fded90a2aa29661336f840b9f5c737424bd87cc3b603907c421764a3628a1534a83ace9b8d795ac7c896cc20e6c9f184fbba425931c596418366bb2b6cdff31455134877e932d80950c18a47ff342c40bd63e4e1d4f0f3130b22f6060621a1eb001889ebac1f85a67b087bf5dce7baac9307f91a5c514907ed03fbfa8ca12da0587114d58bda13136ab3d87a41d013bce157090ce2712b8be76e21bc03f004bbd584ecb01eaf2a66ab82fd9b419f57b72de12e48bd43e71ba437a3cd2f6ed5a8d7bbc301dcbf29ca90344b0dbbaa6d5c4a968bfb903ddf28b2dbe786c3c26c22b9f08fc53bed7d2642fc4e5ddf2ff8f4ae0bf8fce95c4e0112bd76301f7914cc44a846997864111f3616b706b88b53631f3d2b93072bc40913d915d9b0d5a07fb0f0932a30fea6f3b15c6a639fb7f8a55e6e5c105d8f1399c82e9634b96c0e58cd49e2cb73a66e45b1e149f956e9ce8b21e7fd1a5b6ccfaea0642697b41d5895d38849d944bc75113c35c434208d66f42da0b7fab8807c17db4d547e8587192418b801ee89c8ef96bc32a529fb25dff8cae18ae8bd98bbfa516182ad2486233ab2ae73769be26f8d897ef4af392323a7fe200f970a63a37c6d92ec0e63e4659d3176bb21ac8fdce3c526535606369730918c11385d34a55c996643970bcd9283b7174c7280b50102a3bd814dc4594932185814c3281ababb5af2f80070818543ac7799d67a01958800d53414613e415e955569b83f7e960f919e1575109a47c6e6ef107dc3a4b3461cf7787bb6467da44d2ecfe38f3dcff2cbea50c830d99e56cf273dc7f89019e09eed8f9f5f3635ba4a404c698437835ac344bd3dcc3beef242ada9972d62edbf9cd42120dbcf1b091d467341d96167c58f1f6ad4137eb88e8c1be1f9ec78ce9b6abebdb61be7626bb9dd6fac4de915909394916cbf080179e2188edd159559bc9d5ef763f14a07ee6edc8705992c53b8ef3a9582e79d2e5afee1d4d5ba371bc888a029dc67fe9bedff49ce52029e936fb9a5e148489c058b2e7e60e695e934a4bddeef2b8585e10b823244d38116c7ab357b1e0089276a1af00a40ad45cff4322f1fb7888a60e71153c5bb23c66d92853face60b606f4b050c38cdf52f0d361735009150e80eb47d6ba7a459bbff39298f621404603cc4716d014f6e082a6d70ba91197dfb3edd620ec3654f9881b6dd185389dc56376124824775e9a74a4a9a9b022763c1e16f57121d1da9959cef50428e23beb35b6554533634b978ad98d2a50f9e1ce6e52b4c2fecbf937c51e910cb132dc9a1ad3b4c7600a9de5debb9ff512d57c3d538dc28c9f766ffa2dd67af50177b298d1d2730f5c7469a16a66f86ec31b969e0177113c416cb0b57a640fa1291a62df6d1d96658435d8aa9ffe01a82c772479969e813e1e25021621334f047da4515ef46997c484348c163d02c39d5db7c6bb9cf704188622fba2966f3773be32250f27dc7c446d4b8d43329898b6dfc4f87c6ef458ac22b7c07a266aac7f994ce7b2cc2b82bb6ac0e7704884a8b7000f88b9c5c4bb2d177780e71f8c1fe5762774e793e2eb48ef8fbd9251ce5d818a69bdfede23918a48338a646b5f65bddcfa4fd93ee4c00ef78161bf240462a29fcd6f5ed53a141b7f3f504c33b99d79770c19f55a91748b158c260527347828133429c2c1429581b8d6e25db98c3b5c4e49828bf029673a2ef862c614ff1e21e8da4df4c6407274f8ef219a0a4401fbd6a69c80c3ef3d4b5315de6480d438eb63c6246c4fe07d162c99826e9f2c5b91119c6d3720f49d8165dea4d6d1382e195fb97d2cec1de89754a396a8ded242aec4b1d6b5b79c05cd126dc5e2cc02e7d15cbe0b2c4898dcf854b00a94d009f99179ac99b0c0ee56fd55a493d520e7e9e3748711e748b40555a7a6214eb4b1ed12e25002228545314fda8d704cd86c989f13c43ce8630e920a4626d4fe247e1306a7d266dcd8d2ae4e5cd4fa6a88b3c0f28922a038ec25214dbdd91b0436713b54e2bb4df9fbaa7a1aed6ce1f4bf8e132cd23eacf530a1077eb736fe21b26085e330a25160d56f450acdd345a1f37c6cef530dff6fbf44aee58762ca17db38ceeeaa5d16e165cc7e62d6a64c031937cd57aa7d8ddbbfa5561856fc62b470aa22806ea0e3ba3f10263bb811690fd41a048dbee34ef11f3a1b0402ff6c9b136b79ba46c8d1152fc140a3ea69af087b263e6e0c4c5a8a7e13e79968d2ef3a45ee97335007b1512cbae8a023dd84ccb217a9a3c7ff31b1d9de1ee44ebf645cc0e5e834b80d148f24dde12213e00ed567bd096fec5b7bada37b44570dec8a029df751924b8cad88dc03f9c5f56b7798ad6be38f263e87b2f4590b53797b880c904dc520f1746708d2ca58d653637b93bde67300f027cd45b316f851ed8d5d157052528b71b2c86aaccbe76d75f906edcd69d012116d1e2171b7469ab503c64765180425873d5d16132f50f45ae5b8792aea58125f85aa30639dd710b292ec8670e8e8f0812b39e311b846ca5488f5005111c4156e7b5e3a40d1547be5d718113cb2c0e7cbfc1d130447f671a1ef2554c48b7b6df1241707767f4359adc3926650f20547cf39720e93073800da5dafc31513850da43366f0671dd346c648a1c70f02b9e3c8b91708b0e90aee772a18cdcc03099ff01b3c545e7dff2703c1dd32eef0461debc4b439678bee586c39117f62e34852e1bca712feace080fd6e2e54e753e1087da3188a7be9f1ceb52d3511d5ee4b5231e45936184dc2e24073a94c0e2ad9b428e9a3d437eacfed53da1c9e405ea73cc974963322ca907a65ed024e2adc56f793ef02f457744f4b80a28b8ef83462114f5fa78b2bf1f055ccaa2314e5401cd8963adb5ea418a585fbb05185c4b9a9b45583e9a13a707237e61d70f72eb6f72c15b93c030d8ac662e82068ecfc638276147eeb482d61f85640b0ad66572352ad5ae1fd1c7acdb2a7d7e2e5367202660f3c9f38cbe7c3a6ab8fdbbd87ce5f1ea16a84b17911b738d2690093d17182f3fbb5ed988e61e0cc19999e9c94f0b3fd90fd5ea6070730ac8d80d8c99f428d42539d835e6c324772ae2b067305d6d48704afc52bcdf640eb9d5d1f4579a82faba053c885804ec6ffcac4dff033c321a2fa429c8ad11c8212b0cd731ee6412653abde3df54b5511eecb2fdb05f7197a2fc3a861140a39b6234838452f7a3561393f5641b4bd592680a66e865d2d9157fbcbc249ddd817df8d15687c6b6dc7a297d07662c2ef99180b4ee241b7cb42c8993e0a6171d681df8c96c65e243eaa54d3cf51feb8b36d667d7998f5bd9f15ec07deba96e65a57836e20aa6e1eabe1758d09357b193c1332494a12575620517120945e4f39c53c491c0a248773a58015a40b051550bb481a32e78a5d1445ff51437c00f6c510b1d09c67df6c59ee11445ab0b7bf885520eb64a25263f3e7287db854b9606d55b7b453d21993bbf17627e475c692080718bd6d27654520281f5b2b5ccae40220bc5bb6ce83c583ec61fcf33d3f31318220e7ebb6b121908ea47f49ab2aee2c974fb7384daa18b7440597ae0ec8ff73ed5a2c7637598556ab0ce1e84d8ddc4724775bf29803dbf078de0de9c65e6a7e4d28d4e4fd9d5c3f6b1fbf05c7968d4c06873f5040d8a0cbbbf81104f67cb6b85fe82748e960aa5a1c1428fd98d6030a077474b25a3d2c21b76a193e1a87ddfafe707cc208e00ddcdf8e8498acfe78768dff09af927b3cc322172b491969d5367bb0773938b628911e2c497b9d333e0fea815d57743a9ee7d8f2cfc107df82bc472b2ebddef9bcfa60ba0d96af1424ea1a3cfc1d7ec81c0ac82cf3749c164ebe71004b731c078db1ca3c5691f69d7afa6a3432b2f4668c373c807facc30f73518a48688011839ae484cc3c684e0bd96deae094634a9bfab1db64966eeee218dad39c6b3d3b754ec59c26e18cdebd3a0eb5768df243955e7ba635421f804a8365875b30d6cdd2e12885e47c1a5f0b999c7d169b89a4a0e84d86649491cf276a6f6d8ee1abf26d043c070daf3e78f6a28cf57746da5960d018a923b95b9b7e034ac8b746662ed4dae8089cafa55b90d246a66081fb1949befd8e020f324e4d475b6b50c3fc6dca28b49c44b7c7372fa02704116eae12f7b2621a73af8982fa5dc1b8bda939d981c12769f99986490014bb5edb30952fec0834facf9b58f37c14d6eb7c3bcd6ca3bb35e5a0d4a80b22e71906b6fa64081361bb9129cf775c2610ae8650e884ea8d2b2319232d5781753349370174fc67cd5ccff518900b7ad212eb12d33f47b1f4de574e0573e11cee0c084313bd81c3b0637851636085cf9e76547d28d2b5e4dbea545d5a0037221519408d04980d07cb79e94a0a9b30e0d5a2464f14cf35d895fce83e0abeae5669cad5ebe50d4290b8fbe39f50754f8851a2535832311aa0e58b754d2f5dfbfcbc3ee6c2cc80b138def6ff0e80793abe80a5752bd1dc50fe3c04dd2ce35a30c42a63f10417b4ef77768c82fab07e31491db41687367bd2a42226389446aff33c708d1e1df4e6e63d2b970127c4996f0f47d8f10c80f975ae7522568ccbbca673a969d4cf44c8aab5a143ff78d4c2a6417bf74bfdb41f17407891edf3cf24970f0bafbe26462f8e29d83fcf472fd928038696b855f32579f27ffd365af056eb9b4f448a3f4a36f2dad81f15a5283bbd2645c0b39ebff0420c838db9791d92d12831da2ab3bab722d1ae2e2ab61d2c87c6c94eb983f4ca4ac91150090f8f3773f6f16e34d7cfd2afaededdbaffc524b800dcbd7bec1434b0f096764876a28a7497494af11b6fbe4665a6f85e58eba7ae366a6fdecd25e9a2e8761ad10bbcb2e3e4cb637eab0b9744181a7c9bd240a5d6250b9ff8c29470968ef3779366b2cf63f7d9ce57e63b469d9141375d6d5ec15fa3a722b2e8093460a47f65bdd11593fd264053852b54be7b040ceabc5a9ebaf9b8dec25d8a44b23cda5961849daf74349457b63170564da57cf308b53d06f99dcc67a8101e484cedaf6802549c90c7056e7111668dceb3d5cb61faee0e98881c68be06de339a797c20932f02fa0ea0e9b264f5c8ef987eecc68ff15cfb8ff26d5cde956bd0bdffff8d653e87ea0fec0eaf3ddd37f4031ad2259a4ab6b94dd96907d304d01a9ac0ccd668e2e2d1ec9e8b91312e0e967bc8d01a7edc89fee81a4193c57d8099712c4db4980806370ab59f40480bb6c7f1886fdd852124c5847dba636a581e9f1aa04bbb994d0b81d09d7db1f354cb59951c7077901edd76473bf94c251bae4413defbca08097c6facd902cdb1d6c86cf80ee2734800321922cffc903e1394568ddc50f06fae0951a0e9eb21bb4fe6b95f03c047cc4c389d66a83871b3b0cdf3585a6d8df9927655df03d45cc83df31dc0cf2abd5e3218cda345a3e38ee1ba859eb758d852ecf7451754462531ff59009588e670b5aef062628ebccb63bd224d191aef5311aed099371c0ba89b975953ea7fac0b851d3d6e06a856f21d0cf3a5f676dbce8dda742dc18b2c456f6d7bb2d6f12cf783112e0817aa9d7edba5c8c39586b38b4d27d89322a4b12578dbb5f66fbb0844a3e7b6339c53f0a81638e9c34906648e05ec33d71476e0d8eb9ec0a84d9637dc101c57237aba1bcd130f62031e772b6b6075b14338192a1fb1fef9051c860eb0ff775a6a3e7aacec39619e647c7ce7f1d9b94ff52db6d5e3d2f3cc070435edf633616fcd5439f1621fd5d259f042b3901adef363a1bb5c11572c2717e0e2ce8b6a47cac0ba76e51c8b21681e4efefeede8545bcf82c3f2e0ca3e1ecb180ee769433f52f2d96d9f4a2be79e09fc7162279da6a91b31ae9d6e38a777e61deab001bcae7e85a3ed317ae0bd2de7c2b487cb0f9ae25e00cb2fd17668c67a7514eeb0bd025099e633fce1ee0717f9beef3bdb0eb51df4d661dbe06019644e338e9d49b7178e4861fbdf73f03d10bc19a4b4b824ff799c442262d7751ee98bb4d4ba55d8b25a4fd1b1318448972b16cbbaac229c241a8b5d445049305cd8e36b23df0d94d4f156777c795a74a35bd24f117ed2f0fa33866efd8fcada49c578fdca64b7b5e7b963771be4989da71aa4cfaae3c6b59451a511fbf9df9597335f0e60095e0a4adca31a2053198bd3c694745f344b26fc4af5a8bf1cf604f4278fcb78e33d2b0e8292d88da9b573793f580776340c6cb511a4cb6f8a335df82bb4a807a5725ca8a4b7514afc6e286abd50091abeb0f131d13511752dcd6dbf46aff2930e515a2520ed81f2fd963e985ce83dd8ecdc36b634d0e7dbfd25dce236e8b536efaaa8d387e9807d5f1cc9c9059d479b64aa44427b9d688e9cd252f971bf1ea8207295891dd036bcc82f94b0ac85f9d0e85154b2b381b6a86ae0aec9c3340c3084b459477d5c5d1ea9d47897da04a46e7e68b31c1971e629b9c3179219e7abdc1b0bd4bf65aff486b4bb7c8a57d1f9e33f31c9ae0d20679285bd95f7dc807f685539187ee16e485da2ec021f709a6c991ed5caf54a7770917da41bae5423c43356b6316ae6404c9750b8c3a2625f5f047d73c12fb0acf05c67e1ee788bc88d4cae27a57fdafcf830dc18358f9bb92f74516e9e1721af50c9610454de6bbda06501e144b6d4bc514390d0857bcf0dce777c4a0e48a28a1f74c3fb59c181d6ef0a4e8fe2d2caa45309bec2bab4bb332f01940dc80984c9757e721c6df39eff05a7cacbd09493696ec0f17ba0fab0456637e27bf7283a5cc427072c4b9e3379722446fa5ff44a4c7e4e0823e1617a00a866d0d2c71dbfa4af8f12138c9eeb009cc716d221aa7ad262ba184c6d0bacde1d74f414edadaaf32a36e76a53aac717784d2f1d413ef95d06d14c268349b55b2eb0680862661abf96cd17a08b4bba9c4f9da717d5ae7c50f36855e7b19d2eb048e29dce7716472c75a0ab7d4e25499d2c9edeafacd9e2fdbfe1db55fd2680f1cb48f90c56e57dc9e7d172a5508de2ed2dbe199e67ea11aa9c0c3fe66cb61fa47cef876b8bc33e763defe167942feb0a46d31afe35e3cece21960c796a84c7f7aeab13a1c1b6e1fa576c60a5c7191ca3cc8b92111f890edbaefc05ce41e45de20e8dbca4ec838bbcfdccc28f975bcb79d3c360155126b72c687b418ee61369bfcbe596bb89acadccc02f88ef3eef4d0b3e2e0561096a9c6ee90897438b5cfc9bb15956198652650459e2438ec73b988a7ef442714a8d7d4b2196593baae395d140be2084f2edad486195eb4b699a97107443cf443a7480310ec0e6ebfdc98a8fbc0524c566a91653e917de29f619497140697d5ba9542b2e077e1de191201cb65176dbbae0a56bdf2cde7866edae3d1ef9c53a2136755842b5ad24715c005e73f1e5838985a459636726c2f4636e56ad6870ea9e229363589f9d9525af4d8d461b4226f325da6d0b03c8cffdd2d8d070b231bf224b3c0a16458a3565cbfc4d1ce3b95dd162f74dd3dd3932f173babe16fd8ed95dbb3c40eed6d06455a9851ccdb6e8ee9257eb8a5438f6e8f1e9c51af7d9fbdf4398c9201165e22bad2586995fdbd68aa4f729a76f8edd065de79e98a8ff2f9415884ed730b0964f885d5f761df5e642c3934655d4221fb2136eab16d5b1a6754dbaff8fd8f9136d791a75bbe98f1f8ac4798c64c8d4aeb4d7bd958b7af1648738d296992eb28e7984f7ab8db4423cf779fc602488da56bb2607608fc988cada5559d28843ee174503f62194b0f07d12cdf6fb7ae5259563bdc8bd05d9351a30382f1a52fe17908559a4aac97ff4d9daa9e7760a8d02a3f3827028f591c1dbf45f08d0398b402e709504b5b92a1e995cbd9425464b8b37d39af05271572192a914f9c8e260c08ee9e4e1f7dc872392cf898044ae1f2e037d8dff4027fc5d42bb7027072d7cce36c3d102623fa7f3891a944844b7b8fa725d6535a091ae64ddbfede51f2fc39ec6c2be2c85e5d6597b13e7a8b7d781d6d2c603a894cce0cbd6884f2775ab2c89e76c0a9f764b2fed9a620d35dd33012f41b7c30a29c30025b8bf74cf56863210828ac1354c6639f5081b9371dbb6dddd38b3752c18c3dd7cb143d6987f882293b279b93c61245dbf33a446243703d8bd97001a4c1213cb2bebc6dec6367528fcb34f0b3ea2263240a927f8a97f22ccdc18648320443226383facccc1386e63ed396d97f05d4802c97ec0d08bc17c5f28a35167e9bb73cd31015e6fe139d21989ac47e7a44e9210db948b5437e3e8ffa972a0eaaedc6d30feee64f3331ff4c23c1b63382dc636b53502ee74e9f9a1076346eace118ce9ad33cc72be6db5754eb70c6799d91f178ca85ba4053c9dc1e55320ebe5e961cf91c9bbe50ef92485d7d2e81322a9b1dcee04ef303dca3ffc82beb7c933d2b59712348b60393bc934ac063a25f55029324c1038bad927146afd8a33950516985436dc95cb6af016d4f9daf11885c280188409843bbb818b3cfe10a5d1c7a620ec58039ac0c739ac705e27e2a2f75b58780a91c2c0af7a5826ac08ac6bd15dc9f9379559a1c54ec8eac7d9765cf5dc5640aaf0a532697dbb0b443e810b12eed13e42afc430307075b9a9711fb0ecd25fe52faefc3f273e6975f9ef115bf5dfbd352fccb1745d563db02feb928dc95d245e61b34af237e5f8388fee69e0f664f1aad26dc5a42bad0d1fd36be9f131921395e72d010a785e20a0c2fd974caf2d65aa013bbe1b84e3020199b6f21dcca67023b244236e97f4ec9c69b1f4dbdd79e0d136a1d36e039e07a904a77c74bae9fcc48762b7b384c0bd361cb2ae15ccb6af23f2a514e2228209f28f309a6ed2f3bfb970b571b724928e43b7b1123673f7d189e9ab94670629b538910096fe7a484a91c80d5c8b526f7cfd533a86bf26748cb7a603eaa9b1306dcf0a5ec46bf9d80c0b550e3062fd49da76b89d1a8cc88a4735c473a93b043837e0ac982e976355ee8d81bd542e4fafc580d3aa2960fb6e3f456366355e15c44bf357d9c8c03a936fc6931c9ea21b15e13c9b448f732a749ff668e1f3020759b9867cf02b39cc3f7e00ecb9ca3fdb99611c7e62a51a1f6794ba698d8d97dcf54eae9ace538a67e7506f16e18a9ada67b1d227733488bd4f01293f074c9690aadd5b641c40052abbaf02f77ba89d6dbe6b59dc878bc0c3165461334a0a4aca19a2584b7f957942a0504116a66b569d45c16a739c2386f722c872386c844314990d11971a80a9a3bf98748730ae9cf28a343cd2c97c7abca8328facb8072530a18431db3e15bf4d6e8527478237de2774805f2facacc0c08f22efd3d7a13b0d97bbbe1e3e5bd9a749fcf90c1cf15fe31ae114611b703f7a4fb823a5f561fb87e6c41535b81ac4db0da1a935d56e6ec58e05dd06739561de5572680fbd780d1115253456e66767327024bb345fc264cbf2122d3f0bc7baebd7c79a08ca78df540b4910ca3b5be57a104f3235bcabd7b90e2f8c8c8a3b79e43fc6853c0436b58cda2ae7538d55fe9c46422bdc6c122d1138550f72b5913db292c9742a256ee6128e06c62e82e24313587703230dd68ca7d11a2a7b11bcff65c39dfff7af66ed1d5d60b14a562d5e60305270f9fb93bf36ffe023ec72f0fc66ac85ef2c08e866bad0455d2d4fc2c54c083ab7409dc7c80c1816939e300d0b09b98075c4899899c84b2362776b0cadcb39cf4c89f3425d67cc28667d57b4f5796c03a529a660738f64f062a03cb6e37bfaacdda6ab29a7e33a5e91169acbc6fe142a185fcac2c6bc49842a9c8e1c5437ed15caa1d6cd6a73f0113a6d3feb198d07e91ed304a79f49ab7d858b5064acd62d71a8add0879abb81d9941da96b3270529e9290aceb9a8e1e360547376191357e9fc05dec1c8f8fe02bdd989913b60c32d655100b73b6001e397c7801d02b8a9df3c2cc39b99301de210b3e599f2a6ff611290bf54bada0c7431d4665a01d8edaaa9e7068bc6aeb1962d593ed9a38d4a5c802cf7266be8e4fd0a2d1d2def5322642128ed168bf0a2d2978f63a9a8c2bedd94fc1b6ae55634313fd4dd12787e1f6effdffe0563c759c7d4bc5115b21d1be5f81dd53b96011ae9820a9a8227eb8717deddd2399965dcc630817bbfea660b3cd8e23529396d84c4ffc597ac3295cb35a07881f6c3457daa8ee4c42049a8cecd1fe45b5689b81ca3997c9db32dde85652679c84d531a08996bc2c6744775fbb631f285b851488dbd5c949b5779e51d8012ea442bfb0300853d8a050cf9b68d78bb2d638f45e5f239608a18b706146bcf7d665d591cf01700b8213e99a29b9cca94a0a243baf2b5cd92a8f251379de2c599aec0d62cc6b048196b0df1502c4f46d1e6d5c78f62b1729df5ba1b67f1e2968013005209d2330a3a898cf0d633300a8c3543ab01a5f0ce52ea320995d84701a3adff80f846c7e98e2f34fda61e3a867b542ff007b2eddd43974f34f7464848597c1db29047ea1b89f8b9d02f162ca80ee17c5caf3bb228b9fe85a4def54da071087a83c31fbec15cd962f85e45aaeb17da8c492db67991cc641fa8ea08d3a31e8d7f35ac34fe9ec9dc76a6437f947e57f2ecbde50f89a9c7b8b0a4a94dc942ea0e11063da1d14400ad598b5c52b70fc1d5673e52368486a42bec531b7752a57468fe20437505cbed4ab736cd242919a921d42d374eaede308e47e1defccc77a49d25386d114e9a008795dbf35f0df2884b930195bef80184a05dac262cb75d815955219c7127888b0a48916b85636797c52220639de358a672e01a1debaa36ab539f37d78b6d1946b78a7f63984f723e3e95244cde85b891e15f831b7e28f2494ba10bc810ebdbd9c725ccf178f95c87846dd389a3e21670026d24df9eb96c479cc84858152ac6e2ccfe4c17e10314ec6d6d4f0d4e7a19f5ac63243c4b2b340b500d4f83058e8b2303c41cb6df467fbc94023c04956cee8db26088ee1a9ce7c59512ecc87ec7495b4f837b2e71e41aec6b15a7001c8729277b64c5c9858bdc7fa87b162cc0b8a5d07fe791264654138b4826332cf2c2ae1f3e91d5924de3e61a667aeaf90c21e3efc9b7e6675d40ac3d215ffd8721fdb5d9f919440fad53b054aa91496b85864934c2ba1fdf0a822ac3602078bdd5322bc178fbe64402973530fd7c88d470c9da4f92f24a5d529300ac19231183500ec823cadb321e135a900f90a51f3baf8b7049f3bc9ede65584d8af64e9c4b5a19c82ae7574c81679511c8b8d81cde7b0b7bd944a12e335704ff48c98a1d47e80e8c2f2bcbb4864b9dcf0e34f55bb06f2dc4bc433ca41d1d2261140d195bec9b1d1b61aaf687c0f77bfbe5fa06ea2fbd24b53dab638f339d7b8f3403e1682a29dee20595e2083b54627a67a4ebc4cf8740b4135d0eae7e3c9759cda908bb9256fb7eff102c278bac8b0e3e15264ee3af1b7a9fbeecb44b77ca99b07551893aeec6e7567e2b22b828ff76a4b0b414e2ea8e697f6345aa2cfb7b31057dd2e4b50169606cd0e131ccb0836fd8393d0d1d4d363763cd1dd5c097a9cf01baf52ce3684b651dd50c533897a9cdddea4114812d68fc07a63351d7c6499792d605045e88e8999061700ff7c7e2078ad4ca09f2f7d0b2ee977fc2af6297460eab8bb3a4aeba7322ab246f7e19b619b969c0510429504360cb76c90d37be053f496c732856dc2bc1ae235b382ad06aa97efc3db124e45af017de7d75c279fade68648c85d98ab1f23059577fea08087f479cd2d043f04c4e7f2889a063c5dcd56b14c2137000d429107ac912afdf39077e67043f5ff291cd18c4aebc0631083225da2ca3ab6224a8253ac5ea9c5d53d8743cadb51ff573630968db4d1d75a034f6f93053a93cdb4b47af6ee03dc6962618683f08d136fb0f87ca82a75407dcd12eb841b5f1912b128fe2da7f02a891d7b596a367e3fedd3085711985fc85956c71fb7b5f7520eface3d496902706373938a151788a3233c783450d6fbf20a4660b47c7b2cf62d0b51b69a284739a321a6214db2b399e1898d48de7cb808950914f60645bfa7dbc2936bb77b6916e3f131aeac05d259af5fe88724362380261769c7dcc67cf09c8a597d9cc3b6d1aa61ee531eba7e0ff5a84435c7cd3b93ff277514af2b2b82ca1d5c6b58832fa2ad22e85d9677065bca06db8cf0bee0b199a55f4cf7412ce08d327ca761ffa4cecd4e28153d6ea86f71d5a3b44ba752df212534bde2c9334228297f5068390ad17870fb89c0b305eb25ea231ce8365467dbc7bc3b890cc4ec47209d26d96276cfa1ab7fa5a0222410663462fc438f73b59967394fd43de571e1e440280f864d8af7022c69e660b612b0995191aa68c10e7e006e30b630557a7c10c6f4cec68f1ec65f977f7ba0529d16bd9f07f29592e651a7dcab17b7178104f55e975fecc8ee8ab148723228e2d81c7c517cd30a3475d0794402b32a61de3de970179e16c12383e93a945378daacbb071447dae9c56bf6c7428c4ca3a9afab4864de675302c2806081bd874d669255f003ad2c6873bed0e423755c44ba038fc5c205a1940ee06161489d5983020ec02600f64ca709ed7d7432b09116b4714230a4fd5d82c62ae893b6258aef922161cf0caf541774d73e25dbd4d4bec68341be638e7c20ea0d0687af50b36293b8c11a629e1b60f13a94c9fcd87279c258d1b75d38058ddf60e862b497c76b6704b580b0a91e7a1bec890eadfc8c1b4c78f414e09e084dbb3fc0f02a76a89ae90bbf1e34d88a9c272bae18eabbd961486358943578b12c76ccb4787413f84fdea18ad514ac9f1d75b77787d3dec31e5131e6232bd5647875e98bbaba84d70e5478c6f759989364d25b4f19b524e01fed7c50277361c2d1f5dd5323f2ab0d68995709857a2ddd199f8640f0800b36948121495d60be55fd55d3c01c86b0a3edb623e7860a90541e1f6d754bc8e6b50733d12f8efde0101f8ac35a52bb2e2a350190d8519069a083606b906e59e41b1f4b5a4b6083bb5fc2ed89f9a85a1f341a680083a2ef942bf31df02a794005603750879809c847ce6a45ec8b3e2d233510f811be297508230b40937a6e2a644403cc0d3d3dc9f9a81de8f7400d64c85eaf1df7cae3d56541912390ab7eb1cba029225617041fd243860841c62365136fdae56006378291b63ca7ae223247dd27651041d4e2d228cfd2f31492e2214e67e13a5845bc1c6efd5e278d809a3815d1d25e536117bc09d255a46c13a368d08887fc92b2876a742b0007dad8d440459c4142712134a5315abac6bf1ee64509e85710a8e2881d982cc56db523a8085de2bfdec08f74e1cde73b91536cd18f7dbc75130b044b64541face2cde4f073e1b5225d37aa1b35cf0a78a7e2ae02aaf9dc5ad55eca14f33319fc861d0cf3ffcd5fc44632688b39cd9e434e222c0439ed4d4d6e00224782d895919dfb6fa45f7cc7ea7b4b40c1d260e8a39f3d15c6a8e34a12f2db7e46c38bbd69c14339da0dfcdbc727c92b98e37c2a8e465c35d1b0c0c38ae9665e5de5d8144829d71b8e06365be747e2942d62fe25f271ea8314f7f883cc69ea05a091793222b22978685b0f27b44434d108b6da8ecd9562581aba0ef11dae3e873d8dbde2047dc1dddb0ed36d2360a80813aa995c349343fad2b710e905d0bcee21a221ef60cf9e5d8e68c919a99f0ba375e900b142c301b436f6e73e38d98ecfa3b423f59924b0221e4535251a9ccc3f7e7e512aa44f2ad492ce1a2a13e9f2032b3cf51de7b6fb6a40691544c4db89515cf4a6e13734dac02780e1af828b6fbedd4258c74c1f1d66ef331046b0579dd949d4e427f38303b72238c55a280619761b517dbe7bbd6b3a0d879283af2be0ad9c19ae72703600c8c96d735fdbf645191e040211648a0f5e40c39db272fd6d176fb343d4ab224a798c4f53248e441acc6078a2dded314628c357750849f3df896266eee742c3c3aef9c5e4aa31631bc0e0b031f4e20c7d36e2152ef724ea1b469cbfd31b3cf99bac69c905fbc32adc392c4e8496192fb511c3554341a81f8ff50ec895b54b49f956ae55c14b7ddd73546b4093ccbd9a28acd6998dd533dcbb20852512fe5328487b320e3c1520b5a5d2254bb6c183a1aaa9b6f820ad6005f86feef4b5342cccc3a83bd27e93f833be763d9a0aa3467cdab885a25337b32bd600b8b483cab68d585c1b22aab353356c370945555be2cec2b26310a1e62ae306a9425956e3e030089f08a5929f09700fd6b290db29a2aafa05ebae510b933325ff01bfab259910db5f5cff13ff73111e7e2afee0455fccfc896f4b0636e38b879ed8829480b688884648aa3859fba8311660fd88c98f27e8d0309b7065d02176354ed5da4d2c0b7085e981b5bcda7a11f22d11733771a9deee8b7d85765204934fdff3373ceb0c79aeb468b01f92069871914df2dbab1826d49ddcd95ca30a90a8c867ea1850b56849b722b27b7d54f5273d2a82581467c62de4b5742d5b889fa11f1ddffb3d61efbcbdb19782e5ad74dd25919b0240485efe675ddf9468b4e1e24b9fb1ff6b5e4ea09cde44a200f0794e704a3d0a084a0ab0b10b2c8d3402c1423484813603a943e44cce55e9210ec61c05d83e9570b242eaeababbd7c80ebf4ed6680e692b58761fe98c932e4d2e36618965983be2ca173bc7f9195e2c4f7abf2ad1fba55f0179cabbde7a4e90b9174b896e832f8ca5a5d5af7a649a1278110d26399b29d518b96543f7cdd8cc7f4ef5adf3ae96bba0346bfef505ad803139ed09487608271c98f4f496bff29399d0241226f913ccb7cd981fae3ef7cdaa51e903d61c6e9d49d593686bc56592138be9c44a77abdecfd26deac17b9082aabe1b00e7807d60d62cdfabe32492c87d7d81192306a486e5b8ca02ef7fc0e1dbc2878ae4ccdf5488d6739fae4bc006043dd161e33809d18646fc557718fcf7b4bba952e650cdcd7a5d29248cce91c94e741562b363f93e549964f6626c853018d00e4a0a1991018116fcc42a53c54135d1f80b4a9de9efb88faa6e1ea8a0e21c57f342216f69567b34651f8ccc4a9d2a361ecbb73875daad378626392136f8450aaffee1af5c14ce5c2faa59d85d6697959034fa5dd7f968f5af557992457c8a279e9eb1e61f16e6bfa9ce844d75c6c268c27378148e8e251b1e55db2e0165fbb734f12c5a6f6fd0d39a0b413b9371ad5caaee558b3afdb7d11a0d8ad014722dd4fba06df3352f1633c207ca2dad192ffbd1ef16f025d6d9e6607c89a4d33813ef6a53b220b70dd55172a31fe8850cbe753fc9cadef3513e38e77f1f515313f63c4219bba8e716817261bed37e3ed33183116abb372d56febfbaaf1a90a65ff20c6913ba3c3bd06c38d8c0fe2360c511b1e4275124c8faa240078bfd6db9895ee621de41e0e69ea6cab92ac807ab31b178b1276e3e5f932cd8aa0d57be6bd86c71fec342fe69799a4b3b48343fc1c1cb40c5fecd2eba0c6c8128d3b3bb6880af564823395e426a602eb7c24c5ca7a03f3424583c0ba68f56831f96b593436ccbfe509ee1f6b08564683a1b6978514de3ac48bb830c934233eb87918d939c79d0be9b0fc71ee41d35eb7b4943bbb3afffedc42dda1fe9f160c724efb3fc63458dc6c49ad684ae90cddc26b0859c970d82aaf0fa948fb7d06749baa00662a585fb8cfec6a106b4ecaa0c17652cde55cfa060b0e0fbc524fd6aa25b43eb8ea69873ce41bfa276e46f33b5742b372dc42eab7ee6cfdbbec7cb833ef1ec5b5b8212de3a7e3fcd0e1a9fcdf60c943ab363aa1db6d5d00c785a3a6dc2e52654f68f7addacd23e2b17270a646e8d265480cc713bc00eecf3fcf63aa787621043418dd1433fa0fec9b370a1c5809f8ad385eeccd8b931b697d4d89fd7c34c2b4f171d24f818df3bec4143ed9136daad4969111811e9ab2b29f7f382120f0c27b8f2dbe1acb2983ca2d4b9f35a010ac47dbb3bda7b0308f9132b8c944eb453e4ceaf1d7b8bbc3a805dece830416e36dafda195cffb8552f96892ae9f7b68ad360974a42978ade64d943f578698b2206183f9170713c79eb20c36a99320b7c82cf8cf7172b0d36430e362890abd50e0062c4b24a0cb320cfa1c43b602b83b4e902122ad0bbcfba0f783366b18cd19779654dfdf88645f7ff7a688e4cf0631507f5c94e19c93a7adc9094dbd8c664cfb543ca6fc3c8d9522d128518a43a8445a774d577e52accf55cacbb1c70c3f6d3cfd0e365d48585e9117576400947195fb6c70e040c79de9c39c420ad4073946dab97312eb8993276a885113d7cadf2d3d985bd2b15a31411dc91722f19108eed6bbe1ef033609d8a7ef8c62168039680e6d3cc02253d2210b56dffe9f719052a7c7b1f7bc5cd0657794c426d8f419f3f21c5ce10e257bae38cefb3042d038a9b6d3fc36290b310d2f8e7b73491ac599ba74d5a281cb4322a0bfabe89b6b8804e6a5836b6a31e7619212bb9d53c064edab43cb6b0c21f2cbbc7c91da34f5b7e59bdfff8c7858c2fd6daf0567bf828d65be04d65aed1b0bd49aa610e0fc3e6641003369163575be3ec5511b13c3bc400372bcc36f6812e1d3d7906371224f7371cc5f9cc2cc912a03e8efc128ee837ef4ce2dd35461b8b7e0da4a09d80a9ea2fb023802759c16247425f7b0e94da9e958c2a53baacbdb9579ac07ff5c1785a2915bffc822c5ad43168f7bfc187d29db4dff012c92ae5d5c99602a5ebad4aa670c257e8823baeeceb110bbd7cf6375f74185aec0c9977a11b3618f80708cc44f7ceb329473520ce26857ff9594ad83a1c0aa3f4c245634a09eee12ae5b178b20b37faa7ad7dc1ee720d21b008530cedd36479c27eb848af5957496169a21a571aa697fad3ac022d8fd8719619729a9a90b01d5ee5c0876285a9be772894930696ffc3486591b2f2cd8246d0d1f83b45ab9ac8e76121d00e50bba1bf6e55ff0e96f952daa569c8ba6d1ded22fbdb6ff22c74d765a0bc54b178dfe2e1eb2da6547de554beaaa8458cb3496d308b52438991ee588b7b1a03fe8304b305056474093ba7a57edda4c2184d548caf540eeb6877eced796df09f572dfd1dc48ba0da93ba2a7e580d139a71a1987b4d893b9dcb50a089ade0cc8fb07108f453b0f9fe2182b9c771ec10f7d363439bef0599befd015270ed3053b35fb132331d3c7e96a2218cc452bbeb8056ae80fc45bfb79f2d7be7a0673d32d5b8651c340e6e8f3f1368071e04c998700edfed81f6ea7747124d3c7cbccee1015e0b578427d9c95b46bd2dccbac7dc7a7f71386dfe9e11bbfb9567056732973d42304732ae6e83a677921d7a79ba249347ce27cb75b6b11957f6cab5093c11e53e54c115e0bc9e67db0c956bdefac810228dcacc90d231c2d934daabd5235972dc486a2bac1443816393e6accce15c9a4b6d197acbc4380a16803fad91a6c5dc987522a99a9292a04ab923e0b99461f331eafc5f66436dc4be9ad7f5700000853dd34a1ada1e7a55a889883df9813039cc680a3f9d2b0c72e68a708096700a0c1870c625fd744aaf988895bb872cb0932cd561599ffc0735589899a53fdb2ef483f5f9517460b0fca080dcb8e688f1e7e35f340b52172f0977b1a12426d5f6507589deaea082d57d26b2fd2770837275bf47607fb2617f18da37a778639dd7fa971894d7538c1785350958719f3f6c948e8076650ce25c1a9070cda01a545425995d38a2dc03a9f51c8aa8c8a1bfeaa328dd68582f8fcf637b510ab015e1d18ff49cdb57c7ce622ff5ae1b64db01b0430de9b15f62cddc81f8f5f707b4e31dabea91b2fb6a8219a4254009e7a86d6c9583618a5af853c6ec319c6bd93e1411ddd8ea2612dedaadce4596dc3c9aac3878e0524283c9823b581288e31075f52c994a03f8666c92b5943671933a2ed3d8d7fca9f99ddf8133bfbffdc0ebbbdb7a326bdf9662a3787ab044f48f7ecf354a11c679a14ff38fb7b0998dd7983e348850731ede7eed817cac319fa7be41ceea30ddc9f1ce593ea8e4ba85b4e5ff590cbd2b5497983c8dca83ec6f853f5d37497bf792d625e257394ceaf7cb5dbda4200bb8545ac53635d09d2e841830e7bf684e2c0ae659357af1dec7bc235680923ce6f005b7a3f52fced57d387b1baf791ad1afd83c8785ea5657334f80a74a73f00792cba73bb0695d8564d92080d47d6751855ddc8b789854bb7f990544d0ebb3d66b991a75d0b58f00250697b81e2a16dd1cffa438935fc7038fe3e400aa388b9ba408672c4083d760c0749524d621f327fce041175e024f631115f825e18bec549dc5fd9a5ba9f5ba3c52d15d9b015c7c9f4b7894dec32bfd0d08454468eb50aed1242d9958dc8bbd41dd78c124b8ffb2d1d68a47b9def528d8ebc7e94956e02c471d76e7eaf8e1f636243c8ec24a7617e9fb1582e0a410e85d7818d65dc16ae9994779f21cb31391cffc8aad60e31092c6972c1afcb7ef48c30b2b67a8732508b6e3d51516d4eaf37699f46f55b3bc73b408663f85dc97bb0e592793eeb4d08a4ce62e0e552a78fb37e22b877806adc34ca736a9247cb717fdfbd66f4f30b875559ac3a89f6ccffa1ddd4816c3b1794500e61656805736081e36af593fc58b47a1e03a5029b315caf15b89413f34515a7f5cdb3520ca28c7a33c7d627ecda763477aa86a01148b7864f451a93adfd63bc43c8f925f5962731596c01045785d214b644e57d462afa4b8246d418992afb506430d23e128afe81761167fdfd7b7b69623d854cc5d806e69acaf077952cf948c5d381150271ea30d6777d85603610fad03e6331da0b8364667ae47c1fa5da37ef390930dad8beda4c2d729d4f37f6e84faa622f691034e2b7ac63cb324baa0097a288b99f828827a2082b400f928a3a457b25f3fffb14c176e5b3f125514eef5080e9b2f380b6e55a140e8a412090c5672d203670f75e9135f60c7efc51b12c5bd4cfe2f2a1f7b17a1bf43e1c6fd0a027f56021609ceeff34161149b696b5c9a26d5d1b9ee0f6e23924d6f99ec479a07ef3337a2cdbd4aa52dcafb3ca4f2e4f972d411fdc323684427498464d8d7d917d629b0f5340b5d9f4ab7fa4b5331882f1427b7b836f49b61d929c860c31f79cc7c73fa2cbf00abb3c279ae425ea8ad35e8152804d6dc64992e66f7384600a8a1c34dda61b3c9de2318f0117c7d464135b89bb6185f1f5f3f6d69e4e04c025d4ca47e4cc60115a792ddf45d67406de151409fdf894379d6ba39ca3e6dcd4874e15ac4185ef51ad6d32d6d4216ea04196b0beca7feaf2d1a0129b8088a488cde7a00b12fcc0379aa19ead19a364fa1a21d77686d78f993641c8e5911f210a3e455780a0f662eae5beb56e5a6b4a404c2eaa9c813ed91e5258c47b1bcf00d7b3e1e5a70703f32141393850bffbc979c552a7a31fa8c2642541f6ed4095179cbb0b6ebade939d5ecbaa3998270448d335d20e98835e717522fda15bac9386667303b62d4317e4608d2cae5af06e210d46ad82730d694a7d301b55ab86a60d8f701d053d83c94f1c3f95985f8fa5f9f57f1f28a7ed69b53436d9eeb808f32fc373e225ea89367b672f9b47137dd660ea2d7ba2d149c02c60cf726e965dc55678af8e2304d292ebfab3490a170846ea05dc3d8f4015633fffb65f75659d575977d227970259411d206b1f0d6c3e8cf089504dc9d4f64c7d4cd049f26dc11e3c1ee3b2d143d380d48d0f5112b0d9684eb822c0ce785a5b39b51bbccf93846da584c01291d9cb549af2d802cd5f3230e5ea4f36cc41872bd2576962d1b60c6611f92ddfdd11646fe3ac4e0de7bc4982f987c0d36afcbb43d2889d8645a564a0ce26751e755aec1de26e445527ce14f8967f4455da2167127d5045ae6e27516bdf6754458654d485d1324ee31ac7fba7863d36e50ff78a42156af5184ebe77af879150edf7ebd0f5b2f2a605d23dfe81c52fdd9c3fab2555cd723e38779bbea392f2640b2f0fff2dd2e555006cafb487dcab2410e6e3d34334e7db15ab1774156fbca42d9d994f1d115477cea2d8c8cdb7b8c035739bf468381a383e9365c75d5323b0634600a20849ca848411a15df7513dadaf851315e4a464b5a0caf957d358f5ce163d13cc588b3fed3bc56df952ade9dad00101d906c5fdf697bf2d22f1a8604c1dc3967c9a747ef92ea960de08f5dfd612fa9fcda4de599e519d7bb5ecf7996effd62c1b97ce33125ccf0b91956240e377bf51e38220d427eea53864fb506ac51bd9c5393046765ad62810123ec32e97f445c6f2b39e31136890f3bc7e6a2c83e94be1a157b51bd8087e868cccef08cde2ee27f745620f4d68f6ad96f088ab21c78695e61fae435af599e63a58266dd3b618421948fe506306b701b2cb0db67bac9d5e79e45720d2304c48b815ed1058f643f5001a204a354ddf4f2ab91c1deca3b1a43ace4bc9a18fe62541cdee55a37fc3b3ecb062576caf0aff40ea7851475a9a6cae82bcb23a937f85a78269011fdb8c3b5400a496d4d1e266612c73f2e1d2e8f87716005d93b40749187a1a6cbdd82cfffb66df254669c5b1feda0d78838671534661f0627cf208b3f8f4671c1682f688c40abfbe05c8479d184127d1a12d08f865fda9f6db4ce65b6b436e61e2f07b038e46853ca66cbc9a4bae6f12348ec79600416982b0bbfa52627965f3150acd37ea864b5d0f8e6db32774f1c67208ed010457e8d5140a398f3c896a32998846675c15fb23fd1f47dce0b67e3343f52de78ac0fffbf2aeaddecde78292e19770741fe772d6c11d985b44fa7c27c543a71c17d3b47d63f653eb38590c2511e29628e0e00fac7ff7de8cff88f6b9c4b34d001d99c5d47f885ceda54306e045e846f339557f4ab5e2e93e2689c6fba8b6135fb43e8d25e75720ff4ee13207b56b5dfbae6f9be4318a6d8de6ed2f2a9f5ca3ca130417bc3b61aae61debe111823eb89bbd3d5a0f07a9afb075c6d3f6d888f83ccdd187d8604cae801a586bd58ecdf4bafe0b596f72f0b0c0c671902d12b75f1fae6f51ff4fa813e5b54a470060e858c3bb370be5e827f0ab83b5ee37a223fb23c3b1b721a37e33e41b9c45f077b7050240ff8add7c6c2da1cbb8378df329cdc99f65cb433fcd57ca52c11f43a1c9ec58df86438f79dc5195d40e60c2ea2f1112935a5fb8dfd691e0af88ee4c5c44c80798a6dee84b91446f0a8b3bee22e2a79582fc879b41806ae759bf20f4b63aa012b43a7b44b9f552511cb7f912177bbf26a79f6c1505a2eff2305cb34d0b96165bf4ad58fd1ed4cae1c75d3acd9110e9fa93c002f94538344582eaf78aee4039fc8ea4491816afecdbc0e441b573f4a6f7138bf6bc1b81d1684408d6d86aaed941cef1e3e9a206cf638e2ae9ac2aa588adbef44f093d9e83587f81c7aa11cc6db84e4190fedebb57a03be90e052c670a08f5710406c38f2407bbee0770b768a19d962e4097bd02528f5af84eb09c029a2b673e639dbefd1686d4abc787b8dd96e3103f9609d4605c07e04e6a702a848e0245ec9c2ba0466bb4c4bfb548a14561ad2ac1be0c6d63c5ae90a8f4f517c2aa272f9ee07e8d8c555fb4e8abd4b85bec406f92b0f49feec8a7a727126c0950b9287b00d60578260b1a6c23d0ee2f44967430c6c1e8b655bf8b0294afb984d493f65158241320d3ed5771a359362be18dd9ef4f9ab195d47c4c562645006c7225076c3943dedbbe64dff702de5d9ec991b00ae5896dae2ee0c15b7311224e37de01897b7855d3af7735e37831c7b0cb58fd8a63e17c5e92e3cb4bcc52d45af1d4846b22be3669971cb5ce783e09bc452c6c819e46e04e6913160977b1befc19d5eb7ad915251f93138328b49abf72d81639eda55d87b04aa9c5c8395066f4a1a209ea73455b987435d8ed29fc42e2159e00fc8655a2dec31414a83f2feb04430e072fdff0d15dd374fbe5e40dbd0bd9a1658e659a7e4bd27e466a56fcae72c8b5ee18dbef3b8743842e71aec5c482c03897ec8897a75879866ca070efe61bb8187239f11bcd757cd6918735e513a1f05eb52390566c7d82df9ed4d8592abaa98d62b89f40889911961db29bca06d27116e2789dfd57e2793e9adac09640d5aac921021eed56fdd9320577f02bf5d5cd69c2bcb0883aa8a141f5cbeac55981a0c5ddf78667b5246d1303c1df51ceaca0f835003b85ef6a070884d573b19163532a2fdea79ef7b8a7259327784d619d4238e60445333f38c3db3e2891a8ca83629d5b98644e48b0e13b4d0e604f7072f627068be9cd70e79a39db0a16f05860c2c271ea3354fbf906b0875fb4b31de8bcc26734afdb605d9e2cd1795ad4bf7e9318726b6e01efbfb85360c586a7801ab456b0b41047c7eb310c6976587f2cd4f884dc40db2689b99f156c0297f9b0b9bd38ccf2eaea23f9163ff0760725a3cb7d6e13518ae552d1af001b042a8afa18b1572b4182a3eaeba3173f9b9455ae2ce30607ed8f7a4ee40271fef1dce34f34987459a048c25e5c5c2b0022711905460d4b7971c07129591a603aa6d23e82ac5ff4c57adae380b02eb2da44914226ba5583568ba17c87719f15320606b5c386ac58db871fa4624218622465b5d40ccf5bd4a116738bc5d06dd185fae0c548d00c7aa974710f5a53dad6e6c84caf8913424c4f2016b9ea35bdf0b3ffc8c34b85443f1ae52ab3394dcec028053835bf13407a80c1e67aa18788e460ba978e1c1f85b4624c324eee6e909d1061e0bd3be2b30e7abf10b78fc76fd72c17a687e638e18cca236eec52fc4e5c197cb170c90e5477fdfa0b927c735e1c96c1fb9da1bf14c48cca34bf5b64bbca1d1718e8e64213735f4bae554b537e0bc8517369062fac0e274dd46e21591fb7b4eea74032f1354a65790cc98357d61c247bd7b486faabba0c00b1a25bfed464922ed1f364752ca207c6abc93d929db723fd9a20df4a6a3911b7153229c800c6a627f5bff03799e87f14bbafb6dade944e2f6675cd8637b8106e452d47ecbcf80b54bacfbb96b894ea2d64e3154c01bec2b8932e80c0c36306f409a1405662512c3f8d37f84bcd2a27a443317077a7c5d622131575c578eecdd5a038db809f8da513c0f7054bcd996a9ca18415f103b0af98e73507f48680424a47a98ec72122c085cc3f79f1716c16a607632616f2abfe629063b80571c2491c512a306858ebcf00f1490773a305c7718d1100f5a5dd45c46ea4815e07e84ba1e4b0fad6f8f22ae552316049d509861379e1bd304be731763f6ad34dac3ad58e52619eeb1825c1aabbcf08d73ddada6ba0c67a4c30fccdc0d3a4f559c0908540755b5f310b095fcbb8257c40b060f2fef2d54d99c2c7be049414caa7be3b06db3ada335803eae82d286b902e6c0ae78e8d594d1554762fb64a822c8c6fd9c1a1a64b30919cdeb95c35fc8242df6008f060ba700969fbf539281d1d5c52f35298bb718927baf2059a9f27d2da5bd9e5df9cfb3cf7f2bf702e41481ff925aa2ce08bb5d79721e143fba9d25a65f7e5ecc256b08e898764c5c75e0c26b63e2988b70c214cd53a2237b0ccf284053ea4576f2e2ce98d1da9c8b0b33f49d8d22c13d4bb91c1af21be0463102eabcd896bb55fbefd6d9d365da9dff819afe3d07f0e1aff9f5df13b525681955b1a17dbeb438d0a2d8ad33d559cc124c88eb792a935b0073287cfafba57e467e43af9948f9a15ecf00db6799816def46a28604a11f7df074b0d647157009d8a662ea4f6c2f295774b71fa02770817f77ad8da41662ba2c5ccdde64db13b1072f9fa193ee7e2f9315967534197f865041f2baa4f08272806db2fca564fd8d711300117e156b2f2c2ffab20f256175496eb40495b1276a3cbdf3bf5df9930d42c27dcca5efe21a51d36646bae3e8d9a56bcffc79b88d2d20527dfa92df074a73be800e708a324231d0f843f8cb611e307b8c43c366bcaa1ab33c3f76d5ae67e0f9629079d0d891e313b789b661b1db214e2b6465a59e0995469013ba08895c77a89ee66669753458493cd968ffe4d1bcd7738919d7c828099ca34fb5cb016438e79e5a6564d5175e422ac1b6832da22d5cc57178039dff8f2570fd0cc4952c06c903dbcbecfb6ebe9624c8ae5e6a86d157acd94fda5ccc1c792edaac1bfbb0faf1890dd0779a2224baafd98ce2374ce242b18ab14eaa3b13d2e27584bb03b88926f74ea4886cf7a999412bc74a307fde9edebb88f24c92418fadfdf3bcdf755383b2f7a299243b41e0479906ca722db4e8426bfc33a6077a394045637be53da17ebc90fac6e1cc964011093cca9bf290feed396510d464f4f8bb946818d9f9c9cedf51d8bfbf321b5223f3bb870aa458f092f405f5f9c9f139f0a0cf188c7d40b278a74d73775c471d7a09da60309ef98104bc2ae8c849cef054ce9077f87dbcd98a8934936fbf46e766dff3c62447c75c7c4e572ef56ddbacaa5bc2b193bc4f37f5f35fbfdccf3dfa92664ccd832369894fdcb3a16a359b7a0c9088e9d93621a3710ddd4dfe532fa7d1aa8bebd0dcc1eab7455ad165a21784f5fe39366ec5bd135c28549cbb63e7236f8ad5e60292ad04189332bcd071d4b43f434b1a43b4953fcade4ed237eb3e26bcc7c1379bf0880ef5bbabc556428d5726db8a95e6c720d319fa6129fd15b16cce1ef554b46d3e5e4ade3a25da1d3110fd0cb5c42a3b12faba61de964cd413fb853aab0fcc80196f6422dc8c316a564e601c7f853bd35672cd8da03d5eb105e1bde1bf834239b20c358e1f80b0b316c271e4c72c11fd9b05c4ebf140edffecfbc3d828ee7c9bc3a7941b23ec668f0a199fd11a769c720b020e25af4a2449ef261de22faca25a369417742abc69bbd3e9cfef4aaa3a2fa0df316824761b7e2ac2898d5176d3ad8553eea6d7eddeb3bfc07b930d4673daa3f2ea5d3f8ff1a61ca64815f4573ab877f5ebc2154556586ee529a190fa1d6add6e1a5625ef53aea018d597e5d8a098323c502bae46ca359b21e08a801f89a3b62edae359c73c2ebabba509134dc3e499ee3e34e593899ca37ec0330c23c7872a28dce6c5988953d303776b131e0532faa2047a0091ea18ece9bea3bc863dac6b608097400aff99209249e79358cfaff34b52f1a769191b4bd461fa2f167e282b7e9bf667b0c125e80f4bd7dc22d70b3b962215db009f2b53f2a419f7ecee030391a70d0d7653eacec030ff5ade2cd659366cf71492f4005c9367c52a40b90e788fe7bb044bfde7692ddad7bb37ff4d86b6deb28561a7147d0b9423e4e8022795173ea3d313d6fbb235d293d630ac5606c182672d3e9735e14e29d02cd398f072384abfa6bd1702e5e62ed978eace975a603b0e0163bb4629b2b759adeafed7ceccffdb793b129bb71a44403a4f765ba1d26be5a9b01a157756d4dd8e59eb48f892a80e92c12a2f5bac89343dde0175094c75f90e6e2c7d47506ad1a4c4a7302eac9120a07366740bf40c3b8666442beecf8a75b914dd0145b3e74cb11f98d52173dfbe1cbeebf37e317a80158e2c193e246998d6bc2aa98b1f7ec7c7d93167919cc3b99543c80c59bd81baddfae81a04ab2ca8a46d364c005e02449489b3789378f7ffb8e33375183270b5ddd860cef1314dfe9d67ed8a4c09187d2a9bee59b0b61eb2fdbcf7165ceff0a82a712b89eec6763490ba32dbe9ec0183d44d6521d8d70b1457b18fd57a8440c5f080c19e42daad2d8c73cda0356b817eb4b54f42537375a03524bab9567fd61dedd8eb0028cc91a407a21bac507bcd9db1a6693e07af493955e8c52c1d81b3c2bf212255865bf29ff3307f38efce36e169ca9f73ab74e71fba5d33544c932c09cec8665040ae4cc801765f46e5d07542384c8c09e2ff6a4cabdfa5df4467e7a5bf72fd00a62db53a8297550180ef7026c21e0ae6f517f9b7feaa853b07f64352e6c4703d36b4700eddb41c753b703682fd31ff2fe2db6597c3e83d839eb93e763466f5dd9497e24a94df5b6ab143aa3d88d33daf3e858c747d1cf90a24cedc204e5e2c8c4a6435e0ceb2252ae5a61484c32745fd6c6a5b58dd531ae2bd197d0d15bf2e970317f50e93e6bf87e2a40bb2d610a5b992256bcf1e09d4b8f7f814a014cf8b56b37c472c56a845f932f651892aa91594af6a274ef94e8495b4c8ec739e890c006231f57804cc281e7b67e0145fc0fa3f46975fa9918470f4280a078acc66ff23256ed8e0be18b15971fcd948f8126c230425c0aafd05c8eda7100d8a3518bc70a67b7e60a286fcf392abbbfc930147fa7c38cdcedb2cd79b82884877fef0a6f6c94490e00c0b90bf8e7a8807e6389dfb952b4dfe6e1e7587fbbc66d5a40908500a4f6e59d038f2dfe6d531171fe7e3e44008b64c37d62176f8e9a78a7a9e478f6d3166917484e44b592b0ccd24fe172abe3302d09b2d816a3d43806c83d39225a421471167a046b799d0551a52b8b83e1baf73ae754dba73b4eec3d7d3fd50a5f90f69956080349bb4f2d5759e0bb16bffd7e9c660429516785d39d1f668b7881ba7d0b5b25592853fc26dbf5c272c21a914576549162472cc65651d947a7d5a1fdf25e64cb4de89edd42f284c0ac8675509431628965be125051e13d7228f8915663ff81f2c7dc18d7bbe72961b702762df90f8358e79c5fe0734332e0eab28fc4f74d7f65d863fb0648f372791e1ad5bbcd34b6af7bd9fb82644db6216a87b51919af42748c498fea7915cfb90d00c8fb8fb8ffda458551d9b6a6eed954c9d952a0ae67d0cfe0248dfb1d48446164f8e506998967bd5e5a7a6249d1f3f5447ce23705520f5b35f827c47b2b19ac48d819e5d2e4f453743740b6aebd990a4774d70656e711589d96ae470deb584416eb00ab22acaf099d5225f7f19eeb82f096039c76c9cc82ad2a7a193acccdfbc12617b94514e8a99f7166690c5e741f09e5b962364d7a388260ac47203558a38d7ae256077f3338d533c6c5b250ce602999db6353ee2702692fcb8e2c1dbabf4a072e3325a860599f6a9d957acb709edadc7a78a7b81c5b5b8617bcd97163414963b876df2ef7ac01e6c149b9dcf1232e5d165bbd0c095c296e690277928437d0172c1f1511ba079a05cb61d684afca33140892a75f6df66995324223c0cc6372515db8467b416be189c25b9a78505824798304d90bfd66b2e82b29036b8b11785ef1f09ba435f3a9e0fa5bcc17135f66d39e31af6e2f18b39c52332d11e17686599f8dce3ed4dd8dacff68c89a1c0333b4a404fc202b7c28b513cccbad18ef36e01e88a49f04e94fc8230c1c71dfaf4d2486ff168cf77d8221c05a30a4bb6b82c64e1ced73dea03ba61fb075264acf5d7f6dece42d9f9e5d936fd759ed22b8f76fb5a13c125422519d56fdaee074fcdc1696d27a284bc61fd486f74ee8f28a5cefee78fcce4f01577b0091d685e4f1d6433bebe70d20da28ce9ba9e6d039f6ee240d8ea10a9cd3082091adda1d2266195472c238d1a782695a42ceb90321e76f294444f431586886b8a50a186b2a0bb0299ed35a2cffb8f002a9525acded46aa498be70d9a928bc260d839a5f56357ccd2b62fa1d36b7127774d18d5fbfd42aed3ea8144bca0ccd176dc1607484651f1560fd506067673ceebe7768d404a101434b092670475f093120bcaa71a66b58bf3633d296bcc5a83bf4ecf526ef2871ed2c1193c4119d8b69e9d7b656c18eb348847482994a62319b84d8d3302194354db186ab1c6bd00ae4bb40fe3717bc1918eabf86587abcbdea5c662d3a3aa2d637cf4749938442bacbc10362311141eb6f95f63117d014df736c0ff7046640df51a871c0ad4f0cc4872c0dd7fa50b782714c51d5844083df6e9ccbd781423908ea03138e80336217d5e114cde6414df4f19b6f5f76febd20dc617c95864aa79933a883f41bde5cd2e089173373429560b3c37eac3a1a483dcabc713fd7fbfd2a16d732da20de7991de2b350e2452e4a457764fe4b6ceff44111231e34877a33ab8aff43cd015dd59a8ec73109d78122b93d5b2671ce904983883397e278f81995631b2092ec295aa8211cbe207bbc31a6623b7e94d2ec8a98c4f4c8075da5791d87e2ef1fa124b672b19b3a058e1d560ec9fa920ecd9e39ed9fe0c3d57fe9e5eea5f212a23f5e5c041b2269f45806eeec25390869bde179eb9317d12b4217932e19a127db690fbda6d1665effa4b1f7453560fdcedf505ae4fbaa35f08919325aa09e6c506c286f4a97d5175ed650ad0bcd144d1f95c773cbb9ac25893f8c31bd087ee62bd9cbe29c951db678d0ea8332d6d9450a5dd16bb57a75aa731854ae4fd57a0e5666a59a8833520e23b958ca05411ae08a4cfe9c97d002f3dc6b608ab45fd7fda08a4c6f9d30145cb0dcb75c735fd23afe56a9f37b5bd6466cd67b08c0cd63ab77a779034e5ad65db29d9aeda4752ef0af455d6b55164d8adf6f5957ce2425ff91dc46bb8322e8c748a65c6608922128ed3ef85526d580ffd0802b61b329ab507e7eee240c396d54f33c273263bcd8678db09bc983978c2d370480ab8ccb678c4885de997c62c8f667ebcc899510d96da8e4f9ccdf5ae4857451a9f36162e9c9487b132a4542c3adb91c0c1299218e86bedb1ed18ba4e31c9a34796e2b8172463a66a5ac8f462ee72ab138eea5ed1a6fb7da929ee725b7b06eb2b7645c8f30d6b4da151a36cc8dee2413b7180b08eefcb2bb22bde7a26417d5bc22a1954ccef1e1a4ea0020c3ce13b9e3e07d8126821d53aa5f48c094ed7e545ff83d0afae536add839e75fd94da7a6862463e66d66c6de13e0dcee525d23ae613c40c219fe801974766f6462031d87df4d2cebd7b58df3fa3c5346b73f3d5b41f9cf366972d42f34c4ebc62e1138da153dbd87cb4d67d0bcd342cbfc50fc3cada0a4912bd913f13494e29df06a38a931232f7ee7b35a9fb847750fa128a2b74c212938dcbaf1cbdcd0de31a704719359e04770c5bb25fad1e39bd1e811a15ebda666cb6069e100d8a7bc93639d80aaa3f19e91db5a807986df462514f268bc65fc3e08e125dd25f1ddde2cc2071ae37b481047b9a275fcaca2aa446a0eb54e3677715c8794350121f844520ea2e9298afac5e6c8dc161073a73d28909371e92e1ba011a0c3ca9bf1dc6b49e62fba78cdfb978f935e13a1a8e2ffde4be82576e1c8c326282b855128b806d2a88691ce03d6bb353bdae5aee4583558870a93c2d48361156478994e815b9a2a56f81fdbedc075197f319084453df37289e90c56a23bfdd63a681ef020cac78a88c899c23e44f072761b286defa4419cf3ddf875ae0ada7e95b5c0b177115589f302c05eb557f16eee27851e04122e49af71dd53b0c121a56e3c2a9a69812c128346ce80d18ca02d669253d30226ce6eb4abe7274b742cead4ada5a99686198e861a79a9dd2d762e9610737804f6673264ae194e02cd16b92235721cfb52dbbf21b0eb8cd383d80de7bc8bf3131d8befe00e1a61a534d751ee00a200098bdda23755be9f8f5817eed5da6feba01c9f7e6991872f3aecddae31a563e8d2ce018adbbb54b1ebca80b1b3f383fb339ca0376548dc7069003f5063d724351ce3bd04e7427166fad0f1e4f83e01713ed310c1a65e43a3b308be44d1ed8bfa9e58fb0baa4087450e8b379cebb39006261b7172aa62bccf976a3e93653221c222228b23fb16a42163047153db14292d02df7d0fca2b5d49ab1f942fedf181aaf68ca6dd48b8119ae11bc8872e4c6d399ccf0d64b0476c1899d19d72ff82322fddfce90642069d7bd13c6dac33fe586f55b5fa111af582cd09f809ab04530263298a119a6cdce6f7b97b2f535d1e1adaf1202229fd35a9cb9f37dbaa3366155a1d34a895d539b8b26e78a3fd75f9f9ad5e6336dfc020c831c840ba447d055c14b2e52aa7fa1cbc648ddec5c316b2aed5a76430970555761f085633f2a16f8f8f9e48d9fa6db7f88438d3cbdb1447cfe545611cf3c054c0346b26c4d46c3990104c2813e3c525bbe86a3277a59f15e20f4fc17d8755c4326536ae0719c2cd89688579b458bb2ece844842e4671ab7523b7b1b79223953951ea81fa6de6d02da1ba5f1c78c92082b89996bed71289fed03bd8025ffbecc436674c79935916f46fa092a6e28bfb3f8fe8cb4a69b1db274d4cf14c1a7715bf21080ccacf364a94d19538a7787e3a3cf5758fc6cc53b269e95042640809efa616da872d4a18c95d535e893edeb047e686d28230330c59299ce18fe4f268ff6029b9516d62d8cfd80c5ba7ff23e41cf1b20a6bdd037049343a165d1ecee04258933e2cdc78640bace608de82e72dd92d73d5ca51fae258308cbd1451cd0cccef1697dca6df25a8af6870860d40669c2f93a9317d33b83e0506f2de6bd3e45e36dfeb3a4a3955dd13cd1395af0ed8de459a33422c87e650fcd540c58b60c7ac5cea248dc51ae94f0fad2a9f7d936083ba7d39f1887d1caaecb9f9715af0ae9f2b4126b3914ab6be11b9d82048031e288744fb5de6f54ea0eab594bccdf60af35435b89f5518198aea018f771639f22734fb1d60b1a5ce5bb9320c734bbf56228fda08d461ffe8927c40178754e54290b9de643c59b8b98fe14cd79805f304fee4e7738c28ff7f65ebc2467f6b5ee179720591aba1601e739026b550d35aeaa9d230e4f8c97b54ee40f438b6f583951f9a2ffd0a1d215666b5e87ebed835fc01702b8e90df753d4ff3af774f0ed9931886084eb7f44b4ddb4ce76db586a148c01a3e551dc0456912254290bb8b58545e0206c8a272d7e6f13a9495f33a5efa95671e1c055a4415dc2a0f9a9a0085f18959ff59c2217363ff154ca6c1cdeb63db688bbcbb360cc456cb01b8382f3d0cea9d885b36e7ec24eed83a34b16d848e866662589419d0e95e62dd7855b4519ef2b818425b0581a122949faf5045e2476f2b031348f018f85a23cca260e8028781c775fb36afd17eb120a4deb484e896d21d6d1f134088423adc1f27418291a76829928fcc9ca87a80591f1937134d4ebb1f8aff169895c3259ced0b474c947e82c3612776bc831a777951ca8dcf74e68fcb6e776e4657c8d0ffb30744fc5f26a912d990831521a3f55331be66ea8aef06eaaefa9c0f6c207db49a1d7367ff943579df65980786e8c19f9a1472693602f3394e9b915918f10535bcc2b86790218c5c49c71d5c5055ad70dd36547baa45e5a68e3163cf37cb2c1a817de71e6ad218f3b1f4a594868e07a209fc002b6272afc00b35ce27ef7654fe88532cfa266836b9f9efc7304cc2077632ca425d692e90fffbb2d947e2f57a6fd202496fb9e58eccfa9f0b06665eef9f517dddbef77cabdbdcca2dcba010e6a0c39c1e7d2058a3c3f1187378eb32f767be2ecc99cf74b291fcc632e61ffce345449b156221c7ab800356d6c5c84dc2b9164f0116c4bf43918353ea4c3efc90589a4d928e030fa4b1b6571c91b3b8366401798ce25884a4408b45ac739f7b9adfae1e1306a1a0b881c7bc7831d46d2f12c9600847b881e367b3c50e3433793f40f792dca8f9f62bb56d6314e7ae4465866ce5259a9038e40aa369e2014e47243bf02f5e8c845a8e02a25b29712387c95a2180d55b49cc36ebd7787d8ae638317f692c7e355462834ba0716fce034cdfdfc9a2a35907bdc048ba34353ebddcb0253e9f9bcc8642658fe59a1db45710874a1eb703ee7ab4a82a29be38deaacc7c211c0de5c11612f9718b2b6fdd4a2253506af4c959fdad2dbfc6a772c23cf261a7dc87b540f48b4e2d3bfcc0291da50dd02788fb2ae27bf0dfe5a64e222df2535908588431ea566047c740761b46840c1e79d2a45e02405d146e6925c96ba2c1e3a4342d5cace3f3d0b2621e9541793320d03e1fd64ba3a4ac6ae397ce6dcd14720c67dd2019497dc9ad3afe73590253bd8776d58626a9df2217db2f71e6d217101cab20483e26ef0803059fba4e48c09fc2f56bde13c19e94f83901825dcff593d3843c2b00ca7b26e92b432243cc5d5b0a5033740e166596e03b83d7fe73b41c2d3c4536d6e04e938c60a8079b28f6ccc95cfac6f867a8d1c59736b2228f11635a13021f5cf88804724e64d1f0895e54dc6e96317443e49f2814d7346dab13092e057d581b001289d537f120e0c5ac0e3663e3dc6932326c92997fa8686ccaa57c378d2907958fb92dd6cffe9907b96af8b97d6119d3cf0bf88a57154e74700ac779df835b1a40568b3b3deee57dd8f22020610a1d98d32af4d2aa05d38a5ae6f896fdbb52a0b64ade8660612f7454f56b5055946eda8ed4a521e36ff79ad2f53847692514efe7caa622f95d67583ce7a42b5a3a65e490dab0aea8b5b853717f13fcca8dfc375b6cf51281fe263816bf83315e554c410ac27096f9eb81f001b6fca97484f48af17862d297ea58608384ebc80cf368b65b4f7da1fffc7894dce773f4bef4be021e4b84594d6785ccce708bc890ef2a8e79d8d326c3255ceb461809d257864a9a60e62f67cd8af2bbac7d077c7c1249ca4259a3b044acc797c5a0c9087a11bfb05253747186eb24cd93fdc4f4c58f44989f5f3b767ab69cd7ea98eba5b62a8ecb945df2dd76bcdf084b4470d676147c0205ad8d5d2f3060cd4f4f45d63965f40da527b8a7da21108a34b9fdadeccc4a7734d553c4018d856bc41a3e21d5bc75be1e0d559dce24c44b641660078280b07e262fb4c4ef8df26884bc1b006d3cf3a0ffa04a374d0240f74d92a58756f1a619d5fc3753d5bff6db9565a45d83226a430cbce6cccc6334bdde1805b5f43ac1e3a86758db930c21c3979b3f85b01dcf5c9203a94a686d6f826e2fa5e26ffe4f98768d115802c4c6421295f10f60b0a344abb51099b73989919620ae981d693b938856a098770a49bde883e5f6df426b98b198aa085431b5035c2c05cc9989e894dcc58340b9214796c1c99c7ecc0087ffc2d925020e7a2659d2442a821046110eee5f62e26fe1a8770f72d002321ae8c3201ccff272b8ab0be6d769fb541991aaf4ec7a6fb13bd8be17ad3201add595418b21a91ff0a6e373c685dd2f5d91b493381ec38ad565a1a992769f6f913a12ee93fa915dbf50bd485ae674a21b5c979b77c3f2c27318deccb188c916b698dfcabf54d2ae2f5275e78ee1cf5ea91de733a395ab82d9e447d006f111cd01c9dab3d361671452c349de901bd7c0345018b42926a67b65c18d05c4b066c75f0271c4114d1b000c3dd71393bf463686d0460853d384b9e137ca1b928d4c65358cdc223791affcd3e1307c32307a609fdd84e1196c4e62139641a838d88c59d9e5dba45bf13c2e098b1557f3f0f7e87390dc418af3aa410016319a448f0840a43c2a95cc7993770b3fe238886ffb023503798d6e7c989250785bac954a48bb0146038a1ab36a66d7eee8edd5a37ad9bcecd061e8a81bc3bf5975bb44f6c95598fd4b637a12d4ef1b134d194efaf3c65dda517c9f705b6d9ae867e92341cb727ae6f7bf756777d233285ae9032eece5316a93d971e5e7c6f2138c8c832ff4c8d47991d04ab4428fb4163130810f37d8e6def0dbdd472f83a87de4458514632e0ecbf99bf1a567998cce2a1ed701e00de23ae9c751e8b7fffd1a6ab5f0d280d742b84b7af3a206e0895e644c2d2be1addef970d543e4812cdc617e986355a67bda20193280369dc83bb75488132432146dfa62b160db696eaf24b179419111ebed9b8442dbff84cc672447d8b760bbefb8928fb316351dd188f14775a63a7d64f9444d4e81080d2258f494757475d49ed66898374c8789641e24572d7b197ebb8e9be6885c1d7e4d2e89e1cbf7604bb2857f3483cda11d63e941c98222446f457191dcdb8700a9aab21c70faf52bc8ba7f529df953eddbeb7ecab4e5836129ac3c525bb611d3cc5bceaa2907fc671a7614987f21993d95523032b989227e96dcdf6be374d6229be4e6fb63c6ad8ae8028b5c60e5ed4345c51acf0ca1aaab1f4eef76547da752e1c47ed7ed80e859df18ce67da87bbe476785bcdc2179f199aa877f04e7d13c3c3002aeb568bbf69e7677d5e71cd5d58776fd10d1805fac469724c2b5a8b146adc4df06c433b863bde3524c4bae7e8ae93ebadf0ec4e6426c997f70b3e76a3e7f379579aeb7a3702474c2f42031104281d3657d04776906f18d613cb67ea881ccbfb7f0289139da2fce0c819f300ac17d76ba1da0dd9674821513364eb7942661c2d92fb644dfffb92124833e947fb8eb7a0f60da4ca153ee862cb587e0193a42492be648fbe51ae3330f06ac1d067d7502c2fea5582e2d9791617d17ce36a7374294fefae2f8789edaa120c926ce02a7120df5b9ce844026dd710962ea1c41582fcc63a4f8bcc7b560f411032377a576c69cf2abf31fb7613ad79825875907c3ecc2cce3777dce017cab886e6cf138dd31bdc0db7ace8ea5f7af9fdb15c869a765f045b459d23db692f43b68e6c8498a942ab2159675ccdb7b4e37e5c506fd691073ced2459ea1995ff516503888e0dd6e197938c785f531ee709682c20412792722d3702129f3fa5bfb0fc7db406a27ce511c6932d8eaba64379e59c2992b3272586f5ed5542b71010776117676d08f295271f03e769f6cf45ecc2d191be278d89915f7e21f297debc7e645108be08761daf3149e2a749b63a141cdf2289d926a4e2eca5577d88b1493224f204891f97f4982021ee6da86e6e1915fc0dc6a44ffea1fa304a4798d8fe78b5c0794891f0031bbd9652ce4c948fb54eeac9058e666d4ef968de28bb7882f6f16f36b054dbdca949340659a724b3e6131df6d99120d6e3d0cab0d810e890754cd133f7a4ed9b77ff8cfcf1c58d88c1aca8d3fa9c83bd7acb1e7a7a98f13cdd15b4c25d5cd1cee5f395892eecc775063923519259e108add0d8a7961caf43a617a7e4da3cf1a90826d4355d831471ddf27a5088ba67aecaed891a19abc66d0129615c7353509b782e247ec7940ddd60e70d101c058e803be333f28e669f69cfacc3c89593630e2fce370c123781a113e06ebe998b1cbbc2f04539d558d540153d81d3e01b9672a27b062eaf80d2363b689d0202b618d7b2e86c29c72665df8aa261386bedb3bd0697b83eb1d4f572f4ee638e1366b90a60eb07b239eb10b49e4c9ceb1e051aeecc22c2b665caff26ee2010b43aab9c7625cc1a53795b6a93b6200235591460d6ce82d85d8172046d926ab6cf3fd252c1255627c1b8ca30c02d98946414cf03c6b12f63950811ed951e238deaa898846692eb755f569d0b9a387d3fe806afc5944b2cf9ceb75e366c196524cdcd70d70c57babb9fadc5d4f407c774b578e836918e611b64638876072e873d346d20d4fac8e872c467d16f512efa8510ed49ea091b34f2737d1778ba75fa1029bc2079849c8fa1cb1ee92a6473c96bdc0a38e189fded0eea628d3cfb6b3aecb942dd258eaf323f3a6e415d01d32f2e1fc3b47d1154a6f8262ca212aafc37744b42d65ad0fdbfc72201d9f626abfd2492834e13b40c2ca11c719bb3449ee33ec6085a8ea369e224a1886bbeb20ba1af189e2be1cc30b0680e46aa947b8d3aa81717938f2c4583c410a674d23b9161f2ca642e1d31cbcfba00e802e65d6777ed96f2a1c3449f128b0baac1780ade8dca11f780ac29dcf4d61c59e3151ad30407678c2cbe9c309132d8c26a4ab7ba55271ccbdd04c90b85eea873a799e0d3f43dd30d8e0c7026c4c07a765b485660537a13c0b2a700da3451e1240eb5d2913257f150e7c63ddf11304e40897a5dc97134cf465b5efabda99eaeee41f1a6aaa5a64af51e8aea4f65b17add7a3f75fa1ea4e8fbb7e9ebefabf43f3aaae67a0509c1b59149ee0177ad3cc671b0f5c44526e89c33eb448644859fd46c7e4f28a66b9fc072c60f50461cecedd278acf7025909d5c5b0c09d87a99cf0232925dac0fb03ee21cd975b529151e45a642096239c7f420a4faa4554ded346cb57b4d593914f1ad42fd47b96f9d8912b056a64cd33af0fc0c653b720e332081d5c8eeda32c961dc4d6b46f66c3f94c8647795194f4200d69d199958069238af1de093db4ccc438c407ba4859a9ff107bb62b8108cc44740484fc8497634819be6073d2b946771f9595d3ab70ead767652c59b937e1603bdcc76a37eaafe0adb7dc0542ba44a7e14934a2ca3f1602785618fc7f095e3dcf8c43a55591ae300b51a513fd821237d5fa69684ff0b6b2a5d790db301ef1e26663a00d37908346c70b17d62276d6617019b188c7bab42cdc5ec5ba817050891c2b0018dc864b0ee51be1a90e4d20d6d2822d783ad8f14a3e2689b9ea734447731ae41e4c94cae2fb4c055572689ff9b5fc28af1f3eac7d538f1571a285069609c156f920141f2f9eec3ce67b02942e3565f7a283df8e11f79251c03cf981ff91d50334f796808cdba65c5ecb5700a18f132ad703157bfe52a4c9a8b93195f1bf323c504678a09189c475377abe1f3e68be102a5d72bae35a43da00801e7fb876471e32432644f5731d8a47161f828d49f9f4813bae3dc14c41cf330dfb582f84d9f45820679729114f3917593b37dd76341e4ffa2bf26dfe908e497fad0c118c8df6e387bae5d6006098f871f1595d714e42af4c266b60deb441ba5d5f9a5c7fbd13dc7d8942e7cd88b38d2b36df9304aba280ce35da983b2b7078c8fc791ffc760865c77e1f52c87dc925197fcd96855d33a5277534b0811ec74bc3f5f68752a09f8ce01a19499be1bfdd9958c4f03bec6f2851b50f2230ac497c72d7bb8e25bb5b9dfc5daf0053d999c6527f312f709ca78655c2abc6bb84c2f12ea644bda2b9eabd0e0c52b30e07f5451b9fab0186c9ca498597f40b3525cb04fb8db4ffb17f93de42bf1ccf4ca690e21267f769ab1564bd04165fee211cf3ddd1f55c3d1df97aee5f51605628d790eb19fc93a6c691b692d1ac79ddefd3580ca2bf334e00f0f7dee5a62e7ca58e4e92e1de368fa4d45f5f7293a2ff64cec74c4240e15afb24bc45fbdb91f65f7c58a8d41bac8b617dd56acfec923e2a80f6638b81b2173bb40ea9c2c50ce0397c3c1772825f210eed61c3bf8d77be2ace4e9d689595cc79ad8003d1c0a624c4de5e138fbeefe917381ae200205f3ba9054a7d0106e59bb9642e42ea7609b672a930708f553651eb404ca310117b3280169b1ad83aa4640d7ade7c6a2d6d20af5b2df164203fa540c57e74da38fef18bf1fc4787e77a4dfc1b8da4da6478c222d5ab8dec3f9b7854f236a861e60322149356bc341ebe6a3066d2eeec470778448171448ac1fb3a3df07660b8d456703f81af102784dac34cb97a939e2b60bee6712a6010a7dc4702eec1d5013819fad5e53f9290326b6431d3b67c27f7a62f665bf16656a185a12e4afcdb68487426d60ace419c08f5d189a7a7b8a46b5362fed539fd2cd1a777a26c8731c31c6c118f34d8570ae8ee83697eb99f2d6c6d7af43b9750f5d84f12b2a6ca9c1270698bad8c71dc73a7d0091a14a5b5691081c14b9e44644eaaae69f2c26307eb9c952dc837463dc79c835692e35f7a1f9178aa77a635a0efab78717a92616a410b4a56f6ab76b6a5b8408847538bec264f7ad0df9c9288294139332905ac492b46c14c174c0b58d4cab56ee5736b0a2524b54677ff1438f98be5bfa02daa438a11856d830ff927a364d18464014790bf45a692ee210cec83937b6f6cc033c79b1f75470ff4d931833ad1d3c3eb4fe1f6d9e3c476db8a49c5fb215edd5e3173fbd7418fc4620d56b9339109106a5e80be42b12ad5f1c23ad28b4e0278065c8c92b3e92d9b1f801adb9053b42edd6861f277011dce1c067ac69165e4bfd4395f75542fdece7f557e7bd57384b532ebb3e401c679e7a151600308787828d9430da1ae921abf013e82defd7fca5d99dacb4962de2d934f82baa9a7bede3774f0acf40dc2c02d6b612cc382fe4517e6a3f601c37bbb9552e6ab5f6582c7fc556265e6fd6d6fd0345cd8f6a0eef69e19f0575792c7043661c2cb5f23de0b37a4410762b109af7c13043666536579d69f25a4f1f5cef9563af0e74c38b73fcf23de1337112b8c74097c754d66b7e3170db9c8a3d564fe8a462aef955b0015f570fa978fdf196dc65343a34d03b122e0bee8255b6b63f6b03de138c2cbe8cbe704427ad2c601d011d9adab3f14a50296476bcc5fcb22b167b129aee6d80bac4b27ff31fd5218798d5b4f3f1951a5fcbd39852a0751c1652668f7c255f6b5ded547123ccf93d757dc5752353b16af377b8ea8cac15becf665f9d0e97b56b44d9e98e9f8361de56728a9896d9877f93151f3c0f43ed0669afadbc5fea746b35be1454f7e62aca5b4cc5c7b46a265fcf2d2d1ff4e9f9c9e8b7427018baf46f6897e80b2af33112ebb31179836ab51baeb50cae6a9a808a786415884bc4e759edfd907ac7eedf2151a98532b6cae1e9062f5ec29ae62e488f06e963292a8e9d83b8c862c9c4984753e25886d70713cad607e886dd8775f8528a4b12cbfef2c1c3bc12e5a28f12c1e81d0ecee7697386b19c2fe70bde318a14c13ded4300f1ed29461ef05604587496f515b9863c57971b4cd45adfc09e47bd4818ace48ac98a54baa0d16deca9f62119e485b175ccbec1753c40476d088cd03d58194de88b5dd3b1a9eac11dc0abec62b6918081cb7156708e57fc9bcecf0a3ba6f0d603b829c5a30506354df985ad875e5d1eb36f16ac11f5fa67f00345cb9d683f0ddfe51ff229a3338b0a5484e2058217957ddd113c81f778049c2f878affebbb1dcc30e2e959f2fc4d965267387783843d859401a0a4e2c892fe93dad2859c8ec784d1397e75933ada2f2fe7604fb1e45b6cdb5ffd5e663385c8b4f37163475392d0e200a15cf3a7b7776f2a2de8a84199954c81f7f3861ac7b6933dd5fe12a1d40afcdd5d2b88c6e7bbd8e6b75064ddc0d8a486b8d2065756551db109545551c4449f89e212ac3ac85a62d68c53f48c3036f3217d9399dfbce49830f77f87c5046743081d4f2026b621e0d988f8d18f5c17592edbe0c14d23414ecbbab5c5129e55171fa7a4f5ff3e2b5bf2044460a25178d0e68c586d7d848f967ad1becf8addac2ef23a913ceb7bbd29f2001654c991a1c4fd72eae34291977b6511434d2809696c067ed720d84e8023d99ae4368754175a1add83cc056e716fae2dc0d5f8907a4980d2febad662828d8b8f1fb563695e5c45bd18199c527ed4ecc81183ce1b181cd5bfb61f68bc99c9bd54aa9b99c622aaf4d51d058bd1cc1677fd398a34cf4adf5d00d75432c0fc4a570728b25f847aca6fcf30daedf369ce7ff0dda280bee96d7f6fa34af8ce5e303db6cf1100167605717b9c2b8d13f57857976304dad2ea953f1f4fb8bfaf5a9342cd2b17a4e0527fab09a72fe921f59b17d86aad7e79e73cace5d88215c424e17c30f42a58d6dbd4f84a6c011eafac42ea0e9d6558d06e1cb6298bb8273c85c35fc7f065809577a32800e39445272ff90415a0360b5f9e7122801b8aa0017aa51e9a91c86b447dd2d921c3804a96f4efb8f19e96bc831845326a9d99111fcf58141a5a19db134c376d0cd13ced362bbe62dd7c6a8948603da72793d726c36db692e18d923aec69ee1b66460e065f195b9330f454df9b954732f215325f3cb2ac6d3b6ab061e6abcbc188c524501ccfdaee619a99da4ca2eea568327ccc79b07beb644312b3001c518b90f9af37747a8e0c10c9a5e63e5ec70e6aeed07a4c29758c8b8df9d346b0584d9a72ecffaa16ba1a4d7219c50adb2de21d7075ad0c85a83c9bfe828174a6b25d2d87106d59b1f4480cf20454a16836329c5e3375db86bc61a3d2d1bbf6f595eadf273bb18e704a75009f0462acc69d3247c4557decdcef66acab6f46241cbfbb982b4ea6b006941f3e1ae8a4aedbf366ada4308a5379fec9006697dddc89a800dacbf9d8ef4876f43180e38e504c500c928b3126f738ca020b9057a2e15bf735dd3a4554bcc2bbc18119669ef6452a301404f988b4e9a858320ead3da9b162f01f9c30cfefb17e639afe1272930f201a309e392243664ae569cea0f0607037961a7135ef0adcd60751ab56013eea28f317e1d9a3241c9022d0cc8e778d455304202f38ce2f7abf3e4645fbde9af2891146e2997e546d8765b62cc24f917956d41ceceffffb437cb3093919b5386274aa619955048cb80ff85929abd983482bc69b8815b0083acd0a8863866e757695eac14496d3eb34b7e8502e7f8763e4b11c6af58441cf5686d157123a8e8d978fb75d7317bb6cd589c73a2067775eca60d375f7ef178d612d5f37459da1337a787ee7289320e45029e6508e143e0364520dc647e39bb74dbe012b69af60e633ab8927167a31d386b2f582082440a0c87cd9915219ca901256bc29e4773cfb4dfb95d5ca806ffaf0bc6b9373f6af1829735370e4c3d1e51a0c74f77f729fd5183751cc52f3cdb602a879dbb486f622950649e3653ef28ee2c0521bed6897040f79b9f7437bb8ede3a5e2c2514cbc3ddf878166488ead05dbad6b1f72a12df772b0e7bc0d544c9745d010e80a6d065312084521756315c99ac18fcf1970e91fa08d230344f6d76a76d719f495b4cf9c8bee55830cf8df895d4db61985f4baeb4e98a2a3d4c5f4f0e8acaa77f50acc004cd71bf192acd9ac794f5f13446f0db968dbbc417fa27202d8de8517515ccc3afa33cc030da94d2cbf43510d642870ff969a8e974cf6b18d09edb24c451df9ef4ea1cbb1dcb8245cd5bf1c02c481e3de69ca2bd53a8defe64368b48246c0af8cad8d6ddc34b885c44620fb3477136c9ba1cbe89cd2193fe630c87a4a0e66b93a5335a49748d6acdbcf1b9444027446909d9c6ecec5b03d1e96bf522354e1bc87bb7d0310527ac5002a97281b206cd3c880de31910886586f8296185c843e933a3d35ce6f7c0fc974c6bdb73e350d4924c5336b584bf31f37da69dc9ac72287a0e9479f7bdd34a9300c48eb616b614c387057f48dd190b478669537f67b1f2fe8378ce12798194e7e14fd0d1d1ba63fd0a2bb20716b609b379930b6fa552d28a7f4454c2fa48f9a890964d3adb296ac4a75ab48015f7045096b4218613fdc716c72f5487a5395b085c76ff6c2805a74c61ce6de4f12325b17e6b72376ebc1719d7d0a04772f81a5d1a698159575bb76ee04f94e62756837efb98d7e84d8882bd111dc3e3c0646baf3e522db73645d63dd63fdb9a9b270239b83a282e2e4c72a337e72815dfcd9d89d6c6f9ffe0330fd3449cb9b7c60f5bd48d3094757979f36284dd2b43743b84ba1650a7f7058f46a90a3530ac13240143ad2f7167054f24a0ddf806e1073c63cacdaec78f718dd8789727bca015f23652c32e77520e56e358e434accb8f9e4565ec75e854cf31a424ec9bc9407155d7a55221d606328d51e4d7db3a7eaf408a1cb9b0a95e25a55170d0c334048e8c41c16627e99f307f4fca035e32ddf32f187620ebad9eb4470ce859b19c28ed558956488ec97d4d1f3e7c364451e53aa934ee5dbb7ad2072b551fdc9069adf3a0ba4fee2b9e290e5d54ed7048179183e588aa7f2ae3fcb05661912433b6278d090e153071b36b5ae2f1adb6ac89c9063a4560ad6e74d93935d79a323e71dfae8ca103489a5f6bed3aefd87205818415b5a43cc42128e9e5bc67c5fd71d90ba512f4589dc2c1a2877231e7157ab053755849f2bc9f9114df70f288a6dd3088610b1c280583be1bf78492160c36b356221fbd775ad2511d9bda10b42865d9020abae5d1a6f05af6b9d754dc33096de3045a94a8e26bb91b038525c7a683b97f17b36427b1f8d3e30575a1217792cae32dc5295767dcb83590ce16c67a9bbe0be5270a5bdeb7a1cf46399e458588bb2a442023c637d8723fb4c187da781b586b1bbad6f616258f00df811529b180fad764631ea9e90c87d6468af9e9728cf9b43e0d7f08099f7b6a8c6264b6ec49d65b50ac99be74ed2eba4cc3d73b81154ffe0c368b8cdfe91ecc942934c5da5708ae6dc48c28de85b6740aae35349a14fa9978ef1f99bd7b7a7679df40f72da72f779e080ddea9999b9a7bf8caf7c8a937a34d91bbf22544d4b6b33c82a999a90e1a0d661e1523af087a6d518b1ff40f9d9f144d2bc77f63b946f134269beb7b8befc78fbef7864270e20e140e102434dbafaa53fe1064aac755c922339d4321c11cf396fdd3817950539ca2a3700a658ea4a4121ec59b0cd28a9f13606c249529e4f7de2a59f3f598e6c18229c44d20ec500e59e739ac043d51cb610981ca65ec22063672c5bf602ffbf86c24cffe409315cb060f38a5f0354db17b9052f1ecfacd464702c758a94855c88225e67b5fa7e15c0f99d07e23096204ab8f4e5cc04d1286379a74fa93c0232f6d9bfc62aea5bf4d3fab21fbcfcf945fa21b8925712982fb7eaffdf567ea0e1f8306ca852730d92c2a47f9e5259ebb145c4170c6ba89b63e4ca58c32b13a1f872eab7688ea27a9a3636e9a51ed80f87c61d543b003c8b3a3d86aabb979059170ddfb6d312391ca3040ecdc73675606b8dce924d020f8d4347628c1ab91488f8024202b7e1ab5961e012b107f586ca16e35d3aeeec3735ea1c5d98c504534a6f75163488e30637ee043dfcc8a69f5e35b15c9a1e68091ff19b8a1038c27bde5faf124904d3213b6c684164362d22d665971c79098831dbb097cb24059df5df62fce1b4f3e1b00fab28c3cbade13d05f0234d0d30cd68e8e4708ba44814e1307c148250468ab1128e029cc9bae298c8a8f4db35e9b622ab7f4f6d2d215aa16228124b844c368e83b66a62132c1bf6a668f90a24079f1ce816edcf0d26e0f4d4dc3cf4b1083e155843b83db00fd362e421fc142368a9bcc893bd768b6de12a716c1e436ea6c9aa0f2c6d2e3cedf2dcc181827509ea15a253d8585417c2c1f1bece4c139ffd1a48c20f13ba2a5f1758c2ad15937f2a3c817d5ad179512669bab69d00958408d9b4e94cbbd600e44c191eeb479dfdb59d39766fe414cecedfc3e0f1497a3213371807cb8818a59096b8d6e2485903007571d1ab9f22242177a9896ef500c29a174372dc737b560e2ad03113f9e030755d232176f876699c0be447308cb481e99505994c0be1a5a5a57c5ef9520ddea9155766a016e2a7dd8f76ea4e051aa56e06acce7218c68fb122893ed4060d348c2fb8b26838c50aecf3f577c34c0ee4aa4942c08987320ffe1f8386bdd366a96b635243f83ac47d3f8dc1091c300fc9b18ab1be80d146d119092e83bf700df3d4821c88e5cb3f29fa8975a40b23922e146841c8a9b7abd99931bf63af77eaf25518223bee80709ae22053f5f004885601888823dc3c91512cc60494abd55aca430396efb1c51ade63c2bc3d00573766605b7227bde7ca3446b724bf25682c66217024f0a214e8e65955434adc87f451725e3922e1106090509970b71d9174950cd9033ffbfa9a38ffcbc64bda430517a4daaf0ab2adb37dab6523d839696b84a30996d8ea66a009a01e02ba819b579d98e49ace261b07e1868a9ebfa47228796255b958d45ab1465318b331a7c8d5b5bca72a8d6c86ba83c167ebb968697a66c14cd0c783c2d3af9095c1a6dc6b07b3b39b9146eddb486ababace4fa6f085c028a3961ab775d9638dc5d00021e7401166b1506957754398aa1e477c74de72066565d9c0cdb94cc2c48d82deee45bddb1700358a7dce77b92e1fb19642cf66b87c826bac6ece7fec4c095c4c037a1f2d68bcb800a0de0e66ca0e1230b226c315f1d73331eb69b3808851adf53951b92f39a1b3ddce717cb0f491a4ece3d722f6d87421548660735c605d6cec7998cb79999d519995bafb6c9893f376430ea179c8a21ea6938997fb6b1bc92f6563fe4e8f9d839ad28c252a2df34059dd6857031b05f97702b8d4dfa7bd09c67cca90d233fec45bb31080319ee9916d58b5c75d96c8c2839b89da55f2a023230c6952290199673c8f95c44139fad6f7def4fe77f0d5b69107b6b36d7b3b79a9963d564d9b3f95b5dd8bc4bca2963bb04496e72d641cc40299eabab47410505c3774d1a77588f247286ecfe2f88b54e85fedf96d849b3d97ab7048a73e1cf1f68ac2aa27aa6255bb87c899715f4416b352a0558a28bad51a5a36a4e8cbf36c2f0c0c347ecb38029bbefbc4f3f51ce105ecd3c067b27acc97ddd40dbe25e2d3934e1f10636bbb58c5526a0382e958cc84a97b2ce64017bf8e5c14243a558333b4614dc91cb60463f8de6a80e386104cfae22820dfdddb3acddfe9db1e239323a71445a59fe132aa116629b678d7ecea1190fa889df2bdcdb346613f6ef6eab01922ae1185d13f9fbfdb2f3217538f5f4bea3b8e4a4780cc5b0043f85a28cfa60502f6f2e4c789c450d91fba79323a78119363b7734e5b6f07d1f8b21e2966438e5fb14ff282a790de72ec9b6d4b2026b1493aac39bda8c826216b80914b2aaee76b0ee9c123e7314bbc67744f5767e8d334a72e8d9f681799bb814ea2af23d59ba1b1d72270e153919680f9d31ef41533883b74e7a2dd5c6f26ca41da9785b3cf361b4141efb7cf3ea75741860ff5a940c5fc63475ccfbe5893c72b352e2b25e1bcae8f9516318d2114b8ae40f4ef3a800e87596f932efe6b63a475cce322249587fc12ee68fd9b5e7468f750ce8838989f2618d0dce6eda1a191206ad06d058d6590cc81f637aa6c976c3ebd29a490f2a841bf5d137f6926d60bbcf8e1f1ee15b21c50191881bde2de853f4c3772238b515011d5fccb3596da2c847e26338c896ff9bec0cb5e0e8d21f71b9ff3bd5f22c8a2ed5b513410f7a5bf1082b872989a1479c6a71e93caccde6ea4971f55ee1f9135def466ac643dbc84cb93c25172bb0eeb4942e8189da7c5051f38ddb2e5bc355ceffe15ae4dc99b95f222e12ce50ada5e6ce3d8f6bf1aa0da90edc124274dbb95708942951449fbe75a84b50b768a3c904ee081e141ecd9cf82da0e7dd9d322e70bd2720afb25763a93dd87a5c3511f4db5eec202ea6e88d7880786bf2a572eb04d180fe7f4bacc9f2d778f268a35d384a7e7c85579e21fe903f2466c307a6430145908d957f524ecd641074835f03a886f956e1d246e00f1a705beaea7d2cf66aa9d5b1f63e5a089a0561b345fb4c965216d5ae57e5d5c8e5bbec256285c13932957234e853012f688759a6b948cdb593e4e7bd043f62e4cb7f9aff6315411f3dbce7b3cc09d14d299ef7e708d152df35931144deaf05ce8f4ea829683484dc2d999bb80a3177e7eb0977dac92a3077bd9a6d0352959c7d12ad08ec62c1dbdb82b44ecb6ab60b98fa44d09950b7bc9bab739d7f142b1895a1a1b11189cbc67dee96f46d41a59a8f117dcbe3675c79dea7c22bc343452b44c9da71afa244ea48091771aa4d8e1de75ba40149df29973daf4561e53a62e5df974258967e0aab8ee7795086ac3cac39550d9a0337d98828c114e904d73dcbe0d7f6371abba056290551d44430c719fbe305e83c77f3e88c5c7dfbc85a78cead3abcefbd4ddbd7505bd2f4e9ef55fc16a4dce599081a66ca34fd1f869a55ef4b0ff02181536fb39c671b5790eec7584369f28216347fab2cf70a0108e61b77d43fed7e79979e389bbd7edb9cfe5c3ed81be1c54a767e60dbc1313d029a06fb035bf493d1a1e8128f96ea7ba7e45040fbef56794bb1be371106322571addadf5a46f4c618a83be86ffb7ef87b5ecc2898f0b540807f8c558a188a34c0c58bc87cb07a8b077d077522097334ae4b111e10231f2f7472c35c56bbc63d26cef6f5c136d1b8d8a43e0c9f25794ab19a5f778ecdd3e88a88b9f61b6b726728fe8f04d03bf505a98f7a67bc44c59f9a1bff9b6fbf08c48c273dd46e718585523a14fb98ce7366db6043bbbe3a29f0f90d75f287b5b2b2106738c582e6f863128d45d3d8ba52acdfdb302c75ff1349c34513609a39c361ad9815cc3f6a9228a7695277c1d64b7a4bac801f72be92795980e2f078c05fd4f7a4e220a1d12f2054678bc30987f0156bd3dffbf3cd76677274d1e913414e327e0a57131486d9209687a3a28a7b95496f56ebd56b2d6cdbf20fca1b4a6c426d44eed695c0daa428d7c4668c5eb1ffd425e132413a68a3514d2be5c9aed58c1af2dc0592f09a3014418e9680cbcf0eb646724848d89176b2cd97d3096409d8ec78dd98047843e04b5e38126d6c95d368d5b7e39052e4791fb6562c698ec15fc094e3b494d6e4308d026113c3d2a34f10213646858f765499eb6fd3c8410c59c379164824a8573a7d57468b2b3b4157387dd9b63531f8875900e737fab47a517e73c2b6991237379b059ecbe416ce36176ce6f34c2fa4675fe05076b28fdd48da53434aac29b8b79ac4e9f12674c3c6f7a2e67bdd3fff3e99091a4a598c80e01b05546ec6ca876b1b42883b9729e228ef4bb8d591aedf5c76db6845681651098d397431843e740d0101f814c8ab7a0415188eb80c6f226aef0917df63f09d363e4da8e99c86698847d341d03dfbf2e292d4cf5ea0e8736fae3a0bca8a66614e6b1ab441996022a361520f38b8fcb29d9dc587ac8c1ebcaa0a96ac5a5fb57d1c1e4624e9a98ddb05ebc1c8002982b87b2892201bd5ac123827c45e14d219f6f9a0a000da68815bac926e8df7547337bd776df9c47e31eced5cd51aa739b25d577c0134005b62ec484dad486d461a861f06f678c26ab1112abf9ed3036339862920c8d57c815236fb46eced41bb72425e5436f6217f82391a0c30347ee6a66ae10a1e47d471839c2050aada8e40a552ea1e5dfc0b7168b7915dc9e76c665ab56ae6721666a110834e678486410dfd0aacd4e50fdf9959c66ccd96ce8ce1b17715aa0bc1f3ceb1085d59280e919fc7076d1803f289110edd810de7d74a5b8af147e68f78ad5c9e1612daf0e780a29770f5fd592335c721e6afd222de454f25273c2adb645bd6a86b783a023d415c6154c1fa358d652203246dd54e8de53aeeb0dfdc591a3853a0c4ce664cec21291c0cf25108940110ba958957b6a41333c7f6b47bb482fa26490a0f1cee7f6d94f42dbcd9df7775cce5e3beb1458cf2b337ccbafe4acd2a53006f4aa796c802a251c998d17f739edd50037ded44dc16cd8c810e6f34781d7f68fa48c44a40947af0ffcc166a9f5d20e1836e1e02041c2d2eae4931713faf5d7bf43e709c6549bee347588b6d1d272c4920766600e253ede0e870a1b37e64ccc957a47cece7cb2f69df85e1790371b34431c392e6a2ff28f064754364338e3452f776a2f4ca8391e469c09d263df582d7e545f987ed91ac1a55d0806ac9452d14e3a29ed28515f57e8f304cfae03f3366696f50c6fb1b2d816a8db4195f2454fdc3c5b2bf9004735d14c26a65fd3087563b8674a2f2d76712dd27d0b4f5edde40e4cb36aa9bfbbb7e23959835e7975c51fc2c1d003b8af4d0abf9e7fcb433eec3be0804ad848217cd640e74547b0aea58c0e2cd0ff5e4419a74dbc855fe9b1f6e7f88f8cc30b996288ec4cac6379027bcadfc79dc984d394b7515d3635a85745a50e9806f320927c7ea6e66a083707b1ae5752a0228ab86d9a5b4a2e2879afa87de985001dea5e4c192b2a8ca2fea4472c3c564653e3a81b06a3f5e8c51e66ba32cd66c70a46f485e0101d6335e7d3cf5795f5b4976b390f50da547ad39151bb2399d7a032b000005a37f86066bd08410e2069f3ccdd3f9b1bbdb7d32ad6f9dac57d0d7cd8feba116e0b0c64a2985e473520ae28c81286af63ccdd67ff41e76bb0805e14ba78e07ad2337b5c0c39109719715bb1079be1a618f224e036a7f9faece4935ca838c17d23c1e12cf8912a25ea83ba9ffbbda01ade16c5a934198d28622e012ede3752884c4164e3e6004d1e44339919cb2d00a54a5e067261b01615674513b83e23d66047614ea2ee7ffc51193fd61c61407b4891167eb67efc51356902bd8bae4ac96341c421d736f2e90fc4b7732e8ec8d113d147d218bfeb1a4e9e8a2fe6e3dff670d3d668a303b6cee99cdb9900c6ae1eebe4fa2023c3bee80d595f1bf1141682e73378f27411c27b5bd12f9773042382c25ccbc621f427fd620443ead639c7a44a1540068ca1466c5d542ed3bcce0a6aac019ee26138c6bd0b17d2b3ef6fdc4723f69a46b21ed9b8ccf783553818163d1a3b9a1cfe37586b03e09ba1603a3edd7ec36eff2757930b656e3fcf5c25e687887a5f73df480360c7db944b277f8485cfaec0584293aa5cdbbf9867460e0f60d1ceb192f841a15c32b2d619d9ea37592f841d992dd9076f42c02b12db51fc7cc32bf67f8cfc22861c5505d8d96b195ed60c1c88e6b14d9c34a5acab606ac540a83e6f0fab9a44dc26c716f6daa7ee68450eec592e2b3310d5b265d58f13be24b96bed527c454729d45cdb1d3d691a0e66c4e80baee119477922100bd44fc936a1c360e5c701235895e494407fd26e5cd67ee33a77378d6b2ba6e04aeead780d622e1ea9dd73dd14d30142be9618991a9ddaae642928f688245a16f3e8924bfa3e2d97548133ae32a815ff732613adfc186eaf2c03e3548386ab229f3265d8ca30c881add3fa9fff938345f1c60526324c066760c3d5fb18f34b95e237a9f9c9a7f68ef7d11a3af337fe973845f97deebd5258206271a317cc50a9b4027c93c5c4dc736d7bcbb7f9abcf497e19f8f4aaa21bea88d1eb40b2a6b031f1f3f70f215c7c34084a439dc8629e9a15987bfebd4eca0996b12afccc3bfe3e264b45aa910b681b5cae2a8eef14ae84443e09cc3b5ebe56f6a6b09eac5f4324c37e85772c2966d1103c8df4cf30ef6e73518193315de037bee52d563c7efc90f41b0100d2a1dbec0f8dba01a7d2a86fdc9e38099ee93abfcae9dba524046751e39366e5231f86668dfebde75e57298bd0d5030b48b6451a5874b89c57514feb9d1df9f71520112bfde0bc336a9b70ec4dfeae572ed7e0e7d4302ec1e8f4b21f078f86c71bccb434f03b4e151ac559264928f6663d61152aafc24037dfbccec7ca97002d282b25058787242c1f04cafc32180b8f39a5f7d6b9a76895a23afa7b0136ce55ca2f22a80b34fbefe2b45d4afaed5012cb1abbe5dec4b7df644b9c69f12990f52294981980250e5cf2a819b21d84cfd7b16bbae3623bba028478c50a4271089afd9bd795f251fafb7ca70826c47e7e5d4bae6e7fa9a40abb1c0fda4792c2b3ee3ae7dc5f42ec40aae7582f90e502653c2c1c1421281a72f7761621159227d97f720184294cf12b2cfad65146caea7d8b14af96ebc9e423cd0dfa4172837be15f92d3b217d7f10879a4befb0e13361695fc8a641f809b3fc97d3275b009691ca5bcefb4c8d70be8f4d2889cb604ace806a36f49176f186cbd639d8508c952c494dc2380b1d5dc886feef01571b5c86261c0403a0896b7c6d04dfccadf7f194959158abba8d5c6a2509a02131179e37172b47e16c0ef0f7ce0e5c7b883fbbffdae3a45c35ddb13cd65dd9d074761b820e1a74d823db563fc067b4cae0ce9538a96bb7f70c94280b15520d50e086c779b25e0cf3806b14349185512081613b0cfb47a6531b4b8855b090b9b66db599cf07a9c5c4a717e3e6d9145d86845e7f0cd6190fd8cf10db3e769f6436ff50c9af7ea5db3a52432c51183be795093c0352e3a2cae5e2593b25aaf9ced5da330329936bf7df0f98cf68dfd080c97e9e99deb34f0ad55a280c80572a7917a4863bf85ddd1b5f5a6160f4fb2a5e02322ab6e1f48c38a938108f38c6e3a52014e9b617099381f3c3d72376da3f171eeddfc640f42444818c9f13575f27fdb5282ff54900ecef2fd865892b0569bda7b84e219e7ad1d8b3ae5aaec7e0734ec0ce473b9cc04b60dcb9c00b38ad289e854cb53dc6688c3fef037b7a03dbeb0b1dc09a26e6575ab06397b7a0f4ca87e28ff5250dac6753390ec57fed2339039adb1facfa2547b53f751a0379e0abb6c95b5d858e98e007f3954b8271224c0619bcfdddc947604f7f70eab1f98301e6a9250d0b9a8e9b8cd7084a2a8fbe46a756b1b489da0c140a3d934b30c6484499e22f7a7ee674a6040b82b55ad4a57846ab320e3e492f14ad5d285c999480078ee6c7d82ce303d21d2256686e3103ae60421e5a158d2dace061b9f6be70d8b6842376cdfcd96a5536218ac87d1fa680d296b44f495bcc081fd56ff0fb89e55d2d2cee1cc25c1ce11739d24f4a82fdddf862aa3df63a87c597e4ebd8500f1f6d13847688ff0d90467db78b40b32cdde6e0a28471e738b45de14761dea8a757cf168ce9456ad33c996067aac4408ed7b11b3a83787682a9d70c39ce317af03622ed5742b1a86a23b77604bca7c8ff85559617ab0e3e11350a888402b1a2549d4b68ab13fdd1a37aa3c3fafccb100604ca95e7258bb5911acf14a853fdb6bc080e57dbd2389532ba9fdb76147055a3e0ab71bf065d55fb13e6ae540964ebbf775f80fd28205679a9e49c5681217d2edf30c4a9ae5ccd3350e29f0f4394e943d9ad409c6cb5814d4b3a4822d0edb3985d09f61bb869be95252f06bf4a3a2cd7e2acee08b37d3a841e61f3bc273fdea4b6c938c7de8ccda0399f7d799ee37ede5781521fcfaed61a510f7a32392d677816db53c567655528d770bcf2c4845b96bc34edf9a58dd1d1ecb83e37440e44390d4b307012fe60b2ec6543c57900268ee15bdffa24d6ac83c02c2d1f9dbd69e07d62d185f46a13408e212608ac3d2978761ddcadadadcc88bcd30bed0d89bb7abb4efe3f963316de608cc035e4389a2f50bc37cdd759b465b1240ed2d48821da1a57b8a3688754dfa3f43810cf4bb74f6926fd3298d2187b70562ced9f3f3e06f8b69180ba852e0ddf5c8f26b18e7a856015b908b535c78077558e6ef66d36302a54cc5fdf1c11a4997e568099e14cf99ddf9717a3b3c43a6ea26c6eb682d2a4d27bfbd7ceeddc1e2919ac17ad134c26bd77de32de8072de4330a119f1e2da606e289b07d43994727c39be331ea7905753aecdf3670a90fcd1cb711cbefcd9bad21c8743930180b537df305ae2d65833177abd649176ad0b7cb7ef46c20d1aedad5ad761bdb80f90e3d8c810d302d4a1d29822385436e6b8b9e0d5ca2e8164cdd30ae1d6a2d3bf324df6bbccfbdb5c572ccb8bec68546ad7fc5d995ff18634d485881d0436adcc2255c157027df7b09ff187c0d1c8d3a4724b3308e0e60f14e065f9ece0c9560c60d17e1d18ce37507c46bdd3b2b34f863c5fccc2506c9039a42bf495e8023d67d5d5681f6929631b0a0a48c6995760af5dc4e15d9c76b201c9bdad969da346a2068fef4fbd6bc7acb063404c87d63ce67b1fc2038338b0e64ade72367d53afcd30e414d00c993e423c0acfb947651561df9ebd2613dc7859e199ae85480bef114dcc967ec1df2aab8ecd71308a64446fddcfd3de3e2a8231a0368e57f7b4774984836db351320ccb2e5f54c11f7871abb7cf1ec24bacc7a4f2b0904f1ae4b1012b5c541244506f0e253bc86356b615fc04294ca21ed831131dc8d8e44ff2887be1d5d079df0f4490227362060ec09676ee71e2ee4f7f6e919978331c1eab124dcdf48479d857ef6409817f5ca058be9d3f578cae6659b60f137c00f04a75aa8489495a7d4ce9214e23191f52320a8252682bfc13bdf879316a32b3104edbe7b8250d75ec764214e1e43ec0058842b99018126cdbf63bc0cc09b2ddac91d04257206e5eb370a564c0cd019f10bae6cefa31cb53c3b6c47518b0c5f164f35cfc9983571af878a3f91d2110ca63d9d89e5b934a02637a50946278e410d9155e2cbbcff8fc39538b0e665c915fbe04cdf5809da218533c1ea72577b5395e06f286ac68e5b228e47bc6ca44f0e25ccedfe7beb35c53e01114a322ef5af186c4ab05926c142267c6e9d2b2fe7e65504fefc4688565a8b12f29dce61d0f2dfbd9baf5e3bacadb2f29708ebd24775f3864c1b39714f5698074309dfaa1cc40f130222a612595633cda7631d3819a3e364099ad9bea90d07d6dcfbc088c35b40b91ad9bc8c918aa8f304b7e934cd1194f89db92bcb7600c97278dae7150eefbc83a4151b3c09119c44dc1ef4266e96b80a4fd5b7e577d0549382c44a7b17412e790770b37f3dd71119765dfdd07f69e20b93ec1e0ccd008c2b7e1e377761b2a7c433c163e5b0acf9441860a28b2af3332c0de165af2f966237c34771663480e18c6cf4c92968fb0791bf870e1b75301dfe6a9e96984c013a9b8a74a365e4022a38e7e27c4fcc65c9e1837bd5a2bce8a0f096ca1ec3453bb38bdf7ad30a0d588b48493d5c7988d696ca13bf9a0ac00be63911bf0fd9bcc1c6646fcd0427e4573706d3396017f746a38473e7669bed99bfdc880f48ba0f2bf1c1a2f22999e8527e715280d27efeccfac277df4e485a9499d5652afcf212a2509c5e86660bba8f87729275d186351b512acd60da11ad606bdad17f1194d84fcbda1bd4cd03d1deb4e7cf2561ea409d45d3df7cc6f94578bb64a832fb43b5c45cb09cf00fc90e33458f13dfd7d343a7bf635cb4f06db0d09f714506ffbb6f293edc7a0b3fd24c14f1b65ad6db2e95694c03f74e65252054261015289ff87da41f6a4f91450c179ad3b8d83d86d75b70e6bd3390a54d35ac9693421436cc0b6aad6ccd638b0b508a4132483093ed5b2b06d277404a3e42b359d676c9166c0661148e907aa72dfcf570781e1051c2839294b627b496eb294b8f530e30a2bbb508ebfc060178ae751b304a4215bfbb405111cb5d4c3421930abde7132495d76ab151a9a73832bdc5050d39e822ef6fce11e6cadbe04dfefde10d1ce5db53d6996c97a353f2e67778e8709bbd36b5b6a7475cec788e16f4c26c08b322b54c8b56c2a8995d22ebcc6b01094b1eeb5ec943aea01a1d2af85932e7fc6956f04d47d785f7c6639fd357b4b6eb7107e7bb45924e9cb477908a9964f3246f0eb6d87d6575f6128ec5742df3241641b6487913c918abcdbbad336b816026c480c85ca9e6a118fffc570ed85fc3df97bf5c4fec89378730ffab56d6ca5606ef687ff1fb13f8da17161b242b9903e8b9fa9b6dfdf6b1c7b52ed3ca3d5e332b1e137d1087e9e4559e8283921ca0f6f6a2793d6f9487c471c12e724fb45f1beee96d06c814dcf04729e39da2dc262198789267a0ab41499b1cb069042249df5b43db7dac0726fd5534b614abddca626c7998ec22f86262df3ed7f4b6732e50c5c7d315aad42f1f8d6b091e8d10e78485e9d0d823a8530f812b4483702f32b31ac861a2ef0ee10e8b42a084c45f485d04efc41e583a25446053508f4f73a444e68016989f73cfdac8eee296712eb0e8f7911e984ce81160d8d3996997e1d4ffe31bc1e45afa1a08fb1a7dd876b2491c378373994e85d960b07e4fabde1d606decc9d75451e61ba93fb320dfe70c31366d761d00e7492e67aecf4c166a87e8b53e12e5fa79685fe56ec688b10ea8945830996d7f0ab3a8f9dbfe1eb6052bea769cfc5311f91b751973507ec7f5bd24f7131daa03704aaec71f6dd26fb1d0ceb1a8e825bc419942b061b4072298ef1cb11ecf4dcd5339f058a078465b9d48e37a9535019d4092f81e9c0e9d1e5272fb99b4d48fd414791322be698507ce63927bec820ced27f855fbcb504830d7ad17e5b2bb720b39278647239d03b5644be7ed3f1e837a73c75a225a83926255517d487aedd1e9bc16d43d68068c9d5564cb3c71eac47c8636af2d8b7b4b78ece018bebccc418945af7033aa84b3120b22a9eaac9ee7e31ae44693720adb84c13b3a84bda7ab67241edc366010911ae4bff75fb11884a170bbc8717c50b77716b03368b6489ec3f02005fa3f7267d7d6660839144a3c8db904b357e8d0942ec39728fdc737eca663cab533265b658c76c2d6d8ae1d3ae48faba2218d489a59b76e55f76d82c77fd4713aa5d9af0c2bdbc89e42d0a469b47738a019c236fd20242c108376465d2e3bef1e9177253cc89ac3d04037ffd2ac397f29e4ed3d7bfd14ac81e4aa67e64dd1ba8eb155bbcab0dcfc5a130dfab7a3f336c869acfd0b8b03e956c338bde9583f19febf2d6b0e4b08a12cd20f323f4a0eb90ee2a17dcd01ce7ee8a52238aafd32f3e399960675cfb213f4d116a7e5bc51bf3e2bba6ab90b95d0b9588581b8ec3c2889937f770a30416149059bdc210876160c49e6db3d147a3330370a4e335db1a9b3056df23441375dde71370d8c1fdd2483e29dd0021c8df3b89e604798fc08c3f5b562ab4a416a8abb8a5d317b6002f070a878e79a1951499b046156907130b2a325b49c42549394f0f8dfbe086db12b38c8859508ccb1cda89eaf143cf77d0897aca78bebfa134573acc39b9c4a9038fb663d122631dc16ad8c5a3a96ad6b785c64172bd779892f21aed6f99c4dacae08e04b105f1980479391e96436b241473c73ebd1769eee61bca1abe16225fa29219b52d72e37742bef8e092735af5ff23362df575f389b6dc081df9b9dcb9051cb189e74d80397061af80496af366782badbf05505fb065d1db188fde11665c6af941dce5e9c1132cb319ebaab51b7200218b9a244b7d70b22580ea73df80a9d97c4fdfe41f15abd8dc26c8d3c4ba3f92a9783170303796260c8f42016f9f9eb3bc428d3d21d27c24ceb5114acab75ca1f1c9f2329aec19e8078b0fb39b98233803e853ed84e1fea85f302523609a51d9367c7a4011d2d66a3b7da99172a1341d6374ba3a3f053dc62a0bb7538240575bb7b0039dbaa39d16d3f25321f7caaa717edf7dcbceb01f9352ed30371788a60e2427dcc1301a8eefbba8cbc685159dec702126feff72d324b6a83e6b5071d90ffde6b5bdb93d8b82792450895ecd27551fb06f4b569ef9faa042ee5c3f437a941ee6a43e95033209a963b02c5e16f4b205dd253ce75182988236be518cfec52c1fa00cd47fd3384ffa9bc9f388b713f2cdf7245b3997d89e2b4389e6a7d472b38f9878c3838cf0e4c14b4444c2890cc3e66cf85486a44d7a31bc3749ead0febcc3020ecabc27aa695006c7f71f3531948c9389a5b4a92a4e12913ab0dd5b03764ad9e16a1d6bbc470459c12b6860e3a64fe79e40c40ec8e5dfb23ef624fb6d9c27ed0b28d3b7066430b8996535f217eafbe4d8664450bc9a5271bf2175940074a8baf7e198e6399ebe0612601aca5d29a41457f80d2939344b23f8ae9417a0ddf9ad853340c7f6c115cce863945c3e7a0c6d2d19687e910520fe79bb281fda3f572539df2c763de7f5d239c4c306c0dea0e831d9548c65d94ed9dd4945b046a15787f154f3bdfff515d3715167b804a6b0efd910d6701de2fa74fc73710ff1bce46fcf24fbd6f643b65ef661498e341751b0668d207687e578e5e54e1adcd28d0ed7a6b3581ecc85e001e092e4a12b232850b903fb6cfb91e6feb7a176f0459eabf1f970119c8dd93a31ca20b32f30bbf49ea607c8595b759ed661e3b44302bbcd1d3cbf17ac81b890052fabbf63eab71d4c05a93f78337b6c040ac71e78543ac9a2527bfabbc9a8c8930f616d2bd82f993e5c15ee8e4738281c05e00ad7369a019804870306d1634185411d244a89f0f02280ea899acf78561e9c5b8014681108f7f54c25c3252d31876ef81d599f2b3748e23ef022135f2f04135125a914846fd6e9646762a32ec1b0757e668efdd8f258e313480385c51bf3565964a96199afd3a558e433172f935993a8c4054e2ed6d7db29a9c5cefd0fa6bdfc5a295a232b24061cdd3ead20d86735f12832af26c9c1a248a47982a2328bc15576f9aa71c09b2c7e7711abd6e2a075e9eb98cdc7eeb21830d62dcabbf4f4db868613f28309b5cad403636b83c5c97513d4ddf35eb9019d32e6d6eadd68185bf8427a00f798f8c0b1ba4d93ec62ed5d4e0638afc2149136c65087d150bd9a2f1bd7487eb674b1eb32a64ec90a6bf4c8b506a006183832e6fb176c7e35f99e8e8d330b7e9244312341bb894db95abb9c919da9a2699ca456a0d3bfeeed08e630ca6608de227b6b204c97e8af9e1256a9be7ad0fa451b929309c51a11f73c1d2f1ca7bf7c433ebefc3032fdfe05233049c0eab2c20f96e6b17ca511003d1c70479fe3e27c3abc8397f15286589232fa4307d607d93048f6cae643158e76b2c50f6e9544de30c80b34f81462aba59ee981e6dded43dc7abd421008de46777d0edcd2f2a42f48ac48d1d4f7fc4beb43a728bcc398e5259d0068fcf3b0756b05524ffd7bc34515245ea02eefc3b15c8be8739154534449367d4e141f9a77c71736ddb5ab785dd52826505a795d5c76f1ac4286d49fd22a2fbed616bea1e488e429150297e4a77df7cc4a9bb1cc6f1566127f0778797b3b205cc526767fbd1eb191d6db5047965f48094846f3992d76519b08fb40be90b51ca71d0e51d89ca45073e520d6c37f9a2aba60d1fbe41a3869d46da21b4f0e9bf1a5def65e39ca80a2fc59f9552f7635672db20595d4681cd27873bd2793bf9739e2dbbd50844957b2b3942a7594511d1ee29f3680d8372d55158613838ec7b2e08eeeaf6e23a55f321bd479427bdb9245ee491603ebbb7ebf55550ccd2d1cb398fc3445e4ac0aa7caaf3fda178f85245b6cffccb76135dfc21d482c37988f25f0a9e71c9b398f1113feec3c119635d47b2543f87439cd371e214b7fbbcf675e62aa4f7763be3df5c766553eaa7d09d74602d3a9d860a79432c23e0833e2a1ea1b6876dc3092aeb7eccaaba4c6049974f63703e1bb608b319ed38d981ec773b9b1f7528713bd255ad07915172156c174a50f6108f45c0d7c2e5c24f91ec4401f574b281086e454d115b99c42ab98fcae95ca1641469b9838d3ce402060545fbfdf73fcf24b65ab6dfc23074ec76246bdc25f424e629035e1d53b608aa9ce46cd1ff4baf2681a508a30ed3cedde714141fefe85991af672f410755be52299f558c13ef1608e30b5870ba313d057369f7ab617ecc0aa8703d2f0211f0b1cca44255d90a389e650168f41c44a8a270bea5d38d86fc5448bdd8c17bbd166114069f625ec4d067700481936875ac8033778b598b0e393a7fd01d894c05fa9ce0bfae687a1e7412936c111f252b094656bca012f88107dbee27a1afc6582700596609fa70c7bc182b1573936370e11704e6b82ff4336f67e9c4f45b90f1196305809aaf9ab346ed51003b4ca4c79a38948459ae4e475e6d08f303a135c07d6dbf5e00c2d099b91c5c291f86119dc128e9ddb7ed3520a2e89c22cbc91d73d6c360fa666fd4da90b7fe03614dd1842b1a75911de88323481d4747dd506da779b4ad5b9a7f47eee53c0008f81190adf0c5602be26af534460940b63c10620570229e857c3f3b1542939d12fcf9ea5735067bf31944942147cf286d6c9aec13c0b3f52e7ee6cb2ed8aee4b44f6cc6903f8d483fa5d4fc8b2920ac3618d757e5a14ede3ea12577175f21a9da2a33127149a5ef62b87ce79869b804305abb1f27e063b36cd871ed8f7ba4b274171a86baddce3ed2697d1795ebe913576b846dd1a99d56bd135bb9ee363906adede04dea1a25951a9ca70a8f60ae5a48c036f70717279409dcc27be3fd75923d5fad6669ab92e0a8174a61814cbe2c8f1c16f4dc89ee9ac1be6c1c36c3538046ed9469c6d9247fd40c4cb78be2a9f5f1cea37d06192d1d90b601eae056ca6a455aa6763e650a13bf16cbfa0b0793b296f0d36a7b0b3a6372419b8129fb8d93adc2c453fcc3efde93a44d468d0924285e50f49d4d63f1403e6cc279d9caee894bdc32f04c95aad7f3259bc33e51d456c6113415ff737d50263ee179fa35b18fb8e6d8ba810f69c4d9aede0a0e01ae84a2c59dd8aab3eaaffec5d1f3d4c4d97a4314f58494c4af127a4d78b10d664ce825f8731ffab0f2807a713e985408b52eaeb789d4244b5aee6e2b5e71bc4f4b37ffddaee72d1785a459312b6865d736cac02966be79065752cc9cafe6ac50c7e2f7d0b24d75cad7a692102a8988a22ed1a759b63db5e544d0cb7b29ab5419228bca0cb936097566e786e94ac0873275c1dfe8ff8e7e24371e82de2e780decc4b7f0bdf1784da2ec6e5a0eeb4936b134f1c7d73e40de84b6b6b9a8d862edf9b0ac79c5b0fdd989694a6f8d5658b3ab435ec89e78b487d09b2ca3dd3c751194e5ddfad08d1fc0b987b9c0db6420cc3e7af2715c1b72077f0d921af20aa2ad560f3c2f959c6140e95c68cb02aa51aad7097c1e4ad6edacafbf3530b4ed09ce5b5df74224c6e76d9f177d9040f4642c88798d211c3a1d43841c4cf0066b14fa0900be1b46b4c8853239d3f7fbca52824151c847bf4705183ed7bac47b730292caf1b79a527006e59777eeff57696b3fb75d38abe4f21f19687881cc4a388c3ddb7659ece266e6754f122f1a02f272af99fa290681c86fb0e2f4d3b85f95da8a3235bf724df1b86cad96c3e8b0b8a3ede0f329976a8ecfe58394cb1cc370f0374f774652626511ddc83bd125d8e5451a643160c20a18d6faf9cd4da79ad04fbc5b9514392092ce207827beb62f52e4b35bc6117ec20f3947a4ab5b29e069bf9a396c0c202ad29087a22ae46247c30511ea8272d2e81c19a159dbd220c6d59a3f49551ac904f534dd351b380296ccef13c7d5c669a088c8babc88928befca493c42d185967db823319215994179b7a9c324ea5098ff1d69cca734558f7d0d536e6b4ebad5440fa25c8733c3c0bc0cee01cfa878e09529b6a715dc47a78255065d85626a4bb998def86cc88fd3650ac5977b0724e2548a92a37c91d94f312658eab3ce285bfe4329cdb94f7687acfd6d056ab8773847395a6c85679f0156ebbb95ab9614a0d97b985c41d8ec2c1a7b95506b66ebc774b6f48e68dc4569042348810764c6c5ff2d953a177fd7142ba4a46b3e6fad99e9340033652522136023312bfbf4252b5bb36e92c77c35f721b55bbaf844ba563ed24d8b0dd168e19a9a0d5e52e6ee88aa798a533baff950b56df4ab244ef18729c8eb2da22b57088d07d69662f3b2467db8abf9537fabe00746a9d8eae15ce48e8fee0d724680661b9056ce1563990fe9f3f5cdee9fccd7dd1afce1961b3a436e6703f66d4f0a2b974142ee072a1da16e671752638f01f417c12fc71befbf66ef97c968144657c72d06f7e7c075baa5e19173f200f04c4deea0614a66f80313184ff24e0d71cb3b67bb0189e2dd8e61b55cafc17d9553b67cc1b5b0e57f2867a5a4a5c62709089c2063bd1197cecf3e713bcd1f07403d21878c3312b8069a62f1dcf38502eb6a2517b81feb50551c2cf9b5290d2b02ece6398f5e769c4c35a05d0c2465af03de0b5b1825e273b7a48ca5d015da8a7be49ed40684f78c11d3998456f83f576273e5ebe9e9c0b4f4137ad8b8d3ffcbe07fee0ca89df767f9f81b3ef6ca3c0cd6b85acea9d055d107efbe7cab9c28fe2c33b449fdf0babb29884563a15b2e4065fdff20e3220c9cf10afc4e57dedd00e73e01ba608b79fa84664480abaf09d04d39d048122fc4f1c80ef1d6694e3bb083f537846fca20b7a5966383d81d33354aff6cf116cdedeea9fc3dc3ba6ecbf55cf12a52e9766d8fb68cbd2cc26236e7018732b08d40f0bc6fc51ef4b2f8ced8b146257bcaa276cd2b963fbd6ef2951accbd650c3ba94cc01fcc2d68f351b3e8c78d7c55b491956b84a97ff0f10d1b0f577371f9f3cb37e87bfeeadaa500994a852b9651aad1df5dff2dd1dad778f3fc634853db5e96f6fd15a917e417c55838027c1c45378b4141fd21958941abe68cfc1e89d65018c0ee75dc070af0fe9ee0b8eaf58b0e25769bf055d5a02215beaa0511954cc20b2a6ac0a72b70f97eaa0fa2af254a797924d91f1eaf1bce40090ed0a72084b4bb29b78a2b3967cefb7b15e7208d1ee85a7e58c5e80e845db4a85a9f0348b5dda73b80f728590032ef48099d7248292e519ed74b4646e0b3dacf90f085462ec78537ed5d73597aa15c7a5716849aff5563cdaf89e31194a99ddd53730132d83499118dd2b733a0293270237811030f7f066f1cd4636836cb21286ac78d9fbfa41bca8549114309636dba07b4654f2cde690b9e279f4cafbd5608b1b0183179b5f199ca429d2d0c41402d9708efb66b18151a9a4c9c6cf8506302f94d56a9462423c693a60b7c9647c93f9f2c85edf6f46efe84cd93da5511c9496e038b01c3e56996c46fef0127940880aabec9831b243948b9f6d1d22e605bbfc342c0b9c7f3dea6d7a3b8400e549d31e833738f0a2bde430c3c0e5e2e5411c983df45b881cbef006ac5cdbaa573a5b4fe13458f508bb41706bb0e8c62b78ac0925fb65308ae0676ee61280b5ae4246d42055406de2af618b2d23ea72b14e9ec452bfb900712a60a6500d5a4bfacd74309498408d8f30fdfebf3f4359207d4a7b691760d3a016d007685e852db0e017f2014bb8074489741693bfc001d98796724dd6c53aff19e3e4e7a73c2ccbc676882ee9a4a5ff88f283c27d66de2d14ea7c5a25ca3401e963d810ed15406bdeca59ab6741ec9c4b4e234d7c6b47a9f60494e077b43becc8a47f7c19cae5213fa3cb66dde25b80c7d64360e1368a3af24521f440f563f1ec6e0fdec22d8cf05e33866380d9a2c8a3695fbf8825928bc6d92a5a7f8b9bae27630d164f58be65a608b79a8b99bdde988776c3c66f7c27e53c3f043956f2f33150c0f1872560e2faff2ceac0178b42e7c6388a206cb285f458b4ddaba20918f637d34a45dbdf03c92df33c1b064429ad81e347f519faa22a12e25992c452680c537ece2ee240aef7879d3868c0459955dd3a4763b880cc82d971f0f94907440cdad8bb7ef230bfd3b8044e6caa71be29fe9960e468a8458b212ea9930413e0699034d534c7e116488d43ebb296e69b20560be8ad2cfc68b7c39451f904b78136b6881c38ba11c457828a531f40ad07c0e8cbd31576c12f71f765ff0cdeae4f1fc506150dc4bdb407067f67473fa1592b25cd82894d1a49d708c0df628d918888596673d3d86b3630d1d8bd65de4cf9e166c4c5a537ad84393c1007d32bf987df269f78aff3ca116807cab88b3fbfbc4b4948f7b2062ff9279b70b6155b003bc1daf05c1fc26c59534c949d72b9e1c116ed31bd7b79e4ccb59c9bb93922cdd406ee2387138b9ae29d06dd23f2d7b3499da3c4701ba39099f2a371a3f39e1f952cbc53ce206989b6b58e8030049a90b21d685abf1bfb5af7e6c3c71080ab5a8051778b11f8fc4a43f842a89de78f71c2aa0932ba9da645f380fba7575e6d89d41aef685eafdde1a6efe3ab30ca7c1608666b19820fc52490349e42854543da7d922dcbab1ac01211d9c26b458760c1285c03f4daae831b732ecb00706a1d266f6c3a0392aab57df08b9cd0bf0e6ea795aa566a37165c551dd6ae66f16c142387d96114ec3e17ad6688ec6fec421ac390f09550005be51f9ddbcebd3d95f2692a53ead9902d7d60e8a708680ddf75a999f76b3a4c5d49a05f06ff06a611a879c520bfcfa86d8078a56ac6bf7d821ffb4f9b2068d8f62c21bcfa85e1ed03b986f6432f4e98172c52a191432668d905a715ab443aca91f29d6b7cc1e4d0581d851ca150d4a87f3c7464304d39de7c51301f3f605047a6cd521c1e5036d592fada8902b3dcda01676e33e381cc30a4d91fcfff2861ba4d812e3926c303872eb68db473cdf4b2cae06909bb8f82a3441a5365cd2b8db4f52bc2a768ccfd3608e7942a42ccbcfc53dc17b79ad3a46d9fbb129845ccece99eed989566d7f41dff6e974f612da967aaa8f728ed082b15c4d2739be02d8101a4dab4898dae9688c4ad51148752c2d2251c3169c349e449825d70831ec1f0f005a0f566ebe35aa5e90db5b80f3cdf612a1bdf398d9694c2744af04398cadead908aef86d3a286d99537addde840bc608ea180502f97336339f6e0669c70928d47b5faab86135b6698994a75706b252eb44a40b7cc24dc90baad6941bc76d164f50acd5da4ad7e32db0d7b95e35204ce5cead33b0c5b9f5185d39fa3de5750e4871f6232b76094e402f054cbc9a01768b76ae5b7630fbaf3bf7d3654657c2ace683fc2baa66625484bda50def6defa6230774f633531e01c27d5d2893c2ee04b23bc5a6f9b604e0dfa62c764db9ca8d1615f3ff669ba1ee7d17efb88f042c6e5d3a546b0f639113808a5f34544463312a3d107f20d559b7a32d95d768a2c60d37e3837202c78d84cff084b19eb7546400c61770b707e4652dec208cf469caf9ebbe87cfcfa3452b7acc8a191c30252cf67ee542b5d02e6cc719f4900a9d7a8d74a6590b09eb14ba132c50bb9e85e78c98a4020fd6a7d6274d3a9c041140bf3b8f5207276c25dce852bf5f60fc29447329f8e83a758633cb61ffd26d5c41853343ffa27a7d4d8207f44e64f720b8823baf21cf03f9362d90f33835d93c5d2c9fe73477af4f298380fddf2eba5f9e9b3b4ade492b3a99996659096dd8ea797aa2ef2529fab84c0f849c8c6c75c095412a55bec8f0683c74d699b4dfa1d82b829a0c831d65c709caf49bb8e08b55699b0acdfa40891a334554b1bb5dcfe3c6790084e0e7247c71edcd7b7e46e1b5e59cb76e36da5447f419a73fb14cb54e194591a4c02427021ca58f97832c782b01c63c535c4f6e27bf69c94ae11527a566daad3c9d0062cd207dbff55f1374576819d1855c5aa62299ddc91bf9d9f2c813d947e0b40448a7d76229cc35ffac0355f5767fe5d3f2593557612ed3e39df7fdb6ebf90435e320f9efb6ab2463f2f2e9232eeea7161b307b14f20843f726a7ab59707f51c70dd134a2777b6c2ef4d8fd6e4cfe4ce75f64dc672971e556f541d21d92082c114664f95d421e0564792f8eb8afc9fae9cb6a363b00a1d04009f03b20b14443b54708a0b83bb8335c41452f330688894214591610aa88db534932b3dc318582e202ba56371537bf81a3831818e1fc24df3dfa5a204b9668eb1ec076c62b1af77615fb2b14a1b509736809741c966a7431d206a7d75b53e2210cb784faa4bd62cd4e5d9f8120c51f1d557f4569573122c221ab8d95e40e6a4a3749b4f42557cc7164b7467863c8171c23232a4996c600c1417bade4ea2c8c67b14ad1915df3c40fafe06266ad1df01d53b202f7d3f075c8dda402c5b9fad39c94308a8f6cc5f1ef7eb2873df927b571f1dd9add374323613570584e335773efbde3432a1d6f1377d8fe482b6f17e6a17674f1de0a6770c2d3c9044eb3c7744d9e2eceff164f22123f392bfb20ab1c60e5c8bdce5f63e1e0c7949f42e5ebb2024c8443109fe7feefc0ab2d230b74ae534fd207893965bf52e6c55cd958e277470b4ff72105bdd7cee82682c1cf6b48422581ceb199bb48c98d5d588ea284fef5fc228e649db46c9e267118bd7976594547c38fec10a7856b95b5fe94b0aa694acf19aeac524538c7948cb85b889c75a5c7388511873fcf0cbe2810ee67b265ec304d3ff20d65c708d4f98b47b9ca6e8ae640ec3317efd9edd91158d469be633948627972d0ed7a1313255347ffc5ef5d278165ed8883fb8d3304ed05e9e7acc190ae9667052a126dd5f3960b91e2ab6258d4588e490744d9cb1dea32da843cb8996565cc2ab4cf063316149b54574e7164a5ba5db7c1037d8f5d90b2083a57862a7cf574df036183beffbe0ef5c827836146bf5d81518f6d8cb10ffbabebfe0910cc3c12f8b0cd97ec3b36efcf2e60cf2b9a31aa6570185ef9c2fc5f69728e808015d3efb564944f66750440b055e987d46c938e6b7b9ddf3f070dae9cdcbd1b240fa04af454814cd64749c6b32cb8dc96328844bd8be4fb6ef0fa8c0a3b8f7da058c299d2ae20b47131eda40e68571017ce1400a474f0d08d04e392fab2aae067b1d4f984809623f08bffe8a1414de23cb5216a8bc8b4a697a834676e5edc2bf4e66b25c405baf5f79e8a56ec8995eea56b1e389631d6674e1d85ff54c40a967dcfca47815c53dec184b03625e8556945b6224d9dd2cd5ab4f2ce88d24db744668e6d4d7042f8a69634ab49014df997f5d99f6b9c3571e15101d4bd73307df95ab100ddcc36473456e294253b64698cc0900f07658a0dfa1557c444f7cd609bc0a386376db50111f3d6fee5a9c1286f24f8f923c914113c5a264580d2704d445172e979deec2d3605b3baf1e096b2cb58e21c7d41a71933cb2a265913786ec97836ddb39215b01f9a7e496efa4b8b76be69383382a67ea3bf91ea5c206469568a5151ba84e7d4df97af622a9055b445a6fe2a8494f782cc0e9c4fb96565dec6694f41c35856d763a5659b1ca800023a83bda7edca15c1d25edab190b98126e46d640e3277d6447121288de70529f17a1b4e04b701b9ffe99bc8615f8c9a5e3a7eb27405131746658ab65dc387740fab46c39374908bf2da8a137174d49d066cd1ebb3c3e65d2c79c581bb9217131765e83a639d7ddc75af93a2fe2d25e65857dd89c6271f6800c73452f8595eb73d57d87bb59f1f7b1fc66719b6ccf057626c79085ff03ccd9573960a1ccc24cd3ac3e9f0d04c60529abc14030ad0751d2157dfe1cf0b7a73e10903bd09ea53ec0fbd369ca61f878d47ede4385eecb145b3cfcbdebaf566fd5e37af4ba62521e6c3d8cb1e533885e67e4ab4e46c106a6af86b5838494f87570966b4474c0cd902fb27e6b3a6aa023f8a25bc0f31519064aaba5e73410d482d119e39e2d00e668f9d2649247d533dd9662afd5311624041d4961d42fce9e4a2b31e3d3536a1863136ee075ac2dca50e79fddee5aa22b0fd3f1b44b0b13ee39918da185e42d7b68353315e08dbf4948587218cf39e4d1933bb94acf0251b14c0e6fbdba305bae25c8f29f40548c15363f774413a2b1ad7d89826c4d3f22fe5dd6d89a0a17b2d9a0db7770f413e59f327518537914d0138488c3bf066f83eaf9c5e273ee121e5eea73220894eea628c138afe3f7f3943fedf3f3f6c797695d20d96413efed02ee0e1ff46204d31f089d4b271c82463c4e5b62f4f04378f701c59539f39143b81cdbf32f01a12eee5e26d1a0fffad89fe115a1ae5fa16c79dc89622e7ad0fc14d7cf920e5696546697bcdd27d773b9026e7fa67e04241d7d8d1995fd085ea3c43f282d63b0eb39d1c4a1ed814e0cba7593eb19726c9efc2fedf11114327b03287b9cc0d7db56e2da8a40ca4128a7c0e906051dba26c9e1b7539b45cb26b161fc1a4f7b62a3bed7089098c352fd9d9213a97478467fe03fd5b74b5e747cdc5bc323c560ce9ff225d80ec6f777ecc28ce0631c8b6479500bbe19c4638f0570831885a5045dba745c4df64f939cd08964a823f70042f9544d7bed10676ce5b1ec661029bddfef865e533b6bbc82769da49e8a7bf4d971b37ce5870a58cdae0f312c8013662566121e05a7595bb1fbd7fb56337383b7837ffe2df3fdef20b8fc6e663f7759581a881d21efb8f74e3dadb14f429511b06817217a5bf77fafae9888a91268333b9546aebc49e45006db3c9f5390986e3401fdcc8eba272ede41ff7205b16cf5778ae30e35ff89f4236301f53f8adcfc0e703f5c07103d21fdc3a10b47c7aaae47f8016c54d9bd1daaeafe8f340479343cb9f7b1e64a758c79bbef8d2bdfb41b2a3721abff6978a7d2aa95cbd829f47530feef6e4b67dde97e227df5fde8b6f1a814e0239525544cdc21aa3dd0687803bc7053902210783d1d74a04e89f8dff191d7a62e422ea3f07cdb6f028d7b7cd6a8aef86e54afc32a3fc8700d972ad4c0eb098a07fbdd8a135b88e6cf90dd2c018d19367672c191774a4eec7a830e498bc51401c4cea8eb28dbb6764fa53234249f630a140b767151fbd4da00580edd0b22b47138a5c1f5bb9b38522a6958b6c855dac6ff7bfd7ddeaf1f5bf9f11265015a0853673e303bd244e5f3a2fa886c7b7378f6211f5174bd69610d9ca227f25017c4ec835143481c3179d9f7aedf4e224a520cd0b87034a9997944914ad641f6b7988ff81cc95628e503565a17809fae942614628b3e169a1c228826c764476d060baa42f265c4965d061c84441e528df4a05f5560fbae4cdea0001164294eb1517166a08bbd400ceb2c3dcc0aa8d75be26f90e73db4c7a7c306565df186d08ba08a787bab61e50bcda1e38d755451fb358d3662b6a9d96fdcf29c5bf0051d017f99f2621754fce43be33f5bbd41effa003d69052f58d6b7461d741a53ade6c58321958ec0e66ce0f125c6518dd81a1fd68b4f19002cc2b4855f39fe4750876a3a1f1b69955493e5d6ae9796ffcd3ec95e99fb581af20618de296149e26e4e7a7d33a7e9f06a9e756f22729b6808f16e1604860144461547bf96cd56fdb8b08fd723793535a1aaaebbbf8e7f7fc5701da74890ebf7aad9183cc626c7c22e342069e301003eddfe0224da49974185ea87deb8e8c06298606c3c089296adfa0edf0f0fa055a34ed590d7ede89b24e5870b6965e2107a7a81536eea49cd1992e4e180437dd47e881d629df85658b4dd23daf8c2fc60b86eb3c242d2b898f1fb7464a7b0a13b40fff22bf6cd25f029b77a21cc5e50008ac672217b33733ef5f37862cd1944e9fc9e6f09b1271b19e649ccd1288d64d9efa89f108dc1b9fca981e94757e2c9e0a1c2ae4972266ee3400d12d51a1f3c6d760376314fafad8d237b364ad90df6716c33a262492e40e6dc4eb08d586aa7438a63158316b064f9680f872d9b0aba07631c0d0dcaab8f88c5376a62bb51ff764330f84cc32210a737c3bbb9ee601aa87c6160075c2205fa0fb60f1f8261dd7d9b9dc55577add53acb7fb58c6ebc88156d06586585bc7987f79e853daecc508c6b99e828039b2c77ac8926672b8973e032b49aeff647500003eec9f33e9ec65405d3b7a5103196d418b5365d972b7684ce1208fda527931646d6ed63388d6e6443756b412a57b4a2d3135c1f2d656d660332eb2ee3a58c78819be027050c40a28829baced7664e268084224ad6783836994cdf2052768e8821d77fa2c57ee36e9add33dba61770b95227cf07f1c755dd66281d598550c46358b3550f6fc082eb193dd43e7a6121ad51d889ebd45ba7247d2cedfb72997255b1bd4de39ceb0dfa8458937c59e8dcd106e8a5119bb6c804962f34bd10d7fc5c367e2b105fe896d1fb2bb6d62be0d8c54a79af12029d1ed32d9f005ae258cb78186648d249675f447e758ea10d32d79d38609870c5e8225ab4b111c8e31ba25620e401aebca1ce2b98bfad19996413607aef00c93ec51c081f683462bfee4a207ea3fc482397409c079719296671e12d3c383407147e67aedbfe1ac3eadc6f54088511267b6a973e88795225677f12c26c8fa948b3e53aadd17ce5a038068f466790af7890484c27dbb81578300be317413351400e553da821748c84ef47c557b5730d758009097861f432ee55c6fa1ed057944b4e83da52e79d13028894e3be1f3bd4059e79194f5e0ed17865536e699ce23a79b702cbee3e152d0306d4692a41d01b7ff2089ab3db274208d01c99242cf304146f7ed2d10a8bb090fdf0afc0dabb2a99e025abd39aa3ac5b12008bf7e8ee00053c7ffca63a00b58179a343bda3e0da9e9167b25fa6fe67c087a9eb036eff41762a3cbccb2d1374599c54cf3f218f3d79d17643eec8da0dec2d5597f869f28126531272a8fe8602e7e8625cb2c219a05bd003be578559029185778b68213ed501c28406366c35e0026535d9453e64a178ab1a6ec7113d3e66720196e6fb2358f809e2a912ff70eefa2a0f9bfc7db93120ec506a064119a519835dbb7f03ba52f895a457051032f1aafc3dbe3b9d7a926b57a50a81d8b6c9d422629586e6d722f8f3e45a7d8fbf262504db09a95b8d89296bceadc7b1a8c2fed803779bbe4a6a9a7128b507a0f229725e580d55ec934785a23ac31cf598aaf66702a4ab939d2f85d1f49e7913d5b8b4ff969e7eba1ef2efce91fc580c557375c787cfa1922d08cc8add6ad48f6e3d3fb41c62e6a83241fe842d1400e26866caac6435e7854ad6131723469ede98c6c4187bd29b00ae24e0c0dea8fe04525735e7ba42f6e0297d17b3627f5b9141c2fd8b142ca402b13475392467998207b92fbdeb0f681037820134772c8389bf1b4c3678c70258dee367115fe25c0713ac3bfb8aaaec9cdef7a3ae40c54b8e7601fba8f5390b1a61de59489de724e265a87903cc42d71d3f467e5d3696a52f1ba3e83edcbd80ae4ed849b6188d9557ab9fab32ab5120d7b783a191ed49cc8faae9d57429f812861ec1c85c3191e2a1d19b0aefe5c010b9170be3ba148629b2cfabeb5fe7e95a2945235bb67d4265a212aebf4dec7a33b718d606244f1b5cf2389e64b40bf8095abde82be93b1369990aaa00074d16ad4c3bae46ab8e0ebe7ace16ec4df4cf57b8afb54dea7d90a9ac159e37dbec0d0d53fd90f86c0c7895f2e52905b39336dfbed669e1e0ff5f539eff8eca4d3377fe9b4c6e983c81bd8ab1827c977afbcb4bb6d8871ec013f0dd7ffe09f17712030d8735f2f8d2d200dfa082e7aac59ae79d7c9dbb062e641763e5d386ab4cf8222fa9a3e056f7739efb11df1d34924efae7d9938fcd18302aa29dde7fdb0f69bdd4ec259e368291546ab352a2bd31975e3e077dc0244bfff80be4543106be68477b9851fe411c8f3bb63343144debf27e0205184355a3328632c6539d576f7cecde4e83d8d0890227841c9857e82d3909d659da74bfdbffd1517e617ce77063235eeff1c7a87274ec8b3a41bab0ed6f882961a918e3ed43d7cb93bd39306975d33e6b0c59f964071c46ad0d8368436862d1fff0edfd6b92afbe78c46a0d861dffaf32fe15e983e6767486abb51f09888c087c6d1c423fb993b8094f103893efb80faac1034757b86b90ad4f2b276d7d0a2887aca9cc35cfa4d32aec9bf11f3d4473b0b2d4f428d66eb0d96d017742dd71fc0555281d0f3287fe4f843a4310b6b80220a261d56ac57fc0b78496fe3a7ccf7a58da3ed6c3a12256f274d1d2cef287498bdafb2ee4ea71031991bdf8d67e1d4f7a7278ef87d8078dea3b563c3d4fdf83ea47d8d06f36e28fcc0bab52d34d1c3c80fd10cd558ace92c3d89078c6fffb8d680521da676d79ed44cc4cbfab946864caafe5eb42dc01abcd8b4c81dd7e4e5b5d37af22ce1605bf70f918c64bef4f0efa025ccb57c38f9b97cc3a9f311dbd3ea8278c5462e8ba09021fbb59e18f00f58c5c53cf7190ad317a7010ad06d121ffa498cc9fcd20abfb01f10fbe3f0a58a11b8c43381d94cbf84859165234564e08695c818623e40ebf5f353603b920978d19b59e4bde7de001f5a95732dacae97a3d4326f79cf84ef6ccb1ba7e4b03b98de1b25b76231ac41d954e00eb04fe7391d5e57ddc3be460b82f5964eb59f5c57e41f91a6f96cf5f3bebba12c7cad1d17d02ac3cd642f67fcd6b88334e82045399e8067f582693b54da48a321e0191e67bfde9d1bbcb442befcd2442b54cfb48cb6a1f8d7c96aa1ead8787ac20ccf6603efbeb2b25bcfa8090802fe14d04157d8f9937a53fd7ef70ec847d5f9e4d02b114591d8667de256af0f5d7cff4a9a7154926b4268a558ae5bcf9ae1799da88499e1b537a3dbdb5cdb5fa13e29a516df3c05f145ee8cccffc82520f55cb6a01965c7ef7b82e5a6bbdf3120ffa1dd8866d0d37baa867f91c750b213c848bb1171ddc8a4de838a57b69b9bc8113d06d1b120079ed33cd50d87697e97a7dfdab863102d8b60b0d385a658fff473546cebf2175633030621f15dd679a63e86231a2ad78cf052d497be904304153035118b23af8f0a339ec2a7d26cbb8eabcf31e1d1e197f33caa9f84555e882a6c85bf657f2ea8bf1da9f5fc63711816b535c5b6a726f92f88abb049cd7bf9765c1e2d0dbd494d665b1be3d25dd459ee6044cfc23e05e67b7622878f684ce081544e5a16cc75a92bbd83c29dccce061d18597d3642b0d951f1b6a36ac676a7fc4fc8b4c49434302e41d4cf42aea286ee19199b471f71c54cd22b79dd0fea94fd89587bb4cf1ce0532f55befa6229a9c6d646ad0199e5026bfb6bca1f4c0058fc8148829690e3f12cef28cbd4a7aadee4c99fb135e0526c40b20d944426d9f959a3703b53a5f16f5f466729daa3db458b19c47227c441e14c6c41382db3ff80d1c6b63250292539935488d7a1ebd3acf1f3870ceb8230e6b2daf47bb2d1ba80656bca8f6c937478fa42b6496ab77e48e170c3bfcb155a757d0aee22542e7001ef561d1c90364a1de3803577fd374dde32bc2e2e51d4e0af603cab71a6a7f05c78c65683f3bd4294e4d6e01a6c9edeeaaeef681c304edc59883fd4cfa140eccb8b40118f035614de7d4cf5f35c6044c5e32336fbbf59e307e053ef5be593c7d05f0994c713a75db99c0c35ceacf4c28dd72aa5097ba68b2468d2087d5fd70b97b947986b7e4acc600a3a105ede4df4349eb7650ded66ca79bc9e13f6eefe313191418800003f744699de80f5c00d6218cd01833c0899f0b9a78561dae00a80f9d82b3fb6b8c84da78f79882ddb3c8730560ea0d8ad38e4935b4f8566c49fc9416172d16a9b203e13b9dc96c2336cbc83a2734091643e3dc77f586fb441f70366f33e950c26f7190ecc59d3d86d7de73155b218ef02d355d5ed3d4c126660baba4e02e8f00d0135a458203f2416bf04efaff5529e78fec00d8d21a4b8a37834bd0b1d86d998aa008c32099ece825a080dff4df87b80f54df463ed043bbc4ada409f01c3c647433624d2f7783e1c8bb19cd0dce0e09fe9134b52295d9801ee49a0640a7836cbd556ece7f1fd148feabd53f410326b4b7b9e12460a6799b03cd6f3c3d36996ca82fbbd9c82c81109f88b17f32f9304af50af7a9604daeccfb32bd38c6a3130dc15c45c768287f9a57f741c597005cf44c51ce155de140b95b713fb7e35c64946db7c60046e537d0694dbe46839ea87cfb5783cae47033a43820b9a96638e997ef0cff8815e908d2fb73d7d5c817e49c79b20dcce830f3ed01d155eaaa3a2d71c5d7e351dec332894b694deb75536200d32399eecb2f39fab01ffdac22676d651fff27c6659ddf3bbd9c80d382c3fe4101e1ac063c9b35648a5baf072759eb7d23a93fddc5e91b143f3f3bba66991a7178670b9fa8224019bad03fc9964992e47ad357c869e012998e53f3f7b6b0d8254db754b40a50877ba6cdc36eb7125df9e0e3fd07ed9d779517470cd5e1429e02955ae79850e4e2de8a2b74c47bad19494f27eb165c520c670312645f6b9c1912aec075c8c1eadb63287d92065b913064e9390cf324e2f15c30d61a2fa1452eca184b7911275a0bb4da4c9d2da643a1d9b28c8ba272d7ad71fa415a28d10f0f495ead0d34191fa2cc7a5e7c65840146fc502714c8ac5179b2d68df81a74300c9adf00913a392366b40382e3e325ddbe8e0d144a0e07b005ca04ebc3447f397d37aa1212675e83b6dee833d9ebc8d8bfcbd9dd40aae256003b010defd16b0e125bb92fb8e6c647945602060dfd945832c2771394353694d5f37a0372d88672389ece5a6e3a031a3a14ad1694e5120bb214910fc0eebcbb803e865251ad8bdbd69c94bf0e5f4089d1552d322ed4e79af8225f78855f145e867e595f2cb7acff1f45921bfe6b3ee4c7d1cec6f0e683aca16ab67b693fea12520cd85a990e794a9c54685348f925ceced0be8eac1283b0deacc1ca8bc84980c2ee368a90cd454ccd500362b5e5b34c088fd959db43cc806493cddbc57210cc638ced60a0c1499889cf2282cee5efa7835f318891828c823e876371e53a6a9330c6b6c9a4c4f20a97f4d4b53409978d00c8651ec689ddcac42ea6c27154fd0139a23e04d1b5d207b1781f580979894b77a1c1cf0c5d3b8669952085212a8a1bfa3f5e567214a2361f3a983dc8d143dd5ed6c70f2fce4ae9bf56f1c8ea049cf1e8e37c8ef42871763e74414526d21b8fc63a938c5a11118ca107ad4a15027816bd671a2e219102d71fe43b6b15aec651316116d4f156ca1cf00db61add060ecbf3fa37ed9994279efb3215d4d436326552f71cc2044776761152b9c80e1ef0ed50aaae6fae174cf3b5c3796421b940a58447dd2e507240cf017f9d8f003fbffcdf8d88c292cab4bf14217f14fffceb387ce9bba289e9bf0d03bc35393a53fa50c97c08d3044fd4292d79ecec8a1b088222986eb27d216c22ef3f7fd99a19e425a8b9e30edb72078efec615c29a5554174e851a4b324ca3c763dee85265768d0a5289bda4395f4b48195607b0e20ba85e15609a51dc651276cd611c8aca5875118d31880110b2cb72d449b098d2bb5a7e7b53c78c63b7745470c316b7eef1886cca0fd6e7ef7f4cf31fa72c5016357ff55200c46d40d27cf17be3f3df419fb21cb9f381f45ef2ef6cc6b84b56fc323914059b4363df96d4d2a1fb1ad404eba16b5cc64988d09047c951a962617b75b96afbe5abe5da4818774eba50bd9962d14d911747104734ef598bb92fb13e7d9fea8db89317ec21fef64ed4655b60a6901d88e2d5a87fac800b1251cc88614252dd78940f651595cea6ac9bfb8ca88606758af3fdd006c373de182ee6f51a338381e1320a00e43dd2127b196898321cf3c3137a7c604ea27eb4e847da1786dbe2833f38e146e0e6b890ddfdfe87c6ef572130eacfbb638c13446ab239c6f5be41fc581c8af8db31c44ad4afc55d9968612e59e62e0bd47bc73e26cfab9c8cd9e7aef5839325e9a9e944a1bd2ff60cf8d7a7d2cd48b9c82ce2326c9390f09d6aceee61cf83332074ddd74396d05ebbca7dadf0a6dfbf958cc91db4f8901abb60c1496df8c7221ca1f806024edbb36426ca77cfe36c5c8eb6b36703cc421237e92edb409b091edd228365ea4c78a78df582f1bf286774a7ce1542f3e402e736cc5e3c3c1051942339609f21beabd761bb7618a241fae75031297cfbb68a3f906804b579d2bd6683da1e4c0324c34ffba3403f1b319c3b135014dceff0c4f42defd5bde08e868240a05fcc9eca15142c880a6beecb804f4829a6fdc73ce27cc0c54fc29c9e6469463090e9e0f6ceb3ea53f155d81e7f2f904255d06cf3e614ace5fce7fb10e25b09bc97d7608dd1142e0acce006faefdee52e681af780d75fb0c520f32b10c9b77314fe8b42ad273a38b437dac126f659a17102a5299762e14a7c73a441c09e66f3b48648b1c2253a85806fa79caf8d88c1bc4c955ce01362283828e6fb9031d2535e69bfd6780ed6018afc818ca010931d17bf26192434a73fba9308295b56fabcac5219ddb295fc01b29b899aa95c53684595392a71e689ef9261644ff81206ad74179cc87a9a3db02f4b22c288770752c4b17b666e859c80563657df27728b957de7f7605a8a6b96fb1b4895202d343c680b3224bbe30f2c2cb07d116d3855ba26be0ae105581b64cbb3ae217a5170600ae21cff05d3757ef28642fd15ea7ea02eaba947630ef737d8dda4cb2ba91eae3db00db079b83f7d68984faceb0dd972996b3a25bb82d63f299e18f43899ba971162ec3854b2607e683c318352607f6b3aaf1f95b4b48037dd8417320e1e872dc2678f5f150f967754011fb7d713cb0cd4bdd062425eef504d66e9d8df31249cf667b91a29ee65ac503ba96440092d2731f6ad1e1926762562940bcecc3d576669fbb4c63d45e75fcdbfa87d17ff6c90c4317bcbef75029f3598cb26f37a388739ddc3c5057384f9669df050161f03473dd9268126fd54e29f77fc3bd3a4515bd46f38d267c646961303af6baaa7063f0afff83e5da609cfbd0b2bf2391d3821d4dd9602873a3e704f40b44955888eb60d4d340b79c4f19838a4fb390c1c27df3df8a63d591842ad607ff68997d24c442514dd9f60c4b97a3eec0daacf628f47ada4d1583e86e6db6bc030574ffa789ea7ded1af2281c89eed3397bdfc9c15861ec2efcdf52d8815574602e177abdc323d8ad10cae26265d1cccaba80f012b01deff1edcaae47f50a829e349130404b73fbf29608f92e431a51cef77cceb3d88e99dc248987b8015fb75f18e3c8b9ca0f05616e911a2847b3cdf467631088e9f0b53b7a5ec75739c2acb8d63642f889a60a3e3398d072455833abb2283dc5754ca4bd27011ec3bfd12f5ac72f20913d7014c6684cc327e46d4abcd1a6acd8171389ad16b999838dad729f63f2e49103bed626c3c7eb68ef2eb0c6e138ec0f53146978f019a0b9f69016f66f48efbf4a965239510de26b15670532bfc127714d8f099367906b7a5d362228b84c455a0d020a1cbb1584e33ac62e4df2aa98e334d62fb7933ac6973bcb4bf20c750cfc813da32bb9265e79cd468a5b1b36b0a876b0bbbdd18a49d66cd3ce167e5fa0eedbaf99ce06af2888a9c0b2e7a56025cc4ab4fb0601587548fb2ee99014f32afb746db3ec33778b53eeccfe02457114abc07d2fc7eebcf69056f8fa04ebb16587763193d6b567ed6705e53fcf867b4e1e844836cf267b91ddd8263deef4a691c744b4b7c8d84ec823dea8df3106204fe145759343660bfdfa082df330a6613ad26005c0847b6532fe819c6134c5045a3b52cf3499f2b400185e649baf3e8ea80169efcb9ad699de932be802368abb45c5c27267887f8bab2932e272e51942d2f333f2ddc659cfccbd068e4826b895b1f2092a24b590ef0e5abba82516965e98531aa6aac8edbf1f67f026359248d27ea7bfb0a508a654b0a04516b3e4050e08109e989e006c4d8571ba18171ea6eb9ff4192056c49cf78fd266a010dc44cbc1864a9f0401daaa4edf1b26b92b272ef928e1cc129d2389f8b2cd244943f290f4e9f792c1925923e84fa04e6dfd3f1383ffbc07676bf743243807075d25cecc43c1ffbb67b4a5a4415216d4685a712c451b81532a4a5249d5321cd41d0cd29caff16e30341dc2ac2274d6789af383ff0529412ad6d6dd2f1525dcd1e3c81fea1e2c1e0cbd9c2c9b9400e01614afdb4cfa32415f830206b2f67321c370b055152ded011f5d03dc26219510620e9e930f848f4e9d7aaa98c7304b67348b916eb44782909b15cec4e2bc769e6eca3bc0d8489d4bcac906e59fdcb67add29b8bbc689766827adb60c213e08ac86d1cbd79d59342cb2474ed1a37a24ed4163964c7c0dca1df453ee32f3e588bb7b961efeca86914d7c10352ca3f23fd2a21c3cbe1f4bd5398f0e33bd9317d2b5e37c49247e54bafdd2e283a3c9378f544a7282d612d72c4bf22a5dfcc2985e9948f76c69dd9e3b871d386e442f3837b25cb705a9cfa782528b93e89e11cebc93e1f0f70f7d0ab573455730090057a5f86a66c5699556da3e679c719fc2b628b89c6f11e304c5be116af8a0a5a091c6c066ea3c995420ead2e9f780a451b8b103cabc6780ac3302674182f8834f09a36bdfced2ba50971d2af51abfaa2fc21b4876640c8e9800731d7f63baa06c77db566113dd71d99db30dc4dca4fb3904523b46ec2196698c7bfb93f9c179135e1f61f05b594d4385a130da585634f26fc1a9764bb19910939576da9b10959692e2af02b431cd4317b3d131e417cc830b279995e76d4da2d6119f5302fa23fa9cc1f98ab84d75f19ed76a003acf52a5d5ed7e7227e7f0f341dde6e92b7325c6bf466b4bc1154c08d56d70278952e698bb9b80fbacfe634841cc7566998b10ace5c5c1283d75ff8a6f2281c3f33adaab750d6f808187a38f8cacc493d1c8d5a1f8e87b5c886959c5982351dc71d5fa8f1a49f71e1fa12cdd31d4c12fd43c90b732fa75585748c20a2ce8ec916cf8361a1f648a97d8e32e3cc0254f4f335d9852003ebd9a8f8b6255819a89f2ae0d42a7706c179e98c3ffbe8854eb6b06501fdf987a2e7239f61ca3f28cee4a037432afb9ed335d4362581f3cfb1f59636b6ccddb66d80c43eceb5c6cdaf5dba53e1580a4bfd7622d89c686656caec33e3e61ce59760236dbc22696effcc7d0072c1641264e428ab87e6cdcacc274aa96d696645eaa08c3b31e77c74d6cdddff62aa878214a4dd452a14389896b1599c1cf1d61e4fd64ab7469c6d98fb62ea6b1c3941d004e4c91125c5f806248c85d086a672e018849668b22b9139eef9f8e4cd9d7571b8d7dbf98e61e02782bc1b70ed05bf780b28064676892546e07732a0f30c7699677fb91a5c7554cb59b2402ab8102ce3a0c30417891c922fab3bbca33ea8fcfdc43ad2acdce07e6bb3f2c972c3448f65b4c46be11a1a815d048d093bb0d6a2925b10fa145533eff802bfa0ef0e47581705c0a6fe39564657e6ddd3304330e79173047640c4d45f22f070dcc922d551dbe88517a8021d429571d32c1ff7174b58f6f5a6eb65aeb3d1ed6b894947e6a33b93f72be900b5ba7858a0a6afce74d1220f52713b24aaa981c943597324863da2ce356bc5b98d00dfe274d7814958607f761eaab4fa1ee0fe2f784a0e7dcd2bc43c65cd07a2c827c367e4f86dcfeaff30f3a262e93832174ace15f87886721a2d6940abd87ef0e30fc686dfa06a9a01848633603b5fef28241fae0febf030b3b5721cdecc514716cd4bb83c32b3a11c227e02e0b27badaab2db81fc04685633e2f88e81359f4c7144df52d7cccf8cb9b7f7769d2ec8853440b8641864e3d8c25937368ae28539d8f61bd5b3dfb51ba0a6c303851764063c90beb390bbf0ac8b35075f4c5f9bc6ab13b632038bcf7c18d279259d68db0287772245c44cf3dfb6250c1183d8568c91e4326f818d1d3a4c55d4fa09e5b478d61813086f8b3c4dfce046be4a7541558a46c509010743fb5efcc4af4832ebc08c82ecd3d3577e20a14341782ad385833848bcac4e37133ecedc174ca2f4066f46ef7119b648cb4268d9566ae56027f2de1a67e6e2fa32fea8d75f68e42b7defd9c8ec21a8a9e30c436c019ec373fa3c8841afe1905ba2466ec3233b760eca1f64724262a91fde1b12f636e215ef29ebfa3eafa7a409996f687c511e600c1896e7da3c986de7014613793f8b8e3060570df22529cfcc17d9cec34a6ccdc116cfc64ee69193cb53d6dad82f1d422aeeb19b35a9e60ca1ba86c87b3ff74b2a0afca1e864fe6825ff3daabf5c2d55f686d70cc53ec96216496f694b6972b514324d70704277b88b6a7280ca221fc8b59ce5dd3e9e4a459468f9eaf4dfac4afad8bf54e8d3183b831ac149c0daea4c7ae021bf88979c69cb67f5c2cdc1c64d113633d6cbe28cf3f17bb8fa7daf7fbe39a6e8e5d18b80ffde4405e5ed99557b9dbd822bf14e845e33eec49705a32b75173d51dcc89ea289d215f553cdaf07e9300173fd7fadb5d1177cfdcd4b9938679c387a6642962a40a982ff4c80ab9e6094f8bf9fd146b5795ed95359feaab4528a54247559132c9664401c2c6990218e303b0ae2b111488a66bdb4b6f384ac212ee25096f01452f3d6bd9615a0e4361d567169f45723a1b9ca17ea8b62a0a3393d535f5bca21d5845f6ffc2a4450ca299e24562016a582fb5c6658de3f6c399ad04d3aa825dd3c7e171141fd272f51f253927416f88419136798f2fa984c0d62a143ca6600a30221cac6d515da2e35d3989ac166135d9788c5201aa256b5242fee9f1c3665c21ab77b34357ee269e70e9c8c48a1d33b4374a0c022115705eee4680f49773223ef7b0c790759fbd855e2ad911693e4cd038efd2a7d36e3d55c0c615effd1ac4d9431e789106473e845e82a7c9b0c7d6245067fa0c4fd79db8989d0d4fb79f034640938332984ba3295fc0d1fa2c3a8f0175f5e392dc77f2566150817d3a87766c1c9f87accb0c52706d340654748bf34c815ece02df6bf99ddf44d67d1d38141d9e25801c8b6af5dc0a9cb5c68dd5eacd07ce8763d039667d3f8ff95334d9707bb6da10fe0733cc679c4feea4151af71928e914c72da741e4edb160eb1397b201f60df2aac78fc6da01ae8af96b108badf408c50f84951af8f04748039ed407eda1961d74513c5799f9e2a0e145fc343c7d26f775a181d8a8d733e1c89692defea3d5ed0c57cbeb6ff2ec9cd4db84be48caceaa47297d9f491bc96f4650817a543104de0ae5a5e477e55ed626c650d9c76447c4bc36da18530d317b8a965c042a537865fc8aed34509a624267b919c7cc4516880c9f639209fb621700c6a0675883719fa0bc67aa4c62964d77caf496a213b3f0467480f316c852233757002c7da6f4818badbdd7ed0c6a65bfd90e8f4628f026d28325e97d05d170ab658bebc59dc90f659f6996024e3fbce34823e24f8d44f7fe4e1abe4203f659134ffe618eb2632c85cdfcc05ea891f0d5f20d86b6143c632af469920fcf74ee97684918b8ef5fbe0837d8df2349ffec8501024512345a6ba2f306085b1becef26c55e20b5365441709fd108dd932009a52adae14682b9707b6f9d006b770206178ae6ed8d17f8c80f2d0749c06b7d9e3841872f22a8b79124e4fcf5edce077ac8376da08b8cba7973c9abf23b0c8dc3be11d5b8ebbc57efe1ab4ca86c6b4a7eeb7c1e43652148af63f716ffe4fc010d452d1ae3d22f53ff319929ba35e24b5e94b482c78232e0551dd821f31b07545fb78aa64265fa6181b1c11fcfd997890575bb80c4afc1fc0b9366b574af3e8657e523257445e3335726767ac5aefe55c527bda48dca5884fc403fc40e66575d85d82d89d056547cc52b78ad9756fe21d055d0994961bb2d571de4b268e6468c06e34de2b2899aad12cc671fad203acc5e39e8b94265aa27604c7816d517a5bfacfb8dc5a37070d3437333e86366effe32de2cfa94aab2e55c6e357e7aeb209f706064acbaf0f976280c71d341be3189a443cb47e18aaf43ece8dce864f3d05ce7c785c289e4c12a10c51b3c98ffef617b4921bc0c2d98645c0eef6c1d679cbe81a62fe7ab01713936baff422dfc2f895449dd83696ef8bc67a49ed61f9453a07f74fc83b3dafcf08a8e078472930c1e21d05e7e822904dbdc4571ec13518952fb6886421b9d3b271d4ab9d2f1b6832ad01ae562e39c2cbf496e94f99193cc43b98dfda8133a7acbcf5eb3ec152fe9e9a0f1495fb57c3750aaf62d840ca1702e91cd0ec67a5b45a33a24983e8f99e5d932bce70cdcdb0889ea2cd883a2b3a217a0b1e4064d8094423ae1edd725192e707d4831e3a4e5a21ef946aac03dec48249257856ac480e93db93c9ddd9bccc49c834aaab66d98310d12ec020677a77744c9e9becddb17facf2d2fb8280f277d3ead74d14d85a3cdeda8d94bee6b5a07645cbde8ead88633b79a72f328757f71ebcc353c669bbd2b49f900911062a7791905b236d68c408d19c6937073cfd27cde2712f138d7574136e6dc113f30e2cf632f30edad893279203d607df40cb470d41ed4e0c1874ed755e86d7220608dc8bb18808003baa705b52e9ee233cc84cced874c1ff5c79de0aca346d0f6ec809ce9f8ad60d97d01e47170f438a1e313727684e8121d8dff317e0c9dd24e5ebb45a1459f0e8f1356632e9a2c520b28b73a1bf9585db5c0b4e2067b9e329f242d56d76a0579cbe4ba2357a6840812ef91d14f5ec260b5892a7cd9d790b97d2c612fe71b32fdf94778bdc340bdc85ce3f53679c7714882a1af4c2158cdc988120e27824ef91b33ffc01a3df017193b95726f532c27c8dc4d23a47db15b6951d81be6038e66643345682e6318383330e110df24fabd845935170b297b9dde4c625ceb0e2748210c9eb0b229307a8a2d0a9636a4e8b7acdbff624f79fa90ad630c21c08580829789b1eb6a0d33857be91039bb7b8c9fcfa8bc3f828c0c4ec88c7ce4c5bc4ceb3b84728db3a5df2fe7a6172f1b3a2bedce6d8d091c919fef1055e2e76c4a9472c311998724b75f0455a6511b0a9d1ea51ab46244418cf780550e3723ad34de613273cb57f631038a9edb2e235f2bbbae27a80af2050a51b26db3a589063d5aaf22acbdfbd7f7048ae40894ce8a9faf4a486489bce69df88d33422186d70bd42c45bbd372fc38f0783b8ecad7e625c23ee03728a8f89cb7eb04af588f8a54110ac6aebb6664de202d46f6ba481230b268022487d3440b0a8c8dda79f6aca39c718d2c89721c0cc0edeaba011f4f03b657cf6de20db1ef2f72f3f8389c4bb22cab0bff89cdbfec001531f3948c6ba350c670001c402ad2b4b0b67fced89bf1dc13a336ffee32724204425bf420fe58eb3b54aa770fbf2d1650e6f25b04b72e69cf5a8a0fd003ce65cdaa51528eefb468975c245c9be6d022a5cf1d35743e5fe285397df05da6f841c66f7f26adbf3cc2a5f3f96eca2083b01da2d61d33436faa41eda543dde5756718ef0b39d48dc57fad524da53ee525f0a2308feb93b2ec988f29bc4add8ef1b597f6e70a02157be3566abc5efb381368d011615342d2839111fad9bd26b49ea71819eea71ffa67d50970b2173c981b7f6e51d9a153b81efc3b4002ce29e531f55509be6cf1378ddda2d1f9dc2fd5511f081ee263c47090e77eb755449ad4cff828ed7fea2004b09369d7b1e9b2f5438ab190c066f9f019d6c706030ddc3801a887db5ae128cf81fa04b3255d8033ffa18fc441655ea6cbbd207a3825f29c46a1c43fbafa63a8955de0c72a8bb7b0b5fe671d81c20ddbcbff2b21502f945c656647642e3057612dbb510c2bf5dbbfd519fc1e711e367c85745c35df6cd9c298b50ca74e34944af917e4b9a7e5a20d0eda99fec7f23fa479e3961ca769ad478064dd846b8b723409b5d060bdad67c7fa9f6a927b6d665936bad5897c7d7e3666505372f8abbbc5ef967c7fbca8d99a8f25f31bfc80d6ae76c3a7a862f8a25c7c8ac7c58387fde76277bba65102a89830eb0c3e44e9bff726b613794d4e7f1471f12922a36bdd429cb1486c7d53fad7234f0483f725068b3f429cf954c041d1cc6ceb5a2c39c1610b215a7c613ef9369c28ddb554723bfd62ae810e91c1e852c34045aca7edd04aa16b0d3dae36dcaf1460f5511da148593d225e4e32ea292835355d48a86ccb4544f6eecf367475f5747f62e19d46a5325cd1a2b70c829ce586bd5b8c2c0863e3855fa581fac6e5b5250e1a71f6447f6f4d2033f553714a63868b36a09d9cc7f55a0f66ce0287856dd3b31a7c474a0fcd8fd94820f58716055eaa4f951a0358a2033135a442359a6805a56848a9baf551972e9fa52bab8d3d607d5aa827f70c62ee40f7066744939a088beec3bfeb662f3d8b8f6f8e562e42a87d5a446d43bb0e8374bd6dedae46fa06a8698bb66970d7204fdb6bc979bf5dca8a06770b57d542a423225e37482ac8a11190383ddc459284eea64243b38a669aa88d8e908382fd788f23121c5f3a3e5fa227db2f20efea35018773a3175ba4db94273357ea8201eee2fff92cf80527d577b652e1380a1bd402585b25e509e1d4c5ba12a4da238ca14e05b8ad3466ef010654c314137a89a92093ea59c0db3ac1bfb6d489dea684ee751e4b091a38bac58a14708a7e81d6e3e692fb810b62994afd12a4b5c2fa2e1370e1598d486a52e0825f02076153c5623bd556991a9e6eef755bd59715577617b61584dbea749fc6488ccbe1f28366718e2a450d1bbf404decd452d2bc69ef614aaf1f849b123d6d1d9f521179fb8c783af3e93bc8b7560d174a429480eab64ad0be524ac3dafbdec28c263611ab5a958349eb2676472597bcce69fa87133263b6fa86031087e20c9035622dd840775f04f8e0194a0397586092709b02bc797f2c2921d2aefbf9a9fa91d9d216bbb6a24fa6b9eb4de7074c77338530dd601c4a102172d8b53815d266a62193dfa527d7e35faaf5e0b54e40783e4179234d5170f0603b5eb33d41396a5b5c6f7bed2e4faf6a49a81e8dfb7b3bc6d6bb60ddf00dc5f7ac3710bd31355a2393322cde3530825f659e650857ea6bfc960810753622aeeeb1b8827f9ef592e8a055a3dc0119ea76de4ae1ecba6ab2230043a265346605d6401fd26c29f32dd17cb04edd29fb87284c024631ff28216a5af9c067dd17051d6beeef8d2a9dc2d754f028ad24df0ef7e6473b623bc60c83373f1cdced384533f7097b7200a60dca2ecaa1b3571e4b11d748fae88c19f775b8b0965a192cb07e2e7962bb4fc86508c06cd2a3ecc085b4c9b186614159a615c278bd54a8d8368b479a87931fdbb0a5d9a7491f2a709682d8f6f10b87cb6aa8500e1acbe211affea8a287a6b1a08d458a401dc20f5e05c70f70bb79d7059c84ebc31e9fc88a44422d0e72c377d87c6bbeed2a6894cfcd05ee41c3914f67b6a669807d2fb3405e8d56bca6dd23d5be8d1e94f1b2361004c4f00d98d10256e3ce47d14ee4876de8d9fe211dffa1da26e9cb69ad5a3040f28528b16470a0328913a7340c9c6d80540451ba003753f12c121cb5b8bcf95fc4448237468338ec98d96bf3c7889e94ab7689b7df78bb27ab4e09ef00d0f0639109ac2abe0755b3664ac058df8c912c53f6fd68e8bb0c3856633a49d2b2ad3fd53edf1955f0d9c1d689d1b633508059dc4f55f98979a6dc0d8a3b827e612b119e8388ff3c7f1a077eb6c62f55af585b51885d7aae32eed94186f7a15c6a7ad3118f403fce2cf42ebcd5c88b259965cb86143bc2aa99116243341be5d3eb54263f2ad6bfb438d3f71ad0552f38290f6e73add9fe05a702c5ab7941513621ce57367147f45429e83f54d2172a047123d2bcbdd45555a506a895a7c84e1d781ff042a9e2fda3c7e3b1f2fa4706e1e91c7dd64153dea788bdf0e4998878b494be27dde444d803ce6b3ed83a94f5273dc41bb71718386247aca11ff9d44b8c7d8741efa951200947b300d850b588f967644fa3c87281fbb2c79f892d0172c7db462248b6ba7797982e3ec229a52b56ab7ab17894858e27cb47a1909bc7bc4265bef04b532923d531eeeeab7f660f0c20a189136d96eca9483b396905782f5bb62bcbbfe6b14f66876928ded4aa28c3d99d5d115e3f7e7d842eafe34a9482bd3bfcb65f968e6611562fcd0489754ac338dcec4b3c2b6ca7e4083d25b2778eb6c9ade939d5f7bd59085745b1a4d7ce6af0d2bf772eed9a38f1e50dfdcda90ec62ad3f16e7361116200e259ce96383144dc65f80fe741ad9f30e4184a6898a5a2e5d218880319a2b508bd236ca87d4155e4eee22782c797e4cf87e2e51ae3942e15002d9d13c35adbe8cc6b8a0ea41934f297627d910e2cf79ff4701d55db61e7709c295f81c0ec95f6860bb49c1ebf23345278c99933227125cb3a23206da8a5a25c88653229e9d056dfff6f4c76600c35c9298bdafd6a804243452915d05cc884ee2a1ad39dee0720cff28ba0ae5d2f04ecf1c18878ea7952019e278ccd165a9172f036a21cab4893fc3e1a5a99bde666dd6c901a3d55e5cbcdddabc874428ce721ac2c400dd735b905ff57432555b050277a78b954a6240a957539b13fe569f42df61217d8ece03a607208a5dac52ed2921d08eba4dbf53846a8af2fb4a609cb3c611e9ce9bbea9e8bc4ae3e5c3601fb44a9463344f4e5a92874e61852d65aa7bea8ddc070dd0842b8ea28fe576941f75c460b892117d8467b8c76a8d25f927942c11de7f27123c9f18099ec068b745920b8793683e19967fa52b8c589a7a0b60f1891f7a0b1524fdb629c1b8f85f84274807a9306c78358903c7362e589b929c13947ce73828fe02278a067f25ab06d86e99284e72d38a643584ce85ee303196d82104325df2ec971bc03db47f6ebe0b0b5f6ef30840efce3f0cbf540438862a7866a90270034e5e20d302681e95e7fe7e853b1f769ae485c8bd2e0f71517b9a67f2910a6531e09aa28b986d19e1aee625d5086572bdc48d0be1c8af617608f2032bef4832fe01dcf556ab312d3ade998ccf7a5178eb8c21f50cc16dd05948b8c3f4661a42eb4710a619d5462c72378cafb45c671c7639ecec1c455912954517ee292ea91e6cdd8015fd4653d325f04a401d3a1308a8f38dcc86801b256cdf69b8e1d31497e332491ddb24c35af80b086c9b747ad8b208e2aad2e48a7076b58a7e04929e57441ca76fa682ed258cc0feeffc8092a916732b8ed3bab68b3547d584ebe84261de77a4ea2b1906cbbdf5c5e0b8dcaf899fc1d98f75e4f554fd4d2f2a04e743ce823021340460c6627fca066026202098376130705f53396c1bf8c66287c01dd617c5ac9fd920f0fafd15493ce807fec586d74fc4532b3638d20a1311c54e990c5a378636d793fbd66749dd684149acddcfef2345e5ad9aa03a1d4a08bdb470f08c8e32aaa04fa5ddc418779330bf1e6d4b91063576bbce037677e6dc78e2ed5dbe3db9aa8c457dce5d97ebc174afed38264a80cabe2ab200eb628d683c527c270db689a4e133909e770971fc0938b1e70ca92fd7b68ca5ac8a7bf29173fbfad21dc8e87740fbbd95a0c868c8c769ae8115f8cbb5988cea35d4d7453238a6831d5d18636b5af244a7d0c913d4d7546a5c2a8c5415cbeef5b396ff30eeb15daee0addc801808691c2fb5cbae883038f990a7393ecc6b86d166b79736ab95757a98b14532cedf6c83bc34848df008466ddcce3fa1dc1b544eca8d3266290c909858a5ac0b378a147adcd186ef2c67269aa9fcc491ca8b15ab4c00994be13a4cfc22d929221ea3545896e70deb28442a1e16c46d735e4f4bccfd6572371a46f8aace7a36740d1d6bfeaa4ee830a98a182daae428b7c8882c8cf3bcae6a3630e5beb296d780e34c2221b1342554dffdb13882198bff397bb5cb59bf5ab5ea91921198f2ea96b0033608212ceb59971f9b136ee7f0a87b587f57e61ae74b309effa0b2887add9101a01fabe5f85cf4a0a872c44624ffc843bf84e5f7cb37aac357b6aa1cde9c2c289c8e66480fa900c6cea74ca5fdb86b09be4150049bb01983fb60fce7af07891aec29b3a2ea3e599ee53ad7399b522f88f740ae93769a6befeefae57aa1089cd67fac11d3e0a5b946f09d9ccfc45273f453ee65b320d9c3bfec5712360e74c1e1245b98638f010669267ec95cac2cf04b8da8646cb1678a959d05415ac4c610e26d65092811b4cadf64800e75a01bbf5ffdca2b0c5dfd84d70d31123ff31c4bd03e180e4916cb0797992649c7e6d208c64484b545901960fc20adcd131085c119b539362a13fa86a7cc71e27f829d7633a4f1aa40f3f0674e2f08ba8ea740c839dfed85415a7b25448da55f3918b09602eb6d9bcdb90f801521574fd1a5fa04d5991f0b12e400d77183afec4719a806ad83be83e9b213516b8f9724a22285139bed5690e35a3550b420895b06658bd2a8c698854da32bb5316e7ebecec550377f5d0b177d4382f43b5c2ad8f6ce5b0bd45fcf88b10fd2a399577680e26b2d04b3635c0055b65b34fe42bda5f0ca952b7244355f94eb69ca4e4ffcb1dd393a8c38d46cd9dc069cbe1d2e75bc274e6f7d52d090c50a73d564d791a07a04e42c2dff878ac655213c2f44db3d89989b6334bdf7335059236d471d086498b3d931b3977a8c63c9bcb9e4dc5e14306e6e76954cdb38a07c6216d3de0d2c65765b9d0bb151efa9960de7c70b884c4413eca2791ee3ea3db694c7e5b35af27110aeeda32fb3db39071072ae3d82f7444738c9f490a94cbdde2fa196d630eef395666fae575ceace6a329177acf96678a51a16461b7508cef7b2e904829bb275af6302109e1321be6ef553bb5d02ce24e60487afc2f223feeee0fea725ee2b4922f954c3ddf1eaea4ecd167e080f3d7e562a62e671a90398eba952b449933bdd573ba554cd668449ec7c420c1644d2aadef54220fbbae7928cf5f5af797e42cfde7a82ccab10b6c908c0e67b911b86419989e408d1eddb6ae9892e357de352852ee76c6e2a540b4e3072ac858f8d4a383529b74d07cd77c9b413b356338bd71b9f052213f8cf6ebdf485d6cedca0bce5181cbc55719dbafabef00118cf4146803f89d318e6ce869f835fb2f184509fceac3f407d32079821f5016d904713e78c8b5b63e0d09dcc92fc1ec318dae8b010053bc39a76dbff2bfe2a461890afa58230cefa51033008cf512b30b3a65d17de50c032513ffdb0905955cb028250c6db89628c411b2e62a672a3d66681e77d4619a5a2b411b01b4656d86675a2c4931c028269f115386982ef4ff02e116868ea20706d75791813e71f07529d2308b9cee2fb4c12b03901e0c11741c9ede070f069181305f55096e9a17690fe7f19eca7c93f221448a3c59fa72f6bf793ac22a28387f08d9ecace5d5bd83f3fbd034dbb1bc5c4c0b6ceb6aef8da705de45ecaf44c1edb74dd567589b4752091cefd9b072a34b0fe2e50918dc5337b1894bfd5b82c52d55c9f5c2061e58f416126729050b4efee43627396862d981051d0c0fb408d79d4fb185a1f160fac6e1f81497e3ffba9b8ff2e7618f6573192ef63cef214f4d6e727e04d501a2fea8e274be30ce3a00af891652366da2c14d045f97294b46d78a5af2fcd5ab6fb4c886c7978a026623aebf277cad29de08b441c38622539b5d244b6b154b55ef3025febe99d736d1e0e7e96ede040fd0129cfa3d27a69e2b232665b07db95d3d9af274ee1bc57d209840f0e5829a977f52be81312ab380c6d73a204a4f04e18ec265d96c1e6340fc3a6494561bcb4c30650c882880b8111bc8da7a927e192022f53c9959840c9e51838f6925f735a20127c79999ae9e60a10a6fe917ca960dbf0bf7c1fd36b396d4f99f73ec882af9c809946764726a7ffad9c009d2d8bd81925cb2c67fa8622107d7c35041398e6a98dd032305bb27cfd63636179eb0125f3f132cd9b74b41f69c8d446d3ea569a999c8297e2138a71c84f3dd12a85ba62bf8f7174a2276aaed2d425990b6bff7a7399a3685cdc17f7bd9cbc79d20a77b9943d3b8b16c50e24f9a2e777e9cbc5e2995a2bf88a898e55e3936b19760d3b0e08d3d2b8e37cb3edba04ddfaa35b07c3da52be3984e7db506df500a6f3a5925d1f35e5a4560178cbc911c0a1e947327d96c3d994083b6338ad6e7c8537b026dd85ad8df076c3a472f7e33b0e88b2b5a3ad4e45c4f19dc6fd0e3b851b748fc8b825c5bbcdcfaac564d07324fc3865c05b3e2496c89317034174b4e4a747718ac10303c538dbbaf3e24e0460fa6e29b0a3337ab8a15e42e2590f23a3c615769ff3b405e03656f0c043e31dd43432bdbf3dba08818ec5ea9b32992f50ce774c87668030316ece03c64d249257ebc3fc3e18d32604c90be7e2d2af6e2cec4f300514763dde850bd33725cdffdae29203ae8495f77e9301996da9c3a66e848f6481abe3450a26ded64689f8cb6ecada53c9134cb2138831edd7cdba45b2dd5c35a5148e37e875f931a5863945e1aedee5be99243cfefb13feb76454648f081d3d52a95b78eba159d8a17790f301e97db46e9d6ec2a6b5e0d5ce68e8485837dc67c588035c3fec04899e397ef98d363c493f8a7bb63fe2267ef43135db4a6b525006f4e27b9e466b14420f851fe30d5b916eb6a8f357e1371e91d53a4260934bbda94c3fb8b05c84fd388d4832e066b2d9fddd566dbd0919b3cd59ecf1bd68a47153a4bbc2eb90acfd6f6b268e60320595bbdd259eb3859620995d4a2ed6e2d5ec52f199ab04b86a1e4003eb8e1862e0cea5ccf6b00606fd09697d5db87e8c64307473e79b58482085edff1f63748472f7758e51dcf42c10b15b0017f98410664d8ea3fcbbf89f1da2ca111109eac25d9cc8730d1bb7b50a49b378b540bfb01d4fbb2d038da24f35ff8eb209855c8fe027716da3e221fecd6ef8d06c8c0459f71032cb29ba7d59a35a658d8cbd7a7ced7ea9d0d5d6343d53ae04161810d148bbb287dd5106cb9e2197c1dc4ae232cb596d8199dbf09f97ec90212b266a1fba5c7139f831711c7133b27963068159739f4ce4c36311cdcd9df2db5e566f2ee5563a684e565a8f9514bcd7ac0a811d5d03b934b05bc043bfa6f7a19622447beb4c4773a96b5125c6d3e1b1e72c587a4396557700ce6d036ab3cfced907c56ccf99d7e2da9cbb4ec3ce78d5b4d283193dc6ea7cadd308996ad6e314befbdd6ee18025f6d987369cc9027995c8ef04215f6a59fda997847675d99ca672c62989d84a7713dd17035fcf1feeb66e61ecbda014345bbafbcf8f28b869bdbc54e3e238d554747901299aa8c15b80da855679bb4821f309fb6b7584382d8b1d4766dba72e8bc9a4a38a20db1532a4acac33f414a1882f874e5a50ec16fb799e03689437f294d06033532b4bf1ae2191970071387631396fb563651d2cc39cd3b380b20f84007a12db369e90cdbb5dd3e8324da921eb845daa82c235d6973af58451f268bf9ae03f5ec6771a12dbe76410b5dad17319f3b243109a0152c35f628a3a6b1cd0236b973824bc665639e21c74801fa62980bce7969378bb9853babd21556f2b5e13db6218082d86495e4f648d013c2b03107a3311b752517ef4b8c270045796907b6cf0c29a5117d8482964e8e5f731cfe7d943a572410e9eee7b4b9d8a2be8d89a09d8b2dabceabb418a3ed44a737355dceb23d0b7fc7b821f86d9325dbe5c5c61e496d9d18150cd21e8cf06d5dadf474f2e64084b12a236272a86184eeea5c1d8e3b633b9992c190798a63136b4dd7ff29ba1edd3f470a2d46d6bb9b79293281c697bdf8e27a8368d13f8a26b1ca8439e42f168dda21775499a15b3472dcf06a86ca6d6638254bfe2862c0bf2978a1eacd1af9a4ad7dcb3c24e46f06785e5c05adb4e678a5a589462260f14aa0482e4df3388dc5c604ddb64ac2512978d818ec4d57b95ddfd15fa7698ec401f35cf32da5764f2c5b5c2265c308b8759eb01c8e6a76f791a9198fdd37dccecdd8853262bf5b93e53f1e21f4f155d4cb629942ebd5bc1b55f5d9e197d8af9f4a504f02bd7871178ac0e3bae60df5605e685dcddfc9e0a5a03c6334fb3874b1b521799769e03babdce9fb029cbc7c06e52ddc072e5b2e9f3648b79cb0b9385e596ac14665fedba74fac9b0ca3056ee3ba2f189a72a07b41d743b405e7dbe40982b880bfdca60d76bd427947c05c16e87b73a6c73ef23a7d2f285be050514ac55657f49272d13e8cfcd5b0ca6c8945b6d012d92010797c7c72a87bb09ba32e77a72f7a7abc6f13ccebfb4e3716d7ea2d5af90223df34519c7c3e6ce63f507195cae92017bba758148c13c1debc1352b7ecc48657a7e4389b8c9bf9374d14abc9e2a8c5bef3e43b3a0e1fa6825f1e11deee332c924e2fc288497acfa14af5abe8ca341bd12503336f1c3f30c6873792c482f0cbce77577aab1e6008c18af270a139a2278bccc45beff8b58d333bc7e75bd289ace0addc81f6451863083c27e63a98e0b49bc7327f43b8e958d8280a3b33be4f944b156b5792d72116f1dad45b6d4f9073566b1e7145ec56dde98bd094c43a023f14ff9ef88b81b060d12ed8198e4f85fa2d96fc03120717ddcb6e4351065820d7fa3e60fbfc72b5d7a1a81dc321d90fe13919297ab21eba504b8e95dc6b0d8f040e72415ad2392bfd183e915def4e1097cee51800c28a1cb963ad150d867278e7361b58e18e3a5cde65d8f674e694183a24e89338804336e1936da7d5773c4ee20f73d4e4d1e87402e5e5dc4b55d123318713cb43d447966afa4899c2692ea279a4281fa0d545dcbb326302a5477db1493e57c558c611c4f482e13853598b7d244e85e5c8d92e7f3c8c96df7adbf2c5b6ebfd86532f9a9d08a73fc6197510560a0c9a81ff336f3e84bacb2b3e8dc031dd46ef0688540a112c73f7e47ca5384d18b96ef9570020ef68bb8e7225d8f51f3dfac2a27ca83273063052e7639ffcefff72cdb840d636d4a6fc864cecc0bdc04bc595e7639b7e75cb2df9793778e73391e9f85e256a1f791b22e3606d9ea09d0054d2da08d4ecc5fec238e404871252957dc7fb9e043808c05af311574256c3a235a5efeccaeb98d4f98b8d96d26ce6db1e04a9bb63a5c92146604610598cdaa41825545f7803341826ae4f24cdd49906a3c0f28dc2b7d5cbd93153aea19635a30a0c4dae4a1f042b50c102b1d133d8833cca341fef020e77227bbb3a63adb2bbb1c1906231a65fd4792bafec46747d351290f4011b65b701dbfb0b8621cff56443a344bbf23c65944649b05006aa879baffeee778aa956cafca4e26d2a4f5918ec85e064c4b7deb055ce26c71200ce8b36129a3f3e51f1b05d4880bcebb18731c00bf1a96fa5b1ab0d9a8bb59877c062d5e36a70b3b7fde5819d489508875a1bbb3960aa861e12d79fe6a7138c7482a62727a2c05f203a03ebefd26e856be9a0fc5c672284dc856e5b4a4e48b6e08224b50c138e02ac35cac42e590ac1e7004ed0d97424ba1e2f1ae9314243e04e932f3d49804df0c0adb7d837c2a2acb9e2d3bf0b37cc29c2b7311c17a9d8422878d196baa25b9b992b4563a4749df3182aefcb24be9f5171f5031de0e8f1e8ba1607f44b94e0a27d8449ce9435be3cc4e931deb35dcb97738f309f5c85dec3cca7099bad3f52a6730f803f4dd74afd8071640729f5bf6d4abcda1513877222fa9c90e370a8d0e2410bd1214fb822fdcf183006404302b7706ed13951bb6d505a3fc785aa8df0ef060aea7b156dd0eaf13c3ac5984764c773e5bcae7aff66ef19ea4d32321c02e74f9f1c206fcce5593ac3d78434c97c78073312273633bfd1c33ddb2bd20e806e9b1f3dbd1ebf5a4c3a111952638cc24446408326d7c4a1d57608dbe444918823419a9901cc2fdb5bbfc3a278236b2a7916592044fa3a7122cdbd7eedab4552f875852435aa376b373ea297b2231777a96c853f9f93353dc21bcf8327e21aad8de10624ee8be0e9e581798eee7bcda0cb52f6736183baafb0f4de956ffaee7b19a8be94ae9a0e5c7ec60030ecd59870c7ce7d616915d64d00f9acd8fc159712a396ac472422e34b97c812eedd5a0fcff24685c16445a979d79fd3399540a877a92c9065dcfd23832ca77afaba56e957873a01331930e968f82038005a3de5c38ec7dc27f082e96115db40e14ac352929c191fd8f066e2f28c42da06d958b28f7a2e04c8344852efd30207bf9a968755e8a368678cd71d7defcb0e840704544ff1e4b0051092c808e3ae5f1602c2d6193ad04a0b442fe0937c9d1feb80333b24eebfbb37b8d54cab2ca63871bd714007722329fb02be74113293cbbdc4a0c0442dad9be672dded42b7d2e1ce13dd065743369638de1e0bbe5a8a2af978406b8a066b3623cbb739644a3a827ac7cb89bb9748ea0faefc59d459b115290bc2dcc6f0f83cb21bf4540d314b75bf719cbdb67458aeb88edf16127e06c1912cab20d968d59f25ac337fa0750d3654cd08dafebffc82184c5577646faf76aeed833773405ab4e5a54d9f4e08158805d87fe2d001122550358a6f208eb4c1109aacd81fe355def77b5742c1a79b7366b6c50adb95c6c42a87f94ef38c650aeefda037c515c81eb62b46cb1f0699d0ab637252deee7bb8aeeedb3ba2201823dc45f90fe49630a5f22cf72bcbabd82d592b9de4ed7869afa1c7454e099c24f3766f8ec69ae05086a54e8b52e2aece319dcf446ee495dab4a4f008fb91c2e9b6bbebaf33b5f38b090015364576dda90e3a4c9904237f8eead47b58a193571296a811cfc0343ad4c2d1bb43d5d1decc876a27b1783f60d96ae91ecbc3ba000c63cd1f3e823ae733c0b7d8a77d7e78801ccb2611d76fbfb251ce69a963e702a5cee537beaa996ca9a2e8e43ddc1714b635d58ad136c5a11ea6255b3623c1ac1422a4f109e6e9cfd90d6659a2d12f15a7af4d84df8f78974d59eb230a371197522ab4e27f88f97f1e0352b6f9a8e9faf818125bb986e41d27fd200a9bb882bc928518475be804165fd4e2d4dcfc11b2e3dd2a1cd64fc06ca7a724ab6052830767acfd13ec6dc82ff2d301ce7d41cea89c4c4c85d8272792e7091a08222e22e70ae9f53d85a8e3dc65e2c0c304e5d31642b8c063f19d926fd2f7b888ec9659528d303a3fbf9730471c8c17e7545a8124842b372851320540c8e28606348336faf4cf5c769ad46663022ffb14d63b44d429e355c0623c6b68695bd60047aac78cbe9c4593510a7cd23bc7a696f65b4246227d4ddf4a2e8a6cd509a30d4a920440a17e1c8b49097b621656569f128437e535a95e9a4dbdc62df5d27ffa093cb77824366b582f035f10914ba1f5a9e00f630b18f1a60e72221d948115eda0d4e8f49126f7b03c26e949068341c15057a08b6c75eb31dd457b4740d88399474d64fbc113d64f16bb452fd0a503944ad87ec833843d73df71dc20b76f112194b1ef9090f92c91f141244e1dd651cf444b98ce8a13ddaedcb6ebfa7d924fa80bc3978a46faa11f10b1f15ee53f431e4a04565929f85a430d3adc72f5c54edb95308857a9152cc8001357c99750ee46422cf358d4cf69541d34f3e78f84ce10e4a6f4ad34c8184c1d4f416669e2f71524158875594987f6bc2451b80faa9ece045f664b737791b9f003caeb827e2a6e088b8ae4e4489bfbb7060b7a0bcd30944b15b4e4f3afb4a1e5473080adbac91a087aedd7896eb701ac362a7848a14df3c449732141527ca25277ce7be730b9a74c01ec080c95bf7209aaa85cb3670946f1a424dd9ee465b137802f6fe8c94bad622d083f7017ccec8468dad01c9ff5348ce058f0969834385ee831c86a15e8c61c35e68c7a239a31b38fa7b29a6f5a659f5b9fbca4202040b833c28749c4baae3d018646f3cb428715e5e7169d85d39b4fb2911853429c366e30391a94b3cd8a836b100f11492866770f69349178f35f7b45017aa2fef971339b2382061e913cb15c08cfec7be862cda7794d6c50455620d92434e7ce1f85ba8d98c564161d411c23feeeeb3e3058a0d095b7072fc4a77212c079935641a67503978d13ac057e828dfa95a638776a1ada61dc0c6d3607c8afc25d9255699187f30d5f8212bb021d813d2af6a6e6630f23eb2719af0f1289e7dbeb8de4261b61603d294e1ee1600a7d6d2a509f79d8d026985adab24dade67fa2e5c5a8e022c4edc99533f7a0083b05bea075cf57d290f98ead319e0f0cc52de850e3b9a1e4976d1c189e9e066cb27ef7e12ac0f461ad90571e8c6e0f3853335ea5d0366230b49b76cfa0907c24738bf19d929180d0e6c81c88e1944a92b7e9c83b464b35d8397cd4d749425f99fa1ecb075c4cfa89ee313b3013e0f8439d30591fae04da39cbc32d3b347c3d77cae39d7886aace5ded41d84386e6b25c3fda1bf721651548a103b8f2243e111cabf5be24fb67f41398bb427627866126f2d77fdf2616c0118cff1f6cb170bb3166edf2d2bedde97b72377bff4ab0b6ff1cb75a7cda5d1d655a2485742bfe75f4774ebd21e2ffe5f68c0afe222678df79049d82302521320547a26ddff8731486946cbbcac654a20eea3166bc47a71090fb61945c417618503b534f0ce3a74a80e61acb7cfb7b16bcf17aad8841ba2670a36bc1ff109ab6b09440b2496e44a691795aefed1a2bca224f568d13f5430624b02d7a54d0b1812c7d49d1fa6cdaf4d984d81b55c59729f9bb8cdec4242614c6e8c36cf284da993f0c603c1c9f00ac71f21bc93bc97ae8448d551a44f59bc51af4fe64681189b9e152f0b3acd3385a30435e77155ca9c06a64ebbefe2698bc8bb439a7dffd45ed73c303d6542ed710300fee2ffae2011b31bee99eca7e300887c6af558d40a9541f13307f84d4fac985341f597db55ff7e7364fb72a5e67521c34987685674fe7fb7798220c2b798ee3c6c24ce35bf659287bdd507d8ff28d2be6c4e402a3cf311cdf7e8e940b9250067895031c34c8a6c97223c6cc8f368af82996f8c8efccb59c18f4289aad8ccdff9ccb29f6e8c996c2edca4d7b133b9aa0c8c88b74898f352f3bce6917e0d5d41e13031667660e38112bffe499b3864a1f4ab8eff6fa83832deba8916169d3ec7cd198f9921282e0151b94028b80dc9ecb540c54cf0cf933ebb5b02e7f0fb0155ae4b2cfa1aa0e32c69aae49dfce5494de9ac60edc956dc2385ad879a598a1125d39165e6460cf1d9d37d5d7dec40ea2f5d07fd1a7012b1ee1231ff051e7ef1b57edac37afaf4cb0342f8c7438ee0b070efbde3c9f065008934a2bfd78e7a982e5ab69c9b2d66b87bab3cfe72c051e26591d6abda0b7dc00153779e186fb1de7e8f797df048c4eaa63615ee149dc56c7389aa4b98d1c7e81c4f00e992e486c36324b8fcfd323d0792137428e2d16332e652e35e90531323ca80484be84d4a4e816303ac06b5e0e801e8b2ab80bee05f670ac9aa4747d18b23e50f3f1d7a31db8c2becc578eb5b5fc3d3b739830a85d3010bbf00e94c7438400c7abfa6b575f7ea492a474489f67663cd336cac76b8bdc57e3f02715235244507ac7e607177ce23d888c3da1ccfa4ffc78d1f1686fa816dc43efac19ac415fcf721922214a25f92ad435164d703efe5fbf649337b5c519ec244f4c8eefc52a456e8f9f5268b887d3a50477090cc54b9e887024418c76e7f859919403b5eae51961f244f029cd8228c8ffe763cc3a36f5c68181d9be2e6fd3b904f837ebfd527c9e97836126bfdaba3bc1ce3733d69408ba5b8c27a36fbb1e95d88b098bdd96210dbce4a7c1df567ccb7aff9a3a25da00dc2a9452bf44532c6473ed8e87b3f3d0681417e9f828a4f3933bd8a0edc549e4b81fdae6b2b1c9aaf88872459a85ae6b110fce9a1d1a32af7fab5a9de74d4f38ec873b53161b8ce97ef7a23d9069c0ffe4317718d7fe1c8cec88042419f7f004e646afb0a8a3bcff11307e3676a3005a9834e52033fd9095bdf9a3a46f0a31dad317d4966814706d992303869921b596edbe2ca660640b0c2ce7730abdd54345ca6a1cfa92392e6dac4332883b3384665a71a2e24702b0a7afb9d00f08db7eaabae86646ab24160f5fe1dd1bf422456746a0fd81f928b280e5bddc03593b2bfb6073eb4b5ede8d9d0d81b29ae2f730b676caafc2e4f161f3359d1e8b370950255ff89d9ecdd707cb1f3508a62681b4717f92ad133d65d0900d15738539e62fa1e9f25f1026169d3e2fa44906cd3a1e10569a9891ed912d06fbe2cc7a39a882d7117fd7919194073eadd1d21bb46ac2dbe21165f5c1fbfdcf7280a48866e01fbc7438891a64e68683ad3733777c4062a7d13c156305823e2f973739a6d88d06696bc03ec69cae5d7ec5e744460c0f08871a3ef2f4303cb13fb68d903bc7618f301510daea6ebf562e6ffa004d576437b822ad8f4c0f9a45565b7477511b5d0a46807faaa6a7ff8871a9b6b41072023e947d88b661b73750eb45b5bb64519d1ea6917cf570c9ef22490eff9563eddb1e9fa74f8ce0b08ae701dd0e5cefe773987676b93d978041fedd9ccb05939d4589ea0663622cfdbc06aca1295bc2973e361ec140efe214462c0ff2c630d166b24d5191a3b423b510505472c39e567f008cc0556ad315086e65e91fbec8745fc0b9b9c3abc6bb17c7039bfbb2b84381577b8972ff8f7ab24c49a1efe722d4e9ef11f554d236822a59eec413de04fd95d92e21affccac05151ecc633b0184005df678f32590e0760b8d1383595660051290095823974c14da024d2107807c7a198abb97dc5f14d5ca3dd15e064ca787d7eeb814fb4e38a1e42b244c1129babb5b71894b663a00e9536c791fb643fab0cba61512e7fbc144e085bad0395b48dc8ff4696f0b58dbea21f9112385f5ea30b89b3a89d63933c9aa3e5c105372b36ab6d5add593e52c175e4bc34ea671013530c7761b6a116ba9323ddde7018859d76af5814a373ee1659cc66e0f0d39106cd55906af7341fcaa8721a0c686dd3ba4f86dd1166c25c2ace364f953ff67eb534708d36d5979f3cf9de3dd69477b77a0bd23f18a2dc3bda7ef85cb1428e22a2b25f6479000e98fae168f25f4044384ab28eb225dcb901a42c40f5fcf9e5d0167c699b13b3f639628cdcf5c8e56b85274938f50ce9ac1b649a8d0731e02276eea278a4bde9b7d3164ef9363b4ec067063ebac1ab34148d9c0595cc003e7b775f63c9c335696bf688c9b64aedf3a8698a81cc66b78d9c3c4ab9b4e951a6861157f17ca609fd7786028004117facba7315451efee970d0e15550563421633c0871e15b342ec650c282c417db4636bfa2aa2533839b04efa7f302c82c60d2de5c5f10ab01416b94261814eddb508a4f90941e50ba3a5fe279c7afa55d14b93c7a822fedbbc930c0ff63194827651569134f602164c88879ef854b5119d42e801f1b3c3b7c32e17659062fb5890c0b0aa9b482a82b1008a63e7aae761b482beb1c43760b89fb22674fe40db3aa8eb2f54753fc9fcef56dcbf7278a53683680b2e44040b1dd614ba950b199ac80b9d1bbbbeb3b133ed5d09ef1f3c86fb698d60b596c7f26c9077f04fe7dd97a1fc53a032634857d4181b7350076d012892688994e51833d00af5bdf0232bf2d89265b07357d4e2a72c34ca8308cf4af430e829c710bfb9accc81864bd9a967a8dcb17914d19c45c9f02bce34cd64e56d68a2688fae12640451c408f7deb9041682413997c2340942e41ddae3b7fd049769869435de28996ecaf4677f86a6457dab8e6c455181c14e39e97de1e7257b2611c1475debe585ddee80615c9bb67e2c3d6bd1f9789c6487d06c7da612a19b3f5415db8fe6ea69bb151db156fd72190184d24a2b241c9ac60dc87bda16eb72c9e1ee36f80f51fb66839cce941525865213dbf48867e4d4e4ed95ec5dd1abe1ad88fb8a87aefb3cb28d6996dd017db5d3a42e59569af3ee11e0e471c0da1eae68d735bc32545d52dfc31a37fde4541e7dbed3836594f5bdc9b7cd54946021b509efb6fccaea5d748fb8c932e9739195a9422f49608512469f21e3da9b228fe291f344efa6dacc17a4b1d445d687a03c65351db7f06c3d668626591c316644029b4b6e1059c89cf757a1f4ecad3e93bc745c8799a2734d6691c5911412593878e128c11c8b19bf9030e4dde45a3463b3520db14411f289b909edafba444c4e4317a25a66cc0fd190edca0e51ded21bfb793174629972e93f0758199cda7989868cf83ed709a841a1bc4e5a902b8b7ff25b5fddccc737a9ce5e16ca230ea30c7f9f465e727207363bc1ed1688cb3bc5d277098c6bf155e8c1a8bd7977f78be5ed369c59985a978822400673b27c361897336a81b6e2d1115b4cb3dc033394e6a796c3b0bd1e6d242408bd6b6799d4faa371746c468dad4da44414b4513cb4d38790aee9ac8b056b844ba6ecb3693cde684b939303bf4ac220f8a9687a3235f934fdecb42e0c65b6822849b095befa5e2386505915c166f107676961da3724e9d7332fe011d34695a0528068e2baf84f425c6301ab1dc817b336c8c424bccc478c2e5868cc8a1153d9ca6ba6d2e913745eda3bf18dd792748a73f3e0e19ad2f5a77660818603cce9047ab0cad5f7c9620821a10bb61352ed90197a703059f3ee4880ae8cfb7a82699e67939b32f599ed9231b11061f6239f1dc8d4ee8d0ea7cba418a53c533fefb5204511eefd8eb717312268b049d207ab53b1e0921e2d1c763613eadac434e734a98f3e83322ed288912dd6e005d421fec43635d90fc750f16c661f0e634da547d87e30c0ef27ba89cc72558f9c2a503392bb7f5854c54d94c7f33e4c3ed4de14b03a172dc9cd62953e18637ece93a56f59aff9742901d52c522788b8c759325a1676106d9c40f47528010d549404461749b8ac1ad0e2ee0a91e73264283d5da7a8257e75c26edcfc9d811164bca4a0e9f02101a05ae1cf5329a58f915ae6bbde3aed9d24b7a4f0ad54062ed6ddcab95f4f8ddaf6e269665ab556ecef715504ee1d100ea34a1f6cdf06c3ba5205e8454d3ae93776176885302c64ee54cd06ba8dc91b949928c0f313103514a2b569200df8e33bdf969ca696cdeb217ac727cece3c42707d65d561a23089a309c2305f850f224b7cef9670aa02973c58e830e88d14dfac89fc7deff315198a4214489318ca11751435c62abca9d13103a0d75d182ab8e11d2fb13b70fa01e0b5d82972e411031a93aee092b4ab13100549ac6da09c501a3af0cf18feabe1a374d3c8c54e315db96a5de99a71c02d3d11e49876abd370fc38ef50d934e9cd77ebfd06a1a1dc61dc720ce3b37f34a7aa3c453b8ac5fb827506eb9f3aabdd5add6b8843738eb53f16b8a6740c8d192fff278cb5ddfc5e93e49b77c2aecbaebee8c069a9e3c6a7b5657a5962295fd279bfc925049a19e0e2e92bd8ec251b117fcfab87740cbbbfb90581da81a25066a957503e753fc46b7bd2b5108363f683ea110b8ef708c311b83863b6270b1845e61db80dd800fa7588d9864980226a3e95ebd7de2902dae3acb12ccf791d82b69e97088457de7d12fc72377bf65612cc0c4fa2faf7f05517ba74f75b09d1a3f2b7d5b5bea574c9064d801c38effb3016511e92b205935ec8538b2ad008079aa3a91ae14d13712330aeb47161e90df9612f77c1b2d45fe196807b5395e7b8f5eb710a6fa268212dd6b7d719df1c139bd55622735f8da13b2f5b70b23d1f22072127f9126581565d6f5267edebf993dcf20a669ff66b7a82f44f5a699b024797670e6d617f43ab5d361ec7a87ee16daeb76817b1ca08c6ff31895e450f91a6da8eba9ebe6d47d1204ea2d594e96147cc34fe06e6c64f8ecbf8c6f10d86dbf4dcba48d06b8945b376b12c42ffcd6dd3c19cf3515a6e8e9cf63b551c0a5f3cb76a44451a5512c49ee73c7df02914541e9600cc0c3981f46a8b0399b2cf0a3d1912643691f20209cfc3cf1c67182f988fd58980d36b7bf8f221467910055c8750d8fb03f802c9adc21bf195e3a23ac1d474d5f10e58e05191fd0ae807973b3dd83d7268ef469a0f55bb46003d7e795f932bb0b0ee129aa27c9e38181051546b7d19104fe9c1da794fe69b5fe9151335f5cb4b2beae43c88d44055dbb8db461b707c5c65c13622966494955a30cb5fd7f5ff16bd994da8a16df0d7bfbeeaa5f233ec72e5f8433240dbd0be099665dd9d32ce76c27bee2622aabbbc8a92beefbc4f075de1a189f5c4461323fb4627290083dea7e3cb32d4a61657feb154de1af8f99afcd0c482e121abec5ab294aa70b631c90d9555506ce3cc9bc99ed4f7f15c2fac3ceeacaf7b2e195cc74c826dd7c6801b4a28f1ab1fecf3f947aeea5fdccd057f9452bf3f89fb0df1f119ed5a2b330d04ab53be65f72197586dc3b4d7763ed24918462905f4129b87634d0b1595c16fa5eddb7da0a74f6dcc82bf4c221a69ce4d45b5b7835e876e5b3a1933abf6f9464583ac4a5703d8c013873d283183d558ad6035fb56f148dc70665dbae16dda74e98de1be8309b9180d2cb966df64f79d08fa36f6db32c66bc5d8b14691b563ddd72308ce11ccf880e565b7efb7d180b928c05ca6a25d3232751d9c07916af615e52d51cb8287fd9c0a61f202dbcb9cd489028ca815154c95ac6820c95258d71bb97c47c623e69a1162fcec380ce5c1fc194dfced817bf994b8480ada68afe84855e771b3e8e14e909e09743a1469a54272793ab1217c81397c62d4e0987275e79934b7a761441d8275f6b421b2eb9c218a1691b2d542351ae700ca74bb941e2603ded8dd15cb315c2ddc4f5785ee335a4fbab64e7a5fc8ba688148ed5ad9d05a38fa5e9334edfc9d1a98a41f1f9714ce68135a6e402c3def8ada407f51c722b473d013f930a56f9de898fafec9080f5b3d9df77c83773549dbbcdd3a06548fdaebd14d5ced0a3a957990edb05cc056f107c2a2fa566fc7053a5760d398941490e2a12be134c0bdba0e48b8c574dbcca61907279d9ebbfd428538fffa1beeee999d477671aadea593a9816671a8848f675b81446f86f209adbef984b31b321b1ede92e6da7bf48c76504f7d77ca420f8e6366d8b89aec34b5b99500cebeae3132ee393db65d6cee8aae0118acff2534650261add4d0829b53e5bf1c034d22ef227681fc868d77aab2260f2ff26dde1f9ca5e04a1fc2b5c67f402e5f486e22edc0d8b51adb04117cdd164103b0741bb88c0359e71313cf51da270476e3a6db99daf761e4c3a3127e004dbbb573de3eca00cde3d629ccbfa2f6ca7fcfdf026c15f5c5c5a6091e331df66003ab8218307531f3791a7b9f0c392db9900edc4690cb2cc8c8aa36ba08634170e5715844df839bc9e7f646077b8e237cfcd880661bc67b80a951ddbc283cf24f8612223be1e601ebeceff269b961b507878adee52a2e7e9937c2f688e880a0235dec8e81368830d2753bbad6bd17b48bc5ad928c304eb0c450eb85cb7c68a47b8aef3564abc373fffdd1b9a2c362983f84cbb08614c5acb00713f48839617e5d03fe3fef36540298712bf76e1e2a8292829cfb85d224d96747578d0670f78c7b440cf933fef82fa51ad09fc81b3f1b0a1cf44e8526d75b659ee9c168cb43fe9c76112ca74b0a415c582e21fc366c008f423baac51647797254f100e9c9a61d9305d0dbb250a9043988422d8fbd4a4d83ed6b5f07af23906b3beea1380165e9e0ab0fd9fd2e4e8c4bdab792296374ef2cc87140adcaa9506570a32ff8500442f383edd82ce19e8cc57b4351c14ed05245321fa69ee4fcef7e35b294a4c2917f7097ef0b15558dc1ddeec30ab892c1df991ccc78a29c64e5bea56fef4aeff48cc74ef137cab6b4aecc224cbc0947a9be826d1aa840869579ad30d68a6591242c810fd1a61e2870f0654ef10051a48238315525d51c1adb28b74c10f9017b9715aaab3615f81d0dabcf501194fb4f76109a705498ddba3b4ec05c51e68b535800d4042897bc18394784e59e653e412e38b09e2a134857572bcb5b495ad7007f5df08629e554b0928843856fbb0f7e7ccdd1bb2f260cf6fb5436b744b4e592736abf48488fe90dfcdd80f380b1f7ef810ffbd0a3046f3316307b430823a5f81b5f7dfdb46d001e023bd6d50780ede47433d2b69339e7f7435d2f75c6782951e7eea5dcd55ebf745a8b06cd7eca6b6674cdf7bb16e3db0b195ef172225fb6f627778b9e8b8c909dd9453dcdc4dc70f42f785d8451c4a2d1f88f6375b4812e68334165c8a37dac0467db20f0432d9cf1fad6bdcd738b3b6027745629dcd4cabad775870b7e6b998f711b05a0c56e23e5471abf60e482b03df2cc1e03fa6435e473674465a6c74b2891ead6be06d48463b7ec027018df89467f7e8cb3efd065d746e3a211008f0f251d43567b2a109de235c2c9f01098724f24e9b70dc9edaaab4c091ae53a7fb6c756e02a5d8c81794081296d050e0be162881ed2c5bef2315f08df064d27a35647091c65434290e3923a4a95b3ea201e99b2832477fdd9c0bdcac771f98a58bc3ec6f043605f498768d9dae585ab3b36a51e841a0587768d203fda1f5cc3800613ea8a8791a1cfbcc684e86b973445c95c19308384cd6e61501f0bf200937791d5280958255cfd7e30a51fc28c24785c1b37e9170a6796fc26c92c9845afa0d1d73cfc8a592bfd041fcc6403886e52f5b157559c86e5a28973efe73d792b5344fccaabb25425587736fc5d4dd27bccc3c679ab35753e7f254af7ca79d25017ebbe55ea5c902893e361bb9fd99122e6ec9ad16c311ecda66547698547c86deb3eb55edcce1cdfe38af34fb73282fc069f0fbc76b921d4e9b01f556eaa34ab68f1d5bade1424c48aa7c580ad2cf80f5e6d070b8596eb71e8dad7a0964b4e618295461f417bf2dc9431f5c1ee3bd6db51abf7dfb8cb20976e2df6480a064c033b93204811906188e704638d608f454cc15f63419f7255afdaaa91e6fdbcc2482dc89a7007381aeaf4d6cfc6bc11ab9f0c19c0d43db5f88072a15c83dfc6d6784f6599708e56a15eeec345420372da2e774b7eab9e99938df16bfbdf073f64f5605d0db9a8dea2c0a339e07c519033d4e8a7e883ecfec440ffb683a90208395cd6e1905c3e203969fbf1120046cb9359a6310ea1319c874b10a2b1702f1e1c265bcde0f321c6323ec2f70040d9afa94d402d1b1cbcfa6780de420414d75b8f251cc464b891ff28f7947130df36342d09424a0418e6d4bb13890e86f42ad050fd1ab6e0696ce15dd0a58e0fd5ef870acd3743a975418e118ee7a73ba01d5593501cbc754892be0782dc7f9a95da64bf84353e72ea030a13e2541ab28722d6b567de4d27cf1de2b0102f333ae02eb13f4b5e75ca3cb1fa0ba5978e3ca7b45658341483bca03c8c6d4c562001a1a743dbf7ee17711812719bff2ab517981e63fe4db919ea9613245ff6e7188061131f7f8e5f5d14cf36fc27b47c7fe35d76ac5b8ca181732f2cf7947a8ff79d115ad3e5293211d3596e18220a1270a6aa07996061d3e23efdf0e5146f90aa4ec0b6e88efcce240194990e91b1096ac7b0c916005a1e472e65ae91e368e8444e7cfa980eda140f3eb6d5edefbe9e7e4824e51ae765f284c2bd41eb34317b305cc3c556d8934024856961719baf425e7071ac94f1834148cd0cae2155b107100d4bb8d86aee4442718fe0e2d8772f9087aacb899f2ff2634ea503778be467f19b299565692c483ec7516ec702200dfeeda1318d56140dc4d779bc8eef7511e8c43137ffbf25dd0ca0f6c02cdae48cfb9efded9b77d52f930d73c51c53e6c51e42bdbb376445f852b6d4aeeb4a9fd97022c591e3d32704a63d718139786c7307ae6c746e97ffa105e475fde7d63470a1a0238cbabb043e04bdd015b5ee6ddc943f3ec97b39c3ee1dc5d7db3d16a26a6e1ce588ba9e8e993ed260bce1f018e660d4f6819b9d0058ce526e69a0acc67b2fbd823c639fb09eb5c3631175a9172d57c661197009378fd87b41e1b2da93ad5f3f6d5e34c72ff2b5d7568671a5de8702ee9e5aec8bace84f9c035b3199d9a913ea329b73496490ee4788019d54a391df5f4d2f2e2e5c545945891525a5566f4656c9c879cac21e9ea4511ae29d6c3171d62dfb3aef2cb6e3bc664ccc8222c37fb72d844b5a8fcd5ed68d49732c1e4f84a55e9ea2f3f3f3b33f07c2e759d5a02885e6cf1fd363b33e34fc0cd8f78471aadf7c95586dda68c315285b032d9cea927208c2045d293f77b7936ebe37cc4e24cd5e526502c91a4efe9689e97aaaae134e52a2ec64782a71a79d77fefbaab0f25f25b61b757b3c72096c9e28386149e527260178f69407098d39c17f1258f6b8bee18c7ba149734df289130ebe6f17728ceff20be7ddeba442d2171c2dc75eedc1769e4f63eb8cadf8ce5eaaf3849e0a4ccf51e9a6aea62b9ac31381de6f87f7f9c13070379606b45785d3e3b9c3a387c1fae6af56062837a5403068fea53b57367df798e130f3c20b6dfb478868f81f3fe2e3aa863d5bdb9230e718e45d3c54fbc50239e49db5efba5728cb34c0ff5017814589cf9b7cee7c42c8cffbfc00711fc5f32e41524c9adf382fe5d0125b91057be4d6a741e5c452518d59b11e7b4278a7b34b35cc20bb581a7050eedc986cb53d7bc8e33dd30b6e7b915b1e22aec5a0c4d9ff0b78b04ed9003c4b4a62fa3a5cc226eaed6969d18d5692f7fcf1efdc9c2e55bb672e0dc4d90f90989014fce0bc5939bffe78b4c4256f57747085f2ef55e7599ab6f70cd6195da97439dde367efa1ef4c410ca73ca354f28b649c47f73422ce1bafef80bee029de9d89a335a31772600ff6c6271875ab09fe1bd7eb449da2b528d35d97be4cd76b6302dc8291ea19e9769411b0428a1b686a4968d6f000f5dc303b323c25bdedfab94cead68433d7afec9f6135ab18648054c7964944b473db56aaf9f1413679a605ab699344a2eb4e38bf297114a2cf337738a87a0862ce6a1856513c8f1cebf2e8212e156c5aff1bad9b5c2f1bed4dbdec1371402f9e40d570a1bdec3369d76bdd16a7a610b9c1dd11a2d647b0e72c459dbcc3ef7c3dda157cad912b7608715e9454497c37b547053e7f91f2e2ea85d4572d23e4b01d9202c07deea039e0ff476b9f48985b996877a70ccfb4f43d78a80cc87ef5075a3f3d04a5049309a2394262be0b2ad60d1e41548a82f3c1c24b585ce54f931fcabdb3cfcdab4d6020cfc52564cc3f62084ddf388ba821f0d8b30768d223cc6b6684beb7a887403f554b68c339eacdd401e10fd213997e2f0a6d5ea036167f8eec2078efaf45bea14b83be72b1b27bdb80d846624181b16f82b3c0b634084a66454b0139fefb402596dd26a43137c288009d5130406826c5fd8b323b41e3f1f6063563553252a393104d33e71e99d77e292d2a774896a351b431f8ff0df73d1d5fc9a662ed7fcc20b74dbf5caccc5704440f32b9922c678ad93eb16f5e1f7b3f47c1d7b253fb2eefc3c5c219edf0b819f8b07e31bb9b2fcd2c202ac138cbdda9675f4de078c1e892ee652ef0606bd5b6b1591dd058530e2187177db427820f94b6d516570ecdc8ce86cc793c855a3e5d54bcde5c41cf59f8df2eec51c21574c54073a070f86c9287637b16416b227cc540e17e444d214dd52a4baac97f6171771c124c227b01a73d553adee3af3f0eb37f754c20f1de7a8b616105deaf40605301eff7099fec67a4ffabef800d740addf6990d085e477246815d5c2566e24df55c9ef8e73ddbd9984f433ac08e0aa228196c9d256465f52588f4a85bdb7f6a8fb524c94f941e402d63cb743c1bf081ec6c1efa709287898b8f5f391bc19d840b014d4ba880707055875ad1e510cf728fab1e37ec2a934e95daae0d12eb019720d612d20a0908511de8bb5da31097359d235c7a9c1d7bde11a4bb30b14b4189eed3f4eceeae439c2eb1614f83b56762ac70766fbc5f84474efc3a5d4d562601db5ad75f92394386b46524fbd43a9b8b5814885ffa74b7e1e8f68aff3c3b094ac4dd720a72696fbf82858b79a6a3792621fef692a93fef7e54a329b4cb950e1e2bf231c754877d41026c587dba4dae0b6c98f4f0a6abacebbd35b943b1e9f31acea70473aaf60b7ba7429779bb45555b4e011d6cb7ba9e2447948166b4647ccd5604e8e2d44b62b12661ed743cccf0d7a2cf17b7e767e7308fb8bcd1b651b38561db8a0c938358e0018744037ec24cb8c530d0e14448d724db016c87dfc7acd9620118127792a1894ea88a4c61389980865b82951fec0e4d479e4e6865c1d74b4a389613c71653f98d6901b06fd3b4bb26089ff681181c361345ebd8fb3af757e603ff707d8d88d665c667b2b6e28c4e3398d7bcd0caa1098b7b96d7b6e58956578d46538dd122bb8032a91805b1f79b1327f6fca2af5c113be09fb60d5494afecb5c05883f60a754067293a264a366052cbc8d1b412a61201de21414556c770b6b14ef8612d31037af13cc6717eaafceed6a25480a62588acb88f2f09d6658cfa4629acd37ce06307246a86a458e4481cbdeeca21123b84a44af1ac61c840eac5277cc8349a2b4aae61ee8d2f43d2f32ee806a92fdf4317d4d2d940f93fee3f6152123c06284b4a3ad1ed33f28c700b0a36719048b89ee81e1a34e3991b569fdc0c0d99e87e2ed561d2cc024578123b49c8e33bb84efe7a334347bea5930aec034bf9f26ecfe24e1e2dcc324449d4e89ea51ae650f8f4fa07019418251c837d815b39493f36b8e3f14ce7d4d1bea959b46d9c9801b5d0166447e2e93eb22e685cb96523a4d5684459b698a9aeb0b3798a53ed509518ab38a2780192cff939ccdc1dba35b3edfefa1c8f5be9674b1fe2eb21a3a8d814f6c1d7e224bafce4c32fe89d7fd8351a1bb971c43785d01985e645bb204ffee18ad098a34c8ae21929c3a4ba8ea282bc7144a229c26265c4b788fe6659432998fe8b5ba8d306356cfcff4a2b0086f976edb4564897608c727cdf3f9a42db0a2e111c2aae4ee67639107471c9406710f0bff82d1619ba1c01093a6af53e41ed4ddada4ba6ee86984ad87459ed4c56b6ffabbf32db208912a897ac40b7b3aeb02b7771deeba65c353aa6432f0b4399f50f6394975e31cc0604f0c70b603138a3fb12cd3553f9573f22f05e74f5365ecb72e3f9f08432a5d7cdebe8aa9628046842bb05b517aa063aeb1ed4ba41ef94f9eacbe6e9eee249533f094cb37817699da7e24347b7c9bda83fbe1c070f725bf05f48af4822e8fe3132791c555580c122230cf7711156134a2a12377948c687d0e5c43d4d70522ba6507d62939fbd1cbb49163c5269df63006cfbaf699f96bedeece26cfb01ac9cb3fedc9e165425d4cb9a022350953905ab94605fa086fdfca6f0ef13ae8ad81e231315e016f1e9b321b84d8961e4b321001f9c462ddf3495d0809498488f61b6902e70dc35ed6dff34aad7cfd599e38e7f41f2308d3a5f5561a9609b19b520695ec100a3d93010cce21e7ad8eb95287f18eeec5f8d9b4d29cd21625fd5fc8293ad48d319b4e8703e792d42c7c76b7bccaed8a690b132e9cdf8fb92e7d01077a0bcec094840b1dc3bf5a2ea2be0acacfb7d1f0c1334766f0a9abcee8bbeb084ee66d879fa4febd62ee658a966f82a5f7434bc8ef69850de53c802a53a31295786e4afe4c919bd6afdbf27f3de8b2d9d153fda527aa465142b7bf92caaf8586573881a99a5375417c15b72fbb9a7c32b461b868aa2bca5121a4d993bea24be334f16feb6b6df8b915a0007a26c49eaecdca0f93673b1453f1cd8289c015856502bf29fff786009b8bd245faee7b6aa0ae964d6855debe287831331bf0151ce700fda0c745dbd0c84cb087c671fbb0716b3a22c2f5480d08084bcbd6d4133ce28c24c4a485d4e64c23274e130d7828b3030208e1e507a7e2c66fd8254536789b2b033ad42fff894c40d404fb2cea71672f636ac87cbffaaa14ae30875abed4319a9ab0498917b5e252d59165ad5947522c228ae07f84ca669c2bd4c96fe258c96d3e0e9580cdcbc7e8cd920e6879ca979de3492aab3f3b186f32630d6a59ae762e4676ab41a4be659968bb2638524ec8a6b189780926f39eb552d57159c8c3853aeff569352d2f5c383bca92da3164e2d592fd024ef625726d2265dbc06316fda15186e93d2e28c0c1ccfb92431baa0f0d886cbc8c5388fd0bb530df9896af2d76413854bffb6d2fc745b2ee56a380742f76347c4725492cf9ab5bbefbf418c0a879b90ac38b759a889c8d944c1c81b9f169d0f38f4f56e88b4b1030fed6d1a705ca30c88b2cfa616c38a49589ce671fac071b3f21d272633524b551aad1a9203cb01cfd2eab99c71a87bf05d7f1c503e8227864f5928ea30a05850fa129338b305ba6fa5ecd33c76e32859eeaf94567d9f9bf7ee5ed404a6624f58bcd22db08fecf1633fa7c1d40d432bd3108cba3950984bdb61ac94c830673ebf2525ad3e56512c1339f18ef9d1c903ee22d7a2a34f9bd4adfeca42bed94bbd0dd7e0decd7cb7ab571aeeb99b66cd6f17a5b4991c0f3275636f11c4e6d4067b7165e4e06305369645bb6f2069b5a2f5576b064ba3e7d2657df4566e52ac5ee31c861a23613fcf5f189db5c41d96919def015742ff095f3c463063c11aba33153de62f2303a7dcaae79f9e1eef49bb43b076c858d1db0eed42acc528f39b392a33b7062ea3c581ac2e2a4cd26bd29d50b6ec0e38e4f395eab2a0adf6d8c85720df1210f2b6c19f2624391befb431685787f25a118e3e3fe91cffff4297d3e0e712f69e00e69296e2bab3668681f6da5b69355809b3b4fcadd320454697b0da35e476dceaab6811a306e69460e233b6b37b6c8014eba6988239f9abf487269c0ba0e676af5d5bf7311623b7d1ae10cd4db150e318a300f68a8f03c91af30b3270d0f9a02c1aa057d51247da938ef70a77ae6feec32be2fc2ba9ed5fd753d89f258c5813fcc26044a6d6fb0e32150d32489ef4f0556ca7d8a3edda52390c5889243e1c1ac85d4d3227266665330bc93ea7c9e7a0ec013fe08357b5e5234f1b3b9705791fe47e0da9bd02580321cdffbcce6ed7c6d209a77e52e66a523cbb8e92298b3cc05ef8bff0084e6628d3563525dae2c3c5d373138a99b04c375f8265787e1232ad37768b5db3af57c8bf524c631214f34afa28125eeafbd71734be66b84fcc1ea94ed702cfb2b725614057aef17860b2f1d113c380b504fdc4334517821854361c3dfd9925be73b3b10204595b9ad3819e7bd71839d201fe0873532b75721305a4ae267ece0a58da21b303acdf72786ee2bde8900b29c79d3af91f0c0878e89b2957376970b1a0ff6eb8ff41c9fecf17d804b5973ff0b94f55536b725f89e0a538e18a4e293dbf749ca5ec12de5e07ea98d126111a8509cc3dff240d096f8e11064dfc0caf1b60177c605079c45f4ebd93d62d91bdb0929e75918b0c39cb52410810e9f2dd6cd617dfa35f1f8bc996f0b35a359c4c63492ecae0e91e6e3fb31c9c74c048a0bf3ddf0692be4bd7ce6d9d5943143ca4f4246cb5dc453dc7b4d44aa02d177a15f18267a3571691e6559c125f09ffb99b0346a0c4814bb5bc04793f27ae65495454b05ae19f87c36b58d23ab438f5fe556d0bc74dd6ad76724039b28a4c05e4cbe89392da71e92bb01517818b26cf16369fe23b35bdb705676c0d61270b8f70f7066631128cc461db53f309aab98ae99caeeb61fe4c043ed2614a05189d5b441963394af7375dbaab66d487e79658c1c0c75e011f8d7a8ea4a155fad8214bc0c2b3a5f59b26e34da82413eda72acbc85b001a3c4cfc2e2d0a843e09fd1c8ccec0a9771c3f92cbd6b882c6b67341a446046dc4b01deb63304c05f3f9c338b86d8d111ab0e4f2247976ce9c0b7eb86cc10ef8e7afd82b8aaee8ab9181141e55d7aee91644d6a70b1e0a425352b3d7de06d33d3c73ea6cc38b318bf561f35a50efc59039d085399197939ca8c66075e22debb496a96781d89930438a1d24887d4185f34007982e62d500e3ba08d8d48782efd55bb49f4e1cad91432049c69554a6fe57997d97673162e6e54786d8a3883f6e6ce77554340e47de98d5658a320e8260b4dc59dac3d0f68ee5a491d2472a93c8a6b2be539e2745a4719b589a5441b9725a58ecffc872086c72586b2fec1c7327b58a1dbd799f8a07bc97f8c6885d017803cf1a957b4b9e2f1526fc7a410255beb6809fad139668228202fc15668131b86cb68eaff6330d6233f99e3f8c683bf7e1a0c8e4228dff6712bd16cf9ce08e80f9aa118df41d3ccf49e4ff89e35bfc4b6367e683f21be80fa72b16fe7b094a207cca098de5cb998a2815c18ce49b5419e5d66d1a70c854b25b90164650f56bc6bcbe0c5e564ca8848b229c016b56a19d05bb2d3bc9531fc351b7e7fd13255159a558f1a6d1a434c0bc5210f3bcde8c1441924a916a2f9c37b64f17632d52779783fa1678fcba3aabee30517f0ac09748587b067d4d37b95630dc2cabd5a6b85f492eec7e9b0694a158530fb8f816c091ec35a43e21e1ec3493fd91ce9c0e1a6d2a57c8986ab3fec0128d62f08005083d1e73cfa3a9a9b851b3a09ac6dd70f35609f0e254a0401eb05f7068f3d3bb9690e33fab24652e487b9e71e751de1b19e667f9277e35bf0ec8b32ccacbb6013a7169dd895443df8fe6050cd50cf506ed260d3520470621c1740d9bb5bb7979772efa3c368b05112e29572a2ff8993bc90122f44e731f498c49fe0a9eb330873ab36f386acf20a9c6cc1e0f439ac96d5256067b7c626271dbee7070284fdd114a4699e65accd541bff5def053225768b8e7cda9a949d32e88d0c46ab45fd5fe91cfd0e9e39f289ad75aa7b25a488cab1cf443d55fe10470ce871f2a532df60f4ebd43492749ee0f7af3a03b7bdbf06912aa2380cb1853d15681c97d0c9eb2f2a82e084090ee194acbd5aa4bf5894437f4b1fefbb7e81b9b53b65b019d72f3c7fbf75434a62cb9150b5ead75edd283ed961ae81ce414183a5d7a53d585c9a0047acda984bd7c5ecc4fb53fb4c661c63f4bc54b325f5e48709868e2ecfc819d4534236afea1c4935aa7ec221bd2706827d527a75de6eac1041d6e84a648940845efba4cd0c3e0d09d3540987acc279e0ab099bf56107d4596fa3766c97e8dbdefa1ea289ce000b406e915f5b13e55ff9e2feb7bdf213ddaa6134fa9177dd3952a739da70c8761ad86a278c3b5d8d0145ed14b9922c527627de7dc3784d34b5d5b887d6f8b2aead8761b9ed3cfcb44f9d019086c71de5c45efc4c9b3705da8c11f13cf476102b524c9bc229596d2931d0afc94757c33a5f6981139dad6d0286e7eaf12261b38941af5038a96d4605612f6895687a77f908a67e00db1001faaf38e100f37571a3b0ded3294486316c34f884a5c61b386f7d008f0c510f4da09c82a24f18ffaed04849bb2589a025efad16163f73142b3a047c0fdf1e499bb661355b26226f7afdd9a7381076cc6ac4f843a72d10199c9d9a49b0ed87365693b83a634b92f0618cc5db82762a45166293c91c6ca903e9736bac47025171e808048e561c674bb3e90cfd0ad5f8830938f2fbc3af135e1f16248f94d5efc3f38c6d99e1dd759e3706bfe831e8cc81328438a338c6b62c85ed74a128a5b50314101a83cd44647bbe7f502b0f867745e8a45653a1b28772702999d696320c59bb0032081b46140e46a3542a486ba46d53296d09f801f2d4f6f222d02351071d47f1a6469a7cf62572ae5b7ed379696c074921582cbe0e95e5d6b031b1f059e16d3ce69c901ec5e65e6dfba30577f7e07741dd4ee1d25e6b8ec75cdf3bbb7681b5c41a57092815dfe329f265bc128981e4ea6cd9e2fa2ad12e696482b2ea02cb92e6c808f84a0298ab8b0bff69dddf224e2ae138cd710bafe61ac4b2ba26f6ee3e21b85352769ae45aac7a4e30c2da81b5ea84d9a66b04aa71823976e831ee19dec03e93831b3aa75e16554f3b85588fcf47a7167a961736257777b28284cfc52ed69a12b621f0bab77d010bcc7587bfad826d33500b8b6584b2fdf06375453e11f94529898e27682ba8634cb08d0fa50710541e84fb560cb6b55a1c8fe5e6378e3de81c2238c9e4e8a33d1dcae141fcd42e8ad8d3a3d65f1b7cece0f077128e76e20696065da4e06a80e8d46fbfd7419db40b8dc25c6b8871162070350942a21074ffedc2f5660489406fb31de58bb566bcf65d6fe2e2d4b973cdbb5a04f0a78fc89083b0d36b5d060eae7f344e7bfc8e23b169489a8f886c8a68b0e5b1ce692b27b7df4d6d2c3c41de36b203fb71b7557f8d73fd683b563345cb14744783a80a0abbdac1bd8a1155861ac6690f476e63da16e17e8abed9ff28b3fb295839795d642dd47e39b2e471f65009aacdd96ad5b8c8ba63874577cc1ff5537c8623a6d50e9aba09171028529635fda60df215e23f68d23c4c79d67ffa54171091b6e3468b95139c2267bd7a134b6a1ac02d72796103ac9642a1c58989d4b1f8535a96ada9075de7caacb76d22538b36cf2f4bf29fe4355b61cbcab95d323aa7137cc97351ec03c996b3f23145191bbbbbd2877b809c7a38808fe06766aa3b32dd31f10d4c50d45a59b3865b5a62b5bc8ddf96f492f4ce61602e6119720fca90b65528eb301323bb38792c50d4441544245569341cc6da3ef3e87aa4c7f254fc16211657e484685d16be8226e98d3a0abd6cfe2ea79f063384bddbfd8399772080d048cbbeb8303768522c56fb9abc25ae867e9f3ef45239ab10e3bdcab4e9e5bc4003165930d39a5dc57b1928ec37573815248e2ce7bd9dd92e0c82fbf91f4d2be045bd8acc479a7810d5b5d3777d920cd541b7250ddba674e1f8c8613a068ce5d75e0b5efb2b3c9527ec2567b77b14e3d8bc552e727fce096e0529162ff5b55cf7aa17de6a38e99306fad4046fa6ce2350da1fc0613d658824db646a0a03020371f4d3aba852d40bb39b6131556c77dd011372ed5b4de36e52f35f62d9490727d0fd9a509bd911a2eac5e512675aa1fb81833a744debe36b708611b7cd89f0992fa1e60aef893a595b4af646f689cf6e5ada783399b4317b64dc0e3b05aec48e73b68d48d203bd2bcf09702269590a25466c982fc467e054ae67b6c5fa59e35f5373b5eafb4108c23b40efad97fdb5cf2580fd0c8277afc92183923b85cc31aec47115236866ca6d282fd1fbd9b0fc83125c20bcf6734d41b19772ef786b9d609c7715d1f182856187c0decab1d01cf2e4bfdf74bd2356b3199559a377ab09dd5bd58a79c0a625957f2302f3f28e9065c69f7f087fe041a8e5fa99a6b8ef0c8b1db83b1a08fa5e8a7d9e3184f01adabfd03db7a8ab32039292dea9bf77fa64b06ff34936bc917ef21917c2a21baf1ed018ecbcd4a776495aec76cb3c6556aa5e80dfee4ba7160554b6b232a029cb06c84a3b349f855bf5b8cbe7b412e444d1b6a0fa119a6f157018a43fe5c8b09b6bcc039d6f992a119b80e146204f409bf24ef080cf889566de767fb38d7b7ab6ab20788626a682f1437a58173932757c19451eb6040db97214c4653142940abf9ac37b6d10a621649a06ef3e6b92be2f51744a5871c0614a7987da7af05a38a4887942c32a7e30af055d2825a440be0b9537bb708cd66f68660074d58e2761b4b3862a0cc7580fc8006b49159ff28700f5aa35b13313946899032b09015cd41e46de7bbd8e8ac7b2970824a374a49ef45bee2b4966862d3461709ac890f73c004e7718f8149ceec06846e769b55e18da42400d89581e4b9e1c8233bcc032d11b83bf90fe9000090c1e78a7031e3c3edf7729387a2f68c38074c6320d84ccdb73d804e104fedab874ce8f08cffd6c3b89bd3a098787a6ede1a76dc451dfe73e8964aa3441e8a4107a6a74ca082765de2285c9af6266eacce347ecee5afa2281ec7b9084c8c669fa460320ace6dbdd4333aed82618fc95a1655fb8f0435006f83b94c1b8966a3cfc21a783a2927a346ac91faae7c19f6f6011dd21573eea2a00f337f3c47e2ae78d9722e473364cdb33a3285a92f8798ba28632a0da4a5a29203b0312192db907cd5190ff5580d4fa5f61e09ce74195f22f5680e82bf9b1b141644e0e77dac69345d0be6e08c2513535fef133ca7458d0260e174fcc1a3a3d9cf24600615ce67b5e2dc4feaa0d434caec847dd971b00bc8e09cd2c517e2260e47ae0d91e06140e74fb6200984bccfbe9722e1b361f48ab302a199e169e0ab1d6cff82d508a89c2cfe60ed2997b889ccaf483339b0c1b1464b69f767150dfa564ae0ee9c4a4c34213555582ed8fd86bae8998fb5119f680891ab78fa873c2d4003bbdf634dee2b8f3769bc5aa12b9c60c378fb4fe51715cace6ff7601108a7d9b1e76e90e82724d7aff8d58eb4701407613b192e85c1d36d855ab98991c4c84e476db3155ae9d98bf40d7c8d321a15f322cc717c283b092011168ddb0e07d9d917793e341590b00e00c8c22d6282757a87c48dd1dc82116266a600d3e0d29c366e7745ec2defe92ccaab570201451bf448ef28b46792ed7cb57cf4c126250da713118a22c6b70803eb1beddc2699b6ab3e4ef661774f3753384d8bec048d0b83c2d3ab9e18223bc63abaeedc383fa3074937fe49d4177005d30623ea8ec8070e4664e368d516d1ff27ab9a0b9dd9ec6c23f3e871f4a2a577d97330de8600902b4c6afa3e5a2dfc005a97466a27163db19bf1ff9fbab36ca8826d5a74df0a08d36f2b425d2181e08b48b14da6c60620ef26c72d7997f769cfe65b28f8ea5c07e9711a53dbbcc58d6020fdac4ca12dfccb4d3b5a7ae2068b4d1610de52944d3f1426626ab04cf8498361b9f380d34838afee0e769b0f5d05e561f5e946e1eebc8daa60440fe5abade4516711dfc6cfc10478543db8ada639802b2d196dad6399462308bd97dd0d7cafd9c077e9c9f5c6d8038403ae9c12bf975db55d3e58e67c99392483479d6921922d2a41e448031c0a697e6db4d8f274d436efb2a0ac7501a1ec71be7a22c8c3ce614a3ec3ee6eadcba2ca058487ab6f85a09e7e60f99f0512e01a45472d26a189930d0d1c322b913242e7d853400939f63715e2640f1fb105f2f1eeb3ca594acc777c69f413a423c79c11fc86bebcaa255778fc9cf29c3a3212a7a78e83fe5210d789e31ded80673f50aa6e26a4874c328967863892e0f1473eba9382e6defcc5ea7dae65bb8dce7a75e2439011f2de96b8a47a58e67271af71a74c1fddb43c4f7a56fa7f7b665f0516164431d449b2a69c27673bc2bc15a2112b838ceacc09563f8e444796433d43fe99e71af3d2230b3c1ec3168c679246985dfad1be3db7f91e21b9c28afd459ce3eb69b08c642738dd31c8462dded50e63f5d082a3e7a3f7948615292c392144f94240ee763321351c46d28eac1c9cf4db0aa0e83fa4ca1349d667d38ed4fae6a7180d7bf18c08399b79c4546a682dbb3bbed92913944ede64fa52a89e06346cc57aa660931f8ae2afebb159f9f9168b640d2169fce4afbf8ba0c826bf73a3f064e5654209debf8540d2393cc636ae7f154ad1621b7f965ca720beac6067a6ee444d535a556d239e8202dbaa2a805df7f3aae7646ce8ee5b91f11856212b15b2e5e691ae832325296295f1f9fee790a6bcc5f76e0c3896527fea57a54d3cf226f6d6d9de068c545ecc0a648b7537c4840af98ef31d7d8e322254b323412de63a089aeb61358d9f95075f48a6be449d42cf4c38bdff5506daec978bd3d028f6eb18d4e3c6e234ff2673fa3b3cc3135987f8dc2470a584eb104641b54311717d5fb86c33781df13367eae86a39b5833b7200fa6d799daebe17ed5487c11e389e181cdc12d0575a730d2df480b8482cb60c63a37bba7831f8cb5f72c15d584bc151e199898fad65e9ea822314cb114e2a2c18170d7c28474189372f698a851296d2e538a9d22f0736a72e0b82e30f5de0c94f7be09371abefef847abd54045cad3a50aa565a3175252b1f8f4d2c28969cf12ac5bb02349b4821d0608f4faa7b094390ee71d506dc59b4da95f6088bd1ceb61053651126d0dc28045458cc1d17acea0a43a0294ac3f027492f3d7d99dadb2d15b4a2c3208b5ef7298832582ba582bea4828ac258a82ee3f7099f994b5988005ffda2e827d920733ff9266f3d892c4b828be63147d22fb00b7726d4c459cf473b35f606f8bb76d76de7ffde02c7675bdbd3c3cf81fd544cdab555dd8c9b19fb891452b382027e8055ebf175033989df279dcc2f9fc485fd33c305b88fb4886a5618c4a39ce02c5a1dd9a48d5bd98ee08da018efcd2595bc43c9aba8a408e662712baf8911b1d1fd96be8bb36dc31139b70d23183c4169218d9e860a573fd4ab8833bd70054af8a09a247799959a64d35325eb07cc0b1941b3ef64b64ab47e9181f70f37d4e9c171c9241dbe87c7403d5fd26049875c75899fcc0d5586c217285ff19f3795c642f0dbcb69708203b29177510465582392d5ee926049af1c541ffb64932b980a070b916f58b9e2c4b4da3ccd9cacd9cbf443a5ca2e67f9eae1b473f82db508550f686d8687b6a62a549845c317cf2bdbd36e2a7c3c331cd323f8e0becbb455b1d1aa695579c4d0e63bc94049ce898fda7495219b8aa3dc8efb29990297461ac64127174b27b98d9bd5e5ba3e7a9105deaa4ce305bb92cfa4d32a8a1265d65cff23199651b7a2ddf1d177bed56c2bdc386278eecc6c920fb6c68cf59ef9c09362d6d796ea8da3391af149659ab57914c2405a8b1c92e8ef77d0c4e5829c75c9d21060562d8c62b537ca395e778a897cb5f0aaefc3072a341c213200ac75620ffd27a6abd3233e9bf04b44e8c95fa17a2164f0b7b7e69064194bf5f5819fb2fd3e07bee37b6599e12bf6195ad0a38497383d3f311968dc3e47c21cd3951420d09fa4a17554236138339e7a058eee169edbf7f382ef3e27bf871a4162e215ced14a6668a814d3af71f4f531ccd5a921cc2b7012b6d0183f82fcab721c63fe5be57f4e6ec071a00f34830fe97c1ca073f7a60efb1bcfb3dd41a1e25da6f8941929dae26d58b6fcea03d814c706a217711c7fb715da0b8e8768456b62249c0f4c3ad874c30d20671ae3e03cd6e94d5be64cabbfaf462f259fc8f62a9281857fe275d1d68425af56b2896f710f37b58ad2502cb734a6468ccbbab4c97459afe607c15abec982330061da66751173b51bc7e8250b8dabbe1bf57474259e9fc18a9a7b3fce974466435781b730809f41cdfb66e8cf78fa4267e4666256b2cb7326fbba842b115faa6b8686ff07b23585184a17d2e53c0598303caad5b495bc2e033ac882c3de52977d3313692ddb6622d7f262cbdaa68d714e129d8e094dfd24a5c1878fe400adf4a4a50ec836b8c22df2174c3df9019d9f112223de5903d5f2f80369b07ba150e35c40427025fe373ca14dce098b7adacdedb0426162d44bacd462ee6d7a3d100f0e02581dbe4904749106baaa62e07f63b8f840f770a74133021f6194d5bd4c4a8a113f9fdeae04484f962ad8ddcc4945fd6b94cac71b07f861556b83e4a33bf0f960ea0e1cfe1a49c04a5a2a0528da82d859c96fdc8afc15730a6f614f3120da160f9e0197d5157d3782d3f92ca5bcb6eb1db37a15c293d5d6100b8192f248adee41f884ac0e3a3b7a460857a42ab0dabcafa4ab35b268c1eb1d7c2f30f654731e33e2c3467378530aaa7c7a1e400297d7c43b960e4018e31153908b4ed58c0fe21081a5bec1f5c041e55c854cd5578b5691b13f8020892495bf805de803cb89b21724c1d4542618e59a558f0be706c20e9563b06f0347609aa3f935e9ed52b35ff713ec838b6ca40b1ea148c94e154177102e446379c95e5ef3354e262f1f960f570a95d93e18bfdeac0eed5c1d217b2654a2da49a24d391a2ea61da1ca4bc58dcb036ab58b984d44c26fcd2a53ed4af297d7c5c77f405bd6376873c789775c8c844e9264dfb43507a7e84c2c0177ed4d6036bb95f913490da30c65d301d6b8288f581b93769722eef32dc7460756dc962174cbfe717e17d90edf9eca6e6670093e8d1f5cd93faf779e18563b5c007fc6fffe747f534f39d4db7d26a752449e0883322a9c480d4517878ea1672a6cb34858386fc00bc4aaee146767b4d27b3b6247d04f4aeb9b46ed6387017fe7a79e4e1b1ed7681955c250a040d144e6c6a14f35c3bcaba6fec0102756d73b07369320b7936d3e487a78b83d781647b1f4cdf0340b6f13ce4faaec1a4bfec55b0ed8463329ae8123e780b431492f051643c369e78d52e26c3a1f9a24f24e90009ec9272bf0be46b73dc5690656a355e9842236ed04b57f507425a67628e792d9c88d476e7981210c5a14698bbe533ac2aba670de25bfdf23b01923d8d6dea8c2431416b9901dcf775aff7cbb9a08440d7541f9a273d7c5ff9b6368f4a85a48acb552d8dbf28a98f18b2ebd0ce759ec28cb0edafdee100a5f5d0bc92eba9a62c3892a0913a9ec426df396432427e184dd17d1a20d7960a556a967169e09db16e70e8042d0992f29939fa594b51aad563a768ae743b0e4d6b5794acdc15c3574df720feb6553cae3b5833524081902f53888ae6cbbf26563b7c7bd050313ddee7cb8dfb69e21915c8af1e33655ad489979102f50117246454c2e48220ba12afd1cb1ce1696797b06fba442d545506855d0364abab3024d238c9fc2d75d2a557957e71911f57cd8db59a455a70c57c7371c737c9f8e09970d39882a6c3bf444ff2c1d686a57bc3ef3525c57875e737dfeed28a3b810dce0dd1e3df86961ff1658c6ddab7c64af7f0708d46419e68d167e6be6fbd5c99fab78b4a41d192bbf3635bf0435ee92d6c61300fe13572d439d65d42827f119b3875e7e92307192cd5904c7ae7592bf609646882f0cdd6bab7fce9dacd85e158b5fe541d962f4f295f4ed01568e689b62d8791fc0f91d50093abb6d939cd4e01ee7c08e33aeed634a1eb0281688c64bf466b77777b8c2e1f1e2c6dade2d30bdee92d18469259e5e39d597513a12ba5690a268e12b562f60040ec2a23740ada11c5d99de81b1f389442454bbd31ee83b1eb79cd3e1ff3c821ad054841df92aa3953920974da8e52f59f30ba7e2cfeaa2e9f2379d4239173bb88a43106c62bc84906905d26784e363df742f22e55be7b2102e7b4f46fe2042434f1ce33b44d837e1971faca0b4d92e126258da06688be6f5bc014dfa84d439d050106a47296d7a0f88b691760fb2f11753e033e4864af9a0cf79e9d968c630bd8e03da1cb26f883147db3474d34ca3f28a1df3f29d30638c44b4f5152a211fcf6d85ba5663442b799aaa3cc97c7502389450392034862d81417bb591874ecdcb7411a4f9870dbb7ee33834dd03992f6529a1914e4ea4c85d8aade580dc3b8806ddaf6ac8adc8993949de358ce234cfabe65e4c4322c0329156670f11d08a96c82df511d11d61d9aea325b05a66708b3c22ea6803b79172a80d4c52154be061181aaf88a56dc026b52bd9b185fbab959365979785ae52d9ccef500cdd9cc937262c14222ac870292f685460d4ba14bbb0de8d2857cc3afe22d6593c1f1f6827de4801f60fb51a37210c42822a2868fa6f2e81eae70c2de478f64eb29a57d16effa8f3a109e4d90df6e6d38d9d87a8fb416f15891b87b97499ca2f98a5541280032eb6941f0937e02f4336bc785eff3b17698f5952f60715706696d46274d719dd3084728c609702adf57050ca7e207c7fc65fda3c54438448ff04ab79a087d0aaa08bb567422d36a5ebeb5245824cf6dfe853f7e093af2060f7327a8b9184d469261255715d9bd3a0de164776acd72bfe45fded3c7ee70984e2cdc1dbecee2548fbe32c94b859c890bb48230a4284bc5eb614ee7e1bddf789e27665d75a2533d37f8448a97d06f8c8d21cb748f5c33e130ed5129aa0c69be1105f8df3174c918cf3ee40d17436fa425b7146e852a1204d5d631415d564b5bdab54e717abe7d5b223d80a1d8e5387ce55d1309e838fcf5da02a759bc470391b2f6147cfabab1cade261a47725d0eb8cdc61170e1185837cf3a0fb80c482ae054c2abe7b956c1d3c3e1a6b38fc97cec7037fe3b18bc126412bc82a691dd48e80f0bea5f6d81799a5a42fcb7718f9d389e71ad9a8b63188f4942dbb8e9b97b1189b57470be30347705b69b2acfc72b48daacbd04e40cbf6dc82d9c1a6b7c7b599160ffb8df324666e340d3c301e1fdfd1590197d9452be0f137c3490f9062803006c31cbc9779720921f12bef30fe74fc1f57272640f2b7b5a187c6d69321310915dd932611b4f23712246937fa3ecb15495f2a90eb6acd2822b7ec19026e4532ca6d98cd7f170a28058f2e4c44da2b19daed2bea77bededea016a18d5e762ec933e3989c5cd59af00ae0da2b7e4eb0c5bd2ec0a6ed3f68eccd59c4a0665f1e3b8b76395748f0f789bad9c1fd98e4e8949f68a5438c9bbee2c7c63eaa47c6db0b8fad3368d9f980b88e71cb3805c3d18a4288c20b5c0722bed357a91ed8877605f34c785bf7cf459d3b024e6f929976936d970b27ead1bd1a389a78bbaad373dc258d40eda3e18d7c6950f755f1a1d92d716cd8924376e5e4e774858a4a985dc97f348c4b11fbe94bb9d7df89b67a39cda62e81a2d19b878b8d84ac8a6ae9bce09bca72ef64976ca39c5a846fab32f19b461fa3244caf4a035613e4090fc163eb9669185f1d8df131239da5848721b01bd25eb2f6ec21343f9392163c69e76028c2c6446547edb5683f518e17e8093854a88ad6df67fbe1634d8b816693b86a0cd85f617aaa482674bee13e37c257ac5baa898a75865a6c965c5230449a56429beb3e64956d96b618b956b9d20db1d6eecb5c4ed37d13aee17f823afe8934e810b6c8d8d93ae55d654ce222e81c2eda7143ed87b89acac59995a5a7928adecdcb82b862ff4d6ed6778f24cd2087fb5d6bf096c51c07761565c3dbb05fcc4c8eebc88967185a09d60dc76c6b2391b252634f7a8bfef2dbed63bd922d92698dd6c3bfda1c6718f2594acd4286305fb8b4fc64eaa12a8bd23d97c22f85a24eef0eaaeabf604eb05e308e48e3a10c762f851d991bad40af2103292c5c1c03db6f66173b84e7aea0c4d6fe7d86b649aaef8e68d0c251fd3c8324aa9ffa9fe23b0ed04536606efae8a30b74299d74d948efba49b98f4241d4f3d9bf10a45271143400a47bccd07618efa96e262029b8360e4d85f20299e3a735016d8ef4e7376e4c30969edb5f3f42ad46c10dbc810ce8facdea7a054a6c48a02d112819a7f32acce85e63fe614d202230c362d5f2d3a9138440bed9774e865ecb13952b075d4d96a286b26268b5fd3d425add95531c34fbc78dea8000a71a90535b7e0c91e48eabef219d0dfb95e1045aa8bb2f37cc330adf9cd9ce9fd06f3e6726053a618f9facc37bbf597f39470e3f7faf0d7ff9ac6a5cf54b97c212cc58ee7567c03705967066d82dc894b9e9f8475f901ae2fdf63372432f0b327f58818c23c1c1d862af76ae1f073d41e88565d800477a17027e94d4cef0e43467233e16d0c01bb6a87b7bbec0de1f8980d8677f9229d326b5d38222178f015e716b52e9bd447e23f8520675957e4638a95daeef26a22e19fc672a3b004884c305f9b3c21b6cc5ed49a8283d8747516118d075f76f6ab903365070881460e99862c7e0abe71583d6bfb278588681fe0652e58b3b2a65698dbbcc5c19f95dc2d7c248a2f6b0fc771add9ee06cadba4e26f6a1eaa5951012f4fd9f4fed5486c2c637a907d7d7faa374f7ece5a10bfea7ce82a58772a5d16f73682ca31565b14e251f65a04c91f6b0a8a0137b3b8991e14f6215c2cfbca530e57a005adf18aced87e6a22026d9fe704bf968f412c912518a9f66177cc89c3dcbfe6ad3944d424980887b968dc4691b5e7c1bff046671af85b1d14c8ae8bd8d9a9e847ce6988dd2090b15bbb76896b99f60cc936b5d4189f52f64e80aaf0eb044f020d64e9c1e12ccf384dacec2bb9845cea270580e74c8ba662bc8681917b6a8f6c330c4dfbace71239c23aebb3481812ef87fa43b1fec6d5f98d6acc262d89d2ab7af7ff7950f79d819a934776ca03c67a3ec24b9240961f3cc72f86b4b8bb5f6cd3730610a70ef4fc77e74ed47383f5655c27c900d5e004698f92924613b3beb420ea82104a84e2c579576002ad2bd3a798a4efb360f53c31ff4d2d8f63fba666eaacc9d16d653579e160eb8d561feb3a34ca4f72b0cdad25a775c7b72dbeaabd247510ee707f73fc3267fb1b8a2c67637645fc715d1876eea22128502aa75261dbe402fd699b66e8cd0b56752b1448287ec9a9c918cbf545ed9ea88b4146b9c7dfc984978627baa1a15cb8ce5f025d19c15a3585260104395d00adc1e4e896eed0433df9196446ab05747b6263059956efe44304ae56c91dbe14b0a7a61c9c0b6bd37ed7ff9be0914a8645f601bb5a7e04345873e5e7a2153741a87727de5cb8aeed0e80bc9ed97da575bfa04eed91c29c48a4163abe0d2ab9b9d3db1654e9179e6c08f47a54b62d9396f756467cd029d009faa19df2d8cb1c4a41cbbaebf868bb34775b5398c452c6869076c90e33eb10a7f1eabe73ea0a1319baf35d597e8d0e7252e16ba289cd9f9d72d52239ac537057d6e8ef2913ed692484905a17017d77677d4491564cd8eb7079363a6761ff4ecaa3460bc58f5a167b178d036ddfb615ab28388049f847a0a04c09b5645ba0432f0f88067c4d491f9eee42a3ec8caf8fa28191a81fb6e75024702fc867d70da7e4c5f523115ee151d686626e480674bab40f6dd0886eb898cbc33067bd5ac935681498b304a95d2610927ac94c32c6558fbcae16796960bc66cb7dd89e44b4c1e4b5e6351822d14814e40e77bad04b7a0c3b83df52307967b4d0226c7a8ba02c221c60166d25b6e370543cfc290e80269b6d78e72bf3985853e7b38415a356362c9ad66d611e8ddee3f18b7fea92ff42ae6bcd411cfefeb6b5480944c640625376b8aec87795d7b24d4d06e34ede38510b5741410a434e0335744b6a2aaeb06e484101a664d0f561ebf6736899e1c5b609270022ea2a8a6656f7848bd88f7bd98ae72b56ac62b022312f4753975bb76a6c5c31b8a598e66b5ef56f7c0050e8a465b7e401a1e9a8d0ced40b12634c8f542d93b5bb00c49922c2db10f2a9e3346a109a3f7c487d0b0694d49233cb6e5731ce9c26bde0724d20e1773131860f73b0ca47f22eefa9d0821afe9864396b7a2c6949cec188dd7f72fb760131fdb90ad23865f692aa907b2d46b4049215dc7a627f41b8db90fd01e793a288f894b3bae6860775a04272e462940278e1fe6691a420cd781a52a85cdd603b7a6f3e7dea00892a296d29c72c14f6600f5f49911652b79ae374af14b835bd963dde02fe84da743f937e71d803e67a732b83011991fa0aa1fdfa4586764311041e7e13b282ddc9cf780f94c408ea0b3d8cacc2034d1347e667e804849b06ef55dc9a6bdb754a391a9d0e421bb77d7a00a7cc2cdd9d01616a50d34f15f08f3ffaac83229e7a456bb30686e762eb9980f61a5c52da79c68cbcf4996f3ab4224a38de000ff6825b757b17edf3bda41f992963cf38bb3c7a4aea80b692204cf24b787d0063750d0d9936a14c6cc0a47a83f8dd8d75e87f9c90febdf50e01589ccb27576da4d7d254d347db8a767ffb2d82eee93dfee9da0ba09c9eaab2349869581e4fa55626e17e71577f3f68582b70dce2c32b8218671e7e44cca0e993b5a351b752527695f8c36beddc5576e354d11c3d03f191bd5e24fb03ec45d53d2d3c3caf12f3530671ee1761e9f0c5ec5762c2388407e481730488a3a9ffe786d397583f573df44366ef6d251f3a4b1fd81fbdbe81a3826cf3f796ceb7665b41c2b5f83c0361d08e9a728e480a93b3579a61c2e2e2bdaf8e1aae33bfdb4b2c6217de86d575801bb19b2696fbd61da7e00e931c5b0a0111be607a1d118f6cd292ce73ba5e13ebcd8a85c572888f2350c1bd5785add996698515b3a22624b257d5c4594c46236e439d81893a5198c95eb6b396671bf7e1253d5a39d67faeca23971c41e508214b614c883b3a4f35bb38d89540f801f797fdfb3bc97d3c9c4a1be7506944c4303d10ca99abf94c20da305ed40b29b03380daa670ddf2b3f7e070fb95f37335fdb412eab0c639e6bae44a51793226ee14308b6be09a5b06006dc93b3d5755e72fe02680aed6a0713858f2717f2c04e2a5cb0e59a1fd8adabdda52669c692f0468b48703a6d122d6b459ed4e8fd99a15e4fd93e72b01f1dc6b99112b3981de1f236f2e208b9c25aae3fe5db080cc5a4f86da5a355bd0446a880004d9e92a66a052b48c063ed65006e93276044a805778c6ca6406b5998a51716ed21f6a1d0a44463611046dbda849e757c58f82eb5ec2ed1f0762b2333c5083151ff4aff52ecabd8f11fe5fe3e27d28f2b99fd4aea10e9657052f9aa2463dd261df3f8b78c440f17115505c2902bade2af8a0944b6fcfde66f43b2bd65f8a0ad752c2282b094603d562b137ea2245308970d8f8e402e4dec5201c13cd8666d7b3c2c20e7a3bdebd295448cbd95b5e9eeb42aa5e20f5b0f618aeaefeacc4de4904d827931ae857eb418238c74bb9f1547d57efd36d2c0ec77ce9a509bee844f44bea35705be38313051e9493c15c7d57203df9655b89525cad2bc80cfd2882a8614065d507ab2c545061ec19a4c4d844cedba56166fc8fcb1053cc002b01ed5c06528bbc226f4c92d353817e9db76e7290c246bf71fedde32b9d159e3f2ff182c122c9d7bf94def63c7c226d8bd8bf317f73b1b32e9202ffa1acebec64b385a319dc1aa7d6e4324bb6d8e961957bfd95c7411d2b994e5585bcc3364ae918ebe8c7a57e069a7e81a1ac9bb8297c5e7542de1f34608f4fe5a2f6890564a18d4182b5759ed37649e9da1210c2a654bcbdb7e7a95072dfea767bbaaaaf46d69d023102849bb6fdba160df61140472d22f98e947cbf622ae4bad0f4010a071ccb212c6e1ddc8330efc1c5702d92f7fe78bc892d49deb59de07199cbefff94689536146abbf92de35ad75cdecbd068b7e3809c0b77ca9e877c5d5753368e5b571726c39d9f0998219bc2586ebc4998b75e34435cb677ea4c0548fad9f2a80ba64a0ebe71cbd91b49c7da7cc61e94a3ba4166207fed05e16baa8a1a1266acc21a3aedeaa774dc27902e0f336454e5bbb346d52f7b0e70d7cba481c6104738fbbf5310777de8c121019c5e439e5c7719947acd2c75ca85f024042cad61f27cc139e00e1a7bb13050fecd75903aa4fc798015dc402f7a543f14c333db2f6248ac297cbdf9f967dbfe202e7c6ec5eee5071ca30cd10f563e3c01b7823632bc741522e6fb3fdbbe49861b3adb8a6fbe412486c3363902a168a94bd2601a2075206f24e9cc67b47fe914bc8d6f4bd5551969ec6f0f0a354b5a009de6ab46ef2a4b1cf5cdb07422a04ee93776ab9957f7171d2a9a3563b6a8220e40aa2b5eb1cc2a26b64b04af92717616e6b2bed083ad2460ef310b2dbca9701f698d484a83b8fd99148afb051a3834c4f6e6eab5c2bd1017247821a0a4e58f6007c0450a8c414963d21ab6e5be0bdfa9f334e38c081a40a1ce1a7a5ff813bf154a3d61bbe09661efb61b3ade3b9635e33139bf5fe89b7fead2b3052a5cf7b818774caa2c2a0e4d631cc012caf314b91cadbcf124e49bf6890795e745ef531e29ee52158c981eb7cc08132580045a40cc67f0f329b55fefbffb8e51ad20130634d9159a1b5f270c9dd7f2c0ec04e21eed36a452daaaa7ff968390d511368832d4532652eb768117726225a9f6e7c8605cd11fed0d25743886294ec6392a32b8c5f85d3deb776197019053c07dd727d98d305601709c04c70893f8c47ccf4d5f84539c2bd8b5900d998067192569cb767e868e0fc929cfeb5747f8d4d9858fbacf4f71277689caff5072089f3699637a290503666e0de9803b57da4ba5fa00c10743ab39848cab2c2babd12c675d7156b63bf8b35a6f1b67dd42ab4d0af0611d9208e2d9ec948b9bab37a54b8c4ff65df86aed18119803dd0c5cb67a83ed4dddbf3d572d0c137248ae4c122085894159d7bf489cbeacfa777a504166e5e7f6b34e38e48269959227d5d410a3004095896784acb2d2787d13b75393a4a99b84b4ca3f8c24e7dc1ab1c8682759c2d27e0ced4abe6fbd9ea21ade7c19a89a96e67db89d26da7ecf2299edeece7d4adb213f41a760dda79c86c090e3340f99622b7a2694c2a4990aa00c792c455bab3b8dbfaeb9f99fd9c327798bb6564ee99a0266a208d808bf0cb864b0ac0ae739975fa7fb35d5ab8312a065e97b1d486e00dd0ea28cc54d6f78927ae34d4ac4e485b9ba7a189e146316b29cc153366c30894a555ee821ce69d81b80bd7810f1e1c292e4c9e6b97c548aec0b7ea1111a227625024f44e9489f9be111f30bca0c874a382938dce6f85cb3c76cba98cffdbb6692547044b52444cb1fad80a110b4f87806a29e9510fcb93e7917e4787c74605987afdd084934ef4141a8fcc10cc2ddbbeac883cfddeddb9a6395113abde43dc998e32eec84daeb360fb855bd58196a5d3f2077208442661e00fad00073b4d2286548528bf2ce98f2232fe6ba108e51cd7ca25aeb8a85aaea4bb9d6881060dade4b3d3b6560e4c40903be247b84c63dee8b32e0680cb9350c145c0207330fba38107dcdebfcab7fb11a35ba072c13fac4e91ef3149f6878e4614b459aa4543c11468cbc80e12e5919001f6ba578d7325218426d96306d1c2b42dff9022a7a398857291522eea8eb0d41ab94cc77e6ac0ab203b8ae7a14f1516f2cf604f153872f1c7570465c5235cf8425cb7a5a7fbb03e58c50ddc5dfd646c4d31fc162caffe8457305f05a82fcfa557264e74a1a64b6674f598de965f942941f697a1e2e8c6b411c175c3acc868df5c90da2d06623997147a7cc09013914a059a079dbb0960fcfaa69889b998b478184981c4c712282b9767a42c5fdccad62656db313980acf033b709c9fea8e6a7472c7f6e97b900260f13ed58a40f7ae924e874b7727a4d9249be3194c2fd75eab1805709a8e8f6972f91f3522a57a2c351b9bff8861f8f7e358929ee3377fab65d22864f336f06a417e11d712ae08f2768fe25a8c65c8c4de573d2eec62356ff6b7915b00eac2f689ba9d920e899ba42672ad8583dfe71db3650cdea4c8b6a3606f7247fd17490a4d1364b04566f162579e45d1bb7713e58aebfa3824f3b62d90d56584bf50fd310a097a73508f4ebea81cf206dad3388b9fc39131af441a72d2a68d1a467f775443e6db19c8cdb0cdd8c01619c9f1f7687bcd749999be5a4ba1231c330cccac1b456c69356c8c647bdb03055c5513b1bb7ee10b92efa77ee8e82781818f9d482f7bb5ab8f45cd217c7b327811d6f438ec0f9bc8e9dd9b5eca9d1212c4ea0fa180af49ec1bb450589f76eefb997326c342652baa122876cc99ebde6a0e7ee81ec2ed1a9a621b2ad9793f09d3e6688cfca79cd9b03f90717e4f18a2f219d57f255c836eb436ca597e6b02dd4a96a83627ad01e364ad5095c0f8c94fd16d4ca7aa3693aacaf8d159be4ff41f3200b04c6efb6b1458dffcb7026d6f89fb675c6ba827b982d09750f912a240ee1739a9b7dfb360faa6b2b16d41173a56af36f26fa9e98628de5739ffd868e519ed7eee5f891ed67039cf326b4d21dc4d930f0f2fbd2f1f166e3460848dbf0ce195e9d867676aa7bb6e156aef4d1b3e3b442fd6d09daa24f6ab749f5166da84eeb773d4684956a75398733201d1a12ca74f1049c54fec8b68fbd78fa807ef0ebbb121c98baf6e952de18ad1dcba0dd1a3712fd5ad8767c6838ae3b70b3d4a7e4b51ea77b0e9197410224d369cb991673b66aa7388692dba33f25d345fa164b4b1be29c211f2b5b607339fc32d7434680167e4b4ef6ee231feef432f70c08ae9e7050ff7d74a211e0053a93b98bb321ad85eb08b4f403da8830b5667bacd5c686f5437e770ecb1aafc6a267bc19f1e5842620416b7bc115b3dd73b3c76daa1080d5829db76b8e0dde292eaf59ba853ec481e028fd7156ffda72169f5801ccf2b1fecdd10df75e344ed073c09a757ffc47f20587e463838f67d21569caa9166b04fe68edead51f77912df0ef70f29d1e483b659d2d881cfa71b51f9beba1017636d29fe403a5c7c8221101b7178734667e84198ada8879987283a5929478bf5199fcbd1b43b1776a7c7f73a127eeb314e9d813db56d1627d18e7f9ec7c540c1cfa8682c626bb69377453b2499431bb1d9c9b684d354b9c274ce5bba253911c05a355c74a6688e76b4013deebebfc7740414ff96028fbc74a0c70fe21e4af1d9daa1492f70be6efd7f8901907fd97d923d3052f1c331214a2e006a212da4fd72feafdf06326dc6d5b8af17e04d1e9b36afa7eff424d1544f844e9ab9fd774b02fc0813b6ee72847011bba426a8eec65548ca315105f014e6f7d0163c3d6ec1ebf51990fb2d98ee76e245e98089c522d288f66e4f913d1535bbf6a530434c331a9c803b8ceb78c8648941fc8d287a1cb7a11864de6dfea7b30f268144df5d50394f88aa97851356b4cd99eaa2ed8977f354f2f5b005b7a08a9a8facfb48742dff3af70a017ef617de9a38d2f7a9d001f96ac35652e8d273646e586bb9b4f90fd54d1ce48804609c4620e0c0a3921c25efbd68a514957f5afb282d33314f7b312dd440a2fc9ab4387cc11c2eb5950b26f8e89f69434ab74d7516a75b5eed9f21fb5a911df7d7117b91b307b5b3b770f419668b239fe4c6f85af5111b4f536e936afe39916b4c52228814d7f57003d4a14dbc95f99792fab30025bb1f5e82203c27caa1ec7e489e527964c2a6d8427560c3ef4a14d2f8e11fc29e52fc8ebf9129f1f6731e5e422f1122214dae2e7f9fb7bc9e8056adf51a60d81bf1b8800f28bd736a635afd242555aad014ffd86c8ab1652feadcdd6d6fac60d70b2b3a69dd2edefd810b322f44ed6275d6649976543d3831b8bdd989067287b06bdeff8edc4ea885059444b8cffd9f0f2cbe98e6d4f56c76152b0a043783f48f13569fbbca7b292c53b28be90857c3c89a93d19e48be1a106452bf2d62a9d263e8c3bc0e3513976483154603557cd60f40dd7fbec03c137b1e87644f26459c8a438a3a3a478bc3d37964dda275d4700138218b2fd5339788f9da627a2c863a150d06753a41446e8cafa68ad373ef4ead34ad35d5905ccede35920a28d79ad05ccd073206e90da524de046d577b0be3c1c98c9818e45b4924f035555bbbd8c93f57773c3345c663115283a8b9cb8d953fbd94953292819fecfa1a2a7c68aad2dc7713ccad97c4522b45c1e841e486f8abefa0fb7d506919b9484536afad6d6f6b87163eefe953b142dff79741353e6ac60d1b4a1f65ee5e41353fb8528151e4c09c24784ad7d6016757c13710392f071fc1e1d34fbbfe25a23abc06e9ee4992a1dd6ecc89d29c832da31b1436c85360d45f5a9f7c8ca573c0d79ef1b900c18ca3e6bdadd14db8c98396313b9f7a1e1971b4864beb7859936c4c6d0b693a0ec978045b88dee0593dd0a8c96dd9253408af5f63cc6509e73f248e354d4787fe570f7b4b7a15a306603bea7fcfc356e18956eba2b088e2c467b02f482e1973cabdaad819fe8a3e0e30948713814bb565128856853d2ab2568c52d1bb28b0e6a8ed67ec6f6e767d31a82d1e7b861d5732f8c89e5658b65018039fa9d644a2035ce6b8e2b7234983626f8117c9c3952e0c2bf7eb87798545d60698fe0fa77bc292a9410ab8b7f3368228ed75fada8122aaaa70b987ca203b4b2febce07b31768c85a1832ed8add1e417fd68e107aa09327ecc0ee4e78576dc86ab6f5c0d59d326ebdfa1d04897053c00ebf32a9acf2789380c43d538f1c3099d027e676e1725634b4d809170003628c06c3bca9abc712b6adcd140fec8c12be9b87887aa3fa3ea7ef354fee33d04d193220b016fe69f8f132249fd9380edf17baf5904c7495bfbd126084486b0618404db30e4dad4e13ba58a91e8b9fea8bb990593beb207b263a032f3cb499e3870430ac8deeb4b2f38808905023aa85b8390be9f2841662237628513c266806fe453184fb3cc1686dd0625a4aa460f3a4448d18f0eefff46f5da2065a4004d9a757217671a02704114bb20e6c1ed09e9cd3f10d557cdc588721bd64e22a50b02a8ad51edff4e4ed45c47db080fa967438351544d66821baee4b7b6b9c4938e7671c0cae16039d8cea06c826c690eeff67c6891055bc02b41bc71941b7d5b0b2364b3137d8c86bb60b3e4a110147b03eabee642024de6131bbc27db8b841af4cdb66408710573104f00e1a783ba6ab47a4326c472234287ec0515b9f0ade8f207b0b7d2db4387cbf78da02cbca805add04a5e6feb72dabed844b05999642e22508bf9d69eb4abace32bc1e32f3089b37325b392ef0782dda18cb1d28a31489af6b26965d3093a5a3ad5c9e92f8cfd2b7b4a98cb700a36d3774cffd6be2939844a6f807955f85fef3b4f074144e718b86af5f1328d3a2596c814dda17eca4b49b952c7c463875338cfd097af1102aac04db4734dde0a7f6617e144446177ad43a33ce89f8659688c7bc1e67fd52a50ddf80d2d6dae4db26a5d839d6ee62efbf95b6b0ddd525760bd27fc4be2f51b42ebf414c8eea1216e7018c6dc1f91d0bc6673155567748938598063e44fff2998d2884bd38ca9ecaaf95692ada8a9b2a7ecfe4dd9d7dda03a9b922e268fd12d5b48f7b02b06893f06bfd6e41e969b2b435c4579e49a687f2aa78ffc3b3cc8929410b631e7511fd70a75e1fa14044869407fb4c60a5d1950830b00023d890c5df6c1484e80509d2dafabde087b03a2901e20fb317719062b14e4294c5dcf9e55cebd587a190f70d15f12625be1b8fff751aaf227c94b290596bf457aeaee4257fc5666bc5e927c57f19b5d44496db64a4e2741c6da3c4d75bf29578f8da88e3ce0acacf75e046f44fbce527fd0d354af58f6597a4ed058a50ce4a1e7b11e9ffdf5ea5e114419c412f807a9b97af9a002ee1b00408197a80152bb5909c54a09e2befadc05af782497c6d6a444debb48267aeb4808f1222b518ce0277f2c92eb9a19e74f8d353f0b51d2f119dc798796b4d5e56359d2ffbe950480a7c750dd73824b3a739f7fd7da4cba244e6d6c80d20f32b438d14e3bf26c48557065fcfdd84fa8c61f460681c5dc5401f7c7a18a805939e35768dd247933305b14c3cca00aabb5e97753454c8dc9d6296a528e5679ea3b9702811bd51760a5aa6753c8bad8c6de1e4068aefa93330f93f90c5b3d6a62627fb28426bd235bc1a507729036c580bca86e24492a0e5c66a04b64f6d97f92a8fb88385d03f12ac901de117778594308bc7bb092556ba32c52ba72acaafd6a6d67b650fe30136f5b411f4d6c81c4990288a24299f823ebd1b6de1e03959202067ae5d8c0f473c9ad504ba53f47b2b87ce94813c9dd1836f539786421de5468edc8ddbc5f1112f7052eb092b8f88a98f51e942a4991f4031710a30b9392236cb4a5dfa17304932fc461e3f1083ef3c170933ac4071823bff0217f23546646400abed67ab92f8177e17578cf2443a3736fb9deddee5edfce4dcd1bb9b0a83fcee1b364a80ebc724fba3d8a7b0409d23e6a28bbec2466c5be856263c2c323f12e9947848dbdda567bb817c46bcd12fbbaba63d6ab41cb9c2df9b8dad6371327a5594f645fed295d99eb25e76304d48dd2c0d6603637123c9bfd4415fd63335a81144efbaa2b0ffb3b5399d12288759fb3a632d6c853562729455d2c94feb848947fbf76e570b948e990574e7e9f3fe679521b0c60aa80580786f76ac5a679aeee00f9b35f7c65b86f18d4d156fc6ec39b4a3ba5f6f1c19f06176d49db92ee7e14c1f14eb14566d96fd9efd8be663d286c17183c4e020f58b2f50433f3e2b38b50bb2b2c26381a7e908bff6883818335b9ccfe3adbeb8e769f163225f7b020004787a6793babad3e975aef768e2a0523e53cbc5c9c00f9c47c51522a10d83dc621c07b5332b283a5a4cc1bc70703bf92c3cf3c9efe7f3957f216d9096b2fe144fe236ab651b304b74a8ccd5de386e38f8aad3a8742ce0ee96f6ca1106e8e8b4d69d044b7fea4f0bf72b6b126f84453b463f10c3691726a566fd19b364ba26944e4fc1d560f5fa8758b811c27706cb4c6ca56c729ad9b92d3ef78c86e487df1e3bdb5e0437ec6ae80d0012a3184b221e7bea4861dccb288d5f4102f2f8af5cb6315fab85af392bfde00bd74aa93f4f9d6e2b8e36762107dc8295c2fb216beff4e88fc776c481c2c0e793dac7ce22d4ef341042a20b3ef8b735e1dcb26b05a729279a1e7e5dac205b3f2cae6909babbabadbf6aa8a1e87f11d88ba16da7399ebea16ab6b6885c5336dd37125957312b7b29e896636a73e3a09f9e321f607e1a3dc8eaf59294335f1e29c9a4b85c518fe5fb9e2b51172ff988f013151c36750b33f6b32c77083a917517320e6e2cc49678177acdf49a0299f61ef3c3c6576290075bbad0bea39857faf8ea6d135a8ea287df68a23f601cffcefd06f9980138e8b0828ab83a4e7fc4fb38bfee41801859a41503470f45b485b56d7cfacaf8c863da67593a0be8d672a444ecb0422cf5651aa436c63e5208966555dd87a45933f6d1fdc8266104fd32c4086998198c5816f216643223c79c777acb9d93a6f9df067f9f93f99df314a0eb80edb700c6f9a8e582641671ca379bc19844ece039bb0394b4320221c34ab19df267117da0b27293a05b8dc1004020410c34bf65e7c4e51bf7b92567ba54fd44f8cf9e662551e9dd144544d44975826d1a70f2f2784cf039c519920241d199174b448fc4b543b2138f05c136188cc570d5087790c854dc1213c0e37e7b2c34c411c7ae506066a2ce1dfbbc2eb5f145e310788eeece268c4b5800f6fc7cfbf12847732e799d64c95152d79d7e614e19b848376b0a294d71a4ef46be2e9519117b1e41e9ec65cee9f018895e0146975b0e70b08016b2de21de94d2c320a11d296264134db8da24cffa8fe154d5a4b336d749eadb3ee0a040e8084e9a18ca2185578065c76a0f1566442fe446edd9b08be6db2373d73fc49d01728236e90f72933246db5f60bd884a8b3a2afd3b303c00bf8076bb22ad53d5e85ce793214d0477e27c4b0a507b4947acc1981f3eb0a4e6b240425d46e94a42eeff082ba851475867047cd1479b7852d945b68dc37f6e3b1c87a0ca4608b7a784998acd6ec5ebfe43be918a42c696dc3af04ad96fa28cacb660254dcc2e4b870a0d57176d69e713fa793046a27d1d46325aa2b041686b66e1844d72c9ff65e0fa6d12e699c2217787fbcf040f5c1be7ec27d18c00d55d8b34e3072f52ff8d943032196bb61972e80c1734d255e1c67c818d7ecc08f04d7ac5469cbe55198431815a8b820e6ea67eb45d09cb74306ac94aca8125dd5db5f0790aafeef6625b02ab70563654fe39c2e7fd06d8ae79d62e5fc324d65bb14ff5281af58ea5b0b6eabd4eec5fd1c35cded4986112dfd24002b9c90eaed4f23af529ae4e678817dced5cc408c8119dec738129b631665fed564f9d6b08dc1f32f8243caf561aa67ffc770edfc47e0ca081b253192d83f7088af9d2daf7b923eb601690034af085f4bf899c0b6d4d9e23004c5c5aca4d8d2f2cdc3e17ba0cc74de91532d6460c5ff019f90bd0e69602d5f3c09ff6dd8f1b97cb7d2b77da0f4eeaf830fcb5b31716b70a1cc688a343be9e22a84c6d7816f8c2a3a178e5b44bf6bd0771b4324b572323e1322da116c0bb4b1f138f0b767f2d90a9bae92e53a2bd61a16864416738a7eb4d68d5d7bdc1691dc96c759e00165240caa65887cc43d9b6cf8e14251d21122d5eb1c8050e35de8a6ad43b4f1c61bd1a92b94ea168d06fdbc2dbaa7a19d8e61a21401ac6ce1d50fc9fbd96d007503fdf6fc4f6575cf07bc9b54a4b705849132dda56dfafd7b0637f627d59116f7055abdd18ce063809e00e290e00c29219c109b2c80793aa2e377863fce59bdaf771d3854cc3c567e343d04083ef301393b4c56d2751431a6fadca82954b58bd163253023ae41efa2b2e43adb92bce44104509b6210d806a21cc1b00e83ce19ea9d2d15bc49d0cc8fb2f6a85d16d9442729c0d4129cc4e7d56875255e44259aaa42926eaf66faa77b070bf76b38e08ad789c540c327ca920ac9894747aef9ad720c9e5d4c3fdb8f05352579a9143c69ebe71819ca06a8f6d02ba116fd112c984dadb311b0a97246107da6565bf14f2c68e223e50df098c3fe9e4d737011cd504000b3f3d5c3d2c1bc359f816173a85852759db5927e641994d4f6e8cea68a32ad699b577ce61898c860f2a902b16e3375a1ecb2a70acdace54dae7a204f3f77f7b54deea7647247c979f7db9e3871ee94d9251a6211a96b962916ffa7c914f4a77d255eabcc0fb1b8b66b5a54211ff163ae2dabec770e712114ff5bc11082771a63e584e5b4a1c030495e7456106cb8b2aa989f999a22a656cb5628f7b3a5f61d8df2b1061031626adaeaa6aa01f27fa668cc0eccfd466b2a287de05f6dd6dbf68322d6b3369cc31940fdb16ee9b050314cf758cf99abf929a3ea66418abaef0df7719eb64b5d05e2e6bf3eae46d668918a3817225bfa679eb6875e548b6f23995aba8d50471adc3b4213d65beaf0251bdb06cc7f20d46abdfd05457d5e3d8878899b590f7d9598f1fda3a692041b7caf8c432157e3182157640bbdcbc174a5947afac94deba3ba9775ee9b3436a70971355bc1ccbdf3052f0fd1198fdf52b029c4db0e94f54b0e67fc1c5223e9daab1c82a80c5e67ab5655dde676712b8773502f3e416b48bdb3eb1c8ea1df89b162b255c7507e70c287200ea71284bb1ab14520b0950d9ac98625b0de8bd86209e0150995a9585dda5fc9a26593b1b2687eb541cd4f9a986a11ae2654e91724c9e1a4edd4cad49be3a53520fe4ab19e0a25fb703ea8a78c98d1873301cdf7cce094c8570d94c69243b32370f1a20a4f6dff9ce769c6d8bc732759259172cd22e13e7477908ad7e7da1fb2a5224d9745ce789dc4ba25e24a44d865b6de668eeba4464aeb7937c2d285d71c29059b769adc147fe3275fe562cfb78dd95a8b03e946498742210dae7e938fd05ff34cef15eefbbbe5c7918c8afeb15bcef2217ebce97b8c7ec76da108dceb409e08a15cc24ab965a6f1a99968bc0d291578f906a5cf339054b43815e6c78f9ae5987d1afe3a7ce328f87be1dfbbb97204f7b14d13ca878a2f1960086cb2b09b09745af0e66f9c4542f43d5eedd639b1037df9965b6e87164e777023df40c683845f39fe30628acaab3ae40a6d55ff501d63b22e60ffa4393612df951a2e14955e856a9107e82a146080b1539f961fc261791963b403ece747f1e3e978ca0d477fb6bb510fd4615bef2161debadfed157520d2401b76717688a857e543fbcf84b1784f5420b93f1cf03846a52c76f4fcdc61e06f3f2cfc89aa66fd3b8aa33cc5c69a52b9394bc195c21b138fa279e7019743717767dd71978c65cbbe3f5cd3460f28d1c54b27fe28cb8c6acd8d36ab9f9b416edf063608ab0b086e15424b93a0006aa6f2c9640256b7ba7b87715ee3866e50fdd0b82cd1f27ef194c4dcb9704414a139479aed63f4215ca52a4f3b5c09d07774652fba680f91c7e6b60b568c76350d738a60bb298d04aad4ac42883caed189f306b473105581653478a8ae952442cff4388a74e2e4a3ba5789888133eb6364be1d2eed487a7ef0494655cae8586c90deb65b3ccb45ac793de6f8dee54cb5f07186946530fc4bc4bef676b69744498e5b84f2c39a0829a9b3abdf0a2fa15157ebe7f562a29c7dc7fc5d7903bc5e1d0ecf961710f2bdd1425bcd080282492456aeb66a292a110a59f3874136db27b82be3bdd0589fc041fd1fb983022ecb0cc6be382964739ddb7e8a0e4b0a967049051764a332b4ee1dce2a3754654acb93afe6ecf60a302e08c0834fe9e6487fc09de3ec2768fd9f8dee08cf86fc5da6283d1d0da190be0d50eeddfc120aa4eac0d49e700e1dbc77ef9c19238a30d10695041652419c33db0de984b9254a861694a6ca9dd7495894d141f6ebda586d3e2138a313615b75ea31b4b314be9bab6651a967bab413bb2048f2aa430ecb9a7b8a737d8a21258def75d098c025d28532d464ff542e7018d68b6ff7862022fc8561a6e1c59d9ac9479d77f7c5d08426798578a7ea030f4ce3860efab34572954a9763a0b6110194945073d0b37bb21b20bef56e4d90828d52cf4652485269f7d24e78e0d5ea1f8e18f2ebe0f9dccb048f451bcbbee78807c2e3382a977d36bc54e1be90804c37c4dd85e6041bcb9914acf85edfd2d5fbedd6bef8a602bbd2963ad0d0a96f29faadacad9b0743cf068ec3980e127a55676128a6e734227fe3fecc570a7b2c78a0f50bf1f2b0c745e4d52decf071683c72127f923dd4f59dd2d0f281d45625651861d9f16b0109db49acae938ec453c0826d67e4ebcd03a49b2c2e333cb92318bdc3d3a3af8f3c53f4f5e84bad625acf82a452711df4d79cd30c58b0fc5ca688091929189430ea009cf766dba381efcf66e3f91c25d455368e80da9def058c52ba190234121bb947e5a1ab181cc0829aa0160b757fcb69a5d898b3b3c591f71cbf2c201c9afb332030ff995415dd03536bdceab8dbedcfeb60bd931fc9fd742cec3b778253d1c38a4cbaf2a301879fea1e9aac5e4b113adf7adbbf5814e33f8fa25f3a02ef97f65396e4eaa5b4bc007db265e3525e37022449511298461bf036e0529e156f21264477c554d1c8eeb551a6c4c08f6486d994b034370673775c39a33e10923dbe088c41f4492131fe7514659e2a307a5333c757e101df44093be1ec8a3c9f092fdbdb90ec43544d131f240f5b02d757913429b85ef44df39fa8f9f47742a6e15d3f495b11801b4f746a1f4b1a00f777acaa3924e47d00dbd7fb063252c07ef0be8ff7cf1c391da98ed37c4749c9327622edbcb901b38c2cd6c5a9b9f5a0eb8c28d693f8b3064dff2a13e8cc1ad5bb3a37c825d4279bae31df01c7fb9fcb69ff757541272d3c79710dc8b988447c977b6b625ea4e2c75f00c7e3cdb4d9259c17772d0c45d5445de4d90d41bbc265b46f8a25d896a924938b07dddc4408178a84bffb2eff38a8f3a38034efdf1f788fe93480af09192829be1e71008150f23986e236c990ca73d1f10632e9bbc4b12c03dad32858ea79feb0961ebe1e27ef17e327f9cb5ac2ffa11b312ac69d0f8a9929dfe457a6271d935501ae514a0bcf1f41490513720ff4a40030be08197542362277ae4a9d2595476f4fad21d02ee680fe9725181b850af79f53fb6c70f610c78c2d116501ca7e159caa3a49fac044c5ff121655ca62fbfdb58fec85a7bee34580819cfd50865b20895f54863ec4914b3857c0ba83debd8cb0b2801b6f951aeefbfe0f0a570770ad7729a4195ad2ac5ee1406b1d0363072abd222ffeaea814c6457b34312b316d716724b341af4ad8215d0685c6c053e8a8120e0300e0023a690f421dc4780be60fc4e7553afda601ad999d2e16a360ba638c3ac848b462d84e9e6148c5a47cf1b38f897644056a99aecea5259cf6bca0348fafb5e82c781963c891dcb313a32d0a87f3fcae72ba10b33685795d953a1e97bad47c3d12ba0adb04730085c000dbb5caa68b7b9cb48797082f20b50116efc9735dae8cbd543e0d7259f34531a8fbd6801bae933d51a92299ec1d8406c887e002db28c5397cfe5a0e65fede7fc5ae2a3854a83b346c35e86e59c1c44278d648939b2db3a56c48d6b3372396ce24a8f224a7090a58536870daa33c537aa524dedb7ee1ad0b758a05e0e7d6b6c1c56c80759af4b658728a8d9aa09838732e508545756c2f1c1227d5e823d893f3df78f9cc5ddf2cdea090f6ce256519e0a2a68feb806eb1ab7428aaceab13ed6c1011d7ac5c97b589b437fc9e5bf323b9240a914d66577f5f1f3fba95ae474fb40cd6ac5f7bf252e2f534cc02892a40047ab63de49c0b53c1ecd91ffa304c92f2466a665dceb680dd96bdb1c73ac551deba1209a109c21cf4ddda2d10dab8031535799056097b7b46217c8df79798dfa50b0afc30e6ef1992338bebb67e0573c68a7f558cba980c67f1dea944316bfe755b8153eb2bde7287d58219fba6f06b981b74040f9a2e3efda196ab55ccd8d6a7cc70fcc5b6190dc704d13f75f0ffb7b40acf5995e74d493dc1e4301ddc82dd21ca9f6035d06b8d75b91b39000434574004a65fdfb5460a4a4bbe378b5cfece8b372522b96332634dacba4408b6a176668ec3685515885ec9d2016a9be2d7dbb8fbee55e0507ac97e75d7d8396b92a3cc386bbb8b147a98f924426a5969cd37ec27885a574704f5d15a9dfea6d7283f41fc027a6c0f8fa81c0d47b2d5b1675fdc0193ee711c0448fe3e8ec4f47c802cb7b4acad4570a26af13109ca67d909e6f407af79130cff529eb9aa859f444a29fbd30eee33062071bf6dd100ab89aba30056f78aecbbcdaf8b9e398fedcc6d1561a2d5aa4ab8567adb2dbb812cbea72033edaf438993f3aa2a022ad8d97f1209733c76c1e215648da1f9b14f14c14d771e3f1583b2e0a41d73eea438347531f7160b8855d549c0dc2d3308bbdf6778cd73c39f0fda7bddcceedc1e46d831b81646ffd159fa0c4716937b425c72f6877ed270598691ed1e3ac8400f1900e52b3583352ee70f7991de60620f72f28d79f4d8668138d22dd6da00aaa90e7167956dd88a46d74ec039550df62c14313af81db9680d05a676abe6d0ef112c0c6d647e6b5f30d4ed95f789c642e2224ac064d55b7d49b35bc469c54dc2752bfbbec7ec90ca2026e55303978ef7a6fbdeb85d6baf26a2bdae8cde68b2375c8e16ff82a822e321ae4c54fa772a9e52e16f035cfe1e5f9566f8b46799e65609faaccc112f502ac400c0b1682f815992f63c1516e0d6399ffdb44d64a0c41d7cec6fa628f1b990eb429a24096575098b5c1c03e79cfe7a3f773325f995894ad8bd048677975b064ed89bce91c2d16775d0e157bf9a9abc545a40b1a6e96b6bbcde620b8fce9b90caf2852f49f9a5fdc1990e201595511b2672404935334fdab63871a07871c844d130917c7865aa4d091de8b3e7f39bc0959f4510e24e838cbbc0a9d99e1faa5a819d23e2732b37fbed78a607ebe7764951618cb69c5db57d390614d42f20b81333cf246f56db1f2e865c64244cb74ce66274f570fddb336ec5b71dc69dd7465573b687e0239277230d62ebe6e5e3ace16aefcd4aa869eb6374aee059acbed4a09eedd7c116288435728ddcce2a5569d67cc850aa178afc3cc90c2c435b27766aa4cc85b3fc9baa3ebdc3855dbc1246cae0a2d065d581dc51fb1e8c6064fea07bc54fae125a3dccc01ad49c076d60462d37730cb42e6485b7bfffcc71e39186afef3036d78446f3cb476a9a673e6fb9bda8574dca2ce4253c788e3b84fb856abe74ee947d35a2b21a8b44dbdd1818447e7cb347c78f5ae7ea0b92f38a6c7da81878f1a6480902e8f20f4c414a74381dc8277e6e3d1e870de11bbe7ba58f13021a3563e69abff459647f204c057e2995c9fa07b376c3d573b2af04a67625a91290670f3f842195077aea6bff166b68ea9c90fa6604efa596001e0b0fd9781b26bb4d7e5965f6b6d590c74edbb02be59f5fb113b6fc339fe5dbf8706d3e1e6732812a2723e41715af48d157c1c4e9a77f239e920dc933725179608ea52b19dfcb2afdb30d5b1ff0ccaeb09d99c69a7c8c730a767b031c4e7f87d3cf472324c88294c5162aed4ae2b4fe190c05f9d283f1672e177d44050826905aae04ccd3894e5e6580526aaa7facc75d54231b8a29076a5dc72bdc6f893208fdbb3edbb75fb921ea2e028724381c68aeb26f5c395c479102aa28726ef7c11f3bc96b609c2395847f00d9e896fb03709d7b5d9a8246f5432e018b52144c37017a02d281624dc6ccbb958e32abaf739b333b44455f0c7f77520cf60afb903b210976c154305c8612cb885106c5b429b751a635532af51bd3818222a24f6d298203febcf346aa13b268ed416d8f83eea3509a66d99daba6a7220035ffbeb324fa7ab7ed58d7bacc54242118232a1639aed2b7ac5edb18aade46f39ca5ed32b791b63544bd6f9fd3813ecea88e0f7ddebcffffb028437c21762dfdfa7248a75767c796f7cd779294f8884689de2ddd8a625a01551ed2c83d2aed0783c512aa58c241146e71a83bd70243741a243f2227a999b8f539029662baf80dcb348939a5f520828a8bdaef65064a4f63a2d53aa1e1d9e04182f17725dbb86df3f247922e113c606d9a09550b29bc761b618e142c5002d0acf05c7adec3045eb942fbd2a54e027b5070a0d4304e434ed3e15770462f16af7afb2c736bf078e3a98209316279fdf0eaa5df969edd04bdc9eaa87dce379739f92f5bd916b8374f4c32902030367207c5e50975ef8be353b128ecad9eae65ce719b0e72f6b5ee97d8d934b8cc3965a681bfef241d134d1abc359bbd00e1cc362f241328a7a6af1e9a9597d1b19b1e2feefcb13c1e849b28fac804f404cf2b35ccd3d81cb4542f453ffcef585095b735805dbd4fd727d13817a318bc10d60e1da1ec8e9d273ad2a6b5c32f3b988d43d57bc3789a3cb2fa6566194a44a0bfb25a6bd31bd933df2ee3c1f00d415c037b83bec9e6dda8a748ca72965cebe5a5acc8d93f8236cb2a91f8a49eac665620629bb8575e2f2a89b6640b317d9a45d5b67b42addd7815f70c8f51b968092570be355eb25f4e14035135a3c323403b23b9b233df3e43454c86896117f20b9668190b44f5900341b1c5ed45471893904cb5bcd4daa8fffe0b751011b139ca136916d4c8f1b9561ff3f7e8a460ac744945acb3a2fc18d24006984dcbdac5d7e8feeec4e3e3f374a490f4b54f7e29d8cceb3ff71e8001b7b455feed80b998302c3711716b779a03946283f7e65a9f16ceb95977fa779c01f3da640d2d39f10edaa52f56ed867c84d77cf74a0e05c010ab452b16cb92f7f591b798ea6e2a05457d778d5f5f9425df643b473aa90a26c157d4832b39b54e1b18d925aebd5e6b001d6910cb75a80b8310ec75766013f79e334f23d3d18988029a621929159b55c9d5fe6a12d563585b010dbbf847591198d80c8ccf5d830520a9feac142f144e619f626bd2d99e3e2e2e0ac130975f91214ad4fd2af4851df95a8743c8453c6ada39448124629bdae09832db963d81791ba2ea7f9cbf19eef879c4168b564c470cbf6f666d3a07d71852aa9d2d732f2dc469a9d171ceea9619e53ec63ddbeb340abaa92a84dbb7f7c220fc45abc809cd871c3b2b1f1e4b7bebcda1b348140a89827fcf47dddf076f1699896704b1252285a60858d854e9a98649ae60e12450d894f2e79c074da0ce5b59098186e72d90097aaa8bf42bab29516c961bf0c06e42477ae77ee10ae7e5790e4dfab7d0c4fa2442a647ec53665d7616e4492ae2617b9ba3bdc33b1477560b859be057d6dfbf2d497ad61b28ef9ca30c40267e69d96f295a1ad321a4937e3b56a15cb1005413a94ce6587afb8dcf2215eeb6fbcd3d9667385626b728f4723f25aa4d1051031095e5219e430c9ae8d7eefff2ca0fd32975fdc163b980e272d1e7ea1e1044c3a2f55a29eb425eb369cc51828ad3e56d87cee033bf568508a19ebf1283d7a5ca2db8c000bb7379ccb2b44765ebffe337738e000c22e47a4d710244e81d0725637b7fdaf2dc70e9fade8a777ccaa18780521f090acdffe097f84f6fbebed6886fd0f30e987e1830be5ccb0b9e3c7b126ee43149efaef03ecbbc9c736b22fd7490f88d54ddc41d26b6cc00441f02c30e3aee87fee38a88b26011465f0dcfe963af8da3b5d3c84d45d42a64a4d57622ed86bca13e674f9f1f42f1ab1fa2721a49fbdc29f3546de139d97e13e620d8efb8a8a7ae8a921ebc634b68e8398654de932118698815e589be6dd9be488e79ceba8fca12104fb0025e8da26bfa20c96d8b873779da267676cdbe42a567566eb31e245e8fb873e720f86f96132e9adf78ee7bc21b84c95a153a2a57f69bd7dadc47638429877cc67e558a2a73787a7cba1ab38dc328869e473a123998434fa8ddfcb62694aeb9b8411d606d4f2dab2b3976a624a9e24498f71e11005403baea9064965a0bb337b0059917559a27970f455d3ad74f2b35623d49b637feed2d8700dd1ddbd55e564c22ccc9c87d880fccf1e037ce82c72887b50aaa944b53392f34a6f2687d13bb3c31e1c618990f73c63f44732c5201cab779796bfea6d29a8dcb892d538bbd153c1578b2de4d550ed370eae6632c1c35d497083411294e35b0419df76b78a57fedcd8ad286dc2e32df016743f649663d421549e0a6564df806c3fed3573bd0784feb2e0b1ef8ec1c898e6ed4690ede103549605c6f735127bc536c530f1b08f58b488012816beaf0c5120c60afc4c656dc599e04b759cc3a7c994950dd62b4ebf6b0c3ef2d810ff1a9199214e6a56e2c602540b0517cba63cb4b8ddd2c21e5a0f01b129ae9da4ac0b675dd41aacfa83cb7080526a1c32cc15c80d7c96a005e3099d658053aa10be2f4de34596d63228d076130e588b822a7f0d93d43408762b29592ecfbfeb23ab1d87fffc9eb3de12e2ad393ff66413933ab3f50f02a411589bac5d73726ad73e7a0df6bac7bad8ce93e0f8bfeb659b8989f026899baf422800adbe80c5524f3747fc407b9c2b6908cdb4405e35b92cf4f28fc2fba11ee7c0623833a315bbb115c6d0a69ef1382181029c2c84c00162b66a351cadc6b0157ab7a38514cd4c50ccf1312fa2e8a26d1730898223e6c8d8b739ef5cd7de38d1aa3a79d2cf039229b89d75bd3a82683046978952b082455c6d4e69ef7168a3fd91adfb585ab545ce004436b49c6a23b3f5c54b9c26b5b7572d21d40df83b795bc3ac075513a4bd70fb7e30b19ff46cb46801865085e682f34c482a3a9a98e40db543bc7852ab5863d8f906f8666a15e9fa73fe63fbf5b2fe5e079f4afe44c08d51a9be589743d85ee8ac788ae0c7560e12ac87c24e4c65124a353ec5080d627bf1b2266281a5bbb4e89daa5dc4b481c182f5822987dc1f6ad727a357a090d36f36009974a93f7a00a553bfbaa187248abbd08343eed5d374274f67039ae02e3e2ff6b36f5220acabf4bf88d0ecb14a90e9fcdb63b0135942e0a57c676d8e13ced3f49e6d5baf5ad0f153d8626af911694b968db4962ce4f649ee15ebc8839ed4188d1e762c3cc337dad6de038cf92c5cbc31e3abc14e0dc62fa53525e72d625cb1af87b8631ae646e678f089d85da7fdcc328d8323c2543d96b166d4b998bb54f69a16facb5d6602f5a52dc0ef4dd2a82ce5df7b0319cc3b49b32ae7270c84c6cab8b2064de68bbaa6522f0b829bae3fa27cfd11813210dbe52e065d1b76164ba0a19ed8ecf6fef11701e793ceb73b4d919caf6955097ce57c561e125c79c4afea7d7d114bf70b421212dbdf7b9e5b99421aef00a7cae13e0503ee5db860abb93f07ca24df4394219ed89a43294d4547749c863a78a65f33d0893fe1b8af296a892c807174bea5e98d1ba5fe7802dd6beb2972bbbd3ed12e66729d2412549933943a010e29088113ef4bde0d8fdceb77eb8c11320f4619aac3e68dcbb678b2a96a9f35ad8d6fd0db7345dd2565086ddf7aa3ae3dbcb0d206e305b92b7b8b483e7afd956fc612d100edfebae2ae0c2f1ef84fcf200c10a66bacba5ad0ff2bc462b90a901dde7ff9d9363a22321c3a076de8949001ebd64cb6bea450f2a8dc6f70e01c1f0bc00023033aaafe7b4898ce8528bf3439ed15cf1f269bf8829af9b6a5416137b7f7f370467a3fa6d1d14b0fc3f546e9c50aa23bfd912f2f0367e64754305a07b526fb0afd54fcfdf210424c6d1d9caeded78b89277441b8a1d00bd819c55a43a216a1ab0acb65060e07d5648c6bac6f996a987995661798a8c6146a533bdec8874b354a4b500c84933bca40fb6b130995509de99523bf367dafab4a685aa4ff36e11d05049556f584f54c18f7ad41a32c112dcc976a927d9e3cb33a4b874cf9d3ea9a6bd295df5421d16a4e85333a9d671e1a3a65f7faaeeb89cd04855a2b11e901a49f58db16ba6d157e2d53e77c816c10cad4ef9512016b606e4cb61dbfeb448ef173c7e03f89726282cdbee8cd22ba1ac358051ade962e0f2bfdf0e29d190f8ec3e5933599026695f710048cff06c13fb5ca169fe715aca8c39fbb4b5f4a90d320db360a4775f7207c684e61a6e82823de71c3ab49f30c71a42d4eefb23d805b24bfba48fa0cd6b4691f2ab1f0b485f53bb204387cc36c2052ceb5212a7c605b0e6689e36aaa3c90253917d681603a3085581716b1d0c9d3eb6c1db04a16a8217570d92bfb09dc9f055143b8b0f473b1d0a885f80858d21d106d4d67d6dce5858c98c8aa5c25fe8d9c9ce647f0a0ef8841447e06e581357df334603b32a4c417180d6dc033fd905b439c5835c106b32a45233ee96e91b26a1af1770f7fb28501c5c34318888549a15ed4abcf6b2cb29cd2fd2e6b559f8df5faedbd9debd74bb21bb39ba01201767e5bd4db6a7a59e195b8825cb92ddd64b8594a806cb395bda4140a66d7c220f2f6fcdbc5d3cea633c1a2eb2f1afed9dc1a0ddde205fa77c650257504e821e214915994312351008b1678da982c384c0a16303cdc5a5d7dee85333f74179f7a7358dbe9a156dcba1d9f97551c80334fb01c2ed6aaed218f4356a88bcd48d6292318d3cc3ebd82379cf6f9b541ef6b1e59eb7b8c5ed4275c71fe262e163dac19e0a17d4b8e010c7d202dab22a6dc9dccf93e672a2c98eed86d4447e1230bcbdf5da192185dc0056962a2848e685c91f16ee0bbd9ffd6f3c0ab2ddd037e1098fa59eb4d7f6bc87b94796ca218c5bf21237623f64ffe185637aa8ba61b1876ab36610de312ae7cea0f9bf9840e46d6dcaf131d6576f8fc6eaa00713db24e3bd757e63c05174d06284695a309908426c8a428771bee5ddca74717f33ea9282abdc565c92e9c7777fd12f26c32bba95b91a0c0cadbf886af182889feb4f63f6caa8dcc64b19b6868bdb455e6a56b5ede6b9d2e2d978f217949c689cb0864d3be0e6653524da6b4a40e17893c45de757900cdd8933a154d8a97e42780e6d6ecc22c6097f67b4b88cdfad2c5ee4f72c1f7a695364d173067aebd29096c41797034602b840afc8c02ec23b7b35cc7dc8db341ff79bb025c4a8ae48008dba1eabc12977b2a577f4d8ab36d3b4472c154583c6619c09987637ff77704a83c2f6a7457b97d3bc56e9fcf626cbc9723a6b203996e75b5594d658b9adb2eac341a90c4ce574152b019265815e9dc012276f4e43ec6ab6efd42507c999d8876f77c802823452cbc338456b6f9574586cb1f72dc63a36501ee6a3e98da462967156188f543a925497b31f67aa77704accee135931ed22efa6ca6a9529d522eca5f9284a011845c3119c8d92b4068d60ea0c4486d7d45e6f0b6ab22c6d7135d4124aa826bd3b7af5814dcc5501beb1f6082beb3e3c5cc7d33490c3fd4c7337490c31061c1d55e91d2f132784bf0c5973d5d5bcfdb409150d3c4f4c53d06bc88633d1849eb8704feeb423bd8e18cc8a9613c96ad261b1158f180b0dd009397032e9f5ea0d458bb296ec400fc1e6585fb83738da3d7d2f3402109a506b777c2771da7214c8df2d0d0039631f38b33186d699bc55a09121778166badaa300378b8633dc2d1e431482cc9aaf49f44e670f22550ae28968c1fe8339934a6f37e05044078dcc56ce83dcff8867c9cd2c6c98eae6db1e006e378446cc5c172acb937d6a88a7d65cdc1461a2644baba73dd2d512429a25be11a2012d81e81887675e735639ae75a3ad7ee2f3a9aace91919a84d0717ce71d7977d8dae712f418980e7a66cb35d7cf5b9b3b00d6937ceb38df39648e869a4a7cde68d124938f4e3dfece774c3ff83effa1f01c9f597e108820466e61ff7759cb46a2fe1723132f0d43e26ec69c735b727d3e78ad6fd7a43d013ed30dce8e0a5873d0e487198fee5cc5f848e4af5db0c84510ea7162de04fc726b693422916d0142429c6f51d805b527ba5a193b34774e2967c499f913d8860a72c8ffa2d6d1221f1fdae98a8de228c952ee06ed285f6f406fdffedf045717f7f7a9c0592586cfe0c3bea9232a5958cdeb1142df47fd73b5d3e7fc4fc6ab7b7b5e1da0cde1b1a56677f418446b148aaa7315a59e174576a1f8e6e8beeec58a77ac646697f40ac200e3f6f0366282e6a968d7d8053487cb4c3dacdad4daf8955c60a52263c0ac19be1ade663ede98a589f778598435392e9fca8d064a39b0311f3a144b194de9160b3af824c294d4699679bf2b0ad2c84825e4df01977b49599ce75ce63b70c7c722e503adf715b39f6974d59668c72748f3e23683c6f44944e158ab9708b7a905a36d94a4f0969fe39cc5b700c8e9a43023f1e140f77a0ab54e0cfb85aa2627c7fa970144c9eb2cb1138157e97d0234979dafcc258a27b8f31a643cf050dd019248d9e8dcacf9efd5e8e2a4b65826ffa026e44948b2b3030762230ed7e87d5add067c7f57df13ede700c0116bdeb100619fdcb232c4f32fe18ceea63883f0e27c827da8da19c9170deab5570f8dc42548953d6ca96c991c792e37fec349051ab8197543a8ade110abe6545a81d20eee330f87c623be8998cf301733b7e8478a87d40dd0fa694990113cb4b461f0526b484fc1f820ac4e3649a2978bd362f0650ccd80e79516af0d4cb2e962b9d4cd048b4eddb09489e1c48df164635a94c11cd93e87fe6e701444e2d484aa26b07f94e9720a88908102a17b020a37bb1f644618343bedf00a485e282b91da25b417dea9d09b134805f19115c3c1d41e56e834c9fac7372adc7abf20dd3d12a3bf85a956a69544839216fdb367c790d12f56d3e45be7a132092b2a5389c1a1b88a273a8a3e6eaf37c41a8c2c194a880f0011e5b9b4ff595386b2b93952fc76966b0bc2dc3255a5617c0f6dd1dc91a35ea3d99322fb1d806d5b70714bbd113f0863514efb2f78c7f8596a9b129c152422b2cce22286bfc9fdbacf46c7e1e75b0f62c799451bd0a94fca4cee28bcc394883076a9a26bb9c16088df866a3e88b5219133360c33e43d70693e0043c7a3ac5c8bc3c45252fd74bf562e34f1571dd374f10d0b7db5eee6687f85964897b8f52e11bda3f3b4cfd7ea4b1169f002614c750f89a20c0b845e9e55c0a024e2ea0c10d9aa2ecb258c281ac1f4851ebd015d2daea4372c6a7ce686709f14aadf22fc49fb63d51d778235f9e8f2207caf06ea77ca494fb7c95c0fcb785c73b325086d92db30d6c36c386012144646a2706ce33975a60bc82496f6df048f52857e47eb2e55a31a104571ff7593bbff4d0debb66bcae204d7f4caa411204c76dc66d0cdd8e16ad906791a71f84ebb988bce0379d1d8eefad7f1ff2b869504c6a2fc18e4e2fc1126be63fa094c61d4e89c94e2c47703d44bbdf8110aefd796c49f5064567486194ce6a1361cd9d93f88018f999802196c9a64b2baf2e0218ec2529bfb1de715d3c03fa7a9e96dd195b01cfba30b8098417d61a8e18b75ee2d3ea8615ca503cdb82adf92e660aca53f68e1089888c302866b8440c99c81ecf285702f80fb044e674ee17796529a64ab7b8b4744b85bc6e83bc02df597042bf37249b086049d17220e5117137988b5d3e45dfc54e9f2c07def1ccd6557ab97b273eb963febee25ed34ee63425e6ac1830de0fe65a8b5b1bef86e0c104b26925ed621aa63f461a06be8c3fa4c342e6f1f6096d4310f99d6a26a3b9144c354d60968ecd1e0ba7093cc55c7828717701c18c8aba8f22c025ef9d531cabca03b5f42d40621f6ec0ff6cffa2ef08d0c45a939002642d779f337b2aab366c44d10be17cc210c64d93107b7982fcff9875aae20238458b9244370f487fea53a3baf85b2c1e4de0a032aa2d3b335d8e80186e0e7cc1a855fa7632de0d6c8488c5f3e295c5c14432ef5bb02ab902ad94cb89985b7b097a02b09fda3b922c859e8f0063bcffef495975d7e766d741c331a10d9aeb9d24cf79305cc66a82894e625534bea6481eff2bc1a052dba8a45a524504fee469f5d15f356f84b066e77d572090756aa35dac9762cd15c8a1f23f3bacf06a70829fc92d4ac841b002b6a510e535bb8ca46670ef05b969fa85a46f69b22444cc69e90911fbe525a68a2f2b329969de07130298915f9dbd1fec8f7dd79ddc0c68122bb0b9bb9503fcec4348d28aeca551983ce6b8802a060bee605ca06cb6ec942673b2bf96ae9880cbe082c9f79f571a4c978b5d23f5cf7f0e525070f25b1a4151210314b73d861a19f9187ec33f242c8414521690b8dc620741d809c60158065896ea9bbd02d55160338547c45f0a201f496655b8151023865c00b772e3cf439ac9cf1707e2fdc0d2cce6cae93f27f7edd85403c66e08770f2347aa98a478fbe1134a35c8b7a8b138e1f9a4111064c84b670886a3150ff9b417c80187c9b5c8575be8c5235d1ad71df5b36f3ce04f1ba3edf5f5e3ad3c3639dc4122e8efd6cefe737959b123d2af14e1b40c4a2e00609c967d726b3aed7848f82915816cada1a4d073154ffac9630ec5765f0dce5f9486a152e305a988764ba65213bb839c70b8ed7223d7eccecba9583a4c72735ffd59f095e6cb3f671aa85babafbd315957e8346fbf4906a8916ae9f81211f2caa3d18ece9dc3ee04c67c322dc8d7b0671d09c74ab7147412a131446ec3a4d12175d3f76644e07a612109bab397745ba1f0c52c2b383890cc8509ced022dbb59ce63b711f5e7646008b484f6ec6e1e503f7dca02a1a332c655e7c5288562e20d43f805da54417c1c125ab4276af5661c4847b03d006bf929d05d59386714db5cc636fb37f6c2d6fca88fa0b809efbc66690ede17c5de8456da733aa90b0290af523037784f15f33ecc32d33d329b6c36aea4728d7675a3a63d1b00cc27c454f6267b32a1c06ce5bd05809ae3f5b7afefd7068efe196804b07c7983de7e6413bd671c70c15fbb79fc80fab9e9dceb1b1fc0147692f1b37b15354db9f63989bf2fdaeeb60e12392e265cdcaf2b68501415673359d1e102fb631fae515509eb761f6eb9277bffcb1cd8243a78e09bed1de1cf6f5291d3e25f5b0d34f5f8bcc96e977a428a86cb3fbf8750105fe22346445cc330765587ed372b24f34c18de163fbb213146391c08e7d4f3c5685c00d55a39086470f94b349ee3a6ae1ec2903047b789ad6f858a280e1e03f8af5feb42b62259bb9ebe12bc956f6d604c7424761e146d8c9bfdb76df11300d6cefe1b4ad03343a0f8deadc852c5817d828aa17300288eb330e35a4a974370cdaa6c6a8ca95589cb9eab15c5fee57da5b4036fb0a880c8283911a69e3abd5d129a1a365d41b759c4b19aa34869e38911249151eb51b8ee989b201052ff12cff50e0e39a07a87426282ca0d05b6d94aa00977d08d1f6e1d31a78959a80d46004feb42946f9edae13f6855dd5828a3fae076b1541dc9eddead5b22039520a52b6aa30ae71a81820c49c854dd8333ab5d7d5cf76e4b39c88dd17690172fe25e0e37472d23e95c8965bdf7c37467128af73ca2fee5d96e6dee9686a7b319a78f22d5f23b7a6930f811c5f2e671e729f59f2db86c1648ca1009b983f8bb46f75cbc4a8818879e29b2d08729874e3d79bedc83166677e99bce6a401b809c3da660d8dc5c27e108e2b7203f19ef43b9684551de559c38ee9aafd10e682b36e78706e877162f680f7058e843c741fba8bfdc6a3a051509e0204c792c7a0801eba09b05128e3f22219c0ff8043c1970484ff6796760a2b91eb5f80edf618691ea0cdd10b8dd86b1642da6c74aca9a111b02acfba935696c28c144e7156aabc345ed93baaaa1c5b83b1f26aa0f230a4af2312f1c824b33b015c99c0fbf02d77cd6f883d01bd15d212c7ae4cc10e4eb5e2225d94e4a929da0978232442f879035bfe391ff66ebf6ba5ac3b7bdbbffddf3defd3a7a561f5130485625a474aa3b6d083cc8f83ec00a9fe8844cdca7c701fc312d97e6df68b218da4c44de3bc3f4475bfb5e695ed0b9f73dc1fe091bd7bcd46c883d7d6e0389d3bf93cf02bd11e87788a0585d5bef07f4bec4dcd0fd9b17cd1435942cb3f2e124d6bae74cfb4bf4e4c1138c7a3aec9a2b7f274dc379e06a9ba10c0b26149ab8f0ef0d19314780b5b554bc9f698853386a9f16807b05e9c32fd8d0e6231d38f45a4cf801f29b64ccffc8bdfdbf521d485f5610db78df0ad977bf54ed397d1a02bbb01d5cb9e3bda34976466d76a1e548b4b265519f0656149848e186632205f5b1703194e0b758ce88174f30307305df0d052e5f4efb2589c1289fad9669c0abb8c5f0059b79c52c91672992a8c113066c90d697d9a83cd224a0dfcadc0f2bf302ff9d6529f89e329862c80a45cb9113e3e606f819bf64f9740908f541704116ad39ab33446c8d90391b5687f7395d9ee3bd287d6f051d5adee5937b41dba2f4124d5709de2d367885b0d0be5bb67fcad2f6a8ee8f804b01ac8cb37d526eb9c49fd412bbb55200749d3990913b9dab527a495580eb40299499142a22be6cb10327088426d49957fbe20421c88df721b8235fb9c55fa2ed332d340374c3c9ba796bd9344d7b9029eb6f348f5d20f300b51effd15142e477d417a9f3da5f39f83d0201bfaff3b0458866ee7f1ae21b80c1e6b73bdf62a571c84382c0ef98cf96a2535f40a96964c015c69a2889e67e1d9dc9656191ff51f88310da472a9b6ff07ce2a144e4da82f99da44fb4b1dbad8c9d9a76fd2b9a77aebb63be78175fa155cba6bdad4144d3ab9912544f1c603122dbc204325cbc7f00995a104dd175badf4a6319013edad4b3f6ce3515dc99520ca23c15fe8e69409fa95f64915703b7250d1cffc4b3acf85efd13be1d74386593731a53bbdd793d8979d91b8f3008a4c4317a3da41a072d840401b2c7bc199b271b0a23758ff0d805dbd66a917979cfea00ca41122bda81a1359c7ecd185dec2fb7e944e806123d914b6b09dde1edfc8daa0a076ee6c280787a330dc712ae3731d35f87edfa9256fd3fc91ac876caa80be14ecf80065e900aa25ff9f36d60e07bba1d3a8cb2d4354e43e61abe34ef0e1ab4e4c268c65ef1011881ff23386f8912d2221262d5ebc683938356fd80d288e558008526728b8d2e9398c72d510d74b2077ec054d59485581544f5d5686fd1de168c6e4669cec6443f036e9cdc1a4d34809128576c53cd51f31ef48ef961e1cda965e8263a11d9e26a4403c2883bffab98a48f9856a299e88c1025223fecc472d9fb4813badc15bfad6ba9234f7dd33ec7dfb74035756361ebbbe0b63b1d4cc7d86e637f1d3874c748fa7815a455f8bd290ebdd8e14daf9d0e6778eed9210dbcf941c74e62fc5bc500014cc688ee3c1bdad83c92d71694eafd5de9ceb1e9fc3c2192671ab72d339b1d22b4aeccff00e58f61bf548379797637ce7d81526b0ab1dd0ba1d149ccc1ea697e1074f858723c3161f3113647c07d8075e5361688f9eb3128fa08d0e439a034044684a78b1a3e065813bb5d72c5f5dd4c751498542ce9903a76e8308ff45f35441b0e5fb7c8ae34e15b442e15a9427c724e55d87eff157b02c429fc27c2f549cd5bfca0ab0a2c9eaff6caa30fa8f6d63dd7a5832f5ecd9184fe9f6d9aca581a436a176c0ef113530550ab5c1791bc1c1875847edd52919067fa4de24b3d7186a892afdcccee19642ad54fa1d43e07da32deb280b9215f43c04ae0a15326eeb4d098737554fc279ae8b9a83b57d2035e5021d976ebd767a0df7bf23639b64937bc1347b9690a60e5b567ccbfebd7b318afd5686de8bfd9ebe7cba46531c0480065f24f453401147c572a61ff532492187ab5f5ac1658b8008445dfcbe2563a57f6d41c1fd9349e35dcb511331000afe6c3b09fbf44c44845201adfa85c5c3a3ef2509c4d42fb768e334c45f6efbd6ddff4231c28cf38cb02f55a358ad4a1aa3e6fea3d8094a757c0865c9c8a9db2b2b06714a38710fb337fc2ea93cc1662ad9c2423c928f99fa64f4d1d192297b6cdf2592670358fd4f788ef7c76abc71d96564c8294b3fe89552acc9f12b72bcd68206d5355e8fe26c226bad929384bc924df765c79eb099c6e4001b776a20b7bbb606b73e6b32d470d262c43314f661e3be03ef5e672e537233d53a769f34193a269b431ff002c314d2d9c1ace70ff6599f54dad9ba381577194079a6b9b17402f9922888c655eb6824876cee24c1379f47cc569bcb7e6076b67f61aee0bedaffa0fdc0e1e5e7673417c6fd9f9670ab6b226c7d7e62d67e9738adde0dd801b51b7a5f7e34d82fc1d269a1057cc0b60ebd2a289aa53a90c021f1b9418e9f0bf5a42669d629ced01179675b7ae8cdf163ca29f27b9229312e4584f3fad1b43caa3005eb715533a1047568619b68257bc753268dcd9696999511ae89587ead870ba5a4a93ede0fe5253b20adac89b9fe167c703434a350639a56ef55abd1c095d2e2883ecf5109956d7b48832ad0a434661bdc69fe9a3bab4257807e3c55377cf4802935bca902142ac4c57019e8b6afcb2916997bfc7d9c8331c8e72ee78ca6a17e5b8b5061efc25a7805464f4907d1ece211a1def61169ee9c93f73fa756705edcfff8c283b3e92ae47fb7d1feb2b33d217d9683a7f5ec702b44ee23c6d3243f30e47c765a08bbd757e8998fedc2bf929031142c79bf23efd8dab901b7555e6ca7380c46f3d35fb41a99266b9cc5a71479a497941475bea7ae05c08a40dafe93f80516efaba159b7791323da50ac9318cac3ee8e1c69282b0a5f1b073ae4992b32643eb04882cb5b27688b0145eb63d010b1a3649cf278e85dad6fccc5395967d218ef8c6cea71cc1b9c304bb21f94140ca54e198b91741bb64290b656f18d712ea91ad9199ece5ab175969cdd19795cf4caa9299a4961a5a8cccdc97627a00c9aded90dbbc46e7c6ce10bc39c917123dd80b5bdd7a6afdfee841ce1cdd85d0cd38acd3b78e43022edef7c03f7313d22ff73f4ba0f1b4d583cbf498ba278fe54119838f3aa235147df4ab7f81ad20929789bbf61c676bab89898e85d5750512a3f048440268ca87684a54a6b531b0669cd54580a9be5ffe5306d3ac89d399dcef9ddad0979ded60c8c5ef16f5e1e15fccca5880dec3383f49a3c0afa05f03efad01202ae61f41ac958529f1fa5e59deddd546cd913e56d3496b5ac5622396946302e60a4d2428470fc68495db0ea9c5a9fd2163c45a4a44c75c083d65042d7957b6e4b8f440791e38a0639ff1ba89af6cd0178d1188ab2da57076fc1ff9e21bca337259119a1550927263dc0d5bd962520c8a25124b9c8dffe7fb0750c3f5cd56ba137b8932e51664f304a8edb6607ba28b175bc2dc319e3b1d6e20929d76b87ca00b98e24f98f59441d17650310e4901a04498a93e95d4e6714ee6fc4c6fc1c3e54efcb818a48f7e8fdcad9f82ddfa9107b08ccc16abf82ed43d274f3d4bde9b7c45ad6386077ee2c187dd0122c9785f7e4210294cce110f9eac1936f5779b743a1d754bf2a65cbdf7b260c0e8162d547ec936d140c0d25672c4fd1e0771ecb8262bac00b01aa1864ca6b66d24a9e31cbdece05d7d0d5d3045448ab96df8a387013e92ee1c265fcf83dbd0381b2dcbfbdbd4e09de490cad5bf941d9371cab81019c97cc287de1ca91e20588000e5abf79e9a23d49f96bf09a397707afe4b94c7ea832cefb766a6732f6aa1264bd0c054ce032d19a335b801a73243f093f587568426f3dff9af2b1787039154deb146afffc03d8552a75541d744f7bbc905a74bc77cde7d37326ec765ae01007d946916baea906e1c70cf1decb0f3bf092da7dcb146799cdc9c2ad777fd8ce943835765956022c6b920f9a6d7f0dd9c06fb72281805411b5d0e1f4a152ac61cc5add971b3c45e49c2de415a3a13c8b6842be61ad13cdc8f7a65ada033c91bb2195c0c0f2f7195098530adbf587f36f1c4b0c3401764de2b9b9d22b9eeaeae7215963e5168854330c9d87f6fdcbea041a6eed617833bb27a9a5144d6c08a2728d4b954822f90295cb3ab509c1dfd9d55254898a841a57cda10b28f98f9b548a007724680a7d8658644ec642447c1d76a2c689b1765458d9422072e5814677e5e533a3df778ea8e7e77b43fdeae5edd33e4f833097a88bee9c8a06abd90675c2f7bf566e6ecafc2e4cfb02282dc46ede0232181fa4df7a569296600265630d439fbc3fee74dd824f564e8fb8d9598c01c89d05b2df2a73ecd5236d53911da6cd8526571b28f0d4c38257ea55b08bab5176b61534aa63903dbbba42066b60fa65cfda29e2372ca9c9526854ca1b5f008bb25e2e8832c190235a5deba84a79d3bae87588e6604f5b1262af89c5545f80f3d00d6562d39a37b3d07ac482b4f6980c66d484bf32e976b2143f9d93fd2cabd2064322f80cd686c60f3443fc310fe6f6b5c98c6adcc755a3d07722a09e322489b0997b418cb83606eb36e37d51377da343272baabc5c44993cd7c2bb021fa567cd732f6b83062ac13f1bfc2caff4570b90cb667cea68d2ca6e17e8bcd564c333c7ad415beb3bd63425ea0baa93d3b3e849d6a83cb944349f58243775b81e2fdf6b5a40b11b44d06d4fd9c127737e8dc5791d7bd24d7997ed760a7fdb767bad4fbfb39e2073a023f40666a265be1376fd2be7c48ef4a5583fbf5423e61afe6ea323ca4082612f912765a2c0b733eed6246ad0f0b880ae08c89bd45d8274a26412cf0494b2e62f734302e3b0c3a1a60245cbc38759fe14f8cc5abcba1d959fea99934f57194cdbbe8830cd7380a99b92c55f24da253720a217730691bd1b638725eda6e536412b5adf91ba22c8da872728f6dfdf17b966b8396a8f7e8664e8e37b74057c8b8df06da69ed9ded7403900128e0e889641b510e823f32a531ff345f495f62805c6d77b9dddeac05345e61e8b9036dae9b4328e11ff610df33db9b648c0ec83f90249f7f27f9ab0e7e772ccd13b32b4631e291f02ff017af06b571bfb0c2675b2497e64c1bcbbedea3636b0d325e58d1ae99ff17a5a0230dc676aee56191e1c6c3562e8ab6ddf7252a863c9fdd667d83fdd9d6426a4b6ef41fed5437e5e02d26c1a4921b4bf327e1fa359cf495083889264628e8a346dccb26cc88cec7587caea1605da2f9ce430b0f3796cc6c54cbf41e563b657119d0631ff4e934df010b5036208de4578ccacc551cc900c39f13a5f747d292c268d157c516cb78687bcd69f5861dc00973b2cc00bab3ca2a903b58f23f69d4f1e6cd284609de32a45f2e1c6be0b89df24063437d6588864b7760adbcb76d8907b2b373c4054c6dc4b3ee8b3450fbe68fc0a31c10b2c6b2c196051d407195e664e74a05fb2c8de36644437307b400c1bbd6699a4afa2c595aa189b6493561f6f9d27eb596acae936fc87ad64174362cffe326c3e08cfa32c8b1805899997643153815392c1e28f11ddf6998c4769206b91090bba03fa7d390ea6b82f18390ee301fabd6bb584a1a4ecd80e8bc3cf4d9d84a974130820f696dd7bfeb21764146de838d14c2c502b037062663effc64aa820ea7bc81431690452e4d570da6e14a82d4dec18c78be6fe96b91b18ee96e11cfa723932ee4fde12012dc0378b8982ad86c177db4210641ecc8d40a5ff5113698a23e476731e470785dd970411ed7e94629547401dbe878eef5cf3c24d65afb925ba8675903ba923b5c4ebfa32d2bf515fc82f4f2be2de6bf2f5d962540b3812ec09f39987acf88cea79663d13a36a7d715ae24f6d74ca28d22330cca0c184b08839fd904f468a99f71d881791667966df33232fb05f81722bea3d8c4a7e12bec1bb837305832ac7c12c67843009f007f3e337b2048cf45c1246a2db3c635280cdd43e59e2d59af7fb71402470322a4ceeb2dc52bfccfd99fdba09902c9ca7610da63140a7d89bc90b770c44116a332a74b5e281eea25414e7ee58d2960b5e1af348590386e104df6dfe9ce0b420cf3e958ea9be69b11d44cb8b6ca18f1d7039eff84a3f56f1487ca1c989fa925312a7c705ca5209bbcc35226928db80d317a3b98da0dfe5ff3c53b7bc48c333bbed6c0f92a461e5c93af9fa448f4d01010ded04a77564db009ab48a01868b92a7a137e44a4df99c9107d962a3a260ffc73493c16069f73e07b9444b74f0305cd716a5d2702b35b735811713771e45bfb4cc015eecc5464f240939c962ef4a075e3702e36c33a6accc5d6c9a24de9b897b19de7f6f661916f042d451fd4a02a321e91938e0f92237dd9fa27dae3c3b9d5220d4bda9a308c1438fb9e6569de90199f67960cfe9817b29d451c511369c2220642209cd6aa372e693da9e819081ae739bca79f5c99cf76d93511675f6396da2896c517dac6e13e16bf5bf9a35f36ed972b53a8fe8f87d1d3b9a34737fbfc668adef5f48d4fcfb39f198e5a95ad436a837980c3481162f0c5b95a629b24e309e20b2f93d52f0c01a77767d29fe2f541295f442fdff718529b041b2b5c746a1dc95060032e90c1f443c42e87897b8ca492f5d6063acd109e808475cc744cac3dbe166e2563b263fa495137d0aa77b6f45869ec7a051f48045801b154bdb97404a0ea38bc5ca77560a72cd46aab9b8dff4b97363d7d66c44f4fc1d4943e086a2a42b33852c8722cecad0f4b00150e942ed308e191b9ea320248900ce60af4c0b347a1e0cb67de38550f9efc30fae25ffbbe0aed1cd9c9b04ce857233d43adce580a69972eb4e0b1739d94ea28ff4a08dee4fab15fcebd4fd21071f806422e0fc5e4cd0f354574aab898757e5d74d55bb80807343618bbbfff4fc9c84fd6c6192c9bc8abc0e9b126ea64c4657c570f623eb59a3d8031dc0a82ff96860558be52dd6af695186957f48893a30d2737eb44e6f026153a50592476251b1265d6a03081f2fe142b02a583969e412603956655fb612e8e4f5e53562349683b35eed29bf2fc60814e836ed348e083dfe1ba01bd929db171e8609543bbe692d6c82334ca091b2795fc47196a37dc3a185f34e31600f3d038b99ce7415dc541d17f74ce6bf19fb4a49e3ebdcee5dba6b180a25ea4c1c9d8932fe8e788f6615b400e59b51e6155248071598fbc08cc8b35599a42b14b3177c55f024f23f182b20d1956c86d310563b00d3eaa2e043f4a489a8b062d2d77aa41246a13cc0cd3ba79bbd6be50449f1c2a26bf52e0ad8c91b85d7c6aac8d9af0dc27261c679c4ec90a8dd6f126da16973f766bff8eeb911612b3a826f4c2f6c7bdff824216ff4c8d540630a5830c2d39247dae08d31d164d842305b092ad8b97be9677b913d22724e1523102bdad167fe4fa4448bf8fd2e550bfd7fb3794e6978d56ee92d3b67e9941975b061f38db3550747fafc444b643fceb8dcde5a67c143a04224d45f406c69eec3dbb2c20b46c3de35222e8e07ffde2fa99276636f65eb2cf891d35b6180ae9cf81e35e3aa1a3446d302a3c4f6689ca90a559a8d7f004607553e28f8bc2462ceed01b68b8513f6099c48696c22f5cf8f290e2f59dc308f8773ef1f376b66df9ac9fb4855d3cdaaea0be81d242fa7cc1b5b3f47965686786b5ae2a3466efc734036be6227102e8f566dd3b25af1b93d47593b8ca23c7cd676f8bd67b62efc0fd49f54ea5ef612434759a7134ee25a451f5295981f5712d1667fa8df2927ad201dec62595c60d4df6e76fdccbef848fa2eea985a5eb4458d048d89ff87d89befd91bfbf11811083ebfa691ca355a0fd4ecbae960ff851004767ba64ce06e6716d02450310be4246bf9460b83332c0f744379cc10771ef20cbdeb2bbb55835e93aff87ed77338fc5fd9d01bba70941c489d4d87fd7ffa190145c7559a3dd26f4c32496a01ff13799391afb22668a5411dfac8f94265f6fba85d911edac6edaf3876a9739db8dda66708fcbb03d86224966ee9eb6c1d23b6e7c2a0bf7de566dc1de23f23a69f2b8165dddde0b9da0133e09a06293af315928fd15ae1359bbc3f17c9355154840cdf4fe970b50c4f032771c8cecc9f742906396585199e95db10dd6c22f9b7c051ca5c5717f15e8e53c274922608a45a2e389f1da6a9deb4655a6c77d895c56762107cebce069f1e54c05c4e117c4be63254f900aea4596e452ad28b72bce7530fbbbd9669b6dd282afcd8d5f5cb9c4f523cde5e40024e828395ffe75a377e31333955211ee029328da7371be3a7961fc71f55addfe86d705e13668e28ae1815fb462ef5b1125a4cc6ec98f810256fd7faaa02c77fda5dfb4fad3a0787d5985d72e1879397742a4b8b045fa5a0458e7c4aacefd81240b166e7a152d75b5e8cddc31ddfdbb86d103e9f9bb4c919f529600418645d5ccca02c18d8947226cee53ee6503e856bf324f7c3a257b7dcff19a365292eacdb67ebd122e65e36c1185eee71f78e78264ca25db510b39464deb1339125172a546a8e935d251dbdb4cf880c72a7129123a6b948a90af34b2839f51c93dc777dfb38abe4516db158baf3f0327616d76ea7d67ae89077907932b00d8488c504ce9f057c841cc301572fb13d25665fabb938b4487dd307057cbef5bada91dd657d6562943d429987198293ebccfc550346bcd0660c7c713a823a070863ec5fa44572c7063f223b0ef802d5a11e96f858dac4a08ea6d111e2e7c4b3e34ef296ad65f00b130c369eb7207788da48f7a95d1d546e0b13f96cf7dca298d75498f4bb2f6dbee154e6a0b2b3b4fb195bf12b99a7546da6b9133820aea3f2e25ce23c48463294ec043e4f2f1b6284c6e5c4bf855f036aba80a38213f43e4e7bcbba50f059ac1274e25dc6a8f0975b58578e3f10023d683e2bb8dfb3e01c4a9418ded91fbb5950cffe61755041581f06af34f9e48336c467e3ee1d1d0cf1db9fb2f91bb3a5e21901e029c211f422d60498fbd10598dc017d5bcdec476ac5730b898369e1ebb56528c67663c37b9e49e5eb72734d793a74f46ff4b3ac01c05204abc425cb411696b2a782e97af38f4213adaf08dc48c03051261499d57b68b54e4617eb60cbd3bedf1aef574b41d8c153c86710a0f38541c749bd77eadba7403a4ba4f63726a4a0bcd5bf6f80c82816d583387af4295abd7a578fe9ee0a0f8e593998e43dcc160c62a1982f4bc5d10dd919f0bf9d78d37ba10fcce93763e93261bd63e7666932601c46a9d1fea9da42ec475ed8d2722e0b1f0f70a0f3170b21d3d50d5fe7ad63bf3d5a1d2b98ec0ce369443580a365fc2000fb7628165b89ca38fde5e8282c9fed9f879c221873deef33255c1afab750f5c3a12849d6b21d270b9ca67d0adab2b901dd3f1a982308c8440d5c12f03d84910f845d22d600f44536d6d87f80036548ac4a34b77583930accccd9180292f2d57a0e0ca0efc01d39278019211c8744ea2974ec0b12aa32d504b1fef06f5d265b3e69d9f5659f754567aba97ba78c3f73fd24a2a9f2824d64c98275aa670aeb373d070583b1c5dfcc04dcd527c17a8049e5c46ff7d234d9e79e5c433589fa61500142abed32eadce225e46768f9479eea0af61119b983c877243bf88d68a48aab24024e75b2a2bc0cecc1588bc2c28f16c719777290f1cf20739610da7ffd0c0c34aefd94890ddd539e4a9ba21ac0539ba323365e4b7028d6c8984ee77ca390f3eea47b304f11bedc758ba95a165439726ce0b97c9d20e3614d36889e529cc63dc7cf0a27a8ccd042b0da4b786a3a272868e2a0b42599c497e45c5d0b9dd3a3eba49041e287432618e19c506375f80b29609908571365a9a1c985a497239ed7b73074d4d1974816ce0904dd86995820a0fd4a1a97d17df8a75e7eb68ced5e176a64d61cedeef219435ef0e1fe69233d75dcbd36ca60d98fc31bcc63828fd0d240320fec07b0f9cccaf41f05eca6c7be1fc9701e4f3c39119f732beab1d9dd05fc653e2c24bfdb30d18d1788c2f8b3b22560f2e8f00067524b7f1d191f15dae40337e14a645797fbca399822a87118eab20423c6a9ea3b58e1947b4b4eb2fae6e4f7fa7e57e2c25cc7eb6b03ac196029df2aa4246c880779c444165bcc8ca92f225498639c9e359419fd2fb309e43e9b0da3f648e3350bd1cd2aa3062512684d06334bc7d0b682352fa3231193f80c911af2f10c776a28c390d5bad8ff1e987ba01d5b182cc67932dbd4426ec30f2cfb7d3d30bc0d8c9b89b0f719d83796a8a7e7dfec57c073872b790419cae654b4c8e42d796295054ad506285509d0664aac9ddffdf4a7b4dd97df61cef320eef4f6c8cac0ec10876b4e96508e779678510717c3d4bb5a7e0b60a8a244e0b2d5fba04d30e2cb59ecd19babc84ab1fd7e169081c4c5400e0104cfd52782a0f7d76bf73014f3b766c45a78c041bd762274a191c9a0a7480db25cb4c060f577ab85b62e6812dade9b6a4baf942af734200e94b962773688d55ce6ea10f7a4958ca9f445fd8d0fa8de463688c97f12b64a0dba968ce684c2e3c759af38477c64fd28cb24bace0b539a0c983f23ccb87727245f4cdfdbeb1c3a2b3070d6941b8ca3f3c52449dcce531314ae01472a68e22e22ff8a51061536d2acdef214217fd9d0672aef9a55ae1057a9a13faa0773137024fc212f7d172759aeb83b286a295fdfbf688c5d4135a8ef7e97b13623fc7327f4174dc4f8554ae5e0cda6a6f2c97db7f7fb58366d46dc2bcfbbb5923e80cdacf54adef4bbb70dc2b2f180016347e2858481ffe4155f5c289d71f803969faf7c3a3de780fa44078b189bd175e8a04533bd3828db8a9b41995d2a63ba20b83f768243c06346fdc1b727cf273eb229cb6f3000b1c88b46208f33b880e5fb3dc598d7808a3a3e6017e2bcff8850b1dd2011834dd9d1bd620da5bf2eb64b21e18a9a0c756fe8b7bcde1550e914c2718da9015accbd82e7d66e97625b828352d552f8e1361211b6af868f966b3cf27e7a7a9fad488f1470ee7253dcbbc6f01c9b98945d27e31f6b7f4b519264443017f68fac647a8b4765bf6ef04f3e78a4c5d14b6f45a23a7dab05b790ab828172bfe253028c9032e5d9490fe56b874909576e8bddbf2b09a2e78644ddabde11789fa0a419274faba34c1e403822eb06accd1d7d39930e9db18c9034087d95122477f35a829fe0f436860a19739d69bce0c6fc15777d8a0a77f14f74cbbc1967032b2a65f66896574754466220207b0486c12668910a751bf2b5d98615ee86b204198eccd9616ada2e604f3f7da82e0efd29998bb5a925be46b740faf21361b551de2720626fe63b6d436353956290ccd1f6a975742cfacc056d356294345be49125ffc6386821fb5eb4d0e6bfb6bd3de0361597f3dac5fe1ab082f4bddbfda5fb8a6a5f6b977407da7d4891bc060a040700a42a27c39420c39e73a79e20f2b34cdaa5af5d6b9d80f13abfb290d6409f6915eaf4bf8cad951ad01f9f8a19637c7505b2639122254f53efef223dd0ebb6a53dfe515e2b03adf49d70db18953c3bcd44276f493130fa47c022fe4b44a9bb4bc98819ba573fc32c95b0926ec74d346b156d87612cbdf4be7ebf1e24532ca8a78beb6ace55e9c3e09104c0237a3ae92ef9e7ef120ba07333f5b10c099e715af73f16967839fb1116ee7a93521fac466e0a028aa6a6691afc5773bbd5e155cb77225663c7c34ab775a2557e381eeb79b3a04cdde572b625535d99c6d0ab5e15ba523a2cec87d087fb241b011d22f0713b3ecbf29aaec610e2b3ca10b28fc5117f0b5c6f41714f9b383b003b8b27cf89d4e45718a77605dfb6e5cfb4f0644f6d34e63b891aa4aa3d0431e9d96341be7f845b8abead2d031ae1f1297c77f148248d33c7fc7a2b45e5f0e98358061ca14a2f446cc950a11d0417f62068aa2e112655cb5ad206d5df697ee46be65b93ed37252eb350ce3e15fc9fa365151965403e899e93b80e64386d6516a17f255c8d17b7e2c6a328f024a4427f476088349848d132f6dbf2530bbd8774fa10246d0147d9328cf13d413ef82729f437f943cb330d5f11fa3735db8c0d5b9c7639a55d855edf6c3175e70f2d7b674249f847024661030795aaf6d78bc4f499a695a2dbb13ef8a829b2ef90853982a219441bfacf6964502dc5cc30d11034095e7839891c064e54900970fc2a481a1166cc01fab9ae07be9fa7457de5f1e226ab7a17171068380b88cc8e3edf11ffcba898a061eb258e867c235b2617d985bd36e3963ca81c6fb37ae7e2f444421ae9f408cecff0d3872fe25d5b1194165ec032a847b124f5ab219cf6364f22b7e94c1adadc07f4703663c839a1076ebeba74be8494f6aaadedf974684f00dacf5926bb4ca0836da5673cee841184f7d0eb84bcce1dd6382a7fdd2b20a948a6c8f02b09f7c56fc19c36aadaf454a34f463d25031f1a35af03fd3d05355f4c78ff4a5b3f7f3a76eb83c76516fca4dfa4e1f30bce2a5f0e49934c962c8fbc3f25a873926660730eb49ad6e924c6e43bdb188b49b6491018d28160f9daeb86f55dbbd1df3bc1b77eee4540e2f9b90c98d6a19e88b54b2ae0d9b12b838a9eaaff2005b9bca467b9e50ee2c8d0ee5f08f440073d8c28477b24947eddc7ae036fb212eabf7b8a592a65d682b4febd0d912756fd6063802ae96e172f92c1518b08fc9598525de854359032dad96bf2d07d47dba43be7cc81daa371333fd956150fd9584c49abdbb6bda5efcb84e86447cfc63711c9a20e9a824535258b38cae92fe3118d5286904031834bb159a2a2a419f22fd2ed6eaee5cb01c301456039cee4c9de1648fbfe505327c6e04247c3afb0b1291aa7733b8ac4e03264bf9ea39ecaf30f86a5329a79fbcb2f02298b1e7121620e53ae5d0865ead78b7437f96734b4200f7b0d151ff838aa63696346299606de8eec667b9c5278feebe16e051c187dda5a5a11ce8ae7fe2d5d8e8791d5fb3c7e3000c8b2b3763908dd34ae2d33e7210f8054289c33ac186e1c0c40f449578fb1078b03f8701ebac13ecfd251b07c2d3b6cea9daf0a63cec33823fdf207890f4cfc30acf3c4f6297deafbc2a21965da27de2f418a56b89c992f351b7027dac061c839a2c4f063298969d1a62742b5bfe0e1c9c4b076cb8f726e20ee385ba42329054fc8020507a8aa955d13f236167255f83f719f55f10c1d008f6c6132a93f59732bb9a262001282dd6f0ce00098a5d16ecb5795cd96090bbf2fce3d5cc6b5cc58e450cd96b27d61da383bd50225c265e6c969da676885b46f35cb71921af7f7adc2693da85f59b72d9127d50509493553b3bfc4a0364d2be202b2bf9aeb303f9b526b5579fe76c9e31e52756cdcb4862b95a3a76c8239e64e9fd0284fc63046310d829c5cc795fd21b508b1f5d839da373125491c4726e23f67eaa2932d719641ee4699c3d85c39b696effb87cef3478ff905e6e0b18b0ca51cc3d9770bcff7efbb13e3d25aee01c009d236353db826677dbaf67ee4a68b07278d8b69905851723eedaf9af7c313a53c85598d379364bf1b56fc753994925d347789703b402032c3e0091ece0447a2a6a525d9e64f83f4a5a3490090db72e6883fe73ea2428ece728d45c22e6b0130a2a47cb99d070baffed9e322dfb2fd644fcdf864571a13b4b3c22dfab6b1d1ccc98e91f0a7952b11764fcb2f0dfc70f1f7cfd5b80f1ccad4554bf764b5cc57f9ae70d198d8442924373e4a0f650b2723d8ee774926162be27ac54e00fa513dae1351c890e6f15baa75667ada43cccdcd6d92b466fd8cc606c82ac40a6ffb390e479cdb5bf1ae3f6798d4c32e9ca04bb5510c64e031c4abe46494d8a3306b35c30d16a7d768fbc5c4f9c1e54c41b88a17c3659d1d7161bb1842ea07c495814f1536eb11c752e53657defa4b5cd0f0f3f0058da8b9f9aa674974933a51c36b3e44782f792f610ccb7851af07907ccb98a88d1b788e5ed5fd6bc3ec7a56793224a73a2e22fd604d765ef72cd0e4da83fcb9f9591f2ef4fc0d22039a95be0f5695c89d46d8da5507a6a1cf991e3776381028c5308328937d216513efc540432f70afd75515912f9f3d823e310224f503a981a86192126459258d601a58288816da5007c3a552c327ca34df10bb472d3f0aeb23c6d4670ba00bf96765ad295acb8e4fdb73827576b70190a2d52e7197b57f0b5037b5869983ef5be9010481d536da381b242f6ddf3aae4e8d043f81accfc11308d3d72b1721343d7fd8d753631c631e1a5ac49d2b910f43ac80d3407dde49060ce93ffa3d4d31fc662642f8f2fbe1294298d1c37922c6c915af2222fbcaf6949f8bc56c680667a6cb2fdca45024a61e67a274c836a74af07717e5e99b500286a489c7dafb4e173af9930886b89f35f306f5b0e1790b0b0db2eddafc4eb1c2cac233c10e35165a253c680b41415980e55f54d614a64df4cd84dca548429049d2abeff9ab5d19198a29aea1995464cb3a3127a590f600422fe714065a238cd077f646eecb6f5832e76973bd10e6aa9167a72cb86dc85f1a87850ab67cfd1be7374ebfea68b215c39e8fd793088accfc96f8caacf3ec6fc8d50d27f15ac66f818da79ab31a6697daa2a1d3c724810f269ea68961ee30114668668a62da0936717effe4c39be53e2f826ba51a6dfc5956d312fa2a43daa637ef3818eb661b1e77ece3444979fc42c490e732247f90f40a8d8ad80bff3a696d503eb81681bb0ba98b7dce3b0b93463dbe35e69e76025d7333aaa51dd934d9c51e97fecaf944c7e2c13df3b4d8713dd337fed664f79d6d497325efbb2e320cbfb2dd54370f4f95d0883e690dd51887092cd3692f65b9be98b17de99f7590b4cc4317cef8269e14a868fb220aa61bf0d3974c10b8518f699529b4700a80ebb69c8cff0e3df83c2348a2bcad610489ec002fa9b9f1b0f1adf90ea2bbcd6d4b9cfcc7332d24476347ebb07481b7d4555d57db18dc5238a7c2c51e1b15b2ea12560630d24f6192674f75ccefaf8635103ca280e1f1d135927469e1ecadffe3bb33c98ef7660ed74d06dd912d940a0b92e7104054985d7d826ca74dfe81f4039e5cb0c1351b1a185f6887e6179f6620ca009893e150bc7b977a3e4c93cb0376bbf89a1fcb45fd61d855669ca78a1b7ecc65698b3f8a304df963c59a12760968d06d4fee9d5b73485a8fe91878d6d5888a3c1a465109fb86c2c267a6adb937d32c3208d86bfa6ebaaaf4e8acdef6f83c28ccc78f41dfb15dc743b6bfb2a3758854db2cfd990e8ba54e13a698fd29f408305c1da44daaa1542454cac25673f4a1da0a67ade2b2782fff35099908aeec8085cc658f66a5185200f1b59a9cda5767bb3f198e7fb239a1b7b25ae6836677418d62fbf184554d2d39a203a0ece3bb41bcd26aeaaf8900e3c6c20b33ea23a672f1e21e8548645d22b87cad7923757420734dd9de0cb5b0203b8eec1b46bf3ee83ff2510dd291f6f0494bee94016db32902d3c88f5379ae2b3035b5d676300ceae8484f9035c27970b63a87c672ea92257abe4219f0b3cddd4f64731531f109d5bb208fe16d96f0851dce7c75407b45309cad1f1b934e59897258c4e1a2b2b3bcb81c70379aac041f7c49fc72d72bb4b7971b64fe007e9237f0128e6d35ef315025188d15271a8866984ed2173f351cf4f159a2c5e783ccab837325b3dd168b5224ef754ab4f1133b9bcff6ed603bd829f3bf8239c5985bd28455853fbdc89f8bacad0def32b441b2cadfe45b616cea0f669e8b33917fbe59c6e7bc91f989fcd37172ebdf92e1a55738cded1dee0d61dcbefff486e8262f85e651ed1990b34daa7ceff7da184df6bc0e23eced37d99b6833df7525810c8d3d18d147b3ee0f50a41146ea42f8ea0d33e0cb3c4f3083b09b1a9d3dac7ebfebe6ef55701d40a3d9202892156c12c43390654e1338310bd3d82d127d4a1abfd57bb5bcc2fcb76b83e962e4f88c9c0970d8210b082d71bce1e8d939cdc941cdc88307ba86c1f77356b46853a027c79a8d1c1dde51f1f813414c26daef699e731029c0ae76e66c14467b83f704bb82f795b1ff5796a0d6b8b88d8880dcab432c26148734fdeae3eb9aba8e082fcdc7408ef41a61fe7dc7c7eb21e8f446ac7715cbe4f1aae7f2d7789a2723c0bc3e76aa30f1277e4d4ca1823a10fda422642381f2585b1c07e82d94b71b0a3870ea1c0fb75e6fa7c0cda5b2f75a1e4d92da9aca1364a5672e86e49aca7fa11e824719b8d7d16a7fe1ef066dad81b67a130d90536c95f39d321be5e50d4ee47b95ac00e55eaa6df9aedf7be1f6ee9db4712bb51c4c4154d10991403a98efebeaef3d89da3257d40e5de81c633f104ae66f89afd92360e5bc02f2849769aa4a17e139f9cd54b36b844d848ce53dc1cf00f128b334b35a149d937d909405870a347de8a0b1befec50d912d076959c393e2afed790313efec3002970e9f9c4864253032ffc65284f1dc28c45e8d5e57cc341615db257e1ef082ddbdfed00f98d2c18d0f097f8bc65a5576b46fb950e27802da4d874831892dfee61d67bc9cecb49fdc31e8c4875ce09924d7fa4a77324ca624a5db42b03484e45cd1ccf338fca777e85fe6f5e15e095421e8495990ff7b0953e6cc35d506e4dbb9611ea31e2d5753811156c2c55e8fd585ae900a60b74270f31d1304d111631c1a0675aecbfeccbb13d50b2324e1c8fa4dfe1523a55a9168cdc056f025e79494c806e0ff831ca7b6c05bc6fd542108373cfb8a58b3f6491095e3be42c9f4e94faa3c697f06979d1b8451b72016cebb2ede1342ac624e6464be5301b3d4b654086d26c633037486925d0f9993e4d75ded1d999329fd812aa2a26daea46df8ffe6e39872739b24f1353f19cf011b61cf0b2e9f17110bfcac2fac969db0331fb1dcaf164dca1156e0d29506af113179a61ff481797c5d9d3266ed7cbc248efbe2a4b48bdd4317d6c5464b9ff45b369bc300b5468fdb9214edceb3baee223d5fd8c45bb4d822693862e9fa61f1c57fe0f1ad24f89a10c305ee3600fd18d5efb3179c0b9a5fedd3bb5f2d180e07bedcc32d3cbfd20a718c1e566a102f5bc7b5df635ab542335814c88123253aef09f641ec16a40b6b4daa3dcc4b340ea0f14bcb2f66ca108398a960393693b22c01f530e4ac6a08ec69cb281aeceb40374c13be7584a77f6f633e6e4d9d596cf7bcf8a53d5005afe400b5d4095b97259524db86b45574829ca1cdf2c459cea76dd093bac5e3018809af246b94e16d4685fe9b444534dab82b3cb03c13785772275254c20e621df67639169b4aa4e2fbc902a960cbb915d3c8ee68378c0920464a4702542492763ed335886999000eec25cccc0186b3ef6d6f3d3624bb066de67ecaea3f32d7a656ce619053e9e913f90eda449e0c10f32b31b02d8b7e4e9cdaa936d4c9147bbb7cf0a42f43a34be827ca3c4d5288fe7725f18015cf770ee37ee30d57335f37f1ca08148c88647307eb5e1f56099e38ba2f0835e1e651eb44c6b6a12dcd5009be7be5cfb0843af56a37fd0e6e5737fe537c9d8c7367107a5f12c94ea19aeb0c816531a970cb73927e270835903914997cd1f304b8a978f398ecba33381eb522fbc88c322ef07fa1dd4a9092744e58216ee5970a692f8cde12bcd1094410b6be82608ff172fac7d3750e266d9f38e6ba875e5dd63b21e005b83a8a40cbc8d728d1d506ce2e59f118d366a66cace6eb1a4c56f0c555eb5f4140f0f3fbd25fbf54f13f3b346b26805615e9b672bb2990452747d92b69620dc362765c85a9b7a726228d9477534fb6d6456108f85a457727c9307971def77bbc76b150c4c6742eedb3d82c46ece4a6544f80a3eb38953795803d5ee90168012c2a0975da5bf9737ccee08377088f809db7cd1be9b86bd798f65c609911c7be5fa25870a8cb57a628854284df6390c52e058a421a5ab8d724a0c64c30d39b215e5e6ed72f46680cb1cad629625aa4ce58f2424e49f0f69d5f41357a7b103a64b99d786fea354d607ef338063a76e27bcbe9083ae4de76f1ad014c51dc140fdcaec787d40cd5a93394d5d7a074231e0f8d2b5576741cf094e7b3061691faf9596649473aa548dc4fb06c1d1c032fe3db09a0d36fc0dbd6447c960372293830080619e4734b5c087a83f189ef8d6bf9212b732e7fb622c78c0ae8609ca705210a07588dc238fa5967d7a6bfac8243787a7b1727f7a1ccac66d3a41daad50b723cc907c559d41c9aea4c0c882a99531467abecdce9fd8e37bb9e98bfd4b915159a36fef61d9a1f28994027cc82c016ea5565f8de40b4952d5e68dd0a84364285f9b2c53638e8c65ff25eb33c913192488aec560fb5c7f0046f5f863bcaac7c0ad5ebed87682720a0ed4cc69b2e4ba46b8e94c0515c956551d2f9dfdd1b44bfdf3d9262eed1af0a6371c55fedf97bd789ce0621670ea95e58c9609e690ecccdbcb466ef855aed7b1fd78ca4ce214528b32666b514cbc7f4fc1e974e6b5812d82e90da8345755cea4198951d4ab5078d4718cb68e2887028e0b88cb618010ef2aa503d35b753f95bd7fce0e128c9c322737066f232cb66f7807a10e4c2d673eb82cee66af050ac93432880fd8cb972727cd548fb746611312bb56a53d62a4998b00463a0a92c223daa0920c16a97068ca0f7b5d6a74c69ab323822a8306f4b0edb880759bd8107ac94a76eab4e01b630f0383c9bddad71c739b66ff235481c0850c88e1e4d081116f669f397ee66b5e0c2a2ebb3b14d4fa1e92006cd5a0438bb4d71f158c14589d926f630c98684e89a6707512a8c26a58673aab9247de437971615ef25011035430a9ab72075ac5d9fd12bf55b4c8b330b20fedf9c5d654acc2934b51e68142b5959b67357f865b4c51ae502d2c417f8065e0285e61daa410ba74342e8351c634fc125009930e7f2764aff709c1ea643000eae86e4fe1b4ee4a0d6f7e083996449e7fd49a6529d7bed898efd7028f891075e0b17588f97a5341632b2d58267e301856f551d60c2654b6c6476010abc081e8aec632fcf95763684fbbbfa746a09c31f36ad4b9281ac47692eeeca08cd5a9c0dcc163b0d9e090854ea4639f5c14e204e645438bc67cbcfd46279bae225cf66d57940ff8d0c7260be8554b90a5324aa20cd7abbb9e9bb3b0723739fa1eca48fb3eec7213b276ec5ca4ff1e8ef26f8f3ce1624a1cacb038cfccf37d2f21f9ea82e45936adbb359ea878f9c1db841d985243d0fbc2a1d12c5c6f7a7ce50ae6d14c3075ef0d5c2a41824c484cb2ff3d956af1474249265557bb58de3375a48d6c4c5902466421ab5475cd041de5653e1cb52fec0b87010649bc632a78367b7cb0b98d44c66ad80cdc6bced07ce862666076b51ad33b5e746c902488b6c92b263db98b8002c4090796a4d5e3185e7610eb86b7f74d46aeef466a8fe27754e5b10875a8d2371380645a5747f5d01ab50fa9ef723b82269e246ef5ff59af9b34d353d75edd836aa48632622c337ebb598d2d21bf8076c694d37051def5bf92364e9dfb479f8073d37cbc7aaf40419cd3457d7f14d09af51837e137b81b74419b97a554340e3171d7db0319fab09d8e389284364b15de0b82c4b18b1a5ac5ed6790a4aaff3790f7255d67b325cda248683671ed68e3ee011eb54fb801648119a447c61e20fac99c41083fc402fbe0112fefb70373f290ac26b0be682244b2c8ec45b8c96c15d58a15c8c5a99a64b5a3e720c7be4edab65473c27d61d48efbb2d94090f54ba3dbce6b511122969550dac4938ae2c3666a081e885492241c78c78d5f164f2cadf50eea42e919ef35d6e63ccfb85cb1bdd0d7dc4ae789c42f1d396ac5ff4b73ff190ae36a889e9f18c4df4daf8f85825584b2b404246af409928b8f274001fcaa9ece4908fc5453b6c9b6a579a45a129b522a2843d4751fbd1ad9b7ea5eb892006a4c61665b4611875ff1725c3731e3a24608bb063c60bba5b79fbbc8f47e55f8f93b06153aef8c6f5bb30060c30012b9c0e9590eac21eeb8500f3f904f288cd3e75c8243e82671ccf236a96c3a78dcdb82df17a4dcebde74e38406fa768038c1bb79489b2b3d8998666635f5b8f358276247ddd0dad9a537be02f78c47cef703218f062ab1d31c46a36fdafae9b7aca00a08edfffd39bbddd6c407ff6ce2b2a491f34a57466eebcc692f67743199588aad3f1a9972f40f6beb0eb9bc65344859dbfae44a90ec986de1777bde369c17aa967f72f02a8036d7a19173c90026db8961807ab56def102e66215a40c6b8a42241dbecdfbd546e90a3a959e7815c6100d7a5063c65583bb7ec9e88bf0be39b0eab089edf53e27ccb7bf3fb19be38a7f8f6d7ee1376e3cff21c11bfd8d0a7af6fe3c440ed024afd876aaf513a42bc9459f981487da56fc8494ee9cec8bd66a314b5a718fd9d2265507ad6ca0d7f0b6bfef5af5408c00f60e77109f7c96cd71c99586109aa112e785f3fbebabe9495b88822f965f9f05099ae6feb52b89b6e3e605738713e716e105e2a5e2528a4dbcd9f2592228e8122064e388e3a8a8f912a81a54fd411206271d4e2c5282dc819a7cdec660b77c3508d74fa3985dfe758245e4de1ef2846d79305a111b7ddd48d6dc163e45784156d488517befa726be6797f40bd0ac6526f4074163f33d45971828e2edf62997be27bcf63d2b8d132cc094528d81b67fe27e40b98ea376b972b998ae10cffa8eed68d5fa7b2f985761540b636484d1a0456bdce8c6deb970637f9ba2e956d8062dd76cb7bf241851fcf14343ccf89675cacfaa25d427b04960f727471d8c250ba0e6bb891a98d235b4d1d059a6b6e34d0f47205464d2549f3fb5f00a6e6ea9dd02c208f6078c4815c4ed78f8861d8a8fe24409abaaf63143dd70a21d119fd064da471fd84f33c1d559207ecbe0c2114c6637399967b381cf52822a3ca36738af27fa454916acb0cd1a889d5bf96973ccaad7fe90063407f7f2e72922ca0281c83d545069cd4af9d988865d1de6dd1f0f5637036814186e0497cf4702934fd3eb577b002ae427dd8d76fbb487b3f07706ae92423e6be1fdd61d6fb0f96959db5072eae67d3a6c121ebb38616f54edc92939dfaad62f7da0eb5772456ae1c34c187fba51e1ddcd2aeda524fc2a4a85091598d50e8252791fdea5ae7f004d3373b77507753419ed437ce009702f7d69a2e4991447744c36248883fc8c33ee4a8d2f21a195502fff56b7ec05525f6e1aff776da7be7646ad7d527c037f55ea9fcd5d1ee3eb6bc1eb8ad001719fc6498b6b1aaeefb9698cb46a3c6289041e74f2332da55c5fca4ab064ea7bf465d28a10501f75063ebb38808c5ef00d5c9adb39b700d9bbe07d4e60f3f5efc74f0781267002caa1cbaae37069aef14253aaf0b67f90cb5afdf2d4c1032e18423e4fa2115598f944affc9386f676f89d88d07689815eee0a87bba2758a918f434f7d129a9a9089efe5e093ec0034d9b4a450f046ff499374e51b4327dd203172f93d39b97a1b32398f8571e08acfe7dc12599e51088f458d2d259ddcd21e9e0655b1db1d210e7afc1886703a44fbab1668c703479a34d2192b67c8ee046a946a289a3b3c20ab6f4964cffda35c6cc35092690fa41290697d2f73488a0abc7afd36876ee36b76a1305a768ea20825baedc0e47da1fef2fae0dd8090f45d4ab5a4b8ae26c26615a350fc66e22bd3e85f84b1dc1c59fc7b10be26d0123d17d69bcb48e89f299a5a2a395343ffe7c02a69dd0efbe499559cf2508663fd76a506131534cca4bae27f1c3e06518bccdc1a78a7323c834d72f2dd50072b6ab950a12308ae5fc1ca652bab0b39579c43a47f25c65f972226425f764abb1785d55418a0e9fe065b06df61e1f12a775417920d49a428ee6f23aa7238bda37906ac16b7b21ef0776684dcc9ddbc0a96b54261d468b00777d6df6f4e25487167261f2a956f117c3ddb45f66d10eb2b10a1e43b056347ce58da401e6d531557ef555c8988cdd1a4d55bf6bcffd184b239f31d500b96b6adf37494f70567327d92d7e254324e2d02b09d045f736aef4b52b0fb040e710ef5aabeb88ec9b8c0698a7df31e6bb17155db926fc6ed1d0e729fa91a44cc77ccd9f47c5c88f1063602e2d7d432ca37e4b60f56dd7f35bae283cfc962b2a6772ac4abd250427a9bafd922103e65a495b5f376c3396a188628278be36d3a842b3267972302fac31b1514f8121d235f185fe60cdc953b1f6127f5d09196cc91db55da76da0d39a6c8b29ae0dd22aac1d4c31c9435f02020bfeb87ea928bbdac1679fc7a6152866c52ff535f75f19a2480c0065e519f883b12f9ed489b3ea6c2829f1fc0cecd259d75d9049b7279e4680855b68a3877b13845b4d05b04c3a5772fc1517163088f4067cbc3780162e88bf1afd46fd8a288f700bf937a7ff82b7b9a3d164c5ac6a20411b76ac9eda872b919162a7ed3b5e6ad442ce56942a19f5b3cc09cea6f8fa75830555a71389ed8e1288d9245aee7b016cec2c3ce14ee41d523afa3942e39e400c6a036ecf0d78ed3969b2c0c6b5845a7ca9d8e019517f075ac29714cf8b83879300756a17084019c71c9f04e13fd6f45ddbbe3df89eed93496ce930d1f6c0475fc6e050102dba56541bc0d5f2687595c893a46cc3efc54fad4abe2b89f6b638700a3584e820414fa299fc91220267ff8c3288ab0f9800e1722b058ea522c29efeaf62beb0d97ca8ee525565043b4c9861b5bb149e367c5b3d072de867c042d18a2fe9242d993e58c9a8b391b61be37b0f6d72ace1fa42a32f106f8397fbcb22bb60bfd37c49b17e773ba56f8a8c58dc59962b1385c43f4afc25b0695e6e5a8c0875c4a78633e3f2da52712e84564e99c1b5b87e1949e8cec399eab45d4005da14e29d95e6890b935694cd09c3c6c742eac06fbb84b9c49f2e95761c32f95b26fbbd42f1dfbd0a38db234b99ecd56ed0cdbb51ea270b8a3572a108dd6904bd0bca97f30357711b54f30fd78bd746a43a1fca5d21993866e72e7f449df70bd0cb78c3a23d6b0510e298a81763c0e18390ebc28b1dabc16c2b3525164df7b778a0b09f217f3944ee2afa59b39fd066628a3d48236dacfee077f7d23e39d45e35a058ba9216a1bd0ccac06d0534302c21e2557f6a9d008fdc016b1d77ad1f4667c2569da5a5ea595fbe76e257a6bce4589bca88004caf329d60ff989a6ca73e80ef68702dd3b6e89d8c03f7c68a7a0f69c8025fb2a7787bff4e9d9489af1bdf3a11abc32fbc6b3e27258b598d1bd1262e87f7e785680bcf06be876582adc0fe035195ca9d105b1b50147dd2238d3655ad4ea648ab69e76e17c4150793c8584209484cae9090181986b4fe94ab10973f3e29200c6366c11873eed5f573966495abe5e6cf319c9ecce434f17b3783401eb8e8d41964f9194bba73d8faa2507c94bd6ed9b299dd18dbbe7cabcd7899fbb526df7906ae320c9a393d87826756444289b5404d2b5fa76b5b0c23a112e34c7b04d89f587c7dc8e91d3433691741b71f68810a8182a1c9e79a9b88d9098cae6a5fc9e04fc56cd13732fa6635cd994585fe9bcb8b49f02b23b533cd3203756979a34adb626f3af5fb97c59ed79561d6e5d48a11fc85becdfbaadcea58782feb3566809270bba1c2f6f8030de216672b9d08ae585e63e0e71262fe48dc03f3a00f2131faa6226a449052913bbffb68dada8189316b14bc7acd39d606d52922fe47abd2a0db88687aca71005ce34c9ed6a750e829b8ff0e4e4a667b7c7f6e6f94cef1761f63d8daf498d3d0936c0e61741074f9db4d24e169277864b9c88022219d2edb59984bbe2cd63a70ba6a414ca03a52074660ed0632aa4c57a6f8ef40bbc54058837d7bff2ec32744912b95927fc97029dbbf4cf19a50774b41a70727e9c3a27d12aca82163f699955cfe3ce32272a187282fbfe333b1047c43f2e2c9d75ef30141f4610f54585aa90f877d62676a175f47b68e402f2a8fa5d8d90c43c816e185f92a1b9c621ff7e05ac617ab269e2602c1f6ef9bc1acc1ff1181e304bf8bf5646684dbad1b6170346124bfecc65098803a71f594a77fca7ea66397ed4579b9dbe89983cb3b2dc48d62b8fd041aa29e632d727d9a717b38085e5e882762c39655f465de0b7d8d3d84ef46ca88420d73df2ad0c7bb0185f5ca179f0de5fc7400bdda2653a1faa12e868280579217f2fa82c02b0e870c8929e0fd0fcc685ca0107605bbba297d1a2f58488bcbe5e1d6b157b7b411148fbc12abdd72dcf8ebc619e69e1249d9e949a552cdd66f1dc5f9cb6a4b99f717e7338ac2257f6ee4cac8863eec9d52a4e52dd6b6800f21aa31de92690fa4fa6e6713cb7ebcaac7bfdf63db0f1c61d6db89a5c803a847b2b2c2f45ecb3d2e6c005fc1885453ff9ea14313f1ae7be6b8490140ebd6e1956c24b6d318fd8d59802b8fa7e2947d239cabc3f6c4d9a522af88766e9d07aa3b706c0fe46e82cbf7f278ee93b7e684e95a94fb756f25890a8fbf06d569e44c1b652e6fcc0e42c8fdc2f05f28ff6506620644b7846c9f32260bb3222b14300fc4a7c36a42e639f96ecb2935a272377bf509d6a1976480ba13c5f71932e3797f1cd5e6d33131bb5c2d65a8fedd00aa433399f9e03ef9e3e76f2a67b0f654e2398d37e80715e6716eef695c804572ffebba567b93dcc6f0104222c7a22a01398f9770bf2c61bdeadd3af6f12db5afb991751d149b5ad8170077af4f86cd9b5a4612b7bafffc01dae2cf4db5ceed3c0cb7ea8ee94e1a537a9bea702c79f4420e9d7f2a903753c8d4f325418f8c3ba62bf69b964f6f6aba9c5300bb89ba60c241105155c166023c4cb065c64963a1d9765b8f0eef34b4298538e32e5ffeae5e7f18db6ed0789be6b66da4dd89bdd386db9271da86b4051946873e21e931678f96606f7f294c143f65454e8051263f3e98bb863c9045cb492500712a6fe53052a5f8f78746d017e862912f7e86f0b1195f3a7aa1c088735dc8222fc20bc7bce95100435c3735fe095149ed6754b73cd5aae11ad280b54aaadabb783a0f8012331c138be7d55dd4f9127736b3399e36fbbab1d76ba7cf7733af8289ea28be8072033ac09e343cc099903886a2f0bce368f5467ca9f5a82050bff8021a1d9a1a458ca7d571c0652ca25ce2e849d3fa80f60dc43fdf0620a415183e6ef02547690ea6c73ce184896286d7db94c29d40c09bec077fe3261164d3e7403771f458a30e23c45be0595964304f5d0fe485929894e761f25c11c746450221e014e8e526da177d7c3570b62334ef541d15b7b76e673eaa506223936b9c0a7199a4d83d95db09cba979f2aca8aaddb0138019db0d6d7c934031d977a8ae81cb536944de01f536ba265803a46053aaceb1b3e81a3247dcc78ea0431781f2fe3808ab6efe1eacd360cbf3e434ca55ee8bac03756d9322e4624573a3a84e2cb136ed63cce4f503c2494211414af32b9313bab50a80d797f2387a9b11c12fa502e0fc3491e47f228e1ba54d7d8582c9971f7d1005983d5c499ef34c6401fe77714ebf62bf1d5661c5e040afb688044e36da1a69f5cd44e137ae5f2e385df130ad75539e3c14ba9a4e71d6553445e2ddefb5f5960f2af99a34b527d36e78606489e2871020d583fd2a837e759fab2b291aadbecf6c15a4de6b4f0257f6d6a271e750bdc4dc5ee6b4273c8048a2df263dc3c659abb37d265452ae7b955281e47bd7f16105d76b98ad8731b87a0bafd3e5d62bc0f8ac0700f9c22f54b8cceb248b6b334130fe219ed7576b3231b0a8fb5940603a89fdf4803a63ad00b715ea667a36a8765deb21a699902b0ef17c598d137b13f6855b46da1c45d5669d4182c7dffc1ffc745224f745442135a89978e4e079796b73e390ed499e97e94be105b26b5c0d034423ce92f227bea7d2c29e50006bfe31d2b16d039dca62d644aa3f32930bd5f98d78d9bbca1bc1041642dabf3d130d1ef180cd7bfece70658b827f85c80de6d16d02851bf2d81ff1149da751d5dbb5b73bbdb453426f6a1b721ad00191ab194fce74598349d45407c1ab4929320550367df536a8fc8a1687e6b5d925221e0f43ecbb0860ceaefa3644fd80231ba4c65ce8b19d5569778aea6ccfc691855b8bcc0c33830caa4027d563701505632919baa83bec5deb5f9ff48f925ff86513d4b4b9d6463dc0e6435417408077e6317832fa21a9aef70965ddf7617548aa33e6eb000723e8fae1be4eb5b4bb92986241010888e7b59c74db0bc47570254fc011151d25b9bf0b31fd9a23cd118b4b0f1d00b38817b70b30d79a57b416e85ea09441f0e15f764cce99ff3fc3225316699fe135bb9db0a1f34aadcd9e075e1680c8690bdd7c2b9b3db7e2043faedf9abfb28804888ab76abc7b7aa5ccd83e866aab935b8e8ab2f1333533f62f649829bc8be1c4bdc2f7613690706f218d1df55b0bf0881718a18f2be812898c9210760549ebb1c90243c4185d24e825220a3a27e95a3ff78a8118204059c80d36be2de9e087020a1bb04f420f4a87dbd183accfb3cbbdb69b3e4d53b71b8cf25ac767b46bb5d5c6545c9870b306f2999400b058469b43a3fe012b1acc3bc28d2738715d5fbc64c7921b9ff1c5d6a7ee5a4290dbd1352dd18d23474a69b24cfe2f8659853381bddbfe931b39a272a3a2c8124cc5deabce81d1099eb42330145bb312602a8e4e6eb6420ea3e151e4ed903ab31d9d756048da6e10e58ec790a90e6d9741053a9ee6e74f4aa3186ba5947ab64bd4e6445f5e406cba851ac062e52d7825e1f487a331a53ae1e271248d94e5bb98b035c3064fac94e1b2be7cd81c282404a3da374f2ffea3dcd8b022b3772dbc893e670a3d07733dca0bac5540447a0707ae33059eaad566e3c881e77654b39b77750338fe088e78d1b19fb6aa0d8baffcf5642e4973076a1e3c52311470c3aa6210cd111f6cbe4ee5c2cac4d33f92f822894a48a07c66efb1dffe5b1644b8bf81924bde7d99b5c59b2f636122ae7da6914a27df14221f2950d335322a11d415726ba1d80e39a79e6af64a4e5360faf53fa6f69d418c117c2a6cfb15ad75f4615845d64e3ca16c43053958fa85b769f579a72c14f769009c1e6ba8faaa77283f30c0ddfb5c6111c5812b3137045faf334fa8686a030c6da16730fef0e23753e912f2254994648da8af50d0134f47c290b1fe808201f0b8df0aab966beb23416a2ec8cf56b20a7cd46ff39b826fe0c62e70c80f6dcd977c4cabca70700483b613d3dab356f1189ae056993f28a42c8c8d88869d19628ce91b5addd2b67be8ce00190bc7d0db255357f4f81d6447a35d92b86be67b6b5638db31e590b192f3990eb1974a725766947b95055cfe898c9b132353e9a8b08c384669decdd2618aeacbdba99b2d000b4313ef20a40fe8fe572c09855005cad4fe8989b38022f77de382ba67aa7d4cf024b1f891f1b3a83ba3670f347d669893ac6a426a735f0e41f2e0b4ba504214ca018cb35fcde2bfe3c2371668f12fadedffc083b7c16a1721831e818b0289583386ef9fa4dafc8f20cb042184ad298e804fe21c7904576691eee466e6c033c7adc5df028f9163c7614095250e66e0c3a0114a40a92d513f37fc03700493ba04cee757549b1424ee6eba1e0b4ce6f5bbceac4b27cbda73af10a751d3435a4cd09651c64cac109727ed3601ffad09b775cab537e0c65bac2b458517fb38e32630ed16e11300a8ae14184e7050da64b9bd88a56c7645e10c5d866aa530540ef584728fb12358d820946fbc24bfa7c5de9efa8ad0b59ac7e87bdebfb69575c5f9ea4b9ad0200ca1768b890b317dee6bccdb75dd57af3c3e3daed0dac54b7b63535a5e77585dc392854fda851c1b6f9c556e010516f6fd5ebf23ae077ba0db0e96b737649e2d9cf09ff33d5be72d963ec8f0986be37eb3e4ffb60e4f89956157701bf39088b53f4a9ffb3aad925d813a79221cc08368e55519a0390e73fb1223d00a169f94423b07cef15f17fe0e9e3a9f5b61372bc759e417200a2f13b08df07a810efa9c78f69a7f3519c5935c12ca3d1bb0f624a2415be3ce77f5137f726a344152307d964ae44b6c83e01d730dd3ad4be115fafaf497ca59cdd6cda7c35b4e0a3ac6bdcb50981cabdfc12ba0cee11320b922067854ace7a60a5aaa6b450612a2f15b8dcbe23e8b1081e5a40ebe0b5daa915a5453f1f06141f7d8e79281919fe5a0eb6ce87224692e4a6526ae2e720ad7d77dc6cf0074d4217c469ab08ecd144d0bd9d8b993fb9b57549de2b74043bfe6ae2f50ed76b7b44360247f03efe8c6e04039074ccdf9239bc9f8071c0f5e16af42639968d1fa1de5d087dac2561d683dcda77679a1f69ea1130dd19c887982b079f5cf68b9be899573196a5b460dd48a92b0a213c70a70b9e9c62445273a68b8c90ad0aed1a1019691afbd3b0103dcd6eacc27c3b87d6cd6b79f4d9cf467fa02360706d4f4f78d61703c29e07d151f73ac3270e5bd55f669736be4a87d4cb0daaf1f0e945594a562e5e81e8dddf6a343c012bc0b855cd169d422cb812f2c211372a3cbd70eeb01f7ca773217ae22158e11a49d344cac295d1e70c4db0976ca7bc067311bff2d88c86a05d2ca21d7db838f7713e0493ebbc7d4176513c4ed702c022a91e6575db35516a620b686433b9c87e0cf8a0db25b51a82df1dc7f168f422a64229ab5a7f600242e4432706e0df7aba281246c57830e957b9da14d19396d0686d84a633f1ba1ef902ccd4ab7c9925a880c447c2a13fe69e41baa5d222f020d15e3bb43a75be399a4869d709f207360295e145a55a9696741565f806f543da3adee1dcbd3b6ab9ced45e469fa289ba4aab0a5308405d06789f7d7f01b7b15040a3ff9e5542244d668ea06531923dc654e95f1db21046130a5ef72054698e19a7b7722a3c08221c58513db781ebc924215e03019ce70146053b7b06a15abce6cf8024061ca9986dbe5b72183372a75b345c5682b948d001f64f930bee43a39da15aea208c5e3de8cd660e793e2a855f58fec08b91eba009d4a9d1f28377beec859568a9098647af9b90983b8983f54c8f32b5398e5607c19f707b404c5c59b4f5b655521113913297edde00ff51965fdbdf27143053a4b4e9af138450857cafac2ea88e9160b5a082a20474e1e32ee933b0e20b9d5eec737d95a8040bd517a73d643dd6c8dd31631531b026d42c6ed1a81686572d22b56c2f427dee44acf676d1fa02bfb73926740e31cf3761e1fc6d3023988ac7d917ff99ad840decb558fa83f0d31516d5cb09dbd467ba9810e086677804e284b3e4c54cb6f555f4b54344d0f826f67fa7155511604880933a2bef76a07e5dd43a9abfd4b71317d57dc4a4db56982282fa6ce63b2a09e6903819e057d46987fc4b9675ef6a902491632ef2bd95157460641e79debd291c9946e1b31e537c3717a534ead3a4300775071b947614d6e719dbbb3a2a33fc2924229543c891af269a07233f68e817ab578d6433a0aa5e5f039624a943155fc6452c81b8d33a2f00fe253dc4e8bb9deb9af340ac6500d630603285afec5c8a7c63f70f15c5d019b80bd60223b93034d4be62e655941b50a58b7528336d1bf5d140e494c4d6459c02a9aa19e0a62cd626664881e4398ff4cc0312ed4a0a605c65df94d146c2a6f7245b994555c52a169136a209f79a0d878b170893158c6652cd0536bb7482de73e9e209a5fd3e0c030359df2b56ab8b5af337f6628f7a3ff9f46e6db4d0a3023127cbb142029b3b9c138d84ba6d2bda1de2dba19486468e87a30fce747c3a5485ed403cf19e70ae656feb93a86150056ff26b56a2a978ec3025877bdfa03ea01f166c8e7277c3430215230260a0cc5fc4deedaf0e68a61f811ad479e5390e94fa69e390567269b0c0c395307aa1f1481e076209c8a94a6d1fd6a8b61749fcbd78cf67333e530034172188683d0bff31de670677cf02130467970e22d6902a586ce2be3312f4e32958eefad0ca373e6732e54c29db9964b49d1807cd6d75bd9d12b05b1ea97b9d5ddde7ee7629d5324f31001dc5316cf34fa894cf6f000352cdfb946eef6c2659f21d01365d5c2537e6055dc6aea4502d37b2c1be6d029a5a0275aab2bb89dd56aff11efb244d555e6ff06fe4215500bfa1437abdfa0fac3514c1a6ed2c99ceadeb4667d028e7980b28099bc0adaa2e47f8136055e75390c223935b92f6dd45b47795bc41ec4a47064ffdfbca4e095813097ff3ceb6ce2ca99bb30c6f8628dd0a208887706461fb92f5b2e956e4d6e38d3462f7534d8a04e0e9fc309ea23e4519932696072e88f047e2e03d2a23be2ea126c30a267fc6cc12ededbbc2afee04365a98286228ef78eebb84dddbf3a5a675501c18f6e9ef9942918508be42b440270d3e4d6abb2b3944bc23d0fab1dfdfd434b1207cc853c52a775123c12e6324ffb22797843a2b3a3f3600e4ba87e28828ca79dcae5f4abef1d37160164a56996bbc943b232c54b9f4b91a8d1d15d14d322363b09f2d37e8afd551f60dd651d9ddfbb43bd8d6a65fc632a48ba63c2fe503777550adb180e0956273b3a74be5a50d15a8aa5f852f1001983e9320f1e0d25512d84b0d18dd0e5465635784e04534a013435c04420671595a38fc0fb67d633b9cec2d38b92d98f75e009e8ef5b66a66f0413b7a9dac7960eb18ba9037ec73c4512739a1aa0e25d7c73023ad67fa96e2ad4b2dbf3c5cc3fa51868342c22a44929ad080c0b983ea6bd2de3850e5835dd0221032d23ab0b8a1674e4d5c99a6c7cf249c2408f9d5b9cf215a6d980d76c1397266347e1c538472a8fd7a644990cebc9aba133bd6e962f7924043c00bc25e624916e7c0f70e0e6f19a296bb5870a7bbb83d69683c41e621d52ec6771fbfa4fa09018841491a84d7dd498b80a9b1155cec26f2ebe8c16d2c70a27fe3e561a2f72e6c207dff1466db0d06c45bb265848807e8d5c93284a698f9d553dba8ac2c31792191b0b438e766a6fe65c355c5972e0e5765df2430eb2cfd4160c5be3f9b3728da21073e73f5f7e106baa59534059ff8c0a233862262c76fa157a926fe78927414d1c28cb831bb90e69792fa1e73ab5be16868db73b1bedd757aacf7a85b30bd21d407d931ddac9950fbfbaf14fa12afd8de82d08c9630852170181c2387d1374c0f4f4020217b733c3a40ef7d51ddc9eaa26a5303792c43343098a356e45111375225c1c63e8db1a5b5c6c82f17b59e4b243dbb48679c21a7a3a3a71b76091c330dca3b6060c9cd45288f980cd8c4d4683e24ea9c404b033327ec9049ea06b8fefec23dce3a3dabc21f083d07a66b4f06cc6dc1a319103d31b23358d80fed10a029a4e5b067e36350aef7190638afd1a335cf198e5b6ba07f6c112f2d3186bb6254ff8fdda4dc081d82f774c84bd11e0ad3ae40b5cc4e537a6067f9fbabcd9b80359e021ceed08c4407eb78766441336eb7bfa2bed069d301ff64438eea07e95a45d272091e1081f00ec5f03da6fd0c54fbba3db753d0c1f7066b09f29f049b893f50c781bd18de096f05b492da580d5a465f70728181bc7d07923c3cf5a97a751e964128665346a44650f412c72fbad4d3001a7086d9f41a126515b587b6faac59b1961b48ca6f7760aab5b1ca23df0617e3153d29b7e6a301a762760a94e367958bd511038bacb5e603b2bb0685b0caca8d28bc7622422ed5174815c92cfd4e2a9d5b37683091c5711106bad1c7dfd01977956ab2f94929bf8a82cf76e8c8528e96144ec7bd7a13a6ba18065210ef63a7c8541fb75d0d8b2b08958934ed5eb36ca44498d42214434248b09f6427635df4b5cea243ad9fb5bca7f3bab0bc001cbbaac1db097e1e56e167c8ef1a94e21a85243d65f03db62b972f79788580a0797bb01e4fddce77f52d1e46d25863f25db5cd2d756e5c2035ade85ae1d68266e48e98b35a3fb69ed2b24daa77841301806668e5a7bb7986b45696ba5b6bcfcf1312426de465ed40cae52691688e4c84a45565823dd4f2063823e81c44883091f76f63837144851042c9b4acdd7609e30cac0ca904f4786f6984e0d74e2a4a42534a0c0b923db376db896d7eeb0150dc2f966d67eb59443c0a4110b6d5db0d2a42c525318ab481746697c2b50f7acdfab900cc096fb8fc06844b4e3148bb21e2b3c6a5e4a8d1366decd5073ff51b8c1ad0980f974d578c7ee056c601c031af3c256387083204da0a27a60c67d246938cd2c97f02992bcd29a223c50c711b16acd407ed2519244b6af59b1656cf9bc579516f1da152ff62a9c277277bbb313d89dc7021ef84757639c087feb586ee5ac48f00699b2b8fab7a826d7c28cb8d9569bc335c4ab63dd59999a9c506792a17d5342f87c32b609ba93e172311a5db0336e66bb279d6e3ecf8c046ff4b39d974acb0024bd86f04f126938c86f9dbe930653388d380d0a734584d8641bcc42b113b7702b06b98d2e0efbf54b6c7dbd9be27938e8831c5d772bf03cf579c3323acb4d87efad807224b9c41ce1373459ef61d1e7af805ff712371382b3eaf684ebf7040f12e553b85bd75991e32fd847029bac3c49aec54aca8fe9bc5669025f16a3265f927be3c6a443c047dc43dfcd4c037ffe4e31e116bc8d3f283a0519ac7fd1f17aeccd713bd03ce734abeaf61e80397c3eea2f23d46b79be974aaf7fa40035ff1e6b284dc9262492a7c57ffdf7cd53e6799d28a9de1771056b1f6cd14f2820aea771915112a5305f91bff634704b412b1b4f69aaf8f0d8b4a2c2cd8c994d086f309b7a3c8593c20684fc1fbd26a5f2a6e2a6217835924a2816d12e6567eaee9f54ce5daddd43845c7ce965f859e2c9c3062e06a3227e9ca88def7d44fb6b63e9f707b8fbb70c649c570bb0b1313979f69eda50267b516aa4c522957b59a56121817f35060c85cbefdeedd5688b629e2bdaab8f8dccf51c4107c48276cd5a576ef08dcd690da0c6ea9fe67184d8c7f88dcd374bf478ee716fbc383665cc7350df8a31c81f25496a878abe88a512f0f1d80e83a740b111a60899cf72640336f0647971df0070275ca45cb4c821285fd032930039e3c3c7df6249549e7105133c4643fc56d2cf711e4c9a5e5d4f67da85393f0d3f9d0682309c7c7582c927827aec368bfbc0b97d060fe8dac476245dc22264926529fa75762e794554dbcd275ebbfdf8541de263016d3fa9ad7e79063c06636633be78b940b55f464c5b69e6358782b1ed46e9a5b4ca5bbb8419bdc8b32ffb6faf028658bece37c41bc1c8925509de2adac56c847f593a45e8cd051cea75ccb904aef665e9a7fce3aae1d92fc361b53ad20afa644f7e5854811edfe6c7d582472e9d66f2e78b36c727848bca5ca2b88d9a9c27a12dda416de428d40b1bd37b2d3b5c4b7c9090da4e8ed57df9422c6e3cbd9af778602aa2e585a2b5328a22181601ea5445f6e6d5bd9e83e1afced01d71647684d1a0ba007b4ba83776a3a4b169fe05b01ceea96e92007a8d06ea214038f17ba6fe7c3c60691d51d9735173c803611379000f73fbbe1efc9e3ee79ed53ac43c38ac42ab994b31d91976e9b063ec12f185d7e46e6b4bb7c057e9100f631b28286a0a5d2254a70aa22cc670910dfeb058aedc54122bfbe8075b31f63066ac0edc17ebbb52c742e5e2d5fd7c0150e237f872c31ea49f283ceaf953b814ec6cb580daa36406869663119368d8c6845bdc15f0ef906d580310043786de3d426c2e855fe0a4b50670f0958cb119b62a9489d6eacf609cd3b81c442fe2c75cfb9ecaff76417734da9bc506e7b70bc1342bf7494285ae7913922bc9c7e353fd334a9613f2cddda193409b4dd935ca557f0192ffc563d10b3cfef40a1ea977b6ed7accc28fd3910b1e99c208ba2ca22d3fe8d533c3ea1020b8b3d3b7b8b753bc0183efe23e1e39b0b5e434d068447175f98556ed958dc1b0c60a040a44cd2d79ef49a505601fb0a7efc040f83687afd149c47e9bcf662f88ab5f22508e3d6cd5e15a2733b4793e59928bf414174631bc6f606a15f6aa35c6b527cce2a419d0e0c62a1ba433cc85bb22f4a70088257d16d0075dedebe9bdfa06e50b5eaaea2a95f6ee4fe5ffce65f88322a4714ab5bdba2f0708f0aa79fd2dfc2b0e2d23e364e90a0943d0ac25ece24fb19bb88bbaa7b8a498c175d26d216b61f14d979e85ff310107962633f1f3b68ddf42841173d764aa234ed7938ec14b9cb3946178195eb80dc6c7020afcfc8929e5b9815bfbcb8e42a203b4f30c40f744fb2378ee9d8ff245c30d7b7735cef7133ac9536c30c5b8287b593ffe6d4c6d79a4ddc4a7487172349cc650a4349201963b0d90dcfa21f3c299bad82e8bf83fad67a2a19e5fbd9696786c3977ccd0675775868905009019b9904defdee44ccec38c485ae4da527daab51443efa5440b9c9ce689a9ce2c93b2978c851ebba42db10ddf26bafb969e191e989744078c0398334b523e057355cbd8b559af45800c6666db6c3fa4a0b38d3420c16dd15b81b400656256b1459b08b2f986098859cc6328795c358a246d1f3dae4868ba65850b3f4c2bb53ae60f938ad6159b0feba7430462147f950d5142a7f4a1d6a5cf7f8a71490507d2469d63fd6cc168b13c677631682ecec87a1c071d9ce17592769d2df2cb6be597e54e2e92fde2f39db951db58898db067b85c469e8c55b8b362037fdeee7050407faf576c6003729a158aa6c3d13f40846cd443e1a90a8422c113f219b00ca834104c430af677a9dbbc96a1ac6c33822b433c0448f185d3b5a3f56b202ec962026bc34a6a408e732e2e4e35f2afcd2772de5da859e78dde215cf32fd380b094d648365ffde55b042e7335a48fecbf67bf64a115070cc0ed0dfc69b5f0258f0d57f35edd884267ddf27e0b7c70165ae781c4d12bcd4e150ae06c47ffc0d05aea559c65c9197206d3c9573189a0916763a93f500a8ef50bbab24332c879296bce392448e3fb630a66b8af32ded26bd9fa801315bc8cdae7e8085bfb12afe2bb7dda9185a570ce1914a7b0aeb0ad21669f777bcb0fdfc1c02997a21d6632420d3943eeb97988a17b7e0ec074dbc19f052d5c5c70e04c87d005f279b2031c3877ecc95d4b6808eb4b3eb2dbdf20efc56c8d710622cff76e7d9016b11c2f6354e1287fc27891b29489782b9c6e596d81dece8e14de0d1f1f1109109728ea50fcd7ca5d92bd0c3b0b4fa972d63db95d82cb7e860202090fa448eb93ab50b4a0020a76e4630a6e3dbe8faa1469513c692d63d07b60532e18051f4c92d9b2c19a813426d22a90b6dbacad5dc05b0d665a884052a274c6cbdd1aeee89df32a06002b71604ac1dc533031973d9296b5d6f4be65288856dfda0f4ad15da82e1741925e0636334943d8ae4fc792bd1b618b8778ee7c27c2ea22bf65d0ffa19efd7d6e665370da13c0f44d899365c96f586b9317c953845e070183e42d9a9c794fad04909dd793fe5037c0d41a4c373bf009d1a416a7992172387f581f1414230ca9c915d869f4f80abc5021aeacc51e67ccd0b1beb4109a822e2232c20ace5f3874c75437459c81d2f867e42d763abc4ac42726bee11f8dec61155c990d5280da9bd476c4c7b3a485f79f79c1d54df54737cf3baa55e907f9b4d6b1fd651bf93936e43c5029e5a81ccd9217a13197f6e6ebe0bb4822b0b71cb108e41f3973c4f4879706591a8ad93e8231b46f5ad2643b287d200f0637b6efffcefbe5732fc503347e9d36fdc9473ed0917501b3e3d2e9e1dbde8f48f83263cf647d029ad4b376c925f1ae61216f2deb172f5db1817b358aeea848d8bbba07d26f997c93d7c6e1dbc0020e8e7bae3c1d4edee98cc17491e934972fc1b230005b4329723242f009147f5b49eec1a738570ae45dc3932c96b264dd46283e76977c6b97b187d2c7b59e746ce2b953856cdd10511750be903850457ee1facf63d8d1da8fac0a9ecaeb6492197cab967f1c46db9bacc1b2524768b7a8653d5a7b9a946146efb7f35ca1155e9dbfa9bb9693de771c983f20ed77c4f8589599c10b5264d6d5c14e5270b23430538f6843c184d3e6cf355fe9bcdd769761b983d9dd81109efe9ecc950d67f410ed3278d8b853949f7a4c37442fae9fad8f2488941ff3c632688e7a74433e6869e1404b2fec5592e4c12be208e951c68eb3edb1d85cbc12a37f991167e0b5eb3b66b413e0eb85daa80c2c9b454c3e70537a4c1844287a3645a8d852a1f53c6e8a3a4301f64f2b0cac09c75892f8d1cc241a6a1c8e1b57688e6cabf5ef053d8fdab7ae7d4adf79b0147a9a53da77a0923265e8f027f3729a52e8a84d036250aa83a7ac0b2e0c62bb2df5e22904496c02d1d06edce8aacd2b17ec85fe2c9751dd710b2353b3c944e533fdf0ef2ab4c6475c348acc9294f5623cd7802154e1bc36305c6e40518e61f466613c23083367044e84ee4f5681ddd58fc7dea737e3c551fbdf7f3054006bb69ef4901e69475aa5624a16fbd93f432e42de025e2fc978eb05fd2b0dff80a70dbad7ff95769969f5136d7aaeeb3aa7f80bef67e5bd360f0dae39579ea395d415df8e82f250169c0982e5d63097ed7f28f3cd14b70ca8c8a7a45c54d70c44e7be1344505c83cb65e94c677de992ec9f93d32029ee5493dbaec5d68afc57e0e2578ded71223e2617fd5c4bd62a899ad102f5b4d6bbd31420e3859a378e3d914b2e1118ee2502c5bd94ee15eea32874c981010a34274be291c05160e18accc6df485d7efb917a34884cbedd0ead59cd29f5a6204b6f1a521dad87eb10eb9a110a88b4b0b27f716f37856e0eae398a38556a9b11159fee018a984e74752bc3e1644569636187bbe318eadd768064b4241d512827e3e7c792c8e0010bf6dfa773695182662ea4ec7a027b06efcb44b3e3b190d113255176fefd72916adbfd47e88bf58363ef4b79ee4d88375b381bb90103fed4b4e76e0fa40848b395d71c2e0bcbd98afeb3db4c69cbcc91c99998c446ab399599417f24fc8764bb8a5bf203d5b9fde4c1738cdec5806ef764d827277eb4fd5ec64616a8c27068f9fdd6d026c3d554b8c9788f033ae091eca97eef4fa8fa0034cbbbccc9204f7900db611cd4b0246e5d248dd54f7744fac8866dbb82fbd695ce3373c6f21e7ab5d5b1f84557e168bd5189bb6871013e8f334c67b3f1beda2870e18471c9fb6089038982dda3a8e4651a6f5d615f0d55c1eb54a05b833e82058cf42a24da4983248e957bdfc6c707af88517f6edb538338b9a3116e5ee7d9905ff42a0befb6991032c30da5e68781033cce9387a47068f4562f55dffa74ebf81020c7b8c12fa0d5d8e897a42eefb372e199a636cd2da62b429ca00a4f921ebeaf30af8f5f5fcbf2c1a4773027f387a3c75dad4b1f57f0cf16bf42ef6f57be1fd0e6e3b9bb51119021461bfbe2e6e96706ac6c1c57a0885d0a0a68c43719b3c90bf03ff2c2cdbfbe27b94d7a534a5b2d16151f7930d26ebe3c08522d572f7055d0cba84245da078102a4b321d7f0b32a07b62d868b12a6578c99849dc316764e2fc7eb76f5e550d06fd1d807d7d8a1a0285ffa7a510cc3fbee17a1d55e546db8f92af3c500237206b7c3d46e2bc439b070a967964d081ef21926e1870a050e5da4c30849fb0bff5a525a56a19c76b3fb0fa5f86f0958d10e29bb9c53d04cd39533e78ad0749be3cbe63d3a176634d0993808b27af5197cabe9748babfb83f5ca1a32f0e1b463576d70ebc5da3496c7e0b463c7a988762229af7871ede0a0cbb34e321b2a74a8441541d7d248b9b85d4c1f22825d60b6396deac246f2aae80d9826f24980891962ec5e87fbb7a5d6ca4544e3941adc5e6883bd106e972e9bb2d21406a20dbeaef3991919705f296b3138e3a2db780cae6c9a17a7cc2b9153efd57a3260cf693b456a0da64d0a8813b4e613201bb067bc889894051213e81b86ce3143953c7c8c2802ddacd6332371a34d4162e6680e57fd837a6d30e84b529863efb2a2bd79e5d4fb1ec11eed66f61fe509f2ea7f83dbe069a948c1d005699193944aa976e5d461240d4e60be6f39a9b4c5237611ab3450ea2d8ece531e79071e5b7b8e61632916382ebac4bce1c75fd6b5bb332b2844c3779ff1e8c4637a520c49764387082d45145c4da75ff45af9ccae3dcc1b4a1c2015e8bb782c62b8f740172a843069a379675a07fd85354b4986b6260e327a730393dec094b19d6fd8bd5e345c937d66e32926565535920aa08a175ec43194367a119bb3b1314f5027e37fc6689d67497f0fa613711262fdc0ab1e53d01c4211d893aa33c1b677b33604a8c123d8894a2559a10cf4d518810ec9ce3c9746354d7b900e29b1f808a350ac27f06530c9ff6d629c7f66d36a2789c6264198da6a9e0dfbe96a97b5ea715e2bf2a2183e59499cb2c801ee6322147493c45405e87bee1c78a967f1795547d2f2adf1867d04fbc64ee213185e591a52467508c4a46939698040b45eccc6deff7f60d157c674e01088ea0b06cadf080aa26001afa4cdcc194ce2180c24bf4a8281f924a78cbc9a9e1ddf41c71b6737378fbd06d296c74111d005c6210405146ba33b7667793e3bcc3e4b15eeb9366075c3063838a8a3108312ade2dd9303b049959d3b54d5bdb2b368548e6194ff67d971e175778bb98126c50542efcc77035c7c641b6750248459043e60aec38bfb5bd2212e198089c2cf1cb5474e79eaa0191f6e7fad33cf5f37a08d9813de75b9fb8fcd2215f58ed2177451a8456e32f48a231d2718a49f896f313ecdfcf5cb511f2aa4303f2a85b0bc4559f61d91a4781cff060ba7c968582e6366f9f2a471118a06eb16865614b2f583be7c5a2041500c37c9fbe42baeee3b7558c65cddf2fc7680d80861e48b3336b6ccf2a8548b4cae5496c91e7e0833ae2037782c18f2a5ab54409a0126af636ecf1607802d547b22988040a45eaa905500ae58c70f54057a4b4dab1265b7c5a9acee11887ca54976b7f950297354cfaacb4d31436b4007a82db56ac3ace212a44bd649f353e45dab2a98bbe575f75254750a7105f16b0c0a854b8f2977eb23bb95af56434db25853d6a554f6cfd4e5b4ba7103d60e8ba9cfd3a8ab62cd462f4f641cc279581839c37844dd7a179de422b17e00e06b1bbf6634ed939347210c16d351afdc65a3d722a7187745d33706b1e4d9a18de03c5e0b095e76e97cf8ed9a3d1c8f8f5a5b283b09a970261504ab6f9fb15c9e907f92bae58abfcf7afa10888feea8f890a831d56111430d8726a90df9ebf130597a54f8f129c200ec19017aa9eb0d25fc12350f03ca2f744e7a16779be22738ff76527cd801c07e89e0cc9cf009805a51f99d595a315affd674fedadd2531213f263a0e391e06666c298d615a201676b0d1b7207c32b0fe403bbabdbd16e2de97554a3281c3eccc2cf7303c380ddf1aa9c05bc20436f66e9e5f21e12b72a744d85fd81021e1e5aaee9fb9b054126b3722c8dcd9fe05083dee7c573c866b0742f53fb3e1706d504a2eb0604926cddeb5169f4518ca8a7b6e4a944f571549538ef9cf3b6ff1b1462a44c528a86e9212dd39926ae7e8cc9c3a13cefc3c5e50b8784facbaaa07cf67904961b788f9edd903b4a073fac9a36f453eda8625951aafdcf6cf0406369bcf16b00f71625637319d33185ee6e6d690f789bf1550dda98f9a8b087778bf309d3d4e2cc95908ba00b6b61f6c3816a263c8bb477adc85995fb2ebe8927d01839fe48260008f41967efdd24b8ab2bb20c8aaf388d9a338c6aca9e12c9fde9c2e72ec1021e4abc609c38c6bcb4ce0e0a3753a9e2b95389ad28c1316eb9ce59bb7712873d51391ab8c1f2655edd922064ea4afccae77ef8b3a2673ae512c4311d77ac138a1b71be8f5ecd437657ced253822ea13d53495d4295fc33f6bd41677fa38833e2bb9c51fba23fda7c8e615fcd1f1b999782915817e9b0391d79935cf276c7809f07f267bf56c47c91fdff50229883a91f34e09311a47909f73acd069c42917d8c74cac2d111b22ff9b6fdd980c29fb45ee83ee69a5f8d974dd872b49e4fceaa8e1c3bbf083a258435bff7d057ac30807414e62ce94cab37e969f89b22cfa7e7e3fd34289879293e4a963a54b9abc5ba770c44f1f6a2d09035c6b510772a4e87464005e8ac1f628b15f510f2debd1b7123da5b914bb558d8b7de0165b082dd3a8350931462d115fa11bedfbb995bf7105dd6e49d378764f5854eed65cb6069b61223532b56d0fd9a1adc2551b00aa1dce9b779e42128090004a5cbe5d2d3fc9b6b0f21a32d1f77bcd6a5f6deca265e3ec2780666d91879fa11fe5e2122843b49ab42f9dd0f066727b69801abacf996bdb47bc8bbac198d0b6bae8c09fdab92e615d68a9b1465dbfc40e3567d995c7bae82385cd884c1aec6fc16dabb231bebdb237719fab954fa0d87b5b834531af990a1e0616f8171a14ac8b82230710292f64312de8124a1d7c7457b8ef32c4de4ea1e5cc96ae28a0108a7f405364485063f95d739e115686f0bb24954fe2cae48e3c68219f9ee5a2ffb060b8d6b756cfe91806d73ab418b0ff4cfcee641d384e4ad253c8debe275e307e91c48b72f64cc27e5bc4a242e9407f5955974ebf6de74a51a3455835d512ad3913de1f8c7cdbf6d52f4f324a3fe98e258b633417926cf906478d6af5bb4e8ac05ada6d49e30e0bd91e90bccda8a36494237758e37f1cbc43b95578e51ed739fa7dbd760e0a054a84a10bc3da2d6ec019535a16a6845532029b14bedcbfb5b244f75f3c7ad5e125d20fc21a886023c7bafa8214417c34ed9df123a58edc2bdd332bb66a8a2791acfa2e1ac555ec1a90bd3ce626e96c73885474a6162b2517183dd4b6900f55ce1ab5a7621b1f709eb21256b8a5d82563ffcc7f1b69afacbdb12173b5e524aa9cd6ab9b6cf8af1d1a8c6478c0921e84c24dbcca122a016331c7b2bc35fb7b87b494f3bad3aaf995f944589c50540cbdeb63790ae7759a8a638eb6a074b8469977f08d1d52671ebbe47c7ada624bad309acb95d5da7ccc932ef217d4dcb7230c6edeb8b9546f2c39db0fa72990bbeca26dfb31aeda818d1c75a9d1b6fbd2b9149afb117d2647a7d39ec59ff85e7e46c83ded5467a0df3edd46be8dd7f88a7d31c07c61f41565a50cc02298b04a12a83c7eb2c6d8459557e3542e4f0c4cf11bffed2cbca75d5d6cbb9cb4e7682aba633fffb77bd0aa8a05002e3322816bf8601af693636dc7074834ac9cf97f07beb8148cb933ec4d3d537bdeb8c7faa80c0c46f44b95c82fa0d87d6013169dc008dec9f7e145234b233ec5a76cebb40ca76acf6524c7f53279c05d337c19b2c11a455e261031bf0db7c1e25a45b8bd5246fbf21ae5cc2a81fa187eff7fdd016d3261aba87770b23ebd34d609aeabb0a606bc05086ee3a367cff2ae043aefa7856f1974f392c05e953a307609b27ae5c57bbce0b98bd3df0f0106d16b0dba1db02b7c851c5810fa4f6c2f6db5b312bfbea59ec4e02b2807232563ed3cf2862dbdfccf317022fb7ab2b0ab7bdc532f2af18e0881402f8dc3eede0d578f7caf2587cd255c97cbdb0e473c621ff72b09aa91c4e88cd1e626159c87c8e62d13167065bdcdac531f63c5102a552cf9e53c3e75512cf9e671e88ec6a46192ae092303d4195c45933d4d9d290d49ebd5493b9e44bea98de5d1fe69aea1d3bf93c231a63616479c69cda2ef6a0bef461682ed58a21109465017a7b06ecf4beef2e2ca2fc55cc7ca6e9b22302bd2146775d7a54fb0632477ac942aaf74d2363065fe11978b2003a2dadb1a7d70bc1327732d52ae5f3f1e778f2bfd11c2da2837671f67cd204095245faf16d72038b76ff880cda375cf382b381eadcdcb96bc3561cc520e1d7aac8cc6eed5b798bd3a960628e116644b2138c56070a2b58326ec82d425e668239827fe65149d193291e4c8961d1cbbfc320dd3ea774737f9d0a626d3c486f1cbfa71d8cd897d0ec7b34024e2ad5d7e4344edab22c3d0109138a150ea79ce532df154fcf4456ce111c908f6a86277d4c79e7008dff8a05bf72050ae863d55e426b5519ff2914e5a803f8027e85a8a90b30941330ca762b45426cf27316037f9d191466882cf95cf40419c1a0c39dd881dc1fa21c112a10f6548cbc806f53a2c38fb57e6e7275834e51fff147fcb7e8818172e49e44cfe2bb239180f64367c2cdc395723c85f0eb1360e91428d0b7632998b668e2ee35d96779fa60f6612a53800eb533a3846f26f45cf76b302558dfdcfedb9acb1a135067b7eaaa9b17da68ebb2f5a4e83464c8ff04ede005aa55ddd98164ccfa9bb064f277aab73d61c8b67722666607d078c642bd8c010e623f0edafba7a8a7ff88d3330c727739ce06f965a6c9c7cd24202aa8f466f88c5d719606eacbaec2caa2df05f4aa6ec2624af79c1bc8296f20f47fa48903b20cdcd3d48506819feec9c3f6cfd2ecf0646bf54a39ff2809f381a1194bd47d406a24a41a81bef2f749e175c2778e9edc7ecdc5774ed3616debe8d54afe306c2bb16ba8fee4524d11b8baa20764a595280a25eea341f1757a20ef464be41af9b6c3117981e6ef226d518d4b6674d86672b0b29c0dbfb995e7aa628f9a8f707081c389d66ca5a245e3ac33e506cf1adab1ac736d0f90b101d9e827aff009f1e6569a9abdcbba409414ef7644f91baf24c3504aaf93bc5ba384ec9869bef0449d3ba2056319aaa6aefc3a427eeb6defc0b3f54d25457c2a92d914c00c476c5d797e553ebd3d847ebb15131c2b67588fc667cf711f735734d488ff53b92f915a05a7b730e7f9f9ca37a00d6923b0a8fbf8ccda307895ea6d351943340943a68a7cbcf74b85bbf24ef9c850a452add1553cce23b5a7028151f5cc2be28158ab3efd78f80fa34eea38a6f27fa43ee9a28d79bbf27b99e26b40373220eef9deb6109a11d00c3f54aae3bb0ba62f55a4f95ed55b19b5ad3a3db86abcc43196d288bc5517a64ebf4fd7e15b6f7fc1062177c6dba2a0c154cb87535664d0b422012ea204d82b78c12e2a6de5a4a3ab27c77ab24b4c66f062116d6ff238a558f16184c4b956ab81286d61fdf8ca65b4d39bfb4602bc2650ee508522f638632a844b4cfb6775eab1739e6466737af2bdae07410d5ba41d0ae3b4bb374e63de497d8d73e7edd1544736fa65230f2d5e5a552cfb015f58b24453893ef3245b41b13326ddff9ee6b4e55e0b81f312fd132269337e680d0005d9f88112d6e523918004a92bc233cd73c478056e20b932ec5115fce9cf76cf9fb7615456db07f150ff43330ee21b24bae5a9a7e793bbcac9b969eef64ad5190663aa6eecdcd4ce4aa08be2aa9eb7c4e0a1c3fc29700a2f98c1aafd01014923b14e2e4dbe9ff6533400bb69a41b6d34ff604d4c7bdb67e28ae7944e0624652e42b8c2657397f2ee9afeca786ca4d6ec0f877422915ddbfc0479dfa3c54152d9198533a1b1f1ee24e30699af88956ace222047e5178ce86976cacce408c9a99b62d3e1f570638b2e6ab60222aeca329c435583a01d7cc7015295a1eb900fd6923e97a70bfce8241a20ebd182d374218ae28d4fadecc494b357ce69cbab9c391cb48195c7da5e3020e376c6e4b1aef6dcc426b5ac8aaaa2f90e301456fd16536e74b13220ee867ec3c1c0b865e31ef49eb605be8ae54d7a4336840f2e9dccb38b4e55ecd61f5e23d0805cf31513dad738d2e896918168d2dbd7d9490fc11766cfb9222fe50cfe5b8de2cb2f89e8f86e3ff1f351bbafeacf8567978d99823f986bfc17257c657e46b6167dcded3ffe271546551ec46f564d94f33e0727c0eced66c78e184b841ea2e878e436a6296041b40da8448de6ae869bb56c3ca73dd45a3c753d7963fd4aeca2a339d4905ff2c966ff5dcff2f0abf5ddca030d4205d8c01975be05cbcf8686ed219d311396f30d9716c6a3eefa26d10c05b748f37bb73b1afb6f38eb43f70179e6066cc0ce0af2ac77f0540dcd0d414b1bcc6487d43766ee61a275cc2fa1a49f02771445fcfe694304afed79e01b6124780278dcb2b8756a70d3bcbe3680874bc4da79928e2ea052c0ea5987c1393adec8732fb98c884bc5e2c1a750956d8b0f0cc8c7cf33486ed6d26a4883e8f12a0f7c6a2a80035c0f0d0ff5c4eca9f2f76b170bd918fca418d78ba82660307e6f48db010a8c7b20ef7047cfd667fcd36995253a95208daf33a45138b175831c1c53db1a8cd3bec95adc30e0f5eb74edc4a536280c6dcf0ed9c52343d72b1f4f097ccac28ce1712de01d817347065c4be4ed1ab7ffbde410890cdabbca257da2678d7ba22ea7c105aac364fe63b239c5124ab1bc96abce260e5fefc0806a99978c1b5072f65698aa7318f7de65bf9ebd58da1d5a368845f7973af9574a4e49806ed4c6c8d8ce672c879b4afa1b6903efb3178645ee90a16bde76a0baa7aa1d02eb7a35752daa3c4b202ad26cfc1be7de15a7d6292ac02d891e327074f28e1cc441861ffee8e5d9f64913a9b2222ec4bed3e0a8b52cd5b2bd7275cfdfc6aead5dc1d533212abdeec924c379426358c47e55222dc9f81525fcdd2f8cc1ce341cae0f9a2f0779b422d964dd9869d7f361af594323820913e35f9fa2050b960a0781bdc3de573b1745e6882876187b04365bda8fb23c539c0e891c93965536a591df9a273e4bffb3a3835c66d2cf5596cbdef92fbf7fa9d4a9a133c0e9b4214c5b092ff7884fd0f6c6049df0e9d3ddd3c333740fb7ad1a161c9fbeb9372a63fe99f8f3da8e6df5643c59f0f4f0d5732c8dd8698c1f35ee4816aaac8f19bfc4be1a597429c92bcd64388789fa9a35d1c9ab80da2f266a453a56b60fe6efbd7a1a204b7b833c650051a6c8ef52309acd13cfa3645ff3ea349a8855db56759efa3142975986ecafa902ae390b870ad5c13b0e629309b0bc7e6d872e6891d8667bdc76c7fb73decadaa76ad2c675f915bad41995cbfdb4342288c4c7b45e128a5dbed64f64994673501a9de97f203ba4134a27fe243d3bfb8d611bf986599de836484e3efa43e74dbd099db517b974fa1f9c3549aa6d9e4f5f5a9a4703bbb1d0bf504b104668e49e4024d225ea350db4344e4f52006953004a922cfca410582b9ff364e0b31076a1a2f3b4e5f00eca55f16b32f0f35bd8956454a9f1e698f87e2e5ee2eea2b4796fef715f1f68f60f6a9e4b85e61c119d02177394f6a42e6468fb1a61f1ff9e26e7227a52af884345f38ccdbf83759bff833f4b728ac5dbc2789fa71e20780d1ca71f073cacecb3e20a268da0ba18b36b7b2c961a514d3b918219d56478d99047b161b28aa9befc7b29d735b12383e7223704964307074897b6b3a50026ea7b3bd8ab762d04dec801de80e6eddad506ad64f410d9b6d7219bc91b2ac28f28a72bb47addfdb8e64524dc309fde7fd90dd4c45be6e7286fd4350723a8a8f177f91a1f567dc6fa3b57b01736b3e0a94d7bf6fdbd3b812898aeada7e6247678868b24040229786dec5857f1dfa44ead5deba59bf9cb3dbc94e7b5dc1e5c040184eeba3838dd1f601a837418217563d3e268d3cee8b7b4c92b0136f2f9349b7ef8a4902e6dda61a8b70711dd787d3a60374fb313968dfd355cde558afd29364181a2adb4e80eba9497a4e1cb9e8560f338ffd85572f498d70468a904619fe51bbef925e6b22fa015500ef377193cac86e5809b97b12d8f2fbe88570cfac186e9bb319ceb3626214dc0eae3253432ac2137e24433f4a23540cfabfaa78c7d89e0793342e5fe6eeca2b3ab9c871982b9a3f69a94251a57a849dc2172d9c7938d384183bfb0affddf2696ae59c4c9abe21eb78c2542bf5cd1c7161bc0ec28031b746679704f15df61e93423088089ce0b8fb54016635cd594acf1124a32ca2ba2661c155f1101f1221553361147d8e9882fa0a2b42a3e2a33c7b2132eae938d07d1c9162eddccdd0e23717f156d2cfe4ef38155e6a7a695dfa9691ddeb0a86a21bef24042195326b1a14c1492f164368119d77d0d6b7bcf5aa5886f9731d29431a34d7a641a536ec26e89570599d72ea1a768ac2354966d37d1ae56c9969dbf9fba2df2b044a237fbec62730aca566847c030558cc170936455c2d9127d353dc23757dffba7744385de4e68d0501bc8593995ab17da0e2f0c8c0411a318d7c04183317ef668f09747b7e12c907faa54d5179e9a4e693a20b75ae9f3c48864575b268d6a3a01e0e89c14482a461766ed1b269e0a303e13e1c586db66f4e71ae7276970e7592e3dafaf326b823d14a7ddabe43e93c9cacfbd23ba53f7728a8e38808d79e823e090c741a65fd50dbadb20dbd5662eda02a73ccd9864495d2e4a0b28b69de55c2f26f590370e2ea2350031a0d36cf54335782801d12163aa5f006cfacd610b801cf095ea614e9495a021458b01dd4fd86a065e6800e3e61eb42ce49408f3301e3fafef830985e214c0d0f75b988c4237bbb83f666ae2cf78c4e0831e5b72606b2b49193608d5df4176487c0c24528a08db83e6b04f26b9ab5e0a0cd004d950278e6c1be1027a53b299cc80a0d0c311b3cc17ef0109fde3c7df3e095bdb7547753cb7ed05f09adab597a7fdf5ebbcea284af4dc230d82f588a6ce655161d0e90c01182acff73cc726b9d2d494dc34b0e5bce58981b35d8fc13bb2f26ff6882af20501d77cb836c1d71e81cb57f3850ff22ad513291e4a6ccd1fbd6f4c4164a43e05899fdb3bf043889ef3105bdb1d109a13ea74a8cbf989f1d5dd84ba43fe9af510b9f775687a0de68937288a87b23c2c8c141b5ffe301f0587d53bf5541e10b1158a69268e65d833beb2aa4d8da4abae837f09df65b46bb828263e4c7a443c4f99d7b0d3dafbdd261794bb1127ca002cbf857ed978c80f91d9dcf06b933af078dfbfacfa06a6eb3c1674a33752d8144f331a0f33cd197e3b4a20882820f721bd7d10653166bb6f625b79c95d892d0b902222d2cc73c0e0655fab1c65d46eb013f0ceb26210bf0fe7fc847478b6b33967f070c6f628a3ea148a267fda8058f55b38fee9e1ea2d81490d4c0533032224a63925e3f53226314e1355a6fc1de51b26150cb70440e62cb0fdc297e30f17397cf687f1b3b58f456b484bcb5e540b92b6f4a5f90505cfd26aaab5948946c8c50881aa66e1e6db2459d360145573a658d790841847c99a2905dda251a25f1efeb93bd3cc3b81e166367f3354b1b55f6a5b0112f06bf20c1b07830249db6f72b20042ddb15a8eb6ce0cd7bdf91a2372b488062ed6cd98f41c07ee14ea12945528c85add2bd161f7a31806f255966a3bc77198d3fa287c7e1fbc9cac14d1122f404a16582848e88d50deed9f6690831b57cdd76b485c779e48a980de57ac606f98955ad46fb358c0170dc2ae6fc5556833cd7eeb9185036589581dd982d4bce4693bbf159d463de84f1a98a6935e8150ab7ac814df5b2f272b31dc29b8cc5727a792512560cc563b6faf0f337ce8f14b412655b91ec6aac3c8134a56debaff615db1873299cb71b5f7ba18edaf6879ad763edbc26c16a0e8cc092ccb45472ea74a137257c59b42d052c193f199bda4a0fc614506c01e307ba44903d14ca15a86cb3de3aa3845a979f01e6de3df11b055f6a418ad32950a36f93c3dd1ba5af217bf05ea9df87d315c17fc6a520dbd87e6f93f756ff8612dd6cfe8d3fd09724e54cdd2b234c444ff71e0fcb91dc9cf23edfe3bad6ffca70f8d4a592103c5a859e9126bb7c5d6b266373e61bf7863781989951d0a765a1cfd21f5cb28589bcf6e9b322b7ab9c0316d489491a33a5ce8f3e285db3a4720f157d47f148294842e5d02d6c9c0dc6a6c56ecfabb6a5748f4c2c309f69195737b1fd47237b655d666029c9ba152e1d1c2941bdee9dc0be5579952a31843e530d339b5f3bc15585fb02cb51882ac83521965e04460bd20fc2a982c274c870cdb501c31d7380af92d806e29bbc7cf5ce192e736492263bc810ff182d94065582aadb2ae564386b5aa3c514c82a75b6d3106c24cb9ce005246e7c7093b85afd7f552186ac3a51fc1049a7cb9ee7b174b39ee287b563f71c5377eb54d9873a926e174a388f2698adf7d8e1f1e8c41e67bfb760cef7cc292c0e9471af2df67b00aff1ed3ef74f11419254b59f9308335d0c980096859848d4ea4671d38683ea2226562aff271c7447c3e1ef6c25c7fdad4d23f6566400c3759365e9603c1591f141ddcdcc32dbd9620ce010e0865aabe079bbe1b8bfcb331e0d5299413db9bd494c6a7dd54c7296d7358604743e64073ab54d403dd5539074f280cad92a88098cf6ded4269aa8f327a135ad3ee34bac80a374792cf170f15ade8923e9068a23b9a335c8bc533e59e82d63edd1a8d753531aaf384761f3efa038efa99d381c27b67ed95973cdeab7b969d57678965fd28bc972e9312376262f35922969143694f8576a7ead8e3758aabf8c23c7fea4a1eccfc0613dfa830fa5cbc491b8c24e85877a3a01f1f14e542b125e906a48403b7d06d216f3bd3fb10d9b19cb5bf145ff5439be95272448b707e0795fb4f9b93edda970cb7b050639a4873fa0761558b2232e491eb39a98d570ad7fdf2fc7eaa22ff6751e15d7c54d28d5585a89142f73a99013018f70683c0fd756f5cca166b847b856d62f3561872c2d4c7d1a7aecd7950a342c2a452715c202416f7fb67b8db8a6cb64c554d8b9d76a4f5ceacce6d3a36ac06667ab4d3f759b70ee81962b18c0b9c3108192a49cfd77e238940c95abc1f4c52a0c228752fe110f2a13738e214d2e87d9819dc8a0ea164da2bb6c4030789d5ff78a6a27a0e39c9a6016c5a574a15bba204a7ae13b196b11dedb10183609041f3904799d9f8d1f3a4a76a42412166b4b69778b1ffea81e7a61849392569975f31a8d391be323bba966eeec091f67feb1b2d175f98eff8f60c4d7ed2618220b914b882f3af76ad3b863eade54953f6fca466c376b4648b064154f2966a954bd58068e0d9c170d8bfbf8a85d54884d27547bcaae0f5a5d875852cff4cab0953e186a802ceb41f81c0d43ce9920eb20161bfcf2fd612eb5b22b20bc9445250f8ae1c338a3e23eea806b7365fa2a01968c322eeac2c0249b3f0da12c089eab85cbde0e6ba9345ad7a5a94d8ec3cf5a398dc97cc71e5751b8fd1c4e2f22c13470bb6fcb1baf306e49f7d188a6d75842905cf8b50209fe20e606f66b7bedeef193dd08ca5dfcb7f348ffb58fa67af41894fc5fa2522d4fe7eb0c0d8c30071373f833f22fd22779177b859b514d759a1a317f1d9132dd5241827ffc81f07787c36b59a7179210cc128b14f0bc06436854a4632007864ff40b26d38ba721da8076b0f6d6556d47b57677e4b6cb0408b545e3709a129b88675b1df7a7e709a6a2fc8ac5ca5113676d47a085e1b4194cb65fbbc122192b2d38100d68029342a6b5e6f7d97f762609d4aa80ac64fce65c1770d3e37fd9ceac0064e4b0e7c69125f7267ac3e61aec7f6187f458da91d3f74de9981e2b3d5ff5f5a41390db3576c2d14b6b79075f5d6ef21650c5be7e8d78a277cd0ae9ad0fc86c6dcc16a168f339e1fcaa974538241086984ffb561606a2c896d11fdff3e685f27df8417b8c8d6c7d9e30d4dfb282e0f3e56010f8cfd902ec2cc1252e86e17461ca3692cde22eb79459deffa98eb8651099181db3dc84568b57645952fce8f8ce136f2598f04126a9322443c8f792b6e6151ea64f02895aec31fabab51d89f07ce243129d77af84d7d53bd21dc09f1b7d7a218cab0ccc6bf77a37889b7316ca7a8dbf8fbe31aef131db1c7ec2282e205ff09e12b46417299eb83b0e9fcd8ae522b67db5e4584c261546b1c7a14292fae5c22c7c850183aeb460632594c7f559cc07b8119beb87214137a9fcc3f0f52dc2e62f25aec02a52f769f329386ab03d88eb659d8b3ee7a2677a27ae99bd109dc637bd829b319c69145865af97f558f6bfa96c52cb8609a07dda9ab1f9f296b9efd2fbca743db2c005e8c34bb717edd7e7688b443c022cfb1b66a604d8de63b2be026c5f1548b3c5169cd62909ce305e78a1dc1770261185c61442fd04d2529dce5f93e13931bce8930c87792ad44b85248119d3d5fbc2f05983f5b2860ef1e503a5fedceffd9bf85512776283483143c07037b3fce2b0b31c3988b16deb38ab4893d02d6009ade93fb65ce7d15484a34b6f67eb6353e12528f8606a08cfc313e8fb0c12f2e9875c2557bebb6241884e91088eeb6d09005b223a23ee01d3dce981aeed630402e8c75ca96031626d612a8c96c93e31f65bfba52632c8c333d38bdc531c78f5182e245f8e5aa5cb760d8d46c5cb02d9d521a191e020c253f45b9a57e3dca1017e5862c76a14df62a533b524e65f782788e3760e550c762b11b1d151f7502a000739fb1c64d884204f38fe59b1417563e15acaa34fcef9e36d41cbb7fe8661e6a3d957d6d752e5f82c2f81cb7b6f8ecd64f2267428c00e197f96267e7a170e4e870556344aa46e847d3e0304bc17fa83d7de1c87e532a6473fa47a40b52de539a7c76d31842764d47929fdb94772334430d3de4ee2efb802a7f4120717a1cec5fb5ac4186f8f480ed50b98b72dc07899f487992ba66a29f10adb39d7ec71fb85d68ec14631cf6f3c72b052e5e0a6a8493ab916016e633a9d407918b0a9453b3b750ffcc9d03af3223b9ac67b114db6e33e7e1bc43f0313a4cb0546e4845ac229e36a645ca819337b117b712646e0ca8f661d0a531ec764518b15a2c066a3b4e1619a9ec46055d5b4b6b9134f298166267c30c6e8ede213a02dfc5fe7c169b674031c29a47d644881bfe62920aeac03872fd3c3f44173783ab73fbdb67455c6420626f982cb51d1f797945f7b8386ba2248b1e2f969dbb35e43a3438958e985b18e3fbc33fc9ea909b7d820f7fc38d6efa097795f600cb381b7c8e04676c939b6e54312a9a676c6e16e18c33a0910c8cd2ebd0393f5e7ba2b12f491ab643867eb56edcf5b2e256cc3150fefa2f8538bb3ffda78acdf725cb593c4350a52aef04f92c7544511d1d11a391d29e07c0e222088bb704b8ec2d2b0bfd806e0b0f2c5cfa86e2c05dcaf435798c07710560aa7f6d8c1584415ae5ae09d36b552c3336dc0a43bc1babdf7d97dd87cdb23317b262f177e30a543c09d46684d8a7fcbda2a482b485ec497f8cbb85cf8b0c4a49ded9a8e805ed7a9841af3f1ea39977d5d593356fcb69da89d3f1161d65a0c0937c5259f1aaf0ab67be162ddc3832e3a9c1bfda35500675404f3a6535a1c0552ac64998aad0c2e56348e5a5e27ae96ffd2bc5e1e7370339f6f80aafa91aeb04c5dfc4329e753fae567d8fe95361104e95498fbbd200be6b3147ca1ccdf2e0e599da70391c282cbccad84eb522badbb017c4975f895dac3ab5e0cf47f6eecdc2b8b9571dea3bbe3048853dbc5e8cc52518675d8476176c3dcd6daaf5d287235d0496bef88257bad80603ca479d63ef1618f2a258817b2b89534d814cc911d42c4bbccef65104d7e2ec6e4485ef6f46eed97a8a8d791c0cdc96a565eb172f725d38b80ca87c20fa35e187555aa0aa9c453322c7f6335e2a5cc21633edd0c17d6872679c5d856665daad3ad234ac01a7e2f28786c7f9e87ff14f23d0cacf1ed4131252842f6d32e96dcf28ba67369aa5b78e879f7c7965881a7a97870e4d910b34d931b77b332349ca36c6c6ce6b01db596695041f8ffc4bbc2e21e7a4d9006737adda1fffe14afc0f20bd945311f0a9bd729b87051ac2db453366cce148845b2204cc76ab9010c5c3565eb41eb9f3133f925ccce0105f02fce12bcb3e7e0cb3c0ac8faf966db27406e27dfbded79f104206afde5f5303302f9cc398eb2b307204c882b0f119b8f451d4d51ecff6f9a540bbcb18ac39d24f3c0e96af6216163a29847d32f0b2ea1a783dc1c42798bedbf555a2809e2f676da01858f9e859d483e659676b72f472ccbc2abd657d16b1f6e892e95b6beca9306593d550e45985139417331d8ceeff1830c23c34ee0b4877c39250c1a2f1c439b7a1242745cad84ffa98de7eaa1376c21d5d8687ff25caf274a133f485abbc93de5c97068cf405a1885d1d9b834de459ccf1aea6f53a967df84e33cdc823f2b7b8033aa43949de7d59b6eb309c229aedad382a242b9b0cb2cb7f0c236fcd1022f47be2123cb3d8eebee697b613dcbd7fff1d5da766e27b2b67ffdc844833b0e4d0295af311cba5f224095551a2d01b8c6218c59efa6591b4b9107f635d498bee9a680b6e54cd933cdeba9e96534a830b113624de0707231b2ddeaf0fe3fbcf2b0adcafd468f5721dd5cde7eebe635e044f74576e25556c1e2a771728539d9929d8e573c373dff4f8d4475d28274f2d1b758929518653132cb6a096eac844b1b13e827b526cba04da212df33583c5ecc2c8f647ef917db577c8daa2b6616cacd8759ac81e8640782b3ec7b862dd53cc7a0aaaba17e1cc7d823a8bfe99d55fa2bc270358cd8f2de0f33d7cccde5a7ace7cc6f1862e139a890a4403ed1c58b72dcfd0a60147acd96a35d712c6cecf71bed49ce1be9a071fa4e4627895a015dedfdf851bee247ee6c6fd061876f4c5dd90782ab918b641cb242cb109f91f409932104a0f1c966bf2d9e1b62b7437939ccb023b94f15fe5643afbdd0e456df2be056e9c18c6fbbda5c81c9a2b79935550617906315977fa496d719ae44321876af51de2845d3fd6930edd00b64add159775005816dc4a033086f914a265e401b6da7e317403d74bb8251f9e218274f876bae7e7b62322f037259885f344eca301e051e95a35a14ca6f7b827e145a8b9f4972f8c135ae9a6f20fe2f0c807753da67f8697cbf2715cf8af2dcedd2621fddd428794f18dfc60012e675a0c50f62ffaa4a85ffa2d635617b6f77e20c4de67b518c42a824d04bce1588b256276de2fddfd712d0a25f676164c57711fb83e20db3d2c997f2639249a5d9ec4a47baceb2d8f8a91b61275242b6b39174258fd7b133bad469eb642c2e8f3316212aef10f50815a680090200c2c8ab8c457b94cc68905792f4ef6af00c4c85f57fd03e956b43fa84aff2f501e7097474255363e28127a76b092e9b4955d47a68b471c4ef6c63bdaac05ba2c245a2f5af8bff266cc6352d852922e8923a54be767dfe8c7fd00debc8be00b3bb9aeeb99613765c247161bc096e546ec57bfe815aaf24e565e41c831b5de07d7655be9c28cb87cf6736c20eaeea660a67fa9d69969fb308a228a8daa523ab8d196e787a5e5b6fcb4d8be93fa91b9f41867f413d8655deb23e8e56de2f43b7e573437a357ec63fdc8be4595e816b625aa2533243a1b41a5628d642399eef864cc8bb0c1b0259308e4743e67d1fc56cfcb3ede87ff1ea61a54d8e1d5014b24ff45753a836f32b8736ac54c82a4054528fac163cec17b833d7c687c416a93abc818b9fa7b0ac975aeb63395d185954b9cff204420fbc07c1eb3676cf68e359d402a02896f38d278047d30e2eb2c8843feec47180baa734adbc1ce3e58406372986c0aa73134d3255b6fe0e452806e24f261ba1b2704e310de0e46a81f3eb023593e6ccbf0c391a867df0b11edbc0e67a7f5f3b74b49f399ce76329bdbba2e5393821dbff949e7e5a90c31119f1422209b2cf78764b6032d231e88361077bdfb8269676b1c599b5ad445c871efbac65284266ccca092b84af1d7dd1b75868d63bfce993a7ee151dcc6906e7fe04e0cf7909210a9af59c12235d6e2656239f1fd4dfbdd90203e8fddc56dbbe15a01a3b430d3939127fae5949231423a53e4eefaf094e54ce3c82692ebef3aa14666269a36e2f8bdf2faa773f540858fa36f0fc5b89666a0528b67e10b4bd8e7c4395e058286f64c7b607b528309a86c7375314f655d13ffd74d8b5d576da328fe24d224a6d59d5d46f1c13b9e34bb804ba9974e816c4f4a721b77cf4082228179fa63fdec08c17de9635dbfca0dfa75d55b32582255870cf3bc2d2dac4d75db125f971ac594b8cff28d32dc3bb297ce4ff1e367539221948efbe344b20711c0384510dd41e3a84b7d75977068f365ba5583b02a01dbf43203069445ccc0c5fee141505abcce791620e46de08b4ff357040d61efe3688b029badbc8b52f67958a31c557603310e9b859228468f90314256e8117e55de9ce9d8a34dda98c96112afb3562e0faec041e8bc7d6458dd329abc5fa83fe0f208ed5a805851946c594acbf2bc1d7f8587769db7f3b449f25003cd70faf6b4083dd872430875cd15c41eac786a5d301bcaf4e962736a5b2568360993418f1476553f11448fb3b408b6c7e8adcbe7efb0224f38e26925690379756dc93bcd93d691315924ef9d19e2cdfd0c607467786304fde8d8a44b53df338d4895c281730fc6a0d85dc269dc6af1a9e6aae96e6ad71ec66d454bc1aaed43baf70fc76c73ffa3ba36039d694666745f742e0d7d180c778ecb89ad497e5a1533c466d805e49a3e538a042a6e6163a88a5791df8daf70cca94f64e6886c8dd7c9343a1d4cac177185731d636988289318c1e1a636892a34fbfe382b2a6bc5d400303f97f17abc8014e6f23686b211459dd1edd52af26091a53281e82c6691af9fb9434588270e871762e6186dc35506881f057ff7f4b1b7adfbdd29862656b2e06f3c3945108f4546d5556a9bded7a33e03309d02de9b43c3de3a9c4fb056c80ff29b0a6d1b70fce0eea5b1dbe5ac3004fcb4ed98de99ba0a9656d55f68c6822723545fdbcf59be0d71617a4a0ae7f63433e63d1e37cb194f2a36431afa524e86ef6cfad9b44c69457d67fe1044eeeccc6e8f478a10f2cf111ba2701ed7cdae4f715ce8b12806b3e273115b18d5e66f886bac46887f87395078365fc4fc0bb395910245bbdf15215569952868d09dba0fd93b3b6524e5539aff891655a152cee65acc2a5c5dd201e0203d8cd002bb58e96925d324d69fd5dfddb377e01a830cfbcc2e350a8d3aedeb697fd05a6d427f1a175a58ad540efc265058d8cccf49d54fc572dcf4f936fd922d5f70564f213a287c49314202a045edf1d4000d582f7b180a719cbf55f5e561d2afdccb8d0a68d24e9dd2a5e5612e63ca344e776db9e53c7035e03854b65a8e8a0510b315ec2dc2b5861d3e0e4eb8afee0bbb1286db85766c93565b9dbb4cb779b01e344f9f07486828d9dc661bb9cc94398afd6c5e911deac4ebda93fe4a00ed5a660b8f3192d00b9824c00cd3f2b735b21aa1af90bb9a9b57e8fa62c284a80bef907c26a6930dd0559f3bc010962a80aa874c16a3b1f6a4ec23aec7c3fd702eeb1bdcf288d3f49a62d73d80e31149ca66e91de9f3f744f7b4bfe799340c4eaeb58df72fd1433b748e3733d6ae29fbe3212bc61a9f82ffa694e5cf8c4c813a47fb7ec1f4fbc95ea9a74adfc6a6ba0a4ba27297194bcff51a8380b41414dafc887ad5df669799b01d9843df9640bf9dc9de3748e219f7e27be47c4faba4b9d7bfa9ed035b6afd7d2092b984b5ca51fc79cca932a330e368c718a1a25b5bd1d71d7540051ee26486318e4569c0b8c07941e048dd196cccbcc6a78930955dd7bc583e9076a8a209a44649a700d2f48db4d80fa3d51f311e6d4ff704304188da482681391f352f046ef90cad9d1b03773316a313320e3a9b807ed44cab02770a9df3560c4d8c757952eefacfe4965b20cc4bff6d98d2951978488957cf18287dd253c6f10db3f23972afa7f6da79c576db9abf41798169adbb993a39a1d24f14f94eb6715971f57a3d4a4b3768c0d42aa99ea86b0cae5a0d14676b66ab41eac506860f2c01c49c4251bfe0b482121b5ead712d0af29fe1e16afc36f1142fd619fe2dbe133518b95c1e9534c447d2d4e067178bc931d6e4f898daa1bc1777b7c46020daafefc30f0c3b3208066e07c2f5766451de39fbea313c040699e2cc5865ac887196ccef0838c701adba61a176b3e676bc797103e93a60117d988bc0a9e87e66297ec475b218e2f348eea733e2ccc84c534d91e7c765ae058e905f2671b30bc006b9d0e5a07dc6d7eed29454fb6c25ebd08cefab30a2e9ed298cc942aa5232a74effd2d9546c3418fbafb9d7a195df3850607b70842ef2310b36592c7f925c0ee5fc893e4ea004d5fe55e447d8914fe0c2b4792ade8cb631ab860dd727438ab573bac4eb2ea91b8beedda47104cc9d464845d41d356670a62fa506398682785bd10a29feb3d474f32a3ae0c33b1257f7bfcc1e82e45a6ca57f7ee143fc40a409ab9db3dc9c590c08650bf5c349bf02ea2e02315a57a57f848d17a568c1853ebe056e8cb5cc85a6f4d1643dfd95a558ed838935f4f3d07f010fc975c849c4a4260d48df74ffb3cb75f414366440bb9cc7de054f9dd4878debe323b365cc666bc61445722dce3151d67e356dfa539bf95a08fb5c8ba692f804282fb759c4b93c25b975d957680cb1de41d51e87281fa3e721a7c1402b75c327f2ce76211adf4ad8e70e516ee5c9cfe1def88f63084b77db0bef74fc6e0a88fb3f944e488f2733230fadc831f3a55f1975c085bd6909380200852656248c566ac42fd1e8bcecf430856b8dcdd3ff7984f50bff225f5b1ec6fd28669dd84ad332e13955ce0003e45e46ba22c1d59009411e8669fbd3861cfd805ec61354d2c2b840dc6466a9598c53e8a22f486bea4ae9477605f98e2e8b937568144366d3ac0aef41b187300c5fb16682265be85f7aa82ec9d569eb9a1cf76c62a1e3a7e3edbca5cfdfec9844aee549d82278ba1af6c5438f433bfc0d9f9d183738bdde4b30bc7bfedc0314fc89750c5aa2fb9bc8d17011801a3b629c03916783fabaa4a248e64025f3314e377bc75c9f3b05465b5cb9c407242cdd7162d63e1e5e8638a1e0088fb42e39af3d9be031c7e24ced5a4fcd8ac92eea060ae2a5074e0858ab34d40f083ad95db20a8344fe6fe499989cacc30c18ab14e04b9529063372141e20427c079c8886f6ec051c65c51df4b11d2fe99cfc57d9f8e46670bf8509370b9ee68b99c83e50e47a20d5a22921b403d8350da307e9098c31079b6fae6cf0db8ea5fe98d80f429b316b24b95eecaf9b638318e16befa00921964a6de319b709df5c90fe8bd7934fc53d4d94a9bd502d6ac5eeedfa9044215b6e7849a3b0d4d1e59f4a8a604cf6ce0216824a3243b593ed5f5debfb51ec5e63be9e0fb8318976a2647363fd52e26417dc8e5b5247d9e02405f1895d37f2335232bc7ce57c6f0943ea812513a5bbd1af2ac61f23240813d7f23342de749b6715ed100688eff99e588ddcca3c010be6c403c31c2557b780619a0183b6c57bfe5f8e3be402d48afdf3852feddcc19edfa40ea9143065773b9bbaa5a7b1f2e0c1abc2d9af088746c380c78d8bd22b431f08c5a9f92a62f1cf604043278b67e91d93b6d86bca97899b6f6c79644dae00667a25ab01f16e3da93f7b78715ff9eb64c5da1388ef668e855bf833ad0dd99e7139154d61953aac1fa3a1cb711dfb9a486780dff648a5d3a1b309f4be30e31c3aac788ea77280b52d9689a27d911e9fe5436e6750c39cf8b224c20a4fd21632e36c265abc227e63d0686d4de882ca85644048a311860a5ff32756da2f775f3f532d6814b42298e71b8bfc973b71ec629645e3be505cb512175127527c0279e4be53b51cee93c9dbb8e6ee7094de8678ba97f68b22b4de103099a0765d3591e07e4ef4e804158a1b4d03fde8e16cc23140023bf151912a122986f0e817e1cbb5f297883e29535033ac2e25fce5e2927f5a2d0c14b69dd38f75d60b48c3296ce26132f655dbd638f84179679d6ebbf2a5a526ad821d1986f2a6b134d3cfa8ab92a422029616fb5b1ea5b9ec58cd52c6b2adc57c9d7f0597871705629000036cc405cda3abdd62493b420cbab0310b616e130889d2bf1a5afdb4a615716fe076ed6a1599640ed7af57082912854ac7ebf24d824c320d1b3e38f02b1a9d968e4d8713db64f1b89b746242b022c3167b51a35725691f1ee2a6758b7143c761bd4ee3ecf51a7969fddf6e52a4de789eac62bfc1b25f16aed9272cf3763c0c1cd46ea1be2b111487eaf67d4c56a5a49bbc45f6a23c92ca52721cbbbab2fab3c0e3bc64b4cc9f51a30994f9b1236181a27b59e68f6adac040376e1819df1ec03b9f2b2afeb485fe56c27d5e8ac97d53b55a4dbc5c867c2e14c184097cd7b0890674247f142c37c8a148f6c0f4b78d1bbc9b6acb8e9741f62973034b80d49ecd73f195e6a0748516652d4aa84077b36771dd60d62c44d5b75124ed8a445d4808d5c4961d32fea58c02d2046f023eb8705969b0e9bf93c7cceed7433cafe0e28f79fccbe5ac741066dfc2056f130cef685700321f11d690c9194559d275f47450dc5373ffb44566a0d426cf988d74bc0c25851da7ff354965d32a4769496cb811911cd4e118ed4ddd1588975674e5a36dd84e18002ae3ceeda882cd79b2b0e8078c34476796d14afe36ceff9ec33ccc1811ac2d020762cbd13e96ff45b697687ae4a603e0bbf83691c86e7bc20d210f3ee838299e5cec66b8e7726366c20f42d388d93043797e6b594ecfc1be66337165d140c390acabf88e431b27e8a844969ceba85704d98dc0eb743c858bdc7ba47f2c9a01ef466a5ce9502f53c000f2945501c2f6bdb34a1124844c547bd77742696581a08495a4115a76d3e09f27c1bc9c305ca0f958969071db3237841d865df70e32ef7aad88bc58077a5c72aa5788c660a18e2f0e8446e4d417c70c5d6fb36aa133361ffe91f8e4124b129d2456a9d545cc8153bf783afdb6e535584d94a48436080708dbdffc23493f333449dd62fca78c7c7e5285e99392e58345803d8c85d1a2429d4502b2c80930dc890b4da5845095b12580a76cd0a9fc8807fe0751fd872ed4a6a153dd9c41a0579f2662700be1ce71ddd4d7576c221164b0ff7b607bee4790365b3ee5972bb9a224bdf87acfa8859ae8b068d482cb8bb726afb3b49dcd82c6d70742b82d13e93e6cdd549737bcb594c5a2dfb5d3da4ad2e3b8f421cb209748220e3f660cbad9b37147ba13568a5fe3284745fe36fff5e3583987be7af69acdd451fb05d88013d251f4aa9395c0775e2366d86ec6535dc1ab859397332fffa85bfd15048bd084db4674a2210d53d0ddb574b5182fba81c9777b381954f2755d4af57221333993dc11c95eab4a85ef810bdcd7ba48d705359f47688a2007b1059ad7d6dee07c341176f2f056aaa7c89fbc204c22bc1c1e50b9f921321271478255b622a6273d2a0912ad8e0dbf723d3364e901767992bc5a064c5a05adfef1972a3e572c8b35f8956d71bfaa99bd149e27c6af95ffd03b51d7cda29e5ce478b9dd740af7011351b19e3d7cbaa5b2d7132ffdda9e0d3a3e98ff3b5a4815f5c6987ef678ce640f84231f9934d5ec848d649271eb67ba4240468acfc54dcf00fb710c0dcbfff87c02e843dd94643c92a25e275acf15947292b092d1e5221011b9ec66b3df4dd7111d349a22445862030598e2da88ad74796e19b467b1f30fb6029765c48840baa4ac9fa0494d9589b7c62575c6d21ec134ccc33c1e022934cf87bd6e9e3083eb51fb157616f47d1001c81198f8ce227f97973ef93aff125bdeba97b10b91e856a20084d302d0ce87dda4e464f5516fffb2ec80b81337f423daa097ade8d76fdde7488cc72fce3a4ffc3e9b814774ec24eef25d081ebe752ecac5988318457c92faf3a41543d4268f569e185b2e52f2cff504989562eb1e8d4dcb0286501f9f9d0bbd7315b56a0719d765396e4f2469d1beaecc2a1ff2cd2b3d5b48e8ae826963055ac6ec3a3fcb1fc335bd5a45742b612c8f4ba2f37ce04f17a0b0f6c319797eaaf1ba643c59f6fdc4e23b9f885cd2e8460e78264ae33ef4b53064971010bdf2ec5c04c2fde84a4a31ac278c186e48ef85166c5a0cba8970773a864f23dc9aa0780e03b54dd4fe52452d60868e17b77fb3e3d59b75b726e8047983fa087cc2cb29fbaf1e4ca72bf19a070f8809a25a7477b1241f5d8ed16154acad4122ea96a99660caf90be3afd9ff00b994f5e3517191c5e9ff70379f3a951dc5de99e84a02e4683c00365bad8b1c4f2eba1d29035f8ed28b12191e98c0f9a354d439806320be330c74b3c9a240adb92fee62279f8774cbb1b3b237cfd5bff7547a80325451fc20c603603d3046f8f36a0cdf0cdf7a3696256dccacadffe97ef3456ff75f93083610d0c78ede170c8360a0eda0a3e3be6a52c1884853428627c18eaa5ca61bd9a88e77effecf9a05d2e480ea35ba8f8ab748fd30b09899e13311d1b3ee146137795caf40625ff4073478a71f28a039978e29404b09ba007cd08ea79535516c9e0397ab79799ea9698ebecfd890e46d21c7f100c352147c29cfa076e384ba2660aeef46594867ea8179e981524a6954a15cb177939d3c4c4660cf9b3b6efdf0c5ee2e81977f11660f019899613202ad392659b1948c76d38957a31cedaaa1f2b64618f5736d5cd7c35f513c8b0a41de2367c0476e0e2ef5f0b6bdc221b7349eae9e94659511587768bb0bd63b3af7f5836535f5874d62172da64e620619ea3049d4a99f9a1617bdb46698c9202069dd0cb863ffe9226176f18fc09bf80e78386c7f8d1e28ed6d4920f6a03d57749c186c1321fb59ed86598848d9ad4019475a8ca12dc18ebb069b4af02273fbe5d7647834d651f8a3a08c3aa9667fb60dec1171faf6ba579edb49615ab8e95869a32386f99b971e4bb44a1dc4574f37c8ec225c6d4952a84adcbd57ae86ab555179b5561bb64e5c2c5be391912585d6a830d53e7d3410cae934cd0f8cfa091b16a28e0143e98c15960f97ec59104d91bd62464887ce1f67df6dc4111ef7bb674fbebc3dade484acfdbe3131986c3226c516c2ab7f15649645e7443ac61848c8cbc162150538519b44c23a7df020e8e39530a7ac00d1c09e49643f0a70de2cccda4ae31cf1f94cced226d40a928b81629be17e0996e341312f3719e5b6f83f0da7fbbf79f2bd09648f43f13891236234835b29c49b27d4f71a5e819feacd4fbf8bd47637786983f52d672f805a5bb34ad4502c607f09ed41aff7b670882d114e1bb1a80fab147d8050abf2ea3bf7d21613f511d602bc53e26b04fe6ef38e7014bb0150321d720b82a8d0f4610f452a3052558f36b75259bef4a31da3a68f3051fdb1d6a8d40ac5c01916f6ce1bf3a525985d7bcdebf80b876c0a87d79137343dcde7852e8e203f8c3ae95b84316a137a81ae4b4c6b9d216a8dba7dc8422e48d8d0955c7d5919e850e9ad903b906ad887aa3f55b93173515c82b94ba73dc465f5186e59ec6e6f127a27afd13d005e7c4e7509b3562a038be5078cc633d75a04a5a83db4e261526e2b92dab6888035dd1477a1c93171bdad571300bc9e9016898777089e8e715dfc37c574d1599503e5f620451066561874ad6bd2d229f72e9850e779a5247be3e5d82c5a6be528a59534584c76c62404bc38f1f29fc3e7cd1d84dcf08ae40888b28d6228f220dbdd3e646c0980f7f2ba7db28a940d84a352abf7afe97e5506fee4c614ba2a6c4a94a32aafe658931ac12d187e5cddad1f8ec925cc073736181319bab97c3bbe544594891df5d0f4da57f89cad2b4d3f1f2a2ebcd6935cdf579e0fd7ec581e9f61826964426b09b484e1f85a7e10d4388f85a235aa86484efc1c5c7e2effd6ee20ae7e23477ed6f71e82856b48c174cd9a1b6710130545c184138b9bc618b190b95501fc0fbcd0d1652857e33f9242a3870d9cddd630eb561601f919d9c336906b67cbde49df4f6fa61757852fa30784ecf667ef0c8a9885acfb7ca7fac30c53d5660fcf37f4dab4f26666532cf8e66f83c763c60dbdba9ecc8447d8ef0b21b7b0b21dd5212ff45aa7f2d1206ae0eecb18b15d50f3d7acddf5054bca93cb285025d8ee26f965f16eb41f5c032bf6cb8ca4ce5639504cae81bb760ed06dae3d18302a06cbfb2e63416683fce51d4da04946b67b4a181739b384030667b5f0ce24e7059193f8e54eb1347f59b264864a0b906d862e8fc18e46139d9ee27258290f387c333b7538c4bb8f58dbf905849b4472d071eeaa5002fec32a56ff81eb4fffea4e6db00dcc170d620e5af38926cf79a880e4085398c574be735c0edb4fce1b4bc18c01b5d249b451c226db9e3229deb79757971870b9e2c525bba6a311a2ac59cc23a075fb76bc04bbcc4d85fab03f26e04e3b9892aa62193812edd50490317197a668ea16cf892e1ecae2ed111d0094e079f7e3af0b1a0697d4975b13e63896423347c1c534217aa3b884cb8f5c5bf982c2853f06da18fb8e2d47258a78c4c4c557fa09d0263283b9846421a92b62b4c12eb51fc6e72aec011c6a043f22592369467f5bd806fe0a892903b970955daa5e0a0b6207b60b9897cfedc7c10e1c5ba022cfbcfa433b3e668582dd84607b4147046298bd4057cf3299438fbe67e5fa2686ff471803153a171332f05b0cea9b9c6b4dc9748f6b5b057312ac8dd56b7e0d959e8ba1c85a79ed072ed4808c886e355e9e4afd5f37417c4d37d0a03f3c3f9c0e32ff1d917b61890a8e2f31a3796b9a73344a096826e72051fe3d74df62fa9f7331f7e20aa7bafc6022b803b6ffc24860ede77c33eeb66ee398bd46c8f15dba450477d04d794c138b2b4c5e7f7e50cb1e11a3738aa9b47f008b1b4a1551ed2537e32178636d0b2e9e4b263ea3f3982661968080ce2e29350154ad37a5b0371ac1dc1e77887cb1efc3f126360d946b2c50d0608296ad3e4527ba147c27b957b562a99424aae8f0c07644fbf8482eacf393c0156b9fdf81bf91d9fc1b20648621ed3aa5be1e8dcbeb220648887a3e04bdf62adde6c551d54dc2f5ad3cb318b6c8a7376f83b203ee5d4feb9d1dbb4379e3cbedddc7c0d255b8c9a7cd393f16a25c0708feea47384f0c74b3fa3460bc3187f273f1c5b6d3462562a7a30bfb55b451cd63b2610fa50ade3d77f59774b43a158093fbbe72e4e6d9c118401f30515fb153ce5c1674c20e5e516e474d972afff8c45383aa834680e0a19c8ac4226c64530710f2ea4fdf19fc85053a94f11ad1caa2b6ada12490ef4a5a83f4ff8578b6c471ac67f0995e759f6d7147960aef34ed70d58c3565476a91a68664ba4fbf46d9a59b553251ddc14077b583c81e2fba33be4719e9e9ba75b726d4b8dd2b67858a95cd850d438d46613ca01d699c286a5a64f4b0e1861fbfb86303149a7d39c5b3d11a1f1a96aa46a20b6df855bc66b7b8a4d5f0c85c451d4757e7fa032b0a0176753b55e052383c68dbbab5f9403f72e00eafb94fcdda55472f6c408b611043c777e58b5ca67180416a672120b3ed920bfc066d1e3a1991eb37e229b58abd2f1d40dcf229d950f9fdfc46d239fad669a79bc8662fab80294bde5763ab6bd7c7ba07651a757b955aadcbcd0c7963c5ab0364e487ffc9d210a61bb00656a10e874c2a10c99c62382cafa6d0f93fa641f6e212cb740288856f49d105b43256de6a58ade8d672b025c5ec47b277d75950cf8096b3df0df35864cb4f12952d83ddae5d37adc5ff3b1835b18685dc1cd4dc344cf4c3e739e02d991c577feef54b5a015ffb906ec99cdfdbdf4bb0cf73f5bbbc6e28c1813a2731f177847cf27664d4b769806fc10e2059b295f60a2a0918368afb4632c49f61eae1debd51d24a2177f2a506a02b53b2c0365eccb4f2c736a79248fcd15420ae0a13593986c03fafe5f7716308437b202f60c4797c66e7394c2f54bf82902714a2eb97852a850a0a77ba4ba833b1ba07753d9d96a58b02ed23615b2cde22475e7506946f4c18df8505763f7f3b0cc6e25f8f6deccaed2c180c0ed27f813369a57e24cc2b5e5a6b0b5afd78a5282891005fa0850b064f63293857dd19076ddfc8a28e6fece0ea1f9d9a6fa960114b2729100bd7bef802917d77228ebacf7b86b47e74b86129e6465279f36201df8728bc917c03d0f045aa7ac8d18b8c9229446501f909fa20a3581a080c138e835c170f6989226ad5f5e5e9e0e374bb46f69867d4e821baedd6a6c13d818abf90664411228325ff6157a0c39035461abaecb49de143e013181b1147663100739ace78d55e53d4e7d54c2b0416fe590afc38ccc78857da5ae46ca61991c9eebe33a4f6c7b7175333af9ea9a7a93013624b5f2c6170489d80f5754ec7df74b7c589e35d6ad59e826886ddcdc91e9016b7fb43042562ec30837ef334a2c1ac20227b6d18ffcdf50787864f894a154110b35207298152b40b465e57a447125729c62fbc114fdc156406c75aaa63898dd29337ef77b91e267ac9265ef0c0ddf764678be06d44150110a5ce0ffe6afc63af0d32e277e1587fff0fa79f107353667b6b451e222e9bd49eee86a47103489b94f3056aa7d4de4624fdcbcada3eeed76048913ee1be2716ff7db2f562c1011773b85d73968c991a7845c648f9faaf3972f5e0e68d94b8df28c764597f34106d4d52b19164cb0d5a74092604953207805db9dfee12a291945e21a337fb351f98001e671a8d1056ca2e3560c5634282f623485795d4bad21a64969f36ad0084f3fc45f0e1b9c291bee824e7925092cb3fac8e3365d32c022db1daf8a4710920d5cfac0ef154a173176dd713becbd4502348a1cd9f9b7bce04d8c963dc021e531d7a0f98bc0548e1ed8b39312eac04c411044b0f4345c7cf72d955856c6a54418bf9e166850fdcd3940bca6e943fb089431ddae0ddc527147f9b6c3098093fffefa4b1de56fb1a5451321ab9b0a492c37f1d476ed4365ac65da210d7f1464b7570b1850da39020052a960394dff9ee1af64d733eec089636f7d873491e63b3edbb8c27e9cb8b48030de910683aebbc3d3a9cd3a4cc521e272a0a7e2e2c4ce8a8deabb302b637adb03efebd31797f100b7ae8769b7224d0473a16080c63245f1dc91f20082bcf4fd9ee3921cb1d5bf048bb4c28425ff229cb78d39425993cbf75544731751cd9836876205f4e96d3d2c1be15e3695ac8f2de74f86f857923fcd29549f78c3a57cc00121aec221c6235f9f7167acc40bb798ae464fc14ac7334cf7e0ced408a9a39fb5e4faabd6838f3edd262716af2a218d468fad64995af59b0d86582ab04d616997bc6c97275555f70e273c326634b8d6cc7bc9641061399737b6d345628c72efcc5a0e10946a66b8716159c82e9956391e1ef620a9111f39e640caa2d97ee58a0bf172f3b97d300c9ec225604886796a76931797698e3249929e23f980273042c7eff4d8022557c24fc4ee32b19782454ca223520a22c637b6c263cf2a21e0b2c12d1edfa02a488a6f293bb580a93a41e56ac04c10f4b3702e22ddf51ae90d30580b91c06430b9fc661b2a8b646592304c6b039d5bfd7d715fdc43ac96db0e4de44aa7715e539ebdd8e0a601a77db3c3f97a8912c145753e167bc1277c376c682c54329be250be276ea8c79fc3ca967417f4144c7e1d965d01b8e90adb5c06c1c1aeaff0e8694d1dea365f56af0b3fe24cd1f73b9500859953b08cb471ace9526727e668ffb3e119be354f0eb0eb0e440af8a3d1da47a564a9f8ace4d4d230705a28d69d5e5fcff2cebf2504621b8eaf468e722813563d1fdccd2626ab42da13f2ba96d7081042f1d43720ef9cb2556ab84f12cb95d1d926fc1b6d894742d21b9914323d9ec02f69b96968136ea9966c86613f4ab0661ce7548cc9d5510b1584b73984ea62cb78a2b1f05e7223ae0f260da0a28112dcc53f488a9cb20de0296505e928e9bd383334e1ec2762cac78b6c6a9499aef659feee128129ef33fb70656f19ca3d3256595c364fdddb85f539f6cee1c26d60339e496b8d3b807c010aeb5e9c2ace80edd6e767de6bd2e77bd963ffdc1875f2af1a339220aaec726d492511894d3664479bb5d993a292bcf94aa93a23e6db69ec131878fc154b4bd23368bec82cf2636035bf7cab4809e0ab1137cc87b4ac671b713ff180f8fbfd913ff821914b961e416e51a1ded3c9d35a84a7ecc335c1da8135fed89712352c8027ffec06992f94990900c9c23065283f0cdb9dac4ea84a1dc0153016db54009945f889b722ce3133d3b0fe1c116cffcff44476bec671f0f8f63da0d846629d8997f8c5987a51b8a04c7b204190a096211ad41f4987f84b97dc13313221f964471ec54b1adad3081df13bee860ac3ae9fdde097fa800b219afc7ad231b50f56c479cda4fc6c0663cd59bec32cd4b34acdad22a22e21e0bf8fb0dbf3fab08e37f2d89fa276f9970f4dfb6eb9063d18e0303c98221573bddacb7ce3c3fc49f4bf07e7d36dc1192e6c08eacf863dc80a3ac33f8748e4c8a232cc339233d8cc23a3b07ae9bbbe07664ba4fb7e92e38096219ee9dd6703a30b64c57a3d4a1f03806bec9277b5cd4287d0332df0e5f163560832ea1f8613f918c1f86d18fb215a118932b1b115a0cce3916ce5e4bd75fabd510ac20e86495517e182796b1731f8ae3d318ecfe641747b3d69132a0ea617f7082030ed5c5e899e15af602ebb6d9536a263b6acf3f4a5ade5e5b487f1013aa280490350224b74781b529183f648422e2181a670c039035ac8eb3fa0ef0c58c44c65848e79f1ebbdcdfdc88eaa797f4d5e46916e1ccfd9c6431767744b7f20f83d96c8c8b5bbbf8280c85a9c7b5d2d511ffaa9ec45b0dfb32ec867417576472a677a9d5554607a78d4af74c5b1f69a7b426270079d779988f0848be0051aa3675941079c9de593675298b94bdcdefd653d6a7a57912a60be7a7c51364c9a9411bad494778c0cac1b875003585f6f32cc8c540a37219707ace413b1c38f957f48e5df6098e062ed6c1a6d235059e16fb44b7db48af7dd5345e269509d75ee9c14f3f779b4aaddd5811d59bf39156723c66ff8bc4cf585cf07f563b8c0b8c5a3971f5043a376beb1fbb4bae059063a8d8c818e57d63fa11d066e1398144460451d4012c844d449a2e9eb47f157fdaedddb00db1f0adf9a1e0ba170c6e31f4b48c6950df14d8740d2d221013059b157044e91c108835a6cb5ec7fc38f1f1c822c890b6694ea52a5e55596d6e74cd6b17eabdfecd1d2ba529993c23974c57d91b34898f49511209651fea142b2a711bb4384d012f3e72b05ec91f2c8dc4068d548f5dae14e2ad69ab4d8a29fbbf22358cfd122ab355a643cb20e72d5c653207b689671060f89449f93655a8ddafe6152e53708b37ffb920304419de40635d9af2ce0922028696fc3630bbe491f9098f0e9eb09ef12ecde0ee3b1b678164398833789f3ee5a5f08ea242bfced379c6773eb8b14e6bdf0c08db0cceea3d2a97aedce3b0c86f93c1b24a83f0bccba801372f30c6147f2dc30c8181379cd5afada44e8174cec32453dbf145158aea4a78ff5514a77b1b9644e5c0711e56004037e4e2a23c5dafed31726cee07062364776b7fc6637d18a85ae411e6a9a57588cc427d614233cf82aaa536a1c430c1d5c1d386792ef11aed3273f197701f01a6a5629d5accce145757286561b4edb3347b5a44af576e509588c066f79a320c07f2a4a82c233de972e814841f2f2b55d0380b03733978ce55faaaefbd496f79c4ad4731bfa4c86f23c14b04beb95a7a4529dba78ad1c3ed2f7756bc987dd8fd62e38c09a47f6999eebc9e7ebb82f18b1661cab822028f519cedd8c124cc57a5a96fc4bf823c6e4a6865525dfa0325e08f9f13e76b7aac38ebbcb5218b1308a44f2b3bcccc66c0ee21d34cb1b54d9852be938b0fd26efd6463edc82cc8b00006e8a7d25c9297ebc52277358df19dd3de26b0374e79a2206ee38a1d63e1f1b76cab2aba53e8ac443575e751a51893f7ae760caf8f37d5b9609bea0110403b386346dcddcedafa244b03304263daca7a8abcba01d68eb4839ce596ef0da8b7c408dc6023b835c3fadf38d057d4f87adf0191e02d3d2c0746a189630b48c11155f5054033d330fb746cd6ba99950c5f691e86788cb8190f9c20d553ab90e0b5f4f1cfc3ad886ff6de410056b0ae621d6553570b23944803ab11d6fc420e188ee1bf4f11848db7c23d94ecf3eea67151099e265db770b890557fd6c6397a01e7cb57748e550d830ea91ced7d9da8faa7b77194d6d4d9195f1a25c00c20502651dc0185cbad81e76cbd9ee37071b3f921b778c9564abc14fd003a279f59ffde293f9e5b7c6fec4940f0cfb0f803c03f3afcfd9ab181d93d0906285ac3d803f0a4f9044917a93c9519c25647dbadea91c51433fa8d36de5997c1a93c05237949a1fd8150444458a7593d84efcaa370de97471fdf55efdec602f873cad2743e2d0faf374f00fbaed90406cb0e097e6e70b9e12987eb34021d842fc85b018a09591923125fc2eb8ff243d6d6906346d8a67cd33edbf6ec3a1f1674a87af622ab192c590bec9f5fc2f11fe45437fa25b6ee776c9da4aead13325301e045dd8ab84db9d3c2644c02991dc07f3a862b3ed5340eac4b8f2c2248832213f2b07dfa0bfc9a398511bf86b2aff03fc517e2c45b386973cfc57eae6581beec64924f5a73ba45101e3a36a20c84d656d3bd444d958ed6c2ea78afd151ac67c15a81a00501efd5ec5d3a28fb9146d29c4dc88176710ef8de5dc4c4c0161ab599a702f85b7d58760764d332462bf5f05e693cedd8bbc3eb695a78d0dfb9583b13f21c8ccaa05973ed09f98a1f3edfebe3813d6cbdf400f13aae8d289d562f8ef34cafb25d3a13727facc7228e2272b5fb839629d1028963339aab63d67e259a4d76a4180f6b5ddddad0f957f090941ae4525a7ccb0fd6f205c4bdacb39586c108661d3ca4f313b531e9e34ecfe75470af23d67d184f6f54fed17c1443741c4c5907d0e40f983ac71d75dfa12d3e330558ebcf1196066d13f3c2941870a92077c65daa508be712b58c9acffbab8e9fd33d046ee2e7e3617c3f90571164afe147953941978fa21abe14c9d1486c9f952e7d68d1f1c2279f8d71a84430920817d2aa330589c41bace8624b241594d368f1e9b8451dd5a3b9f9c41c855f336626cdb3edbc12b21b9547b331ec72d59062c6dcbf88b5ad67fa4d3d2e3e775db3e50eaa293ef9ac4e0768f277a365252c72b3b373e704194c76647a6ea5e0753556885adf0481f2eba383d2893aeef1f664625fe9679f39443be57a6e61d2b47585872468085f9a1b624e4eedac12c07b0d9d6f0df634931ffb919c9e5992d80709b36c203dce9f58ab96e2bdfb05cbde4ae73d4f0c13f28b751f8862c1c34479d9093533e51074ac53e114005cf3fec6f5ada2d3934d6396e7110f0357755985e47bd2ef0e40240c9e149d933cb3b78c40b8b23a6646829246f4c11e3a18d74e3247a843d946e479d19121590dbcbfb05ca845b94b51f046827df45ac984730dad70988dc852d5307e75c1e88107fe384d9211339d52b20b6aa9d355bc75c358f098bf7878fce1497853f2b4e1e9528165a63ca215eca03fa295d45eb7838e860dfadaf9d031650dd3c9e61fa78ef2fc13718298d3ca23d6b92f3ecd74d1dcc6da77fab634d2c893eb1c6b750df1b34599a012f6531f969ab70f1d0e2a31d0d8af1131138a97429064fd57b958014b093a0ae4863d9b5357c6d43c14f00a3317dc77a605da34a766641f0673f88bd020b029780bcb88846ce5a0e3ef3da8fce9d5b444b30c37c4388bcc0c4a2f690b0bdce0a23c6b0dea0d7723160b1acf5eca4db7fa805b447e86844c24ff01410f04a975e22b9fb024479cd219d0714b2860fbf66cc824a5b9c7594467b3cba5e4846278b58ae0d196c9bc6f5403e3851248bf207fcf3614a20591d9034d848252b6e92002d42410ddb67abf8e233ba2e3074b58b54d4b4993645a5aadfd965cd58179ede162a943f87d4db441686b3a90cfa67751da716397c31cdfeb9c144dbcaf2b9c1438dd55d376354861373a42d3cd9f3569cfd23e99928bd4ea161464861a9e18c2872c2ce0d478599a5f641b987c101173c7df962268ea4c3422b9c19677328f64852a50772476771b29aa15f24f0a8bd62a242b460d28d82e740e83530d489eabe3f6c42456a61d85d62d46e7180200f1d7dfdc266e203aedc2e64c5d239f0d52ad8666102009ccf5c0b18ac6d9eef61d671d5ef7dd64878284b42d1843bb4ddff280c7017753ee43851e314a53ca5b997a206ffdf634eda47cf9a0d05b75e422e927c3cfa372aa467d74a75f97fbc971c199e9ba0ee209dbd431c7d40dbc04d27373406896b32862d52e6c0fab9c89b6dd99a6e57fc4861db1bdf2e4d2d9b63f3a7b149c75b3afb2f350d2107e63cb8cc83b68c34f1ca6c9fd7f8f3cb1adeccde55521948acb783f19ddd8fe12321c54ea92d7dcc59ba31470639e79aeec7218263e1184f9a84aabef199dfdc635c4a4873a3f00201326632935ef058df7e32d64215dbad3f7f0e07d291085e4a0259acf5b19c49f2a5fec680edca0510fc2f66804b968181ca81b77d382b5edfad24ee304d91cb1138ae480f5cb0a17fcde6126beacc2cd2442698e77d9ffe639a52f8edb10727869cda6617ded37c58232d1fb97215209815cf9806c078fa3da40116fcf396ac1ea32051320606cd5022a73cd660ba2d62d73365869d17254318129513005e3c9848726a96a7b98d98fe701286353cd9a261a123c3bed21633fc89d7d47ee5b286b8c87098c724871ba846a703efc04102ed4c65bde691dd6c2b9bb05b759e6ca19d62971c78ec4d76ca74ebde16b5a240889c0ccd74228b56fb446556a6fe1774c2f2fea8094ed4925ec37e626750e8d2c2364cb7d058555a22326b7185ed5cb0b6504a17dc033be55188b71faa5a600f002ec56d6b0fa65c2a3d9a1a78d5b98afa90cfde8e3eed1dc20454db4f98f4365f613685f6038bbcddbdb94d91bf4f470f51ca4370de2c627f83dfc59649bbe30fddb91f1c429fc728b1fb13968433a98ea38ed1cfeb542b513dca8654d7f93c3959e5b6776aec5f5005b78e6830181e2cd0f7cc8feacd6c02b5c81e04e469a1232f871df44067bbba9fe1332a1cfece714624ed9f93e84fe881325e327f8ac86285021a155e739a0e14fbcafdf2679586722a24ebfd3c916fc826e4bd3bc3eeb0a1231de423718c24ec4c09d402406eabe1658178e348481eea44dfc9eb4f529afb427d81344c4b9167d2ec7f37384955cffc1fbda49d3ba7bf290193f75626f4f3d743c2519ec40c547b7c554e6f954d8fef9394d1197941409d8b9b68b4772a11ea3526f4d19316acb2f13a97795af6176df55d660204dd5424787c0e3dc46291b43db3ac3848899159ba411fb39783f3c4f75b69d41705ab90b5b977fbc3725f5c88e7c7b213d02ccb602ea9b6024c6479a0b586a2a2402459a8c8ad5decca1f9849f3ed15dde804ddc366c2d9c527ebe2c548df497836fbb5a33c0c430ae12bec00dd957dfd530e215b88fef3921eace9ca39c56e3ecdbdb2ba0437f365906af843959e97b8c4031e19bf24475019f8d2079b9f0ee7313309630ef6c142e00cefb8a16e0d22e5b9a002afa16d3cdaced7b3f4e3476dc39e5adc74dad21413718582cfca404ca0bb2ebdfdb85973c0474f6114febf6051edaa8a4d741bac58319fddb9e5b1fb9f3283dc7bae903d4fd569d16f15ce675721a03b6a9989023780477fbd1f36243dc1ac5cdc92f6a9225c01dfe2000ac64c839ef47910461601ea8bb60c301a365ca4c8d4a774cc1203cb0f5ef0890218e89bdfe5717796cf72c9445b3cab9da4ce08471d001b2f0021ae2bea199c723a940d104ef23c8dffe8b9f73bfa5deb6d7ead2e1a618715f259aa0e4219a72fd85ba8b3d2c80957cf63f546d14f7cebe12c482ba63fa606bed2cd846aa3aa2a28a30ea7a3a88b131dca390953444b6214050fa45dc75b033576c2272c482424209fdcb93064d0a950ff8aba67922fccd6e00b394ce268c0e3e365d32f220c130e9c93a544be5a1620b6c137f20a432a8472f2596807c0b357eb586c5cf4c02b25296dfd07b0d73ac6bc70c0fcfc721ec76d83c57a3abd59893714f846288904aa2f20f48b238ce5b5341163ffd0be6f30ab2496229f9e1f0a1807e1720222b9b2c2a7a155d37b049fa5f00db950d61862670d7c3f399ec98a1a3d32c4a2c80e345b26b9a80997811613cf34c7b2ac8c18e3583ea603684775a800dfa2ce00b82360da0b53facd119d9a8dbfd8a94dbe99b44552e4a9441b01e4080f9b066c89fe8d91f96bf5d219060d994ac490a60794b08a57a1680959dbdfc7bc845be9efdeb5c8f809e6be785f671faa0ecb882d120a405a9310efd6ca64f2fb994d7ebdea58ad01fbdda25cc17e4ba879e03c5adabc15c579a0765cd86de2bbad1ddc4d21ce40f9c89f7ecafed8496db1732f386eb9fe5d983e6a0fb8b386b9f3751b21c706035b5fb7fe39a815599faedef95783498b9eea2d9f370e5471d15b9b601e9d20c9d0ae33d0bedbe219547c0ed54459cfedfdeb0a7af6b8553147066bcf3a34d19f487664a474d6c095a8a067b6fdc0a868b7493de519658eeda33018f75187806f552dcfbf54e39610a44b0242bde61a908c5bbc2cf1b3f02b1dd71f38772430a076f1a5d24aa3bb9caec28dec67fec97b5d01cb9f29fe129d477012a5c940db35136eb850bada3f4543a79ac8d04e898950d24d9c3f46b5e8e6e7efaccfbfeb5f2fc451a333619c650d1c9b9daff91a3e962e6fbd21d1832b84cde3b29d0bf92cf3ff4c280bed9ac1892648ebd63ad981c01f276e2cf016086274a9d9afc3f4e89149fdfc347e4c1d0a08af20116a1485822b62680300eb947e32a38907b48ac4752acd244c96d5781c3e61f75099fadee690f3264abea19960b659cfdaef1ac920a8ee3fb5498eb3a627dce709ad7e3e735d7c811c097f5e7636642def39d5fd21b85b47992dfae078f7fd0861a8d61c89974ddbe41a241ad487968ff732d64c70700fabf4e0b76bde2ac8594177f2d61de3900da10ef06a36e39bf5c727aa40c0648e2ef954f83ed4574f433258677644500922aad6c0f2e6be0d77084c4e9eaaa94477c3f95a2cb90ea52cf1312ebff59a9937b50ee7f5beb6bc7b8e8c5ead41083b2ee0c7cdf81b441614e5dc56af8d7cef7b43988000f9d2f69f9a4cc9c6081749dba587593c00f7738e10807efe588b8d508b7d15c886c82e64e10dbb1ed08c0094e39f81752f34872df317caa6cb9043e892270cde88423b29ba8941f297f47ec2bcf12457d858fc83d8dfc4824efaefcb409b8d07265397dcb2f58b5254c1833d4e6c49469e1bd525306c603436a338d181e41be68b4a27c19fd0d4e75fca95f0c6113aac9d77d60cabcb7cec9595f18bc94870e871b8baa14bf8238676e80dc93f810eb2afe45e0e4c69c35654c0449d76c42c582ff190e5e8dd075a514038ab138d9cf55ee10645da70cf7f8a6a3a1c9c68e807680867fe9ad3ea31a5652055fd1137512795812f1e61ae2e7cfc54ca1768a2b22f6c843f0a104dc05422e6f53649937d994d6e43f91945f0c55ba89e8cb67f11ba20bb88b411d4b0261095a3e1e7fc2cda8c30cd78cce2c88d3b7bb9e6a764fbf441bcc4e47dddc3ecb0b8730c26f495f6d2afa37ef109178bed3422829087578ec28acea82f348c33e876badf07508e1d841adbf7c7823993f467c7be2ac771a90830d693adc533f8bad894ee2cdc023645607d94938f632180b65050c18d8cc26a963b50448078e9c177f9367975f8e6f1603dbaa58729688cde3cebf87f136f952d97b4e61a53edae58beb914365445a7bd9df4e622ec2eb6c7c335c6b74cf40ce0f18ead81b72aea3527c466ac1e25ae4bc9b86d601365996cf252730062a37caf05f6b75f303cbf56f63fe4ed58a4c856022f8dbc627da721e7280ba1226a66c4c62693bfc5f627e02b515e7ab5e6593fa06e6cabff9697072b5a4d7311be8f99c2d3aaa652665c205183eb1c947b58c1f6bf1ee9b9d2ac54ad3797ab9c310a0816183236eeefc27bc7911a0875245b44d0a88a3132a08d07c2b2947336d5790a1e744528489e1367364441e2234d00ad8764adef8ac6d32ec31d92c7966a26b72f6a6ef4dd18f63bcc9dab6b5fb490b86799835a57bdc31be516885d848d54571ccc3b374f2417a83703f0071c82d203fcec1596296a7025fc418fcacb0c8a608638874e1dab4e3d99ed592c943954dfe8c5ab9d1ff36ef2b00f9273f881b0ad8e71ef324c575ffaad18e19f157bd1a5eb07a316351f773fecf1830363af305203779cfa9d59b82a6fb008f7dabc06eae8053d5fc1fb43a52b3cb3c7da86f7445bc4eed6fa9bd34f4558f56a18dc16e6bc0d4037b381b086ace4358a35c7d465c29f6ecde60efd05cb1ceb255215a542f377ff7fd34a09faae13fc7b89922609de814221b0a720d1e6532ab4b8423ebd03712c2e41d6cf5802493f8f433093d6d3dd0c53d514177fb107fd55fd928e97dc50d1bfa7753054e196b0f8c7e1ede06a1dc6e4b0f92268ca9f26f51835b7a9925057b7f892d3ca4a4aac760979fb15bf24e063309957b8a0533edaa0f784a51d33d84a8f79b4e44e0c5d5290eb46b7579ebc9958b79e9d7dd33e754034c6fa5fc19adb38fb696c11a332efec85e2c967e15b94c9cdf831fecef206a5882c3470556eb8f1f65bd00db26e7e09a5727508395f0066bc8ea31330632ff531de5edae68875e597d8ff3b7b2bd0f656b1ece9b8c427c7e0bc9f6b6c63660e287ee2513df14f74bd21c85bbfb287db3419eb3d5474abdd86d650e97113ba76edc41e30928e2c18d1a45f8ce4393175ec34157a7657e3c1f9547eb4d3a6cd1dd799ee00932b22803db958ea637ed040e57d83c9d3a8b189993fb92df6af3738d81e7940cedd97f36888ed625f51923c222d5d4f046e8551218b37aff207aee189bd363c0c57eb51bda1e8444c41a8c32cdb76d110fb466d3e92ac5e378c4cb1f07cdc875918ae0c04f2002a386cef2b285366e6aad15af1830e30552a55f165912b7d0dc55fa9913262bcd688890e33c1a563d87119f17d4c600c64d61979e984bf50c577dbb18622f1b1dff2b088276137bf4d6fe4afa1fe84b367c27bd16c98d8d62c2cbbc449b5bbb9b9619fd2940a4aa38ca8bfb36bd676444c6091972b9f82f32b7cdab8035ffc305f82285fade96721ddee05024c91e849dd73af69a48a3a564ab6f407939ed787674f8242ec4e4311f5f838b0f9504736225eed90a6b65d44fc25e62714c28a1e76afc288c2dd468cc1e52894ffbae6c560adbfdb72747e26a4dd54e382c19b297bd74cf750a14cea67e3942865fcbb36a733424e25dc7a53d94b759f3b6fa7848ab61bc87196be5e5815046b0c11e9d55a9b4d59f8c8be089894dcd8aefb6cd61a37c5d6a854da4d51d9af23458e9f496af89841ce34e459f8a19909e98964920a52c49bba0661b3c7934b03296e59cd3b87da8aebf0dc83fcc458d2e6eb307bf0fe6da596162b77457e9f765641cd53532d29a87cd5f1e613920fb45dda7bd608d0ed285515c8c4f83db6ba23119d29809c98b6702916a92f778731f6c9fbe9c076b4664ff560fd4218c1dccade3853dd9e942b689a5c3901746d8af1ecbacf88d39be37a9be6f0fec12e16cfd8e220a71e1b0d887eedd4c8e839f66493d3deb40c384b51e7bd2e1e8ac953194ede80262574bbd6aad05da74f81f8013d27be8222ab3f28453cca0d2d9503d1fdcf535250bd879fbc221dd3705174eb85317bc3ef12fcf0c6ae3d86347fb84042febe59624a121730931bb7a1470d8628bc4a3281c8f30f810b8dbafb7a5167f431f4a2ca35f6c0d5efc8078410abb93aebece477bafae1bf55197bed3e3ada602d2cf809b537bcd3172d08f02994fa34df4ab4b25a476621d1a0270bf8f1b7307cdd7e78f72d4e63d01fc4276db786ac9a0d9a70d4f81db4e809532763afc6a385dee26a83faab45236d1ac4b8fd956f57102efdc8665f6eb2e95e8548867b7074eed97decc910d1fc8003e7cd0145b08ad4827678a79f69574be316c6c66eabc4b2a0b6c6cdc7536deb02a003b8fe0dbd89b21cf8738db242456cf0dbd8a0847cf845e9409a43027a72dcac375188c75ba2996ea0c77e1502ce65e36e2b2b3c93d3049db77285ff61dc3d4cb4c78e0b9c214c08de293c15da57bae4f8466f0113f2276de915659b6e18a11c5e646d59ffbf7648a108d261065b88cea056d622d0859a2c5e2ee8035b214c6574ae51c0640f8bad2a1be43e2856091b96c8c05758d420af7268f8f1add14b0aecec72dc85aa94ce1170d2dafa7cb153f1262aea484a2a7f2eb183aaadec279be92510aae5fb049261af8d0f87dbb4ff3427068b7ba201845eac90d58438615bac547ea53919bb4df68bf2da3ae0fdd3d51ce8584650a1afd9b7e348ba47d5c18ae3227c3f0ad7d93496d7a31014bf7c09f81fc8842960c2889b5e143209eeaad9cf7cc23d6b2b481fd32390f25d83bb5d1b478c4bfb7ecfdbceaac26681d58f79ae094348ec999115bf1b1cf86ce4eecdbc1cacb28c42df73f8aa6e72479702bdeb046622e4d779e18e64fede8c70454245a448fb1e2c133b7d83741915de3d06d386b019ba9382bd03743e2a6c51274aea9b89f205635c518669e71bb09e7d6272a3f4aae269f78dbb2f360900c83276480f27b2d72bc42746ef6e1f97711761979c1b8426ffe1325692ef02453b0c58c83a5507073a7ff0604762218693bb62386abe29b0f0643e17ee975141ee154d86531b18e3cb8edccbc2a1bda10abf08502df1277f346a03f4b972dbfdfe5e646782176e3fb151c38f1d59da414da1e1b4be6b8cb45dc325c9fde835195075de9ada4d496e8476a8a8328b3ec34ada83168690cb186813de18dd68757017bce0f251162be583c3866fc6fda56619c5f316f8127ac6f081889e6862118488635b06028330817b43742fbd69b2423e16dc720b63389facd30210510f93e37b57d2d773b167442456ea1a1ebe03920fddebf70017e0d7b34abbe760c908df5ead6f20b720963f48383b95c43a24d50ae0ce67816056960bb2078d16815cb49c6a27e09cddff25c5ab6221c076cfe06b82a42ba53797865f09224f61a40257da6da0b2f5c1a1d7c0d0a00e3e87eb6004fc86139196bf466dc3b96e57f80c6e923722e5ead9223098b8a1ad888eff231b676ee55ef4e95f7384add6754f1765359c82a5408547579724cfc12577581b93e608c463b15188b7c700ce1cab61f013e940ee56fe79382e82a5d51b6e7a675957c9fc75982639660a9f8b98d243b70b21af318ac0d3e4072bf0075bdf5bfdb6684b18a2a099665de2bd06116a77e91f006070f278a257c0160004238d53f4d9fa2cd387645bc87e595c56f47bd70116d2e2bf36f14b2595798c5d79367b271f42448b06fe336ccaccc9ac0d1997ac58e00792dea36f7faa598cc6854861a8b76d0be13cef1775b682ac3e9304a37743f99d14d1b2975e9e316e32d08aefd75166fc3fb2e1e26c1513957847e514884a472775cc85e55505be8ee6a8c1d44ddc09d4662dfb9c28c6b0f4d016a290505b812b59f15eac6c6666d55ef1100023c03a94ed1fcab7ab8de9a527742a6f9799ad46854002f54d3682d2311ba1e349ba3ec110f056fd4d936207848fda6b4b18bcc3c5ec807762558173bef8fb8c2a9bdae47bf67c05539ee25593c33a81d0626bb3e86744b162cfb845e4dc0897c6c4c117ab24fb12ad048b4e75eeea2c4b486f51f07fc47d40015ade3eeed594e8352264a3c5a531754cba94f947dc90c5d5a23fc9a85f79456fd0ea2dade2c072036618acf8149d777f8b060ed33612ff303972ebb4ad55466626987ce114b735e3005fe60ac8289c56d432c37216e99671a8b8d699b0ccec90ff454fc1f19113f571f9acce3daa4a840061bf88a9ac3f68b697e2ef2d19aebf8c1e2b514615f1e05681a5c2afdf6042086ea0f5bc6a440c87ac433bca94be6d72beccd19a3079f079d1846c1460c5000b63f6f8a066dcf9076111e8c8d2b109eb8c30e4eaf5d8d7e7c765d97c6f49609b4d5e49571b2897990b95ab22cbcd6be663b0f1743bae8b9442113198bd3f9f0517340cea28f1d5bf1bf2c13e1f149dadf13bcf0705d7dc2e80ba670dc2318a1a9a79cd382d5c1fea2c5d0b31b3114d060b819b277c5d4197471269883353a14101f109a66f9f63c3c52ebb88b4c96e3dd702d6eb03d7a672ce3b0baf59dae53ce0a0a7414e6489378e6fc919d2868d3a515883ff8fcd75fd12b87aff85917055902559be4de3795d9225da734dc46897d1dbf814e621f0b360822ccd65f0b6783b1e0e18aca1a9607ab8a3d71311536eaa14d65e6adc550f65778b8967c467e235f957623c55d90277b3eba96bed883d12d127d412a1071f0e3258dfdc2db93c57af6fa76bd950d3d49b5f95944a91b412b1175e0c281d7910bedbeb357b5ea93597fce974ba6987f0a99a02cff50308b3e5aab93af58fba1dca8c62248dedde43530b8493296b1191b556bde8a32bbec549aa5c5fecf81522ff3a6b002ebbc702258bf0bebe8dd2444a033e749cbd180fd4f1b92ea2004f2ac914581cc7dc82d226710dbfcb9d63166e61798b32b856f7dbaa796659ab9870c1dbe813ffbbba47bdbc7a89bbc045da45c9feb46cb4ae94c1c8714511068e517eecfe8743f4349ab96c5c9e38a6cd922bdb1e1fb9d16e4f1fdf3b8259065d0830c45dd53cf397a95972990678d1b56040841d125d2e84655e7eac558c3f6793f42a467caf351079c5359a1513a2087926d780c371a35a668908da15d4a99c08764c87ff47065a32c2a7d1c1e827e7a9350985bba76c57f60da318703ed6df5e1759932d9bfb83c98247447d618ab79de791f85f8f97bc73617c02c61ebdc30cba78e5fe8ba70ff646123b2cc6ab398b214fe49472bb6e8ffb18c5d54484f901b080e39034d974194c5c9c2ae9ae7bfad5d397461dc3da5051e663939c390737959db994c448e3ff3b16b64ff8fcff25f62c8e430ca4e9b62989821472cbf3ece03de83d778d32b44eb6ec227734f9f7a0a7b646ca32991734d8ea8fde02c45753ee2e4054df1b011ddc1960ba197c253d40294a2bb6a1d425e02725027425cbdea4c5a4bbf35d228cc6cd4634d8a88ea234f01019587a2b157e34c337adef060bce58a4b56bdba4aa848280e9b963c71a7b342035625940e52362f0f308d1df96cbd7360301421d12b5aaca635f3deaa3dffe4835ce687c9e492499ae0ecfee818c9af659dbe9a59c88ea525c68fbab2a6041493acc17a28c2d561b4701839852f558e39eceec06b8ed9c142115292bdc013267425e836d8b952898ecd52abc41e4d43a597f58b9fb514ab99585dd24299388e65441a44ed4b9d0e1296149ae02cc19fd487d0f265fb6de6962f3ca81b014c88095fff2f559e09819680ce1b0a246e19bde6dc1b1d009c5e11914ded304dd36d26c9bdfd462ebc395f26a3832b30b10d7424255ac0272940f8b59897ca4a327a56b3ca6b7aeee16d887bd4d08bf694d5cc7d9bc2248c790c3061402169c036a8429cb4c1ba1ecc2ebee1cc3af9401f03b7a10524233a4dc65068581ebe4aed8222ece90356fd718cd5ebfe08a60c757b47e5d7ac3078a444378032a1e8592196d5f7c340ca79db8bf1eda734cadc1ebee517b9f14731717e5cdff311bd0bb52228fb0e5acf7f168b5d9e395d81740bbc41f4fd2cbdb37dc289c641fd0c778320e23790f0e02d6d7dcf547c81dcc8089cec55eef00842ef2dc0c7f38f074e873587529619eab41095dcbddd0a71561dcab15561274972005299b94b653bad7c1568bb1fbc2ed6e639066a761a753fcc81a28c083aa43ee5337dc8cd6a9a9ac759496271e6809a9c4c1e7f49072b2c5fae0409153759d4a763c01cde46c2a5159e56dcf5162f8cbcb32ef21d2df97b42e6b7b9504749fe0b0f3e54dd90a25fa32cfd3cb9b02416745fc80b7719dcf7a7d150a44cc2a65e1500e2b3b0cdbb498e97d6e95cd2fe37c8379d72eb6eaee82779d2b5b1eaec5ec6cd43972c8f8c962bbb547f5d9e92e3f308faf4146b9a2db33a1119d74fd0ff9b6238f3b4bfc0dc08f85560e271f8640cd75fc7253b97ae54ce898676bd968ff320f95509b280783a02827f861fbcee765bece7d8b0e611bdbd222bdf4d92dee92553091e346e583ea1974941fa5463a48d0f2723c12a49c44a2205874779eea0291daedc130716e3940e11e00ed60f08ca967c9b334b53e3f3765cbc29bf5e9f6b3666fb4644d749cb203b71dc618ac43787e9cff9e12f3ff4c2e4681ffbc748c300f703611a0ecd466f59d37d9055ba09c53a932d818f32f414dc89c165a23653085502b4ee6c082ea278723429cdac968c7be6a3b93721a02119b3d261ef6266c9a5ee0c9d6d5ab31e82d0bcff19305766ad791dcdd263ed73b9e3e853d899c25bf5977374f90e91aee2506a486908cb128096ce0ab326ec92a7113c703329e3c9f7421ce9044e6768836df2f2af0893d6a57119693f0742254397844a60c8f82ecf7d8449b8db010f467516370abee54d97c01d1ebc2841ebd5d722898152a2ea8b751c8b732a8780dfe60f8e5ae456aacd01a1f1b7ec9395fd6d289ade8bd8e771407f8cf71fef9b2fac5eb4dc2092f2f255eb1afd668c212c5c7425aea5f70520c4701aa0c9b6f2026d0970c0f4160b4b7534c35d0f16dba65c118be0e87005518f2d52a34e8821e110d765d5eec040bddd946f3f4d443948a8c7d183331e3aed016c55fdb70db57f4dd2767eb404b6931e8e894549069e4078a927b75a90d81808ec67637456e2c89573f5f7fada412917799c4442649e709abda02ddbb268c71a1a1e3b00d4124e64314670e3fe29f3bc424e8ada84e6eba03de077533ae92449477a4bd2e6dc9c8fd018d5b42113b2294ad0306973ef69fd67c225f7d5d18dcae5937b7ffd9ad7253299ce359e0bfb2505cf37842568a5d57d2f9f9df2e055a5a74e211cd785eb4510ae35831c225b4bf9d13384c7b409dcc6a99121b888f63038e981171f110e661ae814c70b9689545918ccee0de35ab837db8d79961832b5b6e221a203baeb3387a8ccdadd22358cf784155b02fedcb2af9ab4341984c6b770a8e45174c6ec16a7051f88d3cb914cf9b9ff53592e2fff5cede36733939c3ee4f0e7c697f03e07b86c08a4290107483cc33a71f12ddf74695ea48992828c5ce2c0b43926541ced3d1b637a65e988d4fab599e3ea64db42a17a80d2b37bbd116fb30323bf07641e9aa26066299f880f63c051610e83bfbc484eed9df0a8bf2207f3924f575f09348f4fefca99248015167370c4823228f725ff7c2891765a73de634cd2c0000fd9ebc0906b930ee1d74b3accfa5d1c74d5a2ee3aa0f40c177c8197219ffd2cf2701f2ff58cb8494991237e7e536e4da80c194f8686bc1053524762f926a90817f26009c632be595961d29879545deb103d427ab3afd3c4500170b49854052b668c08ed18755dbd994b1d0429b73355c9e355a413d2e9f91036d845be8eb8b1bfd04f58963e18cbbab0e404188002426e0a4f1016835ae87528d83e5790ac6d3f13963af9e8a29b68c424aedcd67b7014e0a76c25533b30471fd52f340fa149e2ed7d70862230fabb223f169ed9009e588b5b9e283f5282e3c1bc23508b34418a4a44d61790e1c31623e0d2cac7a95846b6299c080e5bb2b317159ca76594d17894b5cd9d67b390b426044bff71ceec1b53866d55227e081f9cf10e482e8540ecfd0f6f0d0ad9b893c84e6d8924f966e5591359e5a45cc1076255243941d2dd0eaa5b4ccb925ebae7e712c94de81d8fb9109db8ef71a19956c1b69f66ba4d3518f236c1f752cdb8879d312f08ed9e80904691cc8341f290483a9725299672eb5491162e3331571a1ccce695dff57079aa239604ebb3cff322d6f34f060114cd53b437e63bc5b798de0f57c9558509e5212e8b2a5c27fc7c7653516305812bc1f4796cc4904d639fb3307ce7bc8690f3dee9c1616e89d7153ab7c7b0315e8ef41f8761c2cfc846a7fd59206add6a57a50e98959f13683713ded816ad608f8e30ca240ce7363db3c46e5c05ae2db06347bdbb5d336b6e02ad6d7c1b609f44a285af38dedcd516bc7af9741ab95becb18fd792be03e1417e0fcf1706a387f25996a35d96c0cb5f8fb368a02f29b3bcb14f372ee99942916c0ffe417e7f4fc97bd8d223b3f0286e8032319de808127a944b245c3260d1b4f502f78a3bed471ce30f3771221671558c99468dc45d2074df3f4c2fbf26de9059aea5ad8cef676360a331411c566ed6081f8b89e5f009fa028f1d49ff0c3c8aa41b946d543cfc47d579c0331145dbe6dfc7773eeeab2d0797ee2fa00887cc47a2ed609305ddc624b45c31301c4c9f41a84b8456c677041185f08875225084edfe2ca5b820e0711a791db6343fa5d9c4b724160ee7d315d83c1987e389181f38c5097720a6919f7a1eb902f3894c381c143b40d9a350b5bd285e9ff72305da7589d7e1770672a07d9772508f9e4a663cb79902389f819dc9828ae07c6851e23d0aa8d598c7832e780f6a512bbd03effd20523a6dbd0ce0e9f1fcb19636411f1de3f9fd01f950a892207bd1d8da6970d7a4317080ee86c9997a5d84e425ba6fed404e30d61fdf42a5fcc4f2a3101682ed926e1f8c8a3b2014e834d0a502a337a4abf624c1996a6dfb65a95e66f11c03c9303be6e9cd860f2ed8001d5f21b45a7eb99d8b72874368ca486bda51f429ce787aafdfce3245e14ff9eb380d59cfdb07a0b3c3e83441cd2bdcd3480418a582b2b0299fb997352be8e0f6fe7a6dea959a7ebc4112d514b69d8b1bbee9683c654b4ef9546a4826e2b7ceda0a1dde3773839c60d6d18aa6a3d1378e3d56dfa33ef23467001197b75b9b50bdd6c66b59d72c6e52fb6f54190666a367f96334e61304468908a633bf650fc786707f15500d066d9171d7502a5ac6946c96543eb1f0f416eeb67dd2290bcbf98759dbed782ceb19a178f40e713ec5945261cc0c51fc7578246406c55d0a01ab7077b11677891415302a9637eb02db9ac96b2398e772ad47c2712cea3f2ccbe96ea50bc84c141bcced3a5f994ec99b111fd46c7cd926369692385a9d779822350a5e6cf68ca1d217517467444245d9d485f4b753a2c4f2e6fdd2c39ae05b912191f6175d44ba6c948b997cfc31dcbc8ee2932d7081f7688f7f58235b7e369246cacdacd95970a8fde1127d74e0352545ab592d8ee967d81c4c64d58ff7ed9f5e7d80055164dd9a0089e37eadd6a24e970d66d9f3d134bc60f47b3afdb5fe695afc81cf4d06986f73291b3a249fc8a42f70e23bd05c50cd3bdacb8466fdd71088670b00ae8be5ba17cbecb278c1640f0fad680b7111af8e8da778506288224b9ba89b10f6d45d1422399d3f0cee87630672438de79b57ec1db7cc3b2f7d83506db92b3b5cbfc2eceeeeda493c435c46827d831a5c3116c9679e3711317c6ee21c7219711ba85c22e36088f59738bd13cadf852aadfd6cf055d46c53d5b02096db7dd4ac2d0eddce993783b5f503dbc271f45baf9bcb71fabb3b251f20d3f6129a737945331538a95f92ef283cfcc20977cb3c57e1293d65c6e63d33f2865f0a6aad5e19da0f7ddf951c970b65c524e855ba5e74bdd9da43bb73ec31f2d1160bc5184c483e8a39f9472b7132496135d7b02af92189db273f57f123c55e04a74b98ae00e64f0f683bff53ede9a31dc97f187426817706534a26a4dab29c1cb83b9027efa475f62ebd1c74df51815012c4ffe74da8d93e474b38d9e1bbefb115af26f233945f8093f12ca8f3952b241f3b16a04cc9a5f1026836d686cc7f716516b4485a2382f9e68804064c6b68c880d6c5770364ddfb9d599c76c8a61efbadea0c44336406881808059c206059a7da649434d675ac17626b6cf4d62d935adac83cd35165a309a7c53214b1c63c609c3a2a1cfabd041fc373371e3e8a7d1051eb410a91ec990ff56951077d608cc66a0cdd729a30a3489c9d325f1000a516959c1a6058004ec001b90de094a1305a2146fb3671e7c14edb91e69b2f79f10c4227b841c584dd8eecaef92cc9224a8b5d9ecb699b37d4c4290353cc9364f75c12634a4d9cb675a62b0edcc5a02fc3cfdf172472d97f2e18406affae4adc9f7d02772952d4afd33dfb66f49f96a3522d00f21bbf6f2949c183d8f54beaa5e39dcc82c560e8394d30d94ad6d629c3964f5f6a8443cff920b7659268e9b3cce76d840a5240186b7b1043f66ac7a13989d82cfe64b5fd005cfd89454da16226ced9168fb201f10902f246a24987da28d78bd55b18b1e1640c42c5e7bce1e4111245cdee7a25d9be45118e12fd3639b25fecb09299ec39efdd6c0cc2943479714188719760b4ae243c3bce94d1735610323e5bf241da13823f46e8764dac411f2882ac82fda6c615007cf96c4ad8099dd9cac34681248bc8aaad6e33ca0c6aeb70787632b98f80b9a4408e9b519ef2ec90418e08e5dfca13d4c987fe295d0e2cf277a20a892f8a21bc0c33721e7eb38b7111f47bdb2763c512cdad5ca7ef900211a833043f3fbb8379243fa6ea0fb048e79981d617630139904931e1eb52d9965a2afc518e2e3544e425a878d3b45fe59b1628f3bf2d73d6e5f33e95ce7a2934df62e93c4c00c7ae934eb074211eda09ed98620fa967bcbbcc7df1dc7536eab8727a4da2afa5887543888081595beb7a4cd1b5382adae10fb3e1303afd24e0e6af1805de45a03210a43d5faa95777b2fcb8d4b5f87cb4c315417cea6eb4e5b20860824e09c35e122543adbd73c0d6f3938aa81fc86f40fcaa0ec5891316165a16d628efc0c303003ca666395ef5a117acfbdc3350847281e73eaa000a9dd03fbdab5c57740ac2c871cf14a8520249e9e959b86e3f3c508a3501ccc72b8d0d83d37d29dc4a2dd67e91b7dd49b10a0c538bcdc5786ac1a3af5fd63fcfbfe75b86325b10f4f091d6bd55730e39b3e057914c2bb073cf1ec6101f63acd4f0260531c6ad9dbe1a0e76683302398902f92e695c4d2288caa1eea10ec4265e6e9065bbb61cc28c4d7c99ab8df5a5ce4cd198f345e829724f64e77ac5e419bb3833248e44f47bfb1b43515a0349e2f51fd3731ea2d97e785827930942ef64858a9b35bbfc5436744691030628acd20709aada45e21a73a991511db051155e17a15f15d7ad6fe2e406bf4ca681bf5457a18f30f64f155a0b95b6ce3054b88a33cc98d91d776cc9f2b0133fb3ff7e081ced2068e917197dd5fee8c3cbce3ac1be704a1cfd370f36f4767eeb0ad12d88054aa99a7feb5de732ca1b9a389ae5f55f2f2ea8832d7607b10ef7c2571fcc23d5d5f5c9430bd39eb6da4471accc1290e7a48fb1b7f239cd4466a7861fe5cd76543c964eb274b1054740221e4c268a64bc4ff8b67bfeb0a22e608083e2285b8246a16efac4f13f7939b7b09d01fd5eab88ab2fc5fd8c2045c8a6f89b05815edd33b453195be39c5c9b5e79382367772de48c9cac80d47a652343ffe17d5290f41b09d4440f6f7a2f7959486629c61c729c9c410ef734263e2dbe15611091ba324af762c4d51f4a91c56629dc30317e886951d3b8f0a7feda198e9cf4a735eedc01dfd837df46519d86b043e86763d50e41dd1be1ad9a0e8cdd5d21493b2ba7a703a8248edcf11d8ee183aebaaa4e377f96fc8ba0a4d57db90a01e0e308696cc3c9192c598b272a3f0790a1110da83cc67c999223e0bebcd03be71549678651c08b41cc38407fcaa93a97287596bedfa66720b8e05b2266c9fa3aa1d65a17a8bd3f3eb23a3445dd9c6337955f696df20dae2ceb7bc3058cd88bb2774781619225554932370f1d1dc9a0563044ba0c011633838b86289a7c69de639f104b33027b49c1abed0d4e299db420601660b69805837747a4656ed413cddee9b1acbb913888cc2080933ddf854d7036dabd50135d16c943888ec769b063f8cdb434a5c2b5d3f5dc39e18f1eb0f3c7679727fa75c34540606c172dd6e8e2de79d91d07765dcf2798efe94ffd10c1cfaaa2965dad41756d61b9aa556a1917256c34c616367290f996f6cc3908034b9e5a5e4d99ed39fb0b6ef1addb5f6b59a2a35fb526530c11ac1efb8782d7de438e1548067eabc147b22baf4c00b6b41ac81e9083b4381c2d2b8a09fb3a15ebc044de8af81273940ce0a3d9baac408016c463f6f6b156c21f49b9101abdff6dabe9b17748fb3080acc9dc268e72b859495b9686363bf9ddc05fbb755155ed3aa4888c302ce7256fac5bd011f18c8090b09b268f595e933e9cda02f89f5545ec191cba71fd3c57278347b3ef349d982266b39e03f4b3e4cc6d55cfa6f74093f17a920a0ea9b29233c409dd967e25754caae2abed31289e8d0e349b1872bc2d835cd00638a4f1b2022808bea5fe5966247247d4a1d8326312cab5902ebb666ae61f872513d3636a5885f19536cb98711caf2a0bc8ec230abe8bd7b499d2a3d3f319104828b685c18c24b2593fa5d1c7ce9f928b269813e66997903f8524d2b5bcf66dc73743170dcb30d6acc3ffe4408a8683d82a05513537262cb746d35f0ef33390db9a72848b568477e74f77e9fa3f37a3bb86ba5728d6d962e8e2b77c1c46b5dc3c79dd08cc6632ab49def984965e7d5960aea46f377cd3dd692f87beea4bf6b8e75cd23bea631b5def4ce377e0fd1888f34e2ecece44e86fdaed5bbaf30dcb749226d6a46f914b23d4c5baa7cbf2102a535e8339ca73e74061153cfd71b563ade76c6946eef49884f15cecce73d330a64069b79ef2565dbe31cebcf211963128bb1a6b03477a23af2b9d36ff8620af8ec9bf4643af06f8747dae2454b931ac02794da9e84131a8f15c2d5f9e3e1e2064e4e31873085250295a7910bb55f1d93343260166b306cc1ce004346b7ff79116aff333a610131c8c911a780fe855c4db3de80182c1f92478c07ab781a5970c7191ee643a63238d76ab9243acb819ec05b846e92763077558740cebfbd06feb9fcb4bc27daf296d276f81a2d7590ec7c0a7f747f7fa55bc21a79154e7b11acfcd1633face85470393a73a397cec804293348e86af2580503efccb7b8e6feb598ab76af327013705f9c09f095c54365278efd0aeee3461c78032639495b20ab8d3f69e87c103bea57fdca80801a7e6d27afa5eee3877f971f0610ce8164f893a17323089fb7763fc74040773a1a674fdd1de0ee777e96022a1b18b6854bb16bc80564956de3c42f12d4565052b2485cd95ee18fcdd4f42cea0e916edb69c501c6514b5a115e0e6b01ca24057a9ef80117aa33c24272e1ab961360ebe1708770ea361a747f1ea237dec8c7e36afbffc6d9088277e8ca89be8d957ac7c7f80c0b69424cbc973d94c874f2c526a77fb821022adb7b90aafeb9387753082cd2ee7947575971f7367f330a8abfd4530aab44f8de18b800a7f8ecf3b2b0455ad50400794aee13f5eaef7a63e1e71db59f9315d86dd60363221807ba2841bad3ca9d1984766e84f3296328e6cc6f3cda8907a5e407e97774b079cee44250cc65dc0430adcfd523f01eeb0c2cff7e323729cc413ba2629861542c80c25be9bad74b1c78d2ee6f330b8a085bfd16cad88587e047d3718ea6c2257a0292c0e5235106ddb7e18deb589bc542382e8d8c963f878b7b9292d461b0aa6539a82f937d7311305b2201d0e80bb58dab041d68306b6aecd224fa9c5ba276085fc8d5a3120c06b2544e5f7da70ee6a266bd7a337b62c1c2d5ca3dd1d9ae636a822e513d4cdf8364561598fddb4e5a3803160571ead9f53275fde46ea19595fc94d82ebf68aa43ba06acf4f3f942546fc67627c6922f6c001e5934704edebff7bfc72fdeb99090be670c3e82058c2017466d48fbc42ed9b6a84668f5a34f7b43f4785ff6a4c6b2be35bb0fa8738acf9cace02467ab9373970545281b46dda50348fd12478f810f1f028b1cba220b156b3baf46b5a9865cf1fa6a103086111d70fd57d1ae1622620d335991fd1b07c91c0f96e51e75626fe32e0b59e2457ea4660e58f3a398717f8677cb54666cbc63e5418d041c5749c1538c44949e284a1efe5f091d1b5adb47a0f3a854556fe9d71ba1704290f3e2f42acb1bc9c20ab454282aba0767c2cb8e073bfe1a36301dcce0c80980ed81152b132fd8774e8fa9dc7dd1f52302f6e4a0ee8a7bff76fc03c7b859b39468804a5975fa1319e7f177db02bfa8c59ab8625a077faf3fd3f1ffe0cd00c12a27e2b4b546f40a449483604a980cfecf5a657a8df753ec0dab9bf06dbcb20749a351efdf44e851b9ba7cd364c30396a9ef3c04a8d07e2c22644accaec4e1ce2d34e95fefa7ffcf30fb82ddbf572c44e0ca3df55a5177a29587cc37bc65fad483f4c1481533f25b6fc8eabcb126ea08a144f964695eff9149061239e2e76c36bb20bf7060ba1ecaa1563d8399d654db953ffbf7b949a62d5cd520d28b6e1506a879af4db1fe76c5c10b938ae4bdee205d80d10cd095245aa92e6ba8f67d2d9d0124f00e0cd4fbafface650b1993e3b6be6f9dd7dc40d6b026abd60acf2690efe4e42e7d63bb029fad4ade78e6a878cb5e33d9915ee11f83b45e0a551b303bcbbe95a67c20e4edaa965d1e5bb0598c863c8278880fbb2f45f2cdc60f1ec175b99d5b6beadd2bf785579f04017d86b2c65f85cb7575d9736fa0db2418da5ae9ba5006562cbf59cb9619079eac6d4c00e6205ad57b6fbf737e496b868b0ca3da24e682ba382055e37983a8bfe0438a1a2b8d4e6cc6e5824174874760fb7516abb1ed70bc600dfc5228ac6c6f9dfd8989fae2c37d50c37cabd14dc7cf048d55167f015dc1270a93527c850dc3e70b75a4116ea20531288381cf7fb73d38d4112b668e4156ece1e73ce958d315be08aeb6426387bf01fe11afbcb26ee10f720e03caa8fc7b45476cf03e7f91c68bb596553d5e750205358077b083fbf40edbde668c322caa622cd5285c12f31ba40f297ad0d64586fe79a492ec912da8e15876abe79d2152c3cde70c81173e7bcfc24d346a05dc690c016b853167fee7fddb4490f266ce307e6edf94c63536a712ff6600313505c47ae61db4ab8fdbd314972e6a00b2cfdbb8f4c1c62c197f3a6ab65398d184614338d56278f8ca8f429ff71536b56139e00b24f81188a119190dda9459e03af4de59b285bd4a4ae3cf2be1a1ea82843ce481d9cc15444ea8e37eda448044e1fc90f09a55cca97cc1fa6d8e1d7cbf32dd038bb6598d6906b9581ae329e4e4ff43a22436c2bc16f17d1f97ebb04076ccae361370480f1b6365cc3306fccf572cfcb45db8b960e928fe9913eeb4f20ecc5f5451616f6dabfb9fe1bd19fdad92b20f8a6dd6be05ebd4de78ab4316428c7f1d0ff63efb13382e088b251f3f8a0103bdd6fd01d7bd86b2c5c3e83d4605e426b8cfd7f9f47b58aceb3e063d89efd778b34e8c17a8e9d83ed6211bfade636aad873319c51f252539893c0adddb8afce6cc229b5c64da931ba159fe17b2705507ee9a97de3d6b939e29a1c4c4d2797dae08624253d3ca4ff2bcdd670401f20fb35f080307e98117800934ec6be58209fe12a8a12ce90b0e66d6aefe01ed38d457cbd7739def6375b5dec069190aeaace08b55f9102cddbe2d313b4fc19f5b17dc67c872c548d942e597016dba7c1289fd66d70da1fc69ba965af1a894e6b02d57a9d9b7c18d3494288471091b291343bf3636c588ac41fb2695070fd3fef3f0282781f3984054c473ec02fe47d3e77bd5eed1df50986b306344703069c11dfdabc93200b351f184312a58551269e0f00ead9f57cb2e45d3a5ab95165d6c104309b5c51698bac9a7355a07421396ae621b195e09ef32836570aaf3e6b81cbaed746774d08b540b52f538a9ddb2601b7151eaed247af73e1497c801781ee656314071502db3f99f03d9971b87f1fb6bb4b890899981a6aa244cec069374460b319ebd0baae8768137dfb5312d2e8f20c23676b0752b0a94b97fa97b5c74092ee306d3c84b4aa8d331b1f8e2e9e33b5fda014572a79feeb5f8a4304334ea4d02c521187c00bfeb2a7017b85d2f3d3a5b58817ad3dfd404f95d61e1fc94f06e4af0230bda26055ce56b589ea981700e31007aa8ea0df07e3d1c5307e9b061e9ac64a72e12c78adaead1c0b41763208c9f727cd5d065462910ea8bb7f1067acb9a35ac71848f3d38055ecd68c2d22f9393e51e8c31425d6a494ba4c4678564d30659dd2a6700b022bdb5ceeee599aa75db17e2e72923d677b182c213a54a467d576696fc09c25234c5bbaa9c2b54d9314526255868667f9189c7242c54c97c814b2f13b0b58926de28d4c2d70b8c49f42ab0514f285fe579957d78f531342e6d6368931c9b877c1e0713991e61cc0aa00572c36cc4501833d57e00cf49bb435ab53b85f2276322e9c169e702727930d7d0f0e40086a2155b6ea56e25860af606d82ee8fc50e0613e6dbcb6bf64848cd36b45e2bdd000e29ed1c213f11ddd397abc5ed82b9c71ea486bad23cb6819a125c585311e45b6b1050a21af8992961fc02b47f15f70342930a159331d2c9d4d0ac5812951d60dffef0fc4ec9697e75d0d723b7596d5e64561847464fb0cab740240725963160abfa8c21452a2b0233512c326b8c8152eeac62a246eb49668a1b618c4a5f353d8361763891308be769e28d6a4dc25084a9b6cd11183ca5eb5454f521a5fd42443656168681c6f78c0d9a7b7ec80e3f8c7e96961f381a7f2eae20a61824a495057ab134289713ea634dbf591577ccc00c7601a082eb2eb2b59721ad106098c802d4ba8ea9a0c6f11c1136615ab38e790a5269e141da28631725ec367276e679b3842ea7d37b53785895e3535000487e7cec00f90629c70599c3683338834b16ec1f3b57b8898c1fd15c700f90266dedd26d8436dc5a3b0b261df99eb7a5ace52fb92af2a0736fe587c2cdb90d4180067f636ef612949df914ddb54b3f405a063d076a0959955eb8334f2bd760a861ffc136707686b6e675dca4434bdfc3ffc68f2ff16c47b27c2e04849cfaa28a4995d898171765ce7c146300ace7c2b8825ada2f3c7a63475576446c23cbe31e21e3fb79737290ffeedeb91d1548af92896a1faec2a3bf0c339cc3560f3137e5f874b0932cfd91ec91d2926553d08a6ad49fe07c320978a460e289b6f4d00b1dc39363b748ea64f2b6bfd44d2bbda29aaa63e0837efcdac548d7149b98b72f9b9f1e8d9cfb5b26e0fc9ddb1cb0e1ffa25ae89f0aa7fe3051a0a43dfa49ea552a15fc9c37b3bd0845ade73708a759f42023b06e56e4d41e3ad2ffa7ccd97af6b6df0b1069e3810eaafcd176b9e950a87914080abebc59827599ca08edb8660c5d4747a073b3cb320f15c35ff56f8358b207e2e74c7bfb719165fbaaef9181a29881bea9e183e95ad3c54cd16687a7659e8d205e5bf4ba6f560e7e10fe0f85765394c7375c1f27388a707299065dc80cb71a2cb83599179a53b7bb761dcdee4ec51b1d6eb0459e62a580d5b3ac4cc626578c33318490285cbb3c3bbf42da6a424375ca71f0c192acfac2f582f934318552d57366bdf6d4dbfa5c3c5a98c76bf37a31ea9baba5f73f1206c880115cd713fa4b2b1c464e5d318601919848e2c2e1a6ec73af4da101bfd4bc09c3c2d1cf8b7fbe93f99929982c7778fba23b25fd77b6acb6b96685af411c8da1671d7ea833458862b29c93da53aed8834c41b178ad8bb2710cc9ef73b6851776c0b631ba56b64558aa303800aa2ea2aa8eaa15a32dd38627006409605b7189339a5efb4436e7c6acbde4094fe25a55a87e26448b9cef8d5cf0d40c99df95480efb2309fdf6b1dd73c4d7be0ad78b16f0c88adb13566e7d639eca8db25f6b39edf2b3efb80d943fa55e3521e69321bcb65ddc3d2775c5f992f97bd50011b2459253b82826c74f0c47c9b175ec48872d73009a92763dcb5855fcaea3528bb9cd4e7fce993aa193ce9c69721fd7f6bd5f0dbc3cc2041dec20332256d1484cadcfef9923926fd420c9cd1d661c936ae3df7083f44332f7c4d25b7f79c5c5a3ef314b222a819a2e186d841b15ffb7893af00eed49d25352aa40385aaa89928ae4a4f38dd2ed2385a8aac9e18a5b406f0cb51e17cdff1b6c448178870982e8b033c6bb61e173af65c4f772005454a6bcafa026f683ed9ac51d91f4bf94306a01f828001979cfd0fbab7fa73b033130b2e03b523d0cdb3f4d0fd549367588abe1ad6e268d5359fefd4bfd45b775f7f3f8386b7fedca886a98d0ab3991275663a85061f5bcdbed096f25c6751a9637e3dc8fd2fa8e56845bc92068fd02dad061b6a956097c98e0fbdef81775c302b3ad04c12a497b7a25a9366591908386ac5969cbfc1cdebb7d6261ed05274ebe396a3879d606bc2b457b11ec2630307a764aed78db946dd03c0d5a90dd2612b2a4cf0d9a5efa8d32c7df1d02d9c19fbc115250e88fe2b736570b3296d2f9c4a1fabca69b652bb2dce010970a5a342f712d6381c416bf7bebfad02468ee7f3ee50691b868e1ea2669b22faeb555024ee80cdc10e465923f113764a6dc80af350886ab3425613287aa6774d7f5e9b5f113a86e45916967e97b936154adef6e1c281c737296b884b68b9b4cec423f6c01f585d948aacfbbc1528e3c63dbe5c3133b54971005c17119b7433622f7e1a877bbb8ce8927e8a1cfd3fcb67a7c38c5b41910b3b35379b1f94d2e85a9962d5e082e3b9c80e883c1b691ee411b9b6017ca716b1533fcaa1529f4e026c4b6fce8bfae7e5465baffefd83c0bd9d295269650c0b0e52633fcc6d04283f463f27cae554fbdfbfb9f482fa16ef618ee31e2718f33ee9f5dd4b1dd3ea8c91877a53103d6ad258ca335effc04c789758cdbeeba8e464ba3eff6a2b9c33029f77f3bbca1a220312c85063267514d93b8adf5427344cffc44e722e027b86b885f43a950e7da6854d21f3674527004c577f1d3f950bc2d5f2727b127dc6a4e0d841e376d77309cb462d44cf863c1b97a46bf80d110d4496cb9b73e2edc9971458cf7d28a86c3ebb3b083c92f012fe3980443b7dda4125a4167d16cac74443f311ee663c129b951324b3f7ed1a8dc8cd5d70ebc849a245def38688ddad557f28d7a7088a318fb519904976002c99c0ea536e2904d32dd27c53f97314f1a94fb1d1d8717760d08f9e1ac5f06a0c0983bb4f5161b6cf35192950c1590e2ecbaadd09fb45824ba68c99b382b851f3cbd58ca78135b900e94a336b8f4e595f9ded98fe038b9133496c213c19fa08040cab8393de35eadbb852e25dc978535b33cde96be8da58a23e7a44f17e3798a502911151938932996aa060eedba64f2b98ea19d213f83b4c98adc2dd1a15ff9e51dc813e5f8dd9572a7c44adacd26aace93ae2da7781f16847c211c17527eacd3744f37b847a87003411b802f4d6cde4f327053aaecc2667c038c526c86075fcef8fe39fc3b6f32c7310a02ebdf0a3ac43836d6c8fc5a65a7340c362e0e2f1cd39382526619b3165f7f03b733c50f76c0796a08fb29557e059e5bf03b39e8eac9ff7c152654c8f95aedfb37f79840ebe3931d64b004f3d06537047694a8ae157e81f4baf4dd05dc1c9dcf90dd353d8ca3e90273926ab26ba08c19428e481ecbefc7cd09c6f0005d26e9b0589830a1c732c1dc9ca20335aa158207b4942d7496f6abb7fe3312abb5ab2f519dc2dd2ef22d18554e71d3c27eaf9a79bc92e983e35af3f26529d40ab5c0b406bf7cbc0a09a1b436165dc58f9999c1c9e7830a44b88c7f51d79b38cf1c30fca6bad0361597dddbe2271b2a9090a06fde6194df653282c208c9948db041386e05220901e58041ea4857aa585f1a3a9b299f5e9e3ad63e53402c31e495f5b2400e301c039aae0dfeb119d6e6bb7340af92e0dde20f3fd9788377dc76be984bf636ee5120a33af4844b51e7c07e9cf852576be67607724be5957b754a823ba3c9b6afa545396d730fcb99944eadc550ffd09a3292404a984204912123dfb11227efecd50be4c27e057571107290fe284d853e3885736a05a79b381d0655f93344cb00cd7569e2062be337b290ea3d3542696d27309b5e96ed9828c0803b873982403fef6a4535f654dee6049f842c00f57416ea2449bc9f79797b1315af0f82135b7324f708c2cbe1eb886a443dfc19da6d2b50b05ee9bbebf755a43656ac93b408ba88cb59e232bfb7b6c3cea61c6cc603e2aaaf0f933815f170ec2db2ebd76339bc7aba0c8c7432a3fa19cd817d8c204d6646219bc841a4458beeadbe3496135cb5e119c159310912261caed3af9bc5cc5c8c6168347a9ef1402525896683a37dd0edc0934ec41343e680fc536592e5855364c15d941938f7ab31def27a035df3afe5a9b1afa1effabb9b367dd9fe630cacaaa104e57da61b86b90cc44dc8ca88a87b7a2e5837ef650cd3b9be904fe784620367742c601a7184a826449b8a5c952dca2e5d6e5a75c074b90520656068d33b3f1d6489c38d59827d38907434838ff8dd560e5f1d8cc8ec547b42543a4c045c4af4589d0838d6749adb343f87885cf85f13b714a0f24587b76737da9d35047ccf06d3e7840500a2e3b45ffad661babfaa46ae95d24d501aaabb1eb9feaf15c5e34713be053a5af7cfcc2016aacddd78fdb961ce5623feb106ba0250cde53dbead87c19a63e06b4c0447d51e9753b6e7bb09fd079d475752a5b2dfd1ec345c617d11d296de17b2c4ef91b139f25a1e90c492c02b53928d0384193f8275044ec44cc3c4671289c37d5a6765b4af0c67fbde52d309c6216848b397dcba84723c2e58f6216074a4e573e50eaf6458a777e95c0900e10ffddc97da181e3397d62046825fd0dd889cff09209bf6c246c730ec2d6ebb55abf37b190245d640613a81d949423c9504a98e1e06ba1ab243d5907d00aefb0bdf4e3c6a78ded570f3fbd9188a1901424671c0c53873dbaef344ba89305a37a6c20b30718a798c5bfe3d5abf5c3768dcb670c0179ef2319a625f0c15ddbe684f49543dbd06bf5e3a78a8e5a535d0f554be249f9882d65aa4b386a3dc3cbdd897d553950b2fee7111a2098e0e65dac472bb2ed9f567625142005cac26ceefd977e061be4a30128969711758c434cedcedc086c3a427c1c4a33c7d1387e22dba11b1f31bed029f59707819599076cdf2af4ce562cf9b2b2504175481cc3cc86d72f433cc6b897ec09721385c0f9697389bc04b7e06ffe906d1393b3962788d3d9316abf75976c5723d70cf65f2efa3e245fa9981bf066baea47a0216bd0fb58fe72053324d94aa6b8944e07b512089beab9ce86b356a8ee6b1ff76664d75988aa85c7bbaeed22b9abfc09e592743122609d1016f2d28bc8c0172905dd6df14ca9865be4e81de7b0b11d0141eb44559a153a2ed5390d2ec600a1d8345b99c6e849b6d01bdbc9d070dc8b85e42f11c5f9f11b198d1f5e7e185cf6e4245df49804134f528cc030f8722a260eb4465a2f9339d0cb64b051edaf9ee5a669333916ef717344c390d6441123db3eb237f0334abe6e7b80b7a1c203e43ba53ef56fb8953cf1dc7043eecd6c88b9286c72ca58b2be78a8a108fabc3d95bb7b9088dcb65cefd8038bb51ff3907ce194afebe802321e685c1d9cbe562814cc2552a08e888ac70d9e6bc97f7f649ed5aeae98d044a93d128fd8508620fd7ae525df2672f571d5a32e9a1e675839e2d2fd9c26ee23d01dd437e8a5851ce967ce3a0b5cb4471e30f1d8d98207025c0651e2b7581dc8ba41aa9e02bea4ab5191da7f27c606655a1a34459b340a39e2351012e0ad91d17bf6de495e071cc1c177ee526aa2850697884dd54065dfaef34f9d4a00b501d3a5b6a79b3d23d718ed5f24bba47819155628e7a05036592e0a6bd70758dac7660aa0426568174bb92b334c752ec5cca2f49d0b6429c06c3c39e0623e824cfc54c2a422cef7f3e7491d943a8137cfec1bf1a68155a95b7614045454ae194a38b11d21eee40336acd4429e94853aecb34a9ef4eed6424fcc5973b3946a8993b68421d6ea642b9a66c3e3d20f3d4612c42ba26b825d72c229f407f3a5d19971dd394b043e1f7796471e6dbd0a5bd09e69a9f3f365eacc2803f0f766530fc5de7ac7d7594f8b0d612e93404db9edce8b9f74459f1355ce61733d08003cecd829f569c14969d475e1b545c4df2fb72a12bc49ed13d355bf658b2ebc6752acc6acd7faf3fd8215806ada5906e3b7b36e8c04240fdd2b3a23c0c233622fcd7702bc4419dc499aa4bcfaa9f42169231d699e3ecec42e533b5cbde2d38789e5fbe3283c46f2954a81535d81aa43833021dc4150b7952ce33f2fcd33bcea094afc135c0688153cbee7e282d85ba5dce6be373a219d1661938d4f9dea3191ff5c11b2a1e07c65da63b47f9f293040317d2cbc367c34a5c8f3cb4ccc883175b8784eb215e0ede1eb57c4d78137b25d7d61b6cf506d7d0fc4f605bcbda3e6dc59559eafa96762db5f2aa422f6ca55a7fee5eb975f21adae453ee9ed1b87c35ece9f0cc4598ab1fdd6233a334704ff86799cde4d3f94e0c0f8eec8b22a30dd979198e41f5c4c319a5ae3788ee52995308e334a670bca62d0282ecdc5c90956701155a9ea87a3bbbda52bf2c1500c0011404c8a967f919e93fe290c48fd4090894dcf6e5f766b0d6ca5f66bcdff912f139eaea61ee30f0c363e4529f4a5f0edbeca2b8d874bd61161edf22c7549ac606bcc63a41325d899bd88b3ccfd5733462f181969a5f6180343cd74ec2726991f475f2d8cc56b6de01450007b4aac9c772a20111828b861268ed5ea942085c6a11a581c8b6ce56478d5794450a0f61c6c7ec809d6610c57aba33313c89587798b252274b99d3a7994439af34d7f1e6704dec3274cc34a3f3561ef890bb612d5143ae1fd0492b0d695ca203583977173330978f90b220e16c477b0a7821140acc9fd42fa9b262ed404caaa8ceed4add892a73e0394bb36d0db89a67f632e4d26daa4bb86e258bd85e1fb94ec718875802c9e95936e87faf9d827868f372b34b49e94af45ee7aadda8354678206cf4c326e508a655f47eb7a6ecb9ef60d51dcc4b343c797f8be28a4b2fb48f4f2a2dbbaeed067233296b8595b9c2e00b1fd856d76475d02ee666549c6a8e8103d99e444eaac92fed584387d6831bdfad0dd0a7c3e326d02ae828c2b6c18a109966308896b91da53acf76a796c0b03c9cf54ce96160c2908ecd90bda41d3f49784379c2a40b24d9565ec8e719810627793d9e82bb6fc563d4efdc1ea094aaaa4e69419c0a71002d21180fdaa06282750c2467fc118643b5b6c61840719cb15865785480387608d870363d6f188b2d136279da5fc4cdadfe6171f7269254e3b3ebc7516e3256573feda31b802683bcf94333d6f59c4d4cdbd1ebbb81d32e932d7c059730472b71e96d248fe5902877d803e3943d91926cd296059f38120db261565c9fe2a9aefe2f763081834019b9900d7157da94fc205cdca18b1e9a1c24c376790bf2ed11336629b8e9862339f06999194bb33a4ee066eb3ccfeb29640294be0451ab7793da4476aca236ffe55884e8c584f2bfda4e6445825b4b0aceae6fbf4c017553d33e05e2101bd6e01c5ec07af7adf8e1b3fd59c32040225747d7afaf7e0af00207547207c692a7c817f50e9a718d051a62683dfd300d9edaaea8d1f32eecccf870690d1cf3d7ac1943f226b3d8af4d9b994137357bd108543f43a8ca570e73bf8e7c4e8debe390c0d1bb883ed74f2ce4afb01a3e2868042267a6c5d0d610a28381c1ee360224a4781d3ab22a13235b1ff7fd90b552927a15c87dabdc915780ec3ac2bfb76642cdf5b4ed496f149efe9ab48b6ac7e692b918e72cd75bbc10edc83a9957911d39edbe98516dd63c0dd08bac49f44d63ac31c2de6336820fa5240d0bf6099a9ac56973e055866eff74ca27302483d9ea6cf67ea4a725cab6b63bacfa3b865b117ebee42e926c39f253500e767de5808a71c2edee7c62673126a49d636e9d9d646344549fb0e5880d127c3ed443024937586db1f2b68d9be00291d7a25b9c9bbd0e09705cf9c48a19ed4a08c92d727b6a03cb2350f2d580fb9a793fd893419b7e22c92d9492ad5b912ffbef4b968e31a815c8bf5b9741fd503628afc502d48f86bb8d1552f07325c498791dc8fd9388707b105c9424b4ea351e1c5533d834a46a03287e0f8413be331aec95a5ebf94b6d7461e50791a70d7f527cc634138bdf58ea7fe85fee3cca4ec309616d8a197e3aa8ad675546d693de09990ac77ea07d7e73516aec433576a99709a9327fd86b45e4bc3ee605957e244000fd363dd08cc13383b7f86e4dfe7d87ff0a71160a54280295843d75a97783c2a94e5ce425c31635d69b7e7d7694951be89774b488d504c7dbd49f141c2bfff244ea08e908cfb14d9055a573366c57e2509467ced7ee5d832fd65eeb6bccae81c1511a507d4e307bf2d60a38118e947186d39114b077beb44df796cde99b49c9b4cd87d00931a025db6dcb2f8f7bf83b25869a57eba631a248546657f3f46e8a674609cf4430ce6b367f1876c3140f7e3fbfc9d671aae3c21f6b1be446f068bb50cf615707729a59d82cb6e950f639a6a8ad92a40623c98798c874c01d7c0ca1c69139382a3168d6f1ea616409005365450d2e50efc63a92db924a42b013f9f5d3674278f1507faf7bf6b081f14fde61934cf9e00eecb2f74745a8c2841a10493ccdf9e429ea1d5365fc444f66ed4d678d77906de61055fe6197c8a7bb4414bcde5ace7ee1fe9116a2f09ca883f17ec4f25a3cfe3a18614652ea85cf0eb243503075501c8739de60145e57bf9436e19e7d772f39826e2d7546497ec18b6786f05f25dc76db96cc8597aee8f55faf51c584111d6ff0e71551991da9432cc5d40203c0031c68e16bf91fd1282cb45b0aca4948b438d1d4054f8555417eab0d34102156174bb23bcb6389948ce157733ce1827a6c1dd93b7a6a4d17a5367e95804b85253e4c088ce0920ec89db71a7191b4686a83a2e0b51ca524d7e15906696f923ef4ca47ec56bc256e9e92772d31964594ab72b652aa16dada3a57e668f0d6127b9b329e93ffa9c0ebedcc03d1a6b26d6e6606ba31029fe63bb009544b8180c48aca1884d8ac65a604b5c8a561764c4a4540a2f05db2c51dafead0a8856cada6d91deb1906a886a17e16c469f3a13deaeac0bed76505dd962fdaabb570597d0fa31da7ce8aa80a5688c788e7d9d963bc1ff73ed7b0675338e93e72090bff4d960b4f988dbaa57bfd6ccad0990feb4ad433be0457b474ed3087cd053216ff0dcfc179088f6a1a69ff315aed823bb1392600940fbdff69b60a324a9f3f757bad87d2f917cdd24da0e4b0ab9190f86308bafca2c62f846595b76374ff67f1e2a7f6996ef3e1be55769f11777b616d7cd0a485505b8c2f0fecdba19300ec48a126fa2cad7b123b86ff8883f590de23576215d639699229140c5b59adeb09f88e35b084d988d69c49f3f5e434e69e415278aba2ec0f2c8c507dd7d05eacf307d2525dc5fd02818a383be95b643c01562bd97c7e0f74b82140bdf7052ff3e377b215412237c9327bc6bb84cd530dd118964b56d137a11200f569d1b444ece16482464eef348a1a25c5c7599860dabbcff7c813f04cefe60f64e4233553f13055a257e2169dfc822f41cd4463814e3350ed538e172c62308bdd51296af0159beab1bfc8bc630efc132bd4a8bb83de7e48d808134c7aab8c8e6674803bcb0b13d61ece9baadf941c561bdb092f3f2ce5b375a7b5f4a6f58c94d68289c6f0df98d74230921377fc16e3cbba6fe389c56f0084faf250fa6022e09df214b43514e512da01c9f4305713614714e41fccd3416c4b081ca69f7e1171180f5a3c9b397664f0de314719cbb928ef49f350ae41c9ea2504bef0992080ba0379e338acff098e8aed094a5a2ef8bf2a5a187173656c2482e3c1a14673ab27e911676d87ddb98a650cce2ac93491ffbff00cd21475ab492c3b3ded7f234578c1ef34b0f8a8063a61af5ae453696538dae039cd329d7d22bbaa494c7ab68aa6b277f38f8bb0f14e0d982bb0f10c2521ca96bc7efa83d2eddb3ab23c7374f50998f47b00c3ced39791b1daec0f96cda205805cdb1e027f10070192f03dc70bb03839f8125caa86d062e3ddda9673ae08c5f6e5e79e644a55204eeff7fb8bf9477cfb20f15679be12e6799a94d8a12a7d6a5fe971a93520da51f050fb69dbb283a72d478be82eb859a34449c5a1e44d66cc72f2d84d9e2a20523eaee37f58658502ddbc04c8eec1d7e17984a3403f339ca8bc4595d741f5a1f1c36038d1150957f000b38eba17707f4cee8e42bb4d5c8664f1bf4ceac0659a3e9dd8fd47405fdd1131ed1cc09c3487779d94635a20375114268bc3c842914ae42648e37f004ea3c9f8848740492bc91b190b4a7a970d870236d4f7018ffe1e1ce9141334efe5200c046f307cde75c3519e8653b2a375222d7d45c672f1c5d0b9b22ce3511960ef7a7cd63ce0a057e7809854688f3c3efb820d1c0d03906164d1a8d0fb1cd7f4ab312a21887899e6fb117a06b365f0952e3707ee8e9cc98a2de2b1043a72b05dcacf978adf7d2b4ea159d57dab867cf0e8f6b3d382992721d4bd7c3b4fe201b90427e613c50f2fade051a6704298fd2b9611b67c3f8e279b54a6f60b371cb8af8b368b36740b9bf72c08e3d7276875c63804b50dd86d49a64199219dd95c13fae8eeb3a6e67a5ffbc6d4b8fb89f263bac1a0e521ee3ac53ac51a81b5190b8e45eacd31bc9bc24f5481f3356aa81e8b7184b683707c39f989716573ca5bdaf4b35764b321bf896e9388e51b1be3b8a1c0016258360dd5e98ae2b47ddda59816ce261dafd54f7db77d9afbdae5086931280ef3804c2565943910085808e34d73267abffe2d5ba7d4d67562da57e91bc3707e211fa169d6964626894db0242aedfa1401f4ffce0cd48bcb17ee4498b9e96943cd19890d5ae60e780c4d3dbee72c30ef7015abf5bdb6dcb7ec30c33e4087d71d59845bdfd441f224b07a78f3ce0fd70492be71738abcd4f04121ea06e822f0c1c527cb46e9b889c7833c2576ace306e5e1e475feb8b79c86554fe6cdd9aefaa78a1f5bc7f2d3d58eac26c85977cf2dedc0b8fca4324a65cf3e71c52e467fb3c225c0c5b7ea8f2d8f82f572d762fdde9af16ee69851ac05a2719f1a374f836c07ac208bfd10e42ed61d581d6077432749eb6d5a7277424a743905bc2882d308170f1839ef63a097551c4186eb26b3afe04abf25aa4eab9385bec592fa0f0bb5288625ff11a2fb7ffa2723a0fd3a57c1d0227e546e45e892870cf05d3b429c9bf26ee2f4c6f578681fa629e1c7860cc8713e96ebe36f19cda0c310ed87c70d81d4ca0857467df30cc82ce3521831e1bf769e70bb1d173ce80337d0833084ca67179da5b10dbeb19daa40c78e7bc0144ba161a6b3d5cf2e53376ece663b041c0a5fd9f6db732e4dbe15be0194768c8a27947dbe6848da8e4467a4e6749580228e524e4b338d6f8c55bd73ce96e13ee6cfdd04fa5edac42bd5a8c5ce786a71a81e7ea2c7f00281aa3f7064b3c789c157463c2828a03309cd88e3ed26c9a58590effb6c3b64c8b35888b88b53fa77ec97c8eab32b0520ab89dd9e53acefbe68176f8971c834965a5bc5481c01d65f95223fd46a5784f523683015f9608551a8240582398f252bb1beb7c1e289adc6daf14bd1b61d2e2d66cfb8b3ca202cb02d16bb04d0d378800525f645c4456b9aa42a9410c43559803bdb9c15a8bc15b96edc25c8e9e7ee6b7de14ebae6b6f7050fddf3cf6ec7fb882a49e9a7e69056bc9d5d58c5221d28538209159c158914920e1075eda5aef50a94e647481730a3775304f4364b48c642b452ec8e436950895b6c4007d3ffed48f4e0d0d2b2e47a3f37758fbf1ac946b9dba082e74fe3b5c6630bc0fabb82a734e1fdbf65f92a465f4de8a8792015a734ae651d322ffa9374f6a0c84bd0aa200ac8a367ff6bce5c233ead608993df8a332f6b3a4692856f202b28d04bdfc11f81527cec69163f5130b3c775577c76dfe6907c1fd02404e13270b2207346396c9e53f40d7e2ff7379f9e4799d9ce8c88c80d4c38541b2768178df21bc2e71b147795f364b58aaddb1272eae66fcc4cccd92db9929ab0663cdbd5460358d68ce613be9209b2140e517bc87fe7e72929db90d6a2b707bc20dc57557f33006007ff675e0864a689e986f3d3b86fe6b113a743cdb4e837e9c9f75e37695a3f7a349034992994360db0772630a49846a4fb6bf9c3ad890d1fa2e5d7960a9c1cb4f0af614f8aed43205e8b375e807f28d8d3b373e8902b26c53403b64c37d45b0a89409330357e6c0216d0dd49f85deb1a62c29874bc801563f7f8c8f4cf6fb5bdc417e5690cc1736d23342fc64d938eff4e9b1a23cb81d5c76a75401601bc615080eb97fc6efd20cda60075c5c5758c124795baea5bfd382b9ac255fa36fb5df04bf4b67c346bb4ae569809bb782c96abda11216e6a02598b352d3c10e91ce74c2f16122e4fa6e8ad4eeb6a64f8fb1995ff6929c60481d7f1c760523d3becfeeaa6a582468c78fd1a9679001aa8c217f15b16aa660bbe38a3ecdff2bb59a05b131da10df550f37d3a53bdc1c717ff7f5884d53bbd3b00dbb50ed3985fc04d41abc89d00f5b8488ff735cb22cb499c327fb95ae217bf0cafbf4b8041f2cf7e124b775bfd875cf0de095310a565dccd5f4a917210713cee3d3cd29d7cb3a4069fc1a5f9ed971bf550cf0460d857c61560bef0ebeedbb70a71d824bcddf6cde2e7375f04fde8d4397f18c90af42e6855073cdbeee8b005cc19025fc8de65a178e63d74e3afa53f78537d8a439d74338e012e3dda8af03d4ede0df2a15a38b1d5a752259c62cc246648d16a4d2e1b57788e1f82965001105d5d679880f1f375711511056143925fdc9e06e991b98ab1357990d4d413553ae9936052fa4b3a90c99c8715b1368a0c05252542680cbedbeff91e60c5ac65c4c28a6e473176cfc43da6882149a99fdf1d5b4e497fbbd51ebc4c445faedc4dd38c23c26a657094ccc16446cf4cff470c51d14bac416676161b97160f793d7f1fd9b9e401a09261a2869c7fc0e59ebc44b8a743d525a586e91d89b38e9522b22f82e62acde74bcc3f0b8821beab8c320de65f74fa754272616356d768f794526fae2685922a8dc1ae7e04c811c9f639b292662a6653fe7c066d468d2da53202b1b238bd89adf248a0101bb553767f4e23df150b934e8abf3dda57536cadb371d505d894e58dab742a44bfe8c0122af0a8d79aa65b9f34ab227f1c8b4d5f57528f5b40c0e1060faf02cf31e7d7bc85e47b6dd7228e733a71b6204ed3982d824c9e6e97a712e9d835e53e6cdf9e6bfd74204ca55a462178726f8cf54638b3239348998c13ae526cd9c884a6a0d2789be88755a88654cd307843d10396e3b095e0a4fe47f21c5d5bcd04c61c6e3cefad712d2603cf7398036a7621d92c05dcef0d69ca77828125388168c798b45bb1446dcb4b6fa4515ca5664827275f8021ae6b974d0015f19f5fb77fc3db609af640ed10477879669539ba08ef12bd30ea5b407740b0bf22bdd460eef928581561442d618ee510126fad7538a124e5d030376f09e16d2772a2bff4351f6941ac00700d45ea4e57a02e5aa1b3b7fd6120754712815933ca6930243ef0d4502e5a0124cac64bc28c9818297f806958a6a7b8a1634ba6065979d27d7cb1aed50875241a37c6ae5377ed1f514ff1a8a7dedeb7e5cb2d82e0fdaefb6e72d9e65cfa7e146d1d86b88f2d9918c53ed55f582ad0252ecc956e2d9a7ed3b60a05cfaf9bb9e94d08fddb03489dc24a9bc1b32fd3dbce69c213142171923e8effcaa51d7b3b78d20764aa87cb8181f4787b7618c5134619c291f0a215b8221132662e58b9b7aa68cf865a5f94667da8b562b26d624fa4e12e7daf0843c733a27a9b38c4b0bbea57393d5de2dbaeed2577ae886b9eeb906f68d37283007eb914dcae06019188a8e5d6cce5ed9dbf655a71e67f3f496f3c4f8a22d57ec0c35ea9868e1c00ed4b95d56b6e74428efb212fd3fff8c580ec79c80b8a14f9f1e17757d938f20a474808ba7cc61e0307f95f83d47bb9e9b25874d864b6f1c39c39867ba3cc486a950f5782bd7256bb1db115afb8dd65f28d04d34b801001e766c158ea9bcaf86f302fddb5b8956c0e7fe0d0f487e18fa5807c137f73f371fe86c155d967276bb89a577820616f4c2a68ddb27d39760ce3748ce408e58f45a2b9183f5cc6b093ee2256f50f1d777e0f2f1111c22dae1692b255630d2dad0f5ddfd79d4b0c57d9b57482ec54aeee5ecbf6ed8396d198a48b2e7271c29fed47fc033f5d04178801ac635058505e9380658d7a69aee09ed95d2c3068b6baae789af7d0edb284db95a253be4329b8ee76580eb045f4059890d78449d24d9f707b152013795d398b191140b140e99bf2d22aea935d1487763b2f2eaaf04e4931e11beeb04064a09c6d4a7be27803d4bb3870d3ce1eb6ac726508dd22b10f51cc4a79ad0ac680c27b65e76b3b24b1130e642cc4a27e464a4e4f08656b5ccb483c435aefd69a00144ea325315a76dd4e0cafd4eae267c18baf8dba42df6af4673873b589f74709e709469d9de041cf1dc8e6651bc4243b87d1857ab3299889ea58aa75b9d1267aab30d1a7bccc98b1cb576d4985d51b5f9aa997307f8c7c9fa1e3a21a9d5a6fa4e155572afe122d75f58ce743e9dff951b4f5adf7d37595c8367eec62f3f079f5a4785ab379d2284efb2072d039d26a24a3c4ce2d249c1931c822e356d4a20972c100583c27d75994f830c33297e26222abbc453bbf1da96a41e3545dd4cf97e4234aeb75b9bd767965882b294efaf3c19b907937a99e197c679671f04990bc849b0bd888f45e0175be15f20dfa6d0231bfcaa89881a2619e28d85b054b8e6282fccbdd926690210ceb3eb02f4522fa45893a660f802eb35210461c9faec69767b67aeaddc7df2be041a8f4c0a689c0a6d6fcb2eced519304dece4cb8ad62f44095faa50c45eb3878c4a2336a4fa0ff1c6a28e6970d8a10ccff05a036ed64a2050698834f6258c9833c5bce7c294596f6a7c930ed2bcefd403abf87a665eebd2b83076b516ae67e5ef36b67b82dfb7d7782d9d370a764c6828029ca3d14df88bd0fd906e0b03a50849ca785950641917a122391bedfcfde9e59684a7b6d6ec0c4bf202f009b79afef0592f4344fbb8ec08f9a24001852f848f04ead6f3b57b317c0f3b9ec6f58e87595aba5a252bf87693864182c7ca8481b5789095ed882228116babbfb178a4a907601ed51a574a3fd4d58e8de8fc39d60aa7987fc688306b1bc1b942b1b1d1f13f09509f444c539c4ef2b25d483298dd4a2cb3dcde9107336c6b86e537eec6d4dfe05290931d7e2e113307505a5abbbc895ba767f968afaed60feb43ed8d049e0dcb88f2e54aea30e06adffc849c72ae12921a3a74b4585b463246a3d9df663ead18726e47f4475b95cc7d45dd193b6a5c4baea452bb3b801360a873a7322bdf29b010ead08349c885ff381d9269ee3b0e280fa5eef31e27f53a239c701b112eede8681e535ad75d308ced73e0db05e6ab19d33ba16c6ac45e27d2a4f80276e56df0cf2570162d9c06bd5be6cb5b6e8f3da616ed6615a98ed4f31686a403c963f6717c0a8d924b463df61c2358084ee04f660e2072a5342a7a36256c95206bcd2a87e52467c0925c472d21dd132724a4d8bed4c7b8b8f62355f163f23f399339b8ab19b08e76c3ecc69f41859421c82adca3553587b923d8575e9c25be296eb4c2599d15d116df545ea8c38be60c6d163196f980c519c3f12bcf53851692ada5b8686f78e97facaab165f4d0f62db414c4b3d9fcf340dc3355867c44ee45f79d21608b8d59a5e343e2e016cc6a42cb0d0f2342bd1b4efb423e3e6b22e7dc89ba2e7430e2087e2d31e97a7f5b2e52ce58a014afe3252825cad2416e0a31aca9b01a85dc81ea3822d5b3395ae81d5f3cadaee657738b9a5eff701a71afb5616ea850fbe7daea6d05cc4143041c3965795c6984d06004067eeba27c0e0d622a05f13e628089ca6c6ab56b3d1738e62884547cfdba6d2e8e5aeb8371338bfab086783481fdddf0bf1bf2f47556d6196885d1b93b9a5281b6ec695e0e345c1027a4a702104e47d2881f5288d2decced813a485f09d203d85b76b5d87f42a1979c157b46ea83b429f045595e93f7583f67f16a5886d39e94d71b152d927bced47e231ec7d9e8cbac13f62f3a48c845debec893de621711f9972b93ab8cf33a630e9fd7ff96c7438eaedc72065c5450e51aac108c19c651e53babda35be6a508a0993b25c175ba9dffb9b6828c3b472576e4a802ce90a3a8e97763f562b7bf52c49eafcfb6e5cd576be0cf70321c411ae336faac9bf35591477c2dcbee8586f26b5a4e74016e323e01d348f1ee3d57bb13781e60e945255da594653266358f00069b2664b8f4b36da6047b410f90a5caf6da4ea3fe0f8001501f054c4880e1117d14c425f77991ea36679341cbd75fe4ea709c858ad1d86a9a66e6a6d0d0c4765501b6cfe35dfd97f8052afc1a9aba848589195c7d68e9ef7d8b38b2fae81d1faf15153fa28d53cd92604e45f87eb150806b7e9f070071b6619e9573bb63837cd053b94c3c1a9a79b37a24975e0c97071f467dc7f6011a9c489230ca9a526882a27bbf2326b57a3c4efa737bf2ee4d5aca3482fae30c9032724552221cfe1a01de7609c1ff07383855744321e2a89711e046bc67131730ffd9c3a31db0b559a7a6eacbba4105ce3bb98115aad0c685c042032bb421139f5bed930aadd26f56e546be0c61516971ca53d31cfa55ce0fa42a62fefac02375539fe6c9df7aeb7f1df026c7a34f28cc34d9ed2e03bbd5c91ab1a058bc0320a3362336a32a8fa11e2f7085bbe43e34c3425e3a059879f666568d3e0430c7776e95c2cd22ab0d7d3454c78936ebee2ee14a2dec3b7b1c65ad745029b2a5104e6d4288b257a82130074b5c79e6def737623265d3f4783e2aca447fc4fd18b535b48ba8f9e6fb6be8fe363f97b9f3b77c8d62eb2ad293d0b175d696208c420457f130a33b4f543cc8f56267e19023592cd54ffd64e5dc7bad1d802a73e1ac59acfab0df4ac08d2af56965851d4e873855409534225f5da529727bd676205735e4daf97bab3e904f23e1eb36723b9ed2a74c2c9af3358b06acadc84b207465a51ade7ff8ee34972e222cc0a2702171936f5c5b76978fd4ff900342caab67569998066cc6b6cef59053ddd60059907a479cf6441265031f84b9f3cca2f2e3e1e10ad393f6670fb247738eb363c74293f6e52ac17a26e2497f62ba3aaec8215044608cc664d0c73e2d77342ebabfcc0901f22481815a7954d620157c9e746c440782f2cb2de073ab370bd278afff7f6ed465771f7045dd90f4859864881320c6e6e959d1ba03e5fd4e19492ecb9bb159647a5092c0fa0e3452c796aa31c8e6bb0d17b36d079ce91f963b5167068a025f6e49438123a2b98cbaa417b6a1bafa7208b174be4f033ff7b17b6c83174bd90c417385db1eb1068f4935394d9bf167b25eec756e902f3443fef3c441a9a818f35bbe0dbf7096865771585d63e430255502e28b33c8182baf0a6b5d4b7c89b29cc6867dea9af933bbb0018a0984d408393441944c8a6d3f415f33751d03e49e5799aec155218ab030c372f275d23612d3aa98c34daa300e6ad204879cdf14f8c119de37c265ea0250388bb150afc574655fd1b4462e7ce5a25c558898b174acdb6516a0b1af83953030667a2c909b794f76877e06577e25b0e4a4ceee11dd10b1acb7ea5de757918f75ddaeb2c25362a1b322a25fedc8ee9f75d72e85a6609958c0f87d9672ba30d0726b7a6387a15af7182fc5c44306ab874353f28bee1a1fd8f9d5aa1f8c4591d6ee8f092f9e0ef3418e7d8307f07e0429e4d7b7fad7c8e3bd5adc3d9196215a69049a983bf60f2da9ec5032363f60c421ece26020027b75a3beca83f2ccb4048e42970a5948c5c1ff83a699669436110026a6d5935858a3a7996c54ffe5cf5e2557b666d761030c4b9e5e2d218743eddfce6c3ce565077786c3735a744981cf3bedb8143ebdca88417ff03cd97127269f7482467a086a90258dd9d9f6ab282d97ef24d9cd019c50a92e3b9251f103ceba2b3472b5d3face802614fe57fdfb4499299372ee6c59dfc8581c12353990f463765177e3bae1e45e4fe3c18842c68ca2edeb8340f736a06ce5937c0335b48f86b0a97193e2aed4ca3b346d3717c0a28947b1981d60adb51772b136596d43810259e398d619f49e301214062c9ef9d5a0bb52d368ded1787bcebd1772b73795ecb5121bc000b40bbc3238e7fa486245a8a0f5b56a3dc34ffb6b608f4c812d1f19ab73a12d8fd1ee132266394f2f243b3718c97c3aab6ba463297f08aab20bb6cdf213e1c9f84aac6a180a2122e0ae2f9f187461ab07f983431020c8bfca2fb24174acf7403176504755b64f9f86e90b1c07a28ded5e56bc1db156775a173f5b8fa3951d365981a8134795e55058f02a7fc284c8c5366163c95cd24bc67f1bca9f4ab7f5d84f0f613e4e159fcae854e1945557f8f02f14a39a7b979e0b9ad33e92f74708295590430a4e055c0ef1c64d855bfee5ea9943689d3972bb518797b64eebb0f48a44b615e8551cda566c14717c471db4c6628d32caa88a6ce1e317be7807321a119e7f5820cb2ed1bdd23f51e4d04d6a7b6931f743cdc2c03bf40e18660f4434e1c6d638729a507879e952af3ff83aba03563357eb0719c37c6d2fb2343d6c380ac8d26a99b78790a66b4aec7343877171d90ffb0ef37dbc7440f0ef777a994bc5fa50c0dd193310fedebdab697a6b274964064a8ba3ec88450f6e635c448f5f20b9a6dc138c8d5cde1f12fa7d09898a7be0bc618f18d18f14cbdf4bf64525819ba97410b3db69554bb4bcab6f92d6633cb415bc2703b8d15cdfab1e688a38619d13bd72b119d4c3975bf8159a75a9d8845a9a91e47915c2f94d410ec03e6884af54c23a1055c7164c39746a2b3af8d5aa9cdae9435f6b19426739ebb0e4f7cc7770c8c72c0815d0066639f6b644893826d1bc0349ca42ec4208deaf75a88aa2812a4583ac51f94b5540734e1e64fc90d69ed1495cf998492ea22cc5d8d8e7b68960dd0bbbf17ddac3ec9d5b29aca9760cc74db0f062a62d98816bc03f6ac064585a6f82e5fe2870a6ac9fd3099380686f8b63ba854b90be511afe35bc30f36203a5cf7ac1f8b1b8affb37be06206171318572fc75742d6e67329a5b007cc839783d3b5bf23e555ea491de1b55bd189c77ee6acae03d08264e2c268e069cf4e364e4acaa7f173971411019f25c6765371d6d2ff69628744e21d1eea8eb804f7f43c49e04ede55b4b649ae1cd1101b6578375793373b71aea0044b5be1f0901721acd41f0f500e7668fc896af154f3de013a209c8eb40df2d26332e4e8add9fd74553007527773eebf3b6071c173247d1c16af2b206d054e87e2aea2d367c6ff0db163cd300c7f86ac764f9409e1055b709bc5ab7a4ee74c7e79d8930d320991c9eb5a78cee16da5d114179b7e924719167a17ce4605ff0692d6821ec2137b0fdc4165e28c25e895d208affadfda9e8be2e6ac5d1eb83a97c2b85d4f6043f67f982dbd8db099f61c079d0aae5138c61abac7595be5e81d91783e3143980128dac4cf59913f7cd4ab19668278bc200297df4942f878bdb5576c2afe01625aabb9cc86a7755e25077e41c5fed0f018605868c9645167328007765e78717dd54cdac948c2e60e3dab5cb94b4f78bfd69cacda13ec9b87075c1d620ddd6023a4193208a58d9903a81df83850e46d321adc9d6a0bd3ac8c0c3ab220f92a12dbac658ede094c9cebc6d86fadf21b93aeca1a4b9b33949cd19deaddf83d5cdd90c14ffcf49c666f301ab982635dbc6d56034fdf24e5738f08e93584da6c2a2bfeacda42cbc269aad9a2f9703a9d7a61c9234f7eddfb536dcf9ccaa53d1b9440f8b5c78b458b8be3d7f328e3bdbf13185cfa8c0e203deacf69e3410c43035a756b0931ffeaaddd6b50be4d81cd5ae68aa424ac5d96f82a4cfc420bf6af4e51929e8ef96d0d8d092dd9d9ee6fb6959d92bcd1f272e2d043eb4e88c12b8a9acbc522cec660d9a9c62ab1e09f5023df8a773ac168f04d374de60b0799afe16bd95dc330a5586582988fc9321747ae821a57a0d93a5f2ac217bdb201757d48a0b2b6c2e115d7029458da306e4442220dc297bb3ebf7a87328ae239faf1dbb959d5bf671e0a8138e1f3680c8262de5b9ad4d0f58ed4ce2bef98a9c277ffb1aed34c494c792b2074ca86d820f87d8ecafef42a428dd2258e71f4a364c1620106fcbc6843b42777c07efffb962b42bd2b62521a1a2dfed0fc12a4ef36f824fb6c273222030e502477c17cb32226e5e539dd3cfc53f4a34f350cb10708ae249a15326f6f7942c992bac0f9cba9e70d1ade72dfb74f721cdb5f9152cfa13a25c67115b3264af2a84b2b1e3dd60ac8f3cec2aee8f73b01f81afbb26ee98eaa9935b5fc641965b51355c29dd306d349e644f38f5fd1f3cda113cbcedfca25df4c55bb28d5c54cc59ad3f88acb8c145e5434818aa5863fa769ec828aefdf4f3c7dc7bcb7b909a26103d1d19c34124ebac3d29e2950190f2193ceec4152e8bbfc02a8a2c0d6e3f39b1e951438bafd459bfc51c5657032322968f0f5cba3d01120995506a6cd63dc56c5024d8c95197f83a81ce69687f8503dce06c5b39c94d58e2b8cbcd12c088dcd97599a91dd44bcab81cf2241acf60c0c3e23991881629495439554abe96d752faacf9f5c5d631b14a5016a5d79d7769219a48ba4e33868a019b1a24810fdcaaf13ed4260204a3d0e3a26269cd895536ddd6caec6e75ae4ce0fa71eaae0d2292ab6eb948c438d32293c9416bbcb33d42c1cf06c1a49b495f31b4b41be8b1033887b386857c566106900734319588a882ddf4230319dfe0db65f01afa08e62645ae5860a90a58e49308011967b5fdb912af159bd98aeb044ef2fc2b4e64d8f0fb64014855f5299969d6f5e0282f6616f6c6372632e554230992d5a6b6f9ef7f7a084f79e24f38ba45d43b475918eb2ac31b2c2d68cf65cd0e9ea75f5dc9364331c622dc889ba22427aebc7124b4260baecb75ee4b5b76d480d8b516b749839a036aa7c35e351530bc3d9430246bb7204c6f411a1a086704b1ae8570a5e4991e1371b231639e6bf7a10d632b1af20f5b69ec1e4809a1e422f01f7bd971645c5bba352637cc46f57cbeb096dbfe82acdd39a7f4b99082ac91edd8c61bed84ae8248727fbfb4e4d3dfbeea1e216c9d203ca8836280d8d20fe81d45ebf0d2d964f7fcea72b513f4ec05dc0201ee438e632554d5fe440e7dd87e450800f7b533aea774140f63220d59dff59da30fbc56130024760a9a35215a043ea381c4ebb9cab65f8205c97cf2d6923f30e26800761d10478ce103e4229a98c5b2715ebd135407c033c7d63547092b3b23c397d70ded9a0bd1d089fccf16210e5de12dffcd83cf63f37d947311592ef096454c7b878daf93c762da33a4a42f52b96ec95527858ba25978eca2fc235bea9df77920d85db4ab21d7f2b7e16e6696c31ba9c55bd6d11e988399bb6e3909014cfa5925dd44ae153cbf690143a42941e9c3ab1166b03d44338db895d6da9aad073b41e9e5980613861ecd62dc139cc2b55ecc4c86d7dc1c15b1fae758804a6a5770ce126970a2b8a5c36df5181e1c77c56935b5f9ed6791f978ae43b251007ddc7752a73c8cd7989a2c671ad4ca712401c0d67ce4cc6cf705c2d5f751e444edbfd9241eec943529330ec89c29e02755bf946e5c9e60aa5e48dd1979d072b1ad663a7b2c942eb5235e62772f799b4e9b321182c6307a3f741e5c18202f5f2e7608f86de36b3d8b410a1873654f9e82fb3fd14c9ae25cb8d2d7593a9aec988f858f8482cac95a3a6192638821c343c5cee4399322ef287904af53155ae5f04024991c6adde8917bda05d9ed991774c1ebb66e00e3dd6885d4ac3966a3e83197640f1367e93ce73d4544ef59f9489a8fab7125186bba7ddf2ebb0169e89a285815978c9f95188ce387960fdd3bffcbef74fa7adfb5ac06803abbb6c82fe086c37c035612517e5f1c048b282cd4f085f16afbfc25d06ba644fc2123f9fd1897992203645bc3b7be7421e17dc464708a4b5dc37e1bb1b0c350482604694afdacb5e10b7665953edc07a39cf7b79b7eeca7915523108bff3db46b0877bdc846aea37d2caa9d0d57a92ada27cf83742a1492d9537003c2ad836ca8c8ee91c73b7611ebf327e660f57ff47b9b9b978a8d8666be138bffec87db516303b340e46786ab367ae6d93d9eccbf963d9aba18dc02eabd57c87600554538f26a59ef223e2ce0b9543d28f7cc4a71f05fc6a599ce7ae8542cf966fa4a060a8d6fd80b02e390f2abef4ba4a4dcc792e86a6e0b29099b4aa1b77bf1711f1d1dd7ec888622d71cc372ddbe7bdde6d96411005fc5900ec0235ec25dbcbda18b470b6cad630d014954d86efd8fa2fa8bcb2bf9fb436db10a58c683ddb49e64fda8332e2dbf13fa0c507d5fae91557d9a976b87faf0d6ae9694cce1db4c2873e7085421351b306ff243a0aec7fa1e7c8230817898c681917be4992594ecd84cd9db10cc3b25682020b2b42cb73ca3d994e20c135ad148cbe63ecf25c9c1d3e077b278f3849f13df322825d058e6cd4a94939b8b74bafc2238abbb7144441620aa734771230cbc928ea82ccbb5eb80d4ccff7361d5594a4288618729774727208107dbdd74db4104faf40bc18b26c77bd1d09292c5577eab9dc4426ef0df815a155a935ba39a4a076b3ee2eac2e372e5867a79d3c23a984f7c4423e5809456554d5388a77c8a1c401e75d5c9ba83cbd8296601d3724420a82dc76362674691de4d316683f04f6fcf59ed1d88afeaa3abc207bb256e252ac7fccccefe84ce8855244e37f1e6d5e09f6926f027098992d5bf1c0c88c966eb6e0ea004caa119aab16fad858a4506924a22f1af0d4017832651992a76916fc8360d23b01213c946aa6b48a5ff726fc28e911a662bab2d0cae80dbdc04d58ec55bdf8801bfe499f6b9b4e627dab56e6f36ee3cc4018b66cf23402d5d9e0335de90dd613e7414bfe541d20da1b5f74f9627e928f66350457ebb1ce8d23d7f68c89f6494a2b8ca31c08509c1bdab328d7dff4cdc4816caed1e833fabcabf7f143c764a9cf02984845b7b5be16c079116076537238edaac057b08122713459dbe09f4568c63e32e139789d5c4e36ada29937ad12a7d6e1c11c06c6f8d27258e924c3fe16d5182f2eab484c0d5173a1ee918f1493e8e581e0a71ab92c3c6005a75dab1b0a84fc6f0d9e65aadcd6e57b3220d9345d2608c5e18f90ebeaac7616cdeb8e9146469dffc56e8dc74501fcfbd23971519233ab1099827b67d00ddad2e2b4cffae4023437469a60b01088df211aa7a81c337fa3e79e9a33e0b1599bef73ee185120ea648500f3f8e8f73bb23ad801d1924b3c7428fdd3cc53b65fd165546ced15e042e88904d167bba7638a79ba6cbc2294dd1f4d21c5dfdfcf61955c24a12f0fde34e39ad1c11e4418fd412d059dbb3f82fbf3d5970a9c95e97d820b40061620966073b946078b6a423179acf8e0580612ac432665ee8b80443ee57de823895df27e7cecfe0f581098da32499fa6c28a60a6a7f12acebd84b61c98c3b62839c1eb422858d763af7ca7565558f39e645cf19437c72f1ac2072a5c077d1bdfd91ae182bd2e5d654c889423bc3c70f6908bec666b8873ba3721be0614cdcc66b74cf9e1e0053404786a64987aa5d3f6a0deddc1baf7df283699b931de60e9bb71788c4866f0746497d478f2994781105809d5d8dc8cd773072cdf1aed8d4490ceaf9dc61f1bb4ac2034a2207018cf617c2fc8cd5bec881f664f26fcf2b8f62b8da70ea2d12aba2228e086282c732948643a108bb8128db8f8de7d2b88887489058527aad01fcea361c2840c10b1d49ff5d10feba4631a48c6ec3247bac0f467475289911850110a380512b145b8591e8eaca575ae5b2f67633dbb1dd56ef7c3820a19bae8698ff0b848d11c277d56f2fd73403660c4c24fc7d92ebe68970540db5a7c0c7a00608e7f65655ad0639a701bdefe4ee601454b46abedcaee8682b501b679035999cf80ca61afe8a43b3258515fbbf013494714d80636303a2b059a2e104cfd1bd88a9165446500deb978a564a7f17603a573691756e21a1de8a3d649f6d9b6b09973b256eb256f9812e934c0cdf63f736b2b2a0e9c8e66730611be7e7d62091bb839a36372fc52039cfae210ac1889f17d029c2819d581a66385378c849a91f09ce959731d73e7a32b3486ee9c7da5f9090e51ee699536db3b7a2facda7a240c170fd9cbc3bcdf6b63f706fc02622aa13c62f3ade88c4c4c2d9f964dbecf677b21afac198e8897bb3cb55d3c579b8ea53c1dea1cd2a2f220919da6999ed5142c5150b36003475bcfbd4d22944f3da77b3af116c081cd76fa9345154ac89bf2b37e6a08009589f79be81be4a4652ec0810b5fa3ec6e6eab73c4bbccd4f73b80968e72e2efd9c44c1fd8eec2373e123006bf5a6b8e032b89b987f869b5501ef0459af94bb7288ffc3924bb42f95a090f4a895f2027c89e830eb40cc547f44267d8e6803cf9c4ed143596b82e527bda3356040fae8854ce9b4919f3715d1153a29dcd0429e2089c1c8fc1440bd2c7b70816a9dfd8a272e1bef582fd22dea270a6d0996324be788123bcf6be24e6c949ab67516991ada5d1f9410fc87ba1129950a42de2052d182096c4e98652dcadffdd95f389c9f8d50456f9087dd2cd1b382a18dfd728152973079cae2b9c8ea09755cd19c7ac076c789a2c5e9a8add048f4aef879f1d534bf4572c8f55d31fc743c794db096361e6465ccae3bb3fa6dd40ee3f257f577ddf6744469e270b8b568bbf19f5a663bbd33d3cd4cc9a885bcdb81c9b48c1ffc3a65e952f1488d651e587c82fa06d4f8bddc271eb1e945d50de99dedef096a99926e1aba0dd9e560eec06fe8765abcad1e68aae1df2aa2ff72eea049395ff5df0f2158fd526afe73e43b4798d53e9d736a340bf49f9602ba8e214eaa506961d0d16d35809561ed4cbdea7eb16a924894ae8d96a43106fec0b2dd33e5278f743d0c995150975f45c5eca1fbd7bc392a31cfa0c7a6505df4941a7997b9a141187072134b62359e59aecdc9463610272258ffd2f2b8962f14e62e8a480d59516501fe4215d3373b3508ccb861e3f646f583316fe396190cc63a01ee31c88ed7036e456d27f7e76e3e9227792f58e68664dba1f6d5579870f1fac5dfa3713c96ea21d3efb275a241f41b8c573ba26d1eb36929dc51ab488930cf91902d7669e775f4a4232b430d779139a935c169982a7db480126ad26e44507ee953620f18a650dd8aabdf2e9e30a7a1664c609b04d75331d8abb088b787d0d6341f2e5557abaf7577b0df7df0f13a3bf79616f76cebb5dc3732a8cbced08af0a3731d59f9e17b67785c20cd6fd065189ccd3d37ba2464d600734c7e922dac79d5a844f33d15fb313ce2286b4ed74720e31bf93e24aeb5035a1898b81d9c981ba6b6c73336501947048e100d1154ec0ac1dec04517d4e10f714d6ed2babe28e68df7c73a9853adedaf3939275021412a293af88659d182466b57bfe8d98667ca012eb94d6a397dea5d1229558d882f17e15f2cd29f7df7fd65e99c0506ca333cc6cd0bed66b234dfeb51bf6d2089f221c98e19ae1635623da3d44c5821ded143fa4bb39dcc2afc6526f8868b11cd175f1c6cf44af421a1c5e3863b54b0a5c1dd89848fb7bb389818561354d156af4040f125c9e8ac2c221e2d3389a90ab0879c81e0872d1601aaf8763b9a48f0c6530c807c6af2f6337643dbeec3b7f49ed7a88d08013b162185224981d55d476908dd36c0c7d0c02976c961b86d8be66d6cb28e7dc5f53c1edf90473b78cd17d474963cd1409d5e30c1e53d8a67932f15e0ae2216989a4502b36e5880fa00c9a329cac5f8129f2abe7ad52af68e18a82a719bbb51481716a75333476c1cb8089313367d65dcaa92e785797ca5f36e38ff9771d82522a153beb9b9abc11ff2419e3081585ac23a67940c9534e292d6eb6052097a177ce94acac92f6f61e254f5cb28bd24748b08e1c8dd0fcee7a23986f157a6d95211f2d1df1a16a4bc5b691b29dbbfbef08a7ed3fd1afbca63cec2473a0c01c51d82cb38ddd113090220bb24485249d538067a05c0560b3694f1cdc20d803d1c8451ef734e86e93051871d2246082525504b72deb4066a90a1780cfdf9fdcc471b80781f9b11e2c7013cb8772a10d8f81ad9eb26911c97bf14d5d19cbada7e401145945f088a5cec048754fc1446c4d35e0919d83277ed109cd6ba37bf30123b6b35ade2ae33830b3dcc2bc45bc9fc63dfad68c0260309f4f41763a3740b55449b28d5216c97bc197284d327951a0f394b5ba2c1bd163144bca3aad0e84a2ab41367442fc622bee6ec0b3537aa05598f68d66b59518ff5fd8cc8ca84f450359639ce2e638821c2993b78b0e41d9f4d2097aa3112dfa897232f93ffd07d65f056ddbdc358a43dececa145aca1e3f5658fe67599e0f3a234b540ce1f781822f48f46f403947f1e86528d95a0760f30f6fca6b5041f986a0d80eb035a93be88244ddb9de5133ea96754d1a269336f1fc8136d7ce88a724423b398beb4d77681f845d57bd47fd08037b2d14b815ecece6758a07ec6872a273d0add1a61502762d6cdc0b1293b52d96acf30eb9f082c18da583758b540d42953087cff76df9a710d3bc2fd6cf1054515c7e5e4e9406c86af5066e27cd0c4359cc8feb4818ef1f2e327189b51bac2ef908a37bf20016b526c80855a2005d36fdcd9bafdba80a7077574af9fda24873755f875cfa25e824e6caa9d0a36d5738fdc523060b570748fbe1ceb1aa2268bd7e88b08eefab850195cc51636873761bd9fcf9a3ee0319fd2328ed439b92bcb134ee65b220e9962ac0964c0756269c6e1b5b1aebdf34b4e2fdc072e08a0e4c076b25be5ed02f627d4ac14c3ce988e4b79b15c2d2706b00de5f77624184c7c2d67c6581f1f94717b85e79609becffb737c3b808179c2306edde7a0480af5f98a3473baae4fabfee4c4ee02d6bd90158e42ebf9db6b6c9c318d96b12b20459f046ea082e47356586c475f7db55f7225bec369eeaacb14a786fcf49e3735b887d65bac23a42c53edbf5614bd3f93a763ebe88ee92223d0a40181e97f0fec1955287e75c706374f46b9716480c6e40df3a83c9b55eaede3ceca3dda017b769a5e9ce3905a6c420f54ca185df4342c6f2555ddea39b6c56999e523c90f2818844bbb920b4d78ce58b7da13b37e5c4751f722e560eaf8c19a5d85ec2ab1a7a207b112c763ebe5ef8bd5c1d07ec83155b534fe5c71fcbfbd5e4d4e211a4a1a048c190743f6460c9a9b66cf2ee67e19b94e1fb5c00b4266c11bd546561fa26eef51660469811bfe8b7d7e4a01967dd4ca46502c676035af970854fd5338cecaf2e06d52d5ced5b369f2eeb5bd9967c7720718373453546e8658fbd6bae7817107d18ce06fa2f743ccf940bdc87874cafb1b2917607971c14245a51029bbbef7299d0717a661292c5e35fc8c65b6c5b2bdd61e8ca2d7561e830023eb47b8b4179f83fd063f8e30527443087d2d228a93462599e20723f3292dbc894f565b1a3eef2b11fef3bc5341738d20fd7d9fac713643d3ddab5fb06e614f3d1f1a493a79ac4e4e1e037b343685bc2c92bb7a5763387d0d00ebda9e798c3f96cf0e95e87e9eb15ef579c604754bcaf08eb6f05649876dac8672b1a18e9ab11d6767f1dd3e9487e061fe84a8ab85e08a5c3942445bcdd250cee798cb5ea4ceae5bd37f1e9f7897a604ba2043e15d4a796e84631bff98d7e7a09139ce97e383815cf3b8ab494f63e668dd930b7d46281878dce4334d64fac6786cc129a2369bc5daf89f61569e1d755e46010c3f688262e59eeec696deed969c118535d72060e7e9bdee4d5daa5781ba3d7b316d6b7d238d31ddf8e92de909906ddd683e950f3872443987f57d7e28c7378259962e11cf5288816a3cb08ed3de9d777c3f1921e1be31db5e75b002e25e64132bc74e3dcd2d1143ca016e3e6b66b778f1ccbfbad44d2e7646467c2696dd8556b8821d518065321960f4b4a91cd8e9c4cefb2215a79fb782a4cb463fc9befa5514983961825e9eebea11352db5dc99b59058de24f5e7f7a894270784f35055ea436294f4c642a87c518b9d1faf72af7f536a6f3521b8809bd44a43c2cfe3f2099b25a52083b114647ef1b4a581a693aeff6680ddecebddb7395f2c1f3025daee3c43a197d70d143dfeb80384f35e92626ef25dd6d207044dbc78ab0aa216c094d86a46e385eade9075b19eebeb27c6159e08d1f6c4904b21e1dbed9b49b80cb88375323f8abbedf09ec92e1a5ae0c6024628c1ecf972c2a35374fe27b1dc708c4328312aff60b50719ceeab7870e408a4b7c9010dd337a3ffaeac75dad991beb5bbe0a412e26f01a15dc49416646ac68bf5a9860b35b767579b66add40dc82cda1b000b62af313523774b7ef9db5ca14edf0e72e93f11dd31572e904c4ab2841c0e23bc4e84b5d4cb0d54ba714b5e6b18896bfce3253585c5be3197fc931d6fd8e7c9303c194dfba3e7da5a5b4b98ad8971f9491ad3c50475ba092edb602472207cf14e98628fee28e5d5fbe16ec9456a6d9449c68c7755963aeaf4e350100bbc5da7510cd455cf65c4cd6cef079aed1c8ede08f1870cfba523d95c58f8289e533fbcdaa5628cae94b157bada9ff129e2279021f82568fbe5a28cf29006839fb12f209685215a351c8d27192fe3f1d59ed8eb193967d1afb6b77b787e97556fedbae9df9c32db420e126ba58e0f29d4d59b23f20951948d3eea03abb93b305e6534cd5685178787cd04227492a481c5190a62b355be6e248d5d6b30726bf83a67baf714a418c006ae9c5f644212f0435fd8242639f460d00f8e57e8fe8ba50c07487a89676788d66e09d9e2894fa28b5d022ae54900c95b4a45c1f92838f0e0324d6d0dad32d0a572f8522ff23c96ee318598508e45d2054de80aaa4640374b321a6a8be21b4415d48fa8fc701cbc061c1fe2aa71ec8a52b5113a22fd36d0da4310852fed2863c524d8c5a84e263bca6d3f86939a2da997dad9aa68d0a216e68968377d4fadc035d8a0fa81c83658437194b7ba0101245b7ed3a43f21deb112f79975ac0aae8bd1c50368564e6db76e43db46f45bb65e090d8c305169f28928e983fbc5916498ee2bea89973ad4cdac716d111fa5cd086ecfc9c30904412a6eba28cc57a0f148c4183c2785dd32cf4bebb998c7345e51ea47a87a6d8104a0454424be41764bae8b6125fd7f58c151dd1dd83084cd5523c53a5b9a1f3ec67c2c3590b5101f3b89bd19e215924a440dafc8bc2f71cadb50762ac3ae440a02478e8adc4bbb017da5848467db5827ce2f2dd146bf3611c8a7d2d4589a922bf6db5e557e76b0bd16c18d087efefeeadc01a166fa341e2f563e17253b06b882b12283f9d1ff5b315e5187bd40c210524525fb408c022dc947c6c91a3db55301aa0d5cb806ef420ce517f21212faed6ea72bf459089d92d14aa7bca56aa9104288ae15e3abb67a564d0ce6d2a509b356e8cdff0335d2152e2d6de221e50c5ee5d309d770eadeb5ef0654da52201a6ce7c47300b953c3002af45b9b0c2f66a5067c0292d5f9d86a9a820a8d1f1d7cc487255ca1eecc4bf1730d955858e2a99e1c5d02050abf72e26d427dbda3b190b2dcb06f93ae320c498a5f2407af098f8cd13d7f91bf15fe7a63e20d780da848c807f9059838207dcb6d91a780fdd5ce4a9b4d32ec5e253abb19ef3825a54d05f1fd8f5a675924056ff241bef89446fee84e4c041232f17c25f24c23be152946246e9c15cdc71b668fae5ccee1558fc414586e9ad60280044a134e84d60b620c48f7765c672c274c33fa0c23e388377960d096f828a79232c328a58ff818a8e45d373383de280278510b324251b678ff432f5027112ebbea5f962170c469e389e90b6ef1d13a7656ce86ac35a575bf6f7d05030b6f4ae675d703f2899272a376bd4533cece00b2789ff372aa3314d3a6861ca33028f7d14db2e59f2a24f69335248f1eed4d4f29b83401371ed56ea972fb76d82b12dc90c7e7fdbfc90f67fb3a410b454e33e1dc36750b84ae99e21dfe7154f1ba83a7ce6bc1b751c6351ff5bf2238435979aada10af38df7e1338d963a0550a5ebf8a94ef3a7523b6eacf7b7edbdfea75b3166eadca5b0745fe7ca5f09b26ed7c8db62ad9bdcc7cf990ffa06e0cb2dec84490d671e3fc45b881fdbce3aba6d8fc7154a9a70105125b2a873d2dbe6246a5a83da132287fd740728e95cdc2bac234c2b6e0bdbec0647eb8afa940e35c953354445be13672af63246a098750854b45dca8c0ddda68914b56fcaebb1ed4f87bfe5194bf7ab6ae2e53fb5f32d14c2776bad677bd61939a10527c184cbe5fd2136fe8b410be2a15b27143d64a0cef536847896b9294b7dec6171456c6c0db80e523b0da1cd9201b66b51f2f6dadec3ec9f3792928cc829a8362094a6b585bfb47e0e70c51b5be8ef90e12eb6069aff1b521a268dca482d90365762c773ba6b76281e7d515c0dff9361957354e334f946b396f10c84e15f3d306087f1409b78038136622ad82e31b25151c05064731055973dc70b32891752c9bbf415c113404d548d3a7a1f4b3f5e1794b4fb696c4e90376901bf8cb8382a8c2cd86f6fd1aba7a3fe42e9d403c0227488d370ec267d23e59ea987731e8405b0dcfbaf8757156170b3b835db617586931848b389feb063cf9d5fc11ca8dd9908fd88121c4f6427ef68fb20e7e7b1918c4c8394fdd24a60bf94864cfbd176fe95268be67792588684eea4f3c5aac31d38a933e69c28fa9f8337022309f8de439e5166c10b058cac5f9241b09e60fd4a8cf2c6caf83e86b1fa255ea6c09b98df7470e90851b17857ab7e9985fb9d9067bfa518ac903b62f30ab85e4fb7adaa745f9bcd902019062cd2383c3e7185a8dac19d6ab85f6b144a9d9fda6ca8a9c0a5a779651d38188e913451a1d3a44acc6fa5840115f984d1115c006c90eaa9c53f3328e28f83f447d1e53389e8afbe3a236bc08b0691ab1af63d9499446397b48ef6ef911f05eb839d559ff75afe3a8000ee944a72375bcf6235c82bb07beb4e610b4108dd73e5b194b1b214975d791d5664364ef92c4d3f4df55adab1f402b79f835bb48bf35f0d3cd19b315622dc9822252f9fb63f725470b20aaf6082b542a2aff1f084478176d49d5be0bdaf40424a8cc895416562c36ea7fb2bfefe183a2a6129d70c64c2d11d0e7db4a000baf6edab43e9893157b60628268f4cc7038b0c1d0105ab06c18b9aeeeb2e85096258461c9520b6953498781de22eae7ad2241f846cd6237e82c1934b5210502bc1b53e1eafbe3348e8ab29c99ef8a94c45eb6efc492c9694fe5bf5b1ad31861160fe29e234349151bf180d36933f075cd5d69a37550cb22f3a521f7d81ec703e3ba2351be324ddfb0cbe7d6d3a7be2c44a1538916cc66a18618686bda932ce6aaa610f9e7eaa5660a97a2cfcd73edbd90499d60955d9c22411eb51400cd7b41584dcca190a6f5010f520b7c5c8e5a8f7c7e65a77594edad63c5554edcf1f408fbb0ebfe5f46d947bfcedfeb7fb8161e09c9cebb84a1fcf0589b032e62cdc3100e9c7d9055d3b986530ec25b7174b158a2258fb9959617c923901daf8129f8da9ff21b312f47a19a8adb8391f7c05b6e45d9805c3270b1a0ba08fcdde8e7df24708cfade8426bfe313c26901c28adcb49708703c4ef5a00261eaba1e0c71274615121f8d35d1e9b013fd3373e236c4c11984f4e59670261b6d184e8a0afac074bc5bf69adf0c0884c0b4931f021317129bf02e57bd83f66dcdcab2b4cbada7cb45918305b5bf7db056441387a2032f43966e23ec4e1fa6747625e0939bee4c116075b03e73ce3b136e75d74a898a4b7cb7c5201b3bae9e9d91e0607215cfda451a9f196351b5f2794fb88107ad301dfc1141e0d8d402783d2034d69d7ae69a5a1eded431eaed19a22dfe89c40ce072321bd5b59c84c8000f8731fb2b12d3475cff5a626cfdb80043e63703ca6c45c1d4ae6fab094e47a3820dce50ff4a645977c9423f9abd5644b70ac8855912fdeab815a4e1b28699bb693e6e0664d8283450bc1324c60b15c686657674c28d0b3a38020f17e5bfe6250ecb292f9a598409c8e1f8ae961982ba0c04c0c98623d016dd2aa040370e67a805b259bfe77c4cfff99f9dfc6768ff24a9074867c0b2d5b9ccd4461908415e15fa5dc60870b9fadf1aaee1df866704748c9ad46d1f113b3a3457666406196f42366f3a246358313fdc0ad5893755493100749459bf238bf84e0aed5318eb2980c9777f597762a1c3cf52526dd33b91003e337cba5d33dce46cee692252365277f258f97ec605ee89f3ff1febd8677d06cbd1ad8439f3b8f0eb8ed111ea8b8d600d8456fcf4603a5463bfcef248fa5ae5fc0d0b656cf86f41f9cefc87b736963f39d3c05e652637782bc03a7fdfe0d495a72c177fe6cf17ce1b3baeba4ac7d5e45ea4b499e55a030cbdd55bbf1c9134289852be4945c3ee14b32ace49b5a3f48f747460f8f892745cad5f1509ad8036c3747de7e29cdc082aba84ba5eabf0e1c693ae1d74b8d73d9b26930db81c4679f5dae390141b901d57d158527a2a46a1242e9d6ef81c3c9a878a5123bd8cd8060612d92f5a291112a2d3239c78a2fe97d3aad23dc60050d957e4c22f84594b59e915ac4759beafec2ce6944f4e8d9231f630fce829479e5e804885ac387fd488e729ddb140722bb05918cdfd0fbe0e0d5156fe1ca83464cbf86c6f76bb0fce830fbf28477db1b7d53289f4f0cbe780008cbf51b0df0173551ae014a0cc4499bce29401821b5a1178a0d04b94cded1415ed91eea0ced8d476a7e51016c7e5456db3f2e3ec2928f4b55010182bc3fb722f5b2f7a9f52a1136ebcad4dade6c3b763fd49adb624d3e5c077ad9b5abbd0ba0ab711a6764e7cb252858e4db67e89402bbc16fe1a90e6786d0867773be1457464300bf7aa552b320dad334286dd2df2f93ef2ff914f2ec033895304bcb8e5aee0bff9cf6e66eb61cab9a2dd3031533e76427a6559dbe4504653acc7c5e015e83358f94c2f75251ec142d413fc23c99ea7551b2251cb75ba5dc6f62820f54f6dad10630d8269bed43e6419c3e2cc088908ef235387a543dba8c8779e55912356c862290bf35ff0cc64a112c9558c7008f19943c0378f98317afd7be3cfaaa4fe335c935c8daab831ddd8b0e0e438d865e8063dedc4039bc90a35b4bb5e4a5013df63f4c9a4f8fc90f0e8277c469b065d5df8f858632bc014599b852971a8d71422262249381d6da2e3d816ff77e5abc914244032f6e458bfe7b28b187f6abd946486491d7ccc6cae964b9efc1190dc188da3e8f20723298cce8d7249636a04148c9596361fbe585a2df2171c16b974c247612dae536c40a39baf5aed9c8944281e24d690b29b93829c4cc685bd1b923b9d932597b8f2629e2f35ac17a48fb6de66609756af46bf2768321a3b3e71bcf499ca2a14248759622b444ac112b66c12196e3f30a4383d1260264641855a041f035fa14222330368b1f5ce04b9845d92faa219372a12836e58c87b00ad0b71d310e8844f3936629e7ceb0a6188aa0870735bb9e0ab34ca22bc7fd4f2df4b45d4a126acd2f501f67d0d983062d420072e27a5bfb7e99d37fc39b8dfbb3eea15f74af1ab683c82eafc00ab92869bb792c49d3248330bc863d5f1a954f8c2339cf68e779af408e875332593bd7baee9e0fb45a0a105cc38ebd84632d5704fb7affad82ce361823d70d0ffff88e15d9152639fce76e7096c817e78d914ee4d6f74699d01b90bef219af6714e492470b92fbe73fe2aad9f36d0abe6456b005365084ee5e1e07f4b5c26b60bddf608434af2d693a25d194037fd047487946ca3b8ecf291f5ebdb48180b3d999ba9570bbf604ace601d9d71afa165bcf59a42ca78cd72763de38bbcc2b8397ff375b1b5551bfdf04a5b8fb0278c9982a9b37137d1ac65e40e15460d4916d9fb56763ec41bd4555e84016a10d848a9f5da5f03b5754ffd8339a1ca85ad8fa23931dfc6c60509cb06ae355e4d821b9c136f7b96dbaac7e4c8bc0105a106811d505b0d2b20ba30dfad8bf4bb176adafbf1d21557fb54ae09c4979667f2e6a3071824af3737e1ff9dc245155a3c8e838360588ef43ed48376a948cc6aeaded63bfc58e51585b8e739e5dd80e78bff264b85d3f41075b642d7ebca2f9f6bd701788c4b23bbce891d1670360bc190cb5700335cc76c6eb897628e2b6bc7eeebbefef23881d18b986ae3d3042107363d804c0008caddbe3f76fcc75eb1ef462cf77ed176f7d960b736ecef9a431d029f1254be2460330ebd42da3764f73a8daf79b68a618c1c7ed9cca65dabc13396846e20374a9183d274c406ad86d3529b0bf7a674dade792ec1d0ad42840e9aa2f00af5c8f67e72ebac851a6264b41d03007ab5ac33f52020893c9c7c41136c946b696c507ed2b7981c557145ee0da6f204103c84ca471e45c5b5293e3ce8849f81f0db5fbe37221a8ea235c062f35d499bcbc225220dbb20fc5a775966317e11fe01215a7325f4cebe4ea2c80753ad065399a2fce003d4d3395e21b832ad6d5c187e85cd75308f11df1bf99b374c87a28a8ea0941d5f936682da719d1b8857c46793ef0fd17252807886bbced9ae27b9a494d38428cb15791a72d0f4bf7b6ba4a911376a7ed26fad26cd58cc65d83481e1f99f7a186577dd60e70e66334f34d6792f9f370b7ecf79aeb129c9849fd7a9fd8d6340e824d000f0d9e0f99a535a045033038e4cd670b8f0883f1132654d21f2c716710819361d80110e710ec77254e1dcf2c97da407c022e8422e72528d505a231800509a3a0037bfdfe2134fc4901b2e7c2fa5a068aa6f0851c843fbde36fbbba65113e1bf9953db38c17e6368d3db6c98683c77e826c9646d8d4c36e62fb7ae2cd689304ea236fa27712491020b370612e69cad31f72ad8359050d0fc07e1e1a2cb20a7d391c4517b969874353dbce5143624856066390e907a6bc8f0fe1c28b7b7682824c047e69f9ce63e62e01c7f42247e5ee687a5fdfe87e58e7d3e423cce5192ca5d0f3a9cc12c7acdcfcc944c1a35a74b781cd09fb91c7c8454efec7d32e2a983214885a7eb046ee4ae55d9994b4787ab81d4003f4100d402bb131c21c902aa0f0ec8992df9bb6e156f70841a59335b1282f6e732b8c0eba92742abea07c30e8caebaff45ea24697ec327f6e22612727401cefa0e7dea0fe0b7e8b41d808c73f387c1196d31090f7673d266c155e805b6426009c44f3c0f84df7562b6f44284ff032b0f2444731072ac6d10e9c7f0b1e6e30e192f188776b950f60c4f29e9cc00ac922ed7c8770617bf08979ba19210968e2549be993b7760b6cf201a981f3bf86fce7d0e0d70e9146b27658ebb4b148cbf95f57c10fbb224179512a3c82f47348da8c6d65b3ea4bad7141df868e948e8c23d5c146844b550cbc04789624dc592e3c0ab5e34ea03481a48d954d962933ca9822dfdc06873d80ffabddc4715d1f1ae1398c4cd565ff33f1db5ffc08549178b1bf14c8f6c8977221fe25fa3a78b1d96a2ddf3b0f634db072bb148e54043d4f30489b52065e57b97d1258ff1495e820a05e730e2302b08b7a7ac97e9d4631353ff184029dced6b70ddd922c1f337f91b5f379e1e5165b852923998bf38b01fe37ab8eaf3735d90b8b3510f1deb600aa692362670d0e75af10db693e9393712c50f87edc3736c7808d4b41775868b67f61dfd6a1671190dc090d59c90dc2b4571e2901f4de38cf70f471e431dcb8479c6a4d1222f9bc449020ad8dd14cc151ff9cf06667314730256c92d21626ab3ed987d1a60ca66f07c3d49b861eb0e974021bc44dfe5357742c884b249cc514ae88e66e88d1453268e619a1d87c9bbbd1d8f66e8d495f3e136d2cc36aa88620d82a491f6cd3c64678898a99e3fb1391df95774f43c3832f5d77b0941a4c79d2062c6f8868e7f88890190e28e3e8aafc8b44e0585e4004cc33aef9f7f1b08a570ca5c193a9ba0e3f84e82868254043489f46e5f907c2e9136c46de592250fcabcc5589fd1333e0c2c70790cfec71e7f7b7943ff10a9490c50bfe36d82e4d2ecde02a6105026766b568a6a9cb040f3c473ae474beb6d893407acc4635b90543a28f67ffbd32dd28e6267b71c92414cf52c3db91dad5602b53d1e49d4193e3e2cd7985d0613426f3b7c6e544cbf5448dd126d2c29409a41f46693d294269a0bfbbf1f8c4f058fb02d4e867777c1f333b830c94c69f51886a4e57614022dedf7773a2e7184a50a0968670431f51e78243ff478a64851df4517dfbc3f72c6d3c317d220a2e345639834401fb5a68de2a55f46b52cc3135b487c57f372ef3f06688146941bd6e41c75470eec2cac5ba3ecd8631e46629376da405ea6e6ad448e13b561b8f9be89ed739becf951dbbaef1f8a87228e88cef8c60abce8278ce6c89afdcf83f2eb7aeedbb6efeb2de929201f46e36530faa586171e49d8449efb1f4b5f4c4c0903ddf330d6be3691c371f2ea6ec8dccc7df35089028f04f53cd376d4a298f36a53d14326762c2ab037e4c64d4865b2fdb954cb2e40f5d6e35e5ae802ea5ca5621c585ed30e750f2a1c8fe7f359c4504d5142c96891ec5c403c3a42e03a80b5b346ec3595459234c4c2b05631a1648090ce73afd6375c508a411415a835a19d5f2335e4b036fe56cfb1b799dc3db0b3ede40ba3357f50a777c672930143335f506ef2fe7e12aa3a622d8a514aad727adf572c638eed06f879b045b0a53de075f6eb1c813329de5721f36a953957277238a91f0fc83a119a7d9e0ea57564cde1ea897b88c9b16ca9ab4f49d9abed00d6ec1eccf538bed129776dc5ed37832f5e03687dcc4003219fda16b41556d1775d334148cd6a4c692aca39c475a31a7f01d236a56baec2b0bd456c3b4ead87d5fbe2871d7ee0baf3f885b91030a0a17047279c088abb7931fd2598c89048042f84c37ad7621d8ffe90b228b4afa2f5f433575a02c3abc10b57feba6145f6e4a5cbbacb12b4e1d8e7b9721922d6657b53e1fa339b8082051c82ea9fcf7628cb94b1955baf68d33e8ccf5e974944e9464458df3085d590ff4bdb94bee9a6ee7adab7c2f47c6b691375ba4de1c0256514296f34b3dcac891ea2c96b3ab2a0de54dec819730fe3c1d3c59a0c954394e1aa3d1ae476a17c0cddd07af5c4af80dfb3607da2fe603f0d153301b46bfffd13bb621635f4665965e5c873bb22c0df61d91449848ee82c85f3d31cf339946c65808eebad0872fee4a457c777c238fd33f965726f2bbf89723afd6beb46038910d916cf9d973b66f106cc36ca13fcbd17797b89c867b3815cb36217c07f463f9e258c22593f6106d0f6f8dc7ddd7e4a3e92ae93c42b156b9e599efd21d6ba9780729578b10d9cac2077607b82e6b0ce11a6fab2311cf5375ec685f02030cd8550b7c2b54cfd4f6be9ca91d34b08adcc966e6b77865e509023bab63db196e05fa85a826a3b832a7d2b64709b72283da5f304ee1869d694db509122b396c6fe42c4ad0cedb6c8d1eae40c511f9a977ed66eb5663f0bdc7612303614c03c5d6583d0fe9cfc2c251c55ab7f9e9092f02fba2ee77e82850d08bc04ed878c47e2697387180b5969c69db07e18899eef3f1226c365ea4dafe757578c5fec67a0c2af9814ef1215480db4f1682b3283628d0ccb6f40aba91d2fe87fe295d8aa958dca302ac9b1e8230db2b80b31cb83d6ddc888a18f74ad181acbcf98c5485325bf3b13421b76aceb5f62ab1a25735af8731b9988079509cb043cd1540996aa401bd9e7c6a8aedc564c28b25defb6f2ca3ea47cb606ea858a09db1acb665e39a8bbc84b0c307cc9b8277c97b70982f4018cf9fbe3cc90317539b6baaab7cafffd6a852bca79260b1ec74e2a9c4eb6cb816c57251e644381d44a7d9b2c5d3b86aec9d915590a3bf7c5823b3d9641dc6bd72de9a06c3f6b8d555e6644e7f9c0266b2e8c093892f6bdb6b7606cffe1ba9119938aef796c22acf74dad677d3cd040ba6bca0915e40e298cbdd8ab36bde613f56ac6d37fbacd10dd1267c90baf58e71b2b6acf60d30493c088e1ae5348b5c65d3a141c6f6f59b80d17b749d3fa922edf807e834e49f04cce87e22cd2cacd34d2176057c720dee74e1b415189795faf6099b466f8c190b7e487950788ab571adf5dd80471288af5db5a5811e1a7121fdcaa6b02a409bf41103c106abfd9e0b71c77a778a374aade4ccea6936127173286f0ba0d648fe22937c69fc061e6c4e66712e811def823c7492408aea1b553b94a5532167537c9eda8fc799f7096c99a60db6f8e79218f4cc96665cae7b4dd69225a3567b8f18ded87a10b9eafeec3dfec97c285a675f8a23a9fb30f6ba5d817fbe440b6f694300ecc20f2f5a8e7a291a892ac0a7a54265b0a35d638bc42930ac668320b3b3c84c7dbd8bb0d9610cdb9e29b7ce48f3adcae08c9baff208a2ec3a098ceb19d5144e6d52d820e11a0b27309d3a7095afebf63b71450529c6a68c99ac652866579a1a07cbff65aacdb207e381c7361782b6b6a058b40bfbef8268b716a2699900c377a36637598ffd806c05a8a1809135b18c59f017c4bc450c7817d31726c5618a7220ea337f18107a46b741300ea1b8fa6f52585514de6343dbe845b196ca8f25227a29c8766474807b3df85b64067bded5929f0e418d05eeb82de144583caf3538f327ddcd4960ec50a1807a191720c3012702b7e7b007b85a13ab91bc3e4944c243cf4a5e208d6300c8b630f8fe8fb58568233f68902328714aa970d027d58753968be18389f965d78926b30f73a8897dd6e644732b3eb2428fee0f05c0ec0590ccac23644999f69bb1ebe4475f9b0a144772e232e72432e5fb35119ae1ba4bc8a8fcf169b6c8c397fd420668ff0adb98f80dfb94c74a0b2b40f270cd6574558f7ee63184327a655b6d7f1ac720712ff83cb7f7765500acb61f1e9036b5245f48a2991720a65b393d59d633fc284de4168019e70df6128ae6a3ca8b2eb90afe035bc7bca61d4ee2f4b58633a9e815405dcf2a54d4412ec9073c96ed5c29f0a5c971a72705651f63e9a5d13f11ff6699f96d5aaf0e9eae7b4599000987d876ed946263b5ee52a6be88ddb845c7d4ea5b4f381e5e252c81ab952306ce4abfddceedd982e10e38b1938c63982b2450eb45e65910f6bd0bada5b6f711d7b4e8b36936fd2a4691a5d952e22b01578c3d6dde3a0d6c21fe5c5080318e21f1951ecbee9983c78bf527947bfca7467de60d7b23664a48c40e6e0653701917ac050e5dd90b93b34ed5c3a98f2d75031a0fcad32979e1c6ecd9b4e89c41c9151bd5b35c63d16947d03baa5941f9e849e8fe3ba93f8f14b1418e77eef5c7c1f16d9aa14354990086f01d282613464dd6d6d272d3592269fae929222c30a7c45cf68684cecc80b3649f3f5b898307f7d27d78b960202faf47f83f4094cf858e595948f7d6d62db563ee27620fb44963b7c693b1210e1ee0df2c8d610053b92cb28485413bd0f23fb60f0a59175cddb7394726494a88549a3677d606b5030c90338ec10c71e2beea0bb19d186b9f19305da4336a033f5505bbe16effaf00691c7030bfb59a1d9aca1ac3afe04228a0ee5ae7ea13ed94caf9fca8a42831611f7609119867e884df3aff09be64cde43cdf2007fa420e18aeacafd69087c391a37ab2354c9b308fcf4e23f0b7e4999e862a82714c49674736019c60413ca5f771f56a7320af447ce4bd302fd846e549a92b55011586116a867fc310cffcef57c4b207b4abba032747e49904ac39c02893c429dcb0b08f5f1b3cb6ac11ff134a76369db186219292cf5b12c94712d7e9bd06204ab585adc93dff6f1ee2ea7413c1ed0f3fd1c733c9cd09d11d1303a48d64d8c9391d72a18c662b6b4a8f6b2927da58198dbf21c98e2c0b7fb7c685006ecdaa19f04048435a158478c54f9c5918fe82dfbeaa287f59353ad804643de7b54b08eb27c0955238e04e53caa86d00d4e4a3b338e169f7ff34654be9e30619a8bd374622e1e80036f040aa06d6138318c0740b95a3640473e73c3a383b116ef276cceac632680b5237a9237d0ef071c9ba1d1ff560a0c3f8f3de96be24c388d02a4e2deeb48af79898915d823ba5cd19daad389db0281c6cce615089888b894522281d15f1aec177a46ea38459a25780289e7a8540b2fd24c4b6cd95d3df6205b6fe9ad72428dad61fc6a44edad3d7eaa1ae050de25123f294737d7466d7aabc6e0e9c98d007c5c39bfbf665cd723893b8fb3bffaa5c0bfe077ceaa82b1d3c37393e1048ca58618f113420dac0f56e7c81c76a96c2591ad58e62cd679077bc32aec5b1ee34179edfc3bdd90a98a426a2edcaac2287567befdfe9b20dc1ed66c0844c5aff51ed23fdcf154cab3b8336c6fa9032ddd9dce55624784924d6c9b0b54627b28949dc1e9a72dadea1385236aabc78ac3c8e2e8d55431f85c613db0540179bfeccdff7a1fd6dfb36fad95f575bca5b1c0a8e6b91348e71fb145802af7ff65967f2a06205ea5dba42a8816f5b12f58dfd0e330ec7ce5af4c88ad426c6d1d026ab52fd853cc30c82d97d11e128c97aaaa9572a803ac1ba9ac0843afb88a9f9bb128492fa644cd1b30a51b3a138097402a40fba8f11f1ebcbf00cfbf366a4f021027c1472a6f3ac7447a2b85e526289d3439b4e0c46a463d9ad5b0522eb24d54b601afa91b5528089bd0397972c4a9ad7c39416ea305fa45d502be0909fc0f74a9655721e4a495d66866cc8ec71c3ef7524e80fdc82a09de4e0f14aa8675d2ee8e837d4e78a0f9ceb20867a5e13b3a6aace666980e26fb74a35f86235bf0879dde5e4966924764b2d25b311510e0244cbb690c1ac094bb4604a211ce9e1fd13fe6c8ff06d39af62ad9064d81e31dd7dd911ee51d686c2dc6d62f815955f4f170bab9c7d052b7a5fb063c4523170506c0b0563cace09fec1a701474f14f4066068cea273b00aefbc6f27134938e86a39e0f82f4d7928dc955a67d15d78af9d86e2326472f8b475832bdb39c1bf944cd84461631c1018aacfcc39b610ecc5a7c43437ff21b3aeaaefc569d4c4bdb88a2ea83f5a53f1e068d21b149e66e7986ae85b4f3b414bb7352aa18bb82c38431a9467c5d442a7386ce5aa48ed7b2171710825d25298992d0c24b036b2505217ea24ff6c6596af5332de24462ff2686559f8a433507cf973ffdedfb57f04d601627c6efac88d1265d7e5f100497a1ecf0e93b0fa7a53fe1deeaaff3e46324e81a31457383af44aa1786679691be15d00908ae0930b65420e621d3dc51775a1b57c2d69b1c82a72fe657e6ca29c08a67ce6655ac51e853ab0018d11f22e27e9ba873b53139d54848c73d7c15563a6e1824dac5103156552fb9b68b9457645b0c505f968ee4ce6d79d93c3b503502a29ec07319a51dfa05ab4145f50c8ae3979a9cf282a6f2a3bc9e56257201831e9121a7d6681c9fcafa63c8f12a5e5eb94e53480daa62f79c1542d3358d8fed927a5e028f7a628a8660e010edf739dbed52a6a0f01f96c6a03b3c5437bb331ea6a9b79354d96b02ae0fd15b4812c14ed0c46d8c09dbd2db1de08dd2e2eb49cb9e33daaab0f74e4cb007130886f72705e2a2976ae810b96abddb4a5446556f839326f1256adbd1844bd6cccdc207424af839bd7e13c5780b72895a06712f9fac7b7e85d25efb2f1d1ff68a9e698da3200644b119f53f2fcbed8901e2772eb7a8757f50317fee2228467db908d8212f00106ae12d6d1cb4303d4ddeced0efda5e908543cbb09bd07d0619bcec741759ff4a55b9a34b8c4ad1ccdb947de8f91eadbca93205a1cda4dab1ef84e9fbb68ab8833b8ffcd7e79a223686c931f308c6e8ddc0637ea0842bf3b98f3affbe34a1c982eab743590957c58a3bd11d1a73b3d97746140c7f98dd76cbea1fac575b168a87cc1a33e71eb56d87a747488ce68e998f2de48039ef3b7ef98fa15e11031b13613ba828de99b6381d781cd06c360bf43f7c8f8836e2e765c5fc40b68d193b1b204246b7a78f57feda027af096ebc97da2749ec3a147ba9540dc317dcdbcba3f3e35ebffebd7b0f85aff23c64aec379c79c449c19ff08516a143c6a44d4c4517970f30982a7781a4eb6d1a2a0a51952e9afa868e48535cf5765acaac74aa9bf2fe55f8d54a5401c1aa18a12aceb2669b7255afb398b0307f47528d4e0f3c3d3a0eb43f991e956bca8f2ce10cff095c503989308cbf5f54df95edb5392fce2216108ad94ce1e21d506a697ccb160a2083258e0283815ae156abab50fcb8bab6743026e6540b6b101f612b7fe4c101e47c2709e70d5b6559c800f20bf155dd50fea9af13cfee3043a26b339f135ad758c553f6052904de9679d99970eb8d410185f94d2542058d37baa8a69e2b083400eb6fcae313d92b17b4d187fa67da6f29df1f1e210d3a34b283dccde346f242476e7a88525cfe67b4fc17213d50b2a4ab954adf60919c1a1374100104e6fde9c7c0eb9a8692e5a512fa62ab80e12d657a152af90905f07570d2313902393f84bbd1a1d35ffb4a9602a77e6a8037cd85bf8fd0f7c807a663d28baeb227ac6423b0762dd2f7308828018bee0e3185165263192a83ce9077e3c4723a0fb195840d78da4b0bc5b32b05c9f1f9e7650a2958869e14a5c7aab3015271e5503115fa855c7b2f4f4f2270eedd0f24ce6796751e0da8afc6606e39016b9ec95c028dd178cd5ad674e9bca0643a08f73ec48781488e31713c33e58a06df58c8af257d6ee5a41534605e03b913da01c1b87d3c05c46612dfffa72d7937d535ea46d33292dcb4fd9d29b71f1857a00a9e0e713bf4c7f68bbdf927ab756810fdfb4e4f64da57ff876c481d56a29c1e63443a7219454f759909e46a08dfe282aa00c1fea86bf5caaff30a2862301b260035385ec4fc1aa2c5a733c1f0791a1ebcb71d8212b54426fb7c9f3ec3790047a123d3a0093e384c52f9650e4c36635b745d17b6b5bc97ba459ab8332e618a85d39f44fd4efd4a06c0d5bb66ad8dbfc38ab20e22265c96704a11e626e50c03c31b16c1ece164a21d36829a9b07bb1c7ce63a2449189853b244b3beb09447c39f6715113bd692738e9e28db8202a7d477d8cb694b320d2eabe2abf8928c6bc9eeec735eac578105fc7fc6a31e2f2020865e2205543cea8abf5ebb107f812182d2a881893a0aaa17e3c05e6379961216e839d970bd11914c88deec21c91d55b2ce31aca5c53c078729ed106dcd1684c22a8e3723063ca82021bdfe2c998ba4482a7370aed601e9b3675feaae0bff6a3322c33af1cc2e13dc9101be3fc78c9e0bc9e760f9bb0a371b0e6b8c3221f9cc96f2d6108e0da3c990faa22d6484d5b403148ca3cf52902676fbd61140c052529c971622a98a1de1c9bd418db45101591bb2add56909398ea77a28ee2c905e5f7333c6d360e7b57972dc0a4c98165f893eef8fb91c246d5e54bc52bf965a397f0c1e5a57ab51a9158f673c0528c017d644a2a8868adaf425cfc2aab3eada761b9abf35ff1ee2533ccc94e07b0192e543bc734a2a44758012713f7c53ea241d8c53598ffec995b1168be7a71f360e4e7ccb5c644dc1695d52c11d7da4de4593e75c421e7c35787cd79082dcbb1d394ccff23179fdc9141f546b0ecb3b0d7886d52f46f347ee448f435982364b058ac362417aa9ef55c40a5d39fdf68193c7fe7076c9fb7a1b96ce71092704c19a0c3257ab7949b7969ed9cdf6107061623e6f1a724787542c460bec2737e92053ca3762b85c2046a429199e2e64b6fb2175d60e61e9669a06fcd255a7f7b09f8be996cf58337d9ac4a350314fcd5e820e861c09c59932d5d102fc1814d02eef084d6336dec0a3218fa7905faee1b8bdae945eee98407262def646e6c3dfe1b3933e7564797e248949c9080fcba762fb87c04da8327d0d37ec2917039820570e34ed377910c40b6e50ada698f9f702703f600bc8f66515363e601e0894c933aa54dfbee6947e68835ada734bff32bd7688c7dcd67cd08ed5699b03c39b7b21a9eea8f6104593a23d49805d67d47b7a411a1c5e55c6ffb4fcc51a1ad97557c43684d9eec92769d47e9f2f584b40e19ad633db4df40049e3edd18a4d216578cfc4b43a2ce47e3d15dcf4f32f52697c5fd0dcb2178e8523af946f37d49b073d5f53ec9a7ddabf7400953d90cb101d23513f78f89ffa8c56f14598da759d42e0f49c751c3c22a7bc46946e1d0480f617f724850f267a3666d173568faf5c7007de938be62bb9c94e1b106d4852c031c201ab772b623e6837fe0a1202effed37d0b012fa303ae093af68ad26ae30dae2866c12df341def1cc98806f8674d1f60a862d887ce30dbbcf35e3c11d36c7baa42ebd77a7370d64997ddca668d9f4dae8be91b5dad56220be7b2bbe5b3a6e05fe6c2b12296e231839b47a38427947dba5432c0ea21271f87ca2d839482d1300c0687364c8c312255b0efac85ae7c463763ae4d8d69d116c7f4c496283fc6c8d38a71e6be08f54578bc9aeebacec5f131bac19e3003f6b6617d684946b4499750c156c8ecc44d164d3a667e52c8d381b7db3f1849c884c71e7e8bdcd31a7f606156a795ec420a56850bc430e92ed84563c88d07a2000e325bb788b2f1549886975966d66c6b507235f8a5dde261e92822c509a79121a4cf4781f6880c4c60444381647974fca8913010c56ce50c641852cb0ef6eb89584d23a595a40636577d60d118dd2e2c771f195641083743f4881f20ab591fa40b6656a39266bbbc5df024c9313b715ac4a6e7fb56a87bc12dc3077963169b4efd537e42824c8379e7dae06edd034557907c21df53a44f6133eee8c7bd43cfec4ac3ba3c780842f1f7184d6d79a1ca92b718e0e0cffb4f52d9c283701fa90a69ca969de4bf2fa5b873f6b77fd18bc375bfd26a6309286cf65b597d5aff6a1b6324ae87ff09d16eeb8ac9c4fc2ddffed306effdd044b8a5c97dc7db1b9e45e566109464391f93024d189518e96fc6d0fcf548573b9a6df72f1a7e0cc784a3e9b4b7b4f9bd3b407d51e8f5ac9f64c6e42d74010cadc02d030874df5421f006ce43eb63741d1eb244e6ddbf14935e94f3ae3fe3f6eab18a1ef2bfdc206f1a786823c9c1ce68047b72bcd63ebb4874d4c249969579efa38bbb7da00e4aac6b171072274743873d6e8a0037843a85dd9fbae1ab03c9165be284212f032a51cadbddf286631927deff69ad2acb3a7f8f251d56afde9413778a91bb2ac47a501257c0ef244f8473107bf5f83d0a7e9161fbf54d3a60ea8d6a9052f1a470a2956c3d6e3fde3f0c20a22064243d94aa87638174a74cb0d34211398b131b511eb1ed9754a205432a3911c86a4b6de927c2c57efc0278afca58aa95922ad716cdd2ca21ef4ce713ec8ef6b2d156c4b3c031f087c86321f8062a9eff05221b5101a97001177b1d4ca6b55d56d7a8aeae534116846d9481434fa4d15d5c6efeaeeb4388d8201409ab27e9824f56e32d830607fe22a870f63e5831fab5788d5ab920d3c02da53e1c05c7c189d4153f8abeea9ed66166d29f002173b2b7c778fa5b494ce83271b35e997005b07466b2bcb0c74294347a59cb047ae12521dbff057cedd9c18649f0b13b8e7799615eec4880e0bbc9560393af1e78bb86b64e4c022c6f3b5424aa5152a13bb0bd7f1cbb18bc11e538ebe180a653f4f1bc6c41b86f915aa4eac41e9cecbbe5f746fefe94e03d4464aaf28c39a5e42517b4bc467a23ee4a1d4d6c58c75895c5ef03d5302bb405a3f9ee894c821ca7aa4f6344eef9e3eab1a81ebb62a9021f69fc57426a15eed2e0e9a9be4864e4471bdf090f3b2bffe975de0a7544294389a0dfe14c8a64b2640e620104e686474a25d8b508d0b2633905264081c61a29dcfd4489f4094f195a113c5e88879396be838ed6161f6ed7e2e9cbe588fc599e7e32de91e55fce7e3a174bfaec9eee83ac40c67366ff2b4f52ad043af17fc766b3d2907efe9be46a5a3bb98be42edf565d242f8651a4da0ceb3f12789a93a4abc4df932209e74de0dffe88cbaa5cfa0e769756c98ccb5960625d4ac60da4bfdef7b9ce4b7f7a206239670fc6a5bf2d4134664ec53ef3b18afcaa772593f93ea383e6adb5d313e7aade00d2a38ae2051a03443106d3e02a90a3e9fc6e622dcff1a6fe73247c66414b4091f6dddde953425ba5688bc819400adae06ed3b5685e2069ea2aa62e57e74b825092f025335712cfc3e9c6680e85ea903c9ff08bda0ae54016192728ce73367b277955a05cb401d6028bb54748c9f4f0ab57acf55a9add938c36fe2d5ecb7a63c5b0eb5da9d3c609802a21567a16c85571303adc1e1da17fabdd0cf4f5ee6499e9a2573ed122e30a0ac4d3a9935140c0cd0c98c5df008c0ec0c4481b627f788f189fbbe09a27cb5c5c769aff49d696b32a5c326a59956c1f76adc060db70b50c77628b04960a66ef449b8ab94be673e7b4f6247624a9678f787228800ab9e5ddef9a98d31ee6d8e773633299fd6a4fb846d626c0c2e1c1cbce5c4dbd4d5d160dfc005c5cd6e1bf62f678a4ad9890ae2c281133b22d172437aae03a392e8b76f8440225fa1f17be526de7fed29f1293186780988cc0deea2622ce6de61d994abde04e7874fb443a6e2d66ab7c44be49147ed4de50c80c80cb7e860ff2d1934a47f01a934494d1a03334a4c047f0135136c168d4fd9ca49df7058be1377be877c00ec9d6d5afc1d5230404aa2d7009e6e5fdb2adbcd2baf27213288750affbac38e183ffde0a7711fb89ead9d9e488358454ee7739840a8466119435ccabdba614c09cf8ef11641378a8155aa01d0e06da8556952a157686b752e002db4abd5fbcff657f16bee8938916eccaab59433f8136bd29ab3523e03dd96405e58478b26c2f6e581703e7118277d6679529adee65293546c68c84cb422a8a84fbff8b4e2279a295863eac84c72c1d63b3db33f57e352d7f516d212f85aa1f27950622c43fd67849bc743fd6929697c75339bb46b3ba05891f8581ccab19a569872882c896d487dcbcfd576d92fb7004665e787ebba5732bcb334eeb658a0f95af914dfbecd9ba8f7c2d004d929173da9e3728c8cc721ae142eef10c0d20eed5883c2415a46bb594d940ac81f4ebc3d8edc7bb8aa7d23ea2cd55e11eddbc2903791dd14cb62f19c74659a416488c8eb6fb32167c934d48491a8e4a9c76aebff49b37b63278b11f59bcfc51576e0333832e5887d9fd20ccb07bf6e433865a8bad3f60398a5c2a4681f942673627ecbf4c960d2e34127594960fea084f3660fd8b1e5cc0690e2792cdbe3bfb39121b17b68c90650adb3881589658c3745e49cf002d93a66e5e6d1de7fe68dacdecdb7de63f1766fc5fd82599e43efcfca325f9626ffff27f4e1f6d9fa1cd35db46bf592fc00b0a8bbcc6de3803766fb0419a04ea28354c23974df56a57fb368597d2ba8d397457cf36ef9285d28052e9442e1272f830f9e34e5f58cb38e170ebc719a39e970ca82a8404d237624c44e084492c3561f5330da3e166a6149bff79fc3887b04e355a52bc0c7a3665ba9b5e95b062783c6ce93684738bf1e6d66743e57bdb314b5ad14bfe103f8d57a9273a3200708ba01f72858e718e01de727176be375b9aec10c9f075152c16bfc64770ca235267aa586bfe23e9f7580eb5a0dacf3d120b5ee6183b1a53f34705ef74867ff8f614a033e83e33f7eb188e6faef4ce7a45088b456ea16eac54b8dc6523fbdc312d10ef5e0afb7ff9071ffd4449caedc53399a365cb046bff9024e98037a869feb257a09398ac31f01f696a7451b0759ba40fa34b722e1b421fca8921f9bba8e0452f7402f69cd3fceeac4b3567d2a5551a7e9a31d4c0c8cda6830ebeb9c3f3fe57a22672e06b734ad3dd6a35e56d042a0f13717966fe89450bbe611802386725fa06ca334c3a269a4f724a71b55e2042301a1d7ea68a346b8d7d24976f9c07db451443f3674bb341828bebbd1e0d7a458dff16fd96d3ec21bc8fd9c619e1031a33647e17c2e546940a2ce0a04ce588bb9dfe3a45d1eb3e372ea4dc0abeb81379272e55a7f783cccf8ef42f39fbf79fdcda811cb673bc6c4585465fb968f3a147cc0ccd1c51d62062e989f9dc93b7f53c4c37a6352fadc7ee71a754b4b14d73046cbe433e2f57d6fe0a0b7496cba18cb32dc95642de42e24738eaf4536afebfe1f0b2238d990897c028ee339d7f0e9624e484165ac052a95575dbf2596264517e4e33e1b602e972a89e665dab597d8e0ab8c54be1567977d7c6924c31bcabb7b19d4837ff0f45539b559ed2396c90d83f4bd7783d23466dcf0a8816dd618ec0bcfbfecf3a87df2f38ba3b3afcf07383904ee7af3a773f647d777b52cc9ed564d4fe6e1a986bb34d2267d5c0613d8f02168c5ba47fff6dfab524f0173a8820cb56ef2056fc2aa1c9e423f9d525efedbba21b6b02a6bb1b33a6f1b55971b6890573c2ebf7086f15353310d12d723dcb3f1489bbd935d02f7cab824ec4abe1285c118d892d4c6dedf1d645d9ed23c6e95a5cecf8aa8472a3e73fac4dfd8559de75cb41785236e07ef44d519184bfec6d5fa82301b2ba7e393fdc401a7137b2782750b409fd5ca3d57d5f70a6389c28a6bb9594d24971288e67182a471c3369ba9358f7dcc1e10b44fb36a2fa56fd8d6a0bfb5ea64e1a81bda409051198388d8d54fa1040db118ff4cf6bc9b9c593f613cb2ab7550d334ab1140963d1a724d1b6c453c9c329d2a6e93c154694be6f885c916a4abfe0c34ab88a4c142e898a35fae2c0f3e4892de45a3739983e18ff157395fc4bb648ff23df7eb7e6760ff4a1a371a168f5dfb05e6ba13666290a05e215441908076d299ffed9d19a32b9788b58af07b5e6fd099bd9ac56513b10c436c17762b1d68ca7a62a711a843ca72cc60cb56d510a5bced96053f59941005f4d35a7e6d0c1cfbd843902f7067447e34d4b6915cecf0d92e7c54beadc95e1f67e1e0c5cf068e8535e8695de34decb3561da730745c4ef67baac2e59f3ae775fc4b1fa7b2ef4c94550c266b9bb95685f1da0571edf3184cd4279c1f9a81fb0fdaac43c61a1a7f6a7b22951e66b557edd5d7d53fa6e9ce2566324f5d4eeca27fd56d088877fee590a1133a171c6e03358d5ccd25ee50f3cf34195135fd3f679a597e305f5206e4a5404f5f7a8f0294a0c96b23c8e73e5f71d949e11b1ec754cb4f9deec742f8dab29040e1f25caf1bacfd11125bf7aa2835f8ba983a419a64917fa1d13e4badb4ea3094c481dd71bdcd8598f5481d75e3409c5b76522dd42f58a318e6ec2dc99dc11ca96dc15b0015887dea227eed51a4f9ce2b3407caafa40427016a9a17fc1e6be5451dec9c47383e29b0d2718f00d5ad2a7b458095d82e3e4c8dcb8bbf76842ff5d598f0e970e0c126a57037aa5a5c662ba3c1b868509d6e35d6abc38c97e88daa5abf22f2a441422b34ac50a0ef2c1203d7b601631256140d1763ca12546f807aa1be7a718611913f4a033bfc82be1f5e001974d51209e28ab23d8fd257abb3f78e23d5b17b4c32deb217cf31b04603c0a40995c34d30bd486caac77123325e3ca6445a018874ffc692c7929bb943aff127b5b2f61f2ba6f885918b627dfe4929554ac9d3186ed6805dd170ef899232e6d8e0ab270d772b7bca2487d3cd872da8d78cfaddc81e3516a57c95faf92c72e5831b79de1aaf478895bc7f1c9b7704c639de2bc8b5cdc46de7ba2612ec9447f0f7443b328e81d5bcf4e82cad48483ed5c84ae844a7ea4e0b1b9dd988915d53bd0152ae6d31a68b24f6a5054ec5242c10f694486da381f94166f061edb01508944d724a7ff9c3f0a0b8dc825580d6e506b05c134f14334d400a5281d8d440b75e0dcd2b186a4908bcac2f50baf126f3ebd818a9d2ea2ec43c2fb88ff8f0ec43f616d2b1674a57597fb43fc5402081951e44ac8d9952e1a230e360b2c2d1da6158d49a998567184bfb095d8787978e9c70d24a9254a0dfa5c35c73181a444cde69f1d9fa4f1c9a634410e15fb35f8e860fe08eb4f6903da646ea15fe2f4ea1c5f57a1012ade093beb574cacf0cd99d8654d3cda81f2b24d573350a30fa6b7007014c5358737072dfa814e3ad04d702612af3ba28038cd4f478ffe908b3c4dab9e3e3bde6fd102565d461506e56a82e114bea2047e7f84370fe2a983cdd9171c0b7c1a482e0f1b7068964002afc08eb3b09ef05c20473bbc9b7394bd0eb0ae4451c6fa2e80fd799fb6547d49f76e3e5027c8cb59305dbb54f6728a5175061d7299b432cf4101cfd5d463dfac6c3f8c72d1235ec47b1ed78f90007cf8a974d14cfac9882d69dd6ea126aceb3c23f03b6d77425cf85c40a6bb7728f36c5b8efab2cd0f894bfb4f6be03ced66b7128c5d018130162303d9c33abb3e4e5fe9e29cab08f2a2bf0ef7712dda7aa71ff1401befd213f727a73fb10ed30e40272efc98d6928a50339cadb6ba74faf1768b873134451c041b88dc211164ee7ab6ffd59ecf454265ded2be2682ec172380f2945088b158ffaf7415a5a7cc6d9867dedc346ff59ca879bf6e2667dd384f8ac9c1591aaeedab18c84bbe927be7f969cca2bcb2c9709f95641b91859fee279716735496834941e58f2050fece3166800335ba41e40db7320c723c00dc173afd36eb0e64eeabc265760e713aa2d8bfb4fb87a755a69bb50b259ce9081dc1ee3c2ad3ccdca514acc0244f58a45ce6ddd34121e49a5424b010e8b453e06a7b4b95907cc3073ff483302cdb57d07cc00a85c6999287ee64ccbddad2c2d83d977a63cb6f0e5c1ed81042935f1eb03c8605151b7f7a833789768d2e3dc64ba2d1cef24767fa1be3b7d99a9f981a2324546b7005ce64f03a171b89ea8941c4d822174bce1f55119796c39127cdb0e5a261e25df13f7cfb4b29e155adb082ac060d2779c480597b739fc3478d614a79872fbe69edc7c87bda0aaea9b035c63a9caca2d33f8cf1a185e988ecdcf65966b5d9fb03f91604fbbb9844baff11ffd0c7e572c4d5c09fc7e7523e5e4e6c71f61c4f6311938429ebb7d2ba80878a6799fd27d6fa5cfafa7766a35f501174a6c7bd2136d1862b7d0905c3afb239a0044c9eb28dfd36edb408b598215cab356184f32048b5a3e908e1b87712640dbed7cc073a5d2cd6133349b2fa5ea0e8da6387e614153adf0760a8869ab0e11b062b03ece1f26be5b8e1389e8aad8c451f2de0b1e128f3b06d82f68e6be263bf18ee755e16307969459aeb35c7638b49ff9895367680fc7dbc5bda94b6c23b5c7bf296d092294e150aa3327ad1371b930dbb548314d291db51f7feb0f5be17ce003dc9de6e70f9db225354171c69e4624af072bcdfa50c65b0a059226aa6fbe6adb35c1519b1fe795393d1241da175e1f986b31f3de99feb0690e39ffea955a99f8d71f7707113c0080dcdabe07ec8844132cf7eed8eea5b244dd09ef04acf2184e573dae5f4316bb611a8ba48c7bd2fbb31249a5079362304389265826f66df901941706b228e16b25e6679157cf9a35cb310c9056993afd19d0e9fd10da964863b9140d1f799eee230d4213da68835ace7520ee1bc6e5786db14ff182515cd1e686749ea54c0b5d2de48e8ba103ac31f32a1a0343779aff4707e05416c79e588e8b87866060cc066017e485b59a79607577caa192eefc30c7a35d0d00206834b7ba9810e28c333149f45a6d6894d199ecf8e31f2cbb7049aed954d5e1af3acdb98f8a49a6a429a26c415ffd4bb4427a02a7e1a4badd8aa86c900747796d87d50d9f9cdb03c48e24bc039faed84dbde3f37f1afca8d817164647f1b85e07d141b092e3a8c6ccdb0d942980ceb27dc9dddcf1a0203c047683de397b5d0142cbf188cbb713661b5d8182b6f84143d347b17cc08a611bf69ff3b02b3449addc0e7008b7a518304f10b479c7769f321d4093da20694284b2dcdc577d7f141c8157bb86d333758c0625cd58da86f4e7a41d7e51f1be57a65d5b8ab3fe0bacb3f9e9df08e689129cd3682cbb51924f1b451ef920e43a808b5246c17f186baf91910bcf4539ba24658bb55f0eb018e12b23f4d3ecc1cc1d8b8df72783387585bfb5c7d3ae840e59a7fe25b682d5d6dea7c136ba854efe1f53c33197afddc00087a20798a521cb34b4b5fe40aa9bf91da84e06f74a9259732a366d7eb6ec7ea5ab9383c551665503e9f3c1fc0c6cac80699f60d09e648be3eee0372932880d5d5f16162b5bcca28803accf0af5d25c5f9e28279f8e43a0975c7190f5269e4171a468cacc7d14805a4358a0d6fa1d60cae106af72ea21cb42ff6b8ffd084f9b1c96ac4989ad9c85f5fa23527a6b9e5431f6847a76cfcf3726e8040417de429b82782481a3107cfe4b8dbe068cee8a06aa3f1f254d5000bbbe55c4b7d53b50cb30e1df32ddadf543d61628e3d4f5593b84a054fe31dae039722483c151cfd476244d15e56010a25c62bd5b66a19fb91e00e552216473b4ce67ea52e9d48e7f9470fd0b8017b6fe18d03b8711cd5c39f08340e6ab6e93d712972be8dd446e8c31170dc3ebaa21aa953e4665be86d26f80a207673131cfef632813a08523977af1649826d1e52c791dc34d96e288ee1aebc1bf5a9415fb111856dc241d5a555fc37346258f90891c659bed478c0940e2a784d38cbdec2fcd538be97eca9c06dfcc9f87cf6244ba8a0465e256a84df41606da2311a1198e0b81686e17abca81efa369e20d1d0e39ae679807f7e3c746a8b8887575ad3515543de5132a7a470708b5e7b7fb944a1cd7f8c981e20d4e3c11cb117cd66c62bd68b0048599193e1eb4d9aab2c34c5e348b3ca73355489228be55d29c5c2adf43fd2c06cacd4750602b7d937eada2a3c1cd5e73513051e06d22fb3adae065bf3da156de4dd3eca2310212e0417a673988c664a320a5ca6af7ff59d985c6a804014a606750a5e01b49adb84c429f58006a6fb314b7c525644f9c0133d35d7a7d5578bfdcb1c5bcc235d0ac13879c95dc436aca2e9ddd23ae9d6c347b26cbca92a1c4c37b4597b57ed9a1879d86b16378515f3fa349bff55cec7bfdad23644cb8658d4e61152145e2eaad7dd15c8ea01f23228ff5e85bcc1e3cbe8841601ef620622457706404067132143f89e9a4e9d92cb9be9fa10e06310f62d2ab123fd0b2c5a3eff2b89a193145e5c639820555ce81bad6622f8a94b999f5ce50d7812162a47fd3af72697bb42785e098f208ebea817a1cd705eba4c27ba64eacd1e6862b0d629eca394bb5be5ba98dd219b8c23c79bb48867e775a1900fe72dafe0c412661b5ac7ff20e7da13ed8fbffd2281ffcfd1bf30ef86ed8cb15792f60a8c9c495c3ba2e2fb857971e52634a8fca636a4c9c78f9973d2e54478eb9a99464bd86ab5b1e1021fdcaa56b10c3c12a5a6999b42f42983534959eb8494ab06aeb8d54c3811f5d8b048a3910a7d677ef661bf60609fea500a2e9ef704b33ec0bda6de49f945eafd44f6e10e7dbaef3e6a40b889c7cbb02e0614a78cb108b5b4a3847f16580cc6d64861d0bfa60d72539c9554b543cf7f344fd6746c561b30770e294e0783639d4155cd68065a4aed7901ed5cbde468f4b39e36a55ed33b1ab0463caf30f9601f5f672200c10e6b388c235fb78b6cf7e591c7bf77c2db00263b9570cad3b59840f83271d9f5470096b3248168b9c1324d6b22bb99005cdc3c625166589690b068ac98da5cb651f738d6261cea169d47a11fdf530821a84c35f75f574780067749f80db24b75b4e019b37ed020baeb49b5faa7e1004e9ea0a153aa19a001b4b77fcd070ebd9457ef6f9f5b27cf3830cf1943d1ce57a3498dbdda51482c26c851382809861c2a712087b157a35607830d2c391c9536105f359f81fad27306b98e1448490164a064edfc3033ecfcb1c36c7ac0d3b3415cf0dbfcfd63701f72fb000c70d143efb4d11209abdadbfeef293cd4cc5fbbdbe34132cc570998c19bddabb3ee0b7937b7d89815a6378e2af668a10c3efbf153049e8e551cb7a6788971687471e562e3925e2c04907c2f563afa84ea3afe427bf40bc7f03fffe5fb9ebf03610a3101f812effb730bce8881f9795a0bb485e8c369b7324d45d0abf551d14d053f08d3e886fa40f602e93703d97c5590854f00d065222a193aed7284043a1331559dcdeb69818d31b36608650485ac6cdc63c3572e81a65a4677bad3740118944b58e36ca0f237c86cd79d4631105e32bf8bb68a0d22383f16590c52f132ead3728e4d4f27d03c58268ed616bacbdb2597a018c7f6c89738dd3f82b45401fb244d0d4dd4c0615db12d1a8bb7c685ad58638221236d4c63afbc011e6a0c9374db9bdbf39d2f28788fc46add21dafbd337eaf9508d586d272f73121c973d6043e7f4f1b482faecf4f143f9f6f4aca4cb781325279f1f7af6ce05757c9c6c18a574e44a1771b305c64be57464ff79ad0b06d19bb14641cdebf65ab22c90466f57df631d18ad8ec32fb649d5a86a2dac1cffc46cc7bc9611694e309257a340c6b83732c27723556a8aa59c4f4ed4dd9ecea9f8d29bc27d20875723f22c6c90a7b08d63eddc2bedd69e0cf00490a7c2605bceba8caedeabc07cb6a0c66fb0ee67ad51b4e0887ad01eec4e3657299e2f25cbde4b97b4730caacae85d242a5ab88af8f7fd75a02537e4d9b2e37522632c0023e9da552105cee90e3ac694ca1b52e50f458f87df6e5325d7b0833c05e682dbb169f97eeae7e2cf7d4ac29c67dfc92e3370f531d90a9c50da03e2e89f2d6b4e7e2d51f497ebee0a36fa4aff3ea3db60076762f3e5b2cb1e89678853507b9630a6bc38f53a8f52a7217879c9b50844e05289f608a79019411208a10b92b4691d5881e8ea60e2f656c4ce8185424774437ff4fbbb2c451cb33af87a437fb477d79d1201a7e215c5c45f663e064df6d9028a1dfaa7f64967f0acb7ba06cf8b54e2688a86f7c90160c6f11563f1cc066137dc2d91fbf414c0dba71bddb2c48478d669b219b3338fb5a0e9db485674b500fc8427b7f3b087dc85ad0f875e60185168a38d6fe2c0834e8ea09f7829ae858d3750e898532bc59c244e0f3613efb77d16ebe3c0a1dfc3f28f98ed45eaa8575f910efa3e539fe264883f23a47410364e1b924c5ca752bd0674c32be3a4d7bfe890a9568a296003b1a22c57afb0606414f61b961a12c5d495c3f01787d28c4980cc0d6bce94e0032be428cb7fd395c666b1beba981e2f03887d322bae3ad2d56b219d84a0f11635490588a5de37ce4356ba85574af6251acc7d4214a832035f309dafc8af767b5cbfbddd4d98478d2d1561ee4f3f023b133b3c973149964c9aa0918a5d6ee9a15f6fbaa1ee392a4dfc5a09f7b4d256cbcb3c119a66746a1b906c512cda897fcfe99ec4d9fb4cb36e415513dee8b0aac05184faffd6e711c71e6778c2daa263f1b2c8041794e0822455a1fa30281d971da3eeeca3c5371930c1b14343388d4a30ef4d6c8baac672f63906fac9f436c8c92823df398ff7abaef58181cf80b612e58caf73a3f0ea5c630f1c56006cd929ee8f2d08d1c151089fe3844f2ee5b0c08c87917bc33f51237aeffb7585d3c3a46c35c31ba387d1af0afb2fe7c0ec9d70361e592967b639fc14597598b4a3b775a8a9d9c82a86c9dcb81568abfede162adfe24b1ce6017da71984521f63cbbf0de417ba4391160c80da3d73be758813b2c47ce026d640c9c34687a81fd8ed45372189d5c70f26b47c5a66270584f4a37f6613ac3578cff2edce2b873562935b479ea79f5e0923e7dee15f6c8d42357dabbb5b28e559cfda368f06be1c5b42095a72fd485d8f34cd231c87863e14fdc9b75cdef3c20b983f6f7d6d1a979e9e58aa6f5cafce24cf193a257d7bf10d850a3c303e1e415dd9fb9cf598b2072b8b7c441d6eb240969e831656d7a444627a6320a8f77d6e87c36af5458437f4ef4ef1927c0bf07126162cd5eb420f03a5ae96768b8e5a2543957a0c2e88e02d77effeb31c5cde0bb1f61e3e051214c4e638a078d71db0610402e576dc27169fe3a5dc1c95299a5dce3d93625b09bbce3a457a1dffa2873c6e6768f25f3e5240bb6676818023ab84cb0ad49d85eaa27980839c1cb2ea29c21b7c470b1ead7399cf7ca53b0cf76d3e96df5b9fc5a0449af19a3fc43f9676610e2e7fa6ac109f6b6193ae08acdfdb7bde00fc6cb0e067ccb858fc912d13939d02628e91381cdba9a49e2f108379764798471b4fa8d95a446b4ccfe43d2aa9e9083110796061bdcf307cd823380ab9d871dce12a7d86fb65d6b1e3bb45657426f83c667919ff84084be5291dc8fd5ee36e53e819c824dfbbade605be81652591065af2f92f929d38d194f73ad05bc9087c4c59275a8e90b8899fdac9f1f2700d8ad3861d10d5ccdf639101ed2c2e8e13f0c37f97309a112fee150e46e969f6f6c65df451c4e8d63dddf9f8222e7108855617c742faee2edfbc0b8209e7e2a4c1c0bd0bc5b8409391c8c8a24477a888b4c47dd9c2ef70c76bbf3f7dbeed10d4df29ce7125171f1b1fd5b3107f14545c13ef3b1416f004853129fe1b126cefdf6de890fe65f5f7189bc7de1c1f138a8d21e080264f9ed0cc2a874a651f8676b8a87371e8bea5dd8737fc84333d5570049f63180a8b3bd0840be287980df37db32b1fcce24e53c80db26fce4f161b3e6881eb1fbb1aeedfc4e88928f70d7579d3eb21df36d72b8d385aff1247015806830013ff3a44c501cfaac50cd914cce9017dff1df8b40faed9f518d9728344ffabbc2a3f7d67fc5cb32352877bcad5dff3270df45f898797a8874a1013d9da62a4ce1da7da9744d9430b036b932ed31b8a886219d895e9246ac870168584ed26772188daddb9c62b759513d8c994204961928b9c96794e3ae7438a13a26ce5708c930e48f6d0dc4a0cca4da589e2b9e6045ecb3fad237f3ce7a866ef32ff036d13b9405aae44c5623cdbff4256bccf9ce715905a5c5d18b783bd1ae1ec58d2684be9274ceb9c4ba2118601dfcd467657a353798c01d627b4bf14be6bb872f6c7d259c9b0fed37e523aec0fa1e19d4eb3e83e69f8370593bfeb88d941660d05984f082ae7a5a281bbddd52d9887a737eeac722553e6b9eaab36fa005fe26f938c364f53c86062ae30644cb83c43b0f372f1231c9ebac8aabfb64a475994a9ed503600c04cca4c52748302d82f05c3c891937149d667853fb957077b436a034d8313a91b0cb23e2ed555c82a873c064f9179bcba69163083ced259dd34db440ff98a666a9c0350bb01bbd1c13142ac64819b5f2763c33c7b16000696a12a9aed25405ff5e7e2490f253b4f673624cc8f3c1889decd6eaa15df4112cf259425df897b5d727f4c5eb555a011ea180c2c8d8db8be195a2e39a6b8f6f34c14d9af40a7ab2822091db0bb96a3fe821ef54c92722ee9ed3215244fb7931767f951ef77c15a28cf1ef9c182e061ec6858d1deb76b0dcebd7d95dc526f629b55e2fd0fadc02c8b547d9951a4539f46c89f7e952275af5f3c1f81e0aff427a3ebebe52a27fda4fb295a23f0cc4f7bc9982365a2cc3fe63874e6582c8e2555eb7f1a5bef91561bc6127e7e271678ab0d00a284ef51237550066b4b5f2c0d6453609589b981346c41e5cbaf6f7f382b25cf0615ba769c42ab35c662656c33d88b052f9865d0bb9beb977ff979fa6a5294b16b1c37cc492e4940ac67e3527d4b0909422e7392cdc1f1b2e37430242cb0ec51d010e8a3e6bd77fa294db25c421596b35f7c9fd46e4bde3fac3e30089d3148a75f4762d47c3fad6e76526c5766e4e0435eef7b8382e9a933336a1b6d193ab9518708a634d17206d7afdc643722f9b19ee360a8366362bdef6d1a85352e1fa403087b7367b3927e469b450094e37e690504e26c09931707d25b8a6437ba8802e3d8209ac8b45f8b6add9710b5985b049fd6464dbb09dedf251307c5f9586bfd20ea3b2e053e8bcd0f4451c37c48fcc3cfae478706edb6ca702853f2e4da760fa21c270eb220fd780890ee715fd5b6dfa055851e86e086fb57c277613728c1da5cf01df353c4e5d1769b419539f6ce1ddac447ea2947b481fa536a8e08bb789a28bc89cd277b4fca6c557d1c164edceeaf98059c6ad1ddc594ec2dd1644714d9e5b3e466ac7d8eb10facbbc2dca0a7092419ffb83d0170bf98329fa4dbe2eb73d733534b6b79b12edd8b04537cc22cf79a068eaff4c3dd889b48e88ba80e062a1a5663994eadb8a75b3cf40a47f14d5f9d7ee656716ea332e7705c5e57ad77ebb8b72c7ed981c62b2f7616f6c1d6ba2a6281bf4e139e50b0c1905c0b7e73a1ef7a6234dd8a48ebb3b51190fd5ec8ab9766cd3b9ad7de55e464b55d3e7a72810017b8c6a9c2aab486f3444636d4dd11e6f7259f30a827db1e2214142a58156739b223034c1118a0bdf0d92debe76405799aee47b386d0c1e8ad0ffc541e52257d5a694f69fa282dfd3734ec345a091407afa4655672b4aee96af81835454841d205b80d1d6fa030dacef9581c2833130cd9c729ec85f4438fda921631a82ca955d218f27576c72041e5ea75bf23bcb40d21ec5ae49e63250bd31034d84dfd1120ec1c22bba4013a8559aa5f4c20d02af42cdd2ccc8591311804263aff0a631941b3300ba334695f49c8d331db748e2a6867f70b8cf2491fe9d57f9fb9838b3904b5e83c2feb08f79fda82034a892dcb8a4a73ffcf3ae380998ebfea08798475d8c93f1788204ebc5eba415a393bee0653d1569363469ed9c7f5859a862f6d3447b2c0a5e9221e4573c0abc8c6333b1e1d5c764ff1a9d1ff71eca3e256aa244f125668e9715fe9c776051a27ed4b4dc9df1aa8a49a821c91684ce0e6c70b305ce21c738f95ea2bbdcf7768265be86fa101e57e112fc4d887d7a38cea08e7f7dc2cffcc011c1300dd47651c9080a645012e7b57e42a4ddc57b762fb7d72feac3f86f37c654a6845cc9d1f435dabffcc2a02f96101558456407db3f5e81c8ca039ed5ee3eb1368832453e22535ad150431a6b3d0d8d2444387669b6d8991b7941ef7938cf78ba58d9e0bd757440ebcec9888f52aac45372e2f4ea205fa06ff96a9875ac789392953aef726c879c766cd6be253cebb34e17f3564c7a56f0cecca20d479fe8ecb5aa69424768c23b75136700749ddbde123fba362ec71e8feccf99d1672cc540ae6028947c88e291ac8089dd36742e3106a301e30b45d31aaae8083be693216d07365fa7921c9a7957cf8cda5eeb9746126ec305fbab827d3fbbeb544f783374b77f6d3db6d817959cb1f2cc3a16a0575e65a93d541519bdba1fd7d6ff64dc34558d0f8c1ed1d4d9990c29cbc3d879a8f8e64539c21b8b0475bfbb37f0837e9349cec1385c884920d3bfa93ddc20fb1042c9de0fb1bdaa41a594928a0d3deca98fcd7a50a491268da63656faaee8156510951ab41f9e34aa3c4d62fcf1339198cafaaeba06ed6299bd66d8e7d02d79f336a00b6bd52c8e3b2fc173dc9d84ac6d5093afc0d09a1a635a83a09401f6843f16426598714e5fe046298c0747ea7a4210f9ed274398324ac1748f582dd218fa58077f27dad6d9b3ed6edec0c5cc3827db9afd76ef23647eafd60f790164c093e1a812c1e1a45aef0443df34f995675d142a977c72093ad609cf6943673dfdf7977c4a337349210f22a89c1fe7b1669b407068ea5a5716a336460b311f73871c1ba1e1c75b8cfd9fe20b77373c63a07bb4a2fb6fc28b077b144854e3e25074c9faee39b6560f5ddcd6fa27d0e6781416923def96bf1f027f90014b6865ce2f7684fe60a7bfd896f5df9264775489851d499c240489d9e1881c2c75f5332b05c66598435fb0cb1708531dfd5fce88c1bdac4e810bee623905aa7af2553f450182d734700766f889288b2a1507cdfbb38ecb8c18c9ac95d90ba916e662db1c0f4607ec2560c39038033550cd179ecadfae394a84862f0d58779000864118be94a4d20232c35af637ca1af359a6c4eb2a0e8d707559a7171193b0e9d355dc52278afdd0240cc947fc375e991ec643c0fac60dadd497dc36692a6efbeafd204a37bbe15b9774b4755ba087b9efde95bb8c1c2e03c2f655441e1c09e2745db1c28c9429c876005306d3ba96bb15d6c51015cce5330b1703fea31259904adc36a2d3c88d3af2473346452b79737b4356ff956a63a28d45c6c2bb920b1cf058ea459319c0072da9e2c329df5be26d62cbabba3be9023fcb77c5ce68012d97bb7d3dfcab0b74a9e5c321fbfc06c6f15a0a046c511e30f504ffd4bddb4460c5b6c0392f242084999b7975bbbe0609a9580e0d2c6ca421674fb5e2e28bfe63a8a9a98a6e69dc3ddd51eea138dff51a589911cdd7f401856582108242a1996d5106c0d61c91a80950ee7d8ce10bcf3c66bf4c201a9684f9db7cd4b656efe08f6d56e45f9f1107046955a7e4e08e53670c6cecad8c5e296e7cee95ecefc48c45239ceb73b0e71fd10acab529697f0856a2d9d0a5638e25e5e842583c97c41ee4e0737d105e3dc139d46ba55081125af17acc5c149246657d62b449b2359a6939fab7d460709d528feca4c9b7a7f5535ac72f82be557c9d919d7c878de481c42bd0c849fd529f1c99d3c8719f0ca9a4065d6643b9935927c5ac39ea3d350cf770dfd176d2d3008a62c05f79d2826fcb7d3092830249b8b93473965dace96ea7b29c8c9e8742cc822ae077a3b279ad8a1712a910b2da66265d17c5b311da6b751188dada8322791dfd7c4f4eaa81403c9a40500a7bcba57564c39b96359dc3e5261542614e377bbc0c56d35c29637326022c8e2774f7714d60530928267e17eb2d5accf54e4b0d35ca0b5d23a33fdf714c5c49dc48e57039931fcfb8ac5a2a75a8dad4b14222649472fcd4232a18d73b9b3fcafdaa5b405f237b5844e8e1ddc41ddb50f87a81d7ebfc0a1d665d7dd9ecf182c76b387fb3718d35d86d541388bbd4413daf8b916e5fb963de6d50175fb85daea1a643c384cd8d33a4bced254eb9b21cd1d53b14fef52c8ce5bcb4206166b39f74321ae6e08cb8c4788dabfe789cae4df15f5a9969b3103c0af8c4ca23086ec96028c0de0cfac9ac45847df76234899af1e6f7c163dacd3c56ae80bffe6b0e184b7ad37d33abaf6798706167ab233a3add38a21b94f650a9dbb47d5ea5a78db81a83a896286666f25f73acf9922ada325d01e3764290fd6a77e39ad9da0e368074e9f8134969197732e930a419b777e94a0d97efbde322d92647f1c9ebd1bc2e590d6095eaa72d3ba3697c67f2a8c1bcc4bc09e0007aa91ea33b79c3d01f8fb070341e0b30c5925b205c3fd2c9261e128803a168b118cbbb7c35c40590c7e6877f0ae66fcdc3d7362b8b992c1780c62877e8cfe5a0e498ec4d53f80c8b90c5708c758a35578ecbb70c9ec4aa5bcb68e777b1f0844a8efb834c5c3d732855be02d3d48301a75677c86cbebc8a5f6b74cc73c2d9dc43c1168af0dafa750957bcac164349581ffbf11d6458a167ca1d5aed71e38c9e973587219cc25da440298846c06de053a28facadcddee144f1fe29676adf7b3f3fd863e2c7513909b9c0c71345bfed715f5086c77f03749adfb44d34f55c12c074dcc3a29c1c0136dbd02cab7686e83b2b968b7680465e13e924b0b1d4a72ef66a228852607b10d03a3c22aa28bc2f1e6c7222ee67e1bef7354078ddb23382ffcd8f4409b8a8ea13a0f9b72605402441273fb7fedf8bdebb569a921a398837d2344e4a3ce0125f9f036a378d8ca74c7647cb0f831be8a3b1e1b78b0dc5b817163542b0c311bb143f8f3c1aae7d3cac5da63f48f322eeda396b79792cd33f642c31b0157c16e9c26e4b9e0d846dffaf970b9386b1681e96659350ad3a015897ecb52e86a18fe044fc264dda7bde1ad6f1334a2e3db274699e3fb8aeeb7215e82a2c13c486263317742a712ea2b71784223389adcdfd00b76f5e49c81bb94751b57d807bbfde7843e8ba54e13671482c59b914a50baeb5ae4ca9732c196cb91b308e42dd9fb334779fb4a388f7d70740cdbcb0e2a713ac84218eb864758077c35550042aba865f1bbe79d7d84f809f202d29858927daf1f02909ca63136a28b798eba05bccc8d4f58ed5058014dee783513676329959fcb9419a5dd33de62326e972d1ef9a6d0037a2cce44835662ab8e980d56f7baa905a9c409fd1d6417149748b3fefa6f6029fc16af2cbdeec6b259b66836411d5de1959e161f1bb19ef79a36e5e38c3867c93662afe01b099530bdc608c83a1966583ef713245a8031516c446d3f2d37b095c19f6c443a92dc4292e4dbaa030c4f4ca638212f446e3a3721026bfd71be54faf93ea99024f26f9fd49ffd0a59637829932f0928003b1e1ddbe63746556d1935fcf166f0b0c0d2495abf670e50363a7e611f130b43bdfce3ca3450219f28e961ac147710ef5b6125a1cc6248d54479191ff13398f0311fd8da146c5b8b60215625df6cbc69beb0d11247ba0819ff67ea3af14442b14ea5f7a02f12ee5992263371428531a612c95003414b0c4bf8d7b92042bf143423615a221b47313d64e0ef4d18129ed8e0838e918877b10dd151b3e714eebdb9055a2a0a75e653c6487e6f3dad2822b62c9742545f51c62bb080a0b39ead11122a6f9fb0d5834b98eef00b63a2374212dd87f217861fa260d1eb44ab8d9e64366b6d2bce15558b2a2de8d00d5d5c74a8a0d1160c34367156fcf4e631fdd56944b5de2e63ab8d27c4c3350d1fb69464c8f5d58ada5bf528c9e365ca7f8ef424735d8969acc375ea25c6fecd58f7b0e3a2dbbabdae45e7107a8648964baf5a1ffb5f1789803357eff10778e7a349ed5a0eed5b6f7b1080a7812da5ecef134e74e8e023f4d7cc86b8c4d42855acea560878120f41890b72367f21b489134cf812ab357ba6d14b0e43fb3012cb9990ad9384f411b1eb92e34a4eb34c2d16022a1a49fafddb400e2d0c98f773ee927159e3e55699e233f271fd31527f2cadf22150a64a5578f241795f90c95c62d7972157f4bdec6089cab8e9c3022c4ded573bd5e677a415a1753dcfe0bda27aef91032990a3bd3fafcef33ea82367542c12b491786c7a50b95c726960feab761387008212862961f96ee6856fde79086b2a7697229f2624ac3f2dc4f22d8bbe17c31f658e47c70c63235e244fc117aafc9b7afa1fe6626df8d661356c8ad298dfef440d301e13570e68bc80a7cb45e3be4c9c4f300daeec05668d2ebd4f972b7ed66b198fec69a335f4e37f4f24cf036ebec3a5381824a0654ece6afb811339c1663aa31f907cf0310c73b137c1e6980b058ff52a91c8515f81b5e22d53248cd4572bd2895a953dd8ad26a5f205e59e0966adbc472464283bf9b0ac62975685c10782c306ed3c0bcdfc671b73ddc2b94c8cbe32b5247f2cf5417237e70bcfa064f323aea5099843a54732a65bac42bf1cfdbb936731c6ace58c96fcf408e4c7a1da9729b4591354370faf10b7f088bd819a8bda49cb6528ac26170d24f50b9048e17270f5969d7741728918b8720ff0600c147bdd9e0a26f910e926d300421b901d76a17074dfef2ec01cb9e9369dd3ef7f2702bcbc53461db67c6a21cbccedaffeab059724a93daae0687abe7a66c95c0be4cebb65d7bddda5fdc2c817175ecd5c608f3fd997300d87b3876a348b9c254b4706cf4c4f96d1c521b528fbc683b6743cd3b5fe06568a691cdffd6d48265095fe08775a69f4bef2b874a1e188ec736aa5e5bfd78c3bb20434fce26c1ff72d58a35b813d4d7ab87c3a918ce55b6c8b5c288fa23d24031ac33269988c257c6be08ccbb636ac73aff8ab728d765eeaffdf9dd6d0b90901d951b8be2f8656b232f87776d438c1330b7a7f3ebdbf0503c0da0c54d01b156c0a93bfce46da5426934944099ca6e75b29e26d0be613ca6b04799dc11f1cebad5a15640a9eabc8f77ba3061984785c728d2355b1dc82f24bbd74ce58ebc6ef64b2dcfdf84b0d0ea20cecdf355ed105a21033b75bffa095a5aeb73871570a330c3b68924a46a5f930cd9a1f3c553f79045b4be4989876290527e6d5b400157790e28ea1d0dff278e95b72996509c5f7aebb12db086889eb50cab4665a6e5640d5fa37a7ce034afdbfa776e5f1eb39c94439195e1477bf2957e24948ca0b2330f6541ee7b78429c09edbdb76446555cb6feceb6102139a7f31df8ef1eaf6d63111ae4e30aff7ae08942cdfefec2e6a9167104d379d73a4be12143896d159dc52ea25f03c65810087da87f63d53a4dbba151461ee2cd35ec616f0386cb2f418bfa9bfc3578df924b5a38033e989ab436e99376ff6a69818a6f81b56fa77ef3f667ad9fa66302d7680dd919115ade4455a7d9fb5486f5d14ccf8a70782d61ae582cfa23c527f5fa3bac9ba8bd162a99e52c1afef8b364fe3f082818ea2bf249a9bcb8de8c660e5cb7d93a1388ff6f907f6c1960368273a0dfc1d2cbd36f35dad0f6126314683c03569a46936f57a3e52adca07e225dfaeec08ef9e1baaa764b72edb78f7a4fb03b1410f03b6838ea3196fd6081f35416e3478ddbba32590b91c727b668910e0e50da97475d4ba23c5c02181170626d760dffc903ae51f2c48ffd86e72abd84c3724982cf1fefcb84e85fd12648544be03368cedfdceda6e44b406ae698773088a53ff386d0529e4d3728d3e40b54eee3fe465f21c6f906c985503ce99472fbebffcfe85ee3cbede83f8a6944d49f8e8c4161796e807b4546c1cfe9613cc9b35fd6521ee148d1ba3103a47227b92c57f4d4edfafe01a74ef9c60495aa04dabc8105f66ecaf061a1351eeba912af3a55bddcb7c63c45f2f252185d3a067d2f36909705d40af58b571bd444125d35c50ff8abdde35851e89d6839c857b93d77007451ed74ae60a8c5e0cd70a92526d11eb125daa6318cbea6038ccac82ea2f69f45a14065ef0b286560ce6e573bdd972fecd235227fcf5993cc75a3e5a27d047088cd5f1cc30ee3f56893f4ff6dd90c90cc4aecf4803c817ea7a8eba80dbad191af04ced733d16bed1694058cdf37fdfc59757affd2cc88d5cab2062d6db69803d109c0dc31648d5ffe38077ffeab6bb512e79d0b8f09496171c94316b278aa8d9d71c10f704e39d922f0ffbf95dbf1df756fabeb0b8f57ec04d3bb212c38e920a031062161a7dfae4b5c762a676c8109f37685d6dc55d4f9fedfc9529bc2620529aed98a0ab235023c13b72020c64db321b1481a79a9b5f79bfd8295e0219bd3c0016b1f3b95420344cfcadddc121c779bf9fd6cf4ecfc47616027671faa499bc96e4bea4d5dfaee138d98f086f3c1ed581ca9e6fc6740f5a3ab18f7ff737f52971b223bc2db2ec3899e14b2fffa47a7693437b7f0d83aed0b65951d68767ab532a7e30edf022e50f664326543fa671fd1774c81521d5d471c01931bf5994755060327a35a58d7a720630843317deba34dac1f994e703ffbc4c085e0802afac575554f15e1125dc05aab27ab521c5cb26ad163a2140f24a0b3508440ddbfc906e66bb9b6da36302807389b932b02d22fddf17da660190e19405d807329b199d47839edf84982d1ecd65a4f84bbdc1188e76e6da9c7070618f0ff5bbcd3201ffd772ff98594c54142587150c2343268a4bafc9681861c5514f0d3f05cf33f45cdeddcffa381439178e1ba7c528829bbf911bab6e3bc1369a67fbdc2b69b0746ebdf192648d497ca5053f0599749c3368e32a2c5f67e7e9354529d3e46c4e757b4012e40d46988733db72f02b217cdfbe83436a812ec6bab207dfe9811aee81ca666fddabb43febb53b6f2b7d4eb0198d6c78d1d36605411b95fc650e5b809cd8401c62930039389e83068a47d8139e35b05c7ca99e0e53c5aa219200dfe3abc287d3b6fac6a7ceb42627c4cbe4dd16ce7ad9d2ab379fc983038aab1e80c9cb59839802e6bbaf02afcf7a1fe029e1f19063224684c4b21fdc2d248187d9046b432bf19a2633ddd0924ea4fc9346bcf788ed264cdbc9f98b689b84f2d7f845161c3f9ebfaa9d947882fa71b36d46e64496db699522d37e34e9d793ac9aaea57b323a8fc3303cf8b39f18949e61e28e4558bf38797eea2d06330a6b27247487d73806ec3a707a0c1b0a3c94b32f65d6993301aab85da618c954f2c07be1435f6a0256e5d3dc050dac2279dbce5c3bafb7758d1444bc8c538cfc6963068b68238d300881d55387845b3da2c974cdcff5db4b43cd07fb84bce68e704e4b617c21d3218078833fb0b6f59fcaf47277aeb4c9f38079be4dbb624f1c87ffa8d241691dbb07e3d549d8486df1086652816632eda6901ead0b0a2709241b2b0a3cf113fde7ef03582c81f69af516eb21c02fd2dbee1878ab3e54c8e36791cb42a5851377219396b0bb419865c78a73e4bc08cc3bee638eb714005babd20a6c1f6e84478943839c30e24c676d15803fd4fba12a3d479dcfbc1eb37893ee4344203f2eeed4eb715fb19b78fb3cdc8b7b8ec0e78160e1122e232becae1fb47d8285530f54d78b89011a788b6c7d5908e6ae6b210933e8e0301eae0e65197ca9cdc753d7c4561ad15a8b701d1ace083fb1b88ec8272a0a41db99df29a42355b535ba6f6e3667e637f5f84ac3e6736f7d87bedf3d856ab68c8bfebaf22805e4206e4c03bdc36e52a044fae14fef4e6afcde63f34767a4626a91b453d2f7bf22aec045cee89a3b0e6664dbe7e7a064da593045f3d44362613483760f911daf51ba1ef76d0d0a3ad3c0bd4da131030217f9b7a85f3a6810c87b69b220ce863b03561b098b45a221e520ff6a1e6c07b261a2800ba8088efcf0b8d25fd10fae9eac0bde20702f5a17214bc1b29d784c28ca62523f57cabb4d80357f4674aa0ae3474dc90dbb02906af8007c4f6ac7d5bedcb60c617a547cbaa66cdc642730343f57624e81ad0a3bb0bdae387b887fb6bcf76341997b904146d8630d058c06dc06fcf6515b68df292546384d5ffdb46027e4f2823d5b27f6905672c06957a197383890a5d6416c8d3d3a18ca32b47f74058330e8c0b8f08ee17c0120e137751ae2ebac0f214a15f7a19a8234dddd0e9d65639e2a635429edd2ff83c99fabe8982edf005ca96838e3d22f80cef4f8029c256c48de3f73e83b1aa77a70c955805908f0283c5daa80a3e8a606100f6f488d56e4318c309dbaec82fdf3f5c371eb1468fba30e7e5b2a8730f87e80fe29fd39fadf86026441a06f11b8726e05a7a6bf527ef328dae9cfdac8c0f4fce87e47c7964b4cbcad19dff39f6379228dd5833201446c2af05dc970e1d4a2adf574a06fe8a9f2f5070c53059f3c72a9779b7ff6f886383371db337baf4f81ca8916ca23fe39621066f1c408ad55cdd135a6087c9eaf7f30ddb57f7c6ce11ec9fb7946a038f827c68956881349ff2764b3df2b3a63fabc1ed0f26185265742d01540b0ed6457efa1533fc03db3e428178ffcae021557fac260499df656c81eeef780bf761c9882ee9365cc339653685665366b4e31d33b47c20d10b08826b06c8bebbe8c6e97d8e32a552f85b77db9f4cdcc054ef7222a7ebb1f4cd2b1dcb2f938de5a598bbcef19714a289e3aec19a9e686c8541a28a727d4a7fe02788c54e1c670f2182f2d390feecbd4504e931d5823e073389446863b3c16da0f311a5fa6b379a8d72fca8b13210b4c47e62972a94be896dadc814dccde086b0f5b42f865a7c65d152891042c3a8c6ec0778937787e3ac08d66dd3b201b4a1c64efe2cb9d4e857a9b0f0ac4865a2a5330b6daa09054a5c3bc1106c12a69e177ed958f8bbcbc2bd964256688278fb011f922d76fc2c8b69f06cd239b68666258081972f531c044456a2186869d8b69a40ae84345a23a1f7235337d66a150f886177c9b03abacd2e1bb1c019c5709421ec8f0cfd78b965830e14326a835e7818c8ce07f81f2289a3327e290e1389f6700ca4c5af0ec27e02936100995f8a35d97cbffce2eb29311602d5e9fce369bd393a642736543a39f34e2e7bd4869c22c7115623906a5cd13cc36523bfafdfe3bf8c5172c736869de7d9c1046939a0e04d0bfdd7ac26c68a72f167ac439e10f1cc2c29ba8123cacab3955ae79530d49fe8a733a665137ca40ec474535b1ac3203844ed26cdce3526376dd656ce89e42302170e50be9b9f255ee8d7188a92f25998706e4e22929aed3f92ccec3523f285828df817e3a1ad9d355bad3348df9735f0ba39040fea8d8c39eeb7518284062e7946cacd73f3f4f51fa2efcbdc77beed39b3cbb40eabe94052f73196bd452fc3ee360e89cc5c73627c5083612828d8520a2f2fe12f92a9506db27ca752844ccb611e04d2a174b952b1a887925a848f194ee556aae5c1b2b23822fd56e165024c56fd34bf794c964738e0696446bb56151c675f57547c4d366b01b87a4b6ee5a7789f2f88a7296be7d60f81c2fae05ceddcc011c094de3b91856a9f04ae85a769480c87e3802c09b65278c76fd41b6a2e58162ce5973ab465f4e156ad7103da6d887221cadc4355692702da4f3cfe7a75990061e79577f97d42182052fa6d443f011d627890c004c78d4ef3b70941cabe6a7ec6f089ef67925d170afdfeac4c1980313cc4189a72b4c0d0db3711549f4e49e2d94556be145e299899305a8430a8abd8f0374d208a6aff690faafc4690be61a093782290222b6e78a7980c71177153e7c60ed62d89304bd172d9fa1237f5fcbdfdaaad77ba23e445b318951746ed052c08980df6273027ac223d89a8789f31c73ff42727e8f0f27a3ecdcaefbbc2ac8940cb6f993e053ad378be728204e6564b5858aa3b629151bdfe8fb8cf55d42edd9407f9407313d7bb4c1546b0e0a9e9a8c4bdc925c598892cfb42020e0407afc632db8771e81851c55a9391f92188d57b47cbc31443e9c2a25b504710e69c04c2b1b8a9f7e21c8f733add69f0551c9b10a964bbb87bbe845f32432efcded8ffa3b332adfde8ac0a5eab1bb2d38a4e6741ea78932685734e2ba9de58d3d65aa75d76fbfa30546cf0d12fea1be710541ec14c87117ec7d44919c8ee3018c67658a4cba1ca0b7d9d3fa477bd631923f9fd64126044e654a765562d50b3f9a65f5bed8914732efec5b18ff7d7e8c991be4c3e33202744afafa4ebc471fb966a9df332221254a373632eb35433675def520ed4ed1f4cdf0d6f512f747c2cbae1bed202aa34ba23ea36bd6d6811b10a8f9034045764cde020a061f48bbc6621d2dcd207f81684917ee05af43d6f302dbc390f5704a1c18471c744feaac555a5f7a1c1e28f3be59b4a4fbe6f66e78922bc8d6ebb1d16309668f96564fa0f755a91f81deb8dd01957f87cb2f2cd2658229eb1d39d3642ac21fcaf8741e1a86b2307832300ad348f745539fc6566a6bcddaf238fa763af33636f00f738574096c7f40be97afd15f230691bfcdceae7ff849bfa0e6083cd1897007024fff0c896c8665dc140008abb6e9196cd04ed23bb7aae08b40eff41f77e94ea8fbeece7682621a5af0c83c753f831a5ea8027972128b2daa533d7d0539888e71041067971b60f32e74e5b5935d038356938b9171a5095571eb53d8841153157ed7d4b58d29bf4374a48cd9c56da231601bd795af44da91700b9e79783575cc27aa216312b89f5938a0c6e60443e4b160a207b1a8809cea2abde11f187480cdde57062043a6aa6c1adadce1e27ecd2fffb5b491d0bab28a01a5f491e6ceeae9590cdeaa278eed29d1e2012c7ed36009421b007e79fc58a92260e1cb855f64f4846568e219ba1e7fb00a4ba46eb54033c0c5abfc67b48b01a695d9f1629e12152372087aca5201870141506981320a6644eeb7be24b7fcd0ebb11b062b5cc022377965f09bcdaa73f58a62b3fdcd47c44f5fbdc849ea609ff8dcb82a2ac46909bd49aa8a20d2f6494c4ce3a5239dd1567744594ce9df2d01e3f253e654fb751e0feac582227b2a4dfbfbc8aa5fa7f986277d591144648bf0a39c7d561f1d20bcf4882011d7a0ace740f3a4a3c9679473aa836ee8ca2ea1f8ba21200a0d8d57eae400b17638aee9833655dfd665092d078d00a18df6bb4b82c73f0651a109e3caf852710f00cdb5ac7588fb159bfc03139daccbceb604ab058bab89003e4ba56e3e068ed9ddbf47f87083044ccfb0bc17344a511bcbe4f4304aec547911f6476f6d9ae4e88765f7f96aaa6822b7b59cae0c9908d9edd0f4e4bec04617fcbba52028e670e989def749c2238d2a106d3c5e1179be1bbe0f8c74a2c746d8e4ad2ea54937d2a82f1c952dedc0a55f49c964c36d801cbf09014d7003fe2094f64c7749609bf5dd2948d385deddbf0e6d71335d96fbf6b52dacdd4ca90c64095188245c753a329ef5a12cfda4f679f3774f15d527a70eb306dda0fbe9eef606ea953c327df51c7226bf523c9e07506552a72a5c67938d2a348ee069dfc865a4860fad58b6490823a3a83b2098680f681338f6ac6853929280e007844dde7a903959f79f08262464637539d3f4efb9fcdf429781a5d9935ffe2b907612e464ac7e1d6c7f12d427b511a71ca66361439164e2ffa03a36e9b191b1412120fc3d6dfc60b87e3b2c277be738ba0bd32f5a925f6f767ecc6ed83943bbd6f6159aa3b4ea171425b6ab8a4db9695b081ffe083824d9b5c34ba1fdd56ec6429e404c1f880f339fb08d7deb6ee9874fcf26866cd160ab05a0ba9dff325970c803c572703db3f7aba63415002c48b0770bfe14e11c2fca52d64ce42158da4d646f14905bdf1bc8e8b93079e5ae825b684bc46ece51591f8f6aff822e20fd8a6e35403fbdabc6eb138c602c8da8242a7d8e5aa217bf3695a5a788dd21f643723635c47fc52f8ad93e9e3d2909afaad8865f77d929046e8baa18285ccd9f6a5e6945d70823fa4dd97040cb937f41fdb9bedffe0f85bcf4df191d24a3d1ffbd4387c234addc3266cb313b8f72c9818f06fd9412b95bc0238801af9b9f9199aad7dc4fe91bd8e0e6b1d8f5545faee00c83879a30f41c79009eed06adcb515e999a42f67c1bf08d3871912750997e19739cd4e84298ab017972e3243fa36a58ef4419a8afd20408268fe23af79463b9204b1b5cff190b28c18992a0ff04f2590b53b92cde35c1388bf014007880ebb6d6d1d91f828a7489769474bc9a4349de3200a05f024baa85bcee275386a389c93518c45fd1b40f884b67f1874e5d4037b27a83dd92683a985b7be845992e13d857f90ff6105e19c75e7e9e2454114a86905b73f9185c7578a85176c7661ed4e023d20fe4002ac3c786de17730d7adf36d65081052cb6c994123c5ac4e6fbd5f6a7cf17243aa692aa11724b987932181f6ca6ae6b59379f37c79d601e1ef067e495bce50e6de7e964880559339f00bf17a297984ff8f548a437732b15139b90c62dff93286ea022315057d8d5b626cca34229c2aff13bbd17096f865c038a77041353f9324110f18e87d494def3f790a0f877eabbd02a2fdc2cd1498f2bc4b658f6558c4f11b70175f06209e0de4460408e2d2cd2916c3a3f4a3b2f26fc83003b9896672990e61d4c1b55dfc08d809f30f9312ca2d0363d349508cc11419d8e2f574c26289d10fead689520985c257bf36be986c6ad7b73b0639494b677fab61a5c095a35955bbdef52100199fa6b99dd9ac4fd90196b89782cf08f7fa0d668d24594e11cf022434ad63dd50dac91d7adf83625b29b51dac5d985daed5c2a0f945432825dfed52c3e8db0cbb6713d49ffc9564ad98dfda666ee8bb61d9508c04abeca7380e110197bc72c73e2328641a8a8b8db5b0111064e9027140a1b1669289acd19f252ee93dc2f4c457bfe481e4e27ed6c2d9abb8879e06cd177a7c39bb7b7bc9f203a4df80b81978410ea9fe5fefeeca8df63ebdbeae73c269532cdd9c84e052501f63f697fa41e2a5ce61e4bf2efc50c24dd66660ab6f7a4fd37422bc9e4344114e2bc605800e3217a1d04cf60195db1e4be2ebb5b930d50b10cb90f43a1d6a123aa8c62d94853aa79faad117c0d7482869d4274e51f4bd6ee7e12e3332593f6cac6261ee039b81d1e44420ba35ffd36f08b1164ea879b970ab008b985cae7406e7537bc4f47a6117a301212aff692d18cbb130ce72249d3cbe14204a35bb42566822c1ea0ca1e8dfe6e77b1d072c481537ee01d454cdeb26fa622de2fd80dd3bbcd16bf3e4fd99b86e23c444d9c8dd21d553d7a36fc36b25048728213b26b7464bc15768aa4e34e0e94e9e6bcd30217309ee2616863a5258c3cfdbcc0a69681173c7e82a8cf4460b7f38149e548ba607c5ea168a8af12da59355d67ce0c38ff366545cf6a7dd0eefef82e410e5e0976f35ffffb2a99697dc8baca1e4ae00a51ea99951f20b737c39465e339853d599dc66e0e6ee7c773cbbf8a22eb9388b8bec5a2cb60e032d140d471112595f71b00991950825b76b4a68cd92d38489d397ab808d7dd50008737935d8d129d0a316604bb56b5549d105fea095d2fb74f71731bee5ce6fa50a803ada47688cf6c535f1bc771460fc7aac834aae9704002bd889a954d5cf090d374a1c26c342139b765eb0a755ed098cceda4eb31fde3c277120fe451ab7a0456e037583b51ae797853fef60eae417d173341491431b4d89d397178768d1493f43e6fa790aa325c251606ecc08c1b79dbdb5c830af5a97f379bf0c11da842471fca0c370b2cf5d967d27e6cc4ba2d1c877f960c2b000bac6ea38af6ca82007aa800f06da807f76ecd52b13242d6a63c1260df1979bba30407d68e39301f72b724d620b2052728402c7aae323a9be7f16df10a078ee581820db560ec61a54e18451a2c759355d8248fad926302fbdaf849ec119c3b741a0f6cc5d90111b193537ec12b63d765eb886d9ec0bd2a1a87280723a459ab0053777b3a6bebae2ddf3426eb8b58241c719ee9f5d87ab2d1f44f2b6eeff0298251590bd1195993d70a6016733c2c4c53bf5606678d38351b5db074775985e7fc4e1f240d12ec9743ac245317060f16017ac00ca85f78a43474c8638fe103ce5aaa9956497ee0227d482e290ef66878c64b4a64296148d8253e68e379dcbae2f2387f22b34b842726de2a3f63b399ccbc5db8435d9cc7a254747080deacd8af27d40cd6462551d8fd20d93033cc505bf4a8edbcdba0769d9a3d12277804cf9de78edc9d12f2d02f63a89914e8b8fcdb0011de3532711d2bf7d672a260c5b6d2d239ff4f2bd8ba0651e6da2fa1ec1c534861235df0239e88c06749482f79710f349f023adbc8a00332f980ebf091ec80412ada131ce684f69b13c282248563a99aea529352353073b96bcd3e5ba22c96731638711629d77b6f913f4148eacdf8fe5922fb44ec389ccdfabb99c0e507863d4ecde914018720d935ec8ac1cf06bc78235a31391a77e6daf0c5752d19b609216ed7918b2c74547b97723273dde556099f1fc36c2ba422074010accb016d8f58b970d3b7d76056778718dcded9f08754cd47336e229437448677a997a865039843c513fc9866f91b828f97c7f572b47df64f30207a27e37436e6916610a1d1ffce50a35e690451cb96107d08de51a35deb93b9db87cc803c9a93e887c2b837775c5edc34b4aa6fa8907cbdf6f72dc4afe8c6bccfa5f3f444339f1af454e0a24542059c8bce091eae834247ef3bef2e418f9ce89ccfa83ff4a7c127f95f7ab7ef3ad1c145734fde27bc4ae1d50d7de0b3ec3bcfb048071933db00270d908edb6918fb7155e8d6eb738647c96983c0d323bffdeae3bc2c63f808828adb10c16f15fa0995b8f3603902853115ad3abb493b47b9586b61bbdeca6836035faaed72c52221c187b591d2362a23b686e65844418b50cf198aaf96e81678aad0979a8f81688cda18fde3a310125ee6594003a3904a79816370d55e9d7fe33c785d3fcadcb3945e1d75d386ce807328767606e9311a037971279f4964db6d83711575eb94875ad61a576a77629b4f4d6f15bf682eeaba7e132d986a719496760abd0efdd2e40f438f3eb1c630911a94492c92c5246c25c8e974c0d8d798308b5ff03f7da95aea3f5a5704709989d026790d70fee862234e93af92d657eb1928e2f610797c508f399df8417ddf4518c19b7828a9c3a5b633e9576835c38036f7b4b6a1df33b9c5f8bef042ccf75dc24318ba2e7241e0b08acfeefad08259d3662479ca521c0dd18b88ca23b1fed22c43b747cc2c41ea20653a4cba9e3acef8803b392cd3f9ad0d0b4fef99651f9d0340434d3ec2527187beb764bdc53d5d6c00f3dac646a9c77197dd204f13d37ccbeb4e738819d5d3cab04d60cbb2b714285fb843f572a7211e7f88eab04d6ac17548f1e285e028881581675e88d17b7915a026afccd12f2a77e919ae68c7ba152a3a3ea803db05b49d242f7494bb4ce6d907a4ee297125561318b26d03bb160d0636148307288c4236736daf877f6bc776125b1c32b076f99ec11424defdcdd1f77f133de4cac31d84aecf887a5dc904b9921f86b3b55bd8704facce8b5ba6aed0a4d4cc13d18da2dbb9576573a78c299545ed2ae4d83df99bc595ead86c83a1df57b20de6dc107c99ba9a7d5fde6b0ab488c93335fe7547ed6424632bbdd54cfaa80b8009b61c90326eab5cdb4c2531f7ea30e3a7ff1ab98b7810ce7b26b458355cadada19692f7e4c5674d58615e2cb239f9730e98631312bff9eb0f86d2a5027d31862e0659096d1c1bdca32f8c248a2797bfec78c116deb7f0d10b732bfc92815c3cd985f65ed30d24beb12a83c84fc14c073b1dc0ef2523a1a28ac16eaeb36eefc510736845402499bc2195a720f21517416a6937f3dc0d11df2b30ecec5d96c08e5d23c9ff4b56c9f6726d2525cdfd800f641eecce2a2096276de901d20faa2635b6c6d5b920e4614db03752b63258d3ce30710700626ea20b28ba002d42ad781ae3d7bd07d207ef09fe625f39acda522226d9e1f5663a8380f35c96951a331fcf1fa13043374e7ad5d0df658fde356ec77bcd0e28279cfda7022ff8f42e5d53c04e84259e85a4a4e19a49080c202eebbad2129268f5b9044e367d212d368524f7cb49c7de666b720a7d1fe0a920bd19466a24e99273cc69e126bc56da969afda8df28f2e08914ca06ca22f39245f5e69fc93b99b6b364e10653c190a3843efbde056d0203bfbe9d82f1da115c9d4357d997607881f26341d865b02fc9cbd63405c5d9a5193ec6cc48f8826667ca5d4477e6233dccfadaf9ee8daa8ae400d1dd7c25841f3c1cb29d5d247c1ccb8a1c3c8e6534fc69fb86bbb29b75660785821cd897c95f99ac4111c774c643eedbb8fc2d9b0869e56b2ed21358032e7b42bbdb97917bd10dc54eed386a53c413d5f8fe1a5f91b2aff0536b586f33c54948a1decd8603cf41fcc45d158c5f734c54d66151d3fa2984550d84d04dc8a7fe6d1487e6eff60170cf444913f1939c886eb3fd9c0453cf7d037458b8f6268291d6eb7d6a1afced5081d6fed2b9f45c980e70f630a7e17935f2278d3a64b3fdb6cfd41b7f574c91b82ac86d90eea9ab247064dc9409c46618510f11eabb16c51e932f757df99342c9bdcd0241db5c489ba88e4900e9c011757609fa8713444357f9b86c48bccdd5e031da0f5bd76cd6986242fa1ab4d3c6ef12f5bd51e7860a64862bdf27165a01624bcb17234bc7c062ea8553445cdde4c905381a16be3e20a7ce8027c300f66cc550c86f1630a56558c69c70c26a51c4915754720366a0cd64c0a9c53613c77537640d234fc7f9bcae7010ec7fca91f02470fd1aa13b3b19b35efb265aca14c6f20bed6c78e87f14f8029b5d3446440be5142fa1496c39f9246d17c5ba6b9500fe6dfef7bd9178ee9f8106863bcd9b23ffa71ba56648a9dfbf8e2bb6806e481d3a6f77500e49b55f9f9a3c6cccbee3ae9fec7c1c27c35df986e10bf594e4ebf4dc1d8c44703522d6afe4e47af8b8a2cf9b75d217bebad69fc5e7369418c5f1d2e05d8ac3d83fb7d82ac405b3afeac7027c3cd08b89da9d02ba05205f7abaa121c4b2c4975465739ac55de675166a99d1d3ad492dd71ee72394268b697460efded18525aed3998c310c8f36e0aad5752dcc34100f544ff94bdd5eb943deaa880f8fb77cc0adf87f94ef44e742bb0c35944cba580b93a5538b169ac97514f472941e2361528ee791c5696be8ba4ad913d0a53434249fc5621105dbb5af090344f3487f0babf7dc7b6e72d86cb43b89cdf196981e5484db7925bfb8fb4bba6a050a6efaa5104016191cee0ee82e995d3153112eecced9db8106e5a457a1d05dd5239c495e5373a3d325456d65d5c0dd81e11f4347e65ad62ecc785e1f6e4798cc54f4f6b10c6bff3b9af45d531c16b76a8ecb35423f23daf49ab3c3bd46014af49eaeb3aea25c779f494f83cce72c64b5086cfb5fa6afdd32ff440bfb2646b307865015a0c84d3a39a6b47133ac14cd8cdfb650c89e1e43ccfe21ab50a35460f37248c6caeddc935ccc794eb5cf179f33c90bf0124d61474d9f8a63c53b911aab7902f76bbab1dfb5b0fc4f51dad056180f33a8d69690abf0d625d6158a8ed1008b30790d6c620a3a5533e2f959250d539aede43df2af6baee3468f6998b491bdd38c4a57d5383f250ebbb40d472acdc3f84268e4e332536bdeb3cf8cab394c127da1ef9b5402eeb4c358255d96365526e8188b9c04c54b2c52ea1566493ccd1a33e72a4bd99765313dc48d7b8a84d2e0b113d58b2fab60dcebb122003f2dcf9f5e19f78994432bb46ce636eb0dc01eb9245e24c3efd62cf999867b5bcb4ea25b0e985471508848c3ab288b27b574e00b8f7e73c6cdb6f0a0faa9fb76a99d6958314b01480cdb7b98bd0603e871bb1ef5519fa23aefe7d8c340230bf367da906d66e5951b51e2ddf74484ec59724bdee2dcc06ba724ca66354468201b8c068440cabc674b7030aea989a9d09f5f778646179185d8d83c46d5f3c801c99948746746e738ef49f3795c5f94039224b8820182ec8f14a2e0a7dce977a536c5bd04ef4cc79c9c44fbacfe4bde51e578da6829c298cb65db1bc1c70d4bd6adf0b89aaac0118d59d579faf317cd35dec4d21b0853f02468b39e4a40fc6c80accaaa2ae7e9058ca4b6675cac47859a28f1d5746fe703e5fe43af881690cd9a1c45f8af2dacc212886d80b827fa844f2541ce3c601ad5e433b168f10a73b84edbed0e483ac578adaac90e8c452fe141d9d9d784810e8246fb01e829d8cd7666dd4c59f2cca3ca5234385af555e2842c4cda8c105022a3e85175e1d03897a2a35b795faf655f7cee4802770208d3e057b44423c8de2f801abdc732ed712925ac02871902257624c72a75f3ad8553ca3448eec01b4518050b3ad25af5d44fd56c1aadbc9900ca9d8b9f0247e31a2c4e8ce571496d7640018e78084c030d119e711b64a8cbbe8cbac132abb8e6c242e79bc7942a86357e7cd6b782ddda47825b3efe828c47a8994c504de6099b679b22622f73c3c03572055ad486dfee67c8a25d9086ad814660c3608841b0a5f20d1033c70051ee38739004e1909e31ae00f3c7f1c6f6a79b6ea09ae4b49a3223cdf9c9d8099d99a257f4e1c2ef8a93ac5056e9f861f6280e42347ca4ac39339a8c0cfab0f45207b3e4673bdb9e693e55f7bda515e142990dd61cc1ac7c756eaf67a6ba57b93c09bec0d7ea88e9f9e5301a200ff1ea1aa5b4fded4e1f7cfee289d8f0b088356147dd8c72c45c1d970411e9937fb2584702d62376f5a65e8ee33f69abca7ff1d63179ca088c248711be6d8548798d408c6901e00ef0a1c169f196ccad172423724a58e929e11df1344c695602e9a3e6739c60766da6cd5d98fdc9e58f9541c97348195c686d22d41744f3f1ea447f7a7bf74bdf0529c0ecf6aad14fcbc17bfe25caa90eb2d04d00360f1ee2ecb8eb7bdcf1c28db1c8b95fb17198357577f2c62dabc85e09e3bc1dfd0deeb935ebb199a6b5e7da9e385d78827d1742c9e34ddfd2f46bf5f6226fb998f724b3433210256e69a66515885e1b5ed5dbc40b4d397a203fb5ff9ad39769176d47818a84f031916dd77eee6b84cddedc66008fd181abec31cf5689bb44ded9cbd1394dee0f9a6a3bd923ebc4dd6747c24cc2463dcf65975b85c26abdfdf9ed91e60abc47660cd2bb89511dfcf1bbab29762f6ea713ef38c03209f63812b14fabdecf776594c706fdd1f265476a89b7f7616c6ad8ac3a616bfe6dd4c386a03f5470e67da9750473c931b5ef755780f5c4335682072cabe2711d4662b024291225fd2e6cd34bacbdacbb818b49a9ce20fa1d1964f0a8a329b75ab39dee3da9d992f4726b3071b19a1b8819505b360de194a5e76f54f23e457c096f4286d37a424b86de930645318420f6aa9718cfa957d557fc494881474ae11e26ba0b4eb7987ebf95f84364bdd4a76c8c2d9932f53b34537f26e4e66dacf2230ce8bce12bbbc838d8e60051e42532f2050e019ff51dac778e066f123833b058d00d0be38527aca6b59b1ee0e11e6a5d347b12bfe66a8e386a09b4bcf8b66cbb5bc40c852289764672bd9eca8c75cf0b55c15f1993a9178f3d053e1b97bccf830f1d7d69a70a7d83f3c90b6c4fea4dc1a8b423f317d37d40fdbeabaab426d0a97b938d3f722564f95b26e785f6e6db3c09361f8c10aaa8a06c83dd9306867bf026528219d3006488ad02c990f3b7009265563310cfa50dcec8a19a2166ee50d420b468dcf692422844298ff7015b668108f1dc0091e7042c9d2f0944e62a3ee349473dfd9eb5a62f75879e3fd9d09f48eb854b7eac771ee63f1b057e4878661209c6e9f0c33c295cc224842ca5382b9fa1bc948ed4c2d03698e130f449634793d0b273bd85cfb879b119a069397ef84f66eb5ab9516db6a9bb43f5f6b8f5db88322cd2c094a349e761fc9f502855ec79a3ba77e288b8d9b3dc255aeae03340a77ef963532e2eb8b5fa4f507175d70dfde90e14fdc0ae35a04e9e6e948cfe0ddba40fd4bb21f2ab7b3facec021f5b3c06ab0e8971dcb8793025beedbd56fe810be05a6f0b11dc5ddb3768b467cd66ad83825a1e8bf92ef1819b066cef54df9ff968660f495b719779c484dee916b219321acbe8f17a84ce2cf5e366536548f8b698eea29059576f9b368c0517e30c45f2d3fdfbbd6e504e26d9c7c894fca14e731817944f177aa0837f9783b98fa1592e537308b1caf46bc053aeacaf481b1d8963ee02a309ccbb696d11c7069eef97b96e420c208bf6451ddba0e3451cd1dc9ca724cbcd2b030e85a982ec28935f859abc60e5dd20af252f508729166b623e8e770ec585df6e926f518174d60604a45687b66f6eb165fa11f4bbeeefceb45d0abc5670828438689fe9666821bfb595fe4f6ce1f3393aca2f47ca2f5ba4eae57cf1e8ab3917b79a6954fe75df1649f003dacef685c9e7fb8a88653e0e4196bdb1eaac90772106ce12a4b5dfeafa80501ce48d479db65456dc9264a7ab3babb92677840f98726378381b3db572402483288bce44f2b2cbae792dd64ef1100c87153668ef217357c46ae70ed9bec01a0bfc034c6868ce619ab387fd948059342035912be52cd28ba8a7ce7113c7d26e742e81d47ca1a02fc4ff624a204b6c120252fe1066f25972d5af9dababcb08a640e4b8d5bbdbd76898a00267b37dd2f5864bd6a4a2f4dfd0aeee5a1d60c5b78482eb1eebee1ea4322879561aa95f7dc04699019408a4359eb9f03792e915817c4b0fee85aa3d958d3ded2189d171bf7f2c4958092d09d55193f3562d492741393a50d675da5fe0c038ec6de2f134745718c74fdc568621d4b67526d09c7b72721244f1f8fac3ecd8c25664ff6ec0ae0c1ae1e9d603f95ae2fed0262960c45f2e56ffe61880ad60ac8896f2f776f1d7901d7986b65c7c580ff09a0b0972e016091e6b0a3e5c66da27fc5d9d2497065cc92e0e67bfe841a12db6d6624933d971305ab4e255daddb9ae4b3048ef651ec828267fb550e77903755a1ce57aacb74c8cdd48f6b3101d2628d3158aff40d0aa1f6b7c39ea9f3917d4bd119a8c0accada6a45ac8527af1aed87ec043792d0e737f614d65df5daa2a490fd2cada7300dc24e97d0743b97e72b2ac7afa2d97f99f43789d9a6359868564e909b18dcb4791e205cafc84fad81abd6b1d34eee68feef7b3f66dceb3dd518c87cec3e7331bc65331cb4c9673f5a8610d917b305be28d5a44ab82a11abc31286f77135c6f6649dbfaacb27a807906fbd0f9b75bea6f3314fb4f82a4fee4fb72da91544c39ec2d262b0ff1b1e99e2626362ae2ff72fc292c9dec585b05cab2ac54fc10735d11315cf94844228ba29c729572b476e8a057124e207cc0b5fb48a11723df236ae96f2a85232ea1bcdfffb87c2c55055d419a96df685118eb5fffd082d1083f29e124589836f13b74250b2bcbc9c7522e609cde94d423e810a8a99106b6beefb7b51e1e38e5b84db5083ee743c3db671fe3fec6c75ca65ef7b0b194c3aed00b9a3b7fdc9270c2cc5be0afe335dfbfdea2d88374932dbcb82b04b7d599192fb9a3629e91ed535580abc75413f1c39bb9eb968dc1c71d54cdb178cdb83acb62fd26897f25a41d0f875b3ea06d6c5a54d6b8037d00c887a8af582a9afce52c25d1d9fd103a6c99c6a0dc4bdb9c39629f5a54b8d170d0e1699d2ffbc4dfca7a9ae5d8165ce50a08fd0917fbf2d96c194935aecb81ad1d0f2af204ad0198a6e38096f9c9b2d30b1206a22daae40a1044dcea8bb2f9c4cc2d8e497159abfa4fbc3f6d601173194ee11d3d0f9872810ea13dbe82c22b36a1242ceb7e80b8fb19a5710eb9f0d85fac83ab804a297a5299803ce419db45b0eee1cb829cae58af600cd69a5ebfef2caca8f5634f5656689b277650247243c60b78ba10f86136a3bdc427b54a77278c37894176a8de9655d09a010c7f89c8f49eec8f4e34fc49dd89e2877c70efea71edf276150bca1baba246d3b9ffb5e5d3726d05b55570454eaad5ffaf98f5a783c2ac501da81d3853aaa58e6017831937b572f91224d41bca064d878082cd7d98c6d95e5624137756371177eb8e4b607192f85debdf1f44dbda8e0732fb5149d8d61b4464c24bcb31feb5bdb81c40767499b280b2300befb38db0d36182583ae1db46c7c8620ad48e1e8c4fad7e5dc85585a94231078f907a8db4331178b842dd531af839ab167d47b91ea9288d790ff815d64a277d96c50f34c3b7c337e5b4b3e378b372efe457980c40f16aa9d5d9ebe26ab5fd8793217d8b567f8875c184fa862ab0490335fe161c23a7882a79fe38db83914185cb155bb20f063b1ce8048e9e0b3d31cecf3e47c1fa6a72ac1e8e31f5de08b471488353a4e34c3a32eb1370e8d15bc4a38c64d8c38e2461ec6cd35823fe7ef8955345aee128095baac33f29b095fd0a13ff572eab4f83b0eb2521e7e70c94bf522519c0a65ff31517edef8450aa5f15074c3fa6a9910791caaf600882c58cbcc3a988c7dadacd8021af9defc01c8ee79ff25c0cc406b3fb5c6f616a9491f4f781280a4afa9e0c65df7023625bc9835cd4ff3a71d8af774d4965daba444967254188b304f5cfc148dd675aaa57c2906b80c0d819c79a21809250f66a004f557c5210cff606e2bba03fc35f6ba78af87b5db8f8f073d75815f6eeac46ee3861ed154c03610e290f4eafb240dbe450b731dca4801fac4181d917b9e3ee1d08e54ed710112f8fef7ebae518d7e713dc54d37ef830ff5c65896a8053fbcf9a28e24f46e07c28933e39e227670ce6316b7b6a2d0276728e9516500ce470bbb851890d8f4c5e635ba6b2061733c3e2d54e8f2c636a51ce1d45871667569bcce7bc15c997954b8beb105eeda3514120b6e7d374aaf37cb99db2042396c56642dc235cf5ad1b4598dbfe8c863d44c0b662858a9f81e556d5cf1f3db4a0f649cd157cb66911c443371a80a1c66b11664d4a5a8eb088ae71d9027670b7411d20637b2c60aadd7fa345d2a04e0e7a70e9922864ccd00d7f18472d49d527e8efafcde5dee220433746cf0200eb8375cf463e935563b7cd7e760fef22dd201aee6705449be0ee22d8f2489682411cec45e962c5e9e39efcafeb11ff2fc3f40be4969814aaf80547602e14f2267f1802a155aec6d91a5708d91e7c1c656ad5f8b277bd0292a5c736c330e324c33bba0b85104d000a052631bad0934c9cac220634fd8596c7c3cda0adbbd72a2b6877987c86c026bf55b8d88851f0b259d6e826c0261d48657c0841b124c494a0e40008354749e892d7d277c5b9b88c723c022bcde1f2e70e73f5aa37b9fe8fc1ecd330cd48ed94dc84adb6401c4c8deeaed3c4c2ec964d120f3c8cc4a745e616be455b6cd635c38e9897547732eb3b333cac1d73806990075fae67a884fa4e04fcd30aacd9a3064a5fc6a164a303506b58920effc0ceb7102e7dcc81d7a6ab5abc671b4e2080f5a54df72bf5c96840f0f5c56ed48a0b7c0a3cd694591425241f5f8b42632dcdb500a860bd9674baded5d4f19e152fb00bda363e654acbb392cf7bd883b3bae5e6e2cf81ae1fc3485104cd4e14b264aff93de181f8065e71423d6e803f6ba1f08b443a7ab9180afda9189f4cd31d397b36f07f857ba213a16072183528b1a1056fce22db480217de1051678359e5ef387ae13e07ae1c3f1a41ae50f97d9b71990a858740b5e2deae136d39729a89801e13e2d1b91be15977120c130f61c36e58aa11264a107e5f02e870fe0a12df56ff6b220dd11be407f1d72c9fd889e553a5af227518ccded16e0f2083e148d80b3e6054e92737a3138006c31218bb2bd230e5f8f020fb30243d3c7592a80653d9783c694e453ad3faf55a08462aa16654cbec388b8bcc192ccee6c07b7a68338e2e4f278a6d4958c492e30c1c8afe3a88d7c4d46a454c4f53e508ed2db36bcfdbd9d4155277317c7fb460d820ba58582795a6624a1cdf0a2c5a1abe1782f55c4e7dcd4695f0fb4df25c51d793a6daa0b2549e69134dc0fbdc918bc7bf022d9bd33ba375e5f0ba045109076129ae15f4f9df4e8879f80afbe011e461c69951932e61297253ef7cda593be084b08b2db5a5d47760b6273b46c47d2fe97e674ab7a15d0c8f29b88d8d277478dc533ec2a779fe86de20015edb24ef7dbb488b92fc1d066dbcdc1862b838184fbca581ea2aeebc0b965c89a41af90411b0182de13b824300254b425409b5f89eac016c8c184ba8f8b7fdb291eda3736175e987a5aeafb20a4df633d5eaa83bb8f6bff339b2dcf0c188d5ef54b1f33c978c103c5e68772f7797abe76e5b8c561f03dd3b5afc58edcfb802dd40d79f80784dab2b79c8ff67877ad148d3c804123311a8dc6c51249521d7fe8260db94094a4ca777de300b56fcdfaf343d9e44a584bfe2602483c6bed5a90d1ffd08de965f7c3b91a13ae1d50d3265ed139bdd5fbe56887d812db9acdeb299265b445f4b0c141ad453e242269e11726ecd193f8dffef30dedd4ec77c21f766a915c5936c1912759439a6beaaea0ce2160b7db66536bc80b93fe92a9966a7bfe5a0a723d43abb7115ba8a0971f27ddc717b51d1fab212ac0e919d8f8677842d3f8219d64750583c48762c4de2e9fab42b131eb2973220765f7a448f7032b128eb2164e42e9ff5196de4acbdfb5826e37dbe3f06b44b2232218be779111ef8627ae223b4a0350f4c299396b38a9d1e754fac03a71b3dc730a74ff65ce73ad5578f1308cd7358aa5f77116d3db16051a65097c253eddae7d3ec0d1ebc33191f47b16eb17bb276f510938b17c60bf72b4bcc1b46bb031809ad7d27e5aaf88bbc631706020d9cb8475c5ad9741e13913cf3f6904f424504f9a73b2f49d23a17a9fdf492f9d4900671dbc69d29b8498d33881f2e7016ec471859fa44dcf9bc4b2ec0e51917e5c8c696ebd429469a91fd4dd8a992a58f36028bb82c08e8d2538d59c88993ddcad963fed2ce99b4e29918ed576cdc0d709a1a1a5361d60fdb286f82813684010aaa86a4a399c57769fbb72748352c513dcbac2f822a2fd8d2032d5222383541998f760bfc986aafa87ac5ff341e7eadccbc6b7f90fd136ba6f5a8d795d7db10d0737c46c49b602e8a9463b567674df0a5ef39532a582a01c8b4d8e2f1499d01cce29b6de7ac786cba1e3a184076ca98b707621e9bf7a76e82641c54754df9e3100bc7748dba6bed8a99380fec50e775519c9f94b2438a10cb6137c28e641c6b27bed9a85e4cae6d2c4fd574c4b6d1666c5cad6e34b5e8c1ef687ddb6fab9841bc12daeb27c9d9d763b6d83fdfb64ca4bf98a8fd619ada81c7fea860173f9f5fc088aa4b2ca573161524c549e7b4ef906dc41659fc8a4bf1d5683533243043fc6cc0719f0e9415006bea95bfbafe1e16f59c5beee5904462857e84f6e94a97a4d3ba5e99a988e1eb81067b1fe4d7647599c2b81358cebc59924b37a5e36cfb3034ca016e176827184631e8da34d0eb5aeac4e9f3b52166e56ce97f91811ecf217e130b44e20449385ab62abdab24ac191e6fbae32539575df9b0c0353f436316ceb9aa6f53754b2ca0314fcf9a91ae73a58382c5a53a2b5fa9e6bbb8ac61eefe49e3f8b8d8c718e4df1e37f1e1070c4562684105fbea64cd4759bd83519f81aebee949f16dfed9824b78fc82fdd609e0c5f34a83d7d5fa57d5268ddfb3a5dafaa7413da0bf9120057233e183723828a18ade3642fd28489df1eec9934e66c666bffa3b3002a316e50cfae46f538c1ea471c06d0ca4c5a30c46b1504be5fe1b09fc089316409bc707aa1c1cd5e95d04c796f99ba16bd467840037c4f2576aeee5f9c5f91f224f0a1e03c17392f6b48e93a9ab413353bf83a53b6caf830c040fbc379311197f6093b8381ae1b8043afea0fe8d05bdd9e01b0ed09c2d875d35923ac6930dedf5ecefaf82de0fac2d3cfb46397eef44c9c3ae16d41a798b97f7beb2f3ab63af29f8a700b0a5e659ad2f052446399138002e32d4d824a3ae64d42f21b6c96327d36224bcaf6c1b938cba27c0a234d40e5efbb52632b08c38bdad195bf977291816650f8df225d23ad1a9667d2c753035258175fd7fc8e322763db7c62ddb4112023acced6da37fb21f8123e5c4e49b30ae27cc3441a74ec6dae135cee72c2b9643e2ffb2d3e93ee16ddb9630edecf485dfb4468edbceabdbf1db1ff9b690cd48006087089f8227807742bcdb70d52a7fdcbc3f0d85665af14e3dc9b396795b962604fc5ba44f13c670e5ddf87d80e3de2139d0b3c8e70c39dd168b98d77e83abd41c9673ee0699ddc50c7df29c36c364ad43816e20fc3d32b8326276cb4c1baa2f99a1446f17eeec654a813cb07a0ccaf86d272044c64ff162f0d0bee445d2e3df5078ac3d90d8690cea6e5033f7398f52321074b6061e3e4ef32ec53968a174b316c7b2f2edcac54dade510ea5aeaa7f29c0d1fc3f63bda4cabaa7ca1723f7f5c408fe48f1c826e5222174307b6b44f0ce6c81037359e646d454c0c7560d4c3f776e63a628f8cb049fa9764a37a2b6ed4dd313f7dc84c253b787c907a9b221381e66fb68bd2b1c42964b3e0381b58060aaef3c206c395766d832b0b074967d85fdb61360f5de2884e50725b0cb5cbbf8d0603232cecad2adbe47d02dd39e5152fe520239e0b50da9b62a4fa1c60150032f8602936b1b6beba8942a442ff321bf55d3282ce6869a3e4dd104c753abc50be7263b07c4099f47bd3d8cc5b484b3db9ceee9fdd17808186f7c4eb6087b831eeb588676815b0415e59aa363b8bd8fcfd844bb3954f15444eed65f0cbee4fe2f4576da35bcfc05ab7af10b1e691667c409bb0bfda300077f34c03a30e5dae676299256ab22cfd3b2bf8f5bc9d70c04a488844cb591aaeafd32654341345df21a19bffd98030b7677350e0dea95734f85384a411c5058da8208bc37eb0d323af5aafd714ff9be73156a409b3a34d39ac84f98b9f583269bc4c30a7228995f6ed80625eb8d3be6f97d114126a498df29491add5b3ffaec7d6be71038ab903c2c79923ed52b15a9c7aac01c4fde07ee3ba369f3d7d58cf66b48410dda7f39a73108621fa82c346dfaf9e49675659f8c761687beddd9ef45e39a38606a13dae5cf24dcd52ee94c0da22d3478da74b8d3e179a5379223736efa37429302f4ed4f818bae956b2655326f841b385c2f81ab6ca8f9b8d26eb2bfe37ee99faf30c4688f6d207820b51c9adff23cb69a945454c65b1e6d548b43099b72690a9891496c128f3088ba64ad1ff23b53131648ce0b7834c4bb97daa0b391c3500f701c8072413e49993778e4e67f03f0e42576809f81cf1a645ee05b7224e5d4e457579903be80b30bf7071da3a3725e4a881f5a75e81c65a574f8867fe4c215660f6b2df2f5c6a2faac564321fab02e1b8d4e91f5b8907d6b54b4a13f70533410b242dda8c97b8b54d9518370a6877a55e6198b4ac058643ad4f53c96c28fe6c37c776bb8e85b95762a805b0c10a3ccaa6205a5eede4071357a99184194d5f647bb677a41ea988e4390040a1ce353caeb1e755caf37595db30223588813b50dd1c76e4ef0aa057efed6ed57b30bdde7e6ad9a3e52e94a08fcd69d179b6135e587f476dd9e857356603e2985b18dfeba21c02293076745bc87873abfa94f86da9dd94b5cd25af31414122300327ceea3853016f84d8adbdf08d6ab7862c28288370ead9f4facd83a8f2dd810f7f8907ba2279384a632d3168c14e2f997173e4a1845c5b6644264fc7c0a730fec27edb12b76ea806f167e5cb9ae5df7d0955e919316c20d6ed0e7860e21e67d8b20a39b0aaa500edaf85ed699625d5054abfa1b1a03597f33ca18cce39c2f0f32dac89f67e6216aef2f2270a232a40256e12b398d571eb9f520f333d404b596cdbf4d556e8b442a08cd3f378cb284d69176b35e39b0b6d5d8780db934b25a659a58f2063cd91d98939e61699595a8243748e1ee193946ac7746ad85781d3584984310fb76017138e63ce1e3421c4f6e63e0ce8b819354a07bd872e2b63a7cb1b187e1da59ef98b8b7396d6fdfcd21f15b8c74fc6d6fb11f5e28ef528e82e319c8279e979d120a1dc327bacc4487a188c0181ef14c25056fb0c0118489fffb1e50ad9f18baf01d9b1b6d0675afa40084638c80d444b4ef17d03cc7f5bb4a1d13908462cdacc51c06879bedd9d08c8ef188eee365fabf6f133238e645eab716fa0967d18b7df74e67102a9bb8687d42f28cb73f15a9377e05f1fb1b5eddf9882c01838ccbbcc0673c87882ae6c64015df2e82b566a45ad585a2faf0124c9b420a6a08eb2bfeda7f6f2e1f6808a5d4a0f62826b8b95a69bb09dc450866b691c3507f56002b8089020b0255907b043e99e66fc980db40877e12dcfb4b926893c01dca7c3da649f5fa26f86c6d316dc50d103bd4a4becda341a76c56b3b42e9cf0b4477204cef21e43ea60ac6ac61e580e391876f730b0eb097710089dc8c7acf826a2b2c48987f3fdb5215626e9a5ec92a6648bb1abc74b40ee94c842a3d2b9416109b35a82e8db75c2705970f2694a12e8094cf2698ab5700b2b258903f9c94195168af84f0ef298c2c252631b91dc11610254977229da86575c26bc0ae322ddc20a67ec0c870ea291f0e739938a94578f3eca4a3a70fd2d775a9e1bdb470bedc8a7250a8a6effabb4527f8fd08e273f60b466199210d326a7599381a2f55d8305eed1fccc4ade7fcac379132dbd3ab2636a0dc82c093803ca1bdedeb00675ff8e62faa50d267a639b91829a571537f4361ce93b4a0db36d6e37b1c328b0fbf54e8a9132a81ba7cee95286b2d1583641adef61a3297784d50b82267f7925ac69624664dc593f66a49c8626c2ea0e1d9d9bb7552a525a876bb8b61cf1c2db61f82a6942203889181f551401f34552db62bb5680e72b8046faf737c5db7c571692610fbd23f61f10aae1f99a0d6776c85f2bae85da4c03b252da77371a31e7b941267fcd44b28cde0f657f8e5caa279cb089b0c3c7d073da92eaf82de2ff2360b2112904721982a5eb4863acaedfb80b05fef9530762c099254c7fa2decf4aebd06b0c3ea2706acb051da755426c2eb439d6ede1b569b7b7104f63631041151afbb5ce08df8b2e80435fd0a001c0b98f237fb7cccb9caaf9e715137b574a4577c37520b29afa5bfb576e9c72dbb68b73a9b233adff8e5a9599c888497ac033e851d1c573cb6b9ca6d9dea303310f3357329e3297c14cdaec87ecde383a03412fbbb360024c62812b5a94be0d5701985de6949cf56ea74eb5eb04c9681cb212d2bbddf081b6fc48cec0636411353f6520862678c32c23b33d10452e022b7b3dab970474939c1f2460b9cac055e462105e5bd66908f362672b8fa7ab5c2d425d3aea37f1cdeea3156a6ffbbc23f4cd329d602acbe69436d8a86ca4bb831c4f23c84a0b4e25dc063dfc6c34e76207e546bfb8d5338e3329b0c4ef31d82c9f5cef4ed8769289cf927734df78ebb8f5f1984c23d535e36a200274f51e52d17c2cf6e9553b05261fae43d9d57348299ca90da2d91c490721434ebc10b8708e42ebe0de0e8b37bac478f574cfaba6438000afbb143a2ec8a07feb5c6cc0747cb7df774a7e274210c595f37cf4832f2a471eeb2249ac597cb674968ebf19751b69fd537e51223a11a14efcb17a0ca298a9d24de728db0bc06bae27cdf9d906d1db26bdf8b0d825b1a00aab49ea798355043b457ddc056a6294ddb5b50d2ab686e3dd5b1ee6d32919575c66344119fc3889a14bbee6e3a7986f879e8e2b0105ead4082cfd4d376ad0a82fa300d9a4d9056d62d16d3069845852e873f3bbe048d4f0b6867650f26a565f355402c65392821cf17dabf1935560f375928d39467511cd39566706bb62d245889ec17015a91c3f64c1c8b301bf7d68cd92c4be0b48710f55688584f028783a8e8c6543f8e6fc0e1c7fd6f5a3cdfda53ba9162ff774ef952469b928e8b45524b0065ca77563ce2bbf071684d94cb38a4cc0fbdb93a8f3290907895004e17dc6357b30de650f82c931f6b025d5c6614b2273e138488538499a94b2139cb2b18958ca477ba97d66f8b0ade6f90b9e58cd6e9e36d46008bb2c31e7f37235bc5b1b12f4b6d5e0bf7db5617e383ad10441fffc37fa9e1ba8897d7dc26a1c69152c5dc795e4f5ac5ece028e9cad6e4bd53d86d8b1e96a5eb5d7c066a5ef746b53c73d68576e5db06c790b860b68d1ad1fc7671b2cc7211cea4e759d2e0d07fb411fef0cfbd777e23c1bc4ce07bddfe1d9d17a32a1f7f0a9ab7b3d2194df9a8926092e289ffe8672665d270a5f3c0ccb309768958f9755ce8ab97b886b0e6d14bdac42b1132cd0c01c99ee20b12a2d8e1a59b4d6ea1833ea27eb1420f17324ed31377dc80cb4dc9409c48bb9861509da907fcad893aa13da10a5634bb625eb913e164815ca841bbe6e78d454a2cad044758c635fd1d77dea56f64d69f368a2c9385b6dc2004d7ce3125ae2e23404d4ff00b2f8892b0392cae4836d76bb406f68ae5d20930988a3bb88d8a18c132b2aaa84a091eca1b44fa3a4a10c49aac03486243cd216f0d562dbf5b6fe898841a30b6e6f043434405f865e94e7692098ac1b6de7ddaf5e7ac5e0a5736b76b3c041b06a48b7474748f32a94908ebe7fef2e046ff87470db2fe4d54e1de3d0355cfb1ed9dd7c2a21c7114ba59b1f3b8b4016cf42831e1966a117094a68d19720756e6c3fd799ce5bbdad7d6fa098c0d38fa2ca0e6261567b313d7e0ed506c920dac74dbc97be75fda7920ea5734f990cc15f077b631fcd19febaa65307c47c290680061bf81ce500578fbd71eab5abb9c2667df1348534d3c9f4bb3ad277f5448aa0043058fb981c5ae86a3a554978f0e0b49258fff45f3846849a6876e85dd14b77d5e09c4f5859a7b7cf909cde9dbb2176c341e9311c96f9d680ae6401e47e865c168d2a952a5088e04d8b105b2c8a76355e99be3cad0558c7d1d1d2266605515cdee572c9d189ea29ccb707aa1a0cd9c5cf4590d05e299d676c5e02680707183e56db6e8edf25e0a7526bb9c675684523baf592535e8ea4a3f3fa21c6677f77a70fbbd6ac9acf04321a879cce1a66d4e6209f52cea6f72eda275f67ed8be7941d0a9163c6c5c7c7e586d0e809bd7eac354492916aba963a36b3408a0f635fb12c2d86f5cd7b6f4c657d930be48a998e6ceb63287d538e2ae91cb7ea5a864c84c663cf1d2a25845dfb39f405ce08d4eabb0ef6d8b8eaff7c515cd2043aff557c5d8d883bedb38a1822898d1fa3916f7dcb4dc94c63aa1e0101bb51ae989605ccaf8adb3c61a6a8fa3ec09a4415740366b7ac8e2e5f8192fe8e96abbd5a388b1508477ea5caa2e02ae5a9ca96858b5ac3575cabbd1b2de122462f64bdb24c94751b3d47e5787dfa376da2224eb2fc719704e9c0657504f65623f85510155896eaf22fd906052d4d5e426c0b304e73b5f09d6c6d1ced8d44042281f0ac43299f5f448660b8a7dbb7c253b5c7666f4814bfe81f0c5872940069f69748fa836bf987862fa4216f147f7faf0dc1208688f4e47a2f3ed7e3b6dda2ddb54ecbb88df99f1d50d102e4b1da1f45330cdecde558df8fb0953d1f9d81eda0e4784489108bec2ced1e0425d307f39d6f9b20ae3c4d6a9bda3a1f18ee3ce0580f8aa28594322574ad80e27c4d1a1c7980b189f40d8deaa2c251058d3522439853519df5cef237cb9670064b28b2b560374e2207a7387393d49dfa1739159fce5e4dd597ce7ffa0b606555c865b100581bb440b79c176c2e23cc3fb997be23b5868c7ed6aa96518e59a39adbbbdd30798275ed2904897cd394ce3266a9945e048bee0a049c9a5afd6aa2775ae94dc912c016d7d658ad7a18e590f4d82c78a5d6ebb29155a8bc30e9e468f572f6f66d235fd833f65008e7702d726657f3125f0f4df90386b6bd5ed0a219bb43e513835d1bf3809029405c96afcf5b555d87dc2f6c5f82ba0397c102df4133643850f4a064c8195c29ac2f656e6ed8486dce75da18019ea76f4a80ef716ce5e0f270131249a743e731d98c8d4dd9d5f6d503c3bbf24da4e0ee0b12ad74c56a06abea708c08700a2e554c0ec06967c40335df117a521a8ecfed177e7caa5e2c1f729d25eeadd72e94ec9cce3c3249283494d9e63daa076c5d3bed340b37d572bc1d753f0923b1210501436a5aba6cdc4562b4a9d5b137d564f053d620446026d7df4bfbe393a1872dac039cc0fc21cf934fcefa1b09caa94dd014377eaf868f2aa45069c189db2f944237dfdc0e06d093070900f179f1da59d7d53bbe14081afcf1ec3569fce9176215853dfde8e2e98db4a816580893f88b94fcea755a6dea75addab0879ab92d5fbd5f446083f56808cc508a1ab3b39cd7ffe6568699bae02139da38f311a566f76a6b451f08b4c3631442f610f5b558ef6c7b662986d948ed32e7f9ce98df03cdfcc6387ba67bca4db93ed822bc8f9c9e2446377a4f86e2f6295f66e3aa36747d895b2094f766e882402d6021982b78684c7cff359292ce4cff4df3a8ed053068dafafa98e0e529aa6e6660dfa0f0ab1b0ba269a1c99a399e8859cce7310b27c393dfe02975940f73cfb44d5210648ccdce3ae3881a0c61d36aa2c3ee448d656f2c24c729506b8f74f8353127d2f165ef294a6c99fd276313a2ccd6e98e41b7ae0dd7e29eaccaf687e986af8221eb0dca48d516b7355771b2b4c0bcbd18099e98bdb50b33f0ff81687bb8a1ed835eee30fec9233f370664b8018937404cc16b11903d4fd7e69afd5b50e7e5fd19c1aa7d49b27360b825fc8849d3ca7b2f8dad411035bd00400fb46575b12d5a3fe52708819788032ea08b75a7b70d4adaf8e1b190283ff385239e18c3fee5cddeae453dc0d8a68bdcbed87e39de6aaf59481f381d485a759e81f5f8a2d0a9bd5bd622056527119aaa60060831a71db8af299ee5a4dd20bcc2595171673eeba1a527a96c3edfc59c1fbdf330d33cb5980bbc1fe52c428fc96111dbf974d51281b1800f353da2318d180e412a3eddb529d5992ec5636739a352e38209fe4489c120c87cca96f6129c8a1e7def7d4f73ba418edda7f688109025d39e5d9adb40ab7f6d3190c30de8710aeea1c24eaf852051322830d043203840a0023971a0ee6c88b887b85829b7599cd6aa46be927ebbd7ce8cb21924a0192fe61090f5aab61d0af06bb39f89decaa22765e09de878fc66b9f6f6aad261717e1ec3fe9cbfb0b5630bd2a18a9900338002428b505f35086df334920c860bf8b4dd3da5606267912e9bef5cd9ddc376b97cf1b5959234793a14a11b1544b47507bac9a1481508fc2e204f9d49a192a7ecf9c4057f9171a405d2dcff7e605ef9e7e0e50579142a53b95bd4ea965689a87599520fa5395b6d772d407069d3c5c448b683b3ef03e9da74d2a18e82d5f53d6f13e9569840d92af63fdba1363f8fddeda8a3304d9871853ecb5a773e79ee13dd771599eac40e218fe681daf50d9f6de86dd32426744d228b6e01cc619de4fb1086c59a9bd54a714630039b2102a5d47f81bd33e64adf29f6349ccee62aa12395d5b682d582afb50697c5f652bf1c6a743b34b6835a2c9e606e60d1a786de82de6b6a3699b48fa39bc1323c51aa722673a4350e1f5ee6bd51f864259152e2c3352929c324815bd63648da038a13a15a30681152aa902f151342b7aa809cc9b42d2120a84d83c6ec52d80f59d76bffcc558d55b6c984f4d083279db9381414d01b0176b88b05e4014f9aeee52f84357de14201be603f67857dc193906d014dc79feae34d533df3d244fb47bc91f62abe9ceab55c12dbb67743c5e26747904cc60820182dd6e02334e4f247a02125ca1e7f79b3bd1ecda1ff51197ccbf6add3c0720a24e99a20577fa6d3c89f5517cc330b90e1cbc14eb353caba8aa828e89774b78cbcfd91dd76c38b448d787e6cdb93db6e11e96bb2534787381b1263e5c60de44d74c909511a3a8fd10f416e14fa8f632effc6ba11e67f09405598e0f4720a09aae46e3eeff436c8f9908e1865e96758a6b6a3dfbcbf8244b80b87caf681dc0143071ea8670ac6fc38d7f7c3d150c95b17f6f81182054247f083936b8a9a2ebce0237779d7329a175c98e8f2430d7d80c27bde823d25172fadc511fef336191c6859ea19e2552a1cfd8013cb3f866ccd093aaef9dd7f57f42e246481ae98d375e617a57fb4197aa38b0040935338dc88b7e3a170f266282e0bd1c35c74da18d9a9dc1268cca76f0f0296078833bc4d249dab3be2f44bd9d7b757447e2a828b548a5ca75155e6951769913cce16356c2ff9791493d1d8a3df6cd338ce62fda7b59d050ee7d1cc81d37fa122fc24bb5d3d6727605aaa547beed1f554308fbb7194d4eea288e6d5fd41d1815e86daa70469b9cc7a901dec3edada53863ab6aa8ffbc909db71b62cf94bc5b1351a1cfe38c53329c95406f927a76935d9d213f9c9b9f4f5a550006f69b43ea294e1268a56ff829373b77db92e30d05707a0506b0f2930fa1833e28c702ceba5a47139cccb09a6f42bb24ed5af7327d7bcb6c829b0f7203268d850c9fa6c688d731871dcf6f627d2dbc7785c8551b8977ffa1bf7c6a35796984fc34a57a186d9f1f97203659896ea09236be779ea9fd63365321f4b959e9e98f83f1efcbf2d42bdd04239f4b6f2dd627a278654f5bc17ee91a51dd8d675f8ed1cd5f5b01986d46066c182db20b7752aa50fcf72c5e1db454c82052eb2c0feb4969eccb2992c700b6cd41f380915976ffc80e1067424062753d2a7382254a218392ddc2627de3b3b1a4fa29c6267888bcafa429acc57ba6a47f081a36cfe03ec81677ae47be28c4206ba6ffeea8043b28f145a45caa2f14ef48fc002efad0b405b8d17de68ed65dcbdcb8e0d8943d4a0ca38d249027e5070f3219892681be1a4f14e36968fa5806e01267478ef3b1d6c3e2335859664f4ac5af2d7ae40415677484f68983b7df2ba1facaaa67ca01e4f4a14d125a0dbc2e7ab2c63d8e7e35a01da2bd77a294fec8bdd0f7f3869c84d5cc0e9684da484187a085942e934a9b22604fe66136c94d5bd1110c3bc159fa16f6fc77d905e623d6b6adb4a44caef6a5b867ac0750c332e311e9e2b6f4c155848abd483da29d34ffbeef013d26956bb1b3865eb30ed4bc2e808a38b55b97ad1c679115be35287744bb7aa58a4204d2828d027c9c7ba25c0759160af31d8f46cef1a4ea21cbdd25d893ea22f39d3c5b4774bb609c0829091cd393ab16f5cdb3e552122f19551fb895e77ac9b3b331d8f99c252e811f4c26857c350804f6bc7f5d6115f24f928e68d302dcc22f3fb604e1c5e560a581ac23db443418d0e525d75e6d40cc5443261fccfbdf97b515eb62167a028a9a72f2e5438c3d243a470b298f641fb464b5ffc3a0a4dbc35ed20b3349c36a84e5d2dff407c4aa8c29e5dbf273067ecfec4f844daa84c235bc66a3de94ba0321d4c76a8369e9fc6fba4803e4ac859be62a041e47605d31532f130ab097bdc1bd8f066e403a3206f619119025dab8e1dff8bf29574b2f22945226fca013a151feacfebdda50f6b7b0ebbfe852943b418ffc65ab3c68192cdcc8489a5d75149ed4b974c5458f262b2741365e14847e69aef18144e26c2ae32c6d6b32f74608832ef1400d7315edefb0529593d7c977c663926099deb9fa65ab8a4c1dec3c1ba6e6a24ecf75fb87e964ca62710c2ea2e6ea108a087edfafbd59031a0ac5bae13feb6a688727f7a4674ef910b30da7131ab8242483f82e7a0357cdefe7b354e38f569c6e49d54013fe5963420153ab6eeb832843271c9bc77134a4ae6521dacec6a2f04cfbde81d06427a99fd18b89128b7342227c8a74f68695c24516e529526f3a1940d433f9e4733c8ea9d517b59ea26363e5ff78edb8c6ed672457f9c9176a795e23ffcf574bdb3fc161d161831d4ac53b62e6fee89da24c41e134ae608b0bf6618f696ffee07d4f0d164069040c40a87182e420df4ebc1bd63b43aa18f92506900e51d6887caaa5f4f9a752d31ba44642f1c969516d856dc705e7e3cc15999fdae98d512f52406b19658854895def4618ab7b2b9a517a886960c1252b8f8f9e99d6d3867a8dcc21553fc8cf25d106d53678a686406141250b45637e3a7887ddb14b60369dc070f455dd7a23f22513b104327c3ca5f9f47c294b43c2329f5048d4dc0f4f19c018800692ffd9bb82023e9a874bdd093847014fe51d9ea661258bab49cb8d0228fd311793fe13c0550a27a71857b5cb1dbe7d030cfc02fc26a497a3c67c1e93dd290ebcef38d79cde97709f29fc04dcc83d1c8d57b2c2ae3afab7ded1cf740d8414aee66cea03c540fa9e7d36b57ac5a263058d8674d593e7b7bba4094c42acec18cfa310380bf76a5860cb10fed919f1e4e21689cd963d0885189288a5c58cf42b7c4e05bf50cfc345d79a5625562f7c0b962b88f1155d2e941bb6607ec029bbf87b790193965405016ed8ebb38e2ce5437312c9309cb8ef53128703993102a52a4d7fa80e6ee5382fe26dbdf3bb98d6b6cf2989446b5632ab06ac9234ffa662e3a32196ab263e13597524dda631fc11e17942689181e9d30627679db17cf2c328f13b1274f1ee527d7a051582b682c7948bc6f6d22949f6a54e6f8022c0676ba3be7fc1705593ce8471389a68a935f1fc6bf05c6c9c2c7834ea9e2327ce3bfeb869c2b012388b56c300f3cb07e454d8884dadbfab86585ce837f7ee8d250f9bf241936b56c532331287499d90022beb09b7d957368f6ec6244eb64a68aba49e598c50484a8b86b6bf912fd4c5cdf6facb65c4e3ec476396bfd9fa9cb3b7e98de0a9ae23a8261d3db01cf45f7bfde99cf495d95829fa41294829e134974da3c5e882c0a70931f7bfb587aa349882a8df479ed1c9a1e646f07e5e5d75dadf32dff208c78611de760fd7771082d3239bcce97b9e4c40269fb2348f6239a51d540f2b9abfd41b4101cc184952637bb087a4d2b852f2e05181c4f7da7a808ba6aba51c72171b37fb6c94929320988be43f8f04bd6d79f06aa83da772994907f0cdb58c261f26612bb1fd7ec0bfd1cc64d63f1847364999f28b6ec155316ad2a95e5dafc1e9e961eeeea006ab1d17055a93ab808ebc735e61b537c6603fe1fdd4cd4022fffc6ae77c51cf3c2c329568f5f805f584c7771e7b7b155141dd7d4750e4b9929ae97b60d0e24e466cedf0d363317487fc1b16b7e734f700d4c81ff10884c2161328fe4e81c41b749c6e5425cf640c769c6e16bd2a06e2b820d64fc9895dd517f07cd7552f8dbc302172831b27f7637e2ae84db3a2c0c74ed0103394d42f8971b543dd7ca1b600e36956009858ae3b82002e52ae1b628a37e37bc756a33d962b3239ae596ef7953113c6361a47a6f99bc7f2fe1ef3f33a096672f67de0f82c4c8ac09da2dda721dbcf0625808abdefc7c7e890155c02d46417264d1f1194a4aa1d468df10bf13874c0fbc1f0167766cf072c7f2f0ce24052447570dedd06d3c65852b0481efd4d270d1eecba5a4bf71caea122a91565a4f363c5fc91b49ef3eaab4e5747899d33a8827675dbc97f7a8baf6d36952f9ca9ded1c15f1a70f829db78dac3c386b0457f8baf7f72a3007e30d6bf3f4a013ca26eb86e25c09b0290836618ae077e5b0440896da1bb293dc6924879db356335d38f5beee97be703d3dd10255c5eef197f56594ef224842dbd33f25c3e1d59da8fec73f681141120211d406ced1a2dfc9aaa199721e297a88988bc2df0d9fe89c34a02ff1e24338a824695d9e820038bcd242a57cb8eee1e09dfcf7763709fad557e96252e1d32f09776009af8456d2cf30cc95d8efe8c62b78c8e1d2db5f61658d3ae048a587525aea3179dc75cf2d1e8cbbe135421fa7d73a81aaedbc4207be10d87cb97894cb73bdf46dc238f73094b513bc94ce25cc69487c3831f116f681827f8e7748285903cc66dc4493c134c43da939f4559f3b5b41a1d1c0cf4edd19aa51fbfb37cb78d658bd1ed77b6ad3c6d9ed7e44d905268a012469153fbbcc6c9f311cb0f18a3bd35b413d6079fbd3b648e5d7955927613732173f174e851dbdf72e71b390116319a3224a1e239083b4b3f0b56ca37f34cdadaaba58bd349f95572fa19bd3b75b97d40119caddff34746fb37c12408f1232c765139756a5a03236d2539d67993aa17f39609fb434af4a9d8c658fcab4af5160f8198d208d8cd77be9ff78013e1ea76301386e81114b45c0d5f4f2ce9c1b4aad2b9f69a9599666414a1b294332cbb9b818f63282296324ca2ab3162d5d5c3bb758b27f8e458f07fc00f4ecf9e1551a3c0c85ead86fe121d342bce0517ac008b1cb3a787bb798358cb3ae9b4e231626bd47a51959aebad518386bbcd79ce09b3637949c29a13d4ad7ea0512b77b132d568a7135e192cf56384bd932a844823285667b041199d46e5bf28fb391998afd1f074595656106c26c18c625acb0d07e32cdc0d8a476a1620c23ada608dc74ea8926c827733a137cfc2880e82009303c7e5a1d35cad4423c0d97a3ab5ec8aaabf603209fb213a3d03b585ae927d0727b988c935ba994c0a0ce5c8b01262d2e3e63dc4f0df9234562d614d411a878b343e02fdcae84c0eac3164aa574e2a323a600adfb0dfb058b15233fc77da8aad9b29827a36e8f17c3e9bf3d7f9bf9af54d23f4d475de18afa4eb35aaf28ec9e1c4b8281f92d7928153df2803a447acbd583a75d3e1c832a25d955a2bde74eb62e6e10be7659d90dae582503f50429dbc0a885dc2c84e84ebc5dbd12fcd813ad6f734df2fd6ffa3dfc7944b53af73dbdeca7f66793a09ada886295b1c7c591b4fb5317efac6164c046f26825806a83cf6fb891189e4374562850f08e2dbedbd46206677ce0a7fda844ecd81479c6cb130241e2cbe3b2d6577dccd2e49e2ce79dc2cb06abd4102f19e0831060c8670fc2abab976a5e7e45588ee24cb864b50471785c024700ee6d42953f278b251574bfce040e0e137a3c026590b75b96bb406209f2cce55556d2286f8300723eef094efb42975c07062b18db662902908ce3dd34fbd05d35c3fad81a845c3ce4208a2367ba7638fb0c032574954f890813c31b9768898bed7630eeecfbdc1e9f2d3d1fb253ad88f92cc13021d5aad34dbf47dfc2039ce3177609ff57abff5d9484d6cf6be982eef0e54836b566515d3268722969a27810520b60a118997e66a87c65576832c41508b5db6c4d796c9a8bbc3ebfecda4203a7cdb21803ddbbf6d672d20f53fab74fb7ae2c48e5bc53c86d9dad4f2542e588e27137092a84164c7041763b68a0cb0010b81cdab0d7e5573e47fbbe2098b88e430055164d9eb638319ec8d9226c276411613309f86ee3955f9d7730646c326a8973ec4d9c11dd22fbf5ab15651e6ab8a6cf61290f7e6910edc8834fb40ef98ba2562ffb7aa45451f73bf1fcf6ef7b5e9074962451b5f029355232be510f4960e13ace64ffd7fbbdb4f805ad5e364741382996d4f65b7f8ec77d9e5aa3330250e165cf7b5e7cc725f2b072ab315673b94d7c8f88ea5f9953d0f2c3fb3796ec21065c00d7683cd4c52b6b6896e9c2317c9332f2bc1fe55d5c62b4cf29a58731f1d12f2015fc858e7762aff628b8f6bfcc7057ccce7f5d28cfbca837e20e422d5f3bff95e32429e376bc76b6f39ebbb068178bd003dc9d54aef61df24b12aee1ac1d071678ffe28665306fa7ac76c2de031afcfd24b423b33a931e7a614702a89257f78e9a1e70228e73c2fc5b44edad429c147165bc32c8678279359379b80ffd8447abd07a11a1c5e2c8265346ea8a0e950a6ba38aea6a2ab26cc7fcd6cdeba1624c7e96b731488818dd72e5a31e017a0906a7b6f1f20a3d1559ec2ea739b799a876331afad8cb811e6643b48b9ddb04576bc0e74bb59dba82b49b446873efb972de2613b14f2d8a730348af7679f5a106b143fe9c904307502ce0f729f53183b9526c707cceecdda62152dd00f38450c0a20cb70c410fe82c002b9c19dbdbbe76b4352cc332151499a7acb90ada21a8bf419078d8776a52a5b230fd2069b5d0e2a598a15641417aabc6d24d15ef4436c173fad9531223b46c1c33964b9092deb16c4cb6ff3cbb471d4427d5ae51d6ff935f71ba115168b94c34924c0230c547da1229cdaf24e162566e9b163278c08f84f3270222463b19027113228c4e51831dfb876f897d87b38c850f657e47790d737a8fc6d0fc9f09265a1aa28667f61e6443258b1257582d03a0f324af1a10101aa6aab58948d66f7cd2613c72eee8c3ad6b68ebe494d8bf4cd172c9610ee5a4e8401d8e8672fbdcb876e83eb7779daaacb1f5bb2bbff300a4bc6fdc4cfda0b52b47d14fe17e15750beca856a93218718d276f1d29b91284d7f11e2003f0230b206dc0cc33975a04a43f3135c3fb80e48e7340d3ec1dcf06c99c783b15bd2455c06ba8e806bd0f0cb4c74a08c508efbe7d32f81646bc5078140fa39e32d4559c25b864a1b825e9defad746490265b60a434c8cd239db72d5962f376f65feaf34663478bdc9c700a18473f4c675a605d8dd20907cbd7f8f6d01b58a060dbb5c29d9950248fc4ba1bbe59f028207895cea0be386555060831b3391d15e64999bfa04525de4b7cb6079da479628e545597a77f6d30978684342fa61cc5c365b3f29d91ae64db8d1719bd5a92076c2c6574fb8c3d11577938a0e679b61287a4de5222f28ab09953b7a9f82765342275985d5a10afd8946e4708f0f706cae391fafec5aaf6f0ac051512c0193feccb13a68ffe6e9b7d208c5822d3806d277f0a66840ac49f471ac768fa5ca41a00973b26889d825c4cfb070768a37c0bf1f4715df1a23d52a3d787c7f8aef2d77402171d6f3ca4abad66b4ca2d13c4d31ba3276c5a0e1caae15d1cfc42ce955683004ee69a9d9eeb783efd39452054cbb42b7b397b4c729cb90021ac558b54a1fb37d4fbc7f6fcfba7bfcc4a71a4ab46c44f65116e6dd80a194aef2dc9f1f7a40b57992ec449e37bd27a5421e41b19cdb65a46bf21c20428f8e34579940c062f36e1832ae14d8dfe2ef881c1af7675ead6637927e04dd2bbc1d3800db2e595458eacbfaf26fa6be5575d73343fa8edabd7562f08c55796c474bdd97650d6abbbf3a84add7f39ef9518e5fa037580a0e108cf03f66bf0102c52e0850b069abebb5cc7a4c8cf1f37c35e666124ba26c5f1c45058a228c33667e4f51f28af64ea89b5740fbcf091752eed244488b455cf91963758d67696e9e3eb7b7bee2a69badfd08618b5eaeac3202bd0a8e0917735017e266ebf80e0937ad359526f1a47395814d15a670866056033d4da736cbf85b97d6d283eda9282f6482f7a5792a98a6e0aa9edadd1c020d43892090fef2b30df98c387c3d136b77357c83e89b7fa0ecab8fab2fdb91f0217a816c7c752a354b35727730135a34172a57f4d53963f6318c6d7b59c63241227eb281017433eff53cc6e4e2b1596ed979a985d349a503a35914b63b26bd992b602074e95ade1490dbf5f27a3e4f6fc1a8194577bfee4bb378fb799695795431f4dd07866480846d92e40544a7face0f44ad725f0fe25c012d09d837b176d6d6bed24d93e2cb56a63bccd9573def9c3d462349ddefca6d4d8c1903c7eafcbdf74d43ba50acc3524c6184e4433e2739d9f1947f0e36fc95fb6cce46b0cba154f6335ae9f1237e14a29a3b2089c93343c0daf24b54b3cbfab8074e6f0c669ab816dfbe89e1b60232d04b8fceda9ab1a0bb8438e4376240606b2861c92cac6a142e979eabf67b6e32be275d1b4580c6125dd7fc00f5e5dc1e7654be2250c2ae1f0aee057166372405c72d056747b0700ce8f99f452564c917fe93fc497f66aa88b7996e03cead76d76c4f6feeef7b7e76c7742c4a847e4e6b101845343040a25d3db80a90e2dfef1e7ae0abb2c1226fc17068e76dc5c47261887a558035ad1edd7e572b39c45c4250334ca12113756b290bccc2e53a59d793238f9d03bd6563a1876cad47137945d50eff477a381697a2cf3a8bfe8cbda42c6986e6afa86920059f79391b8a0791ebfc446ab4c649b07cfa54fdad8a51bb6e6eabfc43b1bcbf5baee1feadc5ab5fe83d96372ef50769cd294e623f4c1b8be80fb3041c898e01ec76adb15dfe643325a7d0aef95cd56d1f8fff465767557042fc09421e73b72e6ef42e952e5867be68e8ddccaa5544769cbc804ba1a048115e9511f6ea2decf9f77a9c943657df461e8a0b36f98af3f2f0b9391122a3b2bd1a09efc717b29c9240d2af4950eb1f82f3b54c5495b2255968549520da24070de546a64b6644a2e523108c21aab3d3cc90b482a8e38e8e863af0fef6f928c3d8a91e54c71850881ee5e8dae56680d56ef7450316b35606e76ebd70f2bd08810f059b7f1e42c33bc264479cb739208e84ed13fda3761b5caf4ad1afe90daf574a2c2b5de03e41be98bdb0fc51776a27ffcf7277b3d90f2ae0539fc4fb2edf75794c6efb96ef7e809ec8ba41fd5f65aeb82aef3917e812ee677987daa57e964e9401f9e9270db11e57d735164264d60a0548d27fb3d042b3ff7666e315f8544627174d65885347cd7c9dfcc10e25e5506ed698d685f64e2bbc7c1cc5b6cb611f9aa9338c3985ef6d402b9b7fc430cf359acc78c3bd8a02c60110a03d44484a79f693d3bf17745abffda2a58399ece8b1acbd1127fc44a8cceafeb6e086e83c1ea9704e23e8766e76d90a182ecafe400b4bd2fb04e59db4f51a4764224f5773a7cce8aab8d4261a1205bfa240d9c3b2978fe979b39c44fabecb6fe09b2648cce4a6f536b10f5c510e37faabb622d6aecb30e8108fb68d689ce80124862b109f6a3648df961051a96cd86b158529b97ddea30534842633c5809f4599fe30f390d9e3b309c704e642e434c47757abda2b9f02992667ed9b602fa94e3a6576c1e3802b3681721d17a67541cad741ae4627a2764041f433cb385ae2c9f9e7431ecbe2d31ecbc98d7ffcdcad14d9dc092f8085f979f2036901211128a20920917bf31293958c5c4a2ca36dc9e93744d7143b0bb9a168578210d30812278e7e0385b05d47198df42b77a9abd38c4e3f5ce8891fba379a60ff0c05cc7c3ce73b8d0b4670e7807a55d38cead9c65ce054553e71d4f0fd12d6e3af27bf381c866a51dc73ec1334c12fd3a74d1f0bad90137744c5189b7c4b9acede97a49e564ee772c86d8e1f18629a32094d80189b7caabd6210d3f49b1123eb7e690baa7836a02e5b147577330b0c2960f8a1f0a1f39725ce890b5ef04ab98863b9e206b030f6e13274b1d8de216ee367707c16f0dfb61ab3b9b6bf73459a84245bc49c1120fd451e9bb429f9b8d39990e1f08e8135ac110563bb5654da0881ef58dc2746b6927ac7514f01435dfac59dd2b05a15aac5d861365fd7f9b0dccc4ddff67fb6b1814388203cdae163bd9df7150a92128fe7c723706e1cc200550e449c41062bba65d3d5370b18c157e585f61c6300a07e2eddc2ada2b66d958df17543b79b7a0cd5ce6832f72922f9caf7bb2d940f7f81096db17d26889052eaf79bda40bc0259aad6f99c810879afd8e383bb8536b87876f1ffae58f7e2c161b4edcdde4ff8e075e742dbb91b9dd46c764fd30a70d4d927d0c3805a712fb6224b8c04280c74319bb42274d88382d3ce17ddfe9466c72a737fa40df3a4102884bd66425b4b8258f271e1a8ee7f600821bbd2dee71ba67ac4c89e73b6fc098f7d672130ead1ca1b0cfd93bbe12f18ae589024b0ee34c7b790089b9b8ab1ccf2f05c3b199000400edc2f91a87296c6d9c77e20c1b740c62c8ff4dd37d239a188505159f30d70dc1494789b88882b14498ce3a0a198fe607bd109f18aaba664524c9398bd54196fff66d0d6c0d15885e325a47543186460e3506ed617f30c71af0b26b54f798b7746e9c9e5058eca3b3c814eb9ee341ded01d0fc31a1eef3f7cb37ce303741e00b459ea99be3cf9cb2c102eb2434854745aace538940253598a08e220a71f711ae9f699e04c448ded13dedfa774d7172f2482ca02fbfaa8505164a38d299046440d5437ceea9b61b739df3d2c1807002de848ee77e244a11398f5ce08461acdee3ab4989c09851e02cf33ebaa275b816d025b9f23384cff1ed6dee23286f6f4617be60b5d54d6fa455d257e25fd67fc0f5a8d1bc6e152049dcc8f7ae9646cdcb06a8dc1df196faff3b3627e95f740401f0338b7c7298a54c49ae48cc8b887e6bc31969ff6e271695ea325f66d2929fe96b67afbaa4f18f515e20c644819d4e64611388bff0215ee680e1bdaba2c332a0c4d6334dfa66bcb619529c715ff33f359be4056a0938cd7f568eb2b4de4ea620df5e5b7980ea2988034c95a4ec3ad20206738a943cd37c5a3e58d4d47f85b759e753a2f82685c1ce7d4ab715e76d6f78e3274462620a14c73baec7e15bcc967358bab14690cb5dce34eaeba703dfc2521c048042ce552568d5784bbb72bd2d320d073a2b6db1eae2761f73cd8486ec62e4f6e2388ba828807bf6c439a6cb94cdb008676b27d3ce1186109c060c4421bfe293b8594b46db3f5f50b0408eeb68e7175b3fe846e6017d4996cd38c89367384fed1a51019f52e6d0aec67c017009701b762243997b3b2b2344ab69b7bd12a40f561c5c0f4ce7597bbf1e36ccd0dff51ac9db8c56133baa207c23b059f0812ab453017a51f4db849b4673b3bb0e596a4ba732c57bbd66650c1d3352fc53e37ba3d4afcc91f0a06b0adb6575118a9f5688ccb3cc0f555b3bac580e1857d925e91bc4907066e3f5b71118cd69c4652e698a993ebf5c4490226257f72531e20493f3e6a70f1819cc22eb1d757fec79394d1d8182a96b891c4435b13d1ec9b1444c901c3feaa989639db5eb24ac4879dab2f0e9b300f5bdd70dbb6118f2233951e436c67e63b4d7eb91d4f8ebcf21b2a9ce5ef4668e1993bfc9428b3a822857263fe07f11bee3d4ff43a1660e364a7a54ba7ae6910ee54d0de54351551c73253543765d11e9ac864712a7ace8b1d4e0357e4b78fff83abe6583ed54e329408aff7c5ade9a8108c823b57b39d074be16d07252c89c7e08a4fdedb597a02b96598ecf23eb3c870ce61b34fea70b3f5c22337f097766814ecc3c3609ad162e87479b8d3ba04ec46df914c808d1e1c7675f3bcf1a8f1f827fda6b4cede900de885aefe714f225c957e364eeab77ef0d629d4f3a148aef383e503c37a82d48e32d9a41d32a4c529f00b30c264b7a5df3ccf9678d461a20763c2ccc74463a01640d3283369e00d11746fb7bc69b9265f0c2ee449f9acc8493509eb5894fb7a6eab00046d826e8fe97678833e802a032ff2431aa80f2a00cbe7d3c263cd8479ea5d4aab6653143499948cc1340e6d3ac990bfe841b5ca2f2f8a92226e267589a21adeba3833ae2260e488fe5f5b02216470e51536a52f8aca071f7c4ab284a2029f8391c98420a1646a81691435887bcdbedf4a3eff605064dca2f86bd101fdd74fb4107ce57214f53ef5c75554155f6bea9b8ae43b206e2644027f30f165722742ed3573e8b9049dbac1e3a60e37c4b0855c3342cebd823ec965e37ca3220e20f2acc55a05afc0a280914da389ec721b943478b3b0aaca6ce3c499a941442ae694278f4338886455a9c226a6c68164d64c712033f6945140bb6c4e9d9098697e3d6f3be4c387c9873049b3f190811895e32cb38cb0d9e2c8ab46e4c592d7d7e81f03565cce6cddf8b8094fed99db76ac36872325486fc7638a984c9f73f27ac70bad3548d98f17caf3a3bb56b2a73337f4b4aed23b7a4852339981e9f7ceab50c8f9b748d96799d4d97ea8c2f5039e4cdb803a0f5efd9df244971fd03c1a6353beb8c4898aa1a8786cd5f812392cd1954c327eeb585c7e555a6f6c228378601252a89a9fdcc388fb392e65dca7df0b414c1c13b5f74249b30bb4695fbfc4728ff1bb70546899c7adb50ba10ed99a32509b1d47543bad7846e841f0e88d168201b2264d43e176c9e1736af4fdf3d3c746b36f33255f311bb5e1b13127c00588bd8665c7ccdacdb1db8fea0ec99582a23caa20a3e9eea46c2eaabf9ef85618e91578d50bc51c79bbc83b8d025bf866442b86c1bbf97b763822023f53ce460f6fa6c2a5e442f07612b7ee37c006fc56e79c79f2f1c7f57ebc40906c1edf1ade4addad17cfd63e39b6ec4c713f70986f7f57cc9afa14432c9eeddc6aa3245ba6498754104ce4ea0b75edcff7f5366266af3e5de69fa5fd929cb4a52fbf2b8de3f44ee4576cc654b45caaad00182da038ebd33d83fa79f7569a725ce69b06e19180f37d6dc09d55ab2acf4f47f08a17cffb6f946ade3a51d50eda1c9e3324bda1edaa99abf39347ec3ae5fe07dde53402e371dee97d0be67d122ad6f5429230b715ff733893aa2ed3e429681f013cb3addcfed7557a5a7f3137dbc8b545d5cb1f1aefc784b32a0314ef44031110c1229aac00433a859df6323d97864f32125ca0f3ed524f2e52f7c16b422d1ef0f00fb863c459149372e999d58095b4c7d8f823133af135395b95f3b34b16880c950cea5438506224fd21eb51dbd6df644f4767e88b513b2bb7522159e3e113bbe9c6bffa8d289368fca799c544a446d22fff2209eda376efc7a48855a857e814e8caf3ea776527c59f69e8c4c47d9286101678bf7355ff176a9fdc3e54a92288d1680520f4296c8f557645200e23a99fca1d1332eb83eec11c94e55f5bcd9ca08f6755abdc364fd91b50b85eae80d83b9e931e9e3a3b5bc540e304ff1e05862d62450e4527ff2b5d2b5cf460a8528174ca91ada760fb9b1e91fc7551ec6f4a514f02eea9e29ca89ce54fbea1d62d54f4f859275060dbdb6e9f1c731db2f11ebe0dd20480be0983535be6c0277d167a613cfb9dfc21009e6fdf8cedff9c9ceb107561eb808594c5fb9015c41427b41761fa17213821588a1895013051a1a714d9c719bec905b50f14cfa6fe4f2ddc73a43d2ee87f017092328df145ac5117bc753363f8e96723635fde93f8a61edf185c2feade3927073bf11fdac80d49985b5c20899f76e8a493b4eeb15a244fad10b02bf635050fdfaadd799c0de8a12ab2e4f1077f01df311ca3faba7e3b6822a70e174fbd7fa7282b31cd498fd12f431ea35f33c74471cec71cb9096e6ae815c8fb3a631255989eb4fcdb3705813b9b79cdbd71a5424fa9df1dd0e187c4c6adc5369ad37ea1de5579c2b28c9daf32b01a2a4d0c68c5a4fa2d9792f49f7be20d4cdf9b5e60f6d0c4c6dab77b81853dcbba9a7aadd26c8cb97e6dfa7ec9d387325dac47f74c60ab2bf39902e0cc6a8c4b22d9dbda9511e759516609f57a8f50e6ddf25079a3cbfef6e9022756ff56fe76812c87dd7f0ad612382e5f2decad7a4c101f1bcd07694d87d92196ab33a4f10ef496cbcb0db08b293433d0e4c891551a5f96e939d1d0e4fb6c25cf962e1154ecafdce354027277bab46d24b1e28bc474fcfe6e7e3e6af380e0e0bc164865f573b7d9f69d33c7c1d6cdbe920eda97e52e2f0f274ffc2e715e955178e919632129dc32ade908e5cba2a186f5ba9f2fdb5812e5fda85b747ceb268950ac1945791f858cffecc97d3812aa7932b787736e62f3d61ca7d6c923fb28c8d931790db9a79a6a80ba2acb6ae57107e53840a2e2062e6aa25976834946b1ff80932f86820b1730b532f7297084187a545fb0595c3af0f41e37666be90b23dd0dc1a9a0d37562a2dd3aab8028f4d3f2bf9fcfda3b4474dd3808cff68566f5b040965848b9e611736660dcd517a9770089e266cc54a99c4a2a8c3da79b32a6cfbc1551cd1da42f1dd1e6579dd7a051ea8a53d5a8459f806d7a25ebb62cfdcd8d1bf3b246c52d294fba1a905c372cc6aac5a1cf314ac67cb951bc692fb51fbb80e8d2ecfa523cddc343383040ea29d342d5452dae8d693efc75c19586ed25a96914b823f4fa25ca0a3f9baa9c88cec81251b13e44edeff168c7206921aa1561796783cbf3bbd3cc5fb81409a75a74746c19474ed00b0b30d00f7bb22ff278cd419d42bc4a78609889d362daf863564bfbc708503cf4dbaf171b3dbe2c495d8ffc6d10e9dda3e9b160c1346fe3854bd2eb359256fc56bf6fd8006cf961da1f21637e292bdd726e73d3f8ae5664a0f9a65c76d9f7a67aada3b52590443c7fd45f54f3ad5d5da42a518e1457243458ab706c88f30dfb8906a831a5b5cff16fe99a2d1fdf3d127c5bd9b85233679f5806387ef88bf569072977eb93ee3a1e63ba043ae631f47f6fe309898497ebc6042ae31b55a88db1970b52ce444ddc73c3cf4de8b3476010152a35340b2b956bdfcf9e25931584a1d993803973207ad43fc8c1e800c231fe6a73c2e86e7e07d5ba526f82f564b0408ce1494aaac534952eca40935293563646da51ec35052d766092b90658e9539a5665485389e4b57e64cadb9bf5fd9bd5574f0893f5fe25823ffc66a2a6c04cfd10a6d3acc5c4708b7798bdec271aede43113d4116fae938760528626ad59aa9ae17c17757149e2ac8ba53941c07133ff2fc260e5f9c8e6ac1ea8cc49829ddb50323e7840e4c5e03808407084f7571467f816e3bd2f0ce6c17b8e06bf686b1162c58f14f1ad6480feda87be4da33bfea3bb3aa3485e5be47590e6c4b7976f80bae89fee1356fb1a06c31241f73032c1f91aac0ccf84c321a893d844ef576f2ac81c82b9c8e5c4440093839a02683a06398f0d4d69e087529eae32c30bd8bfb520b11805535a845b00389c6a7ec09a5217e3d695b4fba9774e7bb5e6384db08c8bc1685082d262852c4d60c6a4a0a95cf814048670e311bfba7dfab12f0ee4664431b4034064e82a63a830d87fc52f966a169ede5b469f4507d183bc222626d7c5f95d31db9ddf4b55eca0b1cccb137aaf47711f9d686de26824b247e012151b5895822f7b020691fa0b373d2c142b04d78ee2e2ed94935bd34f1c33ab3f806292b4c522258d49d3ea00b8f9ed46c983eba8a34738bb22cfa1e67013da80aa81bf3cacde1a9f38ab7d9dc73f3691e44eade5e83b486c635abef6f538306df955c10c5b383c3f666bc37c1df20b4014f982d6569b0fa0d7f88c92cf62f516723b306ab2e9b961144d9156e0c515192265acb0294a9f2fd731a6daf13736ea99a6d04a0d430dad6b3e7e7555f5162b76fba548482f61c19bad4b1421e095206149ec74d758838f9d934136d17a42b73337af1381a64e402b8106802a2f3010def2b7964d8142cb5ca53e10882f108f6de24dfdfc3a9a80b8be4fad7832026400a642c3b25287752c15f14d7404bf2056d5227ceb059c312848486b1047f0a763e3951da39efe634e2bd2d74151025dd65c9e4258754ef1fdfc97edfcc5df6b569670c1e88aa40c9e6a8daf0f981180055fb6dd7c55477e1c5ff4a0c943422696b0fbe34302568ad761e3681c8542db739543f55008bb37728dba467e69fdd699b63e834d109844e5c84f561633a35f1f09e849275f1df745c28ee1bb7a031b646f7dfbc32cddc2ed9d586892100fb005c9fa99642e05dbc82bef1727b4728781cf87241c7ab405dec061d0aa95241a71294055e3396f3de77405e2310c435153edc2df8167ee7d11e79f6520c063429f8450cf424d68f75a92e5d6009bf2c6e73e951c46a3807575b3f7b36cf8bdf0ba5db02124e4bf124c821ace0869c5036f50989f225aca7f3e7b7c55b76fc337294a88cd16f1cc88517b5365e4163483cb6426a2460a43b39a4e9e489e29e8b5e2e356bc4e57cb0ade3c652b15acc2aa8895a126c64b122a50e07fed124a5315a969366907cf64cc3175e9c7b94f93d23c4a1eaf69131ec61cdf3cf21d2ebfe00be62cea3cb76a2a4429b4bff52d76589c78b254e3d5d8d8336dbcad7e618165000966c3216d24230e8adacbbdd655cc840c9f42927d4d40e5b343191dc754c6750f8cb8f055c21b8b5783e00aba09ea00135b182f3c81689e6993550bd9d64dc2725ae2fea2c4736c8db8a9882f2184d80cb896ce7af306755dd5dc8d285ffebce0f60d6b01fa1bea2996f44f5f8282fee22c9c321ee6b66e4a25eff177f01f66a42a2b62d0579e2f630e8e3590e1d5d7999f1657086234d30aa6f94e603c22f0be2b4f512362f42ae5ed96d7e8d30b177a20afc7a77f9730c68572c81c46ba5eb948dd59b883b6a60ff0be7f7513aac049e2531bbd098e92eb7f5856171cba8d5ac8f4a9eb3ee54fd4fe0c2233f8a05c15111777a614ea70baa6a1c9c6103e3267586af3e6f821b6cb9b8fac76523066fc7c6c8f11bee8f10e22b278144dd174b875d94bbe2d934e3b3717107179cb5dc6b6495bf23dd469955c6c381a45c341f24235092f3d98ec9249254a82483d3805bb51d8d399e9c8f6bba148951ede10ed7d25105ef57e0801ad5993908c36f25e7f851d8c0a3b2ebae68484a130bdb46b304b6487ea19a8dc94635ebe9f5ec2a7d454eb2fa015a8369de1c8466024cff0594fb9b6a4f9f80368442cf784b3b3837fed8ccb07a661f793e6fa94b560f0a2de4f481b15345051e9e1f2f72af1410fb0122453bd2d322ca86522d867fff46ccc829e0f76e1dba1ff201434db3805c640bbc7c268cf9828b8367dc022245acf457bcd0e0253fd4d779ae9df595eb94e5db316abcf38702dc790f966418f2d0704a1ba4bb956b682a216ab332132619b9762c7ba83866ce9a66256f2dc35b3236f4e84b4ac2f4513ff760b9a124fe37038ca9283ba3100dc410b7f6cfbdaa8edb948222dd7e7933ecc561ad650029c9f3c0693ccf1fb4e091d5bbebfa3f16dcde330e0cbfe7e64495d57ffcc7da45eb5a4947b9a763f075cb9dcc2fc6b9f4b4b8413ed6c19b7d025b21e48e2940a5bf7f1e55d99c8deec6d1cd35c315698c53cac3f504b0218c54c28b2d2a02bff75d51360554476a7738b4e2940c2456219c9864918fd507bb9dbc5d43cd62a3f0294ec858e0fcba3bbe1eae797fcc3ad36a948e05c185c5715634c770a5b7e4b901072272808f444e0b5568016c0951f0ec92f06f4485aa746d289071474643e753b0e1e2eda9c2a41c595af3da12c308c962469cd019dd222fff11961e9d58f4b4cefa3cc6ffc9dc108ac9591f4eee460d3fed2aa69dd29f0493c08210d2fef58c26d13c5a99467719bb8023d42ff46d5bc4b1240d165a5b333ec83e27622ac4e6c9131aaf447da782be7885bffa13e95cd56e6ad452640862ad86813cb918fef9a9fc839d49153e5f37d6312c4977f6bc4ed510f67f906c3204d346c35f9db7923c78423486cb7f3d8b0e1ad65de97f2f52dabe976271582a950a1fc88ef2a7e868dbda95b3219a1aa52d6de93b81a3f008b55968a4bbea4d667909371948b499f4d8d2fb51d00bd5106511c89890742ca0ea6f11655df0268940857f15765a4cecbb2392570c5680befb954c5123d5b5e0adcc5b8b76912231fcdb1186da721b32926a07ca0a105fe7191e488ee7b0d080c65be4090ac77feaf91c113d58932e6e4c39de8bf7e9aaa9ce3d70d6a0be13711919538126bb9c9cc4755c76889c8d8cc938c192fc8e1c496f6c2658133e9a1f592817ee1b6bcf3fea20860fae240e8c02fed5cb7361efe4015e2f45df87a60508f4d162f2ea6dadd16efb8e499c40959f9c5f896adf2dc01b552e506dc7c4083780a440139689295196a5c64497ba8181ea0f9ef1d440e23b265eaad38aa2f9776d73287f210be4a67f995ca609e7e2ca3e99f8131c7104250e0b2f506f1979a25e1a730b620bf7c0e21c800e1a004327c97e1c5751a0d1d6573fc74f62c007c315e9ef53b35f5af9fce5308c6d501c51c8e74df8c9181405ef0daa8b42e22605b4c824236bfb37e53c98efb5a0fef91898b7320cfefbde3116654ac0325af631f6d8682346d19ada737b1e131f2575e5a6aac98f7fb434e0067a3e22dba3e8699eb7af1aeea0deb117e2aebd8fb89811f3cbf06db230ffcb4632fb8ec0ec9612b2111f8f9392d3f87a01eb0989adafe40247c128b2ceb1d32e5df3b3721be7759c1bcaeb4c9da3f40cc2c8f99c2e6bb314d1814f9fdf82448bebb3031494837d616e7467e1ad3056b8122e482d0e19edb6ad74320876fa12096decdb33a71492e616f2ca35e619de79a30f74dff225e1226c0a9876dbf395da0ac2f8678f5d9b2828e9636c367260e5f639bc3d4913c2793e049bffbcc0e9bb84be9ffedc36cd681709ff5f414a80b0c48c430138e4f9269b7fbd9d4a92b52714d734268ae34fab3a73c9cd37b52b879ae279e11c313947eb9311b6ab32daf732a9e6508ab35cf817dbd0bd8ba3d69416b6e672f4a6683e224b2eece37f6fe347b321e5bebb91897ae2bf2d067d84747594226244b7372b680941feeef162e9566bbfcd5ae547c67dc7f87fbb895d36cd01864cc469eef49950b0f87a8ad375f821cb14854f9181ec85e44554acf36a411a980de2997ebf2e181dd37842890724a175fb7ac71452f28da73c588e37677f6b66d38e6b70efc5aa77fe4658408ad0b4cc5846e53086323bb55ef97400f0e72135091992ad635c27fe24e520bdb1a346b231118fcd287c73da3bf3c06c1c5a320f4214f8ac71ab65ae0f9d5dda8b10a18d2038a851b37e59ceb2091ca42e94ccea63ebb26240459764d51c3186dab2fcb08a9043e465fc7e5ba8c19d0b4336c7c64b559338ef964a86ebf6582d25389c0c77980d746c3caf55a4fbc3487ec12b8e953f5f7da528f50aa2df0873de5a76585b321740597768195ba03a61e68ba25b8b27fe2bfd6b684fac809c1b2d18dd5364ec16d8628e439ec42733306c9b983e635df43e73b32340f139aa727037c2dce7293cd7205ca3e3c1ca2a832cbbe0205c783d6b29464542f4260f83f2e91c4600a74a260a311811960ac37b8890a6b77497b9b7d91fb9b36ac288a479342abdb0e0e1d8eefce520001bcd058ddfa46e7ab55e975ef749093d4f68a7eb0f12e0fb9e17e8e734830fe164f8c8a624be936bc725a4b79488c7e4b24028ec05e609405562045ec734708187003b32d40a1131a9b4b64b6a67598ed1babab02cbfbd41e72b8242bdec5d67c775200f8e406c7ae14040c15d4073ada8753b8b4f61cec0c276150db2e4bf729c415c466b2a2810640685911dc8c7851a355beb943d84b627445773c7813ce1538c21af34fe19ccaaf8af1aff667609bc3f6a2371ed6e1bce99603d4429d49b27b2da5f21e0ff1bee1168f43317eea8c433ccecb384be69cec1008009b519a6e3463ed980db748c8be6fe59cb26f5a3e42071998c465a2ae2c5264fd78d6bce5f2ab1c2c5f00cb780f012abd11ec86da1ef6829ae2d2a85049dcad31078325d17aaa9d2525e87bb886aa4fb62e7bd68ad7f28013ba81e08540b2e1a441ccb746878bf1bd677eb85b572bbdee9b486516252ec8d6eeaa920dcad244761bb5e91d43a637abe201baa861aa830db28e265378aab9a5d0bd15e224e3988b1f5b73120c33d05c951f3fd1d880911c5ad0b406ca297e621f510ce89a90d0ddc0d9acab66330164854b9d5bbea3529ad83421864a3c7e1fc8c34a7c85aae6e713dc207adf568e3069fe15b2c43e2620be5bdf7a7ef2cc0c44f820f87a67bc1b6a3de2f1156fbc5be703c14a0365eda3f6f8e941a9521d64d86de1f38aeb6ffb40d72acf7ba364e28fe15c898ccef397440304becb3c3a42914210f610044bcd50ae9a1103053dfad19c535190161b2a9c31b7d77b0c8543a42e41215ced6112cd2b224547836c426b5c0c613777b22783810001eeb29b384fddabed4cfbdec924c648ad35fd7774e569d9f9a2ea5b5c030705ab5769767d3d56e856c87cee969ca6640dbf23f2411cdbd7ccc834b31075842feaf9d3023a2d3a04481179520ebfd1213f81c8ece58c4dcae9861eafe119e713832c4347c4a5cbc11666ead82c52b25ffb29ccf86b0b8a6ec6244b301b29532a3309e7913515833f3b9b74430f79c33e96da7ec7e50a28981a0f1133d6b8233a9072c4e18c6cd3bb687665915d903a6cc9cf0041b36185c197c6e6a143cf201a5c286307ace34595b25b4bf8a7d2cf8c0e893d9ddcd8cbb7a20f55a19708bd2356ad91023f625b2825222ecf51adfad17ab28df099a77eca031acf824e175713e29b239977e00caa44d5d487d1bd21527d58babe7f9332d81c3e2d7f61088283ef9aaa5320d0b2817e8c2b65478565fc22bc7b27ad069e0e4f7d7f47ed3297bd11a8b30b0e122a9028d951145bfb43521acb79a421140db3dde7c3ae113632ec4d47b27e1a5b03038648a4740d2a61c867ad4f471f2574e2260167e261d01ad011fec2decca0d523db74d148f924ceda6d7a18c0b395f2ffcdc0c7de61c8027fbe9499e840f22dfc3223f6d39c3808df251c328f5ab8228854420391a044ed8cea0649db1607e171ffa0564a119f54420103b0e90abcd338c3026fa5682bcf669b0480c664fbc16d728fe417eae068456fead9ee0330d088e5208a373597533f36dd5b11427bf102272e4f56879fb1e7ceb177df7ee88724f49a4584257e9f725674462d4559a86b849dcd3b7f9606c9985e37290d4ca42174e5cba4beb185e9e74ab5099bfc567f709d6305f8a85e48e436aa695a5f98db1a33422355ba071c5e6ffa7e206673b93bcdb6758b4ab40aef474848b38493d87c94436add087f9d9adc60b4356b61fad6bc8f32dc467f030d1c100f6b66e935b1b3d840e9f3df1eb23b4ab29fd899d662a4db0d3fd4dd05a935366198310db56eee73a8acfb7628c2033bb28e22fb1badaee18cb35b37fe96e9a19e3ffb4144144abdb9b09fc9781391e27a40c546f0013977263132920f7ed13c719eefca50dda446365db4de7d1f5b4f7ed9fa37e31d2567a5ac6070a37c65755b06f06780a2d8a41c5276c5c9f72371333bf6066ea7c1a3f8c96e51007e632232467f546e32aa88e339280fcea64ec1b1957891cb7181d6073d3aa00bfe6fbbfe9079adb5b563a7efc7bd01daca79b91410c521b086c78b3634fd7674fb91277eae96aaba15aa73e542fbab583563cd14a17fc350f19b147b0a3fa6930bf3ad803326d929eae2b255fadee21795d0d9a9991aac00f04858d84a8203338b4274940c9b74874989d81467f7ef12b2694726fa63b9a4949f58504b7135ad750fc0dec86016122e12ed547f34fa603f59f9eeb72f453d2b6932d9781f9f74307b2cdd983141e15ce6d67a4d4c6b4a69651a8f5d7c79bce0729c50c723dcaa40de14f7c1f831935df2314d085d81f608cc40af97a8e1b8f8019450672b99175d9e506d57ff7ca322474b5b4160b6cdfae6afaac2682fae5092a3d63314997e452f90038e8c7b241657ef0c1fd21df178374c95190d8e92b7313e10449a3aea6aa98bff90e17424c9f8999283d9219c66098c3ffa9af7971a249466587f53ab7389d0e913674a54</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++面试</title>
      <link href="/2022/03/16/c-ba-gu/"/>
      <url>/2022/03/16/c-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c99452329f178a104071ff6381f3746010acfba593b5b39c147d74105f97c38d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统面试</title>
      <link href="/2022/03/16/cao-zuo-xi-tong-ba-gu/"/>
      <url>/2022/03/16/cao-zuo-xi-tong-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1e5be4d5267680531f1cc535137706cda8b8de839505581291d21702b9350eea"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>难理解的高频题</title>
      <link href="/2022/03/16/mian-jing-suan-fa-ti-mu/"/>
      <url>/2022/03/16/mian-jing-suan-fa-ti-mu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b6534aa022e749da626d04c00941c6552a65c2b88dddde7e5d41a714d4afe613"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找</title>
      <link href="/2022/03/15/er-fen-cha-zhao-suan-fa/"/>
      <url>/2022/03/15/er-fen-cha-zhao-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="二分查找算法"><a href="#二分查找算法" class="headerlink" title="二分查找算法"></a><a href="https://www.cnblogs.com/kyoner/p/11080078.html">二分查找算法</a></h1><h2 id="一、二分查找的框架"><a href="#一、二分查找的框架" class="headerlink" title="一、二分查找的框架"></a><strong>一、二分查找的框架</strong></h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>, right = ...;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(...) {</span><br><span class="line">     <span class="keyword">int</span> mid = (right + left) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       ...</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = ...</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = ...</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> ...;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><p><strong>分析二分查找的一个技巧是：不要出现 else，而是把所有情况用 else if 写清楚，这样可以清楚地展现所有细节</strong>。本文都会使用 else if，旨在讲清楚，读者理解后可自行简化。</p><p>其中…标记的部分，就是可能出现细节问题的地方，当你见到一个二分查找的代码时，首先注意这几个地方。后文用实例分析这些地方能有什么样的变化。</p><p>另外声明一下，计算 mid 时需要技巧防止溢出，建议写成: **<code>mid = left + (right - left) / 2</code>**，本文暂时忽略这个问题。</p><h2 id="二、寻找一个数（基本的二分搜索）"><a href="#二、寻找一个数（基本的二分搜索）" class="headerlink" title="二、寻找一个数（基本的二分搜索）"></a><strong>二、寻找一个数（基本的二分搜索）</strong></h2><p>这个场景是最简单的，可能也是大家最熟悉的，即搜索一个数，如果存在，返回其索引，否则返回 -1。</p><p><code>左闭右闭的模板</code></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>; </span><br><span class="line">   <span class="keyword">int</span> right = nums.length - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(left &lt;= right) { <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">int</span> mid = (right + left) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">       <span class="keyword">return</span> mid; </span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target)</span><br><span class="line">       left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target)</span><br><span class="line">       right = mid - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     }</span><br><span class="line">   <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么 while 循环的条件中是 &lt;=，而不是 &lt; ？</p><ul><li>答：因为初始化 right 的赋值是 nums.length - 1，即最后一个元素的索引，而不是 nums.length。</li><li>这二者可能出现在不同功能的二分查找中，区别是：前者相当于两端都闭区间 <code>[left, right]</code>，后者相当于左闭右开区间 <code>[left, right)</code>，因为索引大小为 nums.length 是越界的。</li><li>我们这个算法中使用的是 [left, right] 两端都闭的区间。**这个区间就是<code>每次进行搜索</code>的区间，我们不妨称为「搜索区间」(search space)**。</li><li>什么时候应该停止搜索呢？当然，找到了目标值的时候可以终止</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">  <span class="keyword">return</span> mid; </span><br></pre></td></tr></tbody></table></figure><ul><li>但如果没找到，就需要 while 循环终止，然后返回 -1。那 while 循环什么时候应该终止？<strong>搜索区间为空的时候应该终止</strong>，意味着你没得找了，就等于没找到嘛。</li><li><code>while(left &lt;= right)的终止条件是 left == right + 1</code>，写成区间的形式就是 <code>[right + 1, right]</code>，或者带个具体的数字进去 [3, 2]，可见<strong>这时候搜索区间为空</strong>，因为没有数字既大于等于 3 又小于等于 2 的吧。所以这时候 while 循环终止是正确的，直接返回 -1 即可。</li><li>while(left &lt; right)的终止条件是 left == right，写成区间的形式就是 [right, right]，或者带个具体的数字进去 [2, 2]，<strong>这时候搜索区间非空</strong>，还有一个数 2，但此时 while 循环终止了。也就是说这区间 [2, 2] 被漏掉了，索引 2 没有被搜索，如果这时候直接返回 -1 就可能出现错误。</li><li>当然，如果你非要用 while(left &lt; right) 也可以，我们已经知道了出错的原因，就打个补丁好了：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"> <span class="keyword">while</span>(left &lt; right) {</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line"> }</span><br><span class="line"> <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>; <span class="comment">//注意 如果是插入位置 需要先判段left是否越界</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>为什么 left = mid + 1，right = mid - 1？我看有的代码是 right = mid 或者 left = mid，没有这些加加减减，到底怎么回事，怎么判断？</p><ul><li>答：这也是二分查找的一个难点，不过只要你能理解前面的内容，就能够很容易判断。</li><li>刚才明确了「搜索区间」这个概念，而且本算法的搜索区间是两端都闭的，即 [left, right]。那么当我们发现索引 mid 不是要找的 target 时，如何<code>确定下一步的搜索区间</code>呢？</li><li>当然是去搜索 [left, mid - 1] 或者 [mid + 1, right] 对不对？因为 mid 已经搜索过，应该从搜索区间中去除。</li></ul></li><li><p>此算法有什么缺陷？</p><ul><li>答：至此，你应该已经掌握了该算法的所有细节，以及这样处理的原因。但是，这个算法存在局限性。</li><li>比如说给你有序数组 nums = [1,2,2,2,3]，target = 2，此算法返回的索引是 2，没错。但是如果我想得到 target 的左侧边界，即索引 1，或者我想得到 target 的右侧边界，即索引 3，这样的话此算法是无法处理的。</li><li>这样的需求很常见。你也许会说，找到一个 target 索引，然后向左或向右线性搜索不行吗？可以，但是不好，因为这样难以保证二分查找对数级的时间复杂度了。</li><li>我们后续的算法就来讨论这两种二分查找的算法。（==左闭右开==的 ==插入位置==的 ==刚好大于==的 二分方法）</li></ul></li></ol><h2 id="三、寻找左侧边界的二分搜索"><a href="#三、寻找左侧边界的二分搜索" class="headerlink" title="三、寻找左侧边界的二分搜索"></a>三、寻找左侧边界的二分搜索</h2><p> ==//搜索&gt;=target的第一个位置==</p><p>直接看代码，其中的标记是需要注意的细节： //正常二分法左闭右开的模板</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">if</span> (nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> right = nums.length; <span class="comment">// 注意</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt; right) { <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       right = mid;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = mid + <span class="number">1</span>;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = mid; <span class="comment">// 注意</span></span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> left;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么 while(left &lt; right) 而不是 &lt;= ?    //==注意 仅仅是因为right的初始化 两种模板没有差别 都可以使用==</p><ul><li>答：用相同的方法分析，因为初始化 right = nums.length 而不是 nums.length - 1 。因此每次循环的「搜索区间」是 [left, right) 左闭右开。</li><li>while(left &lt; right) 终止的条件是 <code>left == right</code>，此时搜索区间 <code>[left, left) 恰巧为空</code>，所以可以正确终止。</li></ul></li><li><p>为什么没有返回 -1 的操作？如果 nums 中不存在 target 这个值，怎么办？</p><ul><li><p>答：因为要一步一步来，先理解一下这个「左侧边界」有什么特殊含义：</p><blockquote><p>​     target = 2</p><p>pos:            left                        mid      mid+1     right</p><p>nums:          1             2             2            4</p><p>index:          0             1             2            3             4</p></blockquote></li><li><p>对于这个数组，算法会返回 1。这个 1 的含义可以这样解读：nums 中<code>小于</code> 2 的<code>元素有 1 个</code>。</p></li><li><p>比如对于有序数组 nums = [2,3,5,7], target = 1，算法会返回 0，含义是：nums 中小于 1 的元素有 0 个。如果 target = 8，算法会返回 4，含义是：nums 中小于 8 的元素有 4 个。</p></li><li><p>综上可以看出，函数的返回值（即 left 变量的值）取值区间是闭区间 [0, nums.length]，所以我们简单添加两行代码就能在正确的时候 return -1：</p></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line"> }</span><br><span class="line"> <span class="comment">// target 比所有数都大</span></span><br><span class="line"> <span class="keyword">if</span> (left == nums.length) <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line"> <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line"> <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br></pre></td></tr></tbody></table></figure></li><li><p>为什么 left = mid + 1，right = mid ？和之前的算法不一样？</p></li></ol><ul><li>答：这个很好解释，因为我们的「搜索区间」是 [left, right) 左闭右开，所以当 nums[mid] 被检测之后，下一步的搜索区间应该去掉 mid 分割成两个区间，即 <code>[left, mid) 或 [mid + 1, right)</code>。(mid已被被搜索判断)</li></ul><ol start="4"><li><p>为什么该算法能够搜索左侧边界？</p><ul><li>答：关键在于对于 nums[mid] == target 这种情况的处理：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">     right = mid;</span><br></pre></td></tr></tbody></table></figure><ul><li>可见，<u>找到 target 时<code>不要立即返回</code>，而是<code>缩小「搜索区间」的上界 right</code>，在区间 [left, mid) 中<code>继续搜索</code>，即<code>不断向左收缩</code>，达到<code>锁定左侧边界</code>的目的</u>。</li></ul></li><li><p>为什么返回 left 而不是 right？</p><ul><li>答：返回left和right都是一样的，因为 while 终止的条件是 left == right。</li></ul></li><li><p>经测试， 两种写法返回值完全一致</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二分法细节 &lt;写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> right = nums.<span class="built_in">size</span>(); <span class="comment">// 注意</span></span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt; right) { <span class="comment">// 注意</span></span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      right = mid;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid; <span class="comment">// 注意</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left;    //返回&gt;=target的左边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回第一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == nums.<span class="built_in">size</span>())</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line">                 <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line">    <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line"><span class="comment">//&lt;= 写法 完全一致</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound2</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> right = nums.<span class="built_in">size</span>() - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt;= right) { <span class="comment">// 注意</span></span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      right = mid - <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left; //返回&gt;=target的左边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回第一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == nums.<span class="built_in">size</span>())</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line">                 <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line">    <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="四、寻找右侧边界的二分查找"><a href="#四、寻找右侧边界的二分查找" class="headerlink" title="**四、寻找右侧边界的二分查找 **"></a>**四、寻找右侧边界的二分查找 **</h2><p>==//&gt; target的第一个位置==</p><p>寻找右侧边界和寻找左侧边界的代码差不多，只有两处不同，已标注：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">if</span> (nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">     <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = mid + <span class="number">1</span>;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = mid;</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> left - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么这个算法能够找到右侧边界？</p><ul><li>答：类似地，关键点还是这里：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">    left = mid + <span class="number">1</span>;     <span class="comment">//与模板对应一致</span></span><br></pre></td></tr></tbody></table></figure><ul><li>当 nums[mid] == target 时，不要立即返回，而是增大「搜索区间」的下界 left，使得区间不断向右收缩，达到锁定右侧边界的目的。</li></ul></li><li><p>为什么最后返回 ==left - 1== 而不像左侧边界的函数，返回 left？而且我觉得这里既然是搜索右侧边界，应该返回 right 才对。</p><ul><li><p>答：首先，while 循环的终止条件是 left == right，所以 left 和 right 是一样的，你非要体现右侧的特点，返回 right - 1 好了。  </p><blockquote><p>  target = 2</p><p>pos:            left                        mid      mid+1     right</p><p>nums:          1             2             2            4</p><p>index:          0             1             2            3             4</p></blockquote></li><li><p>==至于为什么要减一，这是搜索右侧边界的一个特殊点，关键在这个条件判断==：</p></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">     left = mid + <span class="number">1</span>;</span><br><span class="line">     <span class="comment">// 这样想: mid = left - 1</span></span><br></pre></td></tr></tbody></table></figure><ul><li>因为我们对 left 的更新必须是 left = mid + 1，就是说 while 循环结束时，nums[left] <strong>==一定不等于==</strong> target 了，而 nums[left - 1]<strong>可能是</strong>target。</li><li>至于为什么 left 的更新必须是 left = mid + 1，同左侧边界搜索，就不再赘述。</li></ul></li><li><p>为什么没有返回 -1 的操作？如果 nums 中不存在 target 这个值，怎么办？</p><ul><li>答：类似之前的左侧边界搜索，因为 while 的终止条件是 left == right，就是说 left 的取值范围是 [0, nums.length]，所以可以添加两行代码，正确地返回 -1：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (left == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line"><span class="keyword">return</span> nums[left<span class="number">-1</span>] == target ? (left<span class="number">-1</span>) : <span class="number">-1</span>;</span><br></pre></td></tr></tbody></table></figure></li><li><p>经测试，左闭右闭的写法也可以 这点<a href="https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/">剑指 Offer 53 - I. 在排序数组中查找数字 I</a>可以佐证</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二分法细节 查找右边界</span></span><br><span class="line"><span class="comment">//&lt;写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left - 1; //返回&gt;=target的右边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回最后一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line">    <span class="keyword">return</span> nums[left - <span class="number">1</span>] == target ? (left - <span class="number">1</span>) : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line"><span class="comment">//&lt;=写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound2</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid - <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left - 1; //返回&gt;=target的右边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回最后一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line">    <span class="keyword">return</span> nums[left - <span class="number">1</span>] == target ? (left - <span class="number">1</span>) : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="五、最后总结"><a href="#五、最后总结" class="headerlink" title="五、最后总结"></a><strong>五、最后总结</strong></h2><p>先来梳理一下这些细节差异的因果逻辑：</p><ol><li><p>第一个，最基本的二分查找算法：</p><blockquote><p>因为我们初始化 right = nums.length - 1<br>所以决定了我们的「搜索区间」是 [left, right]<br>所以决定了 while (left &lt;= right)<br>同时也决定了 left = mid+1 和 right = mid-1</p><p>因为我们只需找到一个 target 的索引即可<br>所以当 nums[mid] == target 时可以立即返回</p></blockquote></li><li><p>第二个，寻找左侧边界的二分查找：</p><blockquote><p>因为我们初始化 right = nums.length<br>所以决定了我们的「搜索区间」是 [left, right)<br>所以决定了 while (left &lt; right)<br>同时也决定了 left = mid+1 和 right = mid</p><p>因为我们需找到 target 的最左侧索引<br>所以当 nums[mid] == target 时不要立即返回<br>而要收紧右侧边界以锁定左侧边界</p></blockquote></li><li><p>第三个，寻找右侧边界的二分查找：</p><blockquote><p>因为我们初始化 right = nums.length<br>所以决定了我们的「搜索区间」是 [left, right)<br>所以决定了 while (left &lt; right)<br>同时也决定了 left = mid+1 和 right = mid</p><p>因为我们需找到 target 的最右侧索引<br>所以当 nums[mid] == target 时不要立即返回<br>而要收紧左侧边界以锁定右侧边界</p><p>又因为收紧左侧边界时必须 left = mid + 1<br>所以最后无论返回 left 还是 right，必须减一</p></blockquote></li></ol><ul><li>分析二分查找代码时，不要出现 else，全部展开成 else if 方便理解。</li></ul><ul><li>注意「搜索区间」和 while 的终止条件，如果存在漏掉的元素，记得在最后检查。</li><li>如需要搜索左右边界，只要在 nums[mid] == target 时做修改即可。搜索右侧时需要减一。</li></ul><h1 id="二分题目"><a href="#二分题目" class="headerlink" title="二分题目"></a>二分题目</h1><h3 id="剑指-Offer-II-068-查找插入位置"><a href="#剑指-Offer-II-068-查找插入位置" class="headerlink" title="剑指 Offer II 068. 查找插入位置"></a><a href="https://leetcode-cn.com/problems/N6YdxV/">剑指 Offer II 068. 查找插入位置</a></h3><p>难度简单13英文版讨论区</p><p>给定一个排序的整数数组 <code>nums</code> 和一个整数目标值<code> target</code> ，请在数组中找到 <code>target </code>，并返回其下标。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>请必须使用时间复杂度为 <code>O(log n)</code> 的算法。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 5</span><br><span class="line">输出: 2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 2</span><br><span class="line">输出: 1</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>这是一道典型的找左边界的题目</p><p>两种二分法都可以 左边界在于 缩小右边界</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><ol><li>两端闭区间写法<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target){</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            }<span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    }</span><br><span class="line">}; </span><br></pre></td></tr></tbody></table></figure></li><li>左闭右开<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - lefqt) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target){</span><br><span class="line">                right = mid;</span><br><span class="line">            }<span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    }</span><br><span class="line">}; </span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="剑指-Offer-53-I-在排序数组中查找数字-I"><a href="#剑指-Offer-53-I-在排序数组中查找数字-I" class="headerlink" title="剑指 Offer 53 - I. 在排序数组中查找数字 I"></a><a href="https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/">剑指 Offer 53 - I. 在排序数组中查找数字 I</a></h3><p>难度简单288收藏分享切换为英文接收动态反馈</p><p>统计一个数字在排序数组中出现的次数。</p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>查找左边界 向右数 (两种写法均可)</li><li>查找右边界 向左数 （<u>注意 只有左闭右开写法可以 另一种不行</u>）</li></ol><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [5,7,7,8,8,10], target = 8</span><br><span class="line">输出: 2</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><ol><li>左边界 左闭右闭写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target)</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        <span class="keyword">while</span>(left &lt;= nums.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left++;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>左边界 左闭右开写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target)</span><br><span class="line">                right = mid;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        <span class="keyword">while</span>(left &lt;= nums.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left++;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>右边界 左开右闭写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">                right = mid;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        left--;  <span class="comment">//注意 右边界搜索的特性 必须-1</span></span><br><span class="line">        <span class="keyword">while</span>(left &gt;=<span class="number">0</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left--;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>右边界 左闭右开写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        left--;   <span class="comment">//注意 右边界搜索的特性 必须-1</span></span><br><span class="line">        <span class="keyword">while</span>(left &gt;=<span class="number">0</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left--;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="旋转数组专题"><a href="#旋转数组专题" class="headerlink" title="旋转数组专题"></a>旋转数组专题</h2><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>旋转数组 经典二分</p><ol><li><p>查找最小值 推荐用 &lt; 开区间的模板 </p><blockquote><p>虽然是开区间 但是 初始值 n - 1 </p></blockquote></li><li><p>包含重复值 一般涉及到 left++ 或 right–</p></li></ol><h3 id="189-轮转数组"><a href="#189-轮转数组" class="headerlink" title="189. 轮转数组"></a><a href="https://leetcode-cn.com/problems/rotate-array/">189. 轮转数组</a></h3><p>难度中等1406</p><p>给你一个数组，将数组中的元素向右轮转 <code>k</code> 个位置，其中 <code>k</code> 是非负数。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,3,4,5,6,7], k = 3</span><br><span class="line">输出: [5,6,7,1,2,3,4]</span><br><span class="line">解释:</span><br><span class="line">向右轮转 1 步: [7,1,2,3,4,5,6]</span><br><span class="line">向右轮转 2 步: [6,7,1,2,3,4,5]</span><br><span class="line">向右轮转 3 步: [5,6,7,1,2,3,4]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [-1,-100,3,99], k = 2</span><br><span class="line">输出：[3,99,-1,-100]</span><br><span class="line">解释: </span><br><span class="line">向右轮转 1 步: [99,-1,-100,3]</span><br><span class="line">向右轮转 2 步: [3,99,-1,-100]</span><br></pre></td></tr></tbody></table></figure><h5 id="额外数组"><a href="#额外数组" class="headerlink" title="额外数组"></a>额外数组</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">newArr</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">            newArr[(i + k) % n] = nums[i];</span><br><span class="line">        }</span><br><span class="line">        nums.<span class="built_in">assign</span>(newArr.<span class="built_in">begin</span>(), newArr.<span class="built_in">end</span>());</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="三次反转"><a href="#三次反转" class="headerlink" title="三次反转"></a>三次反转</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">2</span>) <span class="keyword">return</span>;</span><br><span class="line">        k = k % n;</span><br><span class="line">        <span class="built_in">reverseArry</span>(nums, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">reverseArry</span>(nums, <span class="number">0</span>, k<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">reverseArry</span>(nums, k, n<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reverseArry</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span>{</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">            <span class="keyword">int</span> temp = nums[right];</span><br><span class="line">            nums[right] = nums[left];</span><br><span class="line">            nums[left] = temp;</span><br><span class="line">            left++;</span><br><span class="line">            right--;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="环状替换-最大公约数？"><a href="#环状替换-最大公约数？" class="headerlink" title="环状替换 最大公约数？"></a>环状替换 最大公约数？</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        k = k % n;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="built_in">gcd</span>(k, n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>; start &lt; count; ++start) {</span><br><span class="line">            <span class="keyword">int</span> current = start;</span><br><span class="line">            <span class="keyword">int</span> prev = nums[start];</span><br><span class="line">            <span class="keyword">do</span> {</span><br><span class="line">                <span class="keyword">int</span> next = (current + k) % n;</span><br><span class="line">                <span class="built_in">swap</span>(nums[next], prev);</span><br><span class="line">                current = next;</span><br><span class="line">            } <span class="keyword">while</span> (start != current);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="153-寻找旋转排序数组中的最小值"><a href="#153-寻找旋转排序数组中的最小值" class="headerlink" title="153. 寻找旋转排序数组中的最小值"></a><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">153. 寻找旋转排序数组中的最小值</a></h3><p>难度中等702</p><p>已知一个长度为 <code>n</code> 的数组，预先按照升序排列，经由 <code>1</code> 到 <code>n</code> 次 <strong>旋转</strong> 后，得到输入数组。例如，原数组 <code>nums = [0,1,2,4,5,6,7]</code> 在变化后可能得到：</p><ul><li>若旋转 <code>4</code> 次，则可以得到 <code>[4,5,6,7,0,1,2]</code></li><li>若旋转 <code>7</code> 次，则可以得到 <code>[0,1,2,4,5,6,7]</code></li></ul><p>注意，数组 <code>[a[0], a[1], a[2], ..., a[n-1]]</code> <strong>旋转一次</strong> 的结果为数组 <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code> 。</p><p>给你一个元素值 <strong>互不相同</strong> 的数组 <code>nums</code> ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 <strong>最小元素</strong> 。</p><p>你必须设计一个时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,4,5,1,2]</span><br><span class="line">输出：1</span><br><span class="line">解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2]</span><br><span class="line">输出：0</span><br><span class="line">解释：原数组为 [0,1,2,4,5,6,7] ，旋转 4 次得到输入数组。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>画个这样的图 分情况取讨论</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220325183754754.png" alt="image-20220325183754754" style="zoom:50%;"><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findMin</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n<span class="number">-1</span>;</span><br><span class="line">        <span class="comment">//取等号大多是为了在while中直return mid，不取等号就跳出while返回l的值</span></span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){  <span class="comment">//如果这里不 = 则最后直接返回nums[left]</span></span><br><span class="line">            <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]&lt; nums[right])</span><br><span class="line">                right = mid; <span class="comment">//不能mid-1不然会跳过最小 例如 4 5 1 2 3</span></span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> nums[left - <span class="number">1</span>];  <span class="comment">//终止区间为[left + 1, right]</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="154-寻找旋转排序数组中的最小值-II-重复元素"><a href="#154-寻找旋转排序数组中的最小值-II-重复元素" class="headerlink" title="154. 寻找旋转排序数组中的最小值 II 重复元素"></a><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/">154. 寻找旋转排序数组中的最小值 II 重复元素</a></h3><p>难度困难473</p><p>已知一个长度为 <code>n</code> 的数组，预先按照升序排列，经由 <code>1</code> 到 <code>n</code> 次 <strong>旋转</strong> 后，得到输入数组。例如，原数组 <code>nums = [0,1,4,4,5,6,7]</code> 在变化后可能得到：</p><ul><li>若旋转 <code>4</code> 次，则可以得到 <code>[4,5,6,7,0,1,4]</code></li><li>若旋转 <code>7</code> 次，则可以得到 <code>[0,1,4,4,5,6,7]</code></li></ul><p>注意，数组 <code>[a[0], a[1], a[2], ..., a[n-1]]</code> <strong>旋转一次</strong> 的结果为数组 <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code> 。</p><p>给你一个可能存在 <strong>重复</strong> 元素值的数组 <code>nums</code> ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 <strong>最小元素</strong> 。</p><p>你必须尽可能减少整个过程的操作步骤。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,3,5]</span><br><span class="line">输出：1</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,2,2,0,1]</span><br><span class="line">输出：0</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220325202117864.png" alt="image-20220325202117864" style="zoom: 50%;"><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findMin</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">int</span> right =  n - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//直接 之改成&lt;=也能过</span></span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &lt; nums[right])</span><br><span class="line">                right = mid;</span><br><span class="line">            <span class="comment">//看上图的第三种情况</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] == nums[right])  </span><br><span class="line">                right--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> nums[left];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="33-搜索旋转排序数组"><a href="#33-搜索旋转排序数组" class="headerlink" title="33. 搜索旋转排序数组"></a><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">33. 搜索旋转排序数组</a></h3><p>难度中等1937英文版讨论区</p><p>整数数组 <code>nums</code> 按升序排列，数组中的值 <strong>互不相同</strong> 。</p><p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong>，使数组变为 <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,5,6,7]</code> 在下标 <code>3</code> 处经旋转后可能变为 <code>[4,5,6,7,0,1,2]</code> 。</p><p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回它的下标，否则返回 <code>-1</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2], target = 0</span><br><span class="line">输出：4</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2], target = 3</span><br><span class="line">输出：-1</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = (<span class="keyword">int</span>)nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">            <span class="keyword">int</span> mid = (right-left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target) <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="comment">//判断左边一半是否有序</span></span><br><span class="line">            <span class="keyword">if</span> (nums[<span class="number">0</span>] &lt;= nums[mid]) {</span><br><span class="line">                <span class="comment">//target落在左半部分有序区域内</span></span><br><span class="line">                <span class="keyword">if</span> (nums[<span class="number">0</span>] &lt;= target &amp;&amp; target &lt; nums[mid]) {</span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="comment">//target落在右半部分无序区域内</span></span><br><span class="line">                    left = mid + <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">else</span> {  <span class="comment">//右半部分是有序</span></span><br><span class="line">                <span class="comment">//target落在右半部分有序区域内</span></span><br><span class="line">                <span class="keyword">if</span> (nums[mid] &lt; target &amp;&amp; target &lt;= nums[n - <span class="number">1</span>]) {</span><br><span class="line">                    left = mid + <span class="number">1</span>;</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="comment">//target落在左半部分无序区域内</span></span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="81-搜索旋转排序数组-II-包含重复元素"><a href="#81-搜索旋转排序数组-II-包含重复元素" class="headerlink" title="81. 搜索旋转排序数组 II 包含重复元素"></a><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">81. 搜索旋转排序数组 II 包含重复元素</a></h3><p>难度中等562</p><p>已知存在一个按非降序排列的整数数组 <code>nums</code> ，数组中的值不必互不相同。</p><p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong> ，使数组变为 <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,4,4,5,6,6,7]</code> 在下标 <code>5</code> 处经旋转后可能变为 <code>[4,5,6,6,7,0,1,2,4,4]</code> 。</p><p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，请你编写一个函数来判断给定的目标值是否存在于数组中。如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回 <code>true</code> ，否则返回 <code>false</code> 。</p><p>你必须尽可能减少整个操作步骤。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,5,6,0,0,1,2], target = 0</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,5,6,0,0,1,2], target = 3</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>对于数组中有重复元素的情况，二分查找时可能会有 nums[left] = nums[mid] = nums[right]，此时无法判断哪个区间有序</p><p>例如nums=[3,1,2,3,3,3,3]，target=2，首次二分时无法判断区间 [0,3][0,3] 和区间 [4,6][4,6] 哪个是有序的。</p><p>对于这种情况，我们只能将当前二分区间的左边界加一，右边界减一，然后在新区间上继续二分查找。</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">            <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//这两个都不是 target 所以++--</span></span><br><span class="line">            <span class="keyword">if</span> (nums[left] == nums[mid] &amp;&amp; nums[mid] == nums[right]) {</span><br><span class="line">                ++left;</span><br><span class="line">                --right;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (nums[left] &lt;= nums[mid]) {</span><br><span class="line">                <span class="keyword">if</span> (nums[left] &lt;= target &amp;&amp; target &lt; nums[mid])</span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    left = mid + <span class="number">1</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">if</span> (nums[mid] &lt; target &amp;&amp; target &lt;= nums[n - <span class="number">1</span>]) </span><br><span class="line">                    left = mid + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="面试题-10-03-搜索旋转数组"><a href="#面试题-10-03-搜索旋转数组" class="headerlink" title="面试题 10.03. 搜索旋转数组"></a><a href="https://leetcode-cn.com/problems/search-rotate-array-lcci/">面试题 10.03. 搜索旋转数组</a></h3><p>难度中等83</p><p>搜索旋转数组。给定一个排序后的数组，包含n个整数，但这个数组已被旋转过很多次了，次数不详。请编写代码找出数组中的某个元素，假设数组元素原先是按升序排列的。若有多个相同元素，返回索引值最小的一个。</p><p><strong>示例1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 5</span><br><span class="line">输出: 8（元素5在该数组中的索引）</span><br></pre></td></tr></tbody></table></figure><p><strong>示例2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 11</span><br><span class="line">输出：-1 （没有找到）</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>和上面的一样</p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; arr, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(arr[<span class="number">0</span>]==target)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> r=arr.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> mid=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r){</span><br><span class="line">            mid=l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="comment">//mid值==target,则继续往左搜寻，找到最小的索引，最小索引一定不为0</span></span><br><span class="line">            <span class="keyword">if</span>(arr[mid]==target){</span><br><span class="line">                <span class="keyword">while</span>(mid&gt;<span class="number">0</span>&amp;&amp;arr[mid<span class="number">-1</span>]==arr[mid])  mid--;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//说明mid~r是递增序列，判读target是否在中间</span></span><br><span class="line">            <span class="keyword">if</span>(arr[mid]&lt;arr[r]){</span><br><span class="line">                <span class="keyword">if</span>(arr[mid]&lt;target&amp;&amp;target&lt;=arr[r]) l=mid+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span>    r=mid<span class="number">-1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//说明 l~mid 是递增序列，判读target是否在中间</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(arr[mid]&gt;arr[r]){</span><br><span class="line">                <span class="keyword">if</span>(arr[l]&lt;=target&amp;&amp;target&lt;arr[mid]) r=mid<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//arr[mid]==arr[r]说明要么r~0~mid都相等，要么mid~r都相等，无论哪种r 都可以舍去</span></span><br><span class="line">            <span class="keyword">else</span>{</span><br><span class="line">                r--;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法</title>
      <link href="/2022/03/15/pai-xu-suan-fa/"/>
      <url>/2022/03/15/pai-xu-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h1><h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><p><a href="https://wiki.jikexueyuan.com/project/easy-learn-algorithm/bucket-sort.html">桶排序</a>是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。为了使桶排序更加高效，我们需要做到这两点：</p><ol><li>在额外空间充足的情况下，尽量增大桶的数量</li><li>使用的映射函数能够将输入的 N 个数据均匀的分配到 K 个桶中</li></ol><p>同时，对于桶中元素的排序，选择何种比较排序算法对于性能的影响至关重要。</p><h3 id="1-什么时候最快"><a href="#1-什么时候最快" class="headerlink" title="1. 什么时候最快"></a>1. 什么时候最快</h3><p>当输入的数据可以均匀的分配到每一个桶中。</p><h3 id="2-什么时候最慢"><a href="#2-什么时候最慢" class="headerlink" title="2. 什么时候最慢"></a>2. 什么时候最慢</h3><p>当输入的数据被分配到了同一个桶中。</p><h3 id="3-示意图"><a href="#3-示意图" class="headerlink" title="3. 示意图"></a>3. 示意图</h3><p>元素分布在桶中：</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/Bucket_sort_1.svg_.png" alt="img"></p><p>然后，元素在每个桶中排序：</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/Bucket_sort_2.svg_.png" alt="img"></p><p>代码：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iterator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUCKET_NUM = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>{</span></span><br><span class="line">        <span class="function"><span class="keyword">explicit</span> <span class="title">ListNode</span><span class="params">(<span class="keyword">int</span> i=<span class="number">0</span>)</span>:mData(i),mNext(NULL){</span>}</span><br><span class="line">        ListNode* mNext;</span><br><span class="line">        <span class="keyword">int</span> mData;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//有序链表插入val</span></span><br><span class="line"><span class="function">ListNode* <span class="title">insert</span><span class="params">(ListNode* head,<span class="keyword">int</span> val)</span></span>{</span><br><span class="line">        ListNode dummyNode;</span><br><span class="line">        ListNode *newNode = <span class="keyword">new</span> <span class="built_in">ListNode</span>(val);</span><br><span class="line">        ListNode *pre,*curr;</span><br><span class="line">        dummyNode.mNext = head;</span><br><span class="line">        pre = &amp;dummyNode;</span><br><span class="line">        curr = head;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">NULL</span>!=curr &amp;&amp; curr-&gt;mData&lt;=val){</span><br><span class="line">                pre = curr;</span><br><span class="line">                curr = curr-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">        newNode-&gt;mNext = curr;  <span class="comment">//插入val</span></span><br><span class="line">        pre-&gt;mNext = newNode;  <span class="comment">//拼接</span></span><br><span class="line">        <span class="keyword">return</span> dummyNode.mNext;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//合并两个有序链表</span></span><br><span class="line"><span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode *head1,ListNode *head2)</span></span>{</span><br><span class="line">        ListNode dummyNode;</span><br><span class="line">        ListNode *dummy = &amp;dummyNode;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">NULL</span>!=head1 &amp;&amp; <span class="literal">NULL</span>!=head2){</span><br><span class="line">                <span class="keyword">if</span>(head1-&gt;mData &lt;= head2-&gt;mData){</span><br><span class="line">                        dummy-&gt;mNext = head1;</span><br><span class="line">                        head1 = head1-&gt;mNext;</span><br><span class="line">                }<span class="keyword">else</span>{</span><br><span class="line">                        dummy-&gt;mNext = head2;</span><br><span class="line">                        head2 = head2-&gt;mNext;</span><br><span class="line">                }</span><br><span class="line">                dummy = dummy-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>!=head1) dummy-&gt;mNext = head1;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>!=head2) dummy-&gt;mNext = head2;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">return</span> dummyNode.mNext;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BucketSort</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> arr[])</span></span>{</span><br><span class="line">        <span class="function">vector&lt;ListNode*&gt; <span class="title">buckets</span><span class="params">(BUCKET_NUM,(ListNode*)(<span class="number">0</span>))</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i){</span><br><span class="line">                <span class="keyword">int</span> index = arr[i]/BUCKET_NUM;</span><br><span class="line">                ListNode *head = buckets.<span class="built_in">at</span>(index);</span><br><span class="line">                buckets.<span class="built_in">at</span>(index) = <span class="built_in">insert</span>(head,arr[i]);</span><br><span class="line">        }</span><br><span class="line">        ListNode *head = buckets.<span class="built_in">at</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;BUCKET_NUM;++i){</span><br><span class="line">                head = <span class="built_in">Merge</span>(head,buckets.<span class="built_in">at</span>(i));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i){</span><br><span class="line">                arr[i] = head-&gt;mData;</span><br><span class="line">                head = head-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p>冒泡排序（Bubble Sort）也是一种简单直观的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢”浮”到数列的顶端。</p><p>作为最简单的排序算法之一，冒泡排序给我的感觉就像 Abandon 在单词书里出现的感觉一样，每次都在第一页第一位，所以最熟悉。冒泡排序还有一种优化算法，就是立一个 flag，当在一趟序列遍历中元素没有发生交换，则证明该序列已经有序。但这种改进对于提升性能来</p><p>说并没有什么太大作用。</p><h3 id="1-算法步骤"><a href="#1-算法步骤" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</p><p>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。</p><p>针对所有的元素重复以上的步骤，除了最后一个。</p><p>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p><h3 id="2-动图演示"><a href="#2-动图演示" class="headerlink" title="2. 动图演示"></a>2. 动图演示</h3><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/bubbleSort.gif" alt="img"></p><p>每次遍历都会把极大值固定在最右侧，所以不需要完整的两个for</p><h3 id="3-什么时候最快"><a href="#3-什么时候最快" class="headerlink" title="3. 什么时候最快"></a>3. 什么时候最快</h3><p>当输入的数据已经是正序时（都已经是正序了，我还要你冒泡排序有何用啊）。</p><h3 id="4-什么时候最慢"><a href="#4-什么时候最慢" class="headerlink" title="4. 什么时候最慢"></a>4. 什么时候最慢</h3><p>当输入的数据是反序时（写一个 for 循环反序输出数据不就行了，干嘛要用你冒泡排序呢，我是闲的吗）。</p><h3 id="5-代码"><a href="#5-代码" class="headerlink" title="5. 代码"></a>5. 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">//整数或浮点数皆可使用,若要使用类(class)或结构体(struct)时必须重载大于(&gt;)运算符</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubble_sort</span><span class="params">(T arr[], <span class="keyword">int</span> len)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">                        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">                                <span class="built_in">swap</span>(arr[j], arr[j + <span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> arr[] = { <span class="number">61</span>, <span class="number">17</span>, <span class="number">29</span>, <span class="number">22</span>, <span class="number">34</span>, <span class="number">60</span>, <span class="number">72</span>, <span class="number">21</span>, <span class="number">50</span>, <span class="number">1</span>, <span class="number">62</span> };</span><br><span class="line">        <span class="keyword">int</span> len = (<span class="keyword">int</span>) <span class="built_in"><span class="keyword">sizeof</span></span>(arr) / <span class="built_in"><span class="keyword">sizeof</span></span>(*arr);</span><br><span class="line">        <span class="built_in">bubble_sort</span>(arr, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                cout &lt;&lt; arr[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">float</span> arrf[] = { <span class="number">17.5</span>, <span class="number">19.1</span>, <span class="number">0.6</span>, <span class="number">1.9</span>, <span class="number">10.5</span>, <span class="number">12.4</span>, <span class="number">3.8</span>, <span class="number">19.7</span>, <span class="number">1.5</span>, <span class="number">25.4</span>, <span class="number">28.6</span>, <span class="number">4.4</span>, <span class="number">23.8</span>, <span class="number">5.4</span> };</span><br><span class="line">        len = (<span class="keyword">float</span>) <span class="built_in"><span class="keyword">sizeof</span></span>(arrf) / <span class="built_in"><span class="keyword">sizeof</span></span>(*arrf);</span><br><span class="line">        <span class="built_in">bubble_sort</span>(arrf, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                cout &lt;&lt; arrf[i] &lt;&lt; <span class="string">' '</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><h3 id="1-算法步骤-1"><a href="#1-算法步骤-1" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><ol><li>从数列中挑出一个元素，称为 “基准”（pivot）;</li><li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</li><li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序；</li></ol><h3 id="2-动图演示-1"><a href="#2-动图演示-1" class="headerlink" title="2. 动图演示"></a>2. <a href="https://www.bilibili.com/video/BV1at411T75o">动图演示</a></h3><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/quickSort.gif" alt="img"></p><h3 id="3-代码-（二叉树的前序遍历）"><a href="#3-代码-（二叉树的前序遍历）" class="headerlink" title="3. 代码 （二叉树的前序遍历）"></a>3. 代码 （二叉树的前序遍历）</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分割函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Paritition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">    <span class="keyword">int</span> pivot = A[low];</span><br><span class="line">    <span class="keyword">while</span>(low&lt;high){</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high &amp;&amp; A[high] &gt;= pivot)</span><br><span class="line">            --high;  <span class="comment">//从右向左查找到第一个小于pivot的坐标</span></span><br><span class="line">        A[low] = A[high];</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high &amp;&amp; A[low] &lt;= pivot)</span><br><span class="line">            ++low;   <span class="comment">//从左向右查找到第一个大于pivot的坐标</span></span><br><span class="line">        A[high] = A[low];</span><br><span class="line">    }</span><br><span class="line">    A[low] = pivot; <span class="comment">//拿走的值返还 放到排序的位置</span></span><br><span class="line">    <span class="keyword">return</span> low;   <span class="comment">//返回的是一个位置</span></span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 洗牌算法，将输入的数组随机打乱 避免极端情况</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span></span>{</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> r = i + <span class="built_in">rand</span>()%(nums.<span class="built_in">size</span>() - i)</span><br><span class="line">        <span class="built_in">swap</span>(nums[i], nums[r]);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//快排母函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(low&lt;high){</span><br><span class="line">        <span class="keyword">int</span> pivot = <span class="built_in">Paritition</span>(A, low, high);</span><br><span class="line">        <span class="built_in">quickSort</span>(A, low, pivot<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">quickSort</span>(A, pivot+<span class="number">1</span>, high);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="215-数组中的第K个最大元素"><a href="#215-数组中的第K个最大元素" class="headerlink" title="215. 数组中的第K个最大元素"></a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第K个最大元素</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=215&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/#">思路</a></p><p>难度中等1553</p><p>给定整数数组 <code>nums</code> 和整数 <code>k</code>，请返回数组中第 <code>**k**</code> 个最大的元素。</p><p>请注意，你需要找的是数组排序后的第 <code>k</code> 个最大的元素，而不是第 <code>k</code> 个不同的元素。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,2,1,5,6,4] 和 k = 2</span><br><span class="line">输出: 5</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,2,3,1,2,4,5,5,6] 和 k = 4</span><br><span class="line">输出: 4</span><br></pre></td></tr></tbody></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= k &lt;= nums.length &lt;= 104</code></li><li><code>-104 &lt;= nums[i] &lt;= 104</code></li></ul><p>思路： </p><ol><li>快速排序  洗牌算法打乱原数组</li><li>明确排序区间 分治 以及 及时返回</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//快速排序</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//分割函数</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Paritition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> pivot = A[low];</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high){</span><br><span class="line">            <span class="keyword">while</span>(low&lt;high &amp;&amp; A[high] &gt;= pivot)</span><br><span class="line">                --high;</span><br><span class="line">            A[low] = A[high];</span><br><span class="line">            <span class="keyword">while</span>(low&lt;high &amp;&amp; A[low] &lt;= pivot)</span><br><span class="line">                ++low;</span><br><span class="line">            A[high] = A[low];</span><br><span class="line">        }</span><br><span class="line">        A[low] = pivot;  <span class="comment">//拿走的值返还 放到排序的位置</span></span><br><span class="line">        <span class="keyword">return</span> low;  <span class="comment">//返回的是一个位置</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(low&lt;high){</span><br><span class="line">            <span class="keyword">int</span> pivot = <span class="built_in">Paritition</span>(A, low, high);</span><br><span class="line">            <span class="comment">//注意 每一次快排都会确定一个位置，位置满足时，直接返回</span></span><br><span class="line">            <span class="keyword">if</span>(pivot == A.<span class="built_in">size</span>()-k) </span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//优化排序区间 有点类似于二分查找了</span></span><br><span class="line">            <span class="keyword">if</span>(pivot&gt;= A.<span class="built_in">size</span>() - k)</span><br><span class="line">                <span class="built_in">quickSort</span>(A, low, pivot<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">quickSort</span>(A, pivot+<span class="number">1</span>, high);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k;</span><br><span class="line">        <span class="built_in">shuffle</span>(nums);</span><br><span class="line">        <span class="built_in">quickSort</span>(nums, <span class="number">0</span>, nums.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span> nums[nums.<span class="built_in">size</span>()-k];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 洗牌算法，将输入的数组随机打乱 避免极端情况</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span></span>{</span><br><span class="line">        <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">int</span> r = i + <span class="built_in">rand</span>()%(nums.<span class="built_in">size</span>() - i);</span><br><span class="line">            <span class="built_in">swap</span>(nums[i], nums[r]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p>归并排序（Merge sort）是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。</p><p>作为一种典型的分而治之思想的算法应用，归并排序的实现由两种方法：</p><ul><li>自上而下的递归（所有递归的方法都可以用迭代重写，所以就有了第 2 种方法）；</li><li>自下而上的迭代；</li></ul><p>在《数据结构与算法 JavaScript 描述》中，作者给出了自下而上的迭代方法。但是对于递归法，作者却认为：</p><blockquote><p>However, it is not possible to do so in JavaScript, as the recursion goes too deep for the language to handle.</p><p>然而，在 JavaScript 中这种方式不太可行，因为这个算法的递归深度对它来讲太深了。</p></blockquote><p>说实话，我不太理解这句话。意思是 JavaScript 编译器内存太小，递归太深容易造成内存溢出吗？还望有大神能够指教。</p><p>和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是 O(nlogn) 的时间复杂度。代价是需要额外的内存空间。</p><h3 id="1-算法步骤-2"><a href="#1-算法步骤-2" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><ol><li>申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列；</li><li>设定两个指针，最初位置分别为两个已经排序序列的起始位置；</li><li>比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置；</li><li>重复步骤 3 直到某一指针达到序列尾；</li><li>将另一序列剩下的所有元素直接复制到合并序列尾。</li></ol><h3 id="2-动图演示-2"><a href="#2-动图演示-2" class="headerlink" title="2. 动图演示"></a>2. 动图演示</h3><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/mergeSort.gif" alt="img"></p><h3 id="3-代码-（二叉树的后序遍历）"><a href="#3-代码-（二叉树的后序遍历）" class="headerlink" title="3. 代码 （二叉树的后序遍历）"></a>3. 代码 （二叉树的后序遍历）</h3><p>迭代：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">// 整數或浮點數皆可使用,若要使用物件(class)時必須設定"小於"(&lt;)的運算子功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(T arr[], <span class="keyword">int</span> len)</span> </span>{</span><br><span class="line">    T *a = arr;</span><br><span class="line">    T *b = <span class="keyword">new</span> T[len];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> seg = <span class="number">1</span>; seg &lt; len; seg += seg) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>; start &lt; len; start += seg + seg) {</span><br><span class="line">            <span class="keyword">int</span> low = start, mid = <span class="built_in">min</span>(start + seg, len), high = <span class="built_in">min</span>(start + seg + seg, len);</span><br><span class="line">            <span class="keyword">int</span> k = low;</span><br><span class="line">            <span class="keyword">int</span> start1 = low, end1 = mid;</span><br><span class="line">            <span class="keyword">int</span> start2 = mid, end2 = high;</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1 &amp;&amp; start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start1] &lt; a[start2] ? a[start1++] : a[start2++];</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1)</span><br><span class="line">                b[k++] = a[start1++];</span><br><span class="line">            <span class="keyword">while</span> (start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start2++];</span><br><span class="line">        }</span><br><span class="line">        T *temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (a != arr) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            b[i] = a[i];</span><br><span class="line">        b = a;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">delete</span>[] b;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>递归：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, l, mid);</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, mid + <span class="number">1</span>, r);</span><br><span class="line">        <span class="keyword">int</span> i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r) {</span><br><span class="line">            <span class="keyword">if</span> (nums[i] &lt;= nums[j]) {</span><br><span class="line">                tmp[cnt++] = nums[i++];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line">                tmp[cnt++] = nums[j++];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) {</span><br><span class="line">            tmp[cnt++] = nums[i++];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= r) {</span><br><span class="line">            tmp[cnt++] = nums[j++];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; r - l + <span class="number">1</span>; ++i) {</span><br><span class="line">            nums[i + l] = tmp[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">sortArray</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        tmp.<span class="built_in">resize</span>((<span class="keyword">int</span>)nums.<span class="built_in">size</span>(), <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, <span class="number">0</span>, (<span class="keyword">int</span>)nums.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> nums;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前缀和/差分/字典树</title>
      <link href="/2022/03/15/xiao-suan-fa/"/>
      <url>/2022/03/15/xiao-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="前缀和数组"><a href="#前缀和数组" class="headerlink" title="前缀和数组"></a>前缀和数组</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrefixSum</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// 前缀和数组</span></span><br><span class="line">  vector&lt;<span class="keyword">int</span>&gt; prefix;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/* 输入一个数组，构造前缀和 */</span></span><br><span class="line">  <span class="built_in">PrefixSum</span>(vector&lt;<span class="keyword">int</span>&gt; nums) {</span><br><span class="line">    <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    prefix.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 计算 nums 的累加和</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">      prefix[i] = prefix[i - <span class="number">1</span>] + nums[i - <span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 查询闭区间 [i, j] 的累加和 */</span></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> prefix[j + <span class="number">1</span>] - prefix[i];</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="一维数组中的前缀和"><a href="#一维数组中的前缀和" class="headerlink" title="一维数组中的前缀和"></a>一维数组中的前缀和</h2><h3 id="303-区域和检索-数组不可变"><a href="#303-区域和检索-数组不可变" class="headerlink" title="303. 区域和检索 - 数组不可变"></a><a href="https://leetcode-cn.com/problems/range-sum-query-immutable/">303. 区域和检索 - 数组不可变</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=303&amp;target=gitee&amp;_=1646830143357">labuladong 题解</a><a href="https://leetcode-cn.com/problems/range-sum-query-immutable/#">思路</a></p><p>给定一个整数数组  <code>nums</code>，处理以下类型的多个查询:</p><ol><li>计算索引 <code>left</code> 和 <code>right</code> （包含 <code>left</code> 和 <code>right</code>）之间的 <code>nums</code> 元素的 <strong>和</strong> ，其中 <code>left &lt;= right</code></li></ol><p>实现 <code>NumArray</code> 类：</p><ul><li><code>NumArray(int[] nums)</code> 使用数组 <code>nums</code> 初始化对象</li><li><code>int sumRange(int i, int j)</code> 返回数组 <code>nums</code> 中索引 <code>left</code> 和 <code>right</code> 之间的元素的 <strong>总和</strong> ，包含 <code>left</code> 和 <code>right</code> 两点（也就是 <code>nums[left] + nums[left + 1] + ... + nums[right]</code> )</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["NumArray", "sumRange", "sumRange", "sumRange"]</span><br><span class="line">[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]</span><br><span class="line">输出：</span><br><span class="line">[null, 1, -1, -3]</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">NumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);</span><br><span class="line">numArray.sumRange(0, 2); // return 1 ((-2) + 0 + 3)</span><br><span class="line">numArray.sumRange(2, 5); // return -1 (3 + (-5) + 2 + (-1)) </span><br><span class="line">numArray.sumRange(0, 5); // return -3 ((-2) + 0 + 3 + (-5) + 2 + (-1))</span><br></pre></td></tr></tbody></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; preSum;</span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      preSum.<span class="built_in">resize</span>(nums.<span class="built_in">size</span>());</span><br><span class="line">      <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        sum+=nums[i];</span><br><span class="line">        preSum[i] = sum;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> left == <span class="number">0</span>?preSum[right]:(preSum[right] - preSum[left<span class="number">-1</span>]);</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单写法, 避免边界判断</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; preSum;</span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">      preSum.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n+<span class="number">1</span>; i++){</span><br><span class="line">        preSum[i] = preSum[i<span class="number">-1</span>] + nums[i<span class="number">-1</span>];</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> preSum[right+<span class="number">1</span>] - preSum[left];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="二维数组中的前缀和"><a href="#二维数组中的前缀和" class="headerlink" title="二维数组中的前缀和"></a>二维数组中的前缀和</h2><h3 id="304-二维区域和检索-矩阵不可变"><a href="#304-二维区域和检索-矩阵不可变" class="headerlink" title="304. 二维区域和检索 - 矩阵不可变"></a><a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/">304. 二维区域和检索 - 矩阵不可变</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=304&amp;target=gitee&amp;_=1646830216742">labuladong 题解</a><a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/#">思路</a></p><p>给定一个二维矩阵 <code>matrix</code>，以下类型的多个请求：</p><ul><li>计算其子矩形范围内元素的总和，该子矩阵的 <strong>左上角</strong> 为 <code>(row1, col1)</code> ，<strong>右下角</strong> 为 <code>(row2, col2)</code> 。</li></ul><p>实现 <code>NumMatrix</code> 类：</p><ul><li><code>NumMatrix(int[][] matrix)</code> 给定整数矩阵 <code>matrix</code> 进行初始化</li><li><code>int sumRegion(int row1, int col1, int row2, int col2)</code> 返回 <strong>左上角</strong> <code>(row1, col1)</code> 、<strong>右下角</strong> <code>(row2, col2)</code> 所描述的子矩阵的元素 <strong>总和</strong> 。</li></ul><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/1626332422-wUpUHT-image.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入: </span><br><span class="line">["NumMatrix","sumRegion","sumRegion","sumRegion"]</span><br><span class="line">[[[[3,0,1,4,2],[5,6,3,2,1],[1,2,0,1,5],[4,1,0,1,7],[1,0,3,0,5]]],[2,1,4,3],[1,1,2,2],[1,2,2,4]]</span><br><span class="line">输出: </span><br><span class="line">[null, 8, 11, 12]</span><br><span class="line"></span><br><span class="line">解释:</span><br><span class="line">NumMatrix numMatrix = new NumMatrix([[3,0,1,4,2],[5,6,3,2,1],[1,2,0,1,5],[4,1,0,1,7],[1,0,3,0,5]]);</span><br><span class="line">numMatrix.sumRegion(2, 1, 4, 3); // return 8 (红色矩形框的元素总和)</span><br><span class="line">numMatrix.sumRegion(1, 1, 2, 2); // return 11 (绿色矩形框的元素总和)</span><br><span class="line">numMatrix.sumRegion(1, 2, 2, 4); // return 12 (蓝色矩形框的元素总和)</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//笨比前缀和</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumMatrix</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; preSum;</span><br><span class="line">    <span class="built_in">NumMatrix</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix) {</span><br><span class="line">      <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">int</span> n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;n+<span class="number">1</span>; j++){</span><br><span class="line">          temp[j] = temp[j<span class="number">-1</span>] + matrix[i][j<span class="number">-1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        preSum.<span class="built_in">push_back</span>(temp);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRegion</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> col1, <span class="keyword">int</span> row2, <span class="keyword">int</span> col2)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> minRow = <span class="built_in">min</span>(row1, row2);</span><br><span class="line">      <span class="keyword">int</span> maxRow = <span class="built_in">max</span>(row1, row2);</span><br><span class="line">      <span class="keyword">int</span> minCol = <span class="built_in">min</span>(col1, col2);</span><br><span class="line">      <span class="keyword">int</span> maxCol = <span class="built_in">max</span>(col1, col2);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = minRow; i&lt;= maxRow; i++){</span><br><span class="line">        ans += preSum[i][maxCol+<span class="number">1</span>] - preSum[i][minCol];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//真正的二维前缀和数组</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumMatrix</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 定义：preSum[i][j] 记录 matrix 中子矩阵 [0, 0, i-1, j-1] 的元素和</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; preSum;</span><br><span class="line">    <span class="built_in">NumMatrix</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix) {</span><br><span class="line">      <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">int</span> n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">      <span class="comment">// 构造前缀和矩阵</span></span><br><span class="line">      preSum.<span class="built_in">resize</span>(m+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(n+<span class="number">1</span>));</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=m; i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;=n; j++){</span><br><span class="line">          <span class="comment">// 计算每个矩阵 [0, 0, i, j] 的元素和</span></span><br><span class="line">          preSum[i][j] = preSum[i<span class="number">-1</span>][j] + preSum[i][j<span class="number">-1</span>] - preSum[i<span class="number">-1</span>][j<span class="number">-1</span>] + matrix[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//速记 前缀和做减法的时候 永远是大的那边需要+1</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRegion</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> col1, <span class="keyword">int</span> row2, <span class="keyword">int</span> col2)</span> </span>{</span><br><span class="line">      <span class="comment">// 计算子矩阵 [x1, y1, x2, y2] 的元素和</span></span><br><span class="line">      <span class="keyword">return</span> preSum[row2 + <span class="number">1</span>][col2 + <span class="number">1</span>] - preSum[row1][col2+<span class="number">1</span>] -preSum[row2+<span class="number">1</span>][col1]  + preSum[row1][col1];</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="和为-k-的子数组"><a href="#和为-k-的子数组" class="headerlink" title="和为 k 的子数组"></a>和为 k 的子数组</h2><h3 id="560-和为-K-的子数组"><a href="#560-和为-K-的子数组" class="headerlink" title="560. 和为 K 的子数组"></a><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/">560. 和为 K 的子数组</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=560&amp;target=gitee&amp;_=1646835188259">labuladong 题解</a><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/#">思路</a></p><p>给你一个整数数组 <code>nums</code> 和一个整数 <code>k</code> ，请你统计并返回该数组中和为 <code>k</code> 的连续子数组的个数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,1], k = 2</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3], k = 3</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>重点在于哈希的初始化 </p><blockquote><p><u>比如说 从0到某个索引i的前缀和 就是k 也就是从头开始到i的连续子数组和presum[i]就是k，这个时候presum - k 就等于0了，提前把0放一个val = 1就可以统计这个情况了</u></p><p><u>当出现前缀和等于k的时候会把这段算到答案里，不然hashmap[0]默认为0，就会少一个解</u></p><blockquote><p><code>比如1 2 1 target = 2 就不会少</code></p><p><code>而1 1 1 target = 2 会少一个 情况为前两个1</code></p></blockquote></blockquote><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//笨比的前缀和用法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">preSum</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">        preSum[i] = preSum[i<span class="number">-1</span>] + nums[i<span class="number">-1</span>];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;=n; i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j&lt;=n; j++){</span><br><span class="line">          <span class="keyword">if</span>(preSum[j] - preSum[i] == k){</span><br><span class="line">            ans++;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>; start &lt; nums.<span class="built_in">size</span>(); ++start) {</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> end = start; end &gt;= <span class="number">0</span>; --end) {</span><br><span class="line">                sum += nums[end];</span><br><span class="line">                <span class="keyword">if</span> (sum == k) {</span><br><span class="line">                    count++;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//前缀和的最优解</span></span><br><span class="line"><span class="comment">//  3 5 2  -2 4  1    k = 5</span></span><br><span class="line"><span class="comment">//0 3 8 10 8 12 13  -5的个数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        mapp[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">//初始化</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); ++i) {</span><br><span class="line">          sum+=nums[i];</span><br><span class="line">          <span class="keyword">int</span> cc = mapp[sum-k];</span><br><span class="line">          count+=cc;</span><br><span class="line">          mapp[sum]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-011-0-和-1-个数相同的子数组"><a href="#剑指-Offer-II-011-0-和-1-个数相同的子数组" class="headerlink" title="剑指 Offer II 011. 0 和 1 个数相同的子数组"></a><a href="https://leetcode-cn.com/problems/A1NYOS/">剑指 Offer II 011. 0 和 1 个数相同的子数组</a></h3><p>难度中等54</p><p>给定一个二进制数组 <code>nums</code> , 找到含有相同数量的 <code>0</code> 和 <code>1</code> 的最长连续子数组，并返回该子数组的长度。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [0,1]</span><br><span class="line">输出: 2</span><br><span class="line">说明: [0, 1] 是具有相同数量 0 和 1 的最长连续子数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [0,1,0]</span><br><span class="line">输出: 2</span><br><span class="line">说明: [0, 1] (或 [1, 0]) 是具有相同数量 0 和 1 的最长连续子数组。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>将数组中的0换成-1， 求和为0的最长子数组 转换成前缀和问题</li><li>注意！处理0位置</li></ol><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findMaxLength</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    <span class="comment">//将数组中的0换成-1， 求和为0的最长子数组 转换成前缀和问题</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span>&amp; num : nums) <span class="comment">//这样写一定要&amp;</span></span><br><span class="line">            <span class="keyword">if</span>(num == <span class="number">0</span>) num = <span class="number">-1</span>;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        mapp[<span class="number">0</span>] = <span class="number">-1</span>; <span class="comment">//注意！处理0位置</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            sum += nums[i];</span><br><span class="line">            <span class="keyword">if</span>(mapp.<span class="built_in">count</span>(sum)) <span class="comment">//之前也有前缀和 == sum</span></span><br><span class="line">                ans = <span class="built_in">max</span>(ans, i - mapp[sum]);</span><br><span class="line">            <span class="keyword">else</span> mapp[sum] = i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h1 id="差分数组"><a href="#差分数组" class="headerlink" title="差分数组"></a>差分数组</h1><p><strong>差分数组的主要适用场景是频繁对原始数组的某个区间的元素进行增减</strong>。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 差分数组工具类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Difference</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// 差分数组</span></span><br><span class="line">  vector&lt;<span class="keyword">int</span>&gt; diff;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/* 输入一个初始数组，区间操作将在这个数组上进行 */</span></span><br><span class="line">  <span class="built_in">Difference</span>(vector&lt;<span class="keyword">int</span>&gt; nums) {</span><br><span class="line">   <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    diff.<span class="built_in">resize</span>(n);;</span><br><span class="line">    <span class="comment">// 根据初始数组构造差分数组</span></span><br><span class="line">    diff[<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">      diff[i] = nums[i] - nums[i - <span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 给闭区间 [i,j] 增加 val（可以是负数）*/</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">increment</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">    diff[i] += val;</span><br><span class="line">    <span class="keyword">if</span> (j + <span class="number">1</span> &lt; diff.length) {</span><br><span class="line">      diff[j + <span class="number">1</span>] -= val;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 返回结果数组 */</span></span><br><span class="line">  <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">result</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(diff.size())</span></span>;</span><br><span class="line">    <span class="comment">// 根据差分数组构造结果数组</span></span><br><span class="line">    res[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; diff.length; i++) </span><br><span class="line">      res[i] = res[i - <span class="number">1</span>] + diff[i]</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="370-区间加法"><a href="#370-区间加法" class="headerlink" title="370. 区间加法"></a>370. 区间加法</h3><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/title1.png" alt="img" style="zoom:50%;"><p>可以直接用刚才的套路解决</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getModifiedArray</span><span class="params">(<span class="keyword">int</span> length, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; updates)</span> </span>{</span><br><span class="line">    <span class="comment">// nums 初始化为全 0</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nums</span><span class="params">(length)</span></span>;</span><br><span class="line">    <span class="comment">// 构造差分解法</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(length)</span></span>;</span><br><span class="line">  <span class="comment">//因为初始全为0 所以不需要如下初始化</span></span><br><span class="line">  <span class="comment">//diff[0] = nums[0];</span></span><br><span class="line">  <span class="comment">//for(int i = 1; i&lt;length; i++){</span></span><br><span class="line">    <span class="comment">//  diff[i] = nums[i] - nums[i-1];</span></span><br><span class="line">    <span class="comment">//}</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> update : updates) {</span><br><span class="line">        <span class="keyword">int</span> i = update[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> j = update[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> val = update[<span class="number">2</span>];</span><br><span class="line">        diff[i]+=val;</span><br><span class="line">      <span class="keyword">if</span>(j+<span class="number">1</span>&lt;length)</span><br><span class="line">          diff[j+<span class="number">1</span>]-=val;</span><br><span class="line">    }</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;length; i++){</span><br><span class="line">ans[i] = ans[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> df.<span class="built_in">result</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="1109-航班预订统计"><a href="#1109-航班预订统计" class="headerlink" title="1109. 航班预订统计"></a><a href="https://leetcode-cn.com/problems/corporate-flight-bookings/">1109. 航班预订统计</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=1109&amp;target=gitee&amp;_=1646842649748">labuladong 题解</a><a href="https://leetcode-cn.com/problems/corporate-flight-bookings/#">思路</a></p><p>这里有 <code>n</code> 个航班，它们分别从 <code>1</code> 到 <code>n</code> 进行编号。</p><p>有一份航班预订表 <code>bookings</code> ，表中第 <code>i</code> 条预订记录 <code>bookings[i] = [firsti, lasti, seatsi]</code> 意味着在从 <code>firsti</code> 到 <code>lasti</code> （<strong>包含</strong> <code>firsti</code> 和 <code>lasti</code> ）的 <strong>每个航班</strong> 上预订了 <code>seatsi</code> 个座位。</p><p>请你返回一个长度为 <code>n</code> 的数组 <code>answer</code>，里面的元素是每个航班预定的座位总数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入：bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5</span><br><span class="line">输出：[10,55,45,25,25]</span><br><span class="line">解释：</span><br><span class="line">航班编号        1   2   3   4   5</span><br><span class="line">预订记录 1 ：   10  10</span><br><span class="line">预订记录 2 ：       20  20</span><br><span class="line">预订记录 3 ：       25  25  25  25</span><br><span class="line">总座位数：      10  55  45  25  25</span><br><span class="line">因此，answer = [10,55,45,25,25]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">corpFlightBookings</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; bookings, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">origin</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="comment">//diff不需要初始化了；</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;bookings.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> left = bookings[i][<span class="number">0</span>]<span class="number">-1</span>; <span class="comment">//nmd坑老子</span></span><br><span class="line">        <span class="keyword">int</span> right = bookings[i][<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> val = bookings[i][<span class="number">2</span>];</span><br><span class="line">        <span class="comment">//操作</span></span><br><span class="line">        diff[left] += val;</span><br><span class="line">        <span class="keyword">if</span>(right + <span class="number">1</span> &lt;n){</span><br><span class="line">          diff[right+<span class="number">1</span>]-=val;</span><br><span class="line">        } </span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// for(int i = 0; i&lt;n; i++)</span></span><br><span class="line">      <span class="comment">//   cout&lt;&lt;diff[i]&lt;&lt;endl;</span></span><br><span class="line">      ans[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n; i++){</span><br><span class="line">        ans[i] = ans[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="1094-拼车"><a href="#1094-拼车" class="headerlink" title="1094. 拼车"></a><a href="https://leetcode-cn.com/problems/car-pooling/">1094. 拼车</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=1094&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/car-pooling/#">思路</a></p><p>假设你是一位顺风车司机，车上最初有 <code>capacity</code> 个空座位可以用来载客。由于道路的限制，车 <strong>只能</strong> 向一个方向行驶（也就是说，<strong>不允许掉头或改变方向</strong>，你可以将其想象为一个向量）。</p><p>这儿有一份乘客行程计划表 <code>trips[][]</code>，其中 <code>trips[i] = [num_passengers, start_location, end_location]</code> 包含了第 <code>i</code> 组乘客的行程信息：</p><ul><li>必须接送的乘客数量；</li><li>乘客的上车地点；</li><li>以及乘客的下车地点。</li></ul><p>这些给出的地点位置是从你的 <strong>初始</strong> 出发位置向前行驶到这些地点所需的距离（它们一定在你的行驶方向上）。</p><p>请你根据给出的行程计划表和车子的座位数，来判断你的车是否可以顺利完成接送所有乘客的任务（当且仅当你可以在所有给定的行程中接送所有乘客时，返回 <code>true</code>，否则请返回 <code>false</code>）。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：trips = [[2,1,5],[3,3,7]], capacity = 4</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：trips = [[2,1,5],[3,3,7]], capacity = 5</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">carPooling</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; trips, <span class="keyword">int</span> capacity)</span> </span>{</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(<span class="number">1001</span>)</span></span>;</span><br><span class="line">      <span class="comment">//diff不用初始化</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;trips.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> left = trips[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> right = trips[i][<span class="number">2</span>] - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> val = trips[i][<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//jiajiajia</span></span><br><span class="line">        diff[left]+=val;</span><br><span class="line">        <span class="keyword">if</span>(right + <span class="number">1</span>&lt;<span class="number">1001</span>)</span><br><span class="line">          diff[right+<span class="number">1</span>] -= val;</span><br><span class="line">      }</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">1001</span>)</span></span>;</span><br><span class="line">      res[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">if</span>(res[<span class="number">0</span>]&gt;capacity) <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//不要忘记</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;<span class="number">1001</span>; i++){</span><br><span class="line">        res[i] = res[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">        <span class="keyword">if</span>(res[i]&gt;capacity)</span><br><span class="line">          <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h1 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h1><h3 id="440-字典序的第K小数字"><a href="#440-字典序的第K小数字" class="headerlink" title="440. 字典序的第K小数字"></a><a href="https://leetcode-cn.com/problems/k-th-smallest-in-lexicographical-order/">440. 字典序的第K小数字</a></h3><p>难度困难450</p><p>给定整数 <code>n</code> 和 <code>k</code>，返回 <code>[1, n]</code> 中字典序第 <code>k</code> 小的数字。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 13, k = 2</span><br><span class="line">输出: 10</span><br><span class="line">解释: 字典序的排列是 [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9]，所以第二小的数字是 10。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 1, k = 1</span><br><span class="line">输出: 1</span><br></pre></td></tr></tbody></table></figure><p><strong>提示:</strong></p><ul><li><code>1 &lt;= k &lt;= n &lt;= 10e9</code></li></ul><p>思路：</p><ol><li><p>主要到此题数据量较大 不然可以直接使用sort   (对string)</p></li><li><p>字典树 统计节点个数 判断向下还是向右</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/v2-4af05d4805b7384eee3e7ab496940f75_r.jpg" alt="img" style="zoom:50%;"><ul><li>首先我们初始化 cur = 1</li><li>然后我们让 left = cur，right = cur + 1，此时 right-left 就是第一棵树第一层的节点个数</li><li>接下来 left *= 10, right *= 10，这样就进入到了第二层，此时 right-left 就是第二层的节点个数，以此类推直到 left &gt; n</li><li>但如果我们是统计 109 以内的字典序，进入第三层时，right 不能指向 200 而只能指向 109 (此时<code>right</code>也就是题目给定的范围个<code>n</code>)，<strong>此时 right-left+1 才是当前层的节点个数</strong></li></ul><p>假设我们统计完第一棵树的节点数为 node_num</p><ul><li>如果 K &gt;= node_num，我们需要继续向后查找，在后面的树中查找第 K-node_num 小的数字，也即更新 cur += 1</li><li>如果 K &lt; node_num，说明第 K 小的数字在子树中，我们需要进入子树继续向下查找，也即更新 cur *= 10</li></ul></li></ol><p>代码</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findKthNumber</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> curr = <span class="number">1</span>;</span><br><span class="line">        k--;</span><br><span class="line">        <span class="keyword">while</span>(k&gt;<span class="number">0</span>){</span><br><span class="line">            <span class="comment">//这里的left和right很巧妙的统计了下层节点的个数</span></span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> left = curr;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> right = curr + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> node_num = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 统计树中每一层的节点个数</span></span><br><span class="line">            <span class="keyword">while</span>(left&lt;=n){</span><br><span class="line">                node_num += <span class="built_in">min</span>(right, (<span class="keyword">long</span> <span class="keyword">long</span>)(n+<span class="number">1</span>)) - left;</span><br><span class="line">                left*=<span class="number">10</span>;</span><br><span class="line">                right*=<span class="number">10</span>; </span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(node_num&lt;=k){<span class="comment">// 向右查找</span></span><br><span class="line">                curr++;</span><br><span class="line">                k-=node_num;</span><br><span class="line">            }<span class="keyword">else</span>{ <span class="comment">// 进入子树查找</span></span><br><span class="line">                curr*=<span class="number">10</span>;</span><br><span class="line">                k--;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> curr;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图论</title>
      <link href="/2022/03/15/tu-lun/"/>
      <url>/2022/03/15/tu-lun/</url>
      
        <content type="html"><![CDATA[<h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><h3 id="797-所有可能的路径"><a href="#797-所有可能的路径" class="headerlink" title="797. 所有可能的路径"></a><a href="https://leetcode-cn.com/problems/all-paths-from-source-to-target/">797. 所有可能的路径</a></h3><p>难度中等262收藏分享切换为英文接收动态反馈</p><p>给你一个有 <code>n</code> 个节点的 <strong>有向无环图（DAG）</strong>，请你找出所有从节点 <code>0</code> 到节点 <code>n-1</code> 的路径并输出（<strong>不要求按特定顺序</strong>）</p><p> <code>graph[i]</code> 是一个从节点 <code>i</code> 可以访问的所有节点的列表（即从节点 <code>i</code> 到节点 <code>graph[i][j]</code>存在一条有向边）。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/all_1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,2],[3],[3],[]]</span><br><span class="line">输出：[[0,1,3],[0,2,3]]</span><br><span class="line">解释：有两条路径 0 -&gt; 1 -&gt; 3 和 0 -&gt; 2 -&gt; 3</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/all_2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[4,3,1],[3,2,4],[3],[4],[]]</span><br><span class="line">输出：[[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>类似多叉树的遍历</li><li>for内for外两种写法</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="两种写法"><a href="#两种写法" class="headerlink" title="两种写法"></a>两种写法</h5><ol><li>==push pop在for外 但是最后需要pop==</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">allPathsSourceTarget</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph) {</span><br><span class="line">        <span class="built_in">traverse</span>(graph, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        path.<span class="built_in">push_back</span>(s);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(s == graph.<span class="built_in">size</span>()<span class="number">-1</span>){</span><br><span class="line">            res.<span class="built_in">push_back</span>(path);</span><br><span class="line">            path.<span class="built_in">pop_back</span>(); <span class="comment">//！</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v : graph[s]){</span><br><span class="line">            <span class="built_in">traverse</span>(graph, v);</span><br><span class="line">        }</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><u>==push pop在for内 但是第一个元素需要先压入==</u></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">allPathsSourceTarget</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph) {</span><br><span class="line">        path.<span class="built_in">push_back</span>(<span class="number">0</span>);  <span class="comment">//!</span></span><br><span class="line">        <span class="built_in">traverse</span>(graph, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(s == graph.<span class="built_in">size</span>()<span class="number">-1</span>){</span><br><span class="line">            res.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v : graph[s]){</span><br><span class="line">            path.<span class="built_in">push_back</span>(v);</span><br><span class="line">            <span class="built_in">traverse</span>(graph, v);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a><a href="https://labuladong.gitee.io/algo/2/20/38/">拓扑排序</a></h2><h3 id="207-课程表"><a href="#207-课程表" class="headerlink" title="207. 课程表"></a><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=207&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/course-schedule/#">思路</a></p><p>你这个学期必须选修 <code>numCourses</code> 门课程，记为 <code>0</code> 到 <code>numCourses - 1</code> 。</p><p>在选修某些课程之前需要一些先修课程。 先修课程按数组 <code>prerequisites</code> 给出，其中 <code>prerequisites[i] = [ai, bi]</code> ，表示如果要学习课程 <code>ai</code> 则 <strong>必须</strong> 先学习课程 <code>bi</code> 。</p><ul><li>例如，先修课程对 <code>[0, 1]</code> 表示：想要学习课程 <code>0</code> ，你需要先完成课程 <code>1</code> 。</li></ul><p>请你判断是否可能完成所有课程的学习？如果可以，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0]]</span><br><span class="line">输出：true</span><br><span class="line">解释：总共有 2 门课程。学习课程 1 之前，你需要完成课程 0 。这是可能的。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0],[0,1]]</span><br><span class="line">输出：false</span><br><span class="line">解释：总共有 2 门课程。学习课程 1 之前，你需要先完成课程 0 ；并且学习课程 0 之前，你还应先完成课程 1 。这是不可能的。</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;  <span class="comment">//记录的是遍历过的 用于终止遍历 提高效率 不加会超时 用 visited 数组防止走回头路</span></span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; onPath;   <span class="comment">//记录每次遍历过的节点，用于查环</span></span><br><span class="line">    <span class="keyword">bool</span> hasCycle;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canFinish</span><span class="params">(<span class="keyword">int</span> numCourses, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; prerequisites)</span> </span>{</span><br><span class="line">        <span class="comment">//建图</span></span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">graph</span>(numCourses);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> edge: prerequisites){</span><br><span class="line">            <span class="keyword">int</span> from = edge[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> to = edge[<span class="number">0</span>];</span><br><span class="line">            graph[from].<span class="built_in">push_back</span>(to);</span><br><span class="line">        }</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        onPath = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        hasCycle = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numCourses; i++){</span><br><span class="line">            <span class="comment">//遍历所有节点</span></span><br><span class="line">            <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> !hasCycle;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(onPath[s]) <span class="comment">//出现环</span></span><br><span class="line">            hasCycle = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(visited[s] || hasCycle)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//前序代码位置</span></span><br><span class="line">        visited[s] = <span class="number">1</span>;</span><br><span class="line">        onPath[s] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t : graph[s])</span><br><span class="line">            <span class="built_in">traverse</span>(graph, t);</span><br><span class="line">        <span class="comment">//后序遍历位置</span></span><br><span class="line">        onPath[s] = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="210-课程表-II"><a href="#210-课程表-II" class="headerlink" title="210. 课程表 II"></a><a href="https://leetcode-cn.com/problems/course-schedule-ii/">210. 课程表 II</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=210&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/course-schedule-ii/#">思路</a></p><p>难度中等582收藏分享切换为英文接收动态反馈</p><p>现在你总共有 <code>numCourses</code> 门课需要选，记为 <code>0</code> 到 <code>numCourses - 1</code>。给你一个数组 <code>prerequisites</code> ，其中 <code>prerequisites[i] = [ai, bi]</code> ，表示在选修课程 <code>ai</code> 前 <strong>必须</strong> 先选修 <code>bi</code> 。</p><ul><li>例如，想要学习课程 <code>0</code> ，你需要先完成课程 <code>1</code> ，我们用一个匹配来表示：<code>[0,1]</code> 。</li></ul><p>返回你为了学完所有课程所安排的学习顺序。可能会有多个正确的顺序，你只要返回 <strong>任意一种</strong> 就可以了。如果不可能完成所有课程，返回 <strong>一个空数组</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0]]</span><br><span class="line">输出：[0,1]</span><br><span class="line">解释：总共有 2 门课程。要学习课程 1，你需要先完成课程 0。因此，正确的课程顺序为 [0,1] 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]</span><br><span class="line">输出：[0,2,1,3]</span><br><span class="line">解释：总共有 4 门课程。要学习课程 3，你应该先完成课程 1 和课程 2。并且课程 1 和课程 2 都应该排在课程 0 之后。</span><br><span class="line">因此，一个正确的课程顺序是 [0,1,2,3] 。另一个正确的排序是 [0,2,1,3] 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 1, prerequisites = []</span><br><span class="line">输出：[0]</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; onPath;</span><br><span class="line">    <span class="keyword">bool</span> hasCycle;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; postOrder;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">findOrder</span><span class="params">(<span class="keyword">int</span> numCourses, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; prerequisites)</span> </span>{</span><br><span class="line">        <span class="comment">//建图</span></span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">graph</span>(numCourses);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> edge: prerequisites){</span><br><span class="line">            <span class="keyword">int</span> from = edge[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> to = edge[<span class="number">0</span>];</span><br><span class="line">            graph[from].<span class="built_in">push_back</span>(to);</span><br><span class="line">        }</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        onPath = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        hasCycle = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numCourses; i++){</span><br><span class="line">            <span class="comment">//遍历所有节点</span></span><br><span class="line">            <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(hasCycle)  <span class="keyword">return</span> vector&lt;<span class="keyword">int</span>&gt;{};</span><br><span class="line">        <span class="built_in">reverse</span>(postOrder.<span class="built_in">begin</span>(), postOrder.<span class="built_in">end</span>());  <span class="comment">//拓扑排序是后序遍历的反转 注意 后序的常规理解图的后序遍历</span></span><br><span class="line">        <span class="keyword">return</span> postOrder;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(onPath[s]) <span class="comment">//出现环</span></span><br><span class="line">            hasCycle = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(visited[s] || hasCycle)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//前序代码位置</span></span><br><span class="line">        visited[s] = <span class="number">1</span>;</span><br><span class="line">        onPath[s] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t : graph[s])</span><br><span class="line">            <span class="built_in">traverse</span>(graph, t);</span><br><span class="line">        <span class="comment">//后序遍历位置</span></span><br><span class="line">        onPath[s] = <span class="number">0</span>;</span><br><span class="line">        postOrder.<span class="built_in">push_back</span>(s); <span class="comment">//记录后序遍历</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="二分图判定"><a href="#二分图判定" class="headerlink" title="二分图判定"></a><a href="https://labuladong.gitee.io/algo/2/20/40/">二分图判定</a></h2><h3 id="785-判断二分图"><a href="#785-判断二分图" class="headerlink" title="785. 判断二分图"></a><a href="https://leetcode-cn.com/problems/is-graph-bipartite/">785. 判断二分图</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=785&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/is-graph-bipartite/#">思路</a></p><p>难度中等347收藏分享切换为英文接收动态反馈</p><p>存在一个 <strong>无向图</strong> ，图中有 <code>n</code> 个节点。其中每个节点都有一个介于 <code>0</code> 到 <code>n - 1</code> 之间的唯一编号。给你一个二维数组 <code>graph</code> ，其中 <code>graph[u]</code> 是一个节点数组，由节点 <code>u</code> 的邻接节点组成。形式上，对于 <code>graph[u]</code> 中的每个 <code>v</code> ，都存在一条位于节点 <code>u</code> 和节点 <code>v</code> 之间的无向边。该无向图同时具有以下属性：</p><ul><li>不存在自环（<code>graph[u]</code> 不包含 <code>u</code>）。</li><li>不存在平行边（<code>graph[u]</code> 不包含重复值）。</li><li>如果 <code>v</code> 在 <code>graph[u]</code> 内，那么 <code>u</code> 也应该在 <code>graph[v]</code> 内（该图是无向图）</li><li>这个图可能不是连通图，也就是说两个节点 <code>u</code> 和 <code>v</code> 之间可能不存在一条连通彼此的路径。</li></ul><p><strong>二分图</strong> 定义：如果能将一个图的节点集合分割成两个独立的子集 <code>A</code> 和 <code>B</code> ，并使图中的每一条边的两个节点一个来自 <code>A</code> 集合，一个来自 <code>B</code> 集合，就将这个图称为 <strong>二分图</strong> 。</p><p>如果图是二分图，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/bi2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,2,3],[0,2],[0,1,3],[0,2]]</span><br><span class="line">输出：false</span><br><span class="line">解释：不能将节点分割成两个独立的子集，以使每条边都连通一个子集中的一个节点与另一个子集中的一个节点。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/bi1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,3],[0,2],[1,3],[0,2]]</span><br><span class="line">输出：true</span><br><span class="line">解释：可以将节点分成两组: {0, 2} 和 {1, 3} 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>对整个图进行交替染色 若可以完全染色 则为二分图</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 给图上色 如果可以完全上色 则表示为二分图</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isBipartite</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph)</span> </span>{</span><br><span class="line">        <span class="keyword">bool</span> ok = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = graph.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">color</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">0</span>; v&lt;n; v++){</span><br><span class="line">            <span class="keyword">if</span>(!used[v])</span><br><span class="line">                <span class="built_in">traverse</span>(graph, v, used, color, ok);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ok;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> v, vector&lt;<span class="keyword">bool</span>&gt;&amp; used, vector&lt;<span class="keyword">bool</span>&gt;&amp; color, <span class="keyword">bool</span>&amp; ok)</span></span>{</span><br><span class="line">        <span class="comment">//如果确定不是二分图了 就不用再浪费时间遍历了</span></span><br><span class="line">        <span class="keyword">if</span>(!ok) <span class="keyword">return</span>;</span><br><span class="line">        used[v] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> w : graph[v]){</span><br><span class="line">            <span class="keyword">if</span>(!used[w]){</span><br><span class="line">                color[w] = !color[v];</span><br><span class="line">                <span class="built_in">traverse</span>(graph, w, used, color, ok);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">if</span>(color[w] == color[v]){</span><br><span class="line">                    ok = <span class="literal">false</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="886-可能的二分法"><a href="#886-可能的二分法" class="headerlink" title="886. 可能的二分法"></a><a href="https://leetcode-cn.com/problems/possible-bipartition/">886. 可能的二分法</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=886&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/possible-bipartition/#">思路</a></p><p>难度中等161</p><p>给定一组 <code>n</code> 人（编号为 <code>1, 2, ..., n</code>）， 我们想把每个人分进<strong>任意</strong>大小的两组。每个人都可能不喜欢其他人，那么他们不应该属于同一组。</p><p>给定整数 <code>n</code> 和数组 <code>dislikes</code> ，其中 <code>dislikes[i] = [ai, bi]</code> ，表示不允许将编号为 <code>ai</code> 和 <code>bi</code>的人归入同一组。当可以用这种方法将所有人分进两组时，返回 <code>true</code>；否则返回 <code>false</code>。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, dislikes = [[1,2],[1,3],[2,4]]</span><br><span class="line">输出：true</span><br><span class="line">解释：group1 [1,4], group2 [2,3]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, dislikes = [[1,2],[1,3],[2,3]]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>首先构造邻接表（细节， 编号为1-n）</li><li>上色</li></ol><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">bool</span> ans;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; color;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="comment">//注意编号 1-n</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">possibleBipartition</span><span class="params">(<span class="keyword">int</span> n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes)</span> </span>{</span><br><span class="line">        ans = <span class="number">1</span>;</span><br><span class="line">        color.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(n+<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; dislikess = <span class="built_in">buildGraph</span>(dislikes,n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i])</span><br><span class="line">                <span class="built_in">traverse</span>(dislikess, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这是一个双向图 你恨我 我恨你</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">buildGraph</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes, <span class="keyword">int</span> n){</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">res</span>(n+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span>; i&lt;dislikes.<span class="built_in">size</span>(); i++){</span><br><span class="line">            res[dislikes[i][<span class="number">0</span>]].<span class="built_in">push_back</span>(dislikes[i][<span class="number">1</span>]);</span><br><span class="line">            res[dislikes[i][<span class="number">1</span>]].<span class="built_in">push_back</span>(dislikes[i][<span class="number">0</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//上色函数 经典 完全一致</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">       ·</span><br><span class="line">        visited[index] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> newIndex : dislikes[index]){</span><br><span class="line">            <span class="keyword">if</span>(!visited[newIndex]){</span><br><span class="line">                color[newIndex] = !color[index];</span><br><span class="line">                <span class="built_in">traverse</span>(dislikes, newIndex);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">if</span>(color[index] == color[newIndex])</span><br><span class="line">                    ans = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="并查集（UNION-FIND）算法"><a href="#并查集（UNION-FIND）算法" class="headerlink" title="并查集（UNION-FIND）算法"></a>并查集（UNION-FIND）算法</h2><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//连同分量的个数</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="comment">// 存储每个节点的父节点</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// n 为图中节点的个数</span></span><br><span class="line"><span class="built_in">UF</span>(<span class="keyword">int</span> n) {</span><br><span class="line">cnt = n;</span><br><span class="line">parent.<span class="built_in">resize</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">parent[i] = i;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//联通节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">if</span> (rootP == rootQ)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">parent[rootQ] = rootP;</span><br><span class="line">cnt--;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断节点 p 和节点 q 是否连通</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">return</span> rootP == rootQ;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回节点 x 的连通分量根节点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (parent[x] != x) {</span><br><span class="line"><span class="comment">// 进行路径压缩</span></span><br><span class="line">parent[x] = parent[parent[x]];</span><br><span class="line">x = parent[x];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回图中的连通分量个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span> </span>{ <span class="keyword">return</span> cnt; }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="547-省份数量"><a href="#547-省份数量" class="headerlink" title="547. 省份数量"></a><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></h3><p>难度中等747</p><p>有 <code>n</code> 个城市，其中一些彼此相连，另一些没有相连。如果城市 <code>a</code> 与城市 <code>b</code> 直接相连，且城市 <code>b</code> 与城市 <code>c</code> 直接相连，那么城市 <code>a</code> 与城市 <code>c</code> 间接相连。</p><p><strong>省份</strong> 是一组直接或间接相连的城市，组内不含其他没有相连的城市。</p><p>给你一个 <code>n x n</code> 的矩阵 <code>isConnected</code> ，其中 <code>isConnected[i][j] = 1</code> 表示第 <code>i</code> 个城市和第 <code>j</code> 个城市直接相连，而 <code>isConnected[i][j] = 0</code> 表示二者不直接相连。</p><p>返回矩阵中 <strong>省份</strong> 的数量。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/graph1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：isConnected = [[1,1,0],[1,1,0],[0,0,1]]</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/graph2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：isConnected = [[1,0,0],[0,1,0],[0,0,1]]</span><br><span class="line">输出：3</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li>标准的并查集题目 模板直接使用</li><li>转换成邻接表dfs</li><li>邻接图 dfs 按相连的逻辑去进行dfs 最优</li></ol><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><ol><li>标准的并查集题目 模板直接使用</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//连同分量的个数</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="comment">// 存储每个节点的父节点</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// n 为图中节点的个数</span></span><br><span class="line"><span class="built_in">UF</span>(<span class="keyword">int</span> n) {</span><br><span class="line">cnt = n;</span><br><span class="line">parent.<span class="built_in">resize</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">parent[i] = i;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//联通节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">if</span> (rootP == rootQ)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">parent[rootQ] = rootP;</span><br><span class="line">cnt--;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断节点 p 和节点 q 是否连通</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">return</span> rootP == rootQ;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回节点 x 的连通分量根节点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (parent[x] != x) {</span><br><span class="line"><span class="comment">// 进行路径压缩</span></span><br><span class="line">parent[x] = parent[parent[x]];</span><br><span class="line">x = parent[x];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回图中的连通分量个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span> </span>{ <span class="keyword">return</span> cnt; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="function">UF <span class="title">uf</span><span class="params">(isConnected.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;isConnected[i].<span class="built_in">size</span>(); j++){</span><br><span class="line">                <span class="keyword">if</span>(isConnected[i][j])</span><br><span class="line">                    uf.<span class="built_in">unionn</span>(i, j);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> uf.<span class="built_in">count</span>();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>转换成邻接表dfs</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = isConnected.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; graph = <span class="built_in">buildGraph</span>(isConnected);</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i]){</span><br><span class="line">                <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">                ans++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">        visited[index] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> newIndex : graph[index]){</span><br><span class="line">            <span class="keyword">if</span>(!visited[newIndex]){</span><br><span class="line">                <span class="comment">//如果使用全局ans 在此处--是不对的</span></span><br><span class="line">                <span class="built_in">traverse</span>(graph, newIndex); </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">buildGraph</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected){</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">res</span>(isConnected.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;isConnected[i].<span class="built_in">size</span>(); j++){</span><br><span class="line">                <span class="keyword">if</span>(isConnected[i][j] == <span class="number">1</span>){</span><br><span class="line">                    res[i].<span class="built_in">push_back</span>(j);</span><br><span class="line">                    res[j].<span class="built_in">push_back</span>(i);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>邻接图 dfs</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = isConnected.<span class="built_in">size</span>();</span><br><span class="line">        visited =vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i]){</span><br><span class="line">                ans++;</span><br><span class="line">                <span class="built_in">dfs</span>(isConnected, i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected, <span class="keyword">int</span> nowPro)</span></span>{</span><br><span class="line">        visited[nowPro] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected[nowPro].<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i] &amp;&amp; isConnected[nowPro][i] == <span class="number">1</span>){</span><br><span class="line">                <span class="built_in">dfs</span>(isConnected, i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }   </span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="130-被围绕的区域"><a href="#130-被围绕的区域" class="headerlink" title="130. 被围绕的区域"></a><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=130&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/surrounded-regions/#">思路</a></p><p>难度中等750收藏分享切换为英文接收动态反馈</p><p>给你一个 <code>m x n</code> 的矩阵 <code>board</code> ，由若干字符 <code>'X'</code> 和 <code>'O'</code> ，找到所有被 <code>'X'</code> 围绕的区域，并将这些区域里所有的 <code>'O'</code> 用 <code>'X'</code> 填充。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/xogrid.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：board = [["X","X","X","X"],["X","O","O","X"],["X","X","O","X"],["X","O","X","X"]]</span><br><span class="line">输出：[["X","X","X","X"],["X","X","X","X"],["X","X","X","X"],["X","O","X","X"]]</span><br><span class="line">解释：被围绕的区间不会存在于边界上，换句话说，任何边界上的 'O' 都不会被填充为 'X'。 任何不在边界上，或不与边界上的 'O' 相连的 'O' 最终都会被填充为 'X'。如果两个元素在水平或垂直方向相邻，则称它们是“相连”的。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li>dfs这也是比较常规的 四周开始</li><li>并查集 重点理解如何使用这种数据结构</li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><h5 id="dfs"><a href="#dfs" class="headerlink" title="dfs"></a>dfs</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = board.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> n = board[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">bool</span>&gt;&gt; <span class="built_in">isIsland</span>(m, vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">if</span>(board[i][<span class="number">0</span>] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, i, <span class="number">0</span>, isIsland);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(board[i][n<span class="number">-1</span>] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, i, n<span class="number">-1</span>, isIsland);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(board[<span class="number">0</span>][i] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, <span class="number">0</span>, i, isIsland);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(board[m<span class="number">-1</span>][i] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, m<span class="number">-1</span>, i, isIsland);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(board[i][j] == <span class="string">'O'</span> &amp;&amp; !isIsland[i][j])</span><br><span class="line">                    board[i][j] = <span class="string">'X'</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">effect</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board, <span class="keyword">int</span> x, <span class="keyword">int</span> y, vector&lt;vector&lt;<span class="keyword">bool</span>&gt;&gt;&amp; isIsland)</span></span>{</span><br><span class="line">        <span class="comment">//如果不加入island判断就会陷入死循环</span></span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span> || y&lt;<span class="number">0</span> || x&gt;= board.<span class="built_in">size</span>() || y&gt;=board[<span class="number">0</span>].<span class="built_in">size</span>() || board[x][y]!=<span class="string">'O'</span> || isIsland[x][y]){</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        isIsland[x][y] = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">effect</span>(board, x+<span class="number">1</span>, y, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x<span class="number">-1</span>, y, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x, y+<span class="number">1</span>, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x, y<span class="number">-1</span>, isIsland);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h5><p><code>使用node为节点进行连接 将网格上的节点映射到数值上</code></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">   vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">UF</span>(<span class="keyword">int</span> n){</span><br><span class="line">        parent.<span class="built_in">resize</span>(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line">        <span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line">        <span class="keyword">if</span>(rootP == rootQ) <span class="keyword">return</span>;</span><br><span class="line">        parent[rootP] = rootQ;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line">        <span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line">        <span class="keyword">return</span> rootQ == rootP;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>{</span><br><span class="line">        <span class="keyword">while</span>(parent[x]!= x){</span><br><span class="line">            parent[x] = parent[parent[x]];</span><br><span class="line">            x = parent[x];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board)</span> </span>{</span><br><span class="line">        m = board.<span class="built_in">size</span>();</span><br><span class="line">        n = board[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">UF <span class="title">uf</span><span class="params">(m*n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">int</span> dumpyNode = m*n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(board[i][j] == <span class="string">'O'</span>){</span><br><span class="line">                    <span class="keyword">if</span>(i == <span class="number">0</span> || j == <span class="number">0</span> || i == m<span class="number">-1</span> || j == n<span class="number">-1</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(dumpyNode, <span class="built_in">node</span>(i, j));</span><br><span class="line">                    <span class="keyword">else</span>{</span><br><span class="line">                    <span class="comment">//里面的和上下左右联通</span></span><br><span class="line">                    <span class="keyword">if</span>(i&gt;<span class="number">0</span> &amp;&amp; board[i<span class="number">-1</span>][j] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i<span class="number">-1</span>, j));</span><br><span class="line">                    <span class="keyword">if</span>(j&gt;<span class="number">0</span> &amp;&amp; board[i][j<span class="number">-1</span>] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i, j<span class="number">-1</span>));</span><br><span class="line">                    <span class="keyword">if</span>(i&lt;m<span class="number">-1</span> &amp;&amp; board[i+<span class="number">1</span>][j] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i+<span class="number">1</span>, j));</span><br><span class="line">                    <span class="keyword">if</span>(j&lt;n<span class="number">-1</span> &amp;&amp; board[i][j+<span class="number">1</span>] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i, j+<span class="number">1</span>));</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(uf.<span class="built_in">connected</span>(<span class="built_in">node</span>(i, j), dumpyNode))</span><br><span class="line">                    board[i][j] = <span class="string">'O'</span>;</span><br><span class="line">                <span class="keyword">else</span> board[i][j] = <span class="string">'X'</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>{</span><br><span class="line">        <span class="keyword">return</span>  x*n + y;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/15/lian-biao/"/>
      <url>/2022/03/15/lian-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="单链表解题套路"><a href="#单链表解题套路" class="headerlink" title="单链表解题套路"></a>单链表解题套路</h2><h3 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21. 合并两个有序链表"></a><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=21&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/#">思路</a></p><p>难度简单2259</p><p>将两个升序链表合并为一个新的 <strong>升序</strong> 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 </p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203121556763.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [1,2,4], l2 = [1,3,4]</span><br><span class="line">输出：[1,1,2,3,4,4]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [], l2 = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></tbody></table></figure><p><strong>提示：</strong></p><ul><li>两个链表的节点数目范围是 <code>[0, 50]</code></li><li><code>-100 &lt;= Node.val &lt;= 100</code></li><li><code>l1</code> 和 <code>l2</code> 均按 <strong>非递减顺序</strong> 排列</li></ul><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>虚拟头节点占位</li><li>while循环&amp;&amp; 交替前进 </li><li>[1 2 3] [4 5 6] 这种情况 会先遍历完第一个 然后在后面的if判断中 拼接第二个list</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode* list1, ListNode* list2)</span> </span>{</span><br><span class="line">      ListNode* pre = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">      ListNode* curr = pre;</span><br><span class="line">      <span class="keyword">while</span>(list1 &amp;&amp; list2){</span><br><span class="line">        <span class="keyword">if</span>(list1-&gt;val &lt; list2-&gt;val){</span><br><span class="line">          curr-&gt;next = list1;</span><br><span class="line">          list1 = list1-&gt;next;</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">          curr-&gt;next = list2;</span><br><span class="line">          list2 = list2-&gt;next;         </span><br><span class="line">        }</span><br><span class="line">        curr = curr-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(list1) curr-&gt;next = list1;</span><br><span class="line">      <span class="keyword">if</span>(list2) curr-&gt;next = list2;</span><br><span class="line">      <span class="keyword">return</span> pre-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="23-合并K个升序链表"><a href="#23-合并K个升序链表" class="headerlink" title="23. 合并K个升序链表"></a><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/">23. 合并K个升序链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=23&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/#">思路</a></p><p>难度困难1803收藏分享切换为英文接收动态反馈</p><p>给你一个链表数组，每个链表都已经按升序排列。</p><p>请你将所有链表合并到一个升序链表中，返回合并后的链表。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：lists = [[1,4,5],[1,3,4],[2,6]]</span><br><span class="line">输出：[1,1,2,3,4,4,5,6]</span><br><span class="line">解释：链表数组如下：</span><br><span class="line">[</span><br><span class="line">  1-&gt;4-&gt;5,</span><br><span class="line">  1-&gt;3-&gt;4,</span><br><span class="line">  2-&gt;6</span><br><span class="line">]</span><br><span class="line">将它们合并到一个有序链表中得到。</span><br><span class="line">1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>顶堆解法 （笨一点的解法 vector sort）</li><li>循环merger two list</li></ol><h4 id="顶堆解法"><a href="#顶堆解法" class="headerlink" title="顶堆解法"></a>顶堆解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Status</span> {</span></span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        ListNode *ptr;</span><br><span class="line">        <span class="comment">//return 1 表示左边形参优先级低 靠后放  例如  &lt;  (1, 3) return 1&gt;3 左边优先级高 往前放 就是升序排列 小顶堆</span></span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Status &amp;rhs) <span class="keyword">const</span> {</span><br><span class="line">            <span class="keyword">return</span> val &gt; rhs.val;</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    priority_queue &lt;Status&gt; q;</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(vector&lt;ListNode*&gt;&amp; lists)</span> </span>{</span><br><span class="line">        <span class="comment">//所有非空链表 压入queue</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> node: lists) {</span><br><span class="line">            <span class="keyword">if</span> (node) q.<span class="built_in">push</span>({node-&gt;val, node});</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//注意 这里这样写 一方面可以做到虚拟头的备份</span></span><br><span class="line">        <span class="comment">//另一方面 可以保证虚拟头被析构</span></span><br><span class="line">        ListNode head, *tail = &amp;head;</span><br><span class="line">        <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) {</span><br><span class="line">            <span class="comment">//顶堆用的时候都是先top 再pop</span></span><br><span class="line">            <span class="keyword">auto</span> f = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>(); </span><br><span class="line">            tail-&gt;next = f.ptr; </span><br><span class="line">            tail = tail-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (f.ptr-&gt;next) q.<span class="built_in">push</span>({f.ptr-&gt;next-&gt;val, f.ptr-&gt;next});</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="涉及到的知识点"><a href="#涉及到的知识点" class="headerlink" title="涉及到的知识点"></a><u>涉及到的知识点</u></h4><ol><li><p>顶堆的一般用法，即先top存储临时变量，再pop</p></li><li><p><a href="https://www.cnblogs.com/shona/p/12163381.html">顶堆的自定义数据结构和比较方式</a></p><blockquote><p>这里用到的就是封装到一个struct ，重载他的&lt;，</p><p>顶堆的排序方式是按照&lt;进行比较排序，返回为1时，左边形参的优先级低于右边形参 表现为升序 小顶堆</p></blockquote></li></ol><h4 id="双链表merge解法"><a href="#双链表merge解法" class="headerlink" title="双链表merge解法"></a>双链表merge解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode *a, ListNode *b)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> ((!a) || (!b)) <span class="keyword">return</span> a ? a : b;</span><br><span class="line">        ListNode head, *tail = &amp;head, *aPtr = a, *bPtr = b;</span><br><span class="line">        <span class="keyword">while</span> (aPtr &amp;&amp; bPtr) {</span><br><span class="line">            <span class="keyword">if</span> (aPtr-&gt;val &lt; bPtr-&gt;val) {</span><br><span class="line">                tail-&gt;next = aPtr; aPtr = aPtr-&gt;next;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tail-&gt;next = bPtr; bPtr = bPtr-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            tail = tail-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        tail-&gt;next = (aPtr ? aPtr : bPtr);</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(vector&lt;ListNode*&gt;&amp; lists)</span> </span>{</span><br><span class="line">        ListNode *ans = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; lists.<span class="built_in">size</span>(); ++i) {</span><br><span class="line">            ans = <span class="built_in">mergeTwoLists</span>(ans, lists[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-22-链表中倒数第k个节点"><a href="#剑指-Offer-22-链表中倒数第k个节点" class="headerlink" title="剑指 Offer 22. 链表中倒数第k个节点"></a><a href="https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/">剑指 Offer 22. 链表中倒数第k个节点</a></h3><p>输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。</p><p>例如，一个链表有 <code>6</code> 个节点，从头节点开始，它们的值依次是 <code>1、2、3、4、5、6</code>。这个链表的倒数第 <code>3</code> 个节点是值为 <code>4</code> 的节点。</p><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">给定一个链表: 1-&gt;2-&gt;3-&gt;4-&gt;5, 和 k = 2.</span><br><span class="line"></span><br><span class="line">返回链表 4-&gt;5.</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>笨解法 一次遍历记录长度，一次遍历计算结果</li><li>一次遍历 fast先走k，然后slow fast 同时前进 直到fast为空</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//两次遍历</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">getKthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">      ListNode* cpy = head;</span><br><span class="line">      <span class="keyword">while</span>(cpy){</span><br><span class="line">        length++;</span><br><span class="line">        cpy = cpy-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* node = head;</span><br><span class="line">      <span class="keyword">while</span>(node){</span><br><span class="line">        <span class="keyword">if</span>(length == k)</span><br><span class="line">          <span class="keyword">return</span> node;</span><br><span class="line">        node = node-&gt;next;</span><br><span class="line">        length--;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">  <span class="comment">//一次遍历</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">getKthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      <span class="keyword">int</span> step = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        step++;</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(step == k){</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }        </span><br><span class="line">      }</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="19-删除链表的倒数第-N-个结点"><a href="#19-删除链表的倒数第-N-个结点" class="headerlink" title="19. 删除链表的倒数第 N 个结点"></a><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=19&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/#">思路</a></p><p>给你一个链表，删除链表的倒数第 <code>n</code> 个结点，并且返回链表的头结点。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203121922903.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], n = 2</span><br><span class="line">输出：[1,2,3,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1], n = 1</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比遍历</li><li>一次遍历 但是要注意 ==可能会删除头节点 所以遍历应该使用虚拟头==</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//笨比遍历法</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(cur-&gt;next != <span class="literal">NULL</span>){</span><br><span class="line">            i++;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        ListNode* curr = head;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;=i-n<span class="number">-1</span>){</span><br><span class="line">            <span class="keyword">if</span> (j == i-n<span class="number">-2</span>) curr-&gt;next = curr-&gt;next-&gt;next;</span><br><span class="line">            j++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//一次遍历法</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">      ListNode* pre = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">      pre-&gt;next = head;</span><br><span class="line">      ListNode* fast = pre;</span><br><span class="line">      <span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n+<span class="number">1</span>; i++)</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">      ListNode* slow = pre;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      slow-&gt;next = slow-&gt;next-&gt;next;</span><br><span class="line">      <span class="keyword">return</span> pre-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="876-链表的中间结点"><a href="#876-链表的中间结点" class="headerlink" title="876. 链表的中间结点"></a><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">876. 链表的中间结点</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=876&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/#">思路</a></p><p>难度简单505</p><p>给定一个头结点为 <code>head</code> 的非空单链表，返回链表的中间结点。</p><p>如果有两个中间结点，则返回第二个中间结点。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：[1,2,3,4,5]</span><br><span class="line">输出：此列表中的结点 3 (序列化形式：[3,4,5])</span><br><span class="line">返回的结点值为 3 。 (测评系统对该结点序列化表述是 [3,4,5])。</span><br><span class="line">注意，我们返回了一个 ListNode 类型的对象 ans，这样：</span><br><span class="line">ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, 以及 ans.next.next.next = NULL.</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：[1,2,3,4,5,6]</span><br><span class="line">输出：此列表中的结点 4 (序列化形式：[4,5,6])</span><br><span class="line">由于该列表有两个中间结点，值分别为 3 和 4，我们返回第二个结点</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比</li><li>快慢指针 注意判断条件  ==while(fast &amp;&amp; fast-&gt;next)==</li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">nullptr</span>) {</span><br><span class="line">            ++n;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        cur = head;</span><br><span class="line">        <span class="keyword">while</span> (k &lt; n / <span class="number">2</span>) {</span><br><span class="line">            ++k;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){  <span class="comment">//刚开始准备重新用！就尼玛用混了 老老实实==nullptr吧</span></span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="链表环问题"><a href="#链表环问题" class="headerlink" title="链表环问题"></a>链表环问题</h3><h4 id="1-判断是否有环"><a href="#1-判断是否有环" class="headerlink" title="1. 判断是否有环"></a>1. 判断是否有环</h4><ul><li>哈希</li><li>「Floyd 判圈算法」（又称龟兔赛跑算法）</li><li>奇葩方法：修改节点的值</li></ul><p><strong>代码</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hash</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        unordered_set&lt;ListNode*&gt; sett;</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">while</span>(cur){</span><br><span class="line">            <span class="keyword">if</span>(sett.<span class="built_in">count</span>(cur)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            sett.<span class="built_in">insert</span>(cur);</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//龟兔赛跑</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        ListNode* slow = head;</span><br><span class="line">        ListNode* fast = head;</span><br><span class="line">        <span class="keyword">while</span>(fast != <span class="literal">NULL</span> &amp;&amp; fast-&gt;next!= <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(fast == slow) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//修改节点值的判圈方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      <span class="keyword">while</span>(head){</span><br><span class="line">        <span class="keyword">if</span>(head-&gt;val == <span class="string">'12458256442311234856461'</span>)</span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> head-&gt;val = <span class="string">'12458256442311234856461'</span>;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="2-环的位置"><a href="#2-环的位置" class="headerlink" title="2. 环的位置"></a>2. <a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/">环的位置</a></h4><p>我们假设快慢指针相遇时，慢指针 <code>slow</code> 走了 <code>k</code> 步，那么快指针 <code>fast</code> 一定走了 <code>2k</code> 步：</p><p><a href="https://labuladong.gitee.io/algo/images/%E5%8F%8C%E6%8C%87%E9%92%88/3.jpeg"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122004655.jpeg" alt="img"></a></p><p><code>fast</code> 一定比 <code>slow</code> 多走了 <code>k</code> 步，这多走的 <code>k</code> 步其实就是 <code>fast</code> 指针在环里转圈圈，所以 <code>k</code> 的值就是环长度的「整数倍」。</p><p>假设相遇点距环的起点的距离为 <code>m</code>，那么结合上图的 <code>slow</code> 指针，环的起点距头结点 <code>head</code> 的距离为 <code>k - m</code>，也就是说如果从 <code>head</code> 前进 <code>k - m</code> 步就能到达环起点。</p><p>巧的是，如果从相遇点继续前进 <code>k - m</code> 步，也恰好到达环起点。因为结合上图的 <code>fast</code> 指针，从相遇点开始走k步可以转回到相遇点，那走 <code>k - m</code> 步肯定就走到环起点了：</p><p><a href="https://labuladong.gitee.io/algo/images/%E5%8F%8C%E6%8C%87%E9%92%88/2.jpeg"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122004506.jpeg" alt="img"></a></p><p>所以，只要我们把快慢指针中的任一个重新指向 <code>head</code>，然后两个指针同速前进，<code>k - m</code> 步后一定会相遇，相遇之处就是环的起点了。</p><p><strong>代码</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hash</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      unordered_set &lt;ListNode*&gt; set;</span><br><span class="line">      <span class="keyword">while</span>(head != <span class="literal">NULL</span>){</span><br><span class="line">        <span class="keyword">if</span> (set.<span class="built_in">count</span>(head)) <span class="keyword">return</span> head;</span><br><span class="line">          set.<span class="built_in">insert</span>(head);</span><br><span class="line">          head = head-&gt;next;</span><br><span class="line">        }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//数学</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){</span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(fast == slow) <span class="keyword">break</span>;</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="comment">//判断是否有环</span></span><br><span class="line">      <span class="keyword">if</span>(fast == <span class="literal">nullptr</span> || fast-&gt;next == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">      fast = head; <span class="comment">//重新指向头节点</span></span><br><span class="line">      <span class="keyword">while</span>(slow != fast){</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="160-相交链表"><a href="#160-相交链表" class="headerlink" title="160. 相交链表"></a><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/">160. 相交链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=160&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/#">思路</a></p><p>给你两个单链表的头节点 <code>headA</code> 和 <code>headB</code> ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 <code>null</code> 。</p><p>图示两个链表在节点 <code>c1</code> 开始相交<strong>：</strong></p><p><a href="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122026344.png" alt="img"></a></p><p>题目数据 <strong>保证</strong> 整个链式结构中不存在环。</p><p><strong>注意</strong>，函数返回结果后，链表必须 <strong>保持其原始结构</strong> 。</p><p><strong>自定义评测：</strong></p><p><strong>评测系统</strong> 的输入如下（你设计的程序 <strong>不适用</strong> 此输入）：</p><ul><li><code>intersectVal</code> - 相交的起始节点的值。如果不存在相交节点，这一值为 <code>0</code></li><li><code>listA</code> - 第一个链表</li><li><code>listB</code> - 第二个链表</li><li><code>skipA</code> - 在 <code>listA</code> 中（从头节点开始）跳到交叉节点的节点数</li><li><code>skipB</code> - 在 <code>listB</code> 中（从头节点开始）跳到交叉节点的节点数</li></ul><p>评测系统将根据这些输入创建链式数据结构，并将两个头节点 <code>headA</code> 和 <code>headB</code> 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 <strong>视作正确答案</strong> 。</p><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比hash</li><li>挺神奇的首尾相连</li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122027928.jpeg" alt="img" style="zoom:50%;"><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//笨比hash</span></span><br><span class="line">    <span class="function">ListNode *<span class="title">getIntersectionNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>{</span><br><span class="line">      unordered_set&lt;ListNode*&gt; sett;</span><br><span class="line">      <span class="keyword">while</span>(headA){</span><br><span class="line">        sett.<span class="built_in">insert</span>(headA);</span><br><span class="line">        headA = headA-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">while</span>(headB){</span><br><span class="line">        <span class="keyword">if</span>(sett.<span class="built_in">count</span>(headB))</span><br><span class="line">          <span class="keyword">return</span> headB;</span><br><span class="line">        headB = headB-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//首尾相接</span></span><br><span class="line">    <span class="function">ListNode *<span class="title">getIntersectionNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span> (headA == <span class="literal">nullptr</span> || headB == <span class="literal">nullptr</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      }</span><br><span class="line">      ListNode *pA = headA, *pB = headB;</span><br><span class="line">      <span class="keyword">while</span> (pA != pB) {</span><br><span class="line">        pA = pA == <span class="literal">nullptr</span> ? headB : pA-&gt;next;</span><br><span class="line">        pB = pB == <span class="literal">nullptr</span> ? headA : pB-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> pA;    </span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="递归反转链表"><a href="#递归反转链表" class="headerlink" title="递归反转链表"></a>递归反转链表</h2><h3 id="206-反转整个链表"><a href="#206-反转整个链表" class="headerlink" title="206. 反转整个链表"></a><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转整个链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=206&amp;target=gitee">labuladong 题解</a></p><p>给你单链表的头节点 <code>head</code> ，请你反转链表，并返回反转后的链表。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122035241.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5]</span><br><span class="line">输出：[5,4,3,2,1]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122035302.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：[2,1]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><ol><li>while循环迭代</li><li>递归反转整个链表</li></ol><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122221482.jpeg" alt="img" style="zoom: 50%;"><img src="https://labuladong.gitee.io/algo/images/%e5%8f%8d%e8%bd%ac%e9%93%be%e8%a1%a8/2.jpg" alt="img" style="zoom: 50%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122221914.jpeg" alt="img" style="zoom: 50%;"><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122222312.jpeg" alt="img" style="zoom: 50%;"><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//while迭代</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* cur = head;</span><br><span class="line">      ListNode* pre = <span class="literal">nullptr</span>;</span><br><span class="line">      ListNode* temp;</span><br><span class="line">      <span class="keyword">while</span>(cur){</span><br><span class="line">        temp = cur-&gt;next;</span><br><span class="line">        cur-&gt;next = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = temp;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      <span class="comment">//注意head == nullptr是判断传进来的链表为空</span></span><br><span class="line">      <span class="comment">//注意head-&gt;next == nullptr是真正的base case</span></span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span> || head-&gt;next == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">      ListNode* last = <span class="built_in">reverseList</span>(head-&gt;next);</span><br><span class="line">      <span class="comment">//nmb 秀到头晕</span></span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      head-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="反转链表前-N-个节点"><a href="#反转链表前-N-个节点" class="headerlink" title="反转链表前 N 个节点"></a>反转链表前 N 个节点</h3><p><em>// 将链表的前 n 个节点反转（n &lt;= 链表长度）</em></p><p>比如说对于下图链表，执行 <code>reverseN(head, 3)</code>：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/6.jpg" alt="img" style="zoom: 50%;"><p>解决思路和反转整个链表差不多，只要稍加修改即可：</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ListNode* successor = <span class="literal">nullptr</span>; <span class="comment">// 后驱节点</span></span><br><span class="line"><span class="comment">// 反转以 head 为起点的 n 个节点，返回新的头结点</span></span><br><span class="line"><span class="function">ListNode* <span class="title">reverseN</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) {</span><br><span class="line">        <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">        successor = head.next;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 以 head.next 为起点，需要反转前 n - 1 个节点</span></span><br><span class="line">    ListNode* last = <span class="built_in">reverseN</span>(head-&gt;next, n - <span class="number">1</span>);</span><br><span class="line">    head-&gt;next-&gt;next = head;</span><br><span class="line">    <span class="comment">// 让反转之后的 head 节点和后面的节点连起来</span></span><br><span class="line">    head-&gt;next = successor;</span><br><span class="line">    <span class="keyword">return</span> last;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="具体的区别："><a href="#具体的区别：" class="headerlink" title="具体的区别："></a>具体的区别：</h4><p>1、base case 变为 <code>n == 1</code>，反转一个元素，就是它本身，同时<strong>要记录后驱节点</strong>。</p><p>2、刚才我们直接把 <code>head.next</code> 设置为 null，因为整个链表反转后原来的 <code>head</code> 变成了整个链表的最后一个节点。但现在 <code>head</code> 节点在递归反转之后不一定是最后一个节点了，所以要记录后驱 <code>successor</code>（第 n + 1 个节点），反转之后将 <code>head</code> 连接上。</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122323670.jpeg" alt="img" style="zoom: 50%;"><p>OK，如果这个函数你也能看懂，就离实现「反转一部分链表」不远了。</p><h3 id="92-反转链表的一部分"><a href="#92-反转链表的一部分" class="headerlink" title="92. 反转链表的一部分"></a><a href="https://leetcode-cn.com/problems/reverse-linked-list-ii/">92. 反转链表的一部分</a></h3><p>给你单链表的头指针 head 和两个整数 left 和 right ，其中 left &lt;= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。</p><p>示例 1：</p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203122331490.jpeg" alt="img"></p><p>输入：head = [1,2,3,4,5], left = 2, right = 4<br>输出：[1,4,3,2,5]</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseBetween</span><span class="params">(ListNode* head, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(left == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">reverseN</span>(head, right);</span><br><span class="line">      <span class="comment">//前进到反转的起点触发basecase</span></span><br><span class="line">      <span class="comment">//left和right一起向前移动，right要跟随着left-- </span></span><br><span class="line">      <span class="comment">//因为right表示的是位置，N的长度应该是移动left为头的 right跟着减的长度</span></span><br><span class="line">      head-&gt;next = <span class="built_in">reverseBetween</span>(head-&gt;next, left<span class="number">-1</span>, right<span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    ListNode* successor; <span class="comment">// 后驱节点</span></span><br><span class="line">    <span class="comment">// 反转以 head 为起点的 n 个节点，返回新的头结点</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseN</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(n == <span class="number">1</span>){</span><br><span class="line">        <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">        successor = head-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">      ListNode* last = <span class="built_in">reverseN</span>(head-&gt;next, n<span class="number">-1</span>);</span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">      head-&gt;next = successor;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>详细的迭代写法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reverseLinkedList</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        <span class="comment">// 也可以使用递归反转一个链表</span></span><br><span class="line">        ListNode *pre = <span class="literal">nullptr</span>;</span><br><span class="line">        ListNode *cur = head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">nullptr</span>) {</span><br><span class="line">            ListNode *next = cur-&gt;next;</span><br><span class="line">            cur-&gt;next = pre;</span><br><span class="line">            pre = cur;</span><br><span class="line">            cur = next;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">reverseBetween</span><span class="params">(ListNode *head, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">        <span class="comment">// 因为头节点有可能发生变化，使用虚拟头节点可以避免复杂的分类讨论</span></span><br><span class="line">        ListNode *dummyNode = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">        dummyNode-&gt;next = head;</span><br><span class="line"></span><br><span class="line">        ListNode *pre = dummyNode;</span><br><span class="line">        <span class="comment">// 第 1 步：从虚拟头节点走 left - 1 步，来到 left 节点的前一个节点</span></span><br><span class="line">        <span class="comment">// 建议写在 for 循环里，语义清晰</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; left - <span class="number">1</span>; i++) {</span><br><span class="line">            pre = pre-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 2 步：从 pre 再走 right - left + 1 步，来到 right 节点</span></span><br><span class="line">        ListNode *rightNode = pre;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; right - left + <span class="number">1</span>; i++) {</span><br><span class="line">            rightNode = rightNode-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 3 步：切断出一个子链表（截取链表）</span></span><br><span class="line">        ListNode *leftNode = pre-&gt;next;</span><br><span class="line">        ListNode *curr = rightNode-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注意：切断链接</span></span><br><span class="line">        pre-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">        rightNode-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 4 步：同第 206 题，反转链表的子区间</span></span><br><span class="line">        <span class="built_in">reverseLinkedList</span>(leftNode);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 5 步：接回到原来的链表中</span></span><br><span class="line">        pre-&gt;next = rightNode;</span><br><span class="line">        leftNode-&gt;next = curr;</span><br><span class="line">        <span class="keyword">return</span> dummyNode-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="如何-K-个一组反转链表"><a href="#如何-K-个一组反转链表" class="headerlink" title="如何 K 个一组反转链表"></a>如何 K 个一组反转链表</h2><h3 id="25-K-个一组翻转链表"><a href="#25-K-个一组翻转链表" class="headerlink" title="25. K 个一组翻转链表"></a><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">25. K 个一组翻转链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=25&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/#">思路</a></p><p>难度困难1520</p><p>给你一个链表，每 <em>k</em> 个节点一组进行翻转，请你返回翻转后的链表。</p><p><em>k</em> 是一个正整数，它的值小于或等于链表的长度。</p><p>如果节点总数不是 <em>k</em> 的整数倍，那么请将最后剩余的节点保持原有顺序。</p><p><strong>进阶：</strong></p><ul><li>你可以设计一个只使用常数额外空间的算法来解决此问题吗？</li><li><strong>你不能只是单纯的改变节点内部的值</strong>，而是需要实际进行节点交换。</li></ul><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130004385.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 2</span><br><span class="line">输出：[2,1,4,3,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130004388.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 3</span><br><span class="line">输出：[3,2,1,4,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 1</span><br><span class="line">输出：[1,2,3,4,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 4：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1], k = 1</span><br><span class="line">输出：[1]</span><br></pre></td></tr></tbody></table></figure><p>难理解但是写起来相对简单的解法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** 反转区间 [a, b) 的元素，注意是左闭右开 */</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverse</span><span class="params">(ListNode* a, ListNode* b)</span> </span>{</span><br><span class="line">      ListNode* pre;</span><br><span class="line">      ListNode* cur;</span><br><span class="line">      ListNode* nxt;</span><br><span class="line">      pre = <span class="literal">nullptr</span>; cur = a; nxt = a;</span><br><span class="line">      <span class="comment">// while 终止的条件改一下就行了</span></span><br><span class="line">      <span class="keyword">while</span> (cur != b) {</span><br><span class="line">        nxt = cur-&gt;next;</span><br><span class="line">        cur-&gt;next = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = nxt;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// 返回反转后的头结点</span></span><br><span class="line">      <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseKGroup</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      ListNode* a;</span><br><span class="line">      ListNode* b;</span><br><span class="line">      a = b = head;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;k; i++){</span><br><span class="line">        <span class="keyword">if</span>(b == <span class="literal">nullptr</span>) <span class="keyword">return</span> head;</span><br><span class="line">        b = b-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* newHead = <span class="built_in">reverse</span>(a, b);</span><br><span class="line">      a-&gt;next = <span class="built_in">reverseKGroup</span>(b, k);</span><br><span class="line">      <span class="keyword">return</span> newHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>解释一下 <code>for</code> 循环之后的几句代码，注意 <code>reverse</code> 函数是反转区间 <code>[a, b)</code>，所以情形是这样的：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130047155.jpeg" alt="img" style="zoom:50%;"><p>递归部分就不展开了，整个函数递归完成之后就是这个结果，完全符合题意：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130047037.jpeg" alt="img" style="zoom:50%;"><h4 id="好理解但是写起来困难的解法"><a href="#好理解但是写起来困难的解法" class="headerlink" title="好理解但是写起来困难的解法"></a>好理解但是写起来困难的解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 翻转一个子链表，并且返回新的头与尾</span></span><br><span class="line">    <span class="function">pair&lt;ListNode*, ListNode*&gt; <span class="title">myReverse</span><span class="params">(ListNode* head, ListNode* tail)</span> </span>{</span><br><span class="line">        <span class="comment">//ListNode* prev = tail-&gt;next; //这个指向没有任何作用,函数外面添加了指向</span></span><br><span class="line">        ListNode* prev;</span><br><span class="line">        ListNode* p = head;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不能使用p!=tail-&gt;next,这是因为tail-&gt;next指向发生了更改</span></span><br><span class="line">        <span class="comment">//不能while(p) 因为p只有有链接</span></span><br><span class="line">        <span class="keyword">while</span> (prev != tail) { <span class="comment">//pre &lt;- p 这样循环向前移动的</span></span><br><span class="line">            ListNode* nex = p-&gt;next;</span><br><span class="line">            p-&gt;next = prev;</span><br><span class="line">            prev = p;</span><br><span class="line">            p = nex;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> {tail, head};</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseKGroup</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        ListNode* hair = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        hair-&gt;next = head;</span><br><span class="line">        ListNode* pre = hair;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (head) {</span><br><span class="line">            ListNode* tail = pre;</span><br><span class="line">            <span class="comment">// 查看剩余部分长度是否大于等于 k</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; ++i) {</span><br><span class="line">                tail = tail-&gt;next;</span><br><span class="line">                <span class="keyword">if</span> (!tail) {</span><br><span class="line">                    <span class="keyword">return</span> hair-&gt;next;  <span class="comment">//不足k，此区域不反转 直接返回</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            ListNode* nexHead = tail-&gt;next;  <span class="comment">//区域外的下一区域的头</span></span><br><span class="line">            <span class="comment">// 这里是 C++17 的写法，也可以写成</span></span><br><span class="line">            <span class="comment">// pair&lt;ListNode*, ListNode*&gt; result = myReverse(head, tail);</span></span><br><span class="line">            <span class="comment">// head = result.first;</span></span><br><span class="line">            <span class="comment">// tail = result.second;</span></span><br><span class="line">            <span class="built_in">tie</span>(head, tail) = <span class="built_in">myReverse</span>(head, tail);</span><br><span class="line">            <span class="comment">// 把子链表重新接回原链表</span></span><br><span class="line">            pre-&gt;next = head;</span><br><span class="line">            tail-&gt;next = nexHead;</span><br><span class="line">            pre = tail;</span><br><span class="line">            head = nexHead;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> hair-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="如何判断回文链表"><a href="#如何判断回文链表" class="headerlink" title="如何判断回文链表"></a>如何判断回文链表</h2><h3 id="234-回文链表"><a href="#234-回文链表" class="headerlink" title="234. 回文链表"></a><a href="https://leetcode-cn.com/problems/palindrome-linked-list/">234. 回文链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=234&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/palindrome-linked-list/#">思路</a></p><p>难度简单1293</p><p>给你一个单链表的头节点 <code>head</code> ，请你判断该链表是否为回文链表。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130110029.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,2,1]</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/202203130110233.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//辅助容器</span></span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; vals;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">nullptr</span>) {</span><br><span class="line">      vals.<span class="built_in">emplace_back</span>(head-&gt;val);</span><br><span class="line">      head = head-&gt;next;</span><br><span class="line">    }</span><br><span class="line">      <span class="comment">//回文判断的双指针写法 记一下</span></span><br><span class="line">    <span class="comment">// for (int i = 0, j = (int)vals.size() - 1; i &lt; j; ++i, --j) {</span></span><br><span class="line">    <span class="comment">//   if (vals[i] != vals[j]) {</span></span><br><span class="line">    <span class="comment">//       return false;</span></span><br><span class="line">    <span class="comment">//   }</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = vals.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">        <span class="keyword">if</span>(vals[left]!= vals[right])</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        left++;</span><br><span class="line">        right--;</span><br><span class="line">      }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归模拟双指针</span></span><br><span class="line">    ListNode* left;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      left = head;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">traverse</span>(head);</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">traverse</span><span class="params">(ListNode* right)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(right == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">bool</span> res = <span class="built_in">traverse</span>(right-&gt;next);</span><br><span class="line">      <span class="comment">//后序遍历代码</span></span><br><span class="line">      res = res &amp;&amp; (right-&gt;val == left-&gt;val);</span><br><span class="line">      left = left-&gt;next;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//双指针 优化 为了秀而秀 秀nm呢</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* slow;</span><br><span class="line">      ListNode* fast;</span><br><span class="line">      slow = fast = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(fast){ <span class="comment">//奇数个元素</span></span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* left = head;</span><br><span class="line">      ListNode* right = <span class="built_in">reverse</span>(slow);</span><br><span class="line">      <span class="keyword">while</span>(right){</span><br><span class="line">        <span class="keyword">if</span>(left-&gt;val!=right-&gt;val)</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        left = left-&gt;next;</span><br><span class="line">        right = right-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    <span class="function">ListNode* <span class="title">reverse</span><span class="params">(ListNode* head)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span> || head-&gt;next == <span class="literal">nullptr</span>) <span class="keyword">return</span> head;</span><br><span class="line">      ListNode* last = <span class="built_in">reverse</span>(head-&gt;next);</span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      head-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>滑动窗口</title>
      <link href="/2022/03/15/hua-dong-chuang-kou/"/>
      <url>/2022/03/15/hua-dong-chuang-kou/</url>
      
        <content type="html"><![CDATA[<h2 id="滑动窗口模板"><a href="#滑动窗口模板" class="headerlink" title="滑动窗口模板"></a>滑动窗口模板</h2><p>框架</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滑动窗口算法框架 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slidingWindow</span><span class="params">(string s, string t)</span> </span>{</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c : t) need[c]++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> valid = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">        <span class="comment">// c 是将移入窗口的字符</span></span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        <span class="comment">// 右移窗口</span></span><br><span class="line">        right++;</span><br><span class="line">        <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*** debug 输出的位置 ***/</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"window: [%d, %d)\n"</span>, left, right);</span><br><span class="line">        <span class="comment">/********************/</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 判断左侧窗口是否要收缩</span></span><br><span class="line">        <span class="keyword">while</span> (window needs shrink) {</span><br><span class="line">            <span class="comment">// d 是将移出窗口的字符</span></span><br><span class="line">            <span class="keyword">char</span> d = s[left];</span><br><span class="line">            <span class="comment">// 左移窗口</span></span><br><span class="line">            left++;</span><br><span class="line">            <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">            ...</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="相关题目"><a href="#相关题目" class="headerlink" title="相关题目"></a>相关题目</h2><h3 id="76-最小覆盖子串-困难-滑滑滑"><a href="#76-最小覆盖子串-困难-滑滑滑" class="headerlink" title="76. 最小覆盖子串 困难 滑滑滑"></a><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. 最小覆盖子串</a> 困难 滑滑滑</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function">string <span class="title">minWindow</span><span class="params">(string s, string t)</span> </span>{</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c : t)</span><br><span class="line">      need[c]++;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> valid = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//记录最小覆盖字串的其实索引和长度</span></span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">0</span>, len = INT_MAX;</span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">      <span class="comment">// c是移入窗口的字符</span></span><br><span class="line">      <span class="keyword">char</span> c = s[right];</span><br><span class="line">      right++;</span><br><span class="line">      <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">      <span class="keyword">if</span> (need.<span class="built_in">count</span>(c)) {</span><br><span class="line">        window[c]++;</span><br><span class="line">        <span class="keyword">if</span> (window[c] == need[c])</span><br><span class="line">          valid++;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">//判断左窗口是否需要收缩</span></span><br><span class="line">      <span class="keyword">while</span> (valid == need.<span class="built_in">size</span>()) { <span class="comment">//窗口满足条件</span></span><br><span class="line">                                     <span class="comment">// 在这里更新最小覆盖子串</span></span><br><span class="line">        <span class="keyword">if</span> (right - left &lt; len) {</span><br><span class="line">          start = left;</span><br><span class="line">          len = right - left;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// d 是将移出窗口的字符</span></span><br><span class="line">        <span class="keyword">char</span> d = s[left];</span><br><span class="line">        <span class="comment">// 左移窗口</span></span><br><span class="line">        left++;</span><br><span class="line">        <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">        <span class="keyword">if</span> (need.<span class="built_in">count</span>(d)) {</span><br><span class="line">          <span class="keyword">if</span> (window[d] == need[d]) {</span><br><span class="line">            valid--;</span><br><span class="line">          }</span><br><span class="line">          window[d]--;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> len == INT_MAX ? <span class="string">""</span> : s.<span class="built_in">substr</span>(start, len);</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="567-字符串的排列-中等-滑滑滑"><a href="#567-字符串的排列-中等-滑滑滑" class="headerlink" title="567. 字符串的排列 中等 滑滑滑"></a><a href="https://leetcode-cn.com/problems/permutation-in-string/">567. 字符串的排列</a> 中等 滑滑滑</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkInclusion</span><span class="params">(string t, string s)</span> </span>{</span><br><span class="line">      unordered_map&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; window, need;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">char</span> c : t) need[c]++;</span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> valid = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(right &lt; s.<span class="built_in">size</span>()){</span><br><span class="line">        <span class="comment">//扩大 知道满足 window = need</span></span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        right++;</span><br><span class="line">        <span class="keyword">if</span>(need.<span class="built_in">count</span>(c)){</span><br><span class="line">          window[c]++;</span><br><span class="line">          <span class="keyword">if</span>(window[c] == need[c])</span><br><span class="line">            valid++;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//个数满足</span></span><br><span class="line">        <span class="keyword">while</span>(right-left&gt;=t.<span class="built_in">size</span>()){  <span class="comment">//缩减窗口到t的长度</span></span><br><span class="line">          <span class="keyword">if</span>(valid == need.<span class="built_in">size</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">          <span class="keyword">char</span> d = s[left];</span><br><span class="line">          left++;</span><br><span class="line">          <span class="keyword">if</span>(need.<span class="built_in">count</span>(d)){</span><br><span class="line">            <span class="keyword">if</span>(window[d] == need[d])</span><br><span class="line">              valid--;</span><br><span class="line">            window[d]--;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="438-找到字符串中所有字母异位词-中等-滑滑滑-接着滑"><a href="#438-找到字符串中所有字母异位词-中等-滑滑滑-接着滑" class="headerlink" title="438. 找到字符串中所有字母异位词 中等 滑滑滑 接着滑"></a><a href="https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/">438. 找到字符串中所有字母异位词</a> 中等 滑滑滑 接着滑</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//     map&lt;char, int&gt; checkAna;</span></span><br><span class="line"><span class="comment">//     map&lt;char, int&gt; checkAnb;</span></span><br><span class="line"><span class="comment">//     vector&lt;int&gt; findAnagrams(string s, string p) {</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; res;</span></span><br><span class="line"><span class="comment">//         int n = s.size(); </span></span><br><span class="line"><span class="comment">//         int nn = p.size();</span></span><br><span class="line"><span class="comment">//         if(isAnagrams("abc", "bca")){</span></span><br><span class="line"><span class="comment">//             cout&lt;&lt;"check"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;n-nn+1; i++){</span></span><br><span class="line"><span class="comment">//             cout&lt;&lt;s.substr(i, nn) &lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//             if(isAnagrams(s.substr(i, nn), p))</span></span><br><span class="line"><span class="comment">//                 res.push_back(i);</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return res;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">//     bool isAnagrams(string a, string b){</span></span><br><span class="line"><span class="comment">//         checkAna.clear();</span></span><br><span class="line"><span class="comment">//         checkAnb.clear();</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;a.size(); i++){</span></span><br><span class="line"><span class="comment">//             checkAna[a[i]]++;</span></span><br><span class="line"><span class="comment">//             checkAnb[b[i]]++;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         for(auto it = checkAna.begin(); it !=checkAna.end(); it++){</span></span><br><span class="line"><span class="comment">//             if(it-&gt;second != checkAnb[it-&gt;first])</span></span><br><span class="line"><span class="comment">//                 return 0;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return 1;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//     vector&lt;int&gt; findAnagrams(string s, string p) {</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; res;</span></span><br><span class="line"><span class="comment">//         int n = s.size(); </span></span><br><span class="line"><span class="comment">//         int nn = p.size();</span></span><br><span class="line"><span class="comment">//         if(n&lt;nn) return vector&lt;int&gt;();</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; ss(26);</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; pp(26);</span></span><br><span class="line"><span class="comment">//         //初始化保证窗口初始移动</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;nn; i++){</span></span><br><span class="line"><span class="comment">//             ss[s[i]-'a']++;</span></span><br><span class="line"><span class="comment">//             pp[p[i]-'a']++;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         if(ss == pp) res.push_back(0);</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;n-nn; i++){</span></span><br><span class="line"><span class="comment">//             ss[s[i]-'a']--;</span></span><br><span class="line"><span class="comment">//             ss[s[i+nn]-'a']++;</span></span><br><span class="line"><span class="comment">//             if(ss == pp) res.push_back(i+1);</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return res;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">findAnagrams</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">      vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">      unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">char</span> c : p) need[c]++;</span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>, valid = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        right++;</span><br><span class="line">        <span class="keyword">if</span>(need.<span class="built_in">count</span>(c)){</span><br><span class="line">          window[c]++;</span><br><span class="line">          <span class="keyword">if</span>(window[c] == need[c])</span><br><span class="line">            valid++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span>(right-left &gt;= p.<span class="built_in">size</span>()){</span><br><span class="line">          <span class="keyword">if</span>(valid == need.<span class="built_in">size</span>()) ans.<span class="built_in">push_back</span>(left);</span><br><span class="line">          <span class="keyword">char</span> d = s[left];</span><br><span class="line">          left++;</span><br><span class="line">          <span class="keyword">if</span>(need.<span class="built_in">count</span>(d)){</span><br><span class="line">            <span class="keyword">if</span>(need[d] == window[d])</span><br><span class="line">              valid--;</span><br><span class="line">            window[d]--;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="3-无重复字符的最长子串"><a href="#3-无重复字符的最长子串" class="headerlink" title="3. 无重复字符的最长子串"></a><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(string s)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; window;</span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">      <span class="keyword">char</span> c = s[right];</span><br><span class="line">      right++;</span><br><span class="line">      window[c]++;</span><br><span class="line">      <span class="keyword">while</span> (window[c] &gt; <span class="number">1</span>) { <span class="comment">//有重复就要从left++ 直到消除当前重复</span></span><br><span class="line">        <span class="keyword">char</span> d = s[left];</span><br><span class="line">        left++;</span><br><span class="line">        window[d]--;</span><br><span class="line">      }</span><br><span class="line">      ans = <span class="built_in">max</span>(ans, right - left);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//   int lengthOfLongestSubstring(string s) {</span></span><br><span class="line"><span class="comment">//     if (s.size() == 0)</span></span><br><span class="line"><span class="comment">//       return 0;</span></span><br><span class="line"><span class="comment">//     unordered_set&lt;char&gt; lookup;</span></span><br><span class="line"><span class="comment">//     int maxStr = 0;</span></span><br><span class="line"><span class="comment">//     int left = 0;</span></span><br><span class="line"><span class="comment">//     for (int i = 0; i &lt; s.size(); i++) {</span></span><br><span class="line"><span class="comment">//       while (lookup.find(s[i]) != lookup.end()) {</span></span><br><span class="line"><span class="comment">//         lookup.erase(s[left]);</span></span><br><span class="line"><span class="comment">//         left++;</span></span><br><span class="line"><span class="comment">//       }</span></span><br><span class="line"><span class="comment">//       maxStr = max(maxStr, i - left + 1);</span></span><br><span class="line"><span class="comment">//       lookup.insert(s[i]);</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">//     return maxStr;</span></span><br><span class="line"><span class="comment">//   }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line">  <span class="comment">//int lengthOfLongestSubstring(string s) {</span></span><br><span class="line">  <span class="comment">//  if (s.size() == 0) {</span></span><br><span class="line">  <span class="comment">//    return 0;</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  vector&lt;string&gt; ss;</span></span><br><span class="line">  <span class="comment">//  for (int i = 0; i &lt; s.size(); i++) {</span></span><br><span class="line">  <span class="comment">//    unordered_map&lt;char, int&gt; temp_map;</span></span><br><span class="line">  <span class="comment">//    for (int j = i; j &lt; s.size(); j++) {</span></span><br><span class="line">  <span class="comment">//      ++temp_map[s[j]];</span></span><br><span class="line">  <span class="comment">//      if (temp_map[s[j]] &gt; 1) {</span></span><br><span class="line">  <span class="comment">//        string sss = s.substr(i, j - i);</span></span><br><span class="line">  <span class="comment">//        ss.push_back(sss);</span></span><br><span class="line">  <span class="comment">//        break;</span></span><br><span class="line">  <span class="comment">//      }</span></span><br><span class="line">  <span class="comment">//      if (j == s.size() - 1) {</span></span><br><span class="line">  <span class="comment">//        string sss = s.substr(i, s.size() - i);</span></span><br><span class="line">  <span class="comment">//        ss.push_back(sss);</span></span><br><span class="line">  <span class="comment">//      }</span></span><br><span class="line">  <span class="comment">//    }</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  if (ss.size() == 0) {</span></span><br><span class="line">  <span class="comment">//    return s.size();</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  sort(ss.begin(), ss.end(),</span></span><br><span class="line">  <span class="comment">//       [](string &amp;a, string &amp;b) { return a.size() &gt; b.size(); });</span></span><br><span class="line">  <span class="comment">//  return ss[0].size();</span></span><br><span class="line">  <span class="comment">//}</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="2024-考试的最大困扰度"><a href="#2024-考试的最大困扰度" class="headerlink" title="2024. 考试的最大困扰度"></a><a href="https://leetcode-cn.com/problems/maximize-the-confusion-of-an-exam/">2024. 考试的最大困扰度</a></h3><p>一位老师正在出一场由 <code>n</code> 道判断题构成的考试，每道题的答案为 true （用 <code>'T'</code> 表示）或者 false （用 <code>'F'</code> 表示）。老师想增加学生对自己做出答案的不确定性，方法是 <strong>最大化</strong> 有 <strong>连续相同</strong> 结果的题数。（也就是连续出现 true 或者连续出现 false）。</p><p>给你一个字符串 <code>answerKey</code> ，其中 <code>answerKey[i]</code> 是第 <code>i</code> 个问题的正确结果。除此以外，还给你一个整数 <code>k</code> ，表示你能进行以下操作的最多次数：</p><ul><li>每次操作中，将问题的正确答案改为 <code>'T'</code> 或者 <code>'F'</code> （也就是将 <code>answerKey[i]</code> 改为 <code>'T'</code> 或者 <code>'F'</code> ）。</li></ul><p>请你返回在不超过 <code>k</code> 次操作的情况下，<strong>最大</strong> 连续 <code>'T'</code> 或者 <code>'F'</code> 的数目。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：answerKey = "TTFF", k = 2</span><br><span class="line">输出：4</span><br><span class="line">解释：我们可以将两个 'F' 都变为 'T' ，得到 answerKey = "TTTT" 。</span><br><span class="line">总共有四个连续的 'T' 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：answerKey = "TFFT", k = 1</span><br><span class="line">输出：3</span><br><span class="line">解释：我们可以将最前面的 'T' 换成 'F' ，得到 answerKey = "FFFT" 。</span><br><span class="line">或者，我们可以将第二个 'T' 换成 'F' ，得到 answerKey = "TFFF" 。</span><br><span class="line">两种情况下，都有三个连续的 'F' 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>用框架 但需要使用额外的 On   90ms 10mb</li><li>官方题解 有点类似分治的思想 以T和F都当作最大值基准算一遍 取结果最大值  30ms 10mb</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>框架  90ms 10mb</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//滑动窗口 框架</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxConsecutiveAnswers</span><span class="params">(string answerKey, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = answerKey.<span class="built_in">size</span>();</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; window;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            <span class="keyword">char</span> c = answerKey[right];</span><br><span class="line">            right++;</span><br><span class="line">            window[c]++;</span><br><span class="line">            <span class="comment">//窗口缩小</span></span><br><span class="line">            <span class="keyword">while</span>(window[<span class="string">'F'</span>]&gt; k &amp;&amp; window[<span class="string">'T'</span>]&gt;k){</span><br><span class="line">                <span class="keyword">char</span> d = answerKey[left];</span><br><span class="line">                left++;</span><br><span class="line">                window[d]--;</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(window[<span class="string">'F'</span>]+window[<span class="string">'T'</span>], ans);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>官方 30ms 10mb</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//ch 假设的最大值字母</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxConsecutiveChar</span><span class="params">(string&amp; answerKey, <span class="keyword">int</span> k, <span class="keyword">char</span> ch)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = answerKey.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//sum 为另一种 杂质字母的数量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>, sum = <span class="number">0</span>; right &lt; n; right++) {</span><br><span class="line">            sum += answerKey[right] != ch;</span><br><span class="line">            <span class="keyword">while</span> (sum &gt; k) {</span><br><span class="line">                <span class="comment">//不断left++ 减小另一个字母数量</span></span><br><span class="line">                sum -= answerKey[left++] != ch;</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, right - left + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxConsecutiveAnswers</span><span class="params">(string answerKey, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">maxConsecutiveChar</span>(answerKey, k, <span class="string">'T'</span>),</span><br><span class="line">                   <span class="built_in">maxConsecutiveChar</span>(answerKey, k, <span class="string">'F'</span>));</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="1004-最大连续1的个数-III"><a href="#1004-最大连续1的个数-III" class="headerlink" title="1004. 最大连续1的个数 III"></a><a href="https://leetcode-cn.com/problems/max-consecutive-ones-iii/">1004. 最大连续1的个数 III</a></h3><p>难度中等393</p><p>给定一个二进制数组 <code>nums</code> 和一个整数 <code>k</code>，如果可以翻转最多 <code>k</code> 个 <code>0</code> ，则返回 <em>数组中连续 <code>1</code> 的最大个数</em> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,1,0,0,0,1,1,1,1,0], K = 2</span><br><span class="line">输出：6</span><br><span class="line">解释：[1,1,1,0,0,1,1,1,1,1,1]</span><br><span class="line">粗体数字从 0 翻转到 1，最长的子数组长度为 6。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3</span><br><span class="line">输出：10</span><br><span class="line">解释：[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]</span><br><span class="line">粗体数字从 0 翻转到 1，最长的子数组长度为 10。</span><br></pre></td></tr></tbody></table></figure><p>思路</p><p>滑动窗口是一个思想 重点在于窗口指针的移动 </p><p>所以 哈希只是通用性比较强 在有的情况下是可以替换乃至省去的</p><p>代码</p><p>模板</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">longestOnes</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; window;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            <span class="keyword">int</span> c = nums[right];</span><br><span class="line">            window[c]++;</span><br><span class="line">            right++;</span><br><span class="line">            <span class="keyword">while</span>(window[<span class="number">0</span>]&gt;k){</span><br><span class="line">                <span class="keyword">int</span> d = nums[left];</span><br><span class="line">                left++;</span><br><span class="line">                window[d]--;</span><br><span class="line">            }</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, window[<span class="number">1</span>] + window[<span class="number">0</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>空间优化版本：只需要维护0的个数就可以了</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">longestOnes</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> K)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>, zeros = <span class="number">0</span>, left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> right = <span class="number">0</span>; right &lt; A.<span class="built_in">size</span>(); ++right) {</span><br><span class="line">            <span class="keyword">if</span> (A[right] == <span class="number">0</span>) ++zeros;</span><br><span class="line">            <span class="keyword">while</span> (zeros &gt; K) {</span><br><span class="line">                <span class="keyword">if</span> (A[left++] == <span class="number">0</span>) --zeros;</span><br><span class="line">            }</span><br><span class="line">            res = <span class="built_in">max</span>(res, right - left + <span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="424-替换后的最长重复字符"><a href="#424-替换后的最长重复字符" class="headerlink" title="424. 替换后的最长重复字符"></a><a href="https://leetcode-cn.com/problems/longest-repeating-character-replacement/">424. 替换后的最长重复字符</a></h3><p>难度中等576</p><p>给你一个字符串 <code>s</code> 和一个整数 <code>k</code> 。你可以选择字符串中的任一字符，并将其更改为任何其他大写英文字符。该操作最多可执行 <code>k</code> 次。</p><p>在执行上述操作后，返回包含相同字母的最长子字符串的长度。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "ABAB", k = 2</span><br><span class="line">输出：4</span><br><span class="line">解释：用两个'A'替换为两个'B',反之亦然。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "AABABBA", k = 1</span><br><span class="line">输出：4</span><br><span class="line">解释：</span><br><span class="line">将中间的一个'A'替换为'B',字符串变为 "AABBBBA"。</span><br><span class="line">子串 "BBBB" 有最长重复字母, 答案为 4。</span><br></pre></td></tr></tbody></table></figure><p>思路</p><p>滑动窗口融会贯通，比如这个题 就没想到怎么用map滑</p><p>代码</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">characterReplacement</span><span class="params">(string s, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">num</span><span class="params">(<span class="number">26</span>)</span></span>;</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (right &lt; n) {</span><br><span class="line">            num[s[right] - <span class="string">'A'</span>]++;</span><br><span class="line">            <span class="comment">//maxn维护窗口最多元素的个数 以进行非最多元素个数的统计判断</span></span><br><span class="line">            maxn = <span class="built_in">max</span>(maxn, num[s[right] - <span class="string">'A'</span>]);</span><br><span class="line">            <span class="keyword">if</span> (right - left + <span class="number">1</span> - maxn &gt; k) {</span><br><span class="line">                num[s[left] - <span class="string">'A'</span>]--;</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">            right++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> right - left;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-008-和大于等于-target-的最短子数组"><a href="#剑指-Offer-II-008-和大于等于-target-的最短子数组" class="headerlink" title="剑指 Offer II 008. 和大于等于 target 的最短子数组"></a><a href="https://leetcode-cn.com/problems/2VG8Kg/">剑指 Offer II 008. 和大于等于 target 的最短子数组</a></h3><p>难度中等53</p><p>给定一个含有 <code>n</code> 个正整数的数组和一个正整数 <code>target</code> <strong>。</strong></p><p>找出该数组中满足其和 <code>≥ target</code> 的长度最小的 <strong>连续子数组</strong> <code>[numsl, numsl+1, ..., numsr-1, numsr]</code> ，并返回其长度<strong>。</strong>如果不存在符合条件的子数组，返回 <code>0</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 7, nums = [2,3,1,2,4,3]</span><br><span class="line">输出：2</span><br><span class="line">解释：子数组 [4,3] 是该条件下的长度最小的子数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 4, nums = [1,4,4]</span><br><span class="line">输出：1</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 11, nums = [1,1,1,1,1,1,1,1]</span><br><span class="line">输出：0</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>滑动窗口 模板大概还是那个模板 两个while比较好理解</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minSubArrayLen</span><span class="params">(<span class="keyword">int</span> target, vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">int</span> ans = INT_MAX;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            sum += nums[right];</span><br><span class="line">            right++;</span><br><span class="line">            <span class="keyword">while</span>(sum&gt;=target) {</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, right - left);</span><br><span class="line">                sum -= nums[left];</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans == INT_MAX ? <span class="number">0</span> : ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-009-乘积小于-K-的子数组"><a href="#剑指-Offer-II-009-乘积小于-K-的子数组" class="headerlink" title="剑指 Offer II 009. 乘积小于 K 的子数组"></a><a href="https://leetcode-cn.com/problems/ZVAVXX/">剑指 Offer II 009. 乘积小于 K 的子数组</a></h3><p>难度中等63</p><p>给定一个正整数数组 <code>nums</code>和整数 <code>k</code> ，请找出该数组内乘积小于 <code>k</code> 的连续的子数组的个数。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [10,5,2,6], k = 100</span><br><span class="line">输出: 8</span><br><span class="line">解释: 8 个乘积小于 100 的子数组分别为: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]。</span><br><span class="line">需要注意的是 [10,5,2] 并不是乘积小于100的子数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,3], k = 0</span><br><span class="line">输出: 0</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li><p>这道题 正确解法 应该是滑动窗口</p><blockquote><p><code>重点 right - left + 1</code></p><p>比如某次遍历符合题意的子数组为 ABCX，那么在该条件下符合条件的有X，CX，BCX，ABCX共四个（可以进行多个例子，发现个数符合right-left+1）</p></blockquote></li><li><p>但是 做这道题的过程中 感觉这个 不跳步的回溯 挺有意思 外层循环backtrack </p><p>其实 好像相当于两层for循环了 卧槽 我真是垃圾</p><p><u><code>其实 也好像有点类似n叉树 有向图的遍历吧？</code></u><a href="https://qianxunslimg.github.io/2022/03/15/tu-lun/">图论 | qianxunslimgのblog</a></p></li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><p>正确的滑动窗口解法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSubarrayProductLessThanK</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> multi = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(k &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right &lt; n){</span><br><span class="line">            multi*=nums[right];</span><br><span class="line">            <span class="keyword">while</span>(multi&gt;=k){</span><br><span class="line">                multi/=nums[left];</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">            ans += (right - left + <span class="number">1</span>); <span class="comment">//注意 每次+的是窗口的长度</span></span><br><span class="line">            right++;  <span class="comment">//这个写在前面也是可以的 只是right - left 不加1</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>回溯（假）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="comment">//vector&lt;vector&lt;int&gt;&gt; all;</span></span><br><span class="line">    <span class="comment">//vector&lt;int&gt; path;</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSubarrayProductLessThanK</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="built_in">backtrack</span>(nums, i, <span class="number">1</span>, k);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// cout&lt;&lt;all.size()&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// for(int i = 0; i&lt;all.size(); i++){</span></span><br><span class="line">        <span class="comment">//     for(int j = 0; j&lt;all[i].size(); j++){</span></span><br><span class="line">        <span class="comment">//         cout&lt;&lt;all[i][j]&lt;&lt;" ";</span></span><br><span class="line">        <span class="comment">//     }</span></span><br><span class="line">        <span class="comment">//     cout&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// }</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> preK, <span class="keyword">int</span> k)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;=nums.<span class="built_in">size</span>() || preK&gt;=k) <span class="keyword">return</span>;</span><br><span class="line">        preK*=nums[startIndex];</span><br><span class="line">        <span class="comment">//path.push_back(nums[startIndex]);</span></span><br><span class="line">        <span class="keyword">if</span>(preK&lt;k){</span><br><span class="line">          ans++;  </span><br><span class="line">          <span class="comment">//all.push_back(path);</span></span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, startIndex+<span class="number">1</span>, preK, k);</span><br><span class="line">        preK /= nums[startIndex];</span><br><span class="line">        <span class="comment">//path.pop_back();</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回溯</title>
      <link href="/2022/03/15/hui-su/"/>
      <url>/2022/03/15/hui-su/</url>
      
        <content type="html"><![CDATA[<h1 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h1><h3 id="回溯模板"><a href="#回溯模板" class="headerlink" title="回溯模板"></a>回溯模板</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(参数)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (终止条件) {</span><br><span class="line">        存放结果;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (选择：本层集合中元素（树中节点孩子的数量就是集合的大小）) {</span><br><span class="line">        处理节点;</span><br><span class="line">        <span class="built_in">backtracking</span>(路径，选择列表); <span class="comment">// 递归</span></span><br><span class="line">        回溯，撤销处理结果</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="1-组合问题"><a href="#1-组合问题" class="headerlink" title="1. 组合问题"></a>1. 组合问题</h2><ol><li>组合问题 ==每次for都是从startIndex开始==</li><li>每个元素 用一次和用多次体现在 ==backtrack(i+1)==用一次还是==backtrack(i)用多次==上</li><li>组合问题==不需要used数组==，去重也不需要used数组那个判断</li></ol><h3 id="77-n元素下的k元素组合"><a href="#77-n元素下的k元素组合" class="headerlink" title="77. n元素下的k元素组合"></a><a href="https://leetcode-cn.com/problems/combinations/">77. n元素下的k元素组合</a></h3><p>给定两个整数 <code>n</code> 和 <code>k</code>，返回范围 <code>[1, n]</code> 中所有可能的 <code>k</code> 个数的组合。</p><p>你可以按 <strong>任何顺序</strong> 返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, k = 2</span><br><span class="line">输出：</span><br><span class="line">[</span><br><span class="line">  [2,4],</span><br><span class="line">  [3,4],</span><br><span class="line">  [2,3],</span><br><span class="line">  [1,2],</span><br><span class="line">  [1,3],</span><br><span class="line">  [1,4],</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 1, k = 1</span><br><span class="line">输出：[[1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><ol><li>按回溯模板 直接写 </li><li>注意剪枝操作， 超过k个元素不再进入递归 24ms-&gt;8ms</li></ol><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combine</span>(<span class="keyword">int</span> n, <span class="keyword">int</span> k) {</span><br><span class="line">        <span class="keyword">this</span>-&gt;n = n;</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k;</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        all.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtrack</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(<span class="keyword">int</span> num)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(path.<span class="built_in">size</span>() == k){</span><br><span class="line">            all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"><span class="comment">//进行剪枝， 超过k个元素不再进入递归 24ms-&gt;8ms</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = num; i&lt;=n - (k-path.<span class="built_in">size</span>()) + <span class="number">1</span>; i++){</span><br><span class="line">            path.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="built_in">backtrack</span>(i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="39-组合总和"><a href="#39-组合总和" class="headerlink" title="39. 组合总和"></a><a href="https://leetcode-cn.com/problems/combination-sum/">39. 组合总和</a></h3><p>给你一个 <strong>无重复元素</strong> 的整数数组 <code>candidates</code> 和一个目标整数 <code>target</code> ，找出 <code>candidates</code> 中可以使数字和为目标数 <code>target</code> 的 <em>所有</em> <strong>不同组合</strong> ，并以列表形式返回。你可以按 <strong>任意顺序</strong> 返回这些组合。</p><p><code>candidates</code> 中的 <strong>同一个</strong> 数字可以 <strong>无限制重复被选取</strong> 。如果至少一个数字的被选数量不同，则两种组合是不同的。 </p><p>对于给定的输入，保证和为 <code>target</code> 的不同组合数少于 <code>150</code> 个。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：candidates = [2,3,6,7], target = 7</span><br><span class="line">输出：[[2,2,3],[7]]</span><br><span class="line">解释：</span><br><span class="line">2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。</span><br><span class="line">7 也是一个候选， 7 = 7 。</span><br><span class="line">仅有这两种组合。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [2,3,5], target = 8</span><br><span class="line">输出: [[2,2,2,2],[2,3,3],[3,5]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h5><ol><li>注意这个题 <code>单个元素是可以重复使用的</code> 表现在代码上 for循环内 <code>backtrack是i 而不是i+1</code></li><li>sum 和 target 的判断逻辑注意下</li></ol><h5 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> index, <span class="keyword">int</span> target, <span class="keyword">int</span> sum)</span></span>{</span><br><span class="line">      <span class="comment">//这里sum和target的判断逻辑注意下</span></span><br><span class="line">      <span class="keyword">if</span>(sum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">if</span>(sum == target) {</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path); </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = index; i&lt;candidates.<span class="built_in">size</span>(); i++){</span><br><span class="line">        path.<span class="built_in">push_back</span>(candidates[i]);</span><br><span class="line">        <span class="built_in">backtracking</span>(candidates, i, target, sum + candidates[i]); <span class="comment">//注意 这里的i不加1 不然没有数重复的</span></span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target) {</span><br><span class="line">      <span class="built_in">backtracking</span>(candidates,<span class="number">0</span>, target, <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="216-组合总和-III"><a href="#216-组合总和-III" class="headerlink" title="216. 组合总和 III"></a><a href="https://leetcode-cn.com/problems/combination-sum-iii/">216. 组合总和 III</a></h3><p>找出所有相加之和为 <code>n</code> 的 <code>k</code> 个数的组合，且满足下列条件：</p><ul><li>只使用数字1到9</li><li>每个数字 <strong>最多使用一次</strong></li></ul><p>返回 <em>所有可能的有效组合的列表</em> 。该列表不能包含相同的组合两次，组合可以以任何顺序返回。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入: k = 3, n = 7</span><br><span class="line">输出: [[1,2,4]]</span><br><span class="line">解释:</span><br><span class="line">1 + 2 + 4 = 7</span><br><span class="line">没有其他符合的组合了。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入: k = 3, n = 9</span><br><span class="line">输出: [[1,2,6], [1,3,5], [2,3,4]]</span><br><span class="line">解释:</span><br><span class="line">1 + 2 + 6 = 9</span><br><span class="line">1 + 3 + 5 = 9</span><br><span class="line">2 + 3 + 4 = 9</span><br><span class="line">没有其他符合的组合了。</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h5><ol><li>结束终止满足两个条件之一 <code>nowSum &gt;= n || path.size() == k</code>即可  </li><li>满足条件的结果  <code>nowSum == n &amp;&amp; path.size() == k</code></li></ol><h5 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    <span class="keyword">int</span> k,n ;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum3</span>(<span class="keyword">int</span> k, <span class="keyword">int</span> n) {</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k; </span><br><span class="line">        <span class="keyword">this</span>-&gt;n = n;</span><br><span class="line">        <span class="built_in">backtrack</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> nowSum)</span></span>{</span><br><span class="line">        <span class="comment">//if(cur&gt;9) return;  //注意这句不能要 不然会 9 45判错 最后cur 10 直接返回掉</span></span><br><span class="line">        <span class="keyword">if</span>(nowSum &gt;= n || path.<span class="built_in">size</span>() == k){</span><br><span class="line">            <span class="keyword">if</span>(nowSum == n &amp;&amp; path.<span class="built_in">size</span>() == k)</span><br><span class="line">                all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = cur; i&lt;=<span class="number">9</span>; i++){</span><br><span class="line">            path.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="built_in">backtrack</span>(i+<span class="number">1</span>, nowSum + i);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="40-组合总和-II"><a href="#40-组合总和-II" class="headerlink" title="40. 组合总和 II"></a><a href="https://leetcode-cn.com/problems/combination-sum-ii/">40. 组合总和 II</a></h3><p>给定一个候选人编号的集合 <code>candidates</code> 和一个目标数 <code>target</code> ，找出 <code>candidates</code> 中所有可以使数字和为 <code>target</code> 的组合。</p><p><code>candidates</code> 中的每个数字在每个组合中只能使用 <strong>一次</strong> 。</p><p><strong>注意：</strong>解集不能包含重复的组合。 </p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [10,1,2,7,6,1,5], target = 8,</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">[1,1,6],</span><br><span class="line">[1,2,5],</span><br><span class="line">[1,7],</span><br><span class="line">[2,6]</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [2,5,2,1,2], target = 5,</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">[1,2,2],</span><br><span class="line">[5]</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h5><ol><li>结束终止满足两个条件之一 <code>nowSum &gt;= n || path.size() == k</code>即可  </li><li>满足条件的结果  <code>nowSum == n &amp;&amp; path.size() == k</code></li></ol><h5 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//去重操作 数组中包含重复元素 所以要去重</span></span><br><span class="line">    <span class="comment">//注意 并不需要used数组 used数组只在排列中用到?即(for(int i = 0)的时候用到)</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum2</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target) {</span><br><span class="line">        <span class="comment">//排序让相同的元素挨着</span></span><br><span class="line">        <span class="built_in">sort</span>(candidates.<span class="built_in">begin</span>(), candidates.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">backtrack</span>(candidates, target, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target, <span class="keyword">int</span> curIndex, <span class="keyword">int</span> nowSum)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(nowSum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(nowSum == target){</span><br><span class="line">            all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = curIndex; i&lt;candidates.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="comment">// 经典的去重操作 全排列中也用到了</span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;curIndex &amp;&amp; candidates[i] == candidates[i<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(candidates[i]);</span><br><span class="line">            <span class="comment">//这里是i+1，每个数字在每个组合中只能使用一次</span></span><br><span class="line">            <span class="built_in">backtrack</span>(candidates, target, i+<span class="number">1</span>,  nowSum+candidates[i]);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="377-组合总和-Ⅳ"><a href="#377-组合总和-Ⅳ" class="headerlink" title="377. 组合总和 Ⅳ"></a><a href="https://leetcode-cn.com/problems/combination-sum-iv/">377. 组合总和 Ⅳ</a></h4><p>给你一个由 <strong>不同</strong> 整数组成的数组 <code>nums</code> ，和一个目标整数 <code>target</code> 。请你从 <code>nums</code> 中找出并返回总和为 <code>target</code> 的元素组合的个数。</p><p>题目数据保证答案符合 32 位整数范围。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3], target = 4</span><br><span class="line">输出：7</span><br><span class="line">解释：</span><br><span class="line">所有可能的组合为：</span><br><span class="line">(1, 1, 1, 1)</span><br><span class="line">(1, 1, 2)</span><br><span class="line">(1, 2, 1)</span><br><span class="line">(1, 3)</span><br><span class="line">(2, 1, 1)</span><br><span class="line">(2, 2)</span><br><span class="line">(3, 1)</span><br><span class="line">请注意，顺序不同的序列被视作不同的组合。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [9], target = 3</span><br><span class="line">输出：0</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h5><ol><li>名为组合 实为排列 解法dp</li><li>回溯超时 dp解答</li><li>记忆化dfs 其实就是dp了吧</li></ol><h5 id="暴力回溯代码"><a href="#暴力回溯代码" class="headerlink" title="暴力回溯代码"></a>暴力回溯代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, <span class="number">0</span>, target);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> nowSum, <span class="keyword">int</span> target)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(nowSum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(nowSum == target){</span><br><span class="line">            ans++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">      <span class="comment">//可以反向 就是排列了</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="built_in">backtrack</span>(nums, nowSum+nums[i], target);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="记忆化dfs"><a href="#记忆化dfs" class="headerlink" title="记忆化dfs"></a>记忆化dfs</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(nums, target);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//备忘录，保存每层递归的计算结果，用于实现记忆化。</span></span><br><span class="line">    unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; memo;</span><br><span class="line">    <span class="comment">//dfs(target)的定义： 用nums中的元素凑成总和为target（每个元素可以使用多次），用多少中凑法。</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(target == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(target &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(memo.<span class="built_in">count</span>(target) == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> memo[target];</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            res += <span class="built_in">dfs</span>(nums, target - nums[i]);</span><br><span class="line">        }</span><br><span class="line">        memo[target] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="dp代码"><a href="#dp代码" class="headerlink" title="dp代码"></a>dp代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="comment">//使用dp数组，dp[i]代表组合数为i时使用nums中的数能组成的组合数的个数</span></span><br><span class="line">        <span class="comment">//dp[i]=dp[i-nums[0]]+dp[i-nums[1]]+dp[i=nums[2]]+...</span></span><br><span class="line">        <span class="comment">//举个例子比如nums=[1,3,4],target=7;</span></span><br><span class="line">        <span class="comment">//dp[7]=dp[6]+dp[4]+dp[3]</span></span><br><span class="line">        <span class="comment">//其实就是说7的组合数可以由三部分组成，1和dp[6]，3和dp[4],4和dp[3];</span></span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>&gt; <span class="title">dp</span><span class="params">(target+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="comment">//是为了算上自己的情况，比如dp[1]可以由dp【0】和1这个数的这种情况组成。</span></span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=target; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> num : nums){</span><br><span class="line">                <span class="comment">//dp用int的话 有一个很傻逼的越界，需要 &amp;&amp; dp[i - num] &lt; INT_MAX - dp[i]</span></span><br><span class="line">                <span class="keyword">if</span>(i&gt;=num)  </span><br><span class="line">                    dp[i] += dp[i-num];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[target];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="131-分割回文串-比较难"><a href="#131-分割回文串-比较难" class="headerlink" title="131. 分割回文串  比较难"></a><a href="https://leetcode-cn.com/problems/palindrome-partitioning/">131. 分割回文串  比较难</a></h3><p>难度中等1062收藏分享切换为英文接收动态反馈</p><p>给你一个字符串 <code>s</code>，请你将 <code>s</code> 分割成一些子串，使每个子串都是 <strong>回文串</strong> 。返回 <code>s</code> 所有可能的分割方案。</p><p><strong>回文串</strong> 是正着读和反着读都一样的字符串。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "aab"</span><br><span class="line">输出：[["a","a","b"],["aa","b"]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "a"</span><br><span class="line">输出：[["a"]]</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;vector&lt;string&gt;&gt; result;</span><br><span class="line">    vector&lt;string&gt; path; <span class="comment">// 放已经回文的子串</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtracking</span> <span class="params">(<span class="keyword">const</span> string&amp; s, <span class="keyword">int</span> startIndex)</span> </span>{</span><br><span class="line">        <span class="comment">// 如果起始位置已经大于s的大小，说明已经找到了一组分割方案了</span></span><br><span class="line">        <span class="keyword">if</span> (startIndex &gt;= s.<span class="built_in">size</span>()) {</span><br><span class="line">            result.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = startIndex; i &lt; s.<span class="built_in">size</span>(); i++) {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isPalindrome</span>(s, startIndex, i)) {   <span class="comment">// 是回文子串</span></span><br><span class="line">                <span class="comment">// 获取[startIndex,i]在s中的子串</span></span><br><span class="line">                string str = s.<span class="built_in">substr</span>(startIndex, i - startIndex + <span class="number">1</span>);</span><br><span class="line">                path.<span class="built_in">push_back</span>(str);</span><br><span class="line">            } <span class="keyword">else</span> {                                <span class="comment">// 不是回文，跳过</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">backtracking</span>(s, i + <span class="number">1</span>); <span class="comment">// 寻找i+1为起始位置的子串</span></span><br><span class="line">            path.<span class="built_in">pop_back</span>(); <span class="comment">// 回溯过程，弹出本次已经填在的子串</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">const</span> string&amp; s, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start, j = end; i &lt; j; i++, j--) {</span><br><span class="line">            <span class="keyword">if</span> (s[i] != s[j]) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;string&gt;&gt; <span class="built_in">partition</span>(string s) {</span><br><span class="line">        result.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtracking</span>(s, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="93-复原-IP-地址-虾皮字节-很难"><a href="#93-复原-IP-地址-虾皮字节-很难" class="headerlink" title="93. 复原 IP 地址  虾皮字节  很难"></a><a href="https://leetcode-cn.com/problems/restore-ip-addresses/">93. 复原 IP 地址  虾皮字节  很难</a></h3><p>难度中等846收藏分享切换为英文接收动态反馈</p><p><strong>有效 IP 地址</strong> 正好由四个整数（每个整数位于 <code>0</code> 到 <code>255</code> 之间组成，且不能含有前导 <code>0</code>），整数之间用 <code>'.'</code> 分隔。</p><ul><li>例如：<code>"0.1.2.201"</code> 和<code> "192.168.1.1"</code> 是 <strong>有效</strong> IP 地址，但是 <code>"0.011.255.245"</code>、<code>"192.168.1.312"</code> 和 <code>"192.168@1.1"</code> 是 <strong>无效</strong> IP 地址。</li></ul><p>给定一个只包含数字的字符串 <code>s</code> ，用以表示一个 IP 地址，返回所有可能的<strong>有效 IP 地址</strong>，这些地址可以通过在 <code>s</code> 中插入 <code>'.'</code> 来形成。你 <strong>不能</strong> 重新排序或删除 <code>s</code> 中的任何数字。你可以按 <strong>任何</strong> 顺序返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "25525511135"</span><br><span class="line">输出：["255.255.11.135","255.255.111.35"]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "0000"</span><br><span class="line">输出：["0.0.0.0"]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "101023"</span><br><span class="line">输出：["1.0.10.23","1.0.102.3","10.1.0.23","10.10.2.3","101.0.2.3"]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>看代码</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;string&gt; result;<span class="comment">// 记录结果</span></span><br><span class="line">    <span class="comment">// startIndex: 搜索的起始位置，pointNum:添加逗点的数量</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(string&amp; s, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> pointNum)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (pointNum == <span class="number">3</span>) { <span class="comment">// 逗点数量为3时，分隔结束</span></span><br><span class="line">            <span class="comment">// 判断第四段子字符串是否合法，如果合法就放进result中</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isValid</span>(s, startIndex, s.<span class="built_in">size</span>() - <span class="number">1</span>)) {</span><br><span class="line">                result.<span class="built_in">push_back</span>(s);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = startIndex; i &lt; s.<span class="built_in">size</span>(); i++) {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isValid</span>(s, startIndex, i)) { <span class="comment">// 判断 [startIndex,i] 这个区间的子串是否合法</span></span><br><span class="line">                s.<span class="built_in">insert</span>(s.<span class="built_in">begin</span>() + i + <span class="number">1</span> , <span class="string">'.'</span>);  <span class="comment">// 在i的后面插入一个逗点</span></span><br><span class="line">                pointNum++;</span><br><span class="line">                <span class="built_in">backtracking</span>(s, i + <span class="number">2</span>, pointNum);   <span class="comment">// 插入逗点之后下一个子串的起始位置为i+2</span></span><br><span class="line">                pointNum--;                         <span class="comment">// 回溯</span></span><br><span class="line">                s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>() + i + <span class="number">1</span>);         <span class="comment">// 回溯删掉逗点</span></span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">break</span>; <span class="comment">// 不合法，直接结束本层循环</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 判断字符串s在左闭又闭区间[start, end]所组成的数字是否合法</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValid</span><span class="params">(<span class="keyword">const</span> string&amp; s, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (start &gt; end) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (s[start] == <span class="string">'0'</span> &amp;&amp; start != end) { <span class="comment">// 0开头的数字不合法</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= end; i++) {</span><br><span class="line">            <span class="keyword">if</span> (s[i] &gt; <span class="string">'9'</span> || s[i] &lt; <span class="string">'0'</span>) { <span class="comment">// 遇到非数字字符不合法</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            num = num * <span class="number">10</span> + (s[i] - <span class="string">'0'</span>);</span><br><span class="line">            <span class="keyword">if</span> (num &gt; <span class="number">255</span>) { <span class="comment">// 如果大于255了不合法</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">restoreIpAddresses</span><span class="params">(string s)</span> </span>{</span><br><span class="line">        result.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">size</span>() &gt; <span class="number">12</span>) <span class="keyword">return</span> result; <span class="comment">// 算是剪枝了</span></span><br><span class="line">        <span class="built_in">backtracking</span>(s, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="78-子集"><a href="#78-子集" class="headerlink" title="78. 子集"></a><a href="https://leetcode-cn.com/problems/subsets/">78. 子集</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=78">labuladong 题解</a><a href="https://leetcode-cn.com/problems/subsets/#">思路</a></p><p>难度中等1556</p><p>给你一个整数数组 <code>nums</code> ，数组中的元素 <strong>互不相同</strong> 。返回该数组所有可能的子集（幂集）。</p><p>解集 <strong>不能</strong> 包含重复的子集。你可以按 <strong>任意顺序</strong> 返回解集。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0]</span><br><span class="line">输出：[[],[0]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>简单回溯</p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">subsets</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);<span class="comment">//空的先压入</span></span><br><span class="line">        <span class="built_in">backTrack</span>(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backTrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;=nums.<span class="built_in">size</span>()) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIndex; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="built_in">backTrack</span>(nums, i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="90-子集-II"><a href="#90-子集-II" class="headerlink" title="90. 子集 II"></a><a href="https://leetcode-cn.com/problems/subsets-ii/">90. 子集 II</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=90">labuladong 题解</a></p><p>难度中等783收藏分享切换为英文接收动态反馈</p><p>给你一个整数数组 <code>nums</code> ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。</p><p>解集 <strong>不能</strong> 包含重复的子集。返回的解集中，子集可以按 <strong>任意顺序</strong> 排列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,2]</span><br><span class="line">输出：[[],[1],[1,2],[1,2,2],[2],[2,2]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0]</span><br><span class="line">输出：[[],[0]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><p>含重复元素的组合去重</p><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">subsetsWithDup</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">backTrack</span>(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backTrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;nums.<span class="built_in">size</span>()) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIndex; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(i&gt;startIndex &amp;&amp; nums[i] == nums[i<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="built_in">backTrack</span>(nums, i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="491-递增子序列-不能sort的去重"><a href="#491-递增子序列-不能sort的去重" class="headerlink" title="491. 递增子序列  不能sort的去重"></a><a href="https://leetcode-cn.com/problems/increasing-subsequences/">491. 递增子序列  不能sort的去重</a></h3><p>难度中等412收藏分享切换为英文接收动态反馈</p><p>给你一个整数数组 <code>nums</code> ，找出并返回所有该数组中不同的递增子序列，递增子序列中 <strong>至少有两个元素</strong> 。你可以按 <strong>任意顺序</strong> 返回答案。</p><p>数组中可能含有重复元素，如出现两个整数相等，也可以视作递增序列的一种特殊情况。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,6,7,7]</span><br><span class="line">输出：[[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,4,3,2,1]</span><br><span class="line">输出：[[4,4]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h4><ol><li>去重的产生 比 4 7 6 7 数组，不去重的话 4 7 会出现两次，但是去重不能用sort因为破坏原排列的顺序</li><li>应考虑用哈希 或者其他方式去重 最后去重的话 没有起到剪枝效果</li></ol><h4 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h4><ol><li>最终暴力去重 sort-&gt;unique-&gt;erase</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">findSubsequences</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backTrack</span>(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">        ans.<span class="built_in">erase</span>(<span class="built_in">unique</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>()), ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backTrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;nums.<span class="built_in">size</span>()){</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIndex; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(path.<span class="built_in">size</span>()&gt;<span class="number">0</span> &amp;&amp; nums[i]&lt;path.<span class="built_in">back</span>()) <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">            <span class="keyword">if</span>(path.<span class="built_in">size</span>()&gt;<span class="number">1</span>) ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="built_in">backTrack</span>(nums, i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>使用单层的set进行去重 注意 set定义在每一层 <code>作用只在定义的这一层</code></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">findSubsequences</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backTrack</span>(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// sort(ans.begin(), ans.end());</span></span><br><span class="line">        <span class="comment">// ans.erase(unique(ans.begin(), ans.end()), ans.end());</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backTrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;nums.<span class="built_in">size</span>()) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        unordered_set&lt;<span class="keyword">int</span>&gt; uset; <span class="comment">// 使用set对本层元素进行去重</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIndex; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(path.<span class="built_in">size</span>()&gt;<span class="number">0</span> &amp;&amp; nums[i]&lt;path.<span class="built_in">back</span>() || uset.<span class="built_in">find</span>(nums[i]) != uset.<span class="built_in">end</span>())</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">            <span class="keyword">if</span>(path.<span class="built_in">size</span>()&gt;<span class="number">1</span>) ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            uset.<span class="built_in">insert</span>(nums[i]);</span><br><span class="line">            <span class="built_in">backTrack</span>(nums, i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="2-排列问题"><a href="#2-排列问题" class="headerlink" title="2. 排列问题"></a>2. 排列问题</h2><ol><li>排列问题 ==每次for都是从0开始==</li><li>因为是排列 不能限制顺序 所以不传入index</li><li>==需要used数组==，去重判断重中之重</li></ol><h3 id="46-全排列"><a href="#46-全排列" class="headerlink" title="46. 全排列"></a><a href="https://leetcode-cn.com/problems/permutations/">46. 全排列</a></h3><p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <em>所有可能的全排列</em> 。你可以 <strong>按任意顺序</strong> 返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1]</span><br><span class="line">输出：[[0,1],[1,0]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1]</span><br><span class="line">输出：[[1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h5><ol><li>数组不重复 最简简单单的全排列，基本回溯解法</li><li>不讲五的解法 next_permutation （略）</li></ol><h5 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:    </span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, vector&lt;<span class="keyword">bool</span>&gt;&amp; used)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(path.<span class="built_in">size</span>() == nums.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">if</span>(used[i]) <span class="keyword">continue</span>;  <span class="comment">//数字不重复使用 需要used数组</span></span><br><span class="line">        used[i] = <span class="number">1</span>;</span><br><span class="line">        path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">        used[i] = <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">permute</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      ans.<span class="built_in">clear</span>();</span><br><span class="line">      path.<span class="built_in">clear</span>();</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(), <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="31-下一个排列"><a href="#31-下一个排列" class="headerlink" title="31. 下一个排列"></a><a href="https://leetcode-cn.com/problems/next-permutation/">31. 下一个排列</a></h3><p>整数数组的一个 <strong>排列</strong> 就是将其所有成员以序列或线性顺序排列。</p><ul><li>例如，<code>arr = [1,2,3]</code> ，以下这些都可以视作 <code>arr</code> 的排列：<code>[1,2,3]</code>、<code>[1,3,2]</code>、<code>[3,1,2]</code>、<code>[2,3,1]</code> 。</li></ul><p>整数数组的 <strong>下一个排列</strong> 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 <strong>下一个排列</strong> 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。</p><ul><li>例如，<code>arr = [1,2,3]</code> 的下一个排列是 <code>[1,3,2]</code> 。</li><li>类似地，<code>arr = [2,3,1]</code> 的下一个排列是 <code>[3,1,2]</code> 。</li><li>而 <code>arr = [3,2,1]</code> 的下一个排列是 <code>[1,2,3]</code> ，因为 <code>[3,2,1]</code> 不存在一个字典序更大的排列。</li></ul><p>给你一个整数数组 <code>nums</code> ，找出 <code>nums</code> 的下一个排列。</p><p>必须**<a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95"> 原地 </a>**修改，只允许使用额外常数空间。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[1,3,2]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,2,1]</span><br><span class="line">输出：[1,2,3]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,5]</span><br><span class="line">输出：[1,5,1]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h5><p>题目要求实现 next_permutation</p><blockquote><p>我们需要将一个左边的「较小数」与一个右边的「较大数」交换，以能够让当前排列变大，从而得到下一个排列。</p><p>同时我们要让这个「较小数」尽量靠右，而「较大数」尽可能小。当交换完成后，「较大数」右边的数需要按照升序重新排列。这样可以在保证新排列大于原来排列的情况下，使变大的幅度尽可能小。</p><p>以排列 [4,5,2,6,3,1][4,5,2,6,3,1] 为例：</p><p>我们能找到的符合条件的一对「较小数」与「较大数」的组合为 2与 3，满足「较小数」尽量靠右，而「较大数」尽可能小。</p><p>当我们完成交换后排列变为 [4,5,3,6,2,1][4,5,3,6,2,1]，此时我们可以重排「较小数」右边的序列，序列变为 [4,5,3,1,2,6][4,5,3,1,2,6]。</p></blockquote><p>不明白就调试调试</p><h5 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">nextPermutation</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> i = nums.<span class="built_in">size</span>() - <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; nums[i] &gt;= nums[i + <span class="number">1</span>]) {</span><br><span class="line">            i--; <span class="comment">//从后往前找到第一个增长的点 例子中i指向2</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">int</span> j = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; nums[i] &gt;= nums[j]) { <span class="comment">//从后往前找到第一个大于nums[i]的点 例子中j指向3</span></span><br><span class="line">                j--;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//453621 //此时满足 较小的&gt;2的3替换了2，满足了大排列，而i之后单减</span></span><br><span class="line">            <span class="built_in">swap</span>(nums[i], nums[j]); </span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//453126</span></span><br><span class="line">        <span class="built_in">reverse</span>(nums.<span class="built_in">begin</span>() + i + <span class="number">1</span>, nums.<span class="built_in">end</span>());</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="47-全排列-II"><a href="#47-全排列-II" class="headerlink" title="47. 全排列 II"></a><a href="https://leetcode-cn.com/problems/permutations-ii/">47. 全排列 II</a></h3><p>给定一个可包含重复数字的序列 <code>nums</code> ，<em><strong>按任意顺序</strong></em> 返回所有不重复的全排列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,2]</span><br><span class="line">输出：</span><br><span class="line">[[1,1,2],</span><br><span class="line"> [1,2,1],</span><br><span class="line"> [2,1,1]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h5><ol><li><p>重点！重复元素全排列主要是去重问题</p><blockquote><p><code>(i&gt;0 &amp;&amp; !used[i-1] &amp;&amp; nums[i] == nums[i-1])</code></p></blockquote></li><li></li></ol><h5 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">permuteUnique</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());  <span class="comment">//去重需要排序 使得相同的元素挨在一起</span></span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(), <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, vector&lt;<span class="keyword">bool</span>&gt;&amp; used)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(path.<span class="built_in">size</span>() == nums.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="comment">//注意这里的去重判断是重中之重</span></span><br><span class="line">        <span class="keyword">if</span>(used[i] || (i&gt;<span class="number">0</span> &amp;&amp; !used[i<span class="number">-1</span>] &amp;&amp; nums[i] == nums[i<span class="number">-1</span>]))  </span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        used[i] = <span class="number">1</span>;</span><br><span class="line">        path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">        used[i] = <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="784-字母大小写全排列"><a href="#784-字母大小写全排列" class="headerlink" title="784. 字母大小写全排列"></a><a href="https://leetcode-cn.com/problems/letter-case-permutation/">784. 字母大小写全排列</a></h3><p>难度中等368</p><p>给定一个字符串 <code>s</code> ，通过将字符串 <code>s</code> 中的每个字母转变大小写，我们可以获得一个新的字符串。</p><p>返回 <em>所有可能得到的字符串集合</em> 。以 <strong>任意顺序</strong> 返回输出。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "a1b2"</span><br><span class="line">输出：["a1b2", "a1B2", "A1b2", "A1B2"]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "3z4"</span><br><span class="line">输出: ["3z4","3Z4"]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h5><h5 id="代码-12"><a href="#代码-12" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    string path;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">letterCasePermutation</span><span class="params">(string s)</span> </span>{</span><br><span class="line">      <span class="built_in">backtrack</span>(s, <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(string &amp;s, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(index == s.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(!<span class="built_in">isalpha</span>(s[index])){</span><br><span class="line">        path+=s[index];</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }<span class="keyword">else</span>{</span><br><span class="line">        path+=(<span class="built_in">tolower</span>(s[index]));</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">  </span><br><span class="line">        path+=(<span class="built_in">toupper</span>(s[index]));</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="60-排列序列"><a href="#60-排列序列" class="headerlink" title="60. 排列序列"></a><a href="https://leetcode-cn.com/problems/permutation-sequence/">60. 排列序列</a></h3><p>难度困难641</p><p>给出集合 <code>[1,2,3,...,n]</code>，其所有元素共有 <code>n!</code> 种排列。</p><p>按大小顺序列出所有排列情况，并一一标记，当 <code>n = 3</code> 时, 所有排列如下：</p><ol><li><code>"123"</code></li><li><code>"132"</code></li><li><code>"213"</code></li><li><code>"231"</code></li><li><code>"312"</code></li><li><code>"321"</code></li></ol><p>给定 <code>n</code> 和 <code>k</code>，返回第 <code>k</code> 个排列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, k = 3</span><br><span class="line">输出："213"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, k = 9</span><br><span class="line">输出："2314"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, k = 1</span><br><span class="line">输出："123"</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h5><p>完全回溯无法通过 要实现==精准剪枝==</p><h5 id="代码-13"><a href="#代码-13" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// 普通回溯过不了，需要精准剪枝到第k个叶节点</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">dsssfs</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k, unordered_set&lt;<span class="keyword">int</span>&gt; &amp;used, string &amp;tmp,</span></span></span><br><span class="line"><span class="params"><span class="function">              vector&lt;<span class="keyword">int</span>&gt; &amp;factorial)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (tmp.<span class="built_in">size</span>() == n) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> ind =</span><br><span class="line">        <span class="number">0</span>; <span class="comment">// 用来标记当前是第几次循环,直接用i的话有问题，比如说i是3，但是只是第一次循环，那就错了</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) {</span><br><span class="line">      <span class="keyword">if</span> (used.<span class="built_in">find</span>(i) != used.<span class="built_in">end</span>())</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      ++ind;</span><br><span class="line">      <span class="comment">// 需要看当前层切分后每个子节点包含的叶节点个数，所以要减一</span></span><br><span class="line">      <span class="keyword">int</span> size = factorial[n - used.<span class="built_in">size</span>() - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (k &gt; (ind - <span class="number">1</span>) * size &amp;&amp; k &lt;= ind * size) {</span><br><span class="line">        tmp.<span class="built_in">push_back</span>(i + <span class="string">'0'</span>);</span><br><span class="line">        used.<span class="built_in">insert</span>(i);</span><br><span class="line">        <span class="built_in">dsssfs</span>(n, k - size * (ind - <span class="number">1</span>), used, tmp, factorial);</span><br><span class="line">        <span class="comment">// 无需回溯，因为从dfs出来后就已经是结果了</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function">string <span class="title">getPermutation</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">    unordered_set&lt;<span class="keyword">int</span>&gt; used;</span><br><span class="line">    string tmp;</span><br><span class="line">    <span class="comment">// 提前吧阶乘算出来</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; factorial = {<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">24</span>, <span class="number">120</span>, <span class="number">720</span>, <span class="number">5040</span>, <span class="number">40320</span>, <span class="number">362880</span>};</span><br><span class="line">    <span class="built_in">dsssfs</span>(n, k, used, tmp, factorial);</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="特殊回溯"><a href="#特殊回溯" class="headerlink" title="特殊回溯"></a>特殊回溯</h2><p>个人认为 特殊情况 应用的挺特殊的回溯</p><h3 id="剑指-Offer-II-009-乘积小于-K-的子数组"><a href="#剑指-Offer-II-009-乘积小于-K-的子数组" class="headerlink" title="剑指 Offer II 009. 乘积小于 K 的子数组"></a><a href="https://leetcode-cn.com/problems/ZVAVXX/">剑指 Offer II 009. 乘积小于 K 的子数组</a></h3><p>难度中等63</p><p>给定一个正整数数组 <code>nums</code>和整数 <code>k</code> ，请找出该数组内乘积小于 <code>k</code> 的连续的子数组的个数。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [10,5,2,6], k = 100</span><br><span class="line">输出: 8</span><br><span class="line">解释: 8 个乘积小于 100 的子数组分别为: [10], [5], [2], [6], [10,5], [5,2], [2,6], [5,2,6]。</span><br><span class="line">需要注意的是 [10,5,2] 并不是乘积小于100的子数组。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,2,3], k = 0</span><br><span class="line">输出: 0</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-14"><a href="#思路-14" class="headerlink" title="思路"></a>思路</h4><ol><li><p>这道题 正确解法 应该是滑动窗口</p><blockquote><p><code>重点 right - left + 1</code></p><p>比如某次遍历符合题意的子数组为 ABCX，那么在该条件下符合条件的有X，CX，BCX，ABCX共四个（可以进行多个例子，发现个数符合right-left+1）</p></blockquote></li><li><p>但是 做这道题的过程中 感觉这个 不跳步的回溯 挺有意思 外层循环backtrack </p><p>其实 好像相当于两层for循环了 卧槽 我真是垃圾</p><p><u><code>其实 也好像有点类似n叉树 有向图的遍历吧？</code></u><a href="https://qianxunslimg.github.io/2022/03/15/tu-lun/">图论 | qianxunslimgのblog</a></p></li></ol><h4 id="代码-14"><a href="#代码-14" class="headerlink" title="代码"></a>代码</h4><p>正确的滑动窗口解法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSubarrayProductLessThanK</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> multi = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(k &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right &lt; n){</span><br><span class="line">            multi*=nums[right];</span><br><span class="line">            <span class="keyword">while</span>(multi&gt;=k){</span><br><span class="line">                multi/=nums[left];</span><br><span class="line">                left++;</span><br><span class="line">            }</span><br><span class="line">            ans += (right - left + <span class="number">1</span>); <span class="comment">//注意 每次+的是窗口的长度</span></span><br><span class="line">            right++;  <span class="comment">//这个写在前面也是可以的 只是right - left 不加1</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>回溯（假）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="comment">//vector&lt;vector&lt;int&gt;&gt; all;</span></span><br><span class="line">    <span class="comment">//vector&lt;int&gt; path;</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numSubarrayProductLessThanK</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="built_in">backtrack</span>(nums, i, <span class="number">1</span>, k);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// cout&lt;&lt;all.size()&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// for(int i = 0; i&lt;all.size(); i++){</span></span><br><span class="line">        <span class="comment">//     for(int j = 0; j&lt;all[i].size(); j++){</span></span><br><span class="line">        <span class="comment">//         cout&lt;&lt;all[i][j]&lt;&lt;" ";</span></span><br><span class="line">        <span class="comment">//     }</span></span><br><span class="line">        <span class="comment">//     cout&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// }</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> startIndex, <span class="keyword">int</span> preK, <span class="keyword">int</span> k)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(startIndex&gt;=nums.<span class="built_in">size</span>() || preK&gt;=k) <span class="keyword">return</span>;</span><br><span class="line">        preK*=nums[startIndex];</span><br><span class="line">        <span class="comment">//path.push_back(nums[startIndex]);</span></span><br><span class="line">        <span class="keyword">if</span>(preK&lt;k){</span><br><span class="line">          ans++;  </span><br><span class="line">          <span class="comment">//all.push_back(path);</span></span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, startIndex+<span class="number">1</span>, preK, k);</span><br><span class="line">        preK /= nums[startIndex];</span><br><span class="line">        <span class="comment">//path.pop_back();</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>位运算</title>
      <link href="/2022/03/15/wei-yun-suan/"/>
      <url>/2022/03/15/wei-yun-suan/</url>
      
        <content type="html"><![CDATA[<h2 id="位操作技巧"><a href="#位操作技巧" class="headerlink" title="位操作技巧"></a>位操作技巧</h2><h3 id="位运算概览"><a href="#位运算概览" class="headerlink" title="位运算概览"></a><a href="https://www.runoob.com/w3cnote/bit-operation.html">位运算概览</a></h3><table><thead><tr><th align="left">符号</th><th align="left">描述</th><th align="left">运算规则</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">与</td><td align="left">两个位都为1时，结果才为1</td></tr><tr><td align="left">|</td><td align="left">或</td><td align="left">两个位都为0时，结果才为0</td></tr><tr><td align="left">^</td><td align="left">异或</td><td align="left"><code>两个位相同为0，相异为1</code></td></tr><tr><td align="left">~</td><td align="left">取反</td><td align="left">0变1，1变0</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">左移</td><td align="left">各二进位全部左移若干位，高位丢弃，低位补0</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">右移</td><td align="left">各二进位全部右移若干位，对无符号数，高位补0，有符号数，各编译器处理方法不一样，有的补符号位（算术右移），有的补0（逻辑右移）</td></tr></tbody></table><h3 id="有趣的位操作"><a href="#有趣的位操作" class="headerlink" title="有趣的位操作"></a>有趣的位操作</h3><ol><li><strong>利用或操作 <code>|</code> 和空格将英文字符转换为小写</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">'a'</span> | <span class="string">' '</span>) = <span class="string">'a'</span></span><br><span class="line">(<span class="string">'A'</span> | <span class="string">' '</span>) = <span class="string">'a'</span></span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><strong>利用与操作 <code>&amp;</code> 和下划线将英文字符转换为大写</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">'b'</span> &amp; <span class="string">'_'</span>) = <span class="string">'B'</span></span><br><span class="line">(<span class="string">'B'</span> &amp; <span class="string">'_'</span>) = <span class="string">'B'</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li><u><strong>利用异或操作 <code>^</code> 和空格进行英文字符大小写互换</strong></u></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">'d'</span> ^ <span class="string">' '</span>) = <span class="string">'D'</span></span><br><span class="line">(<span class="string">'D'</span> ^ <span class="string">' '</span>) = <span class="string">'d'</span></span><br></pre></td></tr></tbody></table></figure><ol start="4"><li><u><strong>判断两个数是否异号</strong></u></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">-1</span>, y = <span class="number">2</span>;</span><br><span class="line">boolean f = ((x ^ y) &lt; <span class="number">0</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">3</span>, y = <span class="number">2</span>;</span><br><span class="line">boolean f = ((x ^ y) &lt; <span class="number">0</span>); <span class="comment">// false</span></span><br></pre></td></tr></tbody></table></figure><ol start="5"><li><strong>不用临时变量交换两个数</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>;</span><br><span class="line">a ^= b;</span><br><span class="line">b ^= a;</span><br><span class="line">a ^= b;</span><br><span class="line"><span class="comment">// 现在 a = 2, b = 1</span></span><br></pre></td></tr></tbody></table></figure><ol start="6"><li><strong>加一</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = <span class="number">1</span>;</span><br><span class="line">n = -~n;</span><br><span class="line"><span class="comment">// 现在 n = 2</span></span><br></pre></td></tr></tbody></table></figure><ol start="7"><li><strong>减一</strong></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = <span class="number">2</span>;</span><br><span class="line">n = ~-n;</span><br><span class="line"><span class="comment">// 现在 n = 1</span></span><br></pre></td></tr></tbody></table></figure><h3 id="n-amp-n-1-的运用"><a href="#n-amp-n-1-的运用" class="headerlink" title="n &amp; (n-1) 的运用"></a><code>n &amp; (n-1)</code> 的运用</h3><p><strong><code>n &amp; (n-1)</code> 这个操作是算法中常见的，作用是消除数字 <code>n</code> 的二进制表示中的最后一个 1</strong>。</p><p>看个图就很容易理解了：</p><img src="https://qianxunslimg.oss-cn-beijing.aliyuncs.com/img/image-20220401104149833.png" alt="image-20220401104149833" style="zoom: 67%;"><p>其核心逻辑就是，<code>n - 1</code> 一定可以消除最后一个 1，同时把其后的 0 都变成 1，这样再和 <code>n</code> 做一次 <code>&amp;</code> 运算，就可以仅仅把最后一个 1 变成 0 了。</p><h3 id="a-a-0-的运用"><a href="#a-a-0-的运用" class="headerlink" title="a ^ a = 0 的运用"></a><code>a ^ a = 0</code> 的运用</h3><p><u>异或运算的性质是需要我们牢记的：</u></p><p><u>一个数和它本身做异或运算结果为 0，即 <code>a ^ a = 0</code>；一个数和 0 做异或运算的结果为它本身，即 <code>a ^ 0 = a</code>。</u></p><h2 id="一些位运算的题目"><a href="#一些位运算的题目" class="headerlink" title="一些位运算的题目"></a>一些位运算的题目</h2><h3 id="191-位1的个数"><a href="#191-位1的个数" class="headerlink" title="191. 位1的个数"></a><a href="https://leetcode-cn.com/problems/number-of-1-bits/">191. 位1的个数</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=191">labuladong 题解</a> <a href="https://leetcode-cn.com/problems/number-of-1-bits/#">思路</a></p><p>编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为<a href="https://baike.baidu.com/item/%E6%B1%89%E6%98%8E%E9%87%8D%E9%87%8F">汉明重量</a>）。</p><p><strong>提示：</strong></p><ul><li>请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。</li><li>在 Java 中，编译器使用<a href="https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A5%E7%A0%81/5295284">二进制补码</a>记法来表示有符号整数。因此，在上面的 <strong>示例 3</strong> 中，输入表示有符号整数 <code>-3</code>。</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：00000000000000000000000000001011</span><br><span class="line">输出：3</span><br><span class="line">解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>n&amp;(n-1)的应用</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n){</span><br><span class="line">            n = n &amp; (n<span class="number">-1</span>);</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="231-2-的幂"><a href="#231-2-的幂" class="headerlink" title="231. 2 的幂"></a><a href="https://leetcode-cn.com/problems/power-of-two/">231. 2 的幂</a></h4><p><a href="https://labuladong.gitee.io/article/?qno=231">labuladong 题解</a><a href="https://leetcode-cn.com/problems/power-of-two/#">思路</a></p><p>难度简单481收藏分享切换为英文接收动态反馈</p><p>给你一个整数 <code>n</code>，请你判断该整数是否是 2 的幂次方。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p>如果存在一个整数 <code>x</code> 使得 <code>n == 2x</code> ，则认为 <code>n</code> 是 2 的幂次方。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 1</span><br><span class="line">输出：true</span><br><span class="line">解释：20 = 1</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 16</span><br><span class="line">输出：true</span><br><span class="line">解释：24 = 16</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>2的幂表示为二进制 只有一个1</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//2的幂在二进制中只有一个1</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> (n&amp;(n<span class="number">-1</span>)) == <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="136-只出现一次的数字"><a href="#136-只出现一次的数字" class="headerlink" title="136. 只出现一次的数字"></a><a href="https://leetcode-cn.com/problems/single-number/">136. 只出现一次的数字</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=136">labuladong 题解</a><a href="https://leetcode-cn.com/problems/single-number/#">思路</a></p><p>难度简单2344英文版讨论区</p><p>给定一个<strong>非空</strong>整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><p><strong>说明：</strong></p><p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [2,2,1]</span><br><span class="line">输出: 1</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>利用异或的性质a ^ a = 0, a ^ 0 = a 全部异或即可得到唯一的值</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> num : nums)</span><br><span class="line">        ans ^= num;</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="268-丢失的数字"><a href="#268-丢失的数字" class="headerlink" title="268. 丢失的数字"></a><a href="https://leetcode-cn.com/problems/missing-number/">268. 丢失的数字</a></h3><p><a href="https://labuladong.gitee.io/article/?qno=268">labuladong 题解</a><a href="https://leetcode-cn.com/problems/missing-number/#">思路</a></p><p>难度简单584收藏分享切换为英文接收动态反馈</p><p>给定一个包含 <code>[0, n]</code> 中 <code>n</code> 个数的数组 <code>nums</code> ，找出 <code>[0, n]</code> 这个范围内没有出现在数组中的那个数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,0,1]</span><br><span class="line">输出：2</span><br><span class="line">解释：n = 3，因为有 3 个数字，所以所有的数字都在范围 [0,3] 内。2 是丢失的数字，因为它没有出现在 nums 中。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1]</span><br><span class="line">输出：2</span><br><span class="line">解释：n = 2，因为有 2 个数字，所以所有的数字都在范围 [0,2] 内。2 是丢失的数字，因为它没有出现在 nums 中。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><p>异或一下即可</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            ans^=i;</span><br><span class="line">            ans^=nums[i];</span><br><span class="line">        }</span><br><span class="line">        ans^=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-56-I-数组中数字出现的次数"><a href="#剑指-Offer-56-I-数组中数字出现的次数" class="headerlink" title="剑指 Offer 56 - I. 数组中数字出现的次数"></a><a href="https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/">剑指 Offer 56 - I. 数组中数字出现的次数</a></h3><p>难度中等597收藏分享切换为英文接收动态反馈英文版讨论区</p><p>一个整型数组 <code>nums</code> 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [4,1,4,6]</span><br><span class="line">输出：[1,6] 或 [6,1]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,10,4,1,4,3,3]</span><br><span class="line">输出：[2,10] 或 [10,2]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><p><a href="https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/solution/shua-bao-leetcode-yi-huo-yun-suan-xiao-b-cc5a/"><strong>我就知道总有人能给我讲明白，nb</strong></a></p><ul><li>我们将所有的数据都异或起来，不难理解最后的结果是两个 n = n1 ^ n2(n1和n2是只出现一次的数)</li><li>我们对n进行分析，因为n是n1和n2异或得来的，所以n的二进制中第一次出现1的地方就是n1和n2二进制表示中第一次出现不同的情况，我们可以以此作为区分</li><li>将数组中的数分成第bit位为1和bit为0的两组</li></ul><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">singleNumbers</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> find = <span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(<span class="number">2</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num : nums){</span><br><span class="line">            find^=num;</span><br><span class="line">        }<span class="comment">//所有异或 最终是两个不同数的异或结果</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> bit = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//注意这里的优先级 先1&lt;&lt;bit 在find&amp;</span></span><br><span class="line">        <span class="keyword">while</span>((find&amp; <span class="number">1</span>&lt;&lt; bit) == <span class="number">0</span>){  <span class="comment">//找到第一个1</span></span><br><span class="line">            bit++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">1</span>&lt;&lt;bit;  <span class="comment">//移到两个数bit不同的位置</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:nums){</span><br><span class="line">            <span class="keyword">if</span>(num&amp;temp) <span class="comment">//包含第bit位为1的数</span></span><br><span class="line">                ans[<span class="number">0</span>]^=num;</span><br><span class="line">            <span class="keyword">else</span>             <span class="comment">//包含第bit位不为1的数</span></span><br><span class="line">                ans[<span class="number">1</span>]^=num;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-56-II-数组中数字出现的次数-II"><a href="#剑指-Offer-56-II-数组中数字出现的次数-II" class="headerlink" title="剑指 Offer 56 - II. 数组中数字出现的次数 II"></a><a href="https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof/">剑指 Offer 56 - II. 数组中数字出现的次数 II</a></h3><p>难度中等316收藏分享切换为英文接收动态反馈英文版讨论区</p><p>在一个数组 <code>nums</code> 中除一个数字只出现一次之外，其他数字都出现了三次。请找出那个只出现一次的数字。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,4,3,3]</span><br><span class="line">输出：4</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [9,1,7,9,7,9,7]</span><br><span class="line">输出：1</span><br></pre></td></tr></tbody></table></figure><p><strong>限制：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 10000</code></li><li><code>1 &lt;= nums[i] &lt; 2^31</code></li></ul><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>题目限制32位int遍历每一位 将所有数字的该位 0/1 相加 如果目标数字该位为1，则该位相加不为3的倍数 </p><p>利用这个特征可以将数字还原</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">32</span>; i++){</span><br><span class="line">            <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> num: nums)</span><br><span class="line">                <span class="comment">//右移&amp;1得到每一位</span></span><br><span class="line">                total+= (num&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(total%<span class="number">3</span>)</span><br><span class="line">                <span class="comment">//还原这个数 左移回相应的位数 异或取回该值</span></span><br><span class="line">                ans |= (<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-003-前-n-个数字二进制中-1-的个数"><a href="#剑指-Offer-II-003-前-n-个数字二进制中-1-的个数" class="headerlink" title="剑指 Offer II 003. 前 n 个数字二进制中 1 的个数"></a><a href="https://leetcode-cn.com/problems/w3tCBm/">剑指 Offer II 003. 前 n 个数字二进制中 1 的个数</a></h3><p>难度简单54</p><p>给定一个非负整数 <code>n</code> ，请计算 <code>0</code> 到 <code>n</code> 之间的每个数字的二进制表示中 1 的个数，并输出一个数组。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 2</span><br><span class="line">输出: [0,1,1]</span><br><span class="line">解释: </span><br><span class="line">0 --&gt; 0</span><br><span class="line">1 --&gt; 1</span><br><span class="line">2 --&gt; 10</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 5</span><br><span class="line">输出: [0,1,1,2,1,2]</span><br><span class="line">解释:</span><br><span class="line">0 --&gt; 0</span><br><span class="line">1 --&gt; 1</span><br><span class="line">2 --&gt; 10</span><br><span class="line">3 --&gt; 11</span><br><span class="line">4 --&gt; 100</span><br><span class="line">5 --&gt; 101</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><ol><li>笨方法 遍历每个都数</li><li>dp 奇数是/2偶数1的个数+1 偶数是/2偶数的个数</li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><p>笨比遍历</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">countBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;=n; i++){</span><br><span class="line">            ans[i] = <span class="built_in">countOne</span>(i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countOne</span><span class="params">(<span class="keyword">int</span> num)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(num){</span><br><span class="line">            ans++;</span><br><span class="line">            num &amp;= (num<span class="number">-1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>奇偶关系dp</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">countBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">if</span>((i&amp;<span class="number">1</span>) == <span class="number">1</span>) <span class="comment">//奇数</span></span><br><span class="line">                ans[i] = ans[i&gt;&gt;<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans[i] = ans[i&gt;&gt;<span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-II-005-单词长度的最大乘积"><a href="#剑指-Offer-II-005-单词长度的最大乘积" class="headerlink" title="剑指 Offer II 005. 单词长度的最大乘积"></a><a href="https://leetcode-cn.com/problems/aseY1I/">剑指 Offer II 005. 单词长度的最大乘积</a></h3><p>难度中等58</p><p>给定一个字符串数组 <code>words</code>，请计算当两个字符串 <code>words[i]</code> 和 <code>words[j]</code> 不包含相同字符时，它们长度的乘积的最大值。假设字符串中只包含英语的小写字母。如果没有不包含相同字符的一对字符串，返回 0。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: words = ["abcw","baz","foo","bar","fxyz","abcdef"]</span><br><span class="line">输出: 16 </span><br><span class="line">解释: 这两个单词为 "abcw", "fxyz"。它们不包含相同字符，且长度的乘积最大。</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProduct</span><span class="params">(vector&lt;string&gt;&amp; words)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = words.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">masks</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> ch : words[i]){</span><br><span class="line">                <span class="comment">//用二进制中的最多26位，记录每个字母是否存在</span></span><br><span class="line">                masks[i] |= <span class="number">1</span>&lt;&lt;(ch - <span class="string">'a'</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j&lt;n; j++){</span><br><span class="line">                <span class="comment">//不存在相同数字</span></span><br><span class="line">                <span class="keyword">if</span>((masks[i] &amp; masks[j]) == <span class="number">0</span>){</span><br><span class="line">                    ans = <span class="built_in">max</span>(<span class="built_in"><span class="keyword">int</span></span>(words[i].<span class="built_in">size</span>()*words[j].<span class="built_in">size</span>()), ans);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode高频</title>
      <link href="/2022/03/14/leetcode-gao-pin/"/>
      <url>/2022/03/14/leetcode-gao-pin/</url>
      
        <content type="html"><![CDATA[<h1 id="Leetcode-retag"><a href="#Leetcode-retag" class="headerlink" title="Leetcode-retag"></a>Leetcode-retag</h1><p>重新分类 Leetcode 高频题 2021 版</p><ul><li>题目按照面试频率降序排列</li><li>增加难度分类，适合从简单开始学习</li><li>增加细分类别，例如单调栈，前缀树等，一道题目可能会有多个类别</li></ul><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%F0%90%80%B4-%E9%93%BE%E8%A1%A8">𐀴 链表</a><ul><li>单链表</li><li>双链表</li></ul></li><li><a href="#%F0%90%80%B4-%E6%A0%91">𐀴 树</a><ul><li>遍历</li><li>构造</li><li>路径 | 深度 | 翻转</li><li>二叉搜索树</li><li>前缀树</li><li><ul><li>线段树</li></ul></li></ul></li><li><a href="#%F0%90%80%B4-%E6%A0%88">𐀴 栈</a><ul><li>基础</li><li>单调栈</li></ul></li><li><a href="#%F0%90%80%B4-%E5%A0%86">𐀴 堆</a><ul><li>基础</li></ul></li><li><a href="#%F0%90%80%B4-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE">𐀴 二分查找</a></li><li><a href="#%F0%90%80%B4-%E4%BD%8D%E8%BF%90%E7%AE%97">𐀴 位运算</a></li><li><a href="#%F0%90%80%B4-%E5%8F%8C%E6%8C%87%E9%92%88%E4%B8%8E%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3">𐀴 双指针与滑动窗口</a></li><li><a href="#%F0%90%80%B4-%E7%9F%A9%E9%98%B5">𐀴 矩阵</a></li><li><a href="#%F0%90%80%B4-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">𐀴 动态规划</a><ul><li>一维</li><li>二维</li></ul></li><li><a href="#%F0%90%80%B4-%E5%9B%BE%E8%AE%BA">𐀴 图论</a><ul><li>DFS</li><li>BFS</li><li><ul><li>Dijkstra</li></ul></li><li>拓扑排序</li></ul></li><li><a href="#%F0%90%80%B4-%E5%B9%B6%E6%9F%A5%E9%9B%86">𐀴 并查集</a></li><li><a href="#%F0%90%80%B4-%E8%AE%BE%E8%AE%A1">𐀴 设计</a></li><li><a href="#%F0%90%80%B4-%E8%B4%AA%E5%BF%83">𐀴 贪心</a></li><li><a href="#%F0%90%80%B4-%E5%9B%9E%E6%BA%AF">𐀴 回溯</a></li><li><a href="#%F0%90%80%B4-%E5%85%8B%E9%9A%86">𐀴 克隆</a></li><li><a href="#%F0%90%80%B4-%E6%95%B0%E5%AD%A6">𐀴 数学</a></li><li><a href="#%F0%90%80%B4-%E6%9E%81%E5%A4%A7%E6%9E%81%E5%B0%8F%E5%8C%96">𐀴 * 极大极小化</a></li><li><a href="#%F0%90%80%B4-%E5%87%A0%E4%BD%95">𐀴 * 几何</a></li></ul><h2 id="𐀴-链表"><a href="#𐀴-链表" class="headerlink" title="𐀴 链表"></a>𐀴 链表</h2><h4 id="单链表："><a href="#单链表：" class="headerlink" title="单链表："></a>单链表：</h4><h6 id="简单："><a href="#简单：" class="headerlink" title="简单："></a>简单：</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转链表</a></li><li><a href="https://leetcode-cn.com/problems/linked-list-cycle/">141. 环形链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/">83. 删除排序链表中的重复元素</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-linked-list/">234. 回文链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-linked-list-elements/">203. 移除链表元素</a></li><li><a href="https://leetcode-cn.com/problems/delete-node-in-a-linked-list/">237. 删除链表中的节点</a></li><li><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">876. 链表的中间结点</a></li></ul><h6 id="中等"><a href="#中等" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-linked-list-ii/">92. 反转链表 II</a></li><li><a href="https://leetcode-cn.com/problems/reorder-list/">143. 重排链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/">82. 删除排序链表中的重复元素 II</a></li><li><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></li><li><a href="https://leetcode-cn.com/problems/sort-list/">148. 排序链表</a></li><li><a href="https://leetcode-cn.com/problems/partition-list/">86. 分隔链表</a></li><li><a href="https://leetcode-cn.com/problems/rotate-list/">61. 旋转链表</a></li><li><a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/">142. 环形链表 II</a></li><li><a href="https://leetcode-cn.com/problems/insertion-sort-list/">147. 对链表进行插入排序</a></li><li><a href="https://leetcode-cn.com/problems/copy-list-with-random-pointer/">138. 复制带随机指针的链表</a></li><li><a href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/">24. 两两交换链表中的节点</a></li><li><a href="https://leetcode-cn.com/problems/odd-even-linked-list/">328. 奇偶链表</a></li><li><a href="https://leetcode-cn.com/problems/design-linked-list/">707. 设计链表</a></li><li><a href="https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/">109. 有序链表转换二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/flatten-a-multilevel-doubly-linked-list/">430. 扁平化多级双向链表</a></li><li><a href="https://leetcode-cn.com/problems/split-linked-list-in-parts/">725. 分隔链表</a></li></ul><h6 id="困难"><a href="#困难" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">25. K 个一组翻转链表</a></li></ul><h4 id="双链表："><a href="#双链表：" class="headerlink" title="双链表："></a>双链表：</h4><h6 id="简单：-1"><a href="#简单：-1" class="headerlink" title="简单："></a>简单：</h6><ul><li><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/">160. 相交链表</a></li></ul><h6 id="中级"><a href="#中级" class="headerlink" title="中级"></a>中级</h6><ul><li><a href="https://leetcode-cn.com/problems/add-two-numbers/">2. 两数相加</a></li><li><a href="https://leetcode-cn.com/problems/add-two-numbers-ii/">445. 两数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/merge-in-between-linked-lists/">1669. 合并两个链表</a></li></ul><h6 id="困难-1"><a href="#困难-1" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/">23. 合并 K 个升序链表</a></li></ul><h2 id="𐀴-树"><a href="#𐀴-树" class="headerlink" title="𐀴 树"></a>𐀴 树</h2><h4 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h4><h6 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal/">145. 二叉树的后序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal/">94. 二叉树的中序遍历</a></li><li><a href="https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/">589. N 叉树的前序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal/">144. 二叉树的前序遍历</a></li><li><a href="https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/">590. N 叉树的后序遍历</a></li></ul><h6 id="中等-1"><a href="#中等-1" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/">102. 二叉树的层序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/">103. 二叉树的锯齿形层序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/">107. 二叉树的层序遍历 II</a></li></ul><h4 id="构造"><a href="#构造" class="headerlink" title="构造"></a>构造</h4><h6 id="简单-1"><a href="#简单-1" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/">108. 将有序数组转换为二叉搜索树</a></li></ul><h6 id="中等-2"><a href="#中等-2" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/">105. 从前序与中序遍历序列构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/">106. 从中序与后序遍历序列构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/">114. 二叉树展开为链表</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/">889. 根据前序和后序遍历构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-search-tree-from-preorder-traversal/">1008. 前序遍历构造二叉搜索树</a></li></ul><h6 id="困难-2"><a href="#困难-2" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/">297. 二叉树的序列化与反序列化</a></li></ul><h4 id="路径-深度-翻转"><a href="#路径-深度-翻转" class="headerlink" title="路径 | 深度 | 翻转"></a>路径 | 深度 | 翻转</h4><h6 id="简单-2"><a href="#简单-2" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/">104. 二叉树的最大深度</a></li><li><a href="https://leetcode-cn.com/problems/symmetric-tree/">101. 对称二叉树</a></li><li><a href="https://leetcode-cn.com/problems/invert-binary-tree/">226. 翻转二叉树</a></li><li><a href="https://leetcode-cn.com/problems/diameter-of-binary-tree/">543. 二叉树的直径</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-paths/">257. 二叉树的所有路径</a></li><li><a href="https://leetcode-cn.com/problems/balanced-binary-tree/">110. 平衡二叉树</a></li><li><a href="https://leetcode-cn.com/problems/merge-two-binary-trees/">617. 合并二叉树</a></li><li><a href="https://leetcode-cn.com/problems/same-tree/">100. 相同的树</a></li><li><a href="https://leetcode-cn.com/problems/path-sum/">112. 路径总和</a></li><li><a href="https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/">111. 二叉树的最小深度</a></li></ul><h6 id="中等-3"><a href="#中等-3" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/">236. 二叉树的最近公共祖先</a></li><li><a href="https://leetcode-cn.com/problems/count-complete-tree-nodes/">222. 完全二叉树的节点个数</a></li><li><a href="https://leetcode-cn.com/problems/path-sum-ii/">113. 路径总和 II</a></li><li><a href="https://leetcode-cn.com/problems/path-sum-iii/">437. 路径总和 III</a></li><li><a href="https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/">129. 求根节点到叶节点数字之和</a></li><li><a href="https://leetcode-cn.com/problems/maximum-width-of-binary-tree/">662. 二叉树最大宽度</a></li><li><a href="https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/">114. 二叉树展开为链表</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-right-side-view/">199. 二叉树的右视图</a></li><li><a href="https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/">116. 填充每个节点的下一个右侧节点指针</a></li><li><a href="https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/">515. 在每个树行中找最大值</a></li></ul><h6 id="困难-3"><a href="#困难-3" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/">124. 二叉树中的最大路径和</a></li><li><a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/">297. 二叉树的序列化与反序列化</a></li></ul><h4 id="二叉搜索树"><a href="#二叉搜索树" class="headerlink" title="二叉搜索树"></a>二叉搜索树</h4><h6 id="简单-3"><a href="#简单-3" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/">108. 将有序数组转换为二叉搜索树</a></li></ul><h6 id="中等-4"><a href="#中等-4" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/validate-binary-search-tree/">98. 验证二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/unique-binary-search-trees/">96. 不同的二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/unique-binary-search-trees-ii/">95. 不同的二叉搜索树 II</a></li><li><a href="https://leetcode-cn.com/problems/binary-search-tree-iterator/">173. 二叉搜索树迭代器</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/">230. 二叉搜索树中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/recover-binary-search-tree/">99. 恢复二叉搜索树</a></li></ul><h4 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h4><h6 id="简单-4"><a href="#简单-4" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-word-in-dictionary/">720. 词典中最长的单词</a></li></ul><h6 id="中等-5"><a href="#中等-5" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-words/">692. 前 K 个高频单词</a></li><li><a href="https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/">421. 数组中两个数的最大异或值</a></li></ul><h6 id="困难-4"><a href="#困难-4" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/word-search-ii/">212. 单词搜索 II</a></li></ul><h4 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h4><h6 id="中等-6"><a href="#中等-6" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/maximum-number-of-events-that-can-be-attended/">1353. 最多可以参加的会议数目</a></li><li><a href="https://leetcode-cn.com/problems/range-sum-query-mutable/">307. 区域和检索 - 数组可修改</a></li></ul><h6 id="困难-5"><a href="#困难-5" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/count-of-smaller-numbers-after-self/">315. 计算右侧小于当前元素的个数</a></li><li><a href="https://leetcode-cn.com/problems/reverse-pairs/">493. 翻转对</a></li><li><a href="https://leetcode-cn.com/problems/the-skyline-problem/">218. 天际线问题</a></li><li><a href="https://leetcode-cn.com/problems/range-module/">715. Range 模块</a></li><li><a href="https://leetcode-cn.com/problems/rectangle-area-ii/">850. 矩形面积 II</a></li><li><a href="https://leetcode-cn.com/problems/online-majority-element-in-subarray/">1157. 子数组中占绝大多数的元素</a></li><li><a href="https://leetcode-cn.com/problems/falling-squares/">699. 掉落的方块</a></li><li><a href="https://leetcode-cn.com/problems/count-of-range-sum/">327. 区间和的个数</a></li></ul><h2 id="𐀴-栈"><a href="#𐀴-栈" class="headerlink" title="𐀴 栈"></a>𐀴 栈</h2><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><h6 id="简单-5"><a href="#简单-5" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/valid-parentheses/">20. 有效的括号</a></li><li><a href="https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string/">1047. 删除字符串中的所有相邻重复项</a></li><li><a href="https://leetcode-cn.com/problems/implement-queue-using-stacks/">232. 用栈实现队列</a></li><li><a href="https://leetcode-cn.com/problems/min-stack/">155. 最小栈</a></li><li><a href="https://leetcode-cn.com/problems/implement-stack-using-queues/">225. 用队列实现栈</a></li><li><a href="https://leetcode-cn.com/problems/remove-outermost-parentheses/">1021. 删除最外层的括号</a></li><li><a href="https://leetcode-cn.com/problems/baseball-game/">682. 棒球比赛</a></li><li><a href="https://leetcode-cn.com/problems/backspace-string-compare/">844. 比较含退格的字符串</a></li></ul><h6 id="中等-7"><a href="#中等-7" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-substrings-between-each-pair-of-parentheses/">1190. 反转每对括号间的子串</a></li><li><a href="https://leetcode-cn.com/problems/decode-string/">394. 字符串解码</a></li><li><a href="https://leetcode-cn.com/problems/132-pattern/">456. 132 模式</a></li><li><a href="https://leetcode-cn.com/problems/basic-calculator-ii/">227. 基本计算器 II</a></li><li><a href="https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/">150. 逆波兰表达式求值</a></li><li><a href="https://leetcode-cn.com/problems/next-greater-element-ii/">503. 下一个更大元素 II</a></li><li><a href="https://leetcode-cn.com/problems/simplify-path/">71. 简化路径</a></li><li><a href="https://leetcode-cn.com/problems/score-of-parentheses/">856. 括号的分数</a></li><li><a href="https://leetcode-cn.com/problems/sum-of-subarray-minimums/">907. 子数组的最小值之和</a></li><li><a href="https://leetcode-cn.com/problems/mini-parser/">385. 迷你语法分析器</a></li><li><a href="https://leetcode-cn.com/problems/minimum-remove-to-make-valid-parentheses/">1249. 移除无效的括号</a></li><li><a href="https://leetcode-cn.com/problems/exclusive-time-of-functions/">636. 函数的独占时间</a></li><li><a href="https://leetcode-cn.com/problems/flatten-nested-list-iterator/">341. 扁平化嵌套列表迭代器</a></li></ul><h6 id="困难-6"><a href="#困难-6" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/basic-calculator/">224. 基本计算器</a></li><li><a href="https://leetcode-cn.com/problems/number-of-atoms/">726. 原子的数量</a></li></ul><h4 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a>单调栈</h4><h6 id="简单-6"><a href="#简单-6" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/next-greater-element-i/">496. 下一个更大元素 I</a></li></ul><h6 id="中等-8"><a href="#中等-8" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/daily-temperatures/">739. 每日温度</a></li><li><a href="https://leetcode-cn.com/problems/remove-k-digits/">402. 移掉 K 位数字</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicate-letters/">316. 去除重复字母</a></li><li><a href="https://leetcode-cn.com/problems/longest-well-performing-interval/">1124. 表现良好的最长时间段</a></li></ul><h6 id="困难-7"><a href="#困难-7" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/trapping-rain-water/">42. 接雨水</a></li><li><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram/">84. 柱状图中最大的矩形</a></li><li><a href="https://leetcode-cn.com/problems/maximal-rectangle/">85. 最大矩形</a></li><li><a href="https://leetcode-cn.com/problems/create-maximum-number/">321. 拼接最大数</a></li></ul><h2 id="𐀴-堆"><a href="#𐀴-堆" class="headerlink" title="𐀴 堆"></a>𐀴 堆</h2><h4 id="基础-1"><a href="#基础-1" class="headerlink" title="基础"></a>基础</h4><h6 id="简单-7"><a href="#简单-7" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/last-stone-weight/">1046. 最后一块石头的重量</a></li><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/">703. 数据流中的第 K 大元素</a></li></ul><h6 id="中等-9"><a href="#中等-9" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第 K 个最大元素</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-elements/">347. 前 K 个高频元素</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-words/">692. 前K个高频单词</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/">378. 有序矩阵中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/sort-characters-by-frequency/">451. 根据字符出现频率排序</a></li><li><a href="https://leetcode-cn.com/problems/network-delay-time/">743. 网络延迟时间</a></li><li><a href="https://leetcode-cn.com/problems/cheapest-flights-within-k-stops/">787. K 站中转内最便宜的航班</a></li><li><a href="https://leetcode-cn.com/problems/k-closest-points-to-origin/">973. 最接近原点的 K 个点</a></li></ul><h6 id="困难-8"><a href="#困难-8" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/sliding-window-maximum/">239. 滑动窗口最大值</a></li><li><a href="https://leetcode-cn.com/problems/find-median-from-data-stream/">295. 数据流的中位数</a></li><li><a href="https://leetcode-cn.com/problems/the-skyline-problem/">218. 天际线问题</a></li></ul><h2 id="𐀴-二分查找"><a href="#𐀴-二分查找" class="headerlink" title="𐀴 二分查找"></a>𐀴 二分查找</h2><h6 id="简单-8"><a href="#简单-8" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/sqrtx/">69. x 的平方根</a></li><li><a href="https://leetcode-cn.com/problems/binary-search/">704. 二分查找</a></li><li><a href="https://leetcode-cn.com/problems/search-insert-position/">35. 搜索插入位置</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">349. 两个数组的交集</a></li><li><a href="https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/">167. 两数之和 II - 输入有序数组</a></li><li><a href="https://leetcode-cn.com/problems/first-bad-version/">278. 第一个错误的版本</a></li></ul><h6 id="中等-10"><a href="#中等-10" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">300. 最长递增子序列</a></li><li><a href="https://leetcode-cn.com/problems/search-a-2d-matrix/">74. 搜索二维矩阵</a></li><li><a href="https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/">34. 在排序数组中查找元素的第一个和最后一个位置</a></li><li><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">81. 搜索旋转排序数组 II</a></li><li><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">33. 搜索旋转排序数组</a></li><li><a href="https://leetcode-cn.com/problems/4sum-ii/">454. 四数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/search-a-2d-matrix-ii/">240. 搜索二维矩阵 II</a></li><li><a href="https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/">718. 最长重复子数组</a></li><li><a href="https://leetcode-cn.com/problems/powx-n/">50. Pow(x, n)</a></li><li><a href="https://leetcode-cn.com/problems/divide-two-integers/">29. 两数相除</a></li><li><a href="https://leetcode-cn.com/problems/find-the-duplicate-number/">287. 寻找重复数</a></li><li><a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">209. 长度最小的子数组</a></li><li><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">153. 寻找旋转排序数组中的最小值</a></li><li><a href="https://leetcode-cn.com/problems/find-peak-element/">162. 寻找峰值</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/">378. 有序矩阵中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/">230. 二叉搜索树中第K小的元素</a></li></ul><h6 id="困难-9"><a href="#困难-9" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">4. 寻找两个正序数组的中位数</a></li><li><a href="https://leetcode-cn.com/problems/super-egg-drop/">887. 鸡蛋掉落</a></li><li><a href="https://leetcode-cn.com/problems/split-array-largest-sum/">410. 分割数组的最大值</a></li><li><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/">154. 寻找旋转排序数组中的最小值 II</a></li></ul><h2 id="𐀴-位运算"><a href="#𐀴-位运算" class="headerlink" title="𐀴 位运算"></a>𐀴 位运算</h2><h6 id="简单-9"><a href="#简单-9" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/single-number/">136. 只出现一次的数字</a></li><li><a href="https://leetcode-cn.com/problems/number-of-1-bits/">191. 位1的个数</a></li><li><a href="https://leetcode-cn.com/problems/majority-element/">169. 多数元素</a></li><li><a href="https://leetcode-cn.com/problems/reverse-bits/">190. 颠倒二进制位</a></li><li><a href="https://leetcode-cn.com/problems/power-of-two/">231. 2的幂</a></li><li><a href="https://leetcode-cn.com/problems/find-the-difference/">389. 找不同</a></li><li><a href="https://leetcode-cn.com/problems/hamming-distance/">461. 汉明距离</a></li><li><a href="https://leetcode-cn.com/problems/convert-a-number-to-hexadecimal/">405. 数字转换为十六进制数</a></li><li><a href="https://leetcode-cn.com/problems/missing-number/">268. 丢失的数字</a></li></ul><h6 id="中等-11"><a href="#中等-11" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/subsets/">78. 子集</a></li><li><a href="https://leetcode-cn.com/problems/counting-bits/">338. 比特位计数</a></li><li><a href="https://leetcode-cn.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/">1318. 或运算的最小翻转次数</a></li><li><a href="https://leetcode-cn.com/problems/gray-code/">89. 格雷编码</a></li><li><a href="https://leetcode-cn.com/problems/single-number-iii/">260. 只出现一次的数字 III</a></li><li><a href="https://leetcode-cn.com/problems/sum-of-two-integers/">371. 两整数之和</a></li><li><a href="https://leetcode-cn.com/problems/single-number-ii/">137. 只出现一次的数字 II</a></li><li><a href="https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/">421. 数组中两个数的最大异或值</a></li></ul><h2 id="𐀴-双指针与滑动窗口"><a href="#𐀴-双指针与滑动窗口" class="headerlink" title="𐀴 双指针与滑动窗口"></a>𐀴 双指针与滑动窗口</h2><h6 id="简单-10"><a href="#简单-10" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/first-unique-character-in-a-string/">387. 字符串中的第一个唯一字符</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">349. 两个数组的交集</a></li><li><a href="https://leetcode-cn.com/problems/longest-palindrome/">409. 最长回文串</a></li><li><a href="https://leetcode-cn.com/problems/contains-duplicate/">217. 存在重复元素</a></li><li><a href="https://leetcode-cn.com/problems/count-primes/">204. 计数质数</a></li><li><a href="https://leetcode-cn.com/problems/merge-sorted-array/">88. 合并两个有序数组</a></li><li><a href="https://leetcode-cn.com/problems/move-zeroes/">283. 移动零</a></li><li><a href="https://leetcode-cn.com/problems/valid-palindrome/">125. 验证回文串</a></li><li><a href="https://leetcode-cn.com/problems/reverse-string/">344. 反转字符串</a></li><li><a href="https://leetcode-cn.com/problems/remove-element/">27. 移除元素</a></li><li><a href="https://leetcode-cn.com/problems/squares-of-a-sorted-array/">977. 有序数组的平方</a></li></ul><h6 id="中等-12"><a href="#中等-12" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></li><li><a href="https://leetcode-cn.com/problems/rabbits-in-forest/">781. 森林中的兔子</a></li><li><a href="https://leetcode-cn.com/problems/group-anagrams/">49. 字母异位词分组</a></li><li><a href="https://leetcode-cn.com/problems/4sum/">18. 四数之和</a></li><li><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/">560. 和为 K 的子数组</a></li><li><a href="https://leetcode-cn.com/problems/4sum-ii/">454. 四数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/container-with-most-water/">11. 盛最多水的容器</a></li><li><a href="https://leetcode-cn.com/problems/3sum-closest/">16. 最接近的三数之和</a></li><li><a href="https://leetcode-cn.com/problems/4sum/">18. 四数之和</a></li><li><a href="https://leetcode-cn.com/problems/longest-repeating-character-replacement/">424. 替换后的最长重复字符</a></li><li><a href="https://leetcode-cn.com/problems/subarray-product-less-than-k/">713. 乘积小于K的子数组</a></li></ul><h6 id="困难-10"><a href="#困难-10" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. 最小覆盖子串</a></li><li><a href="https://leetcode-cn.com/problems/subarrays-with-k-different-integers/">992. K 个不同整数的子数组</a></li></ul><h2 id="𐀴-矩阵"><a href="#𐀴-矩阵" class="headerlink" title="𐀴 矩阵"></a>𐀴 矩阵</h2><h6 id="简单-11"><a href="#简单-11" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/transpose-matrix/">867. 转置矩阵</a></li><li><a href="https://leetcode-cn.com/problems/flipping-an-image/">832. 翻转图像</a></li></ul><h6 id="中等-13"><a href="#中等-13" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/spiral-matrix/">54. 螺旋矩阵</a></li><li><a href="https://leetcode-cn.com/problems/spiral-matrix-ii/">59. 螺旋矩阵 II</a></li><li><a href="https://leetcode-cn.com/problems/set-matrix-zeroes/">73. 矩阵置零</a></li><li><a href="https://leetcode-cn.com/problems/rotate-image/">48. 旋转图像</a></li></ul><h2 id="𐀴-动态规划"><a href="#𐀴-动态规划" class="headerlink" title="𐀴 动态规划"></a>𐀴 动态规划</h2><h3 id="一维"><a href="#一维" class="headerlink" title="一维"></a>一维</h3><h6 id="简单-12"><a href="#简单-12" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/climbing-stairs/">70. 爬楼梯</a></li><li><a href="https://leetcode-cn.com/problems/maximum-subarray/">53. 最大子序和</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/">121. 买卖股票的最佳时机</a></li><li><a href="https://leetcode-cn.com/problems/min-cost-climbing-stairs/">746. 使用最小花费爬楼梯</a></li></ul><h6 id="中等-14"><a href="#中等-14" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/house-robber-iii/">337. 打家劫舍 III</a></li><li><a href="https://leetcode-cn.com/problems/coin-change/">322. 零钱兑换</a></li><li><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">300. 最长递增子序列</a></li><li><a href="https://leetcode-cn.com/problems/word-break/">139. 单词拆分</a></li><li><a href="https://leetcode-cn.com/problems/maximum-product-subarray/">152. 乘积最大子数组</a></li><li><a href="https://leetcode-cn.com/problems/counting-bits/">338. 比特位计数</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">309. 最佳买卖股票时机含冷冻期</a></li><li><a href="https://leetcode-cn.com/problems/ugly-number-ii/">264. 丑数 II</a></li><li><a href="https://leetcode-cn.com/problems/perfect-squares/">279. 完全平方数</a></li></ul><h6 id="困难-11"><a href="#困难-11" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-valid-parentheses/">32. 最长有效括号</a></li><li><a href="https://leetcode-cn.com/problems/russian-doll-envelopes/">354. 俄罗斯套娃信封问题</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">123. 买卖股票的最佳时机 III</a></li></ul><h3 id="二维"><a href="#二维" class="headerlink" title="二维"></a>二维</h3><h6 id="中等-15"><a href="#中等-15" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-palindromic-substring/">5. 最长回文子串</a></li><li><a href="https://leetcode-cn.com/problems/longest-common-subsequence/">1143. 最长公共子序列</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-partitioning/">131. 分割回文串</a></li><li><a href="https://leetcode-cn.com/problems/unique-paths/">62. 不同路径</a></li><li><a href="https://leetcode-cn.com/problems/minimum-path-sum/">64. 最小路径和</a></li><li><a href="https://leetcode-cn.com/problems/maximal-square/">221. 最大正方形</a></li><li><a href="https://leetcode-cn.com/problems/partition-equal-subset-sum/">416. 分割等和子集</a></li><li><a href="https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/">718. 最长重复子数组</a></li><li><a href="https://leetcode-cn.com/problems/target-sum/">494. 目标和</a></li></ul><h6 id="困难-12"><a href="#困难-12" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/regular-expression-matching/">10. 正则表达式匹配</a></li><li><a href="https://leetcode-cn.com/problems/edit-distance/">72. 编辑距离</a></li><li><a href="https://leetcode-cn.com/problems/super-egg-drop/">887. 鸡蛋掉落</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-partitioning-ii/">132. 分割回文串 II</a></li><li><a href="https://leetcode-cn.com/problems/wildcard-matching/">44. 通配符匹配</a></li><li><a href="https://leetcode-cn.com/problems/split-array-largest-sum/">410. 分割数组的最大值</a></li></ul><h2 id="𐀴-图论"><a href="#𐀴-图论" class="headerlink" title="𐀴 图论"></a>𐀴 图论</h2><h3 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h3><h6 id="中等-16"><a href="#中等-16" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/decode-string/">394. 字符串解码</a></li><li><a href="https://leetcode-cn.com/problems/accounts-merge/">721. 账户合并</a></li><li><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></li><li><a href="https://leetcode-cn.com/problems/target-sum/">494. 目标和</a></li><li><a href="https://leetcode-cn.com/problems/max-area-of-island/">695. 岛屿的最大面积</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/path-with-minimum-effort/">1631. 最小体力消耗路径</a> </li><li><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></li><li><a href="https://leetcode-cn.com/problems/pacific-atlantic-water-flow/">417. 太平洋大西洋水流问题</a></li></ul><h6 id="困难-13"><a href="#困难-13" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/24-game/">679. 24 点游戏</a></li></ul><h3 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h3><h6 id="简单-13"><a href="#简单-13" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/employee-importance/">690. 员工的重要性</a></li></ul><h6 id="中等-17"><a href="#中等-17" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/perfect-squares/">279. 完全平方数</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/number-of-operations-to-make-network-connected/">1319. 连通网络的操作次数</a></li><li><a href="https://leetcode-cn.com/problems/shortest-bridge/">934. 最短的桥</a></li><li><a href="https://leetcode-cn.com/problems/is-graph-bipartite/">785. 判断二分图</a></li><li><a href="https://leetcode-cn.com/problems/rotting-oranges/">994. 腐烂的橘子</a></li><li><a href="https://leetcode-cn.com/problems/open-the-lock/">752. 打开转盘锁</a></li><li><a href="https://leetcode-cn.com/problems/as-far-from-land-as-possible/">1162. 地图分析</a></li><li><a href="https://leetcode-cn.com/problems/minesweeper/">529. 扫雷游戏</a></li></ul><h6 id="困难-14"><a href="#困难-14" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/bus-routes/">815. 公交路线</a></li><li><a href="https://leetcode-cn.com/problems/word-ladder/">127. 单词接龙</a></li><li><a href="https://leetcode-cn.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/">1293. 网格中的最短路径</a></li><li><a href="https://leetcode-cn.com/problems/sliding-puzzle/">773. 滑动谜题</a></li><li><a href="https://leetcode-cn.com/problems/making-a-large-island/">827. 最大人工岛</a></li></ul><h3 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h3><ul><li><a href="https://leetcode-cn.com/problems/cheapest-flights-within-k-stops/">787. K 站中转内最便宜的航班</a></li></ul><h3 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h3><h6 id="中等-18"><a href="#中等-18" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></li><li><a href="https://leetcode-cn.com/problems/course-schedule-ii/">210. 课程表 II</a></li></ul><h6 id="困难-15"><a href="#困难-15" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-increasing-path-in-a-matrix/">329. 矩阵中的最长递增路径</a></li><li><a href="https://leetcode-cn.com/problems/sort-items-by-groups-respecting-dependencies/">1203. 项目管理</a></li></ul><h2 id="𐀴-并查集"><a href="#𐀴-并查集" class="headerlink" title="𐀴 并查集"></a>𐀴 并查集</h2><h6 id="中等-19"><a href="#中等-19" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/number-of-islands/">200. 岛屿数量</a></li><li><a href="https://leetcode-cn.com/problems/accounts-merge/">721. 账户合并</a></li><li><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/path-with-minimum-effort/">1631. 最小体力消耗路径</a></li><li><a href="https://leetcode-cn.com/problems/evaluate-division/">399. 除法求值</a></li><li><a href="https://leetcode-cn.com/problems/number-of-operations-to-make-network-connected/">1319. 连通网络的操作次数</a></li><li><a href="https://leetcode-cn.com/problems/redundant-connection/">684. 冗余连接</a></li></ul><h6 id="困难-16"><a href="#困难-16" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-consecutive-sequence/">128. 最长连续序列</a></li><li><a href="https://leetcode-cn.com/problems/couples-holding-hands/">765. 情侣牵手</a></li></ul><h2 id="𐀴-设计"><a href="#𐀴-设计" class="headerlink" title="𐀴 设计"></a>𐀴 设计</h2><h6 id="简单-14"><a href="#简单-14" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/design-parking-system/">1603. 设计停车系统</a></li><li><a href="https://leetcode-cn.com/problems/design-hashset/">705. 设计哈希集合</a></li><li><a href="https://leetcode-cn.com/problems/design-hashmap/">706. 设计哈希映射</a></li><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/">703. 数据流中的第 K 大元素</a></li></ul><h6 id="中等-20"><a href="#中等-20" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/lru-cache/">146. LRU 缓存机制</a></li><li><a href="https://leetcode-cn.com/problems/flatten-nested-list-iterator/">341. 扁平化嵌套列表迭代器</a></li><li><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></li><li><a href="https://leetcode-cn.com/problems/binary-search-tree-iterator/">173. 二叉搜索树迭代器</a></li><li><a href="https://leetcode-cn.com/problems/design-circular-queue/">622. 设计循环队列</a></li><li><a href="https://leetcode-cn.com/problems/insert-delete-getrandom-o1/">380. O(1) 时间插入、删除和获取随机元素</a></li></ul><h6 id="困难-17"><a href="#困难-17" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/find-median-from-data-stream/">295. 数据流的中位数</a></li><li><a href="https://leetcode-cn.com/problems/lfu-cache/">460. LFU 缓存</a></li></ul><h2 id="𐀴-贪心"><a href="#𐀴-贪心" class="headerlink" title="𐀴 贪心"></a>𐀴 贪心</h2><h6 id="中等-21"><a href="#中等-21" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/ugly-number-ii/">264. 丑数 II</a></li><li><a href="https://leetcode-cn.com/problems/validate-stack-sequences/">946. 验证栈序列</a></li><li><a href="https://leetcode-cn.com/problems/reorganize-string/">767. 重构字符串</a></li><li><a href="https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums/">373. 查找和最小的 K 对数字</a></li><li><a href="https://leetcode-cn.com/problems/super-ugly-number/">313. 超级丑数</a></li></ul><h2 id="𐀴-回溯"><a href="#𐀴-回溯" class="headerlink" title="𐀴 回溯"></a>𐀴 回溯</h2><h6 id="中等-22"><a href="#中等-22" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/permutations/">46. 全排列</a></li><li><a href="https://leetcode-cn.com/problems/generate-parentheses/">22. 括号生成</a></li><li><a href="https://leetcode-cn.com/problems/restore-ip-addresses/">93. 复原 IP 地址</a></li><li><a href="https://leetcode-cn.com/problems/subsets/">78. 子集</a></li><li><a href="https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/">17. 电话号码的字母组合</a></li><li><a href="https://leetcode-cn.com/problems/word-search/">79. 单词搜索</a></li><li><a href="https://leetcode-cn.com/problems/subsets-ii/">90. 子集 II</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum/">39. 组合总和</a></li><li><a href="https://leetcode-cn.com/problems/combinations/">77. 组合</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum-ii/">40. 组合总和 II</a></li><li><a href="https://leetcode-cn.com/problems/permutations-ii/">47. 全排列 II</a></li><li><a href="https://leetcode-cn.com/problems/split-array-into-fibonacci-sequence/">842. 将数组拆分成斐波那契序列</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum-iii/">216. 组合总和 III</a></li><li><a href="https://leetcode-cn.com/problems/gray-code/">89. 格雷编码</a></li></ul><h6 id="困难-18"><a href="#困难-18" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/n-queens/">51. N 皇后</a></li><li><a href="https://leetcode-cn.com/problems/sudoku-solver/">37. 解数独</a></li><li><a href="https://leetcode-cn.com/problems/word-ladder-ii/">126. 单词接龙 II</a></li><li><a href="https://leetcode-cn.com/problems/maximize-grid-happiness/">1659. 最大化网格幸福感</a></li></ul><h2 id="𐀴-克隆"><a href="#𐀴-克隆" class="headerlink" title="𐀴 克隆"></a>𐀴 克隆</h2><h6 id="中等-23"><a href="#中等-23" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/clone-graph/">133. 克隆图</a></li><li><a href="https://leetcode-cn.com/problems/copy-list-with-random-pointer/">138. 复制带随机指针的链表</a></li></ul><h2 id="𐀴-数学"><a href="#𐀴-数学" class="headerlink" title="𐀴 数学"></a>𐀴 数学</h2><h5 id="简单-15"><a href="#简单-15" class="headerlink" title="简单"></a>简单</h5><ul><li><a href="https://leetcode-cn.com/problems/count-primes/">204. 计数质数</a></li><li><a href="https://leetcode-cn.com/problems/maximum-product-of-three-numbers/">628. 三个数的最大乘积</a></li><li><a href="https://leetcode-cn.com/problems/largest-perimeter-triangle/">976. 三角形的最大周长</a></li><li><a href="https://leetcode-cn.com/problems/happy-number/">202. 快乐数</a></li><li><a href="https://leetcode-cn.com/problems/check-if-it-is-a-straight-line/">1232. 缀点成线</a></li></ul><h6 id="中等-24"><a href="#中等-24" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/divide-two-integers/">29. 两数相除</a></li><li><a href="https://leetcode-cn.com/problems/integer-break/">343. 整数拆分</a></li><li><a href="https://leetcode-cn.com/problems/fraction-to-recurring-decimal/">166. 分数到小数</a></li></ul><h6 id="困难-19"><a href="#困难-19" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/max-points-on-a-line/">149. 直线上最多的点数</a></li></ul><h2 id="𐀴-极大极小化"><a href="#𐀴-极大极小化" class="headerlink" title="𐀴 极大极小化"></a>𐀴 极大极小化</h2><h6 id="简单-16"><a href="#简单-16" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/nim-game/">292. Nim 游戏</a></li></ul><h6 id="中等-25"><a href="#中等-25" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/">375. 猜数字大小 II</a></li><li><a href="https://leetcode-cn.com/problems/predict-the-winner/">486. 预测赢家</a></li><li><a href="https://leetcode-cn.com/problems/can-i-win/">464. 我能赢吗</a></li><li><a href="https://leetcode-cn.com/problems/stone-game/">877. 石子游戏</a></li></ul><h2 id="𐀴-几何"><a href="#𐀴-几何" class="headerlink" title="𐀴 几何"></a>𐀴 几何</h2><h6 id="简单-17"><a href="#简单-17" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/check-if-it-is-a-straight-line/">1232. 缀点成线</a></li><li><a href="https://leetcode-cn.com/problems/minimum-time-visiting-all-points/">1266. 访问所有点的最小时间</a></li><li><a href="https://leetcode-cn.com/problems/surface-area-of-3d-shapes/">892. 三维形体的表面积</a></li></ul><h6 id="中等-26"><a href="#中等-26" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/circle-and-rectangle-overlapping/">1401. 圆和矩形是否有重叠</a></li><li><a href="https://leetcode-cn.com/problems/minimum-area-rectangle-ii/">963. 最小面积矩形 II</a></li></ul><h6 id="困难-20"><a href="#困难-20" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/erect-the-fence/">587. 安装栅栏</a></li><li><a href="https://leetcode-cn.com/problems/best-position-for-a-service-centre/">1515. 服务中心的最佳位置</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware打开ubantu黑屏无反应</title>
      <link href="/2021/12/03/vmware-da-kai-ubantu-hei-ping-wu-fan-ying/"/>
      <url>/2021/12/03/vmware-da-kai-ubantu-hei-ping-wu-fan-ying/</url>
      
        <content type="html"><![CDATA[<p>设置VMware编辑–&gt;首选项–&gt;设备–&gt;启用虚拟打印机 即可</p><p><img src="/./VMware%E6%89%93%E5%BC%80ubantu%E9%BB%91%E5%B1%8F%E6%97%A0%E5%8F%8D%E5%BA%94/1.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QT编写串口助手</title>
      <link href="/2021/12/02/qt-bian-xie-chuan-kou-zhu-shou/"/>
      <url>/2021/12/02/qt-bian-xie-chuan-kou-zhu-shou/</url>
      
        <content type="html"><![CDATA[<p><em><strong>.pro文件中</strong></em></p><p>QT += serialport</p><p><em><strong>serial.h:</strong></em></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">ifndef</span> SERIAL_H</span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">define</span> SERIAL_H</span></span><br><span class="line"> <span class="number">3</span> </span><br><span class="line"> <span class="number">4</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"> <span class="number">5</span> </span><br><span class="line"> <span class="number">6</span> <span class="comment">/*-------user--------------------*/</span></span><br><span class="line"> <span class="number">7</span> <span class="comment">//port</span></span><br><span class="line"> <span class="number">8</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QSerialPort&gt;</span></span></span><br><span class="line"> <span class="number">9</span> <span class="comment">//debug</span></span><br><span class="line"><span class="number">10</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="number">11</span> <span class="comment">/*-------------------------------*/</span></span><br><span class="line"><span class="number">12</span> </span><br><span class="line"><span class="number">13</span> <span class="keyword">namespace</span> Ui {</span><br><span class="line"><span class="number">14</span> <span class="class"><span class="keyword">class</span> <span class="title">Serial</span>;</span></span><br><span class="line"><span class="number">15</span> }</span><br><span class="line"><span class="number">16</span> </span><br><span class="line"><span class="number">17</span> <span class="class"><span class="keyword">class</span> <span class="title">Serial</span> :</span> <span class="keyword">public</span> QMainWindow</span><br><span class="line"><span class="number">18</span> {</span><br><span class="line"><span class="number">19</span>     Q_OBJECT</span><br><span class="line"><span class="number">20</span> </span><br><span class="line"><span class="number">21</span> <span class="keyword">public</span>:</span><br><span class="line"><span class="number">22</span>     <span class="function"><span class="keyword">explicit</span> <span class="title">Serial</span><span class="params">(QWidget *parent = <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="number">23</span>     ~<span class="built_in">Serial</span>();</span><br><span class="line"><span class="number">24</span> </span><br><span class="line"><span class="number">25</span> <span class="keyword">private</span> slots:</span><br><span class="line"><span class="number">26</span>     <span class="comment">//button</span></span><br><span class="line"><span class="number">27</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_open_port</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">28</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_close_port</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">29</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_send_data</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">30</span> </span><br><span class="line"><span class="number">31</span>     <span class="comment">//receive data</span></span><br><span class="line"><span class="number">32</span>     <span class="function"><span class="keyword">void</span> <span class="title">receive_data</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">33</span> </span><br><span class="line"><span class="number">34</span> <span class="keyword">private</span>:</span><br><span class="line"><span class="number">35</span>     Ui::Serial *ui;</span><br><span class="line"><span class="number">36</span>     <span class="comment">/*----------funtion-------------------*/</span></span><br><span class="line"><span class="number">37</span>     <span class="function"><span class="keyword">void</span> <span class="title">system_init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">38</span>     <span class="comment">/*----------variable-------------------*/</span></span><br><span class="line"><span class="number">39</span>     QSerialPort global_port;</span><br><span class="line"><span class="number">40</span> };</span><br><span class="line"><span class="number">41</span> </span><br><span class="line"><span class="number">42</span> <span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// SERIAL_H</span></span></span><br></pre></td></tr></tbody></table></figure><p>main.cpp:</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"> <span class="number">3</span> </span><br><span class="line"> <span class="number">4</span> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"> 5 </span>{</span><br><span class="line"> <span class="number">6</span>     <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"> <span class="number">7</span>     Serial w;</span><br><span class="line"> <span class="number">8</span>     w.<span class="built_in">show</span>();</span><br><span class="line"> <span class="number">9</span> </span><br><span class="line"><span class="number">10</span>     <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line"><span class="number">11</span> }</span><br></pre></td></tr></tbody></table></figure><p><em><strong>serial.cpp:</strong></em></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">  <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line">  <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_serial.h"</span></span></span><br><span class="line">  <span class="number">3</span> </span><br><span class="line">  <span class="number">4</span> Serial::<span class="built_in">Serial</span>(QWidget *parent) :</span><br><span class="line">  <span class="number">5</span>     <span class="built_in">QMainWindow</span>(parent),</span><br><span class="line">  <span class="number">6</span>     <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Serial)</span><br><span class="line">  <span class="number">7</span> {</span><br><span class="line">  <span class="number">8</span>     ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">  <span class="number">9</span>     <span class="comment">//user</span></span><br><span class="line"> <span class="number">10</span>     <span class="built_in">system_init</span>();</span><br><span class="line"> <span class="number">11</span> }</span><br><span class="line"> <span class="number">12</span> </span><br><span class="line"> <span class="number">13</span> Serial::~<span class="built_in">Serial</span>()</span><br><span class="line"> <span class="number">14</span> {</span><br><span class="line"> <span class="number">15</span>     <span class="keyword">delete</span> ui;</span><br><span class="line"> <span class="number">16</span> }</span><br><span class="line"> <span class="number">17</span> </span><br><span class="line"> <span class="number">18</span> <span class="comment">/*--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> 19  *          funtions</span></span><br><span class="line"><span class="comment"> 20  * -------------------------------------------------------------------------*/</span></span><br><span class="line"> <span class="number">21</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::system_init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 22 </span>{</span><br><span class="line"> <span class="number">23</span>     <span class="comment">//port config</span></span><br><span class="line"> <span class="number">24</span>     global_port.<span class="built_in">setParity</span>(QSerialPort::NoParity);</span><br><span class="line"> <span class="number">25</span>     global_port.<span class="built_in">setDataBits</span>(QSerialPort::Data8);</span><br><span class="line"> <span class="number">26</span>     global_port.<span class="built_in">setStopBits</span>(QSerialPort::OneStop);</span><br><span class="line"> <span class="number">27</span> </span><br><span class="line"> <span class="number">28</span>     <span class="comment">//connect</span></span><br><span class="line"> <span class="number">29</span>     <span class="built_in">connect</span>(ui-&gt;btn_open,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_open_port);</span><br><span class="line"> <span class="number">30</span>     <span class="built_in">connect</span>(ui-&gt;btn_close,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_close_port);</span><br><span class="line"> <span class="number">31</span>     <span class="built_in">connect</span>(ui-&gt;btn_send,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_send_data);</span><br><span class="line"> <span class="number">32</span>     <span class="built_in">connect</span>(&amp;global_port,&amp;QSerialPort::readyRead,<span class="keyword">this</span>,&amp;Serial::receive_data);</span><br><span class="line"> <span class="number">33</span> }</span><br><span class="line"> <span class="number">34</span> <span class="comment">/*--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> 35  *          slots</span></span><br><span class="line"><span class="comment"> 36  * -------------------------------------------------------------------------*/</span></span><br><span class="line"> <span class="number">37</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_open_port</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function"> 38 </span>{</span><br><span class="line"> <span class="number">39</span>     <span class="comment">/*--------port name------------------------*/</span></span><br><span class="line"> <span class="number">40</span>     <span class="built_in">qDebug</span>()&lt;&lt;ui-&gt;cmb_port_name-&gt;<span class="built_in">currentIndex</span>();<span class="comment">//printf 0</span></span><br><span class="line"> <span class="number">41</span> <span class="comment">//    int i = 10;</span></span><br><span class="line"> <span class="number">42</span> <span class="comment">//    qDebug("%d",i);</span></span><br><span class="line"> <span class="number">43</span>     <span class="built_in"><span class="keyword">switch</span></span> (ui-&gt;cmb_port_name-&gt;<span class="built_in">currentIndex</span>()) {</span><br><span class="line"> <span class="number">44</span>     <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"> <span class="number">45</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM1"</span>);</span><br><span class="line"> <span class="number">46</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">47</span>     <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> <span class="number">48</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM2"</span>);</span><br><span class="line"> <span class="number">49</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">50</span>     <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> <span class="number">51</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM3"</span>);</span><br><span class="line"> <span class="number">52</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">53</span>     <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"> <span class="number">54</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM4"</span>);</span><br><span class="line"> <span class="number">55</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">56</span>     <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"> <span class="number">57</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM5"</span>);</span><br><span class="line"> <span class="number">58</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">59</span>     <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"> <span class="number">60</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM6"</span>);</span><br><span class="line"> <span class="number">61</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">62</span>     <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"> <span class="number">63</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM7"</span>);</span><br><span class="line"> <span class="number">64</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">65</span>     <span class="keyword">default</span>:</span><br><span class="line"> <span class="number">66</span>          global_port.<span class="built_in">setPortName</span>(<span class="string">"COM8"</span>);</span><br><span class="line"> <span class="number">67</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">68</span>     }</span><br><span class="line"> <span class="number">69</span>     <span class="comment">/*--------baud rate-----------------------------*/</span></span><br><span class="line"> <span class="number">70</span>     <span class="built_in"><span class="keyword">switch</span></span> (ui-&gt;cmb_baud_rate-&gt;<span class="built_in">currentIndex</span>()) {</span><br><span class="line"> <span class="number">71</span>     <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"> <span class="number">72</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud115200);</span><br><span class="line"> <span class="number">73</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">74</span>     <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> <span class="number">75</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud57600);</span><br><span class="line"> <span class="number">76</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">77</span>     <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> <span class="number">78</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud38400);</span><br><span class="line"> <span class="number">79</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">80</span>     <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"> <span class="number">81</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud19200);</span><br><span class="line"> <span class="number">82</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">83</span>     <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"> <span class="number">84</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud9600);</span><br><span class="line"> <span class="number">85</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">86</span>     <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"> <span class="number">87</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud4800);</span><br><span class="line"> <span class="number">88</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">89</span>     <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"> <span class="number">90</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud2400);</span><br><span class="line"> <span class="number">91</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">92</span>     <span class="keyword">default</span>:</span><br><span class="line"> <span class="number">93</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud1200);</span><br><span class="line"> <span class="number">94</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">95</span>     }</span><br><span class="line"> <span class="number">96</span>     <span class="comment">//open</span></span><br><span class="line"> <span class="number">97</span>     global_port.<span class="built_in">open</span>(QIODevice::ReadWrite);</span><br><span class="line"> <span class="number">98</span>     ui-&gt;lab_status-&gt;<span class="built_in">setText</span>(<span class="string">"Connected"</span>);</span><br><span class="line"> <span class="number">99</span>     <span class="comment">//test</span></span><br><span class="line"><span class="number">100</span> <span class="comment">//    global_port.write("1");</span></span><br><span class="line"><span class="number">101</span> }</span><br><span class="line"><span class="number">102</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_close_port</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function">103 </span>{</span><br><span class="line"><span class="number">104</span>     ui-&gt;lab_status-&gt;<span class="built_in">setText</span>(<span class="string">"Disconnected"</span>);</span><br><span class="line"><span class="number">105</span>     global_port.<span class="built_in">close</span>();</span><br><span class="line"><span class="number">106</span> }</span><br><span class="line"><span class="number">107</span> <span class="comment">/*------------sending data---------------------*/</span></span><br><span class="line"><span class="number">108</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_send_data</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function">109 </span>{</span><br><span class="line"><span class="number">110</span>    QString data = ui-&gt;lint_send_data-&gt;<span class="built_in">text</span>();</span><br><span class="line"><span class="number">111</span>    QByteArray array = data.<span class="built_in">toLatin1</span>();<span class="comment">//QString---&gt;QByteArray</span></span><br><span class="line"><span class="number">112</span>    global_port.<span class="built_in">write</span>(array);</span><br><span class="line"><span class="number">113</span> }</span><br><span class="line"><span class="number">114</span> <span class="comment">/*-----------receive data-----------------*/</span></span><br><span class="line"><span class="number">115</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::receive_data</span><span class="params">()</span></span></span><br><span class="line"><span class="function">116 </span>{</span><br><span class="line"><span class="number">117</span>    QByteArray array = global_port.<span class="built_in">readAll</span>();</span><br><span class="line"><span class="number">118</span>    <span class="built_in">qDebug</span>()&lt;&lt;array;</span><br><span class="line"><span class="number">119</span>    <span class="keyword">if</span>(ui-&gt;checkBox-&gt;<span class="built_in">checkState</span>() == Qt::Checked){</span><br><span class="line"><span class="number">120</span>       ui-&gt;plainTextEdit-&gt;<span class="built_in">insertPlainText</span>(<span class="built_in">QString</span>(array.<span class="built_in">toHex</span>(<span class="string">' '</span>).<span class="built_in">toUpper</span>().<span class="built_in">append</span>(<span class="string">' '</span>)));</span><br><span class="line"><span class="number">121</span>    }<span class="keyword">else</span> {</span><br><span class="line"><span class="number">122</span>        ui-&gt;plainTextEdit-&gt;<span class="built_in">insertPlainText</span>(<span class="built_in">QString</span>(array));</span><br><span class="line"><span class="number">123</span>    }</span><br><span class="line"><span class="number">124</span> }</span><br></pre></td></tr></tbody></table></figure><p><em><strong>ui:</strong></em></p><p><img src="https://img2020.cnblogs.com/blog/2092994/202009/2092994-20200913005814247-966532200.png" alt="img"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>串口发送问题</title>
      <link href="/2021/12/02/chuan-kou-fa-song-wen-ti/"/>
      <url>/2021/12/02/chuan-kou-fa-song-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>　串口发送hex命令为char型的十六进制命令，并用到了CRC16校验，分别取校验结果数据的高低位</p><p>　　10进制int型数据转16进制，并取高低位：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">  <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">  <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">  <span class="number">3</span> <span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">  <span class="number">4</span> </span><br><span class="line">  <span class="number">5</span> <span class="meta">#<span class="meta-keyword">define</span> TABLE_METHOD    1</span></span><br><span class="line">  <span class="number">6</span> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> CRCHi[] = {</span><br><span class="line">  <span class="number">7</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">  <span class="number">8</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">  <span class="number">9</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">10</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">11</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">12</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">13</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">14</span>     <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">15</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">16</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">17</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">18</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">19</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">20</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">21</span>     <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">22</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">23</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">24</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">25</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">26</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">27</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">28</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span></span><br><span class="line"> <span class="number">29</span> };</span><br><span class="line"> <span class="number">30</span> </span><br><span class="line"> <span class="number">31</span> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> CRCLo[] = {</span><br><span class="line"> <span class="number">32</span>     <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0xC1</span>, <span class="number">0x01</span>, <span class="number">0xC3</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0xC2</span>, <span class="number">0xC6</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0xC7</span>,</span><br><span class="line"> <span class="number">33</span>     <span class="number">0x05</span>, <span class="number">0xC5</span>, <span class="number">0xC4</span>, <span class="number">0x04</span>, <span class="number">0xCC</span>, <span class="number">0x0C</span>, <span class="number">0x0D</span>, <span class="number">0xCD</span>, <span class="number">0x0F</span>, <span class="number">0xCF</span>, <span class="number">0xCE</span>, <span class="number">0x0E</span>,</span><br><span class="line"> <span class="number">34</span>     <span class="number">0x0A</span>, <span class="number">0xCA</span>, <span class="number">0xCB</span>, <span class="number">0x0B</span>, <span class="number">0xC9</span>, <span class="number">0x09</span>, <span class="number">0x08</span>, <span class="number">0xC8</span>, <span class="number">0xD8</span>, <span class="number">0x18</span>, <span class="number">0x19</span>, <span class="number">0xD9</span>,</span><br><span class="line"> <span class="number">35</span>     <span class="number">0x1B</span>, <span class="number">0xDB</span>, <span class="number">0xDA</span>, <span class="number">0x1A</span>, <span class="number">0x1E</span>, <span class="number">0xDE</span>, <span class="number">0xDF</span>, <span class="number">0x1F</span>, <span class="number">0xDD</span>, <span class="number">0x1D</span>, <span class="number">0x1C</span>, <span class="number">0xDC</span>,</span><br><span class="line"> <span class="number">36</span>     <span class="number">0x14</span>, <span class="number">0xD4</span>, <span class="number">0xD5</span>, <span class="number">0x15</span>, <span class="number">0xD7</span>, <span class="number">0x17</span>, <span class="number">0x16</span>, <span class="number">0xD6</span>, <span class="number">0xD2</span>, <span class="number">0x12</span>, <span class="number">0x13</span>, <span class="number">0xD3</span>,</span><br><span class="line"> <span class="number">37</span>     <span class="number">0x11</span>, <span class="number">0xD1</span>, <span class="number">0xD0</span>, <span class="number">0x10</span>, <span class="number">0xF0</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0xF1</span>, <span class="number">0x33</span>, <span class="number">0xF3</span>, <span class="number">0xF2</span>, <span class="number">0x32</span>,</span><br><span class="line"> <span class="number">38</span>     <span class="number">0x36</span>, <span class="number">0xF6</span>, <span class="number">0xF7</span>, <span class="number">0x37</span>, <span class="number">0xF5</span>, <span class="number">0x35</span>, <span class="number">0x34</span>, <span class="number">0xF4</span>, <span class="number">0x3C</span>, <span class="number">0xFC</span>, <span class="number">0xFD</span>, <span class="number">0x3D</span>,</span><br><span class="line"> <span class="number">39</span>     <span class="number">0xFF</span>, <span class="number">0x3F</span>, <span class="number">0x3E</span>, <span class="number">0xFE</span>, <span class="number">0xFA</span>, <span class="number">0x3A</span>, <span class="number">0x3B</span>, <span class="number">0xFB</span>, <span class="number">0x39</span>, <span class="number">0xF9</span>, <span class="number">0xF8</span>, <span class="number">0x38</span>,</span><br><span class="line"> <span class="number">40</span>     <span class="number">0x28</span>, <span class="number">0xE8</span>, <span class="number">0xE9</span>, <span class="number">0x29</span>, <span class="number">0xEB</span>, <span class="number">0x2B</span>, <span class="number">0x2A</span>, <span class="number">0xEA</span>, <span class="number">0xEE</span>, <span class="number">0x2E</span>, <span class="number">0x2F</span>, <span class="number">0xEF</span>,</span><br><span class="line"> <span class="number">41</span>     <span class="number">0x2D</span>, <span class="number">0xED</span>, <span class="number">0xEC</span>, <span class="number">0x2C</span>, <span class="number">0xE4</span>, <span class="number">0x24</span>, <span class="number">0x25</span>, <span class="number">0xE5</span>, <span class="number">0x27</span>, <span class="number">0xE7</span>, <span class="number">0xE6</span>, <span class="number">0x26</span>,</span><br><span class="line"> <span class="number">42</span>     <span class="number">0x22</span>, <span class="number">0xE2</span>, <span class="number">0xE3</span>, <span class="number">0x23</span>, <span class="number">0xE1</span>, <span class="number">0x21</span>, <span class="number">0x20</span>, <span class="number">0xE0</span>, <span class="number">0xA0</span>, <span class="number">0x60</span>, <span class="number">0x61</span>, <span class="number">0xA1</span>,</span><br><span class="line"> <span class="number">43</span>     <span class="number">0x63</span>, <span class="number">0xA3</span>, <span class="number">0xA2</span>, <span class="number">0x62</span>, <span class="number">0x66</span>, <span class="number">0xA6</span>, <span class="number">0xA7</span>, <span class="number">0x67</span>, <span class="number">0xA5</span>, <span class="number">0x65</span>, <span class="number">0x64</span>, <span class="number">0xA4</span>,</span><br><span class="line"> <span class="number">44</span>     <span class="number">0x6C</span>, <span class="number">0xAC</span>, <span class="number">0xAD</span>, <span class="number">0x6D</span>, <span class="number">0xAF</span>, <span class="number">0x6F</span>, <span class="number">0x6E</span>, <span class="number">0xAE</span>, <span class="number">0xAA</span>, <span class="number">0x6A</span>, <span class="number">0x6B</span>, <span class="number">0xAB</span>,</span><br><span class="line"> <span class="number">45</span>     <span class="number">0x69</span>, <span class="number">0xA9</span>, <span class="number">0xA8</span>, <span class="number">0x68</span>, <span class="number">0x78</span>, <span class="number">0xB8</span>, <span class="number">0xB9</span>, <span class="number">0x79</span>, <span class="number">0xBB</span>, <span class="number">0x7B</span>, <span class="number">0x7A</span>, <span class="number">0xBA</span>,</span><br><span class="line"> <span class="number">46</span>     <span class="number">0xBE</span>, <span class="number">0x7E</span>, <span class="number">0x7F</span>, <span class="number">0xBF</span>, <span class="number">0x7D</span>, <span class="number">0xBD</span>, <span class="number">0xBC</span>, <span class="number">0x7C</span>, <span class="number">0xB4</span>, <span class="number">0x74</span>, <span class="number">0x75</span>, <span class="number">0xB5</span>,</span><br><span class="line"> <span class="number">47</span>     <span class="number">0x77</span>, <span class="number">0xB7</span>, <span class="number">0xB6</span>, <span class="number">0x76</span>, <span class="number">0x72</span>, <span class="number">0xB2</span>, <span class="number">0xB3</span>, <span class="number">0x73</span>, <span class="number">0xB1</span>, <span class="number">0x71</span>, <span class="number">0x70</span>, <span class="number">0xB0</span>,</span><br><span class="line"> <span class="number">48</span>     <span class="number">0x50</span>, <span class="number">0x90</span>, <span class="number">0x91</span>, <span class="number">0x51</span>, <span class="number">0x93</span>, <span class="number">0x53</span>, <span class="number">0x52</span>, <span class="number">0x92</span>, <span class="number">0x96</span>, <span class="number">0x56</span>, <span class="number">0x57</span>, <span class="number">0x97</span>,</span><br><span class="line"> <span class="number">49</span>     <span class="number">0x55</span>, <span class="number">0x95</span>, <span class="number">0x94</span>, <span class="number">0x54</span>, <span class="number">0x9C</span>, <span class="number">0x5C</span>, <span class="number">0x5D</span>, <span class="number">0x9D</span>, <span class="number">0x5F</span>, <span class="number">0x9F</span>, <span class="number">0x9E</span>, <span class="number">0x5E</span>,</span><br><span class="line"> <span class="number">50</span>     <span class="number">0x5A</span>, <span class="number">0x9A</span>, <span class="number">0x9B</span>, <span class="number">0x5B</span>, <span class="number">0x99</span>, <span class="number">0x59</span>, <span class="number">0x58</span>, <span class="number">0x98</span>, <span class="number">0x88</span>, <span class="number">0x48</span>, <span class="number">0x49</span>, <span class="number">0x89</span>,</span><br><span class="line"> <span class="number">51</span>     <span class="number">0x4B</span>, <span class="number">0x8B</span>, <span class="number">0x8A</span>, <span class="number">0x4A</span>, <span class="number">0x4E</span>, <span class="number">0x8E</span>, <span class="number">0x8F</span>, <span class="number">0x4F</span>, <span class="number">0x8D</span>, <span class="number">0x4D</span>, <span class="number">0x4C</span>, <span class="number">0x8C</span>,</span><br><span class="line"> <span class="number">52</span>     <span class="number">0x44</span>, <span class="number">0x84</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0x87</span>, <span class="number">0x47</span>, <span class="number">0x46</span>, <span class="number">0x86</span>, <span class="number">0x82</span>, <span class="number">0x42</span>, <span class="number">0x43</span>, <span class="number">0x83</span>,</span><br><span class="line"> <span class="number">53</span>     <span class="number">0x41</span>, <span class="number">0x81</span>, <span class="number">0x80</span>, <span class="number">0x40</span></span><br><span class="line"> <span class="number">54</span> };</span><br><span class="line"> <span class="number">55</span> </span><br><span class="line"> <span class="number">56</span> <span class="function"><span class="keyword">uint16_t</span> <span class="title">CRC16</span><span class="params">( <span class="keyword">uint8_t</span> *Frame, <span class="keyword">uint16_t</span> Len )</span></span></span><br><span class="line"><span class="function"> 57 </span>{</span><br><span class="line"> <span class="number">58</span>     <span class="keyword">uint8_t</span>        ucCRCHi = <span class="number">0xFF</span>;</span><br><span class="line"> <span class="number">59</span>     <span class="keyword">uint8_t</span>        ucCRCLo = <span class="number">0xFF</span>;</span><br><span class="line"> <span class="number">60</span>     <span class="keyword">int</span>                iIndex;</span><br><span class="line"> <span class="number">61</span> </span><br><span class="line"> <span class="number">62</span>     <span class="keyword">while</span>( Len-- )</span><br><span class="line"> <span class="number">63</span>     {</span><br><span class="line"> <span class="number">64</span>         iIndex = ucCRCLo ^ *( Frame++ );</span><br><span class="line"> <span class="number">65</span>         ucCRCLo = ( <span class="keyword">uint8_t</span> )( ucCRCHi ^ CRCHi[iIndex] );</span><br><span class="line"> <span class="number">66</span>         ucCRCHi = CRCLo[iIndex];</span><br><span class="line"> <span class="number">67</span>     }</span><br><span class="line"> <span class="number">68</span>     <span class="keyword">return</span> ( <span class="keyword">uint16_t</span> )( ucCRCHi &lt;&lt; <span class="number">8</span> | ucCRCLo );</span><br><span class="line"> <span class="number">69</span> }</span><br><span class="line"> <span class="number">70</span> </span><br><span class="line"> <span class="number">93</span> </span><br><span class="line"> <span class="number">94</span> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span> </span>{</span><br><span class="line"> <span class="number">95</span>   <span class="keyword">char</span> a[] = {<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>, <span class="number">0x0d</span>};</span><br><span class="line"> <span class="number">96</span>   <span class="keyword">char</span>* temp = a;</span><br><span class="line"> <span class="number">97</span>   <span class="keyword">uint16_t</span> c = <span class="built_in">CRC16</span>((<span class="keyword">uint8_t</span> *)temp, <span class="number">4</span>);</span><br><span class="line"> <span class="number">98</span>   cout&lt;&lt; c &lt;&lt;endl;</span><br><span class="line"> <span class="number">99</span>   <span class="keyword">int</span> cL= c%<span class="number">256</span> &amp; <span class="number">0xff</span>;   <span class="comment">//校验结果的低位</span></span><br><span class="line"><span class="number">100</span>   <span class="keyword">int</span> cH = c/ <span class="number">256</span> &amp; <span class="number">0xff</span>; <span class="comment">//校验结果的高位</span></span><br><span class="line"><span class="number">101</span> }</span><br></pre></td></tr></tbody></table></figure><p>　　后续只需对得到的高低位数据进行强制类型转换就可以插入到命令字符串中发送了~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>The difference between join and detach</title>
      <link href="/2021/12/02/the-difference-between-join-and-detach/"/>
      <url>/2021/12/02/the-difference-between-join-and-detach/</url>
      
        <content type="html"><![CDATA[<p>A C++ <code>thread</code> object generally (but not always) represents a thread of execution, which is an OS or platform concept.</p><p>When <code>thread::join()</code> is called, the calling thread will block until the thread of execution has completed. Basically, this is one mechanism that can be used to know when a thread has finished. When <code>thread::join()</code> returns, the OS thread of execution has completed and the C++ <code>thread</code> object can be destroyed.</p><p>The <code>thread::detach()</code> is called, the thread of execution is “detached” from the <code>thread</code> object and is no longer represented by a <code>thread</code> object - they are two independent things. The C++ <code>thread</code> object can be destroyed and the OS thread of execution can continue on. If the program needs to know when that thread of execution has completed, some other mechanism needs to be used. <code>join()</code> cannot be called on that <code>thread</code> object any more, since it is no longer associated with a thread of execution.</p><p>It is considered an error to destroy a C++ <code>thread</code> object while it is still “joinable”. That is, in order to destroy a C++ <code>thread</code> object either <code>join()</code> needs to be called (and completed) or <code>detach()</code> must be called. If a C++ <code>thread</code> object is still joinable when it’s destroyed, an exception will be thrown.</p><p>Some other ways that a C++ <code>thread</code> object will not represent a thread of execution (ie., can be unjoinable):</p><ul><li>A default constructed <code>thread</code> object does not represent a thread of execution, so is not joinable.</li><li>A thread that has been moved from will no longer represent a thread of execution, so is not joinable.</li></ul><p><code>join()</code> doesn’t kill the thread. Actually it waits until thread main function returns. So if your thread main function looks like this:</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>join()</code> is going to wait forever.</p><p><code>detatch()</code> doesn’t kill thread either. Actually it tells <code>std::thread</code> that this thread should continue to run even when <code>std::thread</code> object is destroyed. C++ checks in std::thread destructor that thread is either joined or detached and terminates program if this check fails.</p><p>So if you uncomment first line in <code>main</code> function of the following code it will crash. If you uncomment second or third line it will work ok.</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>{</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fail1</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    <span class="comment">// will fail when we try to destroy t since it is not joined or detached</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">works1</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    t.<span class="built_in">join</span>();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">works2</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    t.<span class="built_in">detach</span>();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="comment">// fail1();</span></span><br><span class="line">    <span class="comment">// works1();</span></span><br><span class="line">    <span class="comment">// works2();</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QT文件操作-遍历</title>
      <link href="/2021/12/02/qt-wen-jian-cao-zuo-bian-li/"/>
      <url>/2021/12/02/qt-wen-jian-cao-zuo-bian-li/</url>
      
        <content type="html"><![CDATA[<p>QT的路径格式使用 / 或 \</p><p>读写文本</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span>     <span class="comment">//写文本</span></span><br><span class="line"> <span class="number">2</span>     <span class="function">QFile <span class="title">f</span><span class="params">(<span class="string">"F:/src/1.txt"</span>)</span></span>;</span><br><span class="line"> <span class="number">3</span>     <span class="keyword">if</span>(!f.<span class="built_in">open</span>(QIODevice::WriteOnly | QIODevice::Text))</span><br><span class="line"> <span class="number">4</span>     {</span><br><span class="line"> <span class="number">5</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"Open failed."</span> &lt;&lt; endl;</span><br><span class="line"> <span class="number">6</span>     }</span><br><span class="line"> <span class="number">7</span> </span><br><span class="line"> <span class="number">8</span>     <span class="function">QTextStream <span class="title">txtOutput</span><span class="params">(&amp;f)</span></span>;</span><br><span class="line"> <span class="number">9</span>     <span class="function">QString <span class="title">s1</span><span class="params">(<span class="string">"123"</span>)</span></span>;</span><br><span class="line"><span class="number">10</span>     <span class="function">quint32 <span class="title">n1</span><span class="params">(<span class="number">123</span>)</span></span>;</span><br><span class="line"><span class="number">11</span> </span><br><span class="line"><span class="number">12</span>     txtOutput &lt;&lt; s1 &lt;&lt; endl;</span><br><span class="line"><span class="number">13</span>     txtOutput &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line"><span class="number">14</span> </span><br><span class="line"><span class="number">15</span>     f.<span class="built_in">close</span>();</span><br><span class="line"><span class="number">16</span> </span><br><span class="line"><span class="number">17</span> </span><br><span class="line"><span class="number">18</span>    <span class="comment">//读文本</span></span><br><span class="line"><span class="number">19</span>     <span class="function">QFile <span class="title">f</span><span class="params">(<span class="string">"F:/src/1.txt"</span>)</span></span>;</span><br><span class="line"><span class="number">20</span>     <span class="keyword">if</span>(!f.<span class="built_in">open</span>(QIODevice::ReadOnly | QIODevice::Text))</span><br><span class="line"><span class="number">21</span>     {</span><br><span class="line"><span class="number">22</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"Open failed."</span> &lt;&lt; endl;</span><br><span class="line"><span class="number">23</span>     }</span><br><span class="line"><span class="number">24</span> </span><br><span class="line"><span class="number">25</span>     <span class="function">QTextStream <span class="title">txtInput</span><span class="params">(&amp;f)</span></span>;</span><br><span class="line"><span class="number">26</span>     QString lineStr;</span><br><span class="line"><span class="number">27</span>     <span class="keyword">while</span>(!txtInput.<span class="built_in">atEnd</span>())</span><br><span class="line"><span class="number">28</span>     {</span><br><span class="line"><span class="number">29</span>         lineStr = txtInput.<span class="built_in">readLine</span>();</span><br><span class="line"><span class="number">30</span>         <span class="built_in">qDebug</span>() &lt;&lt; lineStr &lt;&lt; endl;</span><br><span class="line"><span class="number">31</span>     }</span><br><span class="line"><span class="number">32</span> </span><br><span class="line"><span class="number">33</span>     f.<span class="built_in">close</span>();</span><br></pre></td></tr></tbody></table></figure><p>查找路径下所有特定文件（和文件夹）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="function"><span class="keyword">void</span> <span class="title">fllemanage::on_pushButton_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 2 </span>{</span><br><span class="line"> <span class="number">3</span>     <span class="comment">//    int count = 0;</span></span><br><span class="line"> <span class="number">4</span>     <span class="comment">//    QString dirpath = "C:/Users/00/Desktop/git clone/OpenCV-Python-Tutorial/.idea";</span></span><br><span class="line"> <span class="number">5</span>     <span class="comment">//    //设置要遍历的目录</span></span><br><span class="line"> <span class="number">6</span>     <span class="comment">//    QDir dir(dirpath);</span></span><br><span class="line"> <span class="number">7</span>     <span class="comment">//    qDebug()&lt;&lt;dirpath&lt;&lt;endl;</span></span><br><span class="line"> <span class="number">8</span>     <span class="comment">//    //设置文件过滤器</span></span><br><span class="line"> <span class="number">9</span>     <span class="comment">//    QStringList nameFilters;</span></span><br><span class="line"><span class="number">10</span>     <span class="comment">//    //设置文件过滤格式</span></span><br><span class="line"><span class="number">11</span>     <span class="comment">//    nameFilters &lt;&lt; "*.xml";</span></span><br><span class="line"><span class="number">12</span>     <span class="comment">//    dir.setNameFilters(nameFilters);</span></span><br><span class="line"><span class="number">13</span>     <span class="comment">//    qDebug()&lt;&lt;dir.entryList()&lt;&lt;endl;</span></span><br><span class="line"><span class="number">14</span>     <span class="comment">//    qDebug()&lt;&lt;dir.entryInfoList()&lt;&lt;endl;</span></span><br><span class="line"><span class="number">15</span>     <span class="comment">//    //将过滤后的文件名称存入到files列表中</span></span><br><span class="line"><span class="number">16</span>     <span class="comment">//    QStringList files = dir.entryList(nameFilters, QDir::Files|QDir::Readable, QDir::Name);</span></span><br><span class="line"><span class="number">17</span>     <span class="comment">//    for(int i = 0; i&lt;files.size(); i++)</span></span><br><span class="line"><span class="number">18</span>     <span class="comment">//    {</span></span><br><span class="line"><span class="number">19</span>     <span class="comment">//        qDebug()&lt;&lt;"now, it's output from QStringlist"&lt;&lt;endl;</span></span><br><span class="line"><span class="number">20</span>     <span class="comment">//        qDebug()&lt;&lt;files[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="number">21</span>     <span class="comment">//    }</span></span><br><span class="line"><span class="number">22</span> </span><br><span class="line"><span class="number">23</span>     QStringList list = <span class="built_in">findALLfiles</span>(<span class="string">"C:/Users/00/Desktop/vsrun/123"</span>);</span><br><span class="line"><span class="number">24</span>     <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="number">25</span>     <span class="comment">//for(int i = 0 ; i &lt;list.size(); i++)</span></span><br><span class="line"><span class="number">26</span>       <span class="comment">//qDebug() &lt;&lt;list[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="number">27</span>     QStringList purposelist;</span><br><span class="line"><span class="number">28</span>     purposelist = list.<span class="built_in">filter</span>(<span class="string">".txt"</span>);</span><br><span class="line"><span class="number">29</span>     <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="number">30</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="number">31</span>     {</span><br><span class="line"><span class="number">32</span>         <span class="built_in">qDebug</span>() &lt;&lt; purposelist[i] &lt;&lt; endl;</span><br><span class="line"><span class="number">33</span>         count++;</span><br><span class="line"><span class="number">34</span>     }</span><br><span class="line"><span class="number">35</span>     <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the max file has "</span> &lt;&lt; list.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="number">36</span>     <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the purpose file has "</span> &lt;&lt; count &lt;&lt; endl;</span><br><span class="line"><span class="number">37</span> </span><br><span class="line"><span class="number">38</span>     <span class="comment">//新建文件夹（目标文件保存的位置）</span></span><br><span class="line"><span class="number">39</span> <span class="comment">//     QDir dir("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="number">40</span> <span class="comment">//     if(!dir.exists("copy to here")){</span></span><br><span class="line"><span class="number">41</span> <span class="comment">//         dir.mkdir("copy to here");</span></span><br><span class="line"><span class="number">42</span> <span class="comment">//     }</span></span><br><span class="line"><span class="number">43</span>     QString toDir = <span class="string">"C:/Users/00/Desktop/123"</span>;</span><br><span class="line"><span class="number">44</span>     <span class="comment">//toDir.replace("\\","/");</span></span><br><span class="line"><span class="number">45</span> </span><br><span class="line"><span class="number">46</span>     <span class="function">QDir <span class="title">dir</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="number">47</span>     <span class="keyword">if</span> (!dir.<span class="built_in">exists</span>(toDir)) {</span><br><span class="line"><span class="number">48</span>         dir.<span class="built_in">mkdir</span>(toDir);</span><br><span class="line"><span class="number">49</span>     }</span><br><span class="line"><span class="number">50</span> </span><br><span class="line"><span class="number">51</span>     <span class="function">QFile <span class="title">destFile</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="number">52</span>     <span class="keyword">bool</span> success = <span class="literal">true</span>;</span><br><span class="line"><span class="number">53</span>     success &amp;= destFile.<span class="built_in">open</span>(QFile::WriteOnly | QFile::Truncate);</span><br><span class="line"><span class="number">54</span> </span><br><span class="line"><span class="number">55</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="number">56</span>     {</span><br><span class="line"><span class="number">57</span>         <span class="keyword">if</span> (QFile::<span class="built_in">copy</span>(purposelist[i], toDir)) {  <span class="comment">//将文件复制到新的文件路径下</span></span><br><span class="line"><span class="number">58</span>             {<span class="comment">//QFile::copy(purposelist[i],toDir);</span></span><br><span class="line"><span class="number">59</span>                 <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">QStringLiteral</span>(<span class="string">"复制成功"</span>);</span><br><span class="line"><span class="number">60</span>             }</span><br><span class="line"><span class="number">61</span>         }</span><br><span class="line"><span class="number">62</span>     }</span><br><span class="line"><span class="number">63</span> }</span><br><span class="line"><span class="number">64</span> </span><br><span class="line"><span class="number">65</span> <span class="comment">//迭代器遍历所有文件并返回</span></span><br><span class="line"><span class="number">66</span> <span class="function">QStringList <span class="title">fllemanage::findALLfiles</span><span class="params">(<span class="keyword">const</span> QString &amp;dir_path)</span> </span>{</span><br><span class="line"><span class="number">67</span>     QStringList get_files;</span><br><span class="line"><span class="number">68</span>     <span class="function">QDir <span class="title">dir</span><span class="params">(dir_path)</span></span>;</span><br><span class="line"><span class="number">69</span>     <span class="keyword">if</span> (!dir.<span class="built_in">exists</span>())</span><br><span class="line"><span class="number">70</span>     {</span><br><span class="line"><span class="number">71</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"it is not true dir_path"</span>;</span><br><span class="line"><span class="number">72</span>     }</span><br><span class="line"><span class="number">73</span> </span><br><span class="line"><span class="number">74</span>     <span class="comment">/*设置过滤参数，QDir::NoDotAndDotDot表示不会去遍历上层目录*/</span></span><br><span class="line"><span class="number">75</span>     <span class="function">QDirIterator <span class="title">dir_iterator</span><span class="params">(dir_path, QDir::Files | QDir::Dirs | QDir::NoDotAndDotDot, QDirIterator::Subdirectories)</span></span>;</span><br><span class="line"><span class="number">76</span> </span><br><span class="line"><span class="number">77</span>     <span class="keyword">while</span> (dir_iterator.<span class="built_in">hasNext</span>())</span><br><span class="line"><span class="number">78</span>     {</span><br><span class="line"><span class="number">79</span>         dir_iterator.<span class="built_in">next</span>();</span><br><span class="line"><span class="number">80</span>         QFileInfo file_info = dir_iterator.<span class="built_in">fileInfo</span>();</span><br><span class="line"><span class="number">81</span>         QString files = file_info.<span class="built_in">absoluteFilePath</span>();</span><br><span class="line"><span class="number">82</span>         get_files.<span class="built_in">append</span>(files);</span><br><span class="line"><span class="number">83</span>     }</span><br><span class="line"><span class="number">84</span> </span><br><span class="line"><span class="number">85</span>     <span class="keyword">return</span> get_files;</span><br><span class="line"><span class="number">86</span> }</span><br></pre></td></tr></tbody></table></figure><p>QFile copy（报错未实现 QIodevce not opened） </p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    copy测试！！！！！！</span></span><br><span class="line"><span class="comment">//    QFile src("F:/src");</span></span><br><span class="line"><span class="comment">//    QFile dst("F:/dst");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    bool success = true;</span></span><br><span class="line"><span class="comment">//    success &amp;= src.open( QFile::ReadOnly );</span></span><br><span class="line"><span class="comment">//    success &amp;= dst.open( QFile::WriteOnly | QFile::Truncate );</span></span><br><span class="line"><span class="comment">//    success &amp;= dst.write( src.readAll() ) &gt;= 0;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   QFile::copy("F:/src/1.txt" , "F:/dst");</span></span><br><span class="line"><span class="comment">//    src.close();</span></span><br><span class="line"><span class="comment">//    dst.close();</span></span><br></pre></td></tr></tbody></table></figure><p>更新：QFile copy 函数写法：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QFile::<span class="built_in">copy</span>(<span class="string">"F:/src/1.txt"</span> , <span class="string">"F:/dst/2.txt"</span>)；  <span class="comment">//（具体文件名 to 具体文件名）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">copy函数不能对string类型的路径进行操作，可从QString转string操作再转QString：</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> std::string pur = purposelist[i].<span class="built_in">toStdString</span>();<span class="comment">//都转换为string</span></span><br><span class="line"><span class="comment">// qDebug()&lt;&lt;pur&lt;&lt;endl;</span></span><br><span class="line"> std::string sdir = toDir.<span class="built_in">toStdString</span>();</span><br><span class="line"> <span class="keyword">int</span> pos = pur.<span class="built_in">find_last_of</span>(<span class="string">'/'</span>); <span class="comment">//找到最后/</span></span><br><span class="line"> <span class="function">std::string <span class="title">s</span><span class="params">(pur.substr(pos+<span class="number">1</span>))</span></span>;</span><br><span class="line"> sdir.<span class="built_in">append</span>(<span class="string">"/"</span>);</span><br><span class="line"> sdir.<span class="built_in">append</span>(s);</span><br><span class="line"> QString qsdir = <span class="built_in">QString</span>(QString::<span class="built_in">fromLocal8Bit</span>(sdir.<span class="built_in">c_str</span>()));</span><br><span class="line"> <span class="built_in">qDebug</span>()&lt;&lt;qsdir&lt;&lt;endl;</span><br><span class="line"> </span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>备份程序-遍历</title>
      <link href="/2021/12/02/bei-fen-cheng-xu-bian-li/"/>
      <url>/2021/12/02/bei-fen-cheng-xu-bian-li/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"fllemanage.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_fllemanage.h"</span></span></span><br><span class="line"></span><br><span class="line">fllemanage::<span class="built_in">fllemanage</span>(QWidget *parent)</span><br><span class="line">: <span class="built_in">QWidget</span>(parent)</span><br><span class="line">, <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::fllemanage)</span><br><span class="line">{</span><br><span class="line">ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//copy测试！！！！！！</span></span><br><span class="line"><span class="comment">//        QFile src("F:/src");</span></span><br><span class="line"><span class="comment">//        QFile dst("F:/dst");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        bool success = true;</span></span><br><span class="line"><span class="comment">//        success &amp;= src.open( QFile::ReadOnly );</span></span><br><span class="line"><span class="comment">//        success &amp;= dst.open( QFile::WriteOnly | QFile::Truncate );</span></span><br><span class="line"><span class="comment">//        success &amp;= dst.write( src.readAll() ) &gt;= 0;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//       QFile::copy("F:/src/1.txt" , "F:/dst/2.txt");</span></span><br><span class="line"><span class="comment">//        src.close();</span></span><br><span class="line"><span class="comment">//        dst.close();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    //写文本</span></span><br><span class="line"><span class="comment">//    QFile f("F:/src/1.txt");</span></span><br><span class="line"><span class="comment">//    if(!f.open(QIODevice::WriteOnly | QIODevice::Text))</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; "Open failed." &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    QTextStream txtOutput(&amp;f);</span></span><br><span class="line"><span class="comment">//    QString s1("123");</span></span><br><span class="line"><span class="comment">//    quint32 n1(123);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    txtOutput &lt;&lt; s1 &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    txtOutput &lt;&lt; n1 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    f.close();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   //读文本</span></span><br><span class="line"><span class="comment">//    QFile f("F:/src/1.txt");</span></span><br><span class="line"><span class="comment">//    if(!f.open(QIODevice::ReadOnly | QIODevice::Text))</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; "Open failed." &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    QTextStream txtInput(&amp;f);</span></span><br><span class="line"><span class="comment">//    QString lineStr;</span></span><br><span class="line"><span class="comment">//    while(!txtInput.atEnd())</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        lineStr = txtInput.readLine();</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; lineStr &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    f.close();</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">fllemanage::~<span class="built_in">fllemanage</span>()</span><br><span class="line">{</span><br><span class="line"><span class="keyword">delete</span> ui;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fllemanage::on_pushButton_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//    int count = 0;</span></span><br><span class="line"><span class="comment">//    QString dirpath = "C:/Users/00/Desktop/git clone/OpenCV-Python-Tutorial/.idea";</span></span><br><span class="line"><span class="comment">//    //设置要遍历的目录</span></span><br><span class="line"><span class="comment">//    QDir dir(dirpath);</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dirpath&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    //设置文件过滤器</span></span><br><span class="line"><span class="comment">//    QStringList nameFilters;</span></span><br><span class="line"><span class="comment">//    //设置文件过滤格式</span></span><br><span class="line"><span class="comment">//    nameFilters &lt;&lt; "*.xml";</span></span><br><span class="line"><span class="comment">//    dir.setNameFilters(nameFilters);</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dir.entryList()&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dir.entryInfoList()&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    //将过滤后的文件名称存入到files列表中</span></span><br><span class="line"><span class="comment">//    QStringList files = dir.entryList(nameFilters, QDir::Files|QDir::Readable, QDir::Name);</span></span><br><span class="line"><span class="comment">//    for(int i = 0; i&lt;files.size(); i++)</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug()&lt;&lt;"now, it's output from QStringlist"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//        qDebug()&lt;&lt;files[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun/123");</span></span><br><span class="line">    <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line">    QStringList list = <span class="built_in">findALLfiles</span>(<span class="string">"C:/Users/00/Desktop/git clone"</span>);</span><br><span class="line">                                                                        <span class="comment">//for(int i = 0 ; i &lt;list.size(); i++)</span></span><br><span class="line">  <span class="comment">//qDebug() &lt;&lt;list[i]&lt;&lt;endl;</span></span><br><span class="line">QStringList purposelist;</span><br><span class="line">    purposelist = list.<span class="built_in">filter</span>(<span class="string">".jpg"</span>);</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; purposelist[i] &lt;&lt; endl;</span><br><span class="line">count++;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the max file has "</span> &lt;&lt; list.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the purpose file has "</span> &lt;&lt; count &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//新建文件夹（目标文件保存的位置）</span></span><br><span class="line"><span class="comment">//     QDir dir("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="comment">//     if(!dir.exists("copy to here")){</span></span><br><span class="line"><span class="comment">//         dir.mkdir("copy to here");</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line">    QString toDir = <span class="string">"C:/Users/00/Desktop/123"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//toDir.replace("\\","/");</span></span><br><span class="line"></span><br><span class="line"><span class="function">QDir <span class="title">dir</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!dir.<span class="built_in">exists</span>(toDir)) {</span><br><span class="line">dir.<span class="built_in">mkdir</span>(toDir);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">QFile <span class="title">destFile</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="keyword">bool</span> success = <span class="literal">true</span>;</span><br><span class="line">success &amp;= destFile.<span class="built_in">open</span>(QFile::WriteOnly | QFile::Truncate);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">    {</span><br><span class="line">        std::string pur = purposelist[i].<span class="built_in">toStdString</span>();<span class="comment">//都转换为string</span></span><br><span class="line">       <span class="comment">// qDebug()&lt;&lt;pur&lt;&lt;endl;</span></span><br><span class="line">        std::string sdir = toDir.<span class="built_in">toStdString</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> pos = pur.<span class="built_in">find_last_of</span>(<span class="string">'/'</span>); <span class="comment">//找到最后/</span></span><br><span class="line">        <span class="function">std::string <span class="title">s</span><span class="params">(pur.substr(pos+<span class="number">1</span>))</span></span>;</span><br><span class="line">        sdir.<span class="built_in">append</span>(<span class="string">"/"</span>);</span><br><span class="line"></span><br><span class="line">        sdir.<span class="built_in">append</span>(s);</span><br><span class="line">        QString qsdir = <span class="built_in">QString</span>(QString::<span class="built_in">fromLocal8Bit</span>(sdir.<span class="built_in">c_str</span>()));</span><br><span class="line">        <span class="built_in">qDebug</span>()&lt;&lt;qsdir&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">if</span> (QFile::<span class="built_in">copy</span>(purposelist[i], qsdir)) {  <span class="comment">//将文件复制到新的文件路径下</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(QFile::<span class="built_in">copy</span>(purposelist[i],toDir))</span><br><span class="line">                 <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">QStringLiteral</span>(<span class="string">"复制成功"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//迭代器遍历所有文件并返回</span></span><br><span class="line"><span class="function">QStringList <span class="title">fllemanage::findALLfiles</span><span class="params">(<span class="keyword">const</span> QString &amp;dir_path)</span> </span>{</span><br><span class="line">QStringList get_files;</span><br><span class="line"><span class="function">QDir <span class="title">dir</span><span class="params">(dir_path)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!dir.<span class="built_in">exists</span>())</span><br><span class="line">{</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"it is not true dir_path"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设置过滤参数，QDir::NoDotAndDotDot表示不会去遍历上层目录*/</span></span><br><span class="line"><span class="function">QDirIterator <span class="title">dir_iterator</span><span class="params">(dir_path, QDir::Files | QDir::Dirs | QDir::NoDotAndDotDot, QDirIterator::Subdirectories)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (dir_iterator.<span class="built_in">hasNext</span>())</span><br><span class="line">{</span><br><span class="line">dir_iterator.<span class="built_in">next</span>();</span><br><span class="line">QFileInfo file_info = dir_iterator.<span class="built_in">fileInfo</span>();</span><br><span class="line">QString files = file_info.<span class="built_in">absoluteFilePath</span>();</span><br><span class="line">get_files.<span class="built_in">append</span>(files);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> get_files;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>垃圾文件助手</title>
      <link href="/2021/12/02/la-ji-wen-jian-zhu-shou/"/>
      <url>/2021/12/02/la-ji-wen-jian-zhu-shou/</url>
      
        <content type="html"><![CDATA[<p>没看程序，白天搞的雕刻机（呕~~）</p><p>强行凑每日一篇，上传一个自己写的拉吉文件助手</p><p>可以实现目标文件下的文件名搜寻，并进行删除和复制整理到新文件夹（拉吉如我）</p><p>博客园竟然还有文件上传限制。。。github链接：<a href="https://github.com/qianxunslimg/QFileManage">https://github.com/qianxunslimg/QFileManage</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ui文件和Qt代码的关系(转载自大神Mike江)</title>
      <link href="/2021/12/02/ui-wen-jian-he-qt-dai-ma-de-guan-xi-zhuan-zai-zi-da-shen-mike-jiang/"/>
      <url>/2021/12/02/ui-wen-jian-he-qt-dai-ma-de-guan-xi-zhuan-zai-zi-da-shen-mike-jiang/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/tennysonsky/article/details/48030333">https://blog.csdn.net/tennysonsky/article/details/48030333</a></p><p>如果现有类与新建ui文件的话。除了修改上述地方外，还要修改UI编译产生的头文件，</p><p>修改方法参照Widget自动生成的ui_***.h</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vs程序 copy 到Qt的若干错误</title>
      <link href="/2021/12/02/vs-cheng-xu-copy-dao-qt-de-ruo-gan-cuo-wu/"/>
      <url>/2021/12/02/vs-cheng-xu-copy-dao-qt-de-ruo-gan-cuo-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="vs程序-copy-到Qt的若干错误"><a href="#vs程序-copy-到Qt的若干错误" class="headerlink" title="vs程序 copy 到Qt的若干错误"></a><a href="https://www.cnblogs.com/qianxunslimg/p/14347565.html">vs程序 copy 到Qt的若干错误</a></h1><p>就nm菜的离谱，，菜归菜，还是学到一些东西</p><p>\1. 首先是windows.h在qt下的使用  LIBS +=User32.LIB</p><p>\2. 离谱的 dependent error .h does not exist  </p><p>　　看网上说的是.pro文件存在缓存？解决方案：瞎jb乱摁</p><p>　　通过一下步骤乱搞： （1）ctrl A ctrlX .pro文件，编译，ctrl v编译</p><p>　　　　　　　　　　　（2）删除相关头文件及代码的使用，重新添加并编译（傻逼操作）</p><p>\3. 无法解析的外部符号 __imp_DeleteObject 等等， 解决方法</p><p>　　#pragma comment(lib, “Gdi32.lib”)</p><p>\4. Cmd命令无法进行直接调用  system(“start C:\Users\00\Desktop\发票\1.24-\思巴克72.ofd”);</p><p>   解决方法：使用QProcess运行cmd命令  <a href="https://blog.csdn.net/vample/article/details/78872587">https://blog.csdn.net/vample/article/details/78872587</a></p><p>　　啊呸，直接打开文件搞什么逼逼赖赖</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QString fileName = <span class="string">"C:\\Users\\00\\Desktop\\发票\\1.24-\\思巴克72.ofd"</span>;</span><br><span class="line"><span class="function">QFile <span class="title">file</span><span class="params">(fileName)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(file.<span class="built_in">exists</span>()){</span><br><span class="line">    QDesktopServices::<span class="built_in">openUrl</span>(QUrl::<span class="built_in">fromLocalFile</span>(fileName));</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>　　</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Qt Windows.h 后台按键监测</title>
      <link href="/2021/12/02/qt-windows-h-hou-tai-an-jian-jian-ce/"/>
      <url>/2021/12/02/qt-windows-h-hou-tai-an-jian-jian-ce/</url>
      
        <content type="html"><![CDATA[<p>首先 pro：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">LIBS +=User32.LIB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main.cpp：</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"hooktest.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_hooktest.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">LRESULT CALLBACK <span class="built_in">keyProc</span>(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam);</span><br><span class="line"></span><br><span class="line">HHOOK keyHook=<span class="literal">NULL</span>;</span><br><span class="line">WPARAM lastkey=<span class="number">0</span>;</span><br><span class="line">QString lastStr;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">starthook</span><span class="params">()</span></span>;</span><br><span class="line">HookTest::<span class="built_in">HookTest</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::HookTest)</span><br><span class="line">{</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">        keyHook = <span class="built_in">SetWindowsHookEx</span>(WH_KEYBOARD_LL, keyProc, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        MSG msg = { <span class="number">0</span> };</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>)) {  <span class="comment">//WM_QUIT消息 退出</span></span><br><span class="line">        <span class="comment">//将虚拟键消息转换为字符消息,虚拟键值                `</span></span><br><span class="line">        <span class="comment">//VK_UP,VK_DOWN</span></span><br><span class="line">        <span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line">        <span class="comment">//将消息分发给窗口处理函数</span></span><br><span class="line">        <span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">        }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">HookTest::~<span class="built_in">HookTest</span>()</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">keyProc</span><span class="params">(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span>{</span><br><span class="line">    PKBDLLHOOKSTRUCT key = (PKBDLLHOOKSTRUCT)lParam;</span><br><span class="line">    <span class="built_in">qDebug</span>()&lt;&lt;key-&gt;vkCode&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CallNextHookEx</span>(keyHook, nCode, wParam, lParam);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows API关闭exe</title>
      <link href="/2021/12/02/windows-api-guan-bi-exe/"/>
      <url>/2021/12/02/windows-api-guan-bi-exe/</url>
      
        <content type="html"><![CDATA[<h1 id="windows-API关闭exe"><a href="#windows-API关闭exe" class="headerlink" title="windows API关闭exe"></a><a href="https://www.cnblogs.com/qianxunslimg/p/14351941.html">windows API关闭exe</a></h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Tlhelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winnt.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">terminateSuwellReader</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    HANDLE hSnapShot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS,<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//现在我们获得了所有进程的信息。</span></span><br><span class="line">    <span class="comment">//将从hSnapShot中抽取数据到一个PROCESSENTRY32结构中</span></span><br><span class="line">    <span class="comment">//这个结构代表了一个进程，是ToolHelp32 API的一部分。</span></span><br><span class="line">    <span class="comment">//抽取数据靠Process32First()和Process32Next()这两个函数。</span></span><br><span class="line">    <span class="comment">//这里我们仅用Process32Next()，他的原形是：</span></span><br><span class="line">    <span class="comment">//BOOL WINAPI Process32Next(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);</span></span><br><span class="line">    <span class="comment">//我们程序的代码中加入：</span></span><br><span class="line">    PROCESSENTRY32* processInfo=<span class="keyword">new</span> PROCESSENTRY32;</span><br><span class="line">    <span class="comment">// 必须设置PROCESSENTRY32的dwSize成员的值 ;</span></span><br><span class="line">    processInfo-&gt;dwSize=<span class="built_in"><span class="keyword">sizeof</span></span>(PROCESSENTRY32);</span><br><span class="line">    <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//这里我们将快照句柄和PROCESSENTRY32结构传给Process32Next()。</span></span><br><span class="line">    <span class="comment">//执行之后，PROCESSENTRY32 结构将获得进程的信息。我们循环遍历，直到函数返回FALSE。</span></span><br><span class="line">    <span class="keyword">int</span> ID = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">Process32Next</span>(hSnapShot,processInfo)!=FALSE)</span><br><span class="line">    {</span><br><span class="line">        index++;</span><br><span class="line">        <span class="keyword">int</span> size=<span class="built_in">WideCharToMultiByte</span>(CP_ACP,<span class="number">0</span>,processInfo-&gt;szExeFile,<span class="number">-1</span>,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">char</span> *ch=<span class="keyword">new</span> <span class="keyword">char</span>[size+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">WideCharToMultiByte</span>(CP_ACP,<span class="number">0</span>,processInfo-&gt;szExeFile,<span class="number">-1</span>,ch,size,<span class="literal">NULL</span>,<span class="literal">NULL</span>))</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//使用这段代码的时候只需要改变"cmd.exe".将其改成你要结束的进程名就可以了。</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strstr</span>(ch,str))</span><br><span class="line">            {</span><br><span class="line">                ID = processInfo-&gt;th32ProcessID;</span><br><span class="line">                HANDLE hProcess;</span><br><span class="line">                <span class="comment">// 现在我们用函数 TerminateProcess()终止进程，这里我们用PROCESS_ALL_ACCESS</span></span><br><span class="line">                hProcess=<span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS,TRUE,ID);</span><br><span class="line">                <span class="built_in">TerminateProcess</span>(hProcess,<span class="number">0</span>);</span><br><span class="line">                <span class="built_in">CloseHandle</span>(hProcess);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hSnapShot);</span><br><span class="line">    <span class="keyword">delete</span> processInfo;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="built_in">terminateSuwellReader</span>(<span class="string">"SuwellReader.exe"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>　　</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vector clear() 方法 内存释放问题</title>
      <link href="/2021/12/02/vector-clear-fang-fa-nei-cun-shi-fang-wen-ti/"/>
      <url>/2021/12/02/vector-clear-fang-fa-nei-cun-shi-fang-wen-ti/</url>
      
        <content type="html"><![CDATA[<div class="com-markdown-collpase-main"><div class="rno-markdown J-articleContent"><pre class="prism-token token  language-javascript">自己查到的三处说法的对比：</pre><pre class="prism-token token  language-javascript">一、转自知道的答案：https<span class="token operator">:<span class="token operator">/<span class="token operator">/zhidao<span class="token punctuation">.baidu<span class="token punctuation">.com<span class="token operator">/question<span class="token operator">/<span class="token number">323662520.html<span class="token operator">?qq<span class="token operator">-pf<span class="token operator">-to<span class="token operator">=pcqq<span class="token punctuation">.c2c#</span></span></span></span></span></span></span></span></span></span></span></span></span></pre><pre class="prism-token token  language-javascript"><span class="token function">vector，clear<span class="token punctuation">(<span class="token punctuation">)<span class="token function">并不真正释放内存<span class="token punctuation">(这是为优化效率所做的事<span class="token punctuation">)<span class="token function">，clear实际所做的是为vector中所保存的所有对象调用析构函数<span class="token punctuation">(如果有的话<span class="token punctuation">)<span class="token punctuation">,然后初始化size这些东西，让觉得把所有的对象清除了。　　真正释放内存是在vector的析构函数里进行的，所以一旦超出vector的作用域（如函数返回<span class="token punctuation">)，首先它所保存的所有对象会被析构，然后会调用allocator中的deallocate函数回收对象本身的内存。　　所以，某些编译器clear后还能访问到对象数据（因为它根本没清除），在一些比较新的<span class="token constant">C<span class="token operator">++<span class="token function">编译器上<span class="token punctuation">(例如<span class="token constant">VS2008<span class="token punctuation">)<span class="token function">，当进行数组引用时<span class="token punctuation">(例如a<span class="token punctuation">[<span class="token number">2<span class="token punctuation">]这种用法<span class="token punctuation">)<span class="token punctuation">,<span class="token constant">STL库中会有一些check函数根据当前容器的size值来判断下标引用是否超出范围，如果超出，则会执行这样一句：　　<span class="token function">_THROW<span class="token punctuation">(out_of_range<span class="token punctuation">, <span class="token string">"invalid vector&lt;T&gt; subscript"<span class="token punctuation">)<span class="token punctuation">;　　即抛出一个越界异常，clear后没有捕获异常，程序在新编译器编译后就会崩溃掉。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><pre class="prism-token token  language-javascript"><span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">-分割线<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>二、转自博客：<a href="https://www.cnblogs.com/summerRQ/articles/2407974.html">https://www.cnblogs.com/summerRQ/articles/2407974.html</a></p><p>vector ： C++ STL中的顺序容器，封装数组</p><ol><li>vector容器的内存自增长&amp;nbsp;</li></ol><p>与其他容器不同，其内存空间只会增长，不会减小。先来看看”C++ Primer”中怎么说：为了支持快速的随机访问，vector容器的元素以连续方式存放，每一个元素都紧挨着前一个元素存储。设想一下，当vector添加一个元素时，为了满足连续存放这个特性，都需要重新分配空间、拷贝元素、撤销旧空间，这样性能难以接受。因此STL实现者在对vector进行内存分配时，其实际分配的容量要比当前所需的空间多一些。就是说，vector容器预留了一些额外的存储区，用于存放新添加的元素，这样就不必为每个新元素重新分配整个容器的内存空间。</p><p>关于vector的内存空间，有两个函数需要注意：size()成员指当前拥有的元素个数；capacity()成员指当前(容器必须分配新存储空间之前)可以存储的元素个数。reserve()成员可以用来控制容器的预留空间。vector另外一个特性在于它的内存空间会自增长，每当vector容器不得不分配新的存储空间时，会以加倍当前容量的分配策略实现重新分配。例如，当前capacity为50，当添加第51个元素时，预留空间不够用了，vector容器会重新分配大小为100的内存空间，作为新连续存储的位置。</p><p>2.&amp;nbsp;vector内存释放</p><p>由于vector的内存占用空间只增不减，比如你首先分配了10,000个字节，然后erase掉后面9,999个，留下一个有效元素，但是内存占用仍为10,000个。所有内存空间是在vector析构时候才能被系统回收。empty()用来检测容器是否为空的，clear()可以清空所有元素。但是即使clear()，vector所占用的内存空间依然如故，无法保证内存的回收。</p><p>如果需要空间动态缩小，可以考虑使用deque。如果非vector不可，可以用swap()来帮助你释放内存。具体方法如下：</p><pre class="prism-token token  language-javascript">vector<span class="token operator">&lt;int<span class="token operator">&gt; nums<span class="token punctuation">; nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">1<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">1<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">2<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">2<span class="token punctuation">)<span class="token punctuation">; vector<span class="token operator">&lt;int<span class="token operator">&gt;<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">(nums<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">//或者nums.swap(vector&lt;int&gt; ())</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>或者如下所示，使用一对大括号，意思一样的：</p><pre class="prism-token token  language-javascript"><span class="token comment">//加一对大括号是可以让tmp退出{}的时候自动析构<span class="token punctuation">{     std<span class="token operator">:<span class="token operator">:vector<span class="token operator">&lt;int<span class="token operator">&gt; tmp <span class="token operator">=   nums<span class="token punctuation">;      nums<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">(tmp<span class="token punctuation">)<span class="token punctuation">; <span class="token punctuation">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>&amp;nbsp;swap()是交换函数，使vector离开其自身的作用域，从而强制释放vector所占的内存空间，总而言之，释放vector内存最简单的方法是vector&lt;int&gt;.swap(nums)。当时如果nums是一个类的成员，不能把vector&lt;int&gt;.swap(nums)写进类的析构函数中，否则会导致double free or corruption (fasttop)的错误，原因可能是重复释放内存。标准解决方法如下：</p><pre class="prism-token token  language-javascript">template <span class="token operator">&lt; <span class="token keyword">class <span class="token class-name">T <span class="token operator">&gt;<span class="token keyword">void <span class="token function">ClearVector<span class="token punctuation">( <span class="token parameter">vector<span class="token operator">&lt; <span class="token constant">T <span class="token operator">&gt;<span class="token operator">&amp; vt <span class="token punctuation">) <span class="token punctuation">{    vector<span class="token operator">&lt; <span class="token constant">T <span class="token operator">&gt; vtTemp<span class="token punctuation">;     veTemp<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">( vt <span class="token punctuation">)<span class="token punctuation">;<span class="token punctuation">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><ol start="3"><li>利用vector释放指针</li></ol><p>如果vector中存放的是指针，那么当vector销毁时，这些指针指向的对象不会被销毁，那么内存就不会被释放。如下面这种情况，vector中的元素时由new操作动态申请出来的对象指针：</p><pre class="prism-token token  language-javascript">#include <span class="token operator">&lt;vector<span class="token operator">&gt; using namespace std<span class="token punctuation">; vector<span class="token operator">&lt;<span class="token keyword">void <span class="token operator">*<span class="token operator">&gt; v<span class="token punctuation">;</span></span></span></span></span></span></span></span></pre><p>每次new之后调用v.push_back()该指针，在程序退出或者根据需要，用以下代码进行内存的释放：&amp;nbsp;</p><pre class="prism-token token  language-javascript"><span class="token keyword">for <span class="token punctuation">(vector<span class="token operator">&lt;<span class="token keyword">void <span class="token operator">*<span class="token operator">&gt;<span class="token operator">:<span class="token operator">:iterator it <span class="token operator">= v<span class="token punctuation">.<span class="token function">begin<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">; it <span class="token operator">!= v<span class="token punctuation">.<span class="token function">end<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">; it <span class="token operator">++<span class="token punctuation">)     <span class="token keyword">if <span class="token punctuation">(<span class="token constant">NULL <span class="token operator">!= <span class="token operator">*it<span class="token punctuation">)     <span class="token punctuation">{        <span class="token keyword">delete <span class="token operator">*it<span class="token punctuation">;         <span class="token operator">*it <span class="token operator">= <span class="token constant">NULL<span class="token punctuation">;    <span class="token punctuation">}v<span class="token punctuation">.<span class="token function">clear<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>三、转自博客：<a href="https://blog.csdn.net/hk_john/article/details/72463318">https://blog.csdn.net/hk_john/article/details/72463318</a></p><p>最近经常用到vector容器，发现它的clear（）函数有点意思，经过验证之后进行一下总结。</p><p>clear（）函数的调用方式是，vector&lt;datatype&gt; temp（50）;//定义了50个datatype大小的空间。temp.clear();</p><p>作用：将会清空temp中的所有元素，包括temp开辟的空间（size），但是capacity会保留，即不可以以temp[1]这种形式赋初值，只能通过temp.push_back(value)的形式赋初值。</p><p>同样对于vector&lt;vector&lt;datatype&gt; &gt; temp1（50）这种类型的变量，使用temp1.clear()之后将会不能用temp1[1].push_back(value)进行赋初值，只能使用temp1.push_back(temp)；的形式。</p><p>下面的代码是可以运行的。</p><pre class="prism-token token  language-javascript"></pre><ol><li>#include &lt;iostream&gt;</li><li>#include&lt;vector&gt;<br>3.4.  using namespace std;<br>5.6.  int main(){<br>7.8.  vector&lt;vector&lt;int&gt;&gt; test(50);</li><li>vector&lt;int&gt; temp;</li><li>test[10].push_back(1);</li><li>cout&lt;&lt;test[10][0]&lt;&lt;endl;</li><li>test.clear();<br>13.14.15.  for(int i=0;i&lt;51;i++)</li><li>test.push_back(temp);<br>17.18.  system(“pause”);</li><li>return 0;</li><li>}</li></ol><p>但是这样是会越界错误的。</p><pre class="prism-token token  language-javascript"></pre><ol><li>#include &lt;iostream&gt;</li><li>#include&lt;vector&gt;<br>3.4.  using namespace std;<br>5.6.  int main(){<br>7.8.  vector&lt;vector&lt;int&gt;&gt; test(50);</li><li>vector&lt;int&gt; temp;</li><li>test[10].push_back(1);</li><li>cout&lt;&lt;test[10][0]&lt;&lt;endl;</li><li>test.clear();<br>13.14.  for(int i=0;i&lt;50;i++)</li><li>test[i].push_back(1);<br>16.17.  system(“pause”);</li><li>return 0;</li><li>}</li></ol><p>并且即使我们使用</p><pre class="prism-token token  language-javascript"></pre><ol><li>for(int i=0;i&lt;100;i++)</li><li>test[i].push_back(1);</li></ol><p>都是可以的，因为size已经被清除了。</p></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c++ 自然排序-window文件排序</title>
      <link href="/2021/12/02/c-zi-ran-pai-xu-window-wen-jian-pai-xu/"/>
      <url>/2021/12/02/c-zi-ran-pai-xu-window-wen-jian-pai-xu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自然排序</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compareNat</span><span class="params">(<span class="keyword">const</span> std::string &amp;a, <span class="keyword">const</span> std::string &amp;b)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (a.<span class="built_in">empty</span>())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (b.<span class="built_in">empty</span>())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; !std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (!std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (!std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; !std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>])) {</span><br><span class="line">    <span class="keyword">if</span> (std::<span class="built_in">toupper</span>(a[<span class="number">0</span>]) == std::<span class="built_in">toupper</span>(b[<span class="number">0</span>]))</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">compareNat</span>(a.<span class="built_in">substr</span>(<span class="number">1</span>), b.<span class="built_in">substr</span>(<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> (std::<span class="built_in">toupper</span>(a[<span class="number">0</span>]) &lt; std::<span class="built_in">toupper</span>(b[<span class="number">0</span>]));</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Both strings begin with digit --&gt; parse both numbers</span></span><br><span class="line">  <span class="function">std::istringstream <span class="title">issa</span><span class="params">(a)</span></span>;</span><br><span class="line">  <span class="function">std::istringstream <span class="title">issb</span><span class="params">(b)</span></span>;</span><br><span class="line">  <span class="keyword">int</span> ia, ib;</span><br><span class="line">  issa &gt;&gt; ia;</span><br><span class="line">  issb &gt;&gt; ib;</span><br><span class="line">  <span class="keyword">if</span> (ia != ib)</span><br><span class="line">    <span class="keyword">return</span> ia &lt; ib;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Numbers are the same --&gt; remove numbers and recurse</span></span><br><span class="line">  std::string anew, bnew;</span><br><span class="line">  std::<span class="built_in">getline</span>(issa, anew);</span><br><span class="line">  std::<span class="built_in">getline</span>(issb, bnew);</span><br><span class="line">  <span class="keyword">return</span> (<span class="built_in">compareNat</span>(anew, bnew));</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">const</span> pair&lt;string, string&gt; a, <span class="keyword">const</span> pair&lt;string, string&gt; b)</span> </span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">compareNat</span>(a.first, b.first);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最小堆make_heap(), pop_heap()和push_heap()</title>
      <link href="/2021/12/02/zui-xiao-dui-make-heap-pop-heap-he-push-heap/"/>
      <url>/2021/12/02/zui-xiao-dui-make-heap-pop-heap-he-push-heap/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20211114224004410-1010288954.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>make_heap<br>在容器范围内，就地建堆，保证最大值在所给范围的最前面，其他值的位置不确定</p><p>pop_heap<br>将堆顶(所给范围的最前面)元素移动到所给范围的最后，并且将新的最大值置于所给范围的最前面</p><p>push_heap<br>当已建堆的容器范围内有新的元素插入末尾后，应当调用push_heap将该元素插入堆中。</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> #include&lt;iostream&gt;<span style="color: #008080;"> 2</span> #include&lt;vector&gt;<span style="color: #008080;"> 3</span> #include&lt;ctime&gt;<span style="color: #008080;"> 4</span> #include&lt;deque&gt;<span style="color: #008080;"> 5</span> #include&lt;list&gt;<span style="color: #008080;"> 6</span> #include&lt;algorithm&gt;<span style="color: #008080;"> 7</span> #include&lt;queue&gt;<span style="color: #008080;"> 8</span> #include&lt;functional&gt;<span style="color: #008000;">//</span><span style="color: #008000;">greater使用</span><span style="color: #008080;"> 9</span>  <span style="color: #008080;">10</span> <span style="color: #0000ff;">using</span> <span style="color: #0000ff;">namespace</span><span style="color: #000000;"> std;</span><span style="color: #008080;">11</span>  <span style="color: #008080;">12</span> <span style="color: #0000ff;">void</span> print(vector&lt;<span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;"> a) {</span><span style="color: #008080;">13</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; a.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">14</span>         cout &lt;&lt; a[i] &lt;&lt; <span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">15</span> <span style="color: #000000;">    }</span><span style="color: #008080;">16</span>     cout &lt;&lt;<span style="color: #000000;"> endl;</span><span style="color: #008080;">17</span> <span style="color: #000000;">}</span><span style="color: #008080;">18</span>  <span style="color: #008080;">19</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> main() {</span><span style="color: #008080;">20</span>  <span style="color: #008080;">21</span>     <span style="color: #008000;">//</span><span style="color: #008000;">堆排序算法（heapsort）</span><span style="color: #008080;">22</span>     <span style="color: #008000;">//</span><span style="color: #008000;">make_heap();</span><span style="color: #008080;">23</span>     <span style="color: #008000;">//</span><span style="color: #008000;">push_heap()</span><span style="color: #008080;">24</span>     <span style="color: #008000;">//</span><span style="color: #008000;">sort_heap()</span><span style="color: #008080;">25</span>     <span style="color: #008000;">//</span><span style="color: #008000;">pop_heap()</span><span style="color: #008080;">26</span>     <span style="color: #008000;">//</span><span style="color: #008000;">堆就是一种特殊的二叉树，最关心的就是根</span><span style="color: #008080;">27</span>     <span style="color: #008000;">//</span><span style="color: #008000;">大根堆，小根堆</span><span style="color: #008080;">28</span>  <span style="color: #008080;">29</span>     vector&lt;<span style="color: #0000ff;">int</span>&gt; ivec{<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">8</span>,<span style="color: #800080;">9</span>,<span style="color: #800080;">1</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span><span style="color: #000000;">};</span><span style="color: #008080;">30</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">31</span>     <span style="color: #008000;">//</span><span style="color: #008000;">向量里所有的数据变成一个堆</span><span style="color: #008080;">32</span>  <span style="color: #008080;">33</span> <span style="color: #000000;">    make_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">34</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">35</span>  <span style="color: #008080;">36</span>     pop_heap(ivec.begin(), ivec.end());<span style="color: #008000;">//</span><span style="color: #008000;">最大的数据取走，但是并没s有删除</span><span style="color: #008080;">37</span>     <span style="color: #008000;">//</span><span style="color: #008000;">把最大的数据放在结尾，剩下的元素排成一个堆</span><span style="color: #008080;">38</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">39</span> <span style="color: #000000;">    ivec.pop_back();</span><span style="color: #008080;">40</span>     <span style="color: #008000;">//</span><span style="color: #008000;">push_heap 使用首先要先把数据加在向量里</span><span style="color: #008080;">41</span>  <span style="color: #008080;">42</span>     ivec.push_back(<span style="color: #800080;">17</span><span style="color: #000000;">);</span><span style="color: #008080;">43</span> <span style="color: #000000;">    make_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">44</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">45</span>  <span style="color: #008080;">46</span>     <span style="color: #008000;">//</span><span style="color: #008000;">sort_heap 把堆变成不是堆,普通的排序</span><span style="color: #008080;">47</span> <span style="color: #000000;">    sort_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">48</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">49</span>  <span style="color: #008080;">50</span>     system(<span style="color: #800000;">"</span><span style="color: #800000;">pause</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">51</span> }</pre></div><p><img src="https://img2020.cnblogs.com/blog/2092994/202111/2092994-20211114224224870-302527741.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合数 防溢出</title>
      <link href="/2021/12/02/zu-he-shu-fang-yi-chu/"/>
      <url>/2021/12/02/zu-he-shu-fang-yi-chu/</url>
      
        <content type="html"><![CDATA[<pre><span style="color: #008080;">1</span>  <span style="color: #008080;">2</span> <span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> C(<span style="color: #0000ff;">int</span> N, <span style="color: #0000ff;">int</span><span style="color: #000000;"> M) {</span><span style="color: #008080;">3</span>     <span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> sum = <span style="color: #800080;">1</span><span style="color: #000000;">;</span><span style="color: #008080;">4</span>     <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i=<span style="color: #800080;">1</span>;i&lt;=M; i++<span style="color: #000000;">) {</span><span style="color: #008080;">5</span>         sum=sum*(N-M+i)/<span style="color: #000000;">i;</span><span style="color: #008080;">6</span> <span style="color: #000000;">    }</span><span style="color: #008080;">7</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;"> sum;</span><span style="color: #008080;">8</span> }</pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vector&lt;pair&gt;或者有序map</title>
      <link href="/2021/12/02/vector-pair-huo-zhe-you-xu-map/"/>
      <url>/2021/12/02/vector-pair-huo-zhe-you-xu-map/</url>
      
        <content type="html"><![CDATA[<p>功能相同</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>   <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">bool</span> sortPair(pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt; a, pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;"> b) {</span><span style="color: #008080;"> 2</span>     <span style="color: #0000ff;">return</span> a.second &gt;<span style="color: #000000;"> b.second;</span><span style="color: #008080;"> 3</span> <span style="color: #000000;">  }</span><span style="color: #008080;"> 4</span>   vector&lt;<span style="color: #0000ff;">string</span>&gt; findRelativeRanks(vector&lt;<span style="color: #0000ff;">int</span>&gt; &amp;<span style="color: #000000;">score) {</span><span style="color: #008080;"> 5</span>     vector&lt;<span style="color: #0000ff;">string</span>&gt;<span style="color: #000000;"> res(score.size());</span><span style="color: #008080;"> 6</span> <span style="color: #008080;"> 7</span>     vector&lt;pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;&gt;<span style="color: #000000;"> pairr;</span><span style="color: #008080;"> 8</span> <span style="color: #008080;"> 9</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; score.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">10</span>       pairr.push_back(pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;">(i, score[i]));</span><span style="color: #008080;">11</span> <span style="color: #000000;">    }</span><span style="color: #008080;">12</span> <span style="color: #008080;">13</span> <span style="color: #000000;">    sort(pairr.begin(), pairr.end(), sortPair);</span><span style="color: #008080;">14</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; pairr.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">15</span>       <span style="color: #0000ff;">switch</span><span style="color: #000000;"> (i) {</span><span style="color: #008080;">16</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">0</span><span style="color: #000000;">:</span><span style="color: #008080;">17</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Gold Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">18</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">19</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">1</span><span style="color: #000000;">:</span><span style="color: #008080;">20</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Silver Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">21</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">22</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">2</span><span style="color: #000000;">:</span><span style="color: #008080;">23</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Bronze Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">24</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">25</span>       <span style="color: #0000ff;">default</span><span style="color: #000000;">:</span><span style="color: #008080;">26</span>         res[pairr[i].first] = to_string(i + <span style="color: #800080;">1</span><span style="color: #000000;">);</span><span style="color: #008080;">27</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">28</span> <span style="color: #000000;">      }</span><span style="color: #008080;">29</span> <span style="color: #000000;">    }</span><span style="color: #008080;">30</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;"> res;</span><span style="color: #008080;">31</span>   }</pre></div><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>     vector&lt;<span style="color: #0000ff;">string</span>&gt; findRelativeRanks(vector&lt;<span style="color: #0000ff;">int</span>&gt;&amp;<span style="color: #000000;"> score) {</span><span style="color: #008080;"> 2</span>         <span style="color: #0000ff;">int</span> n=<span style="color: #000000;">score.size();</span><span style="color: #008080;"> 3</span>         map&lt;<span style="color: #0000ff;">int</span>,<span style="color: #0000ff;">int</span>,greater&lt;<span style="color: #0000ff;">int</span>&gt;&gt;<span style="color: #000000;">num2index;</span><span style="color: #008080;"> 4</span>         <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i=<span style="color: #800080;">0</span>;i&lt;n;i++)num2index[score[i]]=<span style="color: #000000;">i;</span><span style="color: #008080;"> 5</span>         vector&lt;<span style="color: #0000ff;">string</span>&gt;<span style="color: #000000;">ans(n);</span><span style="color: #008080;"> 6</span>         <span style="color: #0000ff;">int</span> i=<span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;"> 7</span>         <span style="color: #0000ff;">for</span><span style="color: #000000;">(auto mPair:num2index){</span><span style="color: #008080;"> 8</span>             <span style="color: #0000ff;">int</span> index=<span style="color: #000000;">mPair.second;</span><span style="color: #008080;"> 9</span>             <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">0</span><span style="color: #000000;">){</span><span style="color: #008080;">10</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Gold Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">11</span>             }<span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">1</span><span style="color: #000000;">){</span><span style="color: #008080;">12</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Silver Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">13</span>             }<span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">2</span><span style="color: #000000;">){</span><span style="color: #008080;">14</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Bronze Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">15</span>             }<span style="color: #0000ff;">else</span> ans[index]+=to_string(i+<span style="color: #800080;">1</span><span style="color: #000000;">);</span><span style="color: #008080;">16</span>             i++<span style="color: #000000;">;</span><span style="color: #008080;">17</span> <span style="color: #000000;">        }</span><span style="color: #008080;">18</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> ans;</span><span style="color: #008080;">19</span>     }</pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1920. 基于排列构建数组</title>
      <link href="/2021/12/02/1920-ji-yu-pai-lie-gou-jian-shu-zu/"/>
      <url>/2021/12/02/1920-ji-yu-pai-lie-gou-jian-shu-zu/</url>
      
        <content type="html"><![CDATA[<p>原地修改</p><p>class Solution {<br>public:<br>    vector&lt;int&gt; buildArray(vector&lt;int&gt;&amp; nums) {<br>        int n = nums.size();<br>        // 第一次遍历编码最终值<br>        for (int i = 0; i &lt; n; ++i){<br>            nums[i] += 1000 * (nums[nums[i]] % 1000);<br>        }<br>        // 第二次遍历修改为最终值<br>        for (int i = 0; i &lt; n; ++i){<br>            nums[i] /= 1000;<br>        }<br>        return nums;<br>    }<br>};</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>priority_queue和tuple</title>
      <link href="/2021/12/02/priority-queue-tuple-he-lamda/"/>
      <url>/2021/12/02/priority-queue-tuple-he-lamda/</url>
      
        <content type="html"><![CDATA[<p>&amp;nbsp;</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20211115202419249-1916870940.png"></p><p>&amp;nbsp;</p><h1 id="1-顶堆"><a href="#1-顶堆" class="headerlink" title="1.顶堆"></a>1.顶堆</h1><p>&amp;nbsp;&amp;nbsp;C++11中，针对顺序容器(如vector、deque、list)，新标准引入了三个新成员：emplace_front、emplace和emplace_back，这些操作构造而不是拷贝元素。这些操作分别对应push_front、insert和push_back，允许我们将元素放置在容器头部、一个指定位置之前或容器尾部</p><p>priority_queue 默认从大到小排序， 从小到大：priority_queue&lt;<span class="hljs-type">int, vector&lt;<span class="hljs-type">int&gt;, greater&lt;<span class="hljs-type">int&gt; &gt; p;</span></span></span></p><p>pair举例<br>//默认是使用大根堆<br>priority_queue&lt;pair&lt;int,int&gt;&gt; pq0;<br>//小根堆，按照pair的first排，再按照second排序<br>priority_queue&lt;pair&lt;int,int&gt;,vector&lt;pair&lt;int,int&gt;&gt;,greater&lt;pair&lt;int,int&gt;&gt;&gt; pq1;<br>//大根堆<br>priority_queue&lt;pair&lt;int,int&gt;,vector&lt;pair&lt;int,int&gt;&gt;,less&lt;pair&lt;int,int&gt;&gt;&gt; pq2;</p><p>tuple举例<br>//默认是使用大根堆<br>priority_queue&lt;tuple&lt;int,int,int&gt;&gt; tp0;<br>//小根堆，按照tuple的0元素排，再按照1元素排，最后按2元素排<br>priority_queue&lt;tuple&lt;int,int,int&gt;,vector&lt;tuple&lt;int,int,int&gt;&gt;,greater&lt;tuple&lt;int,int,int&gt;&gt;&gt; tp1;<br>//大根堆<br>priority_queue&lt;tuple&lt;int,int,int&gt;,vector&lt;tuple&lt;int,int,int&gt;&gt;,less&lt;tuple&lt;int,int,int&gt;&gt;&gt; tp2;</p><h1 id="2-元组tuple"><a href="#2-元组tuple" class="headerlink" title="2.元组tuple"></a><span class="hljs-type"><span class="hljs-type"><span class="hljs-type">2.元组tuple</span></span></span></h1><p>tuple是一个固定大小的不同类型值的集合，是泛化的std::pair。我们也可以把他当做一个通用的结构体来用，不需要创建结构体又获取结构体的特征，在某些情况下可以取代结构体使程序更简洁，直观。std::tuple理论上可以有无数个任意类型的成员变量，而std::pair只能是2个成员，因此在需要保存3个及以上的数据时就需要使用tuple元组了。&amp;nbsp;</p><p>tuple获取指定位置的值:</p><p> auto d = get&lt;0&gt;(tmp);<br>      auto x = get&lt;1&gt;(tmp);<br>      auto y = get&lt;2&gt;(tmp);</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT打包程序</title>
      <link href="/2021/12/02/qt-da-bao-cheng-xu/"/>
      <url>/2021/12/02/qt-da-bao-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h2 id="1-发布release版本的QT程序"><a href="#1-发布release版本的QT程序" class="headerlink" title="1.发布release版本的QT程序"></a>1.发布release版本的QT程序</h2><p>　　在build release文件夹内找到exe文件，将其单独放在一个自建的空文件夹内</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165117303-604984762.png"></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165455009-910788885.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><h2 id="amp-nbsp-2-cd到含exe的空文件夹"><a href="#amp-nbsp-2-cd到含exe的空文件夹" class="headerlink" title="&amp;nbsp;2.cd到含exe的空文件夹"></a>&amp;nbsp;2.cd到含exe的空文件夹</h2><p>　　在QT命令行cd到含exe的空文件夹，cd /d E:\QDIR</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165604874-1233279110.png"><img src="https://img2020.cnblogs.com/blog/2092994/202009/2092994-20200927165951305-446477392.png"></p><h2 id="3-使用windeployqt-exe进行打包"><a href="#3-使用windeployqt-exe进行打包" class="headerlink" title="3.使用windeployqt.exe进行打包"></a>3.使用windeployqt.exe进行打包</h2><p>首先找到windeployqt.exe的路径&amp;nbsp;</p><p>&amp;nbsp;<img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170127591-1210427907.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>输入命令D:\QT\5.14.2\msvc2017_64\bin\windeployqt&amp;nbsp;QDIR.exe即完成了打包</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170421891-1644738339.png"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170550570-2063963822.png"></p><p>&amp;nbsp;</p><h2 id="amp-nbsp-附：打包前修改exe图标"><a href="#amp-nbsp-附：打包前修改exe图标" class="headerlink" title="&amp;nbsp;附：打包前修改exe图标"></a>&amp;nbsp;附：打包前修改exe图标</h2><h2 id="改变exe的图标"><a href="#改变exe的图标" class="headerlink" title="改变exe的图标"></a>改变exe的图标</h2><p>1、下载一个.ico格式的图标（如：bucket and shovel.ico），将bucket and shovel.ico复制到工程目录下。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927172502714-1388114573.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>2、工程目录下新建一个空白txt文档，文档内添加如下内容<br><code>IDI_ICON1 ICON DISCARDABLE "bucket and shovel.ico"</code><br>3、将文档后缀修改为.rc（如：bucke.rc, !!注意!!rc文件名不要含空格）&amp;nbsp;<br>4、在工程的pro文件添加如下内容<br><code>RC_FILE = bucket.rc</code><br>5、重新编译程序，即可发现生成的程序图标变成了bucket.ico</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927172701527-227417489.png"></p><p>&amp;nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QString截断（string截断）</title>
      <link href="/2021/12/02/qstring-jie-duan-string-jie-duan/"/>
      <url>/2021/12/02/qstring-jie-duan-string-jie-duan/</url>
      
        <content type="html"><![CDATA[<h2 id="最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法："><a href="#最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法：" class="headerlink" title="最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法："></a>最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法：</h2><h3 id="方法一：由于对QString没有深入了解，所以采用的QString–-gt-string–-gt-QString，代码如下："><a href="#方法一：由于对QString没有深入了解，所以采用的QString–-gt-string–-gt-QString，代码如下：" class="headerlink" title="方法一：由于对QString没有深入了解，所以采用的QString–>string–>QString，代码如下："></a>方法一：由于对QString没有深入了解，所以采用的QString–&gt;string–&gt;QString，代码如下：</h3><div class="cnblogs_code"><pre><span style="font-size: 18px;"><span style="color: #008080;"> 1</span>         std::<span style="color: #0000ff;">string</span> pur = purposelist[i].toStdString();<span style="color: #008000;">//</span><span style="color: #008000;">都转换为string</span><span style="color: #008080;"> 2</span>        <span style="color: #008000;">//</span><span style="color: #008000;"> qDebug()&lt;&lt;pur&lt;&lt;endl;</span><span style="color: #008080;"> 3</span>         std::<span style="color: #0000ff;">string</span> sdir =<span style="color: #000000;"> dstpath.toStdString();</span><span style="color: #008080;"> 4</span> <span style="color: #008080;"> 5</span>         <span style="color: #0000ff;">int</span> pos = pur.find_last_of(<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>); <span style="color: #008000;">//</span><span style="color: #008000;">找到最后/</span><span style="color: #008080;"> 6</span>         std::<span style="color: #0000ff;">string</span> s(pur.substr(pos + <span style="color: #800080;">1</span><span style="color: #000000;">));</span><span style="color: #008080;"> 7</span>         sdir.append(<span style="color: #800000;">"</span><span style="color: #800000;">/</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;"> 8</span> <span style="color: #008080;"> 9</span> <span style="color: #000000;">        sdir.append(s);</span><span style="color: #008080;">10</span>         QString qsdir =<span style="color: #000000;"> QString(QString::fromLocal8Bit(sdir.c_str()));</span><span style="color: #008080;">11</span>         qDebug() &lt;&lt; qsdir &lt;&lt; endl;</span></pre></div><h3 id="用这种方法出现的问题是，string中的中文字符转到QString会乱码…"><a href="#用这种方法出现的问题是，string中的中文字符转到QString会乱码…" class="headerlink" title="用这种方法出现的问题是，string中的中文字符转到QString会乱码…"></a>用这种方法出现的问题是，string中的中文字符转到QString会乱码…</h3><p>&amp;nbsp;</p><h3 id="方法二：QString直接进行截断拼接（吐了，我好蠢）"><a href="#方法二：QString直接进行截断拼接（吐了，我好蠢）" class="headerlink" title="方法二：QString直接进行截断拼接（吐了，我好蠢）"></a>方法二：QString直接进行截断拼接（吐了，我好蠢）</h3><div class="cnblogs_code"><pre><span style="font-size: 18px;"><span style="color: #008080;">1</span>     <span style="color: #008000;">//</span><span style="color: #008000;">QString截断学习</span><span style="color: #008080;">2</span>     QString src(<span style="color: #800000;">"</span><span style="color: #800000;">E:/qq接收文件/MobileFile/thumb/碎裂收据.jpg</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">3</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">original path: </span><span style="color: #800000;">"</span>&lt;&lt;src&lt;&lt;<span style="color: #000000;">endl;</span><span style="color: #008080;">4</span>     QString dir(<span style="color: #800000;">"</span><span style="color: #800000;">E:/目标文件夹</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">5</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">the last string '/' pos is </span><span style="color: #800000;">"</span>&lt;&lt;src.lastIndexOf(<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>)&lt;&lt;<span style="color: #000000;">endl;</span><span style="color: #008080;">6</span>     QString filename = src.right(src.size() - (src.lastIndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">/</span><span style="color: #800000;">"</span>)+<span style="color: #800080;">1</span><span style="color: #000000;">));</span><span style="color: #008080;">7</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">the true filename is </span><span style="color: #800000;">"</span>&lt;&lt;filename&lt;&lt;endl;</span></pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简单的滑动窗口 643. 子数组最大平均数 I</title>
      <link href="/2021/12/02/jian-dan-de-hua-dong-chuang-kou-643-zi-shu-zu-zui-da-ping-jun-shu-i/"/>
      <url>/2021/12/02/jian-dan-de-hua-dong-chuang-kou-643-zi-shu-zu-zui-da-ping-jun-shu-i/</url>
      
        <content type="html"><![CDATA[<p>给你一个由 n 个元素组成的整数数组 nums 和一个整数 k 。</p><p>请你找出平均数最大且 长度为 k 的连续子数组，并输出该最大平均数。</p><p>任何误差小于 10-5 的答案都将被视为正确答案。</p><p>&amp;nbsp;</p><p>示例 1：</p><p>输入：nums = [1,12,-5,-6,50,3], k = 4<br>输出：12.75<br>解释：最大平均数 (12-5-6+50)/4 = 51/4 = 12.75<br>示例 2：</p><p>输入：nums = [5], k = 1<br>输出：5.00000</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Solution {</span><span style="color: #008080;"> 2</span> <span style="color: #0000ff;">public</span><span style="color: #000000;">:</span><span style="color: #008080;"> 3</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> double findMaxAverage(vector&lt;int&gt;&amp; nums, int k) {</span><span style="color: #008080;"> 4</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double res = -10000.0;</span><span style="color: #008080;"> 5</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double sum = 0;</span><span style="color: #008080;"> 6</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double ave;</span><span style="color: #008080;"> 7</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     for(int i = 0; i&lt;=nums.size()-k; i++){</span><span style="color: #008080;"> 8</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         if( i == 0){</span><span style="color: #008080;"> 9</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             for(int j = 0; j&lt;k; j++){</span><span style="color: #008080;">10</span>     <span style="color: #008000;">//</span><span style="color: #008000;">                 sum+=nums[i+j];</span><span style="color: #008080;">11</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             }</span><span style="color: #008080;">12</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         }else{</span><span style="color: #008080;">13</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             sum-=nums[i-1];</span><span style="color: #008080;">14</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             sum+=nums[i+k-1];</span><span style="color: #008080;">15</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         }</span><span style="color: #008080;">16</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         ave = sum/k;</span><span style="color: #008080;">17</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         cout &lt;&lt;ave&lt;&lt;endl;</span><span style="color: #008080;">18</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         res = res&gt;ave?res:ave;</span><span style="color: #008080;">19</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     }</span><span style="color: #008080;">20</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     return res;</span><span style="color: #008080;">21</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> }</span><span style="color: #008080;">22</span>     <span style="color: #0000ff;">double</span> findMaxAverage(vector&lt;<span style="color: #0000ff;">int</span>&gt;&amp; nums, <span style="color: #0000ff;">int</span><span style="color: #000000;"> k) {</span><span style="color: #008080;">23</span>         <span style="color: #0000ff;">int</span> sum = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;">24</span>         <span style="color: #0000ff;">int</span> n =<span style="color: #000000;"> nums.size();</span><span style="color: #008080;">25</span>         <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; k; i++<span style="color: #000000;">) {</span><span style="color: #008080;">26</span>             sum +=<span style="color: #000000;"> nums[i];</span><span style="color: #008080;">27</span> <span style="color: #000000;">        }</span><span style="color: #008080;">28</span>         <span style="color: #0000ff;">int</span> maxSum =<span style="color: #000000;"> sum;</span><span style="color: #008080;">29</span>         <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = k; i &lt; n; i++<span style="color: #000000;">) {</span><span style="color: #008080;">30</span>             sum = sum - nums[i - k] +<span style="color: #000000;"> nums[i];</span><span style="color: #008080;">31</span>             maxSum =<span style="color: #000000;"> max(maxSum, sum);</span><span style="color: #008080;">32</span> <span style="color: #000000;">        }</span><span style="color: #008080;">33</span>         <span style="color: #0000ff;">return</span> static_cast&lt;<span style="color: #0000ff;">double</span>&gt;(maxSum) /<span style="color: #000000;"> k;</span><span style="color: #008080;">34</span> <span style="color: #000000;">    }</span><span style="color: #008080;">35</span> <span style="color: #008080;">36</span> };</pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片平滑器</title>
      <link href="/2021/12/02/tu-pian-ping-hua-qi/"/>
      <url>/2021/12/02/tu-pian-ping-hua-qi/</url>
      
        <content type="html"><![CDATA[<p>包含整数的二维矩阵 M 表示一个图片的灰度。你需要设计一个平滑器来让每一个单元的灰度成为平均灰度&amp;nbsp;(向下舍入) ，平均灰度的计算是周围的8个单元和它本身的值求平均，如果周围的单元格不足八个，则尽可能多的利用它们。</p><p>示例 1:</p><p>输入:<br>[[1,1,1],<br> [1,0,1],<br> [1,1,1]]<br>输出:<br>[[0, 0, 0],<br> [0, 0, 0],<br> [0, 0, 0]]<br>解释:<br>对于点 (0,0), (0,2), (2,0), (2,2): 平均(3/4) = 平均(0.75) = 0<br>对于点 (0,1), (1,0), (1,2), (2,1): 平均(5/6) = 平均(0.83333333) = 0<br>对于点 (1,1): 平均(8/9) = 平均(0.88888889) = 0</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>     vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt; imageSmoother(vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt;&amp;<span style="color: #000000;"> img) {</span><span style="color: #008080;"> 2</span>         <span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> n =<span style="color: #000000;"> img.size();</span><span style="color: #008080;"> 3</span>         <span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> m = img[<span style="color: #800080;">0</span><span style="color: #000000;">].size();</span><span style="color: #008080;"> 4</span>         vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt; ans(n, vector&lt;<span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;">(m));</span><span style="color: #008080;"> 5</span>         <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; n; ++i){  <span style="color: #008000;">//</span><span style="color: #008000;">遍历每一个点</span><span style="color: #008080;"> 6</span>             <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> j = <span style="color: #800080;">0</span>; j &lt; m; ++<span style="color: #000000;">j){</span><span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">int</span> sum = <span style="color: #800080;">0</span>, num = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> k = -<span style="color: #800080;">1</span>; k &lt;= <span style="color: #800080;">1</span>; ++k){  <span style="color: #008000;">//</span><span style="color: #008000;">遍历周围的格子</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> l = -<span style="color: #800080;">1</span>; l &lt;= <span style="color: #800080;">1</span>; ++l){   <span style="color: #008000;">//</span><span style="color: #008000;">判断是否出界</span><span style="color: #008080;">10</span>                         <span style="color: #0000ff;">if</span>(i + k &gt;= <span style="color: #800080;">0</span> &amp;&amp; i + k &lt; n &amp;&amp; j + l &gt;= <span style="color: #800080;">0</span> &amp;&amp; j + l &lt;<span style="color: #000000;"> m){</span><span style="color: #008080;">11</span>                             ++num; <span style="color: #008000;">//</span><span style="color: #008000;">没有出界，格子个数+1</span><span style="color: #008080;">12</span>                             sum += img[i + k][j + l]; <span style="color: #008000;">//</span><span style="color: #008000;">计算总和</span><span style="color: #008080;">13</span> <span style="color: #000000;">                        }</span><span style="color: #008080;">14</span> <span style="color: #000000;">                    }</span><span style="color: #008080;">15</span> <span style="color: #000000;">                }</span><span style="color: #008080;">16</span>                 ans[i][j] = sum / num; <span style="color: #008000;">//</span><span style="color: #008000;">计算平均值</span><span style="color: #008080;">17</span> <span style="color: #000000;">            }</span><span style="color: #008080;">18</span> <span style="color: #000000;">        }</span><span style="color: #008080;">19</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> ans;</span><span style="color: #008080;">20</span>     }</pre></div>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP/IP讲解</title>
      <link href="/2021/12/02/tcp-ip-jiang-jie/"/>
      <url>/2021/12/02/tcp-ip-jiang-jie/</url>
      
        <content type="html"><![CDATA[<p>从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/242fbebe730ea864c312370614791f45.jpeg-wh_651x-s_431133179.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>一图看完本文</p><h2 id="一、-计算机网络体系结构分层"><a href="#一、-计算机网络体系结构分层" class="headerlink" title="一、 计算机网络体系结构分层"></a>一、 计算机网络体系结构分层</h2><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/aaf923228df01d11a7b805d4db5d1d33.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>计算机网络体系结构分层</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f58f6ad856c6802b636d20d8f5ba2c3e.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>计算机网络体系结构分层</p><p><strong>不难看出，TCP/IP 与 OSI 在分层模块上稍有区别。OSI 参考模型注重&amp;ldquo;通信协议必要的功能是什么&amp;rdquo;，而 TCP/IP 则更强调&amp;ldquo;在计算机上实现协议应该开发哪种程序&amp;rdquo;。</strong></p><h2 id="二、-TCP-x2F-IP-基础"><a href="#二、-TCP-x2F-IP-基础" class="headerlink" title="二、 TCP/IP 基础"></a>二、 TCP/IP 基础</h2><p><strong>1. TCP/IP 的具体含义</strong></p><p>从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。他们与 TCP 或 IP 的关系紧密，是互联网必不可少的组成部分。TCP/IP 一词泛指这些协议，因此，有时也称 TCP/IP 为网际协议群。</p><p>互联网进行通信时，需要相应的网络协议，TCP/IP 原本就是为使用互联网而开发制定的协议族。因此，互联网的协议就是 TCP/IP，TCP/IP 就是互联网的协议。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/06645dfb1e9914c032358fbc8ee2641c.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>网际协议群</p><p><strong>2. 数据包</strong></p><p><strong>包、帧、数据包、段、消息</strong></p><p>以上五个术语都用来表述数据的单位，大致区分如下：</p><ul><li>包可以说是全能性术语；</li><li>帧用于表示数据链路层中包的单位；</li><li>数据包是 IP 和 UDP 等网络层以上的分层中包的单位；</li><li>段则表示 TCP 数据流中的信息；</li><li>消息是指应用协议中数据的单位。</li></ul><p>每个分层中，都会对所发送的数据附加一个首部，在这个首部中包含了该层必要的信息，如发送的目标地址以及协议相关信息。通常，为协议提供的信息为包首部，所要发送的内容为数据。在下一层的角度看，从上一层收到的包全部都被认为是本层的数据。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/23180acf2b82efe5b1821de16e9d55e5.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>数据包首部</p><p>网络中传输的数据包由两部分组成：一部分是协议所要用到的首部，另一部分是上一层传过来的数据。首部的结构由协议的具体规范详细定义。在数据包的首部，明确标明了协议应该如何读取数据。反过来说，看到首部，也就能够了解该协议必要的信息以及所要处理的数据。<strong>包首部就像协议的脸。</strong></p><p><strong>3. 数据处理流程</strong></p><p>下图以用户 a 向用户 b 发送邮件为例子：</p><p>数据处理流程</p><p>① 应用程序处理</p><p>首先应用程序会进行编码处理，这些编码相当于 OSI 的表示层功能；</p><p>编码转化后，邮件不一定马上被发送出去，这种何时建立通信连接何时发送数据的管理功能，相当于 OSI 的会话层功能。</p><p>② TCP 模块的处理</p><p>TCP 根据应用的指示，负责建立连接、发送数据以及断开连接。TCP 提供将应用层发来的数据顺利发送至对端的可靠传输。为了实现这一功能，需要在应用层数据的前端附加一个 TCP 首部。</p><p>③ IP 模块的处理</p><p>IP 将 TCP 传过来的 TCP 首部和 TCP 数据合起来当做自己的数据，并在 TCP 首部的前端加上自己的 IP 首部。IP 包生成后，参考路由控制表决定接受此 IP 包的路由或主机。</p><p>④ 网络接口（以太网驱动）的处理</p><p>从 IP 传过来的 IP 包对于以太网来说就是数据。给这些数据附加上以太网首部并进行发送处理，生成的以太网数据包将通过物理层传输给接收端。</p><p>⑤ 网络接口（以太网驱动）的处理</p><p>主机收到以太网包后，首先从以太网包首部找到 MAC 地址判断是否为发送给自己的包，若不是则丢弃数据。</p><p>如果是发送给自己的包，则从以太网包首部中的类型确定数据类型，再传给相应的模块，如 IP、ARP 等。这里的例子则是 IP 。</p><p>⑥ IP 模块的处理</p><p>IP 模块接收到 数据后也做类似的处理。从包首部中判断此 IP 地址是否与自己的 IP 地址匹配，如果匹配则根据首部的协议类型将数据发送给对应的模块，如 TCP、UDP。这里的例子则是 TCP。</p><p>另外吗，对于有路由器的情况，接收端地址往往不是自己的地址，此时，需要借助路由控制表，在调查应该送往的主机或路由器之后再进行转发数据。</p><p>⑦ TCP 模块的处理</p><p>在 TCP 模块中，首先会计算一下校验和，判断数据是否被破坏。然后检查是否在按照序号接收数据。***检查端口号，确定具体的应用程序。数据被完整地接收以后，会传给由端口号识别的应用程序。</p><p>⑧ 应用程序的处理</p><p>接收端应用程序会直接接收发送端发送的数据。通过解析数据，展示相应的内容。</p><h2 id="三、传输层中的-TCP-和-UDP"><a href="#三、传输层中的-TCP-和-UDP" class="headerlink" title="三、传输层中的 TCP 和 UDP"></a>三、传输层中的 TCP 和 UDP</h2><p>TCP/IP 中有两个具有代表性的传输层协议，分别是 TCP 和 UDP。</p><ul><li>TCP 是面向连接的、可靠的流协议。流就是指不间断的数据结构，当应用程序采用 TCP 发送消息时，虽然可以保证发送的顺序，但还是犹如没有任何间隔的数据流发送给接收端。TCP 为提供可靠性传输，实行&amp;ldquo;顺序控制&amp;rdquo;或&amp;ldquo;重发控制&amp;rdquo;机制。此外还具备&amp;ldquo;流控制（流量控制）&amp;rdquo;、&amp;ldquo;拥塞控制&amp;rdquo;、提高网络利用率等众多功能。</li><li>UDP 是不具有可靠性的数据报协议。细微的处理它会交给上层的应用去完成。在 UDP 的情况下，虽然可以确保发送消息的大小，却不能保证消息一定会到达。因此，应用有时会根据自己的需要进行重发处理。</li><li>TCP 和 UDP 的优缺点无法简单地、绝对地去做比较：TCP 用于在传输层有必要实现可靠传输的情况；而在一方面，UDP 主要用于那些对高速传输和实时性有较高要求的通信或广播通信。TCP 和 UDP 应该根据应用的目的按需使用。</li></ul><p><strong>1. 端口号</strong></p><p>数据链路和 IP 中的地址，分别指的是 MAC 地址和 IP 地址。前者用来识别同一链路中不同的计算机，后者用来识别 TCP/IP 网络中互连的主机和路由器。在传输层也有这种类似于地址的概念，那就是端口号。端口号用来识别同一台计算机中进行通信的不同应用程序。因此，它也被称为程序地址。</p><p><strong>1.1 根据端口号识别应用</strong></p><p>一台计算机上同时可以运行多个程序。传输层协议正是利用这些端口号识别本机中正在进行通信的应用程序，并准确地将数据传输。</p><p>通过端口号识别应用</p><p><strong>1.2 通过 IP 地址、端口号、协议号进行通信识别</strong></p><ul><li>仅凭目标端口号识别某一个通信是远远不够的。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/b5365660969c04412663a89676037c2a.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/4abc87010b97139a5f8860c5b4d74592.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>通过端口号、IP地址、协议号进行通信识别</p><p>① 和② 的通信是在两台计算机上进行的。它们的目标端口号相同，都是80。这里可以根据源端口号加以区分。</p><p>③ 和 ① 的目标端口号和源端口号完全相同，但它们各自的源 IP 地址不同。</p><p>此外，当 IP 地址和端口号全都一样时，我们还可以通过协议号来区分（TCP 和 UDP）。</p><p><strong>1.3 端口号的确定</strong></p><ul><li>标准既定的端口号：这种方法也叫静态方法。它是指每个应用程序都有其指定的端口号。但并不是说可以随意使用任何一个端口号。例如 HTTP、FTP、TELNET 等广为使用的应用协议中所使用的端口号就是固定的。这些端口号被称为知名端口号，分布在 0<del>1023 之间；除知名端口号之外，还有一些端口号被正式注册，它们分布在 1024</del>49151 之间，不过这些端口号可用于任何通信用途。</li><li>时序分配法：服务器有必要确定监听端口号，但是接受服务的客户端没必要确定端口号。在这种方法下，客户端应用程序完全可以不用自己设置端口号，而全权交给操作系统进行分配。动态分配的端口号范围在 49152~65535 之间。</li></ul><p><strong>1.4 端口号与协议</strong></p><ul><li>端口号由其使用的传输层协议决定。因此，不同的传输层协议可以使用相同的端口号。</li><li>此外，那些知名端口号与传输层协议并无关系。只要端口一致都将分配同一种应用程序进行处理。</li></ul><ol start="2"><li>UDP</li></ol><ul><li>UDP 不提供复杂的控制机制，利用 IP 提供面向无连接的通信服务。</li><li>并且它是将应用程序发来的数据在收到的那一刻，立即按照原样发送到网络上的一种机制。即使是出现网络拥堵的情况，UDP 也无法进行流量控制等避免网络拥塞行为。</li><li>此外，传输途中出现丢包，UDP 也不负责重发。</li><li>甚至当包的到达顺序出现乱序时也没有纠正的功能。</li><li>如果需要以上的细节控制，不得不交由采用 UDP 的应用程序去处理。</li><li>UDP 常用于一下几个方面：1.包总量较少的通信（DNS、SNMP等）；2.视频、音频等多媒体通信（即时通信）；3.限定于 LAN 等特定网络中的应用通信；4.广播通信（广播、多播）。</li></ul><ol start="3"><li>TCP</li></ol><ul><li>TCP 与 UDP 的区别相当大。它充分地实现了数据传输时各种控制功能，可以进行丢包时的重发控制，还可以对次序乱掉的分包进行顺序控制。而这些在 UDP 中都没有。</li><li>此外，TCP 作为一种面向有连接的协议，只有在确认通信对端存在时才会发送数据，从而可以控制通信流量的浪费。</li><li>根据 TCP 的这些机制，在 IP 这种无连接的网络上也能够实现高可靠性的通信（ 主要通过检验和、序列号、确认应答、重发控制、连接管理以及窗口控制等机制实现）。</li></ul><p><strong>3.1 三次握手（重点）</strong></p><ul><li>TCP 提供面向有连接的通信传输。面向有连接是指在数据通信开始之前先做好两端之间的准备工作。</li><li>所谓三次握手是指建立一个 TCP 连接时需要客户端和服务器端总共发送三个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发。</li></ul><p>下面来看看三次握手的流程图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/7b09f56589ba71b99fad5aeae19f363d.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>三次握手</p><ul><li>***次握手：客户端将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给服务器端，客户端进入SYN_SENT状态，等待服务器端确认。</li><li>第二次握手：服务器端收到数据包后由标志位SYN=1知道客户端请求建立连接，服务器端将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给客户端以确认连接请求，服务器端进入SYN_RCVD状态。</li><li>第三次握手：客户端收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给服务器端，服务器端检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，客户端和服务器端进入ESTABLISHED状态，完成三次握手，随后客户端与服务器端之间可以开始传输数据了。</li></ul><p><strong>3.2 四次挥手（重点）</strong></p><ul><li>四次挥手即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发。</li><li>由于TCP连接是全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭。</li></ul><p>下面来看看四次挥手的流程图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f0adfc32f118133170ad1a48b5a2eb58.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>四次挥手</p><ul><li>中断连接端可以是客户端，也可以是服务器端。</li><li>***次挥手：客户端发送一个FIN=M，用来关闭客户端到服务器端的数据传送，客户端进入FIN_WAIT_1状态。意思是说”我客户端没有数据要发给你了”，但是如果你服务器端还有数据没有发送完成，则不必急着关闭连接，可以继续发送数据。</li><li>第二次挥手：服务器端收到FIN后，先发送ack=M+1，告诉客户端，你的请求我收到了，但是我还没准备好，请继续你等我的消息。这个时候客户端就进入FIN_WAIT_2 状态，继续等待服务器端的FIN报文。</li><li>第三次挥手：当服务器端确定数据已发送完成，则向客户端发送FIN=N报文，告诉客户端，好了，我这边数据发完了，准备好关闭连接了。服务器端进入LAST_ACK状态。</li><li>第四次挥手：客户端收到FIN=N报文后，就知道可以关闭连接了，但是他还是不相信网络，怕服务器端不知道要关闭，所以发送ack=N+1后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。服务器端收到ACK后，就知道可以断开连接了。客户端等待了2MSL后依然没有收到回复，则证明服务器端已正常关闭，那好，我客户端也可以关闭连接了。最终完成了四次握手。</li></ul><p><strong>上面是一方主动关闭，另一方被动关闭的情况，实际中还会出现同时发起主动关闭的情况。</strong></p><p>具体流程如下图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/d4d0fa887aa88281b11090c771159662.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>同时挥手</p><p><strong>3.3 通过序列号与确认应答提高可靠性</strong></p><ul><li>在 TCP 中，当发送端的数据到达接收主机时，接收端主机会返回一个已收到消息的通知。这个消息叫做确认应答（ACK）。当发送端将数据发出之后会等待对端的确认应答。如果有确认应答，说明数据已经成功到达对端。<strong>反之，则数据丢失的可能性很大</strong>。</li><li>在一定时间内没有等待到确认应答，发送端就可以认为数据已经丢失，并进行重发。由此，即使产生了丢包，仍然能够保证数据能够到达对端，实现可靠传输。</li><li>未收到确认应答并不意味着数据一定丢失。也有可能是数据对方已经收到，只是返回的确认应答在途中丢失。这种情况也会导致发送端误以为数据没有到达目的地而重发数据。</li><li>此外，也有可能因为一些其他原因导致确认应答延迟到达，在源主机重发数据以后才到达的情况也屡见不鲜。此时，源主机只要按照机制重发数据即可。</li><li>对于目标主机来说，反复收到相同的数据是不可取的。为了对上层应用提供可靠的传输，目标主机必须放弃重复的数据包。为此我们引入了序列号。</li><li><strong>序列号是按照顺序给发送数据的每一个字节（8位字节）都标上号码的编号。接收端查询接收数据 TCP 首部中的序列号和数据的长度，将自己下一步应该接收的序列号作为确认应答返送回去。通过序列号和确认应答号，TCP 能够识别是否已经接收数据，又能够判断是否需要接收，从而实现可靠传输。</strong></li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/88e571b0cec17ee0f212dfb5a9558702.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>序列号和确认应答</p><p><strong>3.4 重发超时的确定</strong></p><ul><li><strong>重发超时是指在重发数据之前，等待确认应答到来的那个特定时间间隔。</strong>如果超过这个时间仍未收到确认应答，发送端将进行数据重发。最理想的是，找到一个最小时间，它能保证&amp;ldquo;确认应答一定能在这个时间内返回&amp;rdquo;。</li><li>TCP 要求不论处在何种网络环境下都要提供高性能通信，并且无论网络拥堵情况发生何种变化，都必须保持这一特性。为此，它在每次发包时都会计算往返时间及其偏差。将这个往返时间和偏差时间相加，重发超时的时间就是比这个总和要稍大一点的值。</li><li>在 BSD 的 Unix 以及 Windows 系统中，超时都以0.5秒为单位进行控制，因此重发超时都是0.5秒的整数倍。不过，最初其重发超时的默认值一般设置为6秒左右。</li><li>数据被重发之后若还是收不到确认应答，则进行再次发送。此时，等待确认应答的时间将会以2倍、4倍的指数函数延长。</li><li>此外，<strong>数据也不会被</strong><em>、反复地重发。达到一定重发次数之后，如果仍没有任何确认应答返回，就会判断为网络或对端主机发生了异常，强制关闭连接。并且通知应用通信异常强行终止。</em>*</li></ul><p><strong>3.5 以段为单位发送数据</strong></p><ul><li>在建立 TCP 连接的同时，也可以确定发送数据包的单位，我们也可以称其为&amp;ldquo;<em><strong>消息长度&amp;rdquo;（MSS）。最理想的情况是，</strong></em>消息长度正好是 IP 中不会被分片处理的***数据长度。</li><li>TCP 在传送大量数据时，是以 MSS 的大小将数据进行分割发送。进行重发时也是以 MSS 为单位。</li><li>MSS 在三次握手的时候，在两端主机之间被计算得出。两端的主机在发出建立连接的请求时，会在 TCP 首部中写入 MSS 选项，告诉对方自己的接口能够适应的 MSS 的大小。然后会在两者之间选择一个较小的值投入使用。</li></ul><p><strong>3.6 利用窗口控制提高速度</strong></p><ul><li><p>TCP 以1个段为单位，每发送一个段进行一次确认应答的处理。这样的传输方式有一个缺点，就是包的往返时间越长通信性能就越低。</p></li><li><p>为解决这个问题，TCP 引入了窗口这个概念。确认应答不再是以每个分段，而是以更大的单位进行确认，转发时间将会被大幅地缩短。也就是说，发送端主机，在发送了一个段以后不必要一直等待确认应答，而是继续发送。如下图所示：</p></li><li><p>窗口控制</p></li><li><p>窗口大小就是指无需等待确认应答而可以继续发送数据的***值。上图中窗口大小为4个段。这个机制实现了使用大量的缓冲区，通过对多个段同时进行确认应答的功能。</p></li></ul><p><strong>3.7 滑动窗口控制</strong></p><p>滑动窗口</p><ul><li>上图中的窗口内的数据即便没有收到确认应答也可以被发送出去。不过，在整个窗口的确认应答没有到达之前，如果其中部分数据出现丢包，那么发送端仍然要负责重传。为此，发送端主机需要设置缓存保留这些待被重传的数据，直到收到他们的确认应答。</li><li>在滑动窗口以外的部分包括未发送的数据以及已经确认对端已收到的数据。当数据发出后若如期收到确认应答就可以不用再进行重发，此时数据就可以从缓存区清除。</li><li>收到确认应答的情况下，将窗口滑动到确认应答中的序列号的位置。这样可以顺序地将多个段同时发送提高通信性能。这种机制也别称为滑动窗口控制。</li></ul><p><strong>3.8 窗口控制中的重发控制</strong></p><p>在使用窗口控制中， 出现丢包一般分为两种情况：</p><p>① 确认应答未能返回的情况。在这种情况下，数据已经到达对端，是不需要再进行重发的，如下图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/8e7aff97ff49a06c5ba30dc80fc08930.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>部分确认应答丢失</p><p>② 某个报文段丢失的情况。接收主机如果收到一个自己应该接收的序列号以外的数据时，会针对当前为止收到数据返回确认应答。如下图所示，当某一报文段丢失后，发送端会一直收到序号为1001的确认应答，因此，在窗口比较大，又出现报文段丢失的情况下，同一个序列号的确认应答将会被重复不断地返回。而发送端主机如果连续3次收到同一个确认应答，就会将其对应的数据进行重发。这种机制比之前提到的超时管理更加高效，因此也被称为高速重发控制。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/c254cf5d196a1c00e915807edb5437fb.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><h2 id="四、网络层中的-IP-协议"><a href="#四、网络层中的-IP-协议" class="headerlink" title="四、网络层中的 IP 协议"></a>四、网络层中的 IP 协议</h2><ul><li>IP（IPv4、IPv6）相当于 OSI 参考模型中的第3层&amp;mdash;&amp;mdash;网络层。网络层的主要作用是&amp;ldquo;实现终端节点之间的通信&amp;rdquo;。这种终端节点之间的通信也叫&amp;ldquo;点对点通信&amp;rdquo;。</li><li>网络的下一层&amp;mdash;&amp;mdash;数据链路层的主要作用是在互连同一种数据链路的节点之间进行包传递。而一旦跨越多种数据链路，就需要借助网络层。网络层可以跨越不同的数据链路，即使是在不同的数据链路上也能实现两端节点之间的数据包传输。</li><li><strong>IP 大致分为三大作用模块，它们是 IP 寻址、路由（最终节点为止的转发）以及 IP 分包与组包。</strong></li></ul><p><strong>1. IP 地址</strong></p><p><strong>1.1 IP 地址概述</strong></p><ul><li>在计算机通信中，为了识别通信对端，必须要有一个类似于地址的识别码进行标识。在数据链路中的 MAC 地址正是用来标识同一个链路中不同计算机的一种识别码。</li><li>作为网络层的 IP ,也有这种地址信息，一般叫做 IP 地址。IP 地址用于在&amp;ldquo;连接到网络中的所有主机中识别出进行通信的目标地址&amp;rdquo;。因此，在 TCP/IP 通信中所有主机或路由器必须设定自己的 IP 地址。</li><li>不论一台主机与哪种数据链路连接，其 IP 地址的形式都保持不变。</li><li>IP 地址（IPv4 地址）由32位正整数来表示。IP 地址在计算机内部以二进制方式被处理。然而，由于我们并不习惯于采用二进制方式，我们将32位的 IP 地址以每8位为一组，分成4组，每组以 &amp;ldquo;.&amp;rdquo; 隔开，再将每组数转换成十进制数。如下：</li></ul><p><strong>1.2 IP 地址由网络和主机两部分标识组成</strong></p><ul><li>如下图，网络标识在数据链路的每个段配置不同的值。网络标识必须保证相互连接的每个段的地址不相重复。而相同段内相连的主机必须有相同的网络地址。IP 地址的&amp;ldquo;主机标识&amp;rdquo;则不允许在同一个网段内重复出现。由此，可以通过设置网络地址和主机地址，在相互连接的整个网络中保证每台主机的 IP 地址都不会相互重叠。即 IP 地址具有了唯一性。</li></ul><p>IP地址的主机标识</p><ul><li>如下图，IP 包被转发到途中某个路由器时，正是利用目标 IP 地址的网络标识进行路由。因为即使不看主机标识，只要一见到网络标识就能判断出是否为该网段内的主机。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/6bd79d8b235618f4a63c102a89387e2d.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>IP地址的网络标识</p><p><strong>1.3 IP 地址的分类</strong></p><ul><li><strong>IP 地址分为四个级别，分别为A类、B类、C类、D类。它根据 IP 地址中从第 1 位到第 4 位的比特列对其网络标识和主机标识进行区分。</strong></li><li><strong>A 类 IP 地址是首位以 &amp;ldquo;0&amp;rdquo; 开头的地址。</strong>从第 1 位到第 8 位是它的网络标识。用十进制表示的话，0.0.0.0~127.0.0.0 是 A 类的网络地址。A 类地址的后 24 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为16,777,214个。</li><li><strong>B 类 IP 地址是前两位 &amp;ldquo;10&amp;rdquo; 的地址。</strong>从第 1 位到第 16 位是它的网络标识。用十进制表示的话，128.0.0.0~191.255.0.0 是 B 类的网络地址。B 类地址的后 16 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为65,534个。</li><li><strong>C 类 IP 地址是前三位为 &amp;ldquo;110&amp;rdquo; 的地址。</strong>从第 1 位到第 24 位是它的网络标识。用十进制表示的话，192.0.0.0~223.255.255.0 是 C 类的网络地址。C 类地址的后 8 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为254个。</li><li><strong>D 类 IP 地址是前四位为 &amp;ldquo;1110&amp;rdquo; 的地址。</strong>从第 1 位到第 32 位是它的网络标识。用十进制表示的话，224.0.0.0~239.255.255.255 是 D 类的网络地址。D 类地址没有主机标识，常用于多播。</li><li>在分配 IP 地址时关于主机标识有一点需要注意。即要用比特位表示主机地址时，不可以全部为 0 或全部为 1。因为全部为 0 只有在表示对应的网络地址或 IP 地址不可以获知的情况下才使用。而全部为 1 的主机通常作为广播地址。因此，在分配过程中，应该去掉这两种情况。这也是为什么 C 类地址每个网段最多只能有 254（ 2<sup>8</sup>&amp;nbsp;- 2 = 254）个主机地址的原因。</li></ul><p><strong>1.4 广播地址</strong></p><ul><li>广播地址用于在同一个链路中相互连接的主机之间发送数据包。将 IP 地址中的主机地址部分全部设置为 1，就成了广播地址。</li><li>广播分为本地广播和直接广播两种。在本网络内的广播叫做本地广播；在不同网络之间的广播叫做直接广播。</li></ul><p><strong>1.5 IP 多播</strong></p><ul><li><p>多播用于将包发送给特定组内的所有主机。由于其直接使用 IP 地址，因此也不存在可靠传输。</p></li><li><p>相比于广播，多播既可以穿透路由器，又可以实现只给那些必要的组发送数据包。请看下图：</p></li><li><p>IP 多播</p></li><li><p>多播使用 D 类地址。因此，如果从首位开始到第 4 位是 &amp;ldquo;1110&amp;rdquo;，就可以认为是多播地址。而剩下的 28 位可以成为多播的组编号。</p></li><li><p>此外， 对于多播，所有的主机（路由器以外的主机和终端主机）必须属于 224.0.0.1 的组，所有的路由器必须属于 224.0.0.2 的组。</p></li></ul><p><strong>1.6 子网掩码</strong></p><ul><li>现在一个 IP 地址的网络标识和主机标识已不再受限于该地址的类别，而是由一个叫做&amp;ldquo;子网掩码&amp;rdquo;的识别码通过子网网络地址细分出比 A 类、B 类、C 类更小粒度的网络。这种方式实际上就是将原来 A 类、B 类、C 类等分类中的主机地址部分用作子网地址，可以将原网络分为多个物理网络的一种机制。</li><li>子网掩码用二进制方式表示的话，也是一个 32 位的数字。它对应 IP 地址网络标识部分的位全部为 &amp;ldquo;1&amp;rdquo;，对应 IP 地址主机标识的部分则全部为 &amp;ldquo;0&amp;rdquo;。由此，一个 IP 地址可以不再受限于自己的类别，而是可以用这样的子网掩码自由地定位自己的网络标识长度。当然，子网掩码必须是 IP 地址的首位开始连续的 &amp;ldquo;1&amp;rdquo;。</li><li>对于子网掩码，目前有两种表示方式。***种是，将 IP 地址与子网掩码的地址分别用两行来表示。以 172.20.100.52 的前 26 位是网络地址的情况为例，如下：</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2cd6e3fd8f2c24e33f6ab2f8dce6efd4.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><ul><li>第二种表示方式是，在每个 IP 地址后面追加网络地址的位数用 &amp;ldquo;/ &amp;rdquo; 隔开</li></ul><p><strong>2. 路由</strong></p><ul><li>发送数据包时所使用的地址是网络层的地址，即 IP 地址。然而仅仅有 IP 地址还不足以实现将数据包发送到对端目标地址，在数据发送过程中还需要类似于&amp;ldquo;指明路由器或主机&amp;rdquo;的信息，以便真正发往目标地址。保存这种信息的就是路由控制表。</li><li>该路由控制表的形成方式有两种：一种是管理员手动设置，另一种是路由器与其他路由器相互交换信息时自动刷新。前者也叫做静态路由控制，而后者叫做动态路由控制。</li><li>IP 协议始终认为路由表是正确的。然后，IP 本身并没有定义制作路由控制表的协议。即 IP 没有制作路由控制表的机制。该表示由一个叫做&amp;ldquo;路由协议&amp;rdquo;的协议制作而成。</li></ul><p><strong>2.1 IP 地址与路由控制</strong></p><ul><li>IP 地址的网络地址部分用于进行路由控制。</li><li>路由控制表中记录着网络地址与下一步应该发送至路由器的地址。</li><li>在发送 IP 包时，首先要确定 IP 包首部中的目标地址，再从路由控制表中找到与该地址具有相同网络地址的记录，根据该记录将 IP 包转发给相应的下一个路由器。如果路由控制表中存在多条相同网络地址的记录，就选择一个最为吻合的网络地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f7196335235016e1f7486a8f34050f65.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>路由控制表与 IP 包发送</p><p><strong>3. IP 分包与组包</strong></p><ul><li>每种数据链路的***传输单元（MTU）都不尽相同，因为每个不同类型的数据链路的使用目的不同。使用目的不同，可承载的 MTU 也就不同。</li><li>任何一台主机都有必要对 IP 分片进行相应的处理。分片往往在网络上遇到比较大的报文无法一下子发送出去时才会进行处理。</li><li>经过分片之后的 IP 数据报在被重组的时候，只能由目标主机进行。路由器虽然做分片但不会进行重组。</li></ul><p><strong>3.1 路径 MTU 发现</strong></p><ul><li>分片机制也有它的不足。如路由器的处理负荷加重之类。因此，只要允许，是不希望由路由器进行 IP 数据包的分片处理的。</li><li>为了应对分片机制的不足，&amp;ldquo;路径 MTU 发现&amp;rdquo; 技术应运而生。路径 MTU 指的是，从发送端主机到接收端主机之间不需要分片是*** MTU 的大小。即路径中存在的所有数据链路中最小的 MTU 。</li><li>进行路径 MTU 发现，就可以避免在中途的路由器上进行分片处理，也可以在 TCP 中发送更大的包。</li></ul><p><strong>4. IPv6</strong></p><ul><li>IPv6（IP version 6）是为了根本解决 IPv4 地址耗尽的问题而被标准化的网际协议。IPv4 的地址长度为 4 个 8 位字节，即 32 比特。而 IPv6 的地址长度则是原来的 4 倍，即 128 比特，一般写成 8 个 16 位字节。</li></ul><p><strong>4.1 IPv6 的特点</strong></p><ul><li>IP 得知的扩大与路由控制表的聚合。</li><li>性能提升。包首部长度采用固定的值（40字节），不再采用首部检验码。简化首部结构，减轻路由器负担。路由器不再做分片处理。</li><li>支持即插即用功能。即使没有DHCP服务器也可以实现自动分配 IP 地址。</li><li>采用认证与加密功能。应对伪造 IP 地址的网络安全功能以及防止线路窃听的功能。</li><li>多播、Mobile IP 成为扩展功能。</li></ul><p><strong>4.2 IPv6 中 IP 地址的标记方法</strong></p><ul><li>一般人们将 128 比特 IP 地址以每 16 比特为一组，每组用冒号（&amp;ldquo;：&amp;rdquo;）隔开进行标记。</li><li>而且如果出现连续的 0 时还可以将这些 0 省略，并用两个冒号（&amp;ldquo;：：&amp;rdquo;）隔开。但是，一个 IP 地址中只允许出现一次两个连续的冒号。</li></ul><p><strong>4.3 IPv6 地址的结构</strong></p><ul><li>IPv6 类似 IPv4，也是通过 IP 地址的前几位标识 IP 地址的种类。</li><li>在互联网通信中，使用一种全局的单播地址。它是互联网中唯一的一个地址，不需要正式分配 IP 地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/ab4237bc8a7b577a112ad378b5559038.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p><strong>4.4 全局单播地址</strong></p><ul><li>全局单播地址是指世界上唯一的一个地址。它是互联网通信以及各个域内部通信中最为常用的一个 IPv6 地址。</li><li>格式如下图所示，现在 IPv6 的网络中所使用的格式为，n = 48，m = 16 以及 128 - n - m = 64。即前 64 比特为网络标识，后 64 比特为主机标识。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f9bfdef073be77e2ddadd80549d19a83.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>全局单播地址</p><p><strong>4.5 链路本地单播地址</strong></p><ul><li>链路本地单播地址是指在同一个数据链路内唯一的地址。它用于不经过路由器，在同一个链路中的通信。通常接口 ID 保存 64 比特版的 MAC 地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/5978f86afcbd2a720c6bd9229a196810.jpeg-wh_600x-s_2695201089.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>链路本地单播地址</p><p><strong>4.6 唯一本地地址</strong></p><ul><li>唯一本地地址是不进行互联网通信时所用的地址。</li><li>唯一本地地址虽然不会与互联网连接，但是也会尽可能地随机生成一个唯一的全局 ID。</li><li>L 通常被置为 1</li><li>全局 ID 的值随机决定</li><li>子网 ID 是指该域子网地址</li><li>接口 ID 即为接口的 ID</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/446f67e636c944343808de6754155f62.jpeg-wh_600x-s_36418080.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>唯一本地地址</p><p><strong>4.7 IPv6 分段处理</strong></p><ul><li>IPv6 的分片处理只在作为起点的发送端主机上进行，路由器不参与分片。</li><li>IPv6 中最小 MTU 为 1280 字节，因此，在嵌入式系统中对于那些有一定系统资源限制的设备来说，不需要进行&amp;ldquo;路径 MTU 发现&amp;rdquo;，而是在发送 IP 包时直接以 1280 字节为单位分片送出。</li></ul><p><strong>4.8 IP 首部（暂略）</strong></p><p><strong>5. IP 协议相关技术</strong></p><ul><li>IP 旨在让最终目标主机收到数据包，但是在这一过程中仅仅有 IP 是无法实现通信的。必须还有能够解析主机名称和 MAC 地址的功能，以及数据包在发送过程中异常情况处理的功能。</li></ul><p><strong>5.1 DNS</strong></p><ul><li>我们平常在访问某个网站时不适用 IP 地址，而是用一串由罗马字和点号组成的字符串。而一般用户在使用 TCP/IP 进行通信时也不使用 IP 地址。能够这样做是因为有了 DNS （Domain Name System）功能的支持。DNS 可以将那串字符串自动转换为具体的 IP 地址。</li><li>这种 DNS 不仅适用于 IPv4，还适用于 IPv6。</li></ul><p><strong>5.2 ARP</strong></p><ul><li>只要确定了 IP 地址，就可以向这个目标地址发送 IP 数据报。然而，在底层数据链路层，进行实际通信时却有必要了解每个 IP 地址所对应的 MAC 地址。</li><li>ARP 是一种解决地址问题的协议。以目标 IP 地址为线索，用来定位下一个应该接收数据分包的网络设备对应的 MAC 地址。不过 ARP 只适用于 IPv4，不能用于 IPv6。IPv6 中可以用 ICMPv6 替代 ARP 发送邻居探索消息。</li><li>RARP 是将 ARP 反过来，从 MAC 地址定位 IP 地址的一种协议。</li></ul><p><strong>5.3 ICMP</strong></p><ul><li>ICMP 的主要功能包括，确认 IP 包是否成功送达目标地址，通知在发送过程当中 IP 包被废弃的具体原因，改善网络设置等。</li><li>IPv4 中 ICMP 仅作为一个辅助作用支持 IPv4。也就是说，在 IPv4 时期，即使没有 ICMP，仍然可以实现 IP 通信。然而，在 IPv6 中，ICMP 的作用被扩大，如果没有 ICMPv6，IPv6 就无法进行正常通信。</li></ul><p><strong>5.4 DHCP</strong></p><ul><li>如果逐一为每一台主机设置 IP 地址会是非常繁琐的事情。特别是在移动使用笔记本电脑、只能终端以及平板电脑等设备时，每移动到一个新的地方，都要重新设置 IP 地址。</li><li>于是，为了实现自动设置 IP 地址、统一管理 IP 地址分配，就产生了 DHCP（Dynamic Host Configuration Protocol）协议。有了 DHCP，计算机只要连接到网络，就可以进行 TCP/IP 通信。也就是说，DHCP 让即插即用变得可能。</li><li>DHCP 不仅在 IPv4 中，在 IPv6 中也可以使用。</li></ul><p><strong>5.5 NAT</strong></p><ul><li>NAT（Network Address Translator）是用于在本地网络中使用私有地址，在连接互联网时转而使用全局 IP 地址的技术。</li><li>除转换 IP 地址外，还出现了可以转换 TCP、UDP 端口号的 NAPT（Network Address Ports Translator）技术，由此可以实现用一个全局 IP 地址与多个主机的通信。</li><li>NAT（NAPT）实际上是为正在面临地址枯竭的 IPv4 而开发的技术。不过，在 IPv6 中为了提高网络安全也在使用 NAT，在 IPv4 和 IPv6 之间的相互通信当中常常使用 NAT-PT。</li></ul><p><strong>5.6 IP 隧道</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/65a040c9fc1b39941515e063e048d99e.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>夹着 IPv4 网络的两个 IPv6 网络</p><ul><li>如上图的网络环境中，网络 A 与网络 B 之间无法直接进行通信，为了让它们之间正常通信，这时必须得采用 IP 隧道的功能。</li><li>IP 隧道可以将那些从网络 A 发过来的 IPv6 的包统合为一个数据，再为之追加一个 IPv4 的首部以后转发给网络 C。</li><li>一般情况下，紧接着 IP 首部的是 TCP 或 UDP 的首部。然而，现在的应用当中&amp;ldquo; IP 首部的后面还是 IP 首部&amp;rdquo;或者&amp;ldquo; IP 首部的后面是 IPv6 的首部&amp;rdquo;等情况与日俱增。这种在网络层的首部后面追加网络层首部的通信方法就叫做&amp;ldquo; IP 隧道&amp;rdq</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubantu搜狗输入法候选汉字乱码</title>
      <link href="/2021/12/02/ubantu-sou-gou-shu-ru-fa-hou-xuan-han-zi-luan-ma/"/>
      <url>/2021/12/02/ubantu-sou-gou-shu-ru-fa-hou-xuan-han-zi-luan-ma/</url>
      
        <content type="html"><![CDATA[<p>Ubantu搜狗输入法候选汉字乱码</p><p>可能原因，自己手贱删除了/etc/apt/sources.list.d中的fcitx的一个列表</p><p>&amp;nbsp;</p><p>解决方法：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200813170919380-560000114.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;配置当前输入发，将搜狗输入法下移放在第二个位置（MDZZ）</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200813171020437-1675339877.png"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
