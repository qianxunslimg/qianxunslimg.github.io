<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/03/25/stl/"/>
      <url>/2022/03/25/stl/</url>
      
        <content type="html"><![CDATA[<h3 id="1、什么是STL？"><a href="#1、什么是STL？" class="headerlink" title="1、什么是STL？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=1%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AFstl%EF%BC%9F">1、什么是STL？</a></h3><p>C++ STL从广义来讲包括了三类：算法，容器和迭代器。</p><ul><li>算法包括排序，复制等常用算法，以及不同容器特定的算法。</li><li>容器就是数据的存放形式，包括序列式容器和关联式容器，序列式容器就是list，vector等，关联式容器就是set，map等。</li><li>迭代器就是在不暴露容器内部结构的情况下对容器的遍历。</li></ul><h3 id="2、解释一下什么是trivial-destructor"><a href="#2、解释一下什么是trivial-destructor" class="headerlink" title="2、解释一下什么是trivial destructor"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=2%E3%80%81%E8%A7%A3%E9%87%8A%E4%B8%80%E4%B8%8B%E4%BB%80%E4%B9%88%E6%98%AFtrivial-destructor">2、解释一下什么是trivial destructor</a></h3><blockquote><p>trivial: 无关痛痒的 细小琐碎的 </p></blockquote><p>“trivial destructor”<u>一般是指用户没有自定义析构函数，而由系统生成的</u>，这种析构函数在《STL源码解析》中成为“<u>无关痛痒”的析构函数</u>。</p><p>反之，用户自定义了析构函数，则称之为“non-trivial destructor”，这种析构函数<strong>如果申请了新的空间一定要显式的释放，否则会造成内存泄露</strong></p><p>对于trivial destructor，如果每次都进行调用，显然对效率是一种伤害，如何进行判断呢？ ==（不必调用的析构函数）==</p><p>《STL源码解析》中给出的说明是：</p><blockquote><p>首先利用value_type()获取所指对象的型别，再利用__type_traits判断该型别的析构函数是否trivial，若是(__true_type)，则什么也不做，若为(__false_type)，则去调用destory()函数</p></blockquote><p>也就是说，在实际的应用当中，STL库提供了相关的判断方法**__type_traits**，感兴趣的读者可以自行查阅使用方式。除了trivial destructor，还有trivial construct、trivial copy construct等，如果能够对是否trivial进行区分，可以采用内存处理函数memcpy()、malloc()等更加高效的完成相关操作，提升效率。</p><h3 id="3、使用智能指针管理内存资源，RAII是怎么回事？"><a href="#3、使用智能指针管理内存资源，RAII是怎么回事？" class="headerlink" title="3、使用智能指针管理内存资源，RAII是怎么回事？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=3%E3%80%81%E4%BD%BF%E7%94%A8%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88%E7%AE%A1%E7%90%86%E5%86%85%E5%AD%98%E8%B5%84%E6%BA%90%EF%BC%8Craii%E6%98%AF%E6%80%8E%E4%B9%88%E5%9B%9E%E4%BA%8B%EF%BC%9F">3、使用智能指针管理内存资源，RAII是怎么回事？</a></h3><ol><li>RAII全称是“Resource Acquisition is Initialization”，直译过来是“==资源获取即初始化==”，也就是说在构造函数中申请分配资源，在析构函数中释放资源。</li></ol><p>因为C++的语言机制保证了，当一个对象创建的时候，自动调用构造函数，当对象超出作用域的时候会自动调用析构函数。所以，在RAII的指导下，我们应该使用类来管理资源，将资源和对象的生命周期绑定。</p><ol start="2"><li>智能指针（std::shared_ptr和std::unique_ptr）即RAII最具代表的实现，使用智能指针，可以实现自动的内存管理，再也不需要担心忘记delete造成的内存泄漏。</li></ol><p>==毫不夸张的来讲，有了智能指针，代码中几乎不需要再出现delete了。==</p><p><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=4%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%9Ait%E3%80%81it%E5%93%AA%E4%B8%AA%E5%A5%BD%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88">4、迭代器：++it、it++哪个好，为什么</a></p><ol><li>前置返回一个引用，后置返回一个对象</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ++i实现代码为：</span></span><br><span class="line"><span class="keyword">int</span>&amp; <span class="keyword">operator</span>++()</span><br><span class="line">{</span><br><span class="line"></span><br><span class="line">  *<span class="keyword">this</span> += <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">} Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>前置不会产生临时对象，后置必须产生临时对象，临时对象会导致效率降低</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//i++实现代码为：                 </span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">operator</span>++(<span class="keyword">int</span>)                 </span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> temp = *<span class="keyword">this</span>;                   </span><br><span class="line"></span><br><span class="line">   ++*<span class="keyword">this</span>;                       </span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> temp;                  </span><br><span class="line">} Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><h3 id="5、说一下C-左值引用和右值引用"><a href="#5、说一下C-左值引用和右值引用" class="headerlink" title="5、说一下C++左值引用和右值引用"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=5%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8Bc%E5%B7%A6%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8">5、说一下C++左值引用和右值引用</a></h3><p>C++11正是通过引入右值引用来优化性能，具体来说是通过移动语义来避免无谓拷贝的问题，通过move语义来将临时生成的左值中的资源无代价的转移到另外一个对象中去，通过完美转发来解决不能按照参数实际类型来转发的问题（同时，完美转发获得的一个好处是可以实现移动语义）。</p><ol><li><p>在C++11中所有的值必属于左值、右值两者之一，右值又可以细分为纯右值、将亡值。在C++11中可以取地址的、有名字的就是左值，反之，不能取地址的、没有名字的就是右值（将亡值或纯右值）。举个例子，int a = b+c, a 就是左值，其有变量名为a，通过&amp;a可以获取该变量的地址；表达式b+c、函数int func()的返回值是右值，在其被赋值给某一变量前，我们不能通过变量名找到它，＆(b+c)这样的操作则不会通过编译。</p></li><li><p>C++11对C++98中的右值进行了扩充。在C++11中右值又分为纯右值（prvalue，Pure Rvalue）和将亡值（xvalue，eXpiring Value）。其中纯右值的概念等同于我们在C++98标准中右值的概念，指的是临时变量和不跟对象关联的字面量值；将亡值则是C++11新增的跟右值引用相关的表达式，这样表达式通常是将要被移动的对象（移为他用），比如返回右值引用T&amp;&amp;的函数返回值、std::move的返回值，或者转换为T&amp;&amp;的类型转换函数的返回值。将亡值可以理解为通过“盗取”其他变量内存空间的方式获取到的值。在确保其他变量不再被使用、或即将被销毁时，通过“盗取”的方式可以避免内存空间的释放和分配，能够延长变量值的生命期。</p></li><li><p>左值引用就是对一个左值进行引用的类型。右值引用就是对一个右值进行引用的类型，事实上，由于右值通常不具有名字，我们也只能通过引用的方式找到它的存在。右值引用和左值引用都是属于引用类型。无论是声明一个左值引用还是右值引用，都必须立即进行初始化。而其原因可以理解为是引用类型本身自己并不拥有所绑定对象的内存，只是该对象的一个别名。左值引用是具名变量值的别名，而右值引用则是不具名（匿名）变量的别名。左值引用通常也不能绑定到右值，但常量左值引用是个“万能”的引用类型。它可以接受非常量左值、常量左值、右值对其进行初始化。不过常量左值所引用的右值在它的“余生”中只能是只读的。相对地，非常量左值只能接受非常量左值对其进行初始化。</p></li><li><p>右值值引用通常不能绑定到任何的左值，要想绑定一个左值到右值引用，通常需要std::move()将左值强制转换为右值。</p></li></ol><p><strong>左值和右值</strong></p><p>左值：表示的是可以获取地址的表达式，它能出现在赋值语句的左边，对该表达式进行赋值。但是修饰符const的出现使得可以声明如下的标识符，它可以取得地址，但是没办法对其进行赋值</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>&amp; a = <span class="number">10</span>;Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>右值：表示无法获取地址的对象，有常量值、函数返回值、lambda表达式等。无法获取地址，但不表示其不可改变，当定义了右值的右值引用时就可以更改右值。</p><p><strong>左值引用和右值引用</strong></p><p>左值引用：传统的C++中引用被称为左值引用</p><p>右值引用：C++11中增加了右值引用，右值引用关联到右值时，右值被存储到特定位置，右值引用指向该特定位置，也就是说，右值虽然无法获取地址，但是右值引用是可以获取地址的，该地址表示临时对象的存储位置</p><p><strong>这里主要说一下右值引用的特点：</strong></p><ul><li>特点1：通过右值引用的声明，右值又“重获新生”，其生命周期与右值引用类型变量的生命周期一样长，只要该变量还活着，该右值临时量将会一直存活下去</li><li>特点2：右值引用独立于左值和右值。意思是右值引用类型的变量可能是左值也可能是右值</li><li>特点3：T&amp;&amp; t在发生自动类型推断的时候，它是左值还是右值取决于它的初始化。</li></ul><p>举个例子：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(T&amp;&amp; t)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    cout &lt;&lt; t &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getInt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span>&amp; b = a;  <span class="comment">//b是左值引用</span></span><br><span class="line">    <span class="keyword">int</span>&amp; c = <span class="number">10</span>;  <span class="comment">//错误，c是左值不能使用右值初始化</span></span><br><span class="line">    <span class="keyword">int</span>&amp;&amp; d = <span class="number">10</span>;  <span class="comment">//正确，右值引用用右值初始化</span></span><br><span class="line">    <span class="keyword">int</span>&amp;&amp; e = a;  <span class="comment">//错误，e是右值引用不能使用左值初始化</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span>&amp; f = a; <span class="comment">//正确，左值常引用相当于是万能型，可以用左值或者右值初始化</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span>&amp; g = <span class="number">10</span>;<span class="comment">//正确，左值常引用相当于是万能型，可以用左值或者右值初始化</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span>&amp;&amp; h = <span class="number">10</span>; <span class="comment">//正确，右值常引用</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span>&amp; aa = h;<span class="comment">//正确</span></span><br><span class="line">    <span class="keyword">int</span>&amp; i = <span class="built_in">getInt</span>();  <span class="comment">//错误，i是左值引用不能使用临时变量（右值）初始化</span></span><br><span class="line">    <span class="keyword">int</span>&amp;&amp; j = <span class="built_in">getInt</span>();  <span class="comment">//正确，函数返回值是右值</span></span><br><span class="line">    <span class="built_in">fun</span>(<span class="number">10</span>); <span class="comment">//此时fun函数的参数t是右值</span></span><br><span class="line">    <span class="built_in">fun</span>(a); <span class="comment">//此时fun函数的参数t是左值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><h3 id="6、STL中hashtable的实现？"><a href="#6、STL中hashtable的实现？" class="headerlink" title="6、STL中hashtable的实现？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=6%E3%80%81stl%E4%B8%ADhashtable%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%9F">6、STL中hashtable的实现？</a></h3><p>STL中的hashtable使用的是<strong>开链法</strong>解决hash冲突问题，如下图所示。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/1566639786045.png" alt="img"></p><p>hashtable中的bucket所维护的list既不是list也不是slist，而是其自己定义的由hashtable_node数据结构组成的linked-list，而bucket聚合体本身使用vector进行存储。hashtable的迭代器只提供前进操作，不提供后退操作</p><p>在hashtable设计bucket的数量上，其内置了28个质数[53, 97, 193,…,429496729]，在创建hashtable时，会根据存入的元素个数选择大于等于元素个数的质数作为hashtable的容量（vector的长度），其中每个bucket所维护的linked-list长度也等于hashtable的容量。如果插入hashtable的元素个数超过了bucket的容量，就要进行重建table操作，即找出下一个质数，创建新的buckets vector，重新计算元素在新hashtable的位置。</p><h3 id="7、简单说一下traits技法"><a href="#7、简单说一下traits技法" class="headerlink" title="7、简单说一下traits技法"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=7%E3%80%81%E7%AE%80%E5%8D%95%E8%AF%B4%E4%B8%80%E4%B8%8Btraits%E6%8A%80%E6%B3%95">7、简单说一下traits技法</a></h3><p>traits技法利用“内嵌型别“的编程技巧与<strong>编译器的template参数推导功能</strong>，增强C++未能提供的关于型别认证方面的能力。常用的有iterator_traits和type_traits。</p><p><strong>iterator_traits</strong></p><p>被称为<strong>特性萃取机</strong>，能够方便的让外界获取以下5种型别：</p><ul><li>value_type：迭代器所指对象的型别</li><li>difference_type：两个迭代器之间的距离</li><li>pointer：迭代器所指向的型别</li><li>reference：迭代器所引用的型别</li><li>iterator_category：三两句说不清楚，建议看书</li></ul><p><strong>type_traits</strong></p><p>关注的是型别的<strong>特性</strong>，例如这个型别是否具备non-trivial defalt ctor（默认构造函数）、non-trivial copy ctor（拷贝构造函数）、non-trivial assignment operator（赋值运算符） 和non-trivial dtor（析构函数），如果答案是否定的，可以采取直接操作内存的方式提高效率，一般来说，type_traits支持以下5中类型的判断：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__type_traits&lt;T&gt;::has_trivial_default_constructor</span><br><span class="line">__type_traits&lt;T&gt;::has_trivial_copy_constructor</span><br><span class="line">__type_traits&lt;T&gt;::has_trivial_assignment_operator</span><br><span class="line">__type_traits&lt;T&gt;::has_trivial_destructor</span><br><span class="line">__type_traits&lt;T&gt;::is_POD_typeCopy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>由于编译器只针对class object形式的参数进行参数推到，因此上式的返回结果不应该是个bool值，实际上使用的是一种空的结构体：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">true_type</span>{</span>};<span class="class"><span class="keyword">struct</span> __<span class="title">false_type</span>{</span>};Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>这两个结构体没有任何成员，不会带来其他的负担，又能满足需求，可谓一举两得</p><p>当然，如果我们自行定义了一个Shape类型，也可以针对这个Shape设计type_traits的特化版本</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;&gt; <span class="class"><span class="keyword">struct</span> __<span class="title">type_traits</span>&lt;</span>Shape&gt;{</span><br><span class="line">    <span class="keyword">typedef</span> __true_type has_trivial_default_constructor;</span><br><span class="line">    <span class="keyword">typedef</span> __false_type has_trivial_copy_constructor;</span><br><span class="line">    <span class="keyword">typedef</span> __false_type has_trivial_assignment_operator;</span><br><span class="line">    <span class="keyword">typedef</span> __false_type has_trivial_destructor;</span><br><span class="line">    <span class="keyword">typedef</span> __false_type is_POD_type;</span><br><span class="line">};Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><h3 id="8、STL的两级空间配置器"><a href="#8、STL的两级空间配置器" class="headerlink" title="8、STL的两级空间配置器"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=8%E3%80%81stl%E7%9A%84%E4%B8%A4%E7%BA%A7%E7%A9%BA%E9%97%B4%E9%85%8D%E7%BD%AE%E5%99%A8">8、STL的两级空间配置器</a></h3><h4 id="首先明白为什么需要二级空间配置器？"><a href="#首先明白为什么需要二级空间配置器？" class="headerlink" title="首先明白为什么需要二级空间配置器？"></a>首先明白为什么需要二级空间配置器？</h4><p>我们知道动态开辟内存时，要在堆上申请，但若是我们需要频繁的在堆开辟释放内存，则就会<strong>在堆上造成很多外部碎片</strong>，浪费了内存空间；</p><p>每次都要进行调用<strong>malloc、free</strong>函数等操作，使空间就会增加一些附加信息，降低了空间利用率；</p><p>随着外部碎片增多，内存分配器在找不到合适内存情况下需要合并空闲块，浪费了时间，大大降低了效率。</p><p>于是就设置了二级空间配置器，<strong>当开辟内存&lt;=128bytes时，即视为开辟小块内存，则调用二级空间配置器。</strong> </p><blockquote><p>当配置区块超过128bytes 时，称为⾜够⼤，使⽤第⼀级配置器，直接使⽤ ==malloc() 和 free()==。</p><p>当配置区块不⼤于 128bytes 时，为了降低额外负担，直接使⽤第⼆级配置器，采⽤复杂的==memory pool== 处理⽅式。</p></blockquote><p>关于STL中一级空间配置器和二级空间配置器的选择上，一般默认<strong>选择的为二级空间配置器</strong>。 如果大于128<code>字节再转去</code>一级配置器器。</p><h5 id="一级配置器"><a href="#一级配置器" class="headerlink" title="一级配置器"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=%E4%B8%80%E7%BA%A7%E9%85%8D%E7%BD%AE%E5%99%A8">一级配置器</a></h5><p><strong>一级空间配置器</strong>中重要的函数就是allocate、deallocate、reallocate 。 一级空间配置器是以malloc()，free()，realloc()等C函数执行实际的内存配置 。大致过程是：</p><p>1、直接allocate分配内存，其实就是malloc来分配内存，成功则直接返回，失败就调用处理函数</p><p>2、如果用户自定义了内存分配失败的处理函数就调用，没有的话就返回异常</p><p>3、如果自定义了处理函数就进行处理，完事再继续分配试试</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/c++-189-1.png" alt="img"></p><h5 id="二级配置器"><a href="#二级配置器" class="headerlink" title="二级配置器"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=%E4%BA%8C%E7%BA%A7%E9%85%8D%E7%BD%AE%E5%99%A8">二级配置器</a></h5><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage2@2.6/202104/C++-189-2.png" alt="img"></p><ol><li><p>维护16条链表，分别是0-15号链表，最小8字节，以8字节逐渐递增，==最大128字节==，你传入一个字节参数，表示你需要多大的内存，会自动帮你校对到第几号链表（如需要13bytes空间，我们会给它分配16bytes大小），在找到第n个链表后查看链表是否为空，如果不为空直接从对应的free_list中拔出，将已经拨出的指针向后移动一位。</p></li><li><p>对应的free_list为空，先看其内存池是不是空时，如果内存池不为空： </p><blockquote><ol><li><p>先检验它剩余空间是否够20个节点大小（即所需内存大小(提升后) * 20），若足够则直接从内存池中拿出20个节点大小空间，将其中一个分配给用户使用，另外19个当作自由链表中的区块挂在相应的free_list下，这样下次再有相同大小的内存需求时，可直接拨出。 </p></li><li><p>如果不够20个节点大小，则看它是否能满足1个节点大小，如果够的话则直接拿出一个分配给用户，然后从剩余的空间中分配尽可能多的节点挂在相应的free_list中。 </p></li><li><p>如果连一个节点内存都不能满足的话，则将内存池中剩余的空间挂在相应的free_list中（找到相应的free_list），然后再给内存池申请内存，转到3。 3、内存池为空，申请内存 此时二级空间配置器会使用malloc()从heap上申请内存，（一次所申请的内存大小为2 * 所需节点内存大小（提升后）* 20 + 一段额外空间），申请40块，一半拿来用，一半放内存池中。</p></li><li><p>malloc没有成功 在第三种情况下，如果malloc()失败了，说明heap上没有足够空间分配给我们了，这时，二级空间配置器会从比所需节点空间大的free_list中一一搜索，从比它所需节点空间大的free_list中拔除一个节点来使用。如果这也没找到，说明比其大的free_list中都没有自由区块了，那就要调用一级适配器了。</p></li><li><p>释放时调用deallocate()函数，若释放的n&gt;128，则调用一级空间配置器，否则就直接将内存块挂上自由链表的合适位置。</p></li></ol></blockquote></li></ol><h5 id="STL二级空间配置器虽然解决了外部碎片与提高了效率，但它同时增加了一些缺点："><a href="#STL二级空间配置器虽然解决了外部碎片与提高了效率，但它同时增加了一些缺点：" class="headerlink" title="STL二级空间配置器虽然解决了外部碎片与提高了效率，但它同时增加了一些缺点："></a>STL二级空间配置器虽然解决了外部碎片与提高了效率，但它同时增加了一些缺点：</h5><ol><li><p>因为自由链表的管理问题，它会把我们需求的内存块自动提升为8的倍数，这时若你需要1个字节，它会给你8个字节，即浪费了7个字节，所以它<code>又引入了内部碎片的问题</code>，若相似情况出现很多次，就会造成很多内部碎片；</p></li><li><p>二级空间配置器是在堆上申请大块的狭义内存池，然后用自由链表管理，供现在使用，在程序执行过程中，它将申请的内存一块一块都挂在自由链表上，即不会还给操作系统，并且它的实现中所有成员全是静态的，所以它申请的所有内存只有在==进程结束==才会释放内存，还给操作系统，由此带来的问题有：1.即我不断的开辟小块内存，最后整个堆上的空间都被挂在自由链表上，若我想开辟大块内存就会失败；2.若自由链表上挂很多内存块没有被使用，当前进程又占着内存不释放，这时别的进程在堆上申请不到空间，也不可以使用当前进程的空闲内存，由此就会引发多种问题。</p></li></ol><h5 id="一级分配器"><a href="#一级分配器" class="headerlink" title="一级分配器"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=%E4%B8%80%E7%BA%A7%E5%88%86%E9%85%8D%E5%99%A8">一级分配器</a></h5><p>GC4.9之后就没有第一级了，只有第二级</p><h5 id="二级分配器"><a href="#二级分配器" class="headerlink" title="二级分配器"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=%E4%BA%8C%E7%BA%A7%E5%88%86%E9%85%8D%E5%99%A8">二级分配器</a></h5><p>——default_alloc_template 剖析</p><p>有个自动调整的函数：你传入一个字节参数，表示你需要多大的内存，会自动帮你校对到第几号链表（0-15号链表，最小8字节 最大128字节）</p><p>allocate函数：如果要分配的内存大于128字节，就转用第一级分配器，否则也就是小于128字节。那么首先判断落在第几号链表，定位到了，先判断链表是不是空，如果是空就需要充值，（调节到8的倍数，默认一次申请20个区块，当然了也要判断20个是不是能够申请到，如果只申请到一个那就直接返回好了，不止一个的话，把第2到第n个挨个挂到当前链表上，第一个返回回去给容器用,n是不大于20的，当然了如果不在1-20之间，那就是内存碎片了，那就先把碎片挂到某一条链表上，然后再重新malloc了，malloc 2*20个块）去内存池去拿或者重新分配。不为空的话</p><h4 id="9、-vector与list的区别与应用？怎么找某vector或者list的倒数第二个元素"><a href="#9、-vector与list的区别与应用？怎么找某vector或者list的倒数第二个元素" class="headerlink" title="9、 vector与list的区别与应用？怎么找某vector或者list的倒数第二个元素"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=9%E3%80%81-vector%E4%B8%8Elist%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E5%BA%94%E7%94%A8%EF%BC%9F%E6%80%8E%E4%B9%88%E6%89%BE%E6%9F%90vector%E6%88%96%E8%80%85list%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%85%83%E7%B4%A0">9、 vector与list的区别与应用？怎么找某vector或者list的倒数第二个元素</a></h4><ol><li>vector数据结构 vector和数组类似，拥有一段连续的内存空间，并且起始地址不变。因此能高效的进行随机存取，时间复杂度为o(1);但因为内存空间是连续的，所以在进行插入和删除操作时，会造成内存块的拷贝，时间复杂度为o(n)。</li></ol><p>另外，当数组中内存空间不够时，会重新申请一块内存空间并进行内存拷贝。连续存储结构：vector是可以实现动态增长的对象数组，支持对数组高效率的访问和在数组尾端的删除和插入操作，在中间和头部删除和插入相对不易，需要挪动大量的数据。</p><p>它与数组最大的区别就是vector不需程序员自己去考虑容量问题，库里面本身已经实现了容量的动态增长，而数组需要程序员手动写入扩容函数进形扩容。</p><ol start="2"><li>list数据结构 list是由双向链表实现的，因此内存空间是不连续的。只能通过指针访问数据，所以list的随机存取非常没有效率，时间复杂度为o(n);但由于链表的特点，能高效地进行插入和删除。非连续存储结构：list是一个双链表结构，支持对链表的双向遍历。每个节点包括三个信息：元素本身，指向前一个元素的节点（prev）和指向下一个元素的节点（next）。因此list可以高效率的对数据元素任意位置进行访问和插入删除等操作。由于涉及对额外指针的维护，所以开销比较大。</li></ol><p>区别：</p><ul><li>vector的随机访问效率高，但在插入和删除时（不包括尾部）需要挪动数据，不易操作。</li><li>list的访问要遍历整个链表，它的随机访问效率低。但对数据的插入和删除操作等都比较方便，改变指针的指向即可。</li><li>从遍历上来说，list是单向的，vector是双向的。</li><li>vector中的迭代器在使用后就失效了，而list的迭代器在使用之后还可以继续使用。</li></ul><ol start="3"><li></li></ol><p>int mySize = vec.size();vec.at(mySize -2);</p><p>list不提供随机访问，所以不能用下标直接访问到某个位置的元素，要访问list里的元素只能遍历，不过你要是只需要访问list的最后N个元素的话，可以用反向迭代器来遍历：</p><h4 id="10、STL-中vector删除其中的元素，迭代器如何变化？为什么是两倍扩容？释放空间？"><a href="#10、STL-中vector删除其中的元素，迭代器如何变化？为什么是两倍扩容？释放空间？" class="headerlink" title="10、STL 中vector删除其中的元素，迭代器如何变化？为什么是两倍扩容？释放空间？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=10%E3%80%81stl-%E4%B8%ADvector%E5%88%A0%E9%99%A4%E5%85%B6%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%EF%BC%8C%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A6%82%E4%BD%95%E5%8F%98%E5%8C%96%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%A4%E5%80%8D%E6%89%A9%E5%AE%B9%EF%BC%9F%E9%87%8A%E6%94%BE%E7%A9%BA%E9%97%B4%EF%BC%9F">10、STL 中vector删除其中的元素，迭代器如何变化？为什么是两倍扩容？释放空间？</a></h4><p>size()函数返回的是已用空间大小，capacity()返回的是总空间大小，capacity()-size()则是剩余的可用空间大小。当size()和capacity()相等，说明vector目前的空间已被用完，如果再添加新元素，则会引起vector空间的动态增长。</p><p>由于动态增长会引起重新分配内存空间、拷贝原空间、释放原空间，这些过程会降低程序效率。因此，可以使用reserve(n)预先分配一块较大的指定大小的内存空间，这样当指定大小的内存空间未使用完时，是不会重新分配内存空间的，这样便提升了效率。只有当n&gt;capacity()时，调用reserve(n)才会改变vector容量。</p><p>resize()成员函数改变元素的数目，至于空间的的变化需要看具体情况去分析，如下：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">resize</span><span class="params">(size_type __new_size, <span class="keyword">const</span> _Tp&amp; __x)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span> (__new_size &lt; size()) </span><br><span class="line">            erase(begin() + __new_size, end());</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">            insert(end(), __new_size - size(), __x);</span><br><span class="line">      }Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>1、空的vector对象，size()和capacity()都为0</p><p>2、当空间大小不足时，新分配的空间大小为原空间大小的2倍。</p><p>3、使用reserve()预先分配一块内存后，在空间未满的情况下，不会引起重新分配，从而提升了效率。</p><p>4、当reserve()分配的空间比原空间小时，是不会引起重新分配的。</p><p>5、resize()函数只改变容器的元素数目，未改变容器大小。</p><p>6、用reserve(size_type)只是扩大capacity值，这些内存空间可能还是“野”的，如果此时使用“[ ]”来访问，则可能会越界。而resize(size_type new_size)会真正使容器具有new_size个对象。</p><p>不同的编译器，vector有不同的扩容大小。在vs下是1.5倍，在GCC下是2倍；</p><p>空间和时间的权衡。简单来说， 空间分配的多，平摊时间复杂度低，但浪费空间也多。</p><p>使用k=2增长因子的问题在于，每次扩展的新尺寸必然刚好大于之前分配的总和，也就是说，之前分配的内存空间不可能被使用。这样对内存不友好，最好把增长因子设为(1, 2)，也就是1-2之间的某个数值。</p><p>对比可以发现采用采用成倍方式扩容，可以保证常数的时间复杂度，而增加指定大小的容量只能达到O(n)的时间复杂度，因此，使用成倍的方式扩容。</p><blockquote><p>谢谢网友指出错误：<a href="https://github.com/forthespada/InterviewGuide/issues/9%EF%BC%8C%E7%8E%B0%E5%B7%B2%E6%94%B9%E6%AD%A3%EF%BC%81-">https://github.com/forthespada/InterviewGuide/issues/9，现已改正！-</a> 2021.09.03</p></blockquote><h4 id="11、Vector如何释放空间"><a href="#11、Vector如何释放空间" class="headerlink" title="11、Vector如何释放空间?"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=11%E3%80%81vector%E5%A6%82%E4%BD%95%E9%87%8A%E6%94%BE%E7%A9%BA%E9%97%B4">11、Vector如何释放空间?</a></h4><p>由于vector的内存占用空间只增不减，比如你首先分配了10,000个字节，然后erase掉后面9,999个，留下一个有效元素，但是内存占用仍为10,000个。所有内存空间是在vector析构时候才能被系统回收。empty()用来检测容器是否为空的，clear()可以清空所有元素。但是即使clear()，vector所占用的内存空间依然如故，无法保证内存的回收。</p><p>如果需要空间动态缩小，可以考虑使用deque。如果vector，可以用swap()来帮助你释放内存。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>(Vec).<span class="built_in">swap</span>(Vec); <span class="comment">//将Vec的内存清除； </span></span><br><span class="line"><span class="built_in">vector</span>().<span class="built_in">swap</span>(Vec); <span class="comment">//清空Vec的内存；Copy to clipboardErrorCopied</span></span><br></pre></td></tr></tbody></table></figure><h4 id="12、容器内部删除一个元素"><a href="#12、容器内部删除一个元素" class="headerlink" title="12、容器内部删除一个元素"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=12%E3%80%81%E5%AE%B9%E5%99%A8%E5%86%85%E9%83%A8%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0">12、容器内部删除一个元素</a></h4><ol><li>顺序容器（序列式容器，比如vector、deque）</li></ol><p>erase迭代器不仅使所指向被删除的迭代器失效，而且使被删元素之后的所有迭代器失效(list除外)，所以不能使用erase(it++)的方式，但是erase的返回值是下一个有效迭代器；</p><p>It = c.erase(it);</p><ol start="2"><li>关联容器(关联式容器，比如map、set、multimap、multiset等)</li></ol><p>erase迭代器只是被删除元素的迭代器失效，但是返回值是void，所以要采用erase(it++)的方式删除迭代器；</p><p>c.erase(it++)</p><h4 id="13、STL迭代器如何实现"><a href="#13、STL迭代器如何实现" class="headerlink" title="13、STL迭代器如何实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=13%E3%80%81stl%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0">13、STL迭代器如何实现</a></h4><p>1、 迭代器是一种抽象的设计理念，通过迭代器可以在不了解容器内部原理的情况下遍历容器，除此之外，STL中迭代器一个最重要的作用就是作为容器与STL算法的粘合剂。</p><p>2、 迭代器的作用就是提供一个遍历容器内部所有元素的接口，因此迭代器内部必须保存一个与容器相关联的指针，然后重载各种运算操作来遍历，其中最重要的是*运算符与-&gt;运算符，以及++、–等可能需要重载的运算符重载。这和C++中的智能指针很像，智能指针也是将一个指针封装，然后通过引用计数或是其他方法完成自动释放内存的功能。</p><p>3、最常用的迭代器的相应型别有五种：value type、difference type、pointer、reference、iterator catagoly;</p><h4 id="14、map、set是怎么实现的，红黑树是怎么能够同时实现这两种容器？-为什么使用红黑树？"><a href="#14、map、set是怎么实现的，红黑树是怎么能够同时实现这两种容器？-为什么使用红黑树？" class="headerlink" title="14、map、set是怎么实现的，红黑树是怎么能够同时实现这两种容器？ 为什么使用红黑树？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=14%E3%80%81map%E3%80%81set%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E7%9A%84%EF%BC%8C%E7%BA%A2%E9%BB%91%E6%A0%91%E6%98%AF%E6%80%8E%E4%B9%88%E8%83%BD%E5%A4%9F%E5%90%8C%E6%97%B6%E5%AE%9E%E7%8E%B0%E8%BF%99%E4%B8%A4%E7%A7%8D%E5%AE%B9%E5%99%A8%EF%BC%9F-%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8%E7%BA%A2%E9%BB%91%E6%A0%91%EF%BC%9F">14、map、set是怎么实现的，红黑树是怎么能够同时实现这两种容器？ 为什么使用红黑树？</a></h4><ol><li><p>他们的底层都是以红黑树的结构实现，因此插入删除等操作都在O(logn时间内完成，因此可以完成高效的插入删除；</p></li><li><p>在这里我们定义了一个模版参数，如果它是key那么它就是set，如果它是map，那么它就是map；底层是红黑树，实现map的红黑树的节点数据类型是key+value，而实现set的节点数据类型是value</p></li><li><p>因为map和set要求是自动排序的，红黑树能够实现这一功能，而且时间复杂度比较低。</p></li></ol><h4 id="15、如何在共享内存上使用STL标准库？"><a href="#15、如何在共享内存上使用STL标准库？" class="headerlink" title="15、如何在共享内存上使用STL标准库？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=15%E3%80%81%E5%A6%82%E4%BD%95%E5%9C%A8%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E4%B8%8A%E4%BD%BF%E7%94%A8stl%E6%A0%87%E5%87%86%E5%BA%93%EF%BC%9F">15、如何在共享内存上使用STL标准库？</a></h4><ol><li>想像一下把STL容器，例如map, vector, list等等，放入共享内存中，IPC一旦有了这些强大的通用数据结构做辅助，无疑进程间通信的能力一下子强大了很多。</li></ol><p>我们没必要再为共享内存设计其他额外的数据结构，另外，STL的高度可扩展性将为IPC所驱使。STL容器被良好的封装，默认情况下有它们自己的内存管理方案。</p><p>当一个元素被插入到一个STL列表(list)中时，列表容器自动为其分配内存，保存数据。考虑到要将STL容器放到共享内存中，而容器却自己在堆上分配内存。</p><p>一个最笨拙的办法是在堆上构造STL容器，然后把容器复制到共享内存，并且确保所有容器的内部分配的内存指向共享内存中的相应区域，这基本是个不可能完成的任务。</p><ol start="2"><li>假设进程A在共享内存中放入了数个容器，进程B如何找到这些容器呢？</li></ol><p>一个方法就是进程A把容器放在共享内存中的确定地址上（fixed offsets），则进程B可以从该已知地址上获取容器。另外一个改进点的办法是，进程A先在共享内存某块确定地址上放置一个map容器，然后进程A再创建其他容器，然后给其取个名字和地址一并保存到这个map容器里。</p><p>进程B知道如何获取该保存了地址映射的map容器，然后同样再根据名字取得其他容器的地址。</p><h4 id="16、map插入方式有哪几种？"><a href="#16、map插入方式有哪几种？" class="headerlink" title="16、map插入方式有哪几种？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=16%E3%80%81map%E6%8F%92%E5%85%A5%E6%96%B9%E5%BC%8F%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%EF%BC%9F">16、map插入方式有哪几种？</a></h4><ol><li>用insert函数插入pair数据，</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapStudent.<span class="built_in">insert</span>(pair&lt;<span class="keyword">int</span>, string&gt;(<span class="number">1</span>, <span class="string">"student_one"</span>)); Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>用insert函数插入value_type数据</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapStudent.<span class="built_in">insert</span>(map&lt;<span class="keyword">int</span>, string&gt;::<span class="built_in">value_type</span> (<span class="number">1</span>, <span class="string">"student_one"</span>));Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>在insert函数中使用make_pair()函数</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapStudent.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(<span class="number">1</span>, <span class="string">"student_one"</span>)); Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>用数组方式插入数据</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapStudent[<span class="number">1</span>] = <span class="string">"student_one"</span>; Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><h4 id="17、STL中unordered-map-hash-map-和map的区别，hash-map如何解决冲突以及扩容"><a href="#17、STL中unordered-map-hash-map-和map的区别，hash-map如何解决冲突以及扩容" class="headerlink" title="17、STL中unordered_map(hash_map)和map的区别，hash_map如何解决冲突以及扩容"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=17%E3%80%81stl%E4%B8%ADunordered_maphash_map%E5%92%8Cmap%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%8Chash_map%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81%E4%BB%A5%E5%8F%8A%E6%89%A9%E5%AE%B9">17、STL中unordered_map(hash_map)和map的区别，hash_map如何解决冲突以及扩容</a></h4><ol><li><p>unordered_map和map类似，都是存储的key-value的值，可以通过key快速索引到value。不同的是unordered_map不会根据key的大小进行排序，</p></li><li><p>存储时是根据key的hash值判断元素是否相同，即unordered_map内部元素是无序的，而map中的元素是按照二叉搜索树存储，进行中序遍历会得到有序遍历。</p></li><li><p>所以使用时map的key需要定义operator&lt;。而unordered_map需要定义hash_value函数并且重载operator==。但是很多系统内置的数据类型都自带这些，</p></li><li><p>那么如果是自定义类型，那么就需要自己重载operator&lt;或者hash_value()了。</p></li><li><p>如果需要内部元素自动排序，使用map，不需要排序使用unordered_map</p></li><li><p>unordered_map的底层实现是hash_table;</p></li><li><p>hash_map底层使用的是hash_table，而hash_table使用的开链法进行冲突避免，所有hash_map采用开链法进行冲突解决。</p></li><li><p><strong>什么时候扩容：</strong>当向容器添加元素的时候，会判断当前容器的元素个数，如果大于等于阈值—即当前数组的长度乘以加载因子的值的时候，就要自动扩容啦。</p></li><li><p>**扩容(resize)**就是重新计算容量，向HashMap对象里不停的添加元素，而HashMap对象内部的数组无法装载更多的元素时，对象就需要扩大数组的长度，以便能装入更多的元素。</p></li></ol><h4 id="18、vector越界访问下标，map越界访问下标？vector删除元素时会不会释放空间？"><a href="#18、vector越界访问下标，map越界访问下标？vector删除元素时会不会释放空间？" class="headerlink" title="18、vector越界访问下标，map越界访问下标？vector删除元素时会不会释放空间？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=18%E3%80%81vector%E8%B6%8A%E7%95%8C%E8%AE%BF%E9%97%AE%E4%B8%8B%E6%A0%87%EF%BC%8Cmap%E8%B6%8A%E7%95%8C%E8%AE%BF%E9%97%AE%E4%B8%8B%E6%A0%87%EF%BC%9Fvector%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E6%97%B6%E4%BC%9A%E4%B8%8D%E4%BC%9A%E9%87%8A%E6%94%BE%E7%A9%BA%E9%97%B4%EF%BC%9F">18、vector越界访问下标，map越界访问下标？vector删除元素时会不会释放空间？</a></h4><ol><li><p>通过下标访问vector中的元素时会做边界检查，但该处的实现方式要看具体IDE，不同IDE的实现方式不一样，确保不可访问越界地址。</p></li><li><p>map的下标运算符[]的作用是：将key作为下标去执行查找，并返回相应的值；如果不存在这个key，就将一个具有该key和value的某人值插入这个map。</p></li><li><p>erase()函数，只能删除内容，不能改变容量大小;</p></li></ol><p>erase成员函数，它删除了itVect迭代器指向的元素，并且返回要被删除的itVect之后的迭代器，迭代器相当于一个智能指针;clear()函数，只能清空内容，不能改变容量大小;如果要想在删除内容的同时释放内存，那么你可以选择deque容器。</p><blockquote><p>update1:感谢微信好友“猿六学算法”指出错误，已修正！</p><p>update2:感谢微信好友“铁锤哥哥”勘误：“vector边界检查”-&gt; 具体看IDE的实现方式，但是不可取越界地址-2021.06.28</p></blockquote><h4 id="19、map中-与find的区别？"><a href="#19、map中-与find的区别？" class="headerlink" title="19、map中[]与find的区别？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=19%E3%80%81map%E4%B8%AD%E4%B8%8Efind%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F">19、map中[]与find的区别？</a></h4><ol><li><p>map的下标运算符[]的作用是：将关键码作为下标去执行查找，并返回对应的值；如果不存在这个关键码，就将一个具有该关键码和值类型的默认值的项插入这个map。</p></li><li><p>map的find函数：用关键码执行查找，找到了返回该位置的迭代器；如果不存在这个关键码，就返回尾迭代器。</p></li></ol><h4 id="20、-STL中list与queue之间的区别"><a href="#20、-STL中list与queue之间的区别" class="headerlink" title="20、 STL中list与queue之间的区别"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=20%E3%80%81-stl%E4%B8%ADlist%E4%B8%8Equeue%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB">20、 STL中list与queue之间的区别</a></h4><ol><li><p>list不再能够像vector一样以普通指针作为迭代器，因为其节点不保证在存储空间中连续存在；</p></li><li><p>list插入操作和结合才做都不会造成原有的list迭代器失效;</p></li><li><p>list不仅是一个双向链表，而且还是一个环状双向链表，所以它只需要一个指针；</p></li><li><p>list不像vector那样有可能在空间不足时做重新配置、数据移动的操作，所以插入前的所有迭代器在插入操作之后都仍然有效；</p></li><li><p>deque是一种双向开口的连续线性空间，所谓双向开口，意思是可以在头尾两端分别做元素的插入和删除操作；可以在头尾两端分别做元素的插入和删除操作；</p></li><li><p>deque和vector最大的差异，一在于deque允许常数时间内对起头端进行元素的插入或移除操作，二在于deque没有所谓容量概念，因为它是动态地以分段连续空间组合而成，随时可以增加一段新的空间并链接起来，deque没有所谓的空间保留功能。</p></li></ol><h4 id="21、STL中的allocator、deallocator"><a href="#21、STL中的allocator、deallocator" class="headerlink" title="21、STL中的allocator、deallocator"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=21%E3%80%81stl%E4%B8%AD%E7%9A%84allocator%E3%80%81deallocator">21、STL中的allocator、deallocator</a></h4><ol><li><p>第一级配置器直接使用malloc()、free()和relloc()，第二级配置器视情况采用不同的策略：当配置区块超过128bytes时，视之为足够大，便调用第一级配置器；当配置器区块小于128bytes时，为了降低额外负担，使用复杂的内存池整理方式，而不再用一级配置器；</p></li><li><p>第二级配置器主动将任何小额区块的内存需求量上调至8的倍数，并维护16个free-list，各自管理大小为8~128bytes的小额区块；</p></li><li><p>空间配置函数allocate()，首先判断区块大小，大于128就直接调用第一级配置器，小于128时就检查对应的free-list。如果free-list之内有可用区块，就直接拿来用，如果没有可用区块，就将区块大小调整至8的倍数，然后调用refill()，为free-list重新分配空间；</p></li><li><p>空间释放函数deallocate()，该函数首先判断区块大小，大于128bytes时，直接调用一级配置器，小于128bytes就找到对应的free-list然后释放内存。</p></li></ol><h4 id="22、STL中hash-map扩容发生什么？"><a href="#22、STL中hash-map扩容发生什么？" class="headerlink" title="22、STL中hash_map扩容发生什么？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=22%E3%80%81stl%E4%B8%ADhash_map%E6%89%A9%E5%AE%B9%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88%EF%BC%9F">22、STL中hash_map扩容发生什么？</a></h4><ol><li><p>hash table表格内的元素称为桶（bucket),而由桶所链接的元素称为节点（node),其中存入桶元素的容器为stl本身很重要的一种序列式容器——vector容器。之所以选择vector为存放桶元素的基础容器，主要是因为vector容器本身具有动态扩容能力，无需人工干预。</p></li><li><p>向前操作：首先尝试从目前所指的节点出发，前进一个位置（节点），由于节点被安置于list内，所以利用节点的next指针即可轻易完成前进操作，如果目前正巧是list的尾端，就跳至下一个bucket身上，那正是指向下一个list的头部节点。</p></li></ol><h4 id="23、常见容器性质总结？"><a href="#23、常见容器性质总结？" class="headerlink" title="23、常见容器性质总结？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=23%E3%80%81%E5%B8%B8%E8%A7%81%E5%AE%B9%E5%99%A8%E6%80%A7%E8%B4%A8%E6%80%BB%E7%BB%93%EF%BC%9F">23、常见容器性质总结？</a></h4><p>1.vector 底层数据结构为数组 ，支持快速随机访问</p><p>2.list 底层数据结构为双向链表，支持快速增删</p><p>3.deque 底层数据结构为一个中央控制器和多个缓冲区，详细见STL源码剖析P146，支持首尾（中间不能）快速增删，也支持随机访问</p><p>deque是一个双端队列(double-ended queue)，也是在堆中保存内容的.它的保存形式如下:</p><p>[堆1] –&gt; [堆2] –&gt;[堆3] –&gt; …</p><p>每个堆保存好几个元素,然后堆和堆之间有指针指向,看起来像是list和vector的结合品.</p><p>4.stack 底层一般用list或deque实现，封闭头部即可，不用vector的原因应该是容量大小有限制，扩容耗时</p><p>5.queue 底层一般用list或deque实现，封闭头部即可，不用vector的原因应该是容量大小有限制，扩容耗时（stack和queue其实是适配器,而不叫容器，因为是对容器的再封装）</p><p>6.priority_queue 的底层数据结构一般为vector为底层容器，堆heap为处理规则来管理底层容器实现</p><p>7.set 底层数据结构为红黑树，有序，不重复</p><p>8.multiset 底层数据结构为红黑树，有序，可重复</p><p>9.map 底层数据结构为红黑树，有序，不重复</p><p>10.multimap 底层数据结构为红黑树，有序，可重复</p><p>11.unordered_set 底层数据结构为hash表，无序，不重复</p><p>12.unordered_multiset 底层数据结构为hash表，无序，可重复</p><p>13.unordered_map 底层数据结构为hash表，无序，不重复</p><p>14.unordered_multimap 底层数据结构为hash表，无序，可重复</p><h4 id="24、vector的增加删除都是怎么做的？为什么是1-5或者是2倍？"><a href="#24、vector的增加删除都是怎么做的？为什么是1-5或者是2倍？" class="headerlink" title="24、vector的增加删除都是怎么做的？为什么是1.5或者是2倍？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=24%E3%80%81vector%E7%9A%84%E5%A2%9E%E5%8A%A0%E5%88%A0%E9%99%A4%E9%83%BD%E6%98%AF%E6%80%8E%E4%B9%88%E5%81%9A%E7%9A%84%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF15%E6%88%96%E8%80%85%E6%98%AF2%E5%80%8D%EF%BC%9F">24、vector的增加删除都是怎么做的？为什么是1.5或者是2倍？</a></h4><ol><li><p>新增元素：vector通过一个连续的数组存放元素，如果集合已满，在新增数据的时候，就要分配一块更大的内存，将原来的数据复制过来，释放之前的内存，在插入新增的元素；</p></li><li><p>对vector的任何操作，一旦引起空间重新配置，指向原vector的所有迭代器就都失效了 ；</p></li><li><p>初始时刻vector的capacity为0，塞入第一个元素后capacity增加为1；</p></li><li><p>不同的编译器实现的扩容方式不一样，VS2015中以1.5倍扩容，GCC以2倍扩容。</p></li></ol><p>对比可以发现采用采用成倍方式扩容，可以保证常数的时间复杂度，而增加指定大小的容量只能达到O(n)的时间复杂度，因此，使用成倍的方式扩容。</p><ol><li><p>考虑可能产生的堆空间浪费，成倍增长倍数不能太大，使用较为广泛的扩容方式有两种，以2二倍的方式扩容，或者以1.5倍的方式扩容。</p></li><li><p>以2倍的方式扩容，导致下一次申请的内存必然大于之前分配内存的总和，导致之前分配的内存不能再被使用，所以最好倍增长因子设置为(1,2)之间：</p></li><li><p>向量容器vector的成员函数pop_back()可以删除最后一个元素.</p></li><li><p>而函数erase()可以删除由一个iterator指出的元素，也可以删除一个指定范围的元素。</p></li><li><p>还可以采用通用算法remove()来删除vector容器中的元素.</p></li><li><p>不同的是：采用remove一般情况下不会改变容器的大小，而pop_back()与erase()等成员函数会改变容器的大小。</p></li></ol><h4 id="25、说一下STL每种容器对应的迭代器"><a href="#25、说一下STL每种容器对应的迭代器" class="headerlink" title="25、说一下STL每种容器对应的迭代器"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=25%E3%80%81%E8%AF%B4%E4%B8%80%E4%B8%8Bstl%E6%AF%8F%E7%A7%8D%E5%AE%B9%E5%99%A8%E5%AF%B9%E5%BA%94%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8">25、说一下STL每种容器对应的迭代器</a></h4><table><thead><tr><th align="left">容器</th><th align="left">迭代器</th></tr></thead><tbody><tr><td align="left">vector、deque</td><td align="left">随机访问迭代器</td></tr><tr><td align="left">stack、queue、priority_queue</td><td align="left">无</td></tr><tr><td align="left">list、(multi)set/map</td><td align="left">双向迭代器</td></tr><tr><td align="left">unordered_(multi)set/map、forward_list</td><td align="left">前向迭代器</td></tr></tbody></table><h4 id="26、STL中迭代器失效的情况有哪些？"><a href="#26、STL中迭代器失效的情况有哪些？" class="headerlink" title="26、STL中迭代器失效的情况有哪些？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=26%E3%80%81stl%E4%B8%AD%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%A4%B1%E6%95%88%E7%9A%84%E6%83%85%E5%86%B5%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F">26、STL中迭代器失效的情况有哪些？</a></h4><p>以vector为例：</p><p><strong>插入元素：</strong></p><p>1、尾后插入：size &lt; capacity时，首迭代器不失效尾迭代失效（未重新分配空间），size == capacity时，所有迭代器均失效（需要重新分配空间）。</p><p>2、中间插入：中间插入：size &lt; capacity时，首迭代器不失效但插入元素之后所有迭代器失效，size == capacity时，所有迭代器均失效。</p><p><strong>删除元素：</strong></p><p>尾后删除：只有尾迭代失效。</p><p>中间删除：删除位置之后所有迭代失效。</p><p>deque 和 vector 的情况类似,</p><p>而list双向链表每一个节点内存不连续, 删除节点仅当前迭代器失效,erase返回下一个有效迭代器;</p><p>map/set等关联容器底层是红黑树删除节点不会影响其他节点的迭代器, 使用递增方法获取下一个迭代器 mmp.erase(iter++);</p><p>unordered_(hash) 迭代器意义不大, rehash之后, 迭代器应该也是全部失效.</p><h4 id="27、STL中vector的实现"><a href="#27、STL中vector的实现" class="headerlink" title="27、STL中vector的实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=27%E3%80%81stl%E4%B8%ADvector%E7%9A%84%E5%AE%9E%E7%8E%B0">27、STL中vector的实现</a></h4><p>vector是一种序列式容器，其数据安排以及操作方式与array非常类似，两者的唯一差别就是对于空间运用的灵活性，众所周知，array占用的是静态空间，一旦配置了就不可以改变大小，如果遇到空间不足的情况还要自行创建更大的空间，并手动将数据拷贝到新的空间中，再把原来的空间释放。vector则使用灵活的动态空间配置，维护一块<strong>连续的线性空间</strong>，在空间不足时，可以自动扩展空间容纳新元素，做到按需供给。其在扩充空间的过程中仍然需要经历：<strong>重新配置空间，移动数据，释放原空间</strong>等操作。这里需要说明一下动态扩容的规则：以原大小的两倍配置另外一块较大的空间（或者旧长度+新增元素的个数），源码：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> size_type len  = old_size + <span class="built_in">max</span>(old_size, n);Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>Vector扩容倍数与平台有关，在Win + VS 下是 1.5倍，在 Linux + GCC 下是 2 倍</p><p>测试代码：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//在Linux + GCC下</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">2</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; res.<span class="built_in">capacity</span>() &lt;&lt;endl; <span class="comment">//2</span></span><br><span class="line">    res.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; res.<span class="built_in">capacity</span>() &lt;&lt;endl;<span class="comment">//4</span></span><br><span class="line">    res.<span class="built_in">push_back</span>(<span class="number">2</span>);</span><br><span class="line">    res.<span class="built_in">push_back</span>(<span class="number">3</span>);</span><br><span class="line">    cout &lt;&lt; res.<span class="built_in">capacity</span>() &lt;&lt;endl;<span class="comment">//8</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//在 win 10 + VS2019下</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">2</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; res.<span class="built_in">capacity</span>() &lt;&lt;endl; <span class="comment">//2</span></span><br><span class="line">    res.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; res.<span class="built_in">capacity</span>() &lt;&lt;endl;<span class="comment">//3</span></span><br><span class="line">    res.<span class="built_in">push_back</span>(<span class="number">2</span>);</span><br><span class="line">    res.<span class="built_in">push_back</span>(<span class="number">3</span>);</span><br><span class="line">    cout &lt;&lt; res.<span class="built_in">capacity</span>() &lt;&lt;endl;<span class="comment">//6</span></span><br><span class="line"></span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>运行上述代码，一开始配置了一块长度为2的空间，接下来插入一个数据，长度变为原来的两倍，为4，此时已占用的长度为3，再继续两个数据，此时长度变为8，可以清晰的看到空间的变化过程</p><p>需要注意的是，频繁对vector调用push_back()对性能是有影响的，这是因为每插入一个元素，如果空间够用的话还能直接插入，若空间不够用，则需要重新配置空间，移动数据，释放原空间等操作，对程序性能会造成一定的影响</p><h4 id="28、STL中slist的实现"><a href="#28、STL中slist的实现" class="headerlink" title="28、STL中slist的实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=28%E3%80%81stl%E4%B8%ADslist%E7%9A%84%E5%AE%9E%E7%8E%B0">28、STL中slist的实现</a></h4><p>list是双向链表，而slist（single linked list）是单向链表，它们的主要区别在于：前者的迭代器是双向的Bidirectional iterator，后者的迭代器属于单向的Forward iterator。虽然slist的很多功能不如list灵活，但是其所耗用的空间更小，操作更快。</p><p>根据STL的习惯，插入操作会将新元素插入到指定位置之前，而非之后，然而slist是不能回头的，只能往后走，因此在slist的其他位置插入或者移除元素是十分不明智的，但是在slist开头却是可取的，slist特别提供了insert_after()和erase_after供灵活应用。考虑到效率问题，slist只提供push_front()操作，元素插入到slist后，存储的次序和输入的次序是相反的</p><p>slist的单向迭代器如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1566227016872.png" alt="img"></p><p>slist默认采用alloc空间配置器配置节点的空间，其数据结构主要代码如下</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="keyword">class</span> <span class="title">Allco</span> =</span> alloc&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">slist</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">static</span> list_node* <span class="title">create_node</span><span class="params">(<span class="keyword">const</span> value_type&amp; x)</span></span>{}<span class="comment">//配置空间、构造元素</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">destroy_node</span><span class="params">(list_node* node)</span></span>{}<span class="comment">//析构函数、释放空间</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    list_node_base head; <span class="comment">//头部</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">iterator <span class="title">begin</span><span class="params">()</span></span>{}</span><br><span class="line">    <span class="function">iterator <span class="title">end</span><span class="params">()</span></span>{}</span><br><span class="line">    <span class="function">size_type <span class="title">size</span><span class="params">()</span></span>{}</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span></span>{}</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(slist&amp; L)</span></span>{}<span class="comment">//交换两个slist，只需要换head即可</span></span><br><span class="line">    <span class="function">reference <span class="title">front</span><span class="params">()</span></span>{} <span class="comment">//取头部元素</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push_front</span><span class="params">(<span class="keyword">const</span> value&amp; x)</span></span>{}<span class="comment">//头部插入元素</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop_front</span><span class="params">()</span></span>{}<span class="comment">//从头部取走元素</span></span><br><span class="line">    ...</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>举个例子：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;forward_list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    forward_list&lt;<span class="keyword">int</span>&gt; fl;</span><br><span class="line">    fl.<span class="built_in">push_front</span>(<span class="number">1</span>);</span><br><span class="line">    fl.<span class="built_in">push_front</span>(<span class="number">3</span>);</span><br><span class="line">    fl.<span class="built_in">push_front</span>(<span class="number">2</span>);</span><br><span class="line">    fl.<span class="built_in">push_front</span>(<span class="number">6</span>);</span><br><span class="line">    fl.<span class="built_in">push_front</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    forward_list&lt;<span class="keyword">int</span>&gt;::iterator ite1 = fl.<span class="built_in">begin</span>();</span><br><span class="line">    forward_list&lt;<span class="keyword">int</span>&gt;::iterator ite2 = fl.<span class="built_in">end</span>();</span><br><span class="line">    <span class="keyword">for</span>(;ite1 != ite2; ++ite1)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; *ite1 &lt;&lt;<span class="string">" "</span>; <span class="comment">// 5 6 2 3 1</span></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    ite1 = <span class="built_in">find</span>(fl.<span class="built_in">begin</span>(), fl.<span class="built_in">end</span>(), <span class="number">2</span>); <span class="comment">//寻找2的位置</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ite1 != ite2)</span><br><span class="line">        fl.<span class="built_in">insert_after</span>(ite1, <span class="number">99</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it : fl)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; it &lt;&lt; <span class="string">" "</span>;  <span class="comment">//5 6 2 99 3 1</span></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    ite1 = <span class="built_in">find</span>(fl.<span class="built_in">begin</span>(), fl.<span class="built_in">end</span>(), <span class="number">6</span>); <span class="comment">//寻找6的位置</span></span><br><span class="line">    <span class="keyword">if</span> (ite1 != ite2)</span><br><span class="line">        fl.<span class="built_in">erase_after</span>(ite1);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it : fl)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; it &lt;&lt; <span class="string">" "</span>;  <span class="comment">//5 6 99 3 1</span></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; endl;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>需要注意的是C++标准委员会没有采用slist的名称，forward_list在C++ 11中出现，它与slist的区别是没有size()方法。</p><h4 id="29、STL中list的实现"><a href="#29、STL中list的实现" class="headerlink" title="29、STL中list的实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=29%E3%80%81stl%E4%B8%ADlist%E7%9A%84%E5%AE%9E%E7%8E%B0">29、STL中list的实现</a></h4><p>相比于vector的连续线型空间，list显得复杂许多，但是它的好处在于插入或删除都只作用于一个元素空间，因此list对空间的运用是十分精准的，对任何位置元素的插入和删除都是常数时间。list不能保证节点在存储空间中连续存储，也拥有迭代器，迭代器的“++”、“–”操作对于的是指针的操作，list提供的迭代器类型是双向迭代器：Bidirectional iterators。</p><p>list节点的结构见如下源码：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">list_node</span>{</span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">void</span>* void_pointer;</span><br><span class="line">    void_pointer prev;</span><br><span class="line">    void_pointer next;</span><br><span class="line">    T data;</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>从源码可看出list显然是一个双向链表。list与vector的另一个区别是，在插入和接合操作之后，都不会造成原迭代器失效，而vector可能因为空间重新配置导致迭代器失效。</p><p>此外list也是一个环形链表，因此只要一个指针便能完整表现整个链表。list中node节点指针始终指向尾端的一个空白节点，因此是一种“前闭后开”的区间结构</p><p>list的空间管理默认采用alloc作为空间配置器，为了方便的以节点大小为配置单位，还定义一个list_node_allocator函数可一次性配置多个节点空间</p><p>由于list的双向特性，其支持在头部（front)和尾部（back)两个方向进行push和pop操作，当然还支持erase，splice，sort，merge，reverse，sort等操作，这里不再详细阐述。</p><h4 id="30、STL中的deque的实现"><a href="#30、STL中的deque的实现" class="headerlink" title="30、STL中的deque的实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=30%E3%80%81stl%E4%B8%AD%E7%9A%84deque%E7%9A%84%E5%AE%9E%E7%8E%B0">30、STL中的deque的实现</a></h4><p>vector是单向开口（尾部）的连续线性空间，deque则是一种双向开口的连续线性空间，虽然vector也可以在头尾进行元素操作，但是其头部操作的效率十分低下（主要是涉及到整体的移动）</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1565876257552.png" alt="img"></p><p>deque和vector的最大差异一个是deque运行在常数时间内对头端进行元素操作，二是deque没有容量的概念，它是动态地以分段连续空间组合而成，可以随时增加一段新的空间并链接起来</p><p>deque虽然也提供随机访问的迭代器，但是其迭代器并不是普通的指针，其复杂程度比vector高很多，因此除非必要，否则一般使用vector而非deque。如果需要对deque排序，可以先将deque中的元素复制到vector中，利用sort对vector排序，再将结果复制回deque</p><p>deque由一段一段的定量连续空间组成，一旦需要增加新的空间，只要配置一段定量连续空间拼接在头部或尾部即可，因此deque的最大任务是如何维护这个整体的连续性</p><p>deque的数据结构如下：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">deque</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="keyword">typedef</span> pointer* map_pointer;<span class="comment">//指向map指针的指针</span></span><br><span class="line">    map_pointer map;<span class="comment">//指向map</span></span><br><span class="line">    size_type map_size;<span class="comment">//map的大小</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ...</span><br><span class="line">    <span class="function">iterator <span class="title">begin</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">itertator <span class="title">end</span><span class="params">()</span></span>;</span><br><span class="line">    ...</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1565876324016.png" alt="img"></p><p>deque内部有一个指针指向map，map是一小块连续空间，其中的每个元素称为一个节点，node，每个node都是一个指针，指向另一段较大的连续空间，称为缓冲区，这里就是deque中实际存放数据的区域，默认大小512bytes。整体结构如上图所示。</p><p>deque的迭代器数据结构如下：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">deque_iterator</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    ...</span><br><span class="line">    T* cur;<span class="comment">//迭代器所指缓冲区当前的元素</span></span><br><span class="line">    T* first;<span class="comment">//迭代器所指缓冲区第一个元素</span></span><br><span class="line">    T* last;<span class="comment">//迭代器所指缓冲区最后一个元素</span></span><br><span class="line">    map_pointer node;<span class="comment">//指向map中的node</span></span><br><span class="line">    ...</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>从deque的迭代器数据结构可以看出，为了保持与容器联结，迭代器主要包含上述4个元素</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1565877658970.png" alt="img"></p><p>deque迭代器的“++”、“–”操作是远比vector迭代器繁琐，其主要工作在于缓冲区边界，如何从当前缓冲区跳到另一个缓冲区，当然deque内部在插入元素时，如果map中node数量全部使用完，且node指向的缓冲区也没有多余的空间，这时会配置新的map（2倍于当前+2的数量）来容纳更多的node，也就是可以指向更多的缓冲区。在deque删除元素时，也提供了元素的析构和空闲缓冲区空间的释放等机制。</p><h4 id="31、STL中stack和queue的实现"><a href="#31、STL中stack和queue的实现" class="headerlink" title="31、STL中stack和queue的实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=31%E3%80%81stl%E4%B8%ADstack%E5%92%8Cqueue%E7%9A%84%E5%AE%9E%E7%8E%B0">31、STL中stack和queue的实现</a></h4><p><strong>stack</strong></p><p>stack（栈）是一种先进后出（First In Last Out）的数据结构，只有一个入口和出口，那就是栈顶，除了获取栈顶元素外，没有其他方法可以获取到内部的其他元素，其结构图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1565957994483.png" alt="img"></p><p>stack这种单向开口的数据结构很容易由<strong>双向开口的deque和list</strong>形成，只需要根据stack的性质对应移除某些接口即可实现，stack的源码如下：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="keyword">class</span> <span class="title">Sequence</span> =</span> deque&lt;T&gt; &gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">stack</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    Sequence c;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span></span>{<span class="keyword">return</span> c.<span class="built_in">empty</span>();}</span><br><span class="line">    <span class="function">size_type <span class="title">size</span><span class="params">()</span> <span class="keyword">const</span></span>{<span class="keyword">return</span> c.<span class="built_in">size</span>();}</span><br><span class="line">    <span class="function">reference <span class="title">top</span><span class="params">()</span> <span class="keyword">const</span> </span>{<span class="keyword">return</span> c.<span class="built_in">back</span>();}</span><br><span class="line">    <span class="function">const_reference <span class="title">top</span><span class="params">()</span> <span class="keyword">const</span></span>{<span class="keyword">return</span> c.<span class="built_in">back</span>();}</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">const</span> value_type&amp; x)</span></span>{c.<span class="built_in">push_back</span>(x);}</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span>{c.<span class="built_in">pop_back</span>();}</span><br><span class="line">};Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>从stack的数据结构可以看出，其所有操作都是围绕Sequence完成，而Sequence默认是deque数据结构。stack这种“修改某种接口，形成另一种风貌”的行为，成为adapter(配接器)。常将其归类为container adapter而非container</p><p>stack除了默认使用deque作为其底层容器之外，也可以使用双向开口的list，只需要在初始化stack时，将list作为第二个参数即可。由于stack只能操作顶端的元素，因此其内部元素无法被访问，也不提供迭代器。</p><p><strong>queue</strong></p><p>queue（队列）是一种先进先出（First In First Out）的数据结构，只有一个入口和一个出口，分别位于最底端和最顶端，出口元素外，没有其他方法可以获取到内部的其他元素，其结构图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1565958318457.png" alt="img"></p><p>类似的，queue这种“先进先出”的数据结构很容易由双向开口的deque和list形成，只需要根据queue的性质对应移除某些接口即可实现，queue的源码如下：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="keyword">class</span> <span class="title">Sequence</span> =</span> deque&lt;T&gt; &gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">queue</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    Sequence c;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span></span>{<span class="keyword">return</span> c.<span class="built_in">empty</span>();}</span><br><span class="line">    <span class="function">size_type <span class="title">size</span><span class="params">()</span> <span class="keyword">const</span></span>{<span class="keyword">return</span> c.<span class="built_in">size</span>();}</span><br><span class="line">    <span class="function">reference <span class="title">front</span><span class="params">()</span> <span class="keyword">const</span> </span>{<span class="keyword">return</span> c.<span class="built_in">front</span>();}</span><br><span class="line">    <span class="function">const_reference <span class="title">front</span><span class="params">()</span> <span class="keyword">const</span></span>{<span class="keyword">return</span> c.<span class="built_in">front</span>();}</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">const</span> value_type&amp; x)</span></span>{c.<span class="built_in">push_back</span>(x);}</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span>{c.<span class="built_in">pop_front</span>();}</span><br><span class="line">};Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>从queue的数据结构可以看出，其所有操作都也都是是围绕Sequence完成，Sequence默认也是deque数据结构。queue也是一类container adapter。</p><p>同样，queue也可以使用list作为底层容器，不具有遍历功能，没有迭代器。</p><h4 id="32、STL中的heap的实现"><a href="#32、STL中的heap的实现" class="headerlink" title="32、STL中的heap的实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=32%E3%80%81stl%E4%B8%AD%E7%9A%84heap%E7%9A%84%E5%AE%9E%E7%8E%B0">32、STL中的heap的实现</a></h4><p>heap（堆）并不是STL的容器组件，是priority queue（优先队列）的底层实现机制，因为binary max heap（大根堆）总是最大值位于堆的根部，优先级最高。</p><p>binary heap本质是一种complete binary tree（完全二叉树），整棵binary tree除了最底层的叶节点之外，都是填满的，但是叶节点从左到右不会出现空隙，如下图所示就是一颗完全二叉树</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1566039990260.png" alt="img"></p><p>完全二叉树内没有任何节点漏洞，是非常紧凑的，这样的一个好处是可以使用array来存储所有的节点，因为当其中某个节点位于$i$处，其左节点必定位于$2i$处，右节点位于$2i+1$处，父节点位于$i/2$（向下取整）处。这种以array表示tree的方式称为隐式表述法。</p><p>因此我们可以使用一个array和一组heap算法来实现max heap（每个节点的值大于等于其子节点的值）和min heap（每个节点的值小于等于其子节点的值）。由于array不能动态的改变空间大小，用vector代替array是一个不错的选择。</p><p>那heap算法有哪些？常见有的插入、弹出、排序和构造算法，下面一一进行描述。</p><p><strong>push_heap插入算法</strong></p><p>由于完全二叉树的性质，新插入的元素一定是位于树的最底层作为叶子节点，并填补由左至右的第一个空格。事实上，在刚执行插入操作时，新元素位于底层vector的end()处，之后是一个称为percolate up（上溯）的过程，举个例子如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1566040870063.png" alt="img"></p><p>新元素50在插入堆中后，先放在vector的end()存着，之后执行上溯过程，调整其根结点的位置，以便满足max heap的性质，如果了解大根堆的话，这个原理跟大根堆的调整过程是一样的。</p><p><strong>pop_heap算法</strong></p><p>heap的pop操作实际弹出的是根节点吗，但在heap内部执行pop_heap时，只是将其移动到vector的最后位置，然后再为这个被挤走的元素找到一个合适的安放位置，使整颗树满足完全二叉树的条件。这个被挤掉的元素首先会与根结点的两个子节点比较，并与较大的子节点更换位置，如此一直往下，直到这个被挤掉的元素大于左右两个子节点，或者下放到叶节点为止，这个过程称为percolate down（下溯）。举个例子：</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102//1566041421056.png" alt="img"></p><p>根节点68被pop之后，移到了vector的最底部，将24挤出，24被迫从根节点开始与其子节点进行比较，直到找到合适的位置安身，需要注意的是pop之后元素并没有被移走，如果要将其移走，可以使用pop_back()。</p><p><strong>sort算法</strong></p><p>一言以蔽之，因为pop_heap可以将当前heap中的最大值置于底层容器vector的末尾，heap范围减1，那么不断的执行pop_heap直到树为空，即可得到一个递增序列。</p><p><strong>make_heap算法</strong></p><p>将一段数据转化为heap，一个一个数据插入，调用上面说的两种percolate算法即可。</p><p>代码实测：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; v = { <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> };</span><br><span class="line">    <span class="built_in">make_heap</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>()); <span class="comment">//以vector为底层容器</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : v)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">" "</span>; <span class="comment">// 6 4 5 3 1 0 2</span></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">7</span>);</span><br><span class="line">    <span class="built_in">push_heap</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : v)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">" "</span>; <span class="comment">// 7 6 5 4 1 0 2 3</span></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">pop_heap</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    cout &lt;&lt; v.<span class="built_in">back</span>() &lt;&lt; endl; <span class="comment">// 7 </span></span><br><span class="line">    v.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : v)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">" "</span>; <span class="comment">// 6 4 5 3 1 0 2</span></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">sort_heap</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : v)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">" "</span>; <span class="comment">// 0 1 2 3 4 5 6</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><h4 id="33、STL中的priority-queue的实现"><a href="#33、STL中的priority-queue的实现" class="headerlink" title="33、STL中的priority_queue的实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=33%E3%80%81stl%E4%B8%AD%E7%9A%84priority_queue%E7%9A%84%E5%AE%9E%E7%8E%B0">33、STL中的priority_queue的实现</a></h4><p>priority_queue，优先队列，是一个拥有权值观念的queue，它跟queue一样是顶部入口，底部出口，在插入元素时，元素并非按照插入次序排列，它会自动根据权值（通常是元素的实值）排列，权值最高，排在最前面，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1566126001158.png" alt="img"></p><p>默认情况下，priority_queue使用一个max-heap完成，底层容器使用的是一般为vector为底层容器，堆heap为处理规则来管理底层容器实现 。priority_queue的这种实现机制导致其不被归为容器，而是一种容器配接器。关键的源码如下：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>, <span class="keyword">class</span> <span class="title">Squence</span> =</span> vector&lt;T&gt;, </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Compare</span> =</span> less&lt;<span class="keyword">typename</span> Sequence::value_tyoe&gt; &gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">priority_queue</span>{</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    Sequence c; <span class="comment">// 底层容器</span></span><br><span class="line">    Compare comp; <span class="comment">// 元素大小比较标准</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span> <span class="keyword">const</span> </span>{<span class="keyword">return</span> c.<span class="built_in">empty</span>();}</span><br><span class="line">    <span class="function">size_type <span class="title">size</span><span class="params">()</span> <span class="keyword">const</span> </span>{<span class="keyword">return</span> c.<span class="built_in">size</span>();}</span><br><span class="line">    <span class="function">const_reference <span class="title">top</span><span class="params">()</span> <span class="keyword">const</span> </span>{<span class="keyword">return</span> c.<span class="built_in">front</span>()}</span><br><span class="line">    <span class="keyword">void</span> <span class="built_in">push</span>(<span class="keyword">const</span> value_type&amp; x)</span><br><span class="line">    {</span><br><span class="line">        c.<span class="built_in">push_heap</span>(x);</span><br><span class="line">        <span class="built_in">push_heap</span>(c.<span class="built_in">begin</span>(), c.<span class="built_in">end</span>(),comp);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="built_in">pop_heap</span>(c.<span class="built_in">begin</span>(), c.<span class="built_in">end</span>(),comp);</span><br><span class="line">        c.<span class="built_in">pop_back</span>();</span><br><span class="line">    }</span><br><span class="line">};Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>priority_queue的所有元素，进出都有一定的规则，只有queue顶端的元素（权值最高者），才有机会被外界取用，它没有遍历功能，也不提供迭代器</p><p>举个例子：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> ia[<span class="number">9</span>] = {<span class="number">0</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">7</span> };</span><br><span class="line">    <span class="function">priority_queue&lt;<span class="keyword">int</span>&gt; <span class="title">pq</span><span class="params">(ia, ia + <span class="number">9</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; pq.<span class="built_in">size</span>() &lt;&lt;endl;  <span class="comment">// 9</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pq.<span class="built_in">size</span>(); i++)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; pq.<span class="built_in">top</span>() &lt;&lt; <span class="string">" "</span>; <span class="comment">// 8 8 8 8 8 8 8 8 8</span></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">while</span> (!pq.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; pq.<span class="built_in">top</span>() &lt;&lt; <span class="string">' '</span>;<span class="comment">// 8 7 6 5 4 3 2 1 0</span></span><br><span class="line">        pq.<span class="built_in">pop</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><h4 id="34、STL中set的实现？"><a href="#34、STL中set的实现？" class="headerlink" title="34、STL中set的实现？"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=34%E3%80%81stl%E4%B8%ADset%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%9F">34、STL中set的实现？</a></h4><p>STL中的容器可分为序列式容器（sequence）和关联式容器（associative），set属于关联式容器。</p><p>set的特性是，所有元素都会根据元素的值自动被排序（默认升序），set元素的键值就是实值，实值就是键值，set不允许有两个相同的键值</p><p>set不允许迭代器修改元素的值，其迭代器是一种constance iterators</p><p>标准的STL set以RB-tree（红黑树）作为底层机制，几乎所有的set操作行为都是转调用RB-tree的操作行为，这里补充一下红黑树的特性：</p><ul><li>每个节点不是红色就是黑色</li><li>根结点为黑色</li><li>如果节点为红色，其子节点必为黑</li><li>任一节点至（NULL）树尾端的任何路径，所含的黑节点数量必相同</li></ul><p>关于红黑树的具体操作过程，比较复杂读者可以翻阅《算法导论》详细了解。</p><p>举个例子：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> ia[<span class="number">5</span>] = { <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> };</span><br><span class="line">    <span class="function">set&lt;<span class="keyword">int</span>&gt; <span class="title">s</span><span class="params">(ia, ia + <span class="number">5</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">// 5</span></span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">count</span>(<span class="number">3</span>) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">count</span>(<span class="number">10</span>) &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="number">3</span>); <span class="comment">//再插入一个3</span></span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">// 5</span></span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">count</span>(<span class="number">3</span>) &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">    s.<span class="built_in">erase</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line">    set&lt;<span class="keyword">int</span>&gt;::iterator b = s.<span class="built_in">begin</span>();</span><br><span class="line">    set&lt;<span class="keyword">int</span>&gt;::iterator e = s.<span class="built_in">end</span>();</span><br><span class="line">    <span class="keyword">for</span> (; b != e; ++b)</span><br><span class="line">        cout &lt;&lt; *b &lt;&lt; <span class="string">" "</span>; <span class="comment">// 2 3 4 5</span></span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    b = <span class="built_in">find</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">if</span> (b != s.<span class="built_in">end</span>())</span><br><span class="line">        cout &lt;&lt; <span class="string">"5 found"</span> &lt;&lt; endl; <span class="comment">// 5 found</span></span><br><span class="line"></span><br><span class="line">    b = s.<span class="built_in">find</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (b != s.<span class="built_in">end</span>())</span><br><span class="line">        cout &lt;&lt; <span class="string">"2 found"</span> &lt;&lt; endl; <span class="comment">// 2 found</span></span><br><span class="line"></span><br><span class="line">    b = s.<span class="built_in">find</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (b == s.<span class="built_in">end</span>())</span><br><span class="line">        cout &lt;&lt; <span class="string">"1 not found"</span> &lt;&lt; endl; <span class="comment">// 1 not found</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>关联式容器尽量使用其自身提供的find()函数查找指定的元素，效率更高，因为STL提供的find()函数是一种顺序搜索算法。</p><h4 id="35、STL中map的实现"><a href="#35、STL中map的实现" class="headerlink" title="35、STL中map的实现"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=35%E3%80%81stl%E4%B8%ADmap%E7%9A%84%E5%AE%9E%E7%8E%B0">35、STL中map的实现</a></h4><p>map的特性是所有元素会根据键值进行自动排序。map中所有的元素都是pair，拥有键值(key)和实值(value)两个部分，并且不允许元素有相同的key</p><p>一旦map的key确定了，那么是无法修改的，但是可以修改这个key对应的value，因此map的迭代器既不是constant iterator，也不是mutable iterator</p><p>标准STL map的底层机制是RB-tree（红黑树），另一种以hash table为底层机制实现的称为hash_map。map的架构如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/forthespada/mediaImage1@1.6.4.2/202102/1566380621064.png" alt="img"></p><p>map的在构造时缺省采用递增排序key，也使用alloc配置器配置空间大小，需要注意的是在插入元素时，调用的是红黑树中的insert_unique()方法，而非insert_euqal()（multimap使用）</p><p>举个例子：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    map&lt;string, <span class="keyword">int</span>&gt; maps;</span><br><span class="line">    <span class="comment">//插入若干元素</span></span><br><span class="line">    maps[<span class="string">"jack"</span>] = <span class="number">1</span>;</span><br><span class="line">    maps[<span class="string">"jane"</span>] = <span class="number">2</span>;</span><br><span class="line">    maps[<span class="string">"july"</span>] = <span class="number">3</span>;</span><br><span class="line">    <span class="comment">//以pair形式插入</span></span><br><span class="line">    <span class="function">pair&lt;string, <span class="keyword">int</span>&gt; <span class="title">p</span><span class="params">(<span class="string">"david"</span>, <span class="number">4</span>)</span></span>;</span><br><span class="line">    maps.<span class="built_in">insert</span>(p);</span><br><span class="line">    <span class="comment">//迭代输出元素</span></span><br><span class="line">    map&lt;string, <span class="keyword">int</span>&gt;::iterator iter = maps.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="keyword">for</span> (; iter != maps.<span class="built_in">end</span>(); ++iter)</span><br><span class="line">    {</span><br><span class="line">        cout &lt;&lt; iter-&gt;first &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        cout &lt;&lt; iter-&gt;second &lt;&lt; <span class="string">"--"</span>; <span class="comment">//david 4--jack 1--jane 2--july 3--</span></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//使用subscipt操作取实值</span></span><br><span class="line">    <span class="keyword">int</span> num = maps[<span class="string">"july"</span>];</span><br><span class="line">    cout &lt;&lt; num &lt;&lt; endl; <span class="comment">// 3</span></span><br><span class="line">    <span class="comment">//查找某key</span></span><br><span class="line">    iter = maps.<span class="built_in">find</span>(<span class="string">"jane"</span>);</span><br><span class="line">    <span class="keyword">if</span>(iter != maps.<span class="built_in">end</span>())</span><br><span class="line">        cout &lt;&lt; iter-&gt;second &lt;&lt; endl; <span class="comment">// 2</span></span><br><span class="line">    <span class="comment">//修改实值</span></span><br><span class="line">    iter-&gt;second = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> num2 = maps[<span class="string">"jane"</span>]; <span class="comment">// 100</span></span><br><span class="line">    cout &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>需要注意的是subscript（下标）操作既可以作为左值运用（修改内容）也可以作为右值运用（获取实值）。例如：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">maps[<span class="string">"abc"</span>] = <span class="number">1</span>; <span class="comment">//左值运用int num = masp["abd"]; //右值运用Copy to clipboardErrorCopied</span></span><br></pre></td></tr></tbody></table></figure><p>无论如何，subscript操作符都会先根据键值找出实值，源码如下：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...T&amp; <span class="keyword">operator</span>[](<span class="keyword">const</span> key_type&amp; k){    </span><br><span class="line">    <span class="keyword">return</span> (*((<span class="built_in">insert</span>(<span class="built_in">value_type</span>(k, <span class="built_in">T</span>()))).first)).second;</span><br><span class="line">}...Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>代码运行过程是：首先根据键值和实值做出一个元素，这个元素的实值未知，因此产生一个与实值型别相同的临时对象替代：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">value_type</span>(k, <span class="built_in">T</span>());Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>再将这个对象插入到map中，并返回一个pair：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">pair&lt;iterator,<span class="keyword">bool</span>&gt; <span class="title">insert</span><span class="params">(value_type(k, T()))</span></span>;Copy to clipboardErrorCopied</span><br></pre></td></tr></tbody></table></figure><p>pair第一个元素是迭代器，指向当前插入的新元素，如果插入成功返回true，此时对应左值运用，根据键值插入实值。插入失败（重复插入）返回false，此时返回的是已经存在的元素，则可以取到它的实值</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">insert</span>(<span class="built_in">value_type</span>(k, <span class="built_in">T</span>()))).first; <span class="comment">//迭代器</span></span><br><span class="line">*((<span class="built_in">insert</span>(<span class="built_in">value_type</span>(k, <span class="built_in">T</span>()))).first); <span class="comment">//解引用</span></span><br><span class="line">(*((<span class="built_in">insert</span>(<span class="built_in">value_type</span>(k, <span class="built_in">T</span>()))).first)).second; <span class="comment">//取出实值Copy to clipboardErrorCopied</span></span><br></pre></td></tr></tbody></table></figure><p>由于这个实值是以引用方式传递，因此作为左值或者右值都可以</p><h4 id="36、set和map的区别，multimap和multiset的区别"><a href="#36、set和map的区别，multimap和multiset的区别" class="headerlink" title="36、set和map的区别，multimap和multiset的区别"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=36%E3%80%81set%E5%92%8Cmap%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%8Cmultimap%E5%92%8Cmultiset%E7%9A%84%E5%8C%BA%E5%88%AB">36、set和map的区别，multimap和multiset的区别</a></h4><p>set只提供一种数据类型的接口，但是会将这一个元素分配到key和value上，而且它的compare_function用的是 identity()函数，这个函数是输入什么输出什么，这样就实现了set机制，set的key和value其实是一样的了。其实他保存的是两份元素，而不是只保存一份元素</p><p>map则提供两种数据类型的接口，分别放在key和value的位置上，他的比较function采用的是红黑树的comparefunction（），保存的确实是两份元素。</p><p>他们两个的insert都是采用红黑树的insert_unique() 独一无二的插入 。</p><p>multimap和map的唯一区别就是：multimap调用的是红黑树的insert_equal(),可以重复插入而map调用的则是独一无二的插入insert_unique()，multiset和set也一样，底层实现都是一样的，只是在插入的时候调用的方法不一样。</p><p><strong>红黑树概念</strong></p><p>面试时候现场写红黑树代码的概率几乎为0，但是红黑树一些基本概念还是需要掌握的。</p><p>1、它是二叉排序树（继承二叉排序树特显）：</p><ul><li><p>若左子树不空，则左子树上所有结点的值均小于或等于它的根结点的值。</p></li><li><p>若右子树不空，则右子树上所有结点的值均大于或等于它的根结点的值。</p></li><li><p>左、右子树也分别为二叉排序树。</p><p>2、它满足如下几点要求：</p></li><li><p>树中所有节点非红即黑。</p></li><li><p>根节点必为黑节点。</p></li><li><p>红节点的子节点必为黑（黑节点子节点可为黑）。</p></li><li><p>从根到NULL的任何路径上黑结点数相同。</p></li></ul><p>3、查找时间一定可以控制在O(logn)。</p><h4 id="37、STL中unordered-map和map的区别和应用场景"><a href="#37、STL中unordered-map和map的区别和应用场景" class="headerlink" title="37、STL中unordered_map和map的区别和应用场景**"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=37%E3%80%81stl%E4%B8%ADunordered_map%E5%92%8Cmap%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF">37、STL中unordered_map和map的区别和应用场景**</a></h4><p>map支持键值的自动排序，底层机制是红黑树，红黑树的查询和维护时间复杂度均为$O(logn)$，但是空间占用比较大，因为每个节点要保持父节点、孩子节点及颜色的信息</p><p>unordered_map是C++ 11新添加的容器，底层机制是哈希表，通过hash函数计算元素位置，其查询时间复杂度为O(1)，维护时间与bucket桶所维护的list长度有关，但是建立hash表耗时较大</p><p>从两者的底层机制和特点可以看出：map适用于有序数据的应用场景，unordered_map适用于高效查询的应用场景</p><h4 id="38、hashtable中解决冲突有哪些方法？"><a href="#38、hashtable中解决冲突有哪些方法？" class="headerlink" title="38、hashtable中解决冲突有哪些方法？**"></a><a href="https://interviewguide.cn/#/Doc/Knowledge/C++/STL%E6%A8%A1%E6%9D%BF%E5%BA%93/STL%E6%A8%A1%E6%9D%BF%E5%BA%93?id=38%E3%80%81hashtable%E4%B8%AD%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95%EF%BC%9F">38、hashtable中解决冲突有哪些方法？**</a></h4><p><strong>记住前三个：</strong></p><p>线性探测</p><p>使用hash函数计算出的位置如果已经有元素占用了，则向后依次寻找，找到表尾则回到表头，直到找到一个空位</p><p><strong>开链</strong></p><p>每个表格维护一个list，如果hash函数计算出的格子相同，则按顺序存在这个list中</p><p><strong>再散列</strong></p><p>发生冲突时使用另一种hash函数再计算一个地址，直到不冲突</p><p><strong>二次探测</strong></p><p>使用hash函数计算出的位置如果已经有元素占用了，按照$1^2$、$2^2$、$3^2$…的步长依次寻找，如果步长是随机数序列，则称之为伪随机探测</p><p><strong>公共溢出区</strong></p><p>一旦hash函数计算的结果相同，就放入公共溢出区</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>leetcode常用库函数</title>
      <link href="/2022/03/24/c-leetcode-chang-yong-ku-han-shu/"/>
      <url>/2022/03/24/c-leetcode-chang-yong-ku-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="c-leetcode-常用库函数"><a href="#c-leetcode-常用库函数" class="headerlink" title="c++ leetcode 常用库函数"></a>c++ leetcode 常用库函数</h1><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><h2 id="2-字符-串-相关"><a href="#2-字符-串-相关" class="headerlink" title="2. 字符(串)相关"></a>2. 字符(串)相关</h2><ol><li><p>判断字符是否为数字、字母</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">isalpha</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为字母</span></span><br><span class="line"><span class="built_in">isdigit</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为数字</span></span><br><span class="line"><span class="built_in">isalnum</span>(<span class="keyword">char</span> c)<span class="comment">//判断是否为数字或字母</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>字母的大小写转换</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tolower</span>(<span class="keyword">char</span> c)<span class="comment">//变成小写字母</span></span><br><span class="line"><span class="built_in">toupper</span>(<span class="keyword">char</span> c)<span class="comment">//变成大写字母</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>字符串转整型 stoi:</p><p>stoi(s,start,base)//s是要转换的字符串，start是起始位置，base是要转换的整数进制，默认是从0位置开始，转换为10进制</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">string str = <span class="string">"123"</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="built_in">stoi</span>(str);</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>数值转字符串 to_string</p><p>to_string(val)//val可以是任何数值类型</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">123</span>;</span><br><span class="line">string res = <span class="built_in">to_string</span>(num);</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>分割字符串 分割字符串可以使用getline和istringstream联合实现。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据','号分割字符串，getline默认的是按照行读取，但是指定就按照给定的标志分割。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">string str = <span class="string">"1,2,3,4,5"</span>;</span><br><span class="line"><span class="function">istringstream <span class="title">s_in</span><span class="params">(str)</span></span>;</span><br><span class="line">string c;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(s_in, c, <span class="string">','</span>)) {</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="3-有序查找"><a href="#3-有序查找" class="headerlink" title="3. 有序查找"></a>3. 有序查找</h2><ol><li><p>lower_bound()  大于等于<br>用于在指定区域内(左闭右开)查找<strong>不小于目标值的第一个元素</strong>，也就是说最终查找的不一定是和目标值想等的元素，也可能是比目标值大的元素。其底层实现是二分查找。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;nums{ <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span> };</span><br><span class="line"><span class="keyword">auto</span> it1 = <span class="built_in">lower_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">3</span>);</span><br><span class="line">cout &lt;&lt; *it1&lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="keyword">auto</span> it2 = <span class="built_in">lower_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">4</span>);</span><br><span class="line">cout &lt;&lt; *it2 &lt;&lt; endl; <span class="comment">//5</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>upper_bound() 大于<br>在指定目标区域中查找<strong>大于目标值的第一个元素</strong>，返回该元素所在位置的迭代器。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;nums{ <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span> };</span><br><span class="line"><span class="keyword">auto</span> it1 = <span class="built_in">upper_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">3</span>);</span><br><span class="line">cout &lt;&lt; it1-nums.<span class="built_in">begin</span>()&lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="keyword">auto</span> it2 = <span class="built_in">upper_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">4</span>);</span><br><span class="line">cout &lt;&lt; it2-nums.<span class="built_in">begin</span>() &lt;&lt; endl;  <span class="comment">//3</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dp</title>
      <link href="/2022/03/18/dp/"/>
      <url>/2022/03/18/dp/</url>
      
        <content type="html"><![CDATA[<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化 base case</span></span><br><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>][...] = base</span><br><span class="line"><span class="comment">//进行状态转移</span></span><br><span class="line"><span class="keyword">for</span> 状态<span class="number">1</span> in 状态<span class="number">1</span>的所有取值：</span><br><span class="line">    <span class="keyword">for</span> 状态<span class="number">2</span> in 状态<span class="number">2</span>的所有取值：</span><br><span class="line">        <span class="keyword">for</span> ...</span><br><span class="line">            dp[状态<span class="number">1</span>][状态<span class="number">2</span>][...] = 求最值(选择<span class="number">1</span>，选择<span class="number">2.</span>..)</span><br></pre></td></tr></tbody></table></figure><h2 id="一些dp问题"><a href="#一些dp问题" class="headerlink" title="一些dp问题"></a>一些dp问题</h2><h3 id="322-零钱兑换"><a href="#322-零钱兑换" class="headerlink" title="322. 零钱兑换"></a><a href="https://leetcode-cn.com/problems/coin-change/">322. 零钱兑换</a></h3><blockquote><p>给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。</p><p>计算并返回可以凑成总金额所需的 最少的硬币个数 。如果没有任何一种硬币组合能组成总金额，返回 -1 。</p><p>你可以认为每种硬币的数量是无限的。</p><p>示例 1：</p><p>输入：coins = [1, 2, 5], amount = 11<br>输出：3<br>解释：11 = 5 + 5 + 1<br>示例 2：</p><p>输入：coins = [2], amount = 3<br>输出：-1<br>示例 3：</p><p>输入：coins = [1], amount = 0<br>输出：0</p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归暴力</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">int</span> res = INT_MAX;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;coins.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> subproblem = <span class="built_in">coinChange</span>(coins, amount - coins[i]);</span><br><span class="line">        <span class="keyword">if</span>(subproblem == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        res = <span class="built_in">min</span>(res, subproblem+<span class="number">1</span>);</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> res==INT_MAX?<span class="number">-1</span>:res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// //递归优化</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; memo;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      memo = vector&lt;<span class="keyword">int</span>&gt;(amount+<span class="number">1</span>, <span class="number">-666</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">dp</span>(coins, amount);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">dp</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 查备忘录，防止重复计算</span></span><br><span class="line">      <span class="keyword">if</span> (memo[amount] != <span class="number">-666</span>)</span><br><span class="line">        <span class="keyword">return</span> memo[amount];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> res = INT_MAX;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;coins.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> subproblem = <span class="built_in">dp</span>(coins, amount - coins[i]);</span><br><span class="line">        <span class="keyword">if</span>(subproblem == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        res = <span class="built_in">min</span>(res, subproblem+<span class="number">1</span>);</span><br><span class="line">      }</span><br><span class="line">      memo[amount] = res==INT_MAX?<span class="number">-1</span>:res;</span><br><span class="line">      <span class="keyword">return</span> memo[amount];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; coins, <span class="keyword">int</span> amount)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(amount == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(amount &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(amount + <span class="number">1</span>, amount+<span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">      dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">// 外层 for 循环在遍历所有状态的所有取值</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;dp.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="comment">// 内层 for 循环在求所有选择的最小值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> coin : coins){</span><br><span class="line">          <span class="comment">//子问题无解 跳过</span></span><br><span class="line">          <span class="keyword">if</span>(i - coin &lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">          dp[i] = <span class="built_in">min</span>(dp[i], <span class="number">1</span>+dp[i-coin]);</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> (dp[amount] == amount + <span class="number">1</span>) ? <span class="number">-1</span> : dp[amount];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h3><h4 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h4><p>背包最大重量为4， 每个物品只能用一次，问背包能装的最大价值？</p><table><thead><tr><th>重量</th><th>价值</th><th></th></tr></thead><tbody><tr><td>物品0</td><td>1</td><td>15</td></tr><tr><td>物品1</td><td>3</td><td>20</td></tr><tr><td>物品2</td><td>4</td><td>30</td></tr></tbody></table><p>对于背包问题，有一种写法， 是使用二维数组，即<strong>dp[i][j] 表示从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少</strong>。</p><p><img src="https://img-blog.csdnimg.cn/202101101032124.png" alt="动态规划-背包问题5"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_2_wei_bag_problem1</span><span class="params">()</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; weight = {<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>};</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; value = {<span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>};</span><br><span class="line">    <span class="keyword">int</span> bagweight = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二维数组</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(weight.<span class="built_in">size</span>(), vector&lt;<span class="keyword">int</span>&gt;(bagweight + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = weight[<span class="number">0</span>]; j &lt;= bagweight; j++) {</span><br><span class="line">        dp[<span class="number">0</span>][j] = value[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// weight数组的大小 就是物品个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; weight.<span class="built_in">size</span>(); i++) { <span class="comment">// 遍历物品</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= bagweight; j++) { <span class="comment">// 遍历背包容量</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; weight[i]) dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">else</span> dp[i][j] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; dp[weight.<span class="built_in">size</span>() - <span class="number">1</span>][bagweight] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">test_2_wei_bag_problem1</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="滚动一维数组"><a href="#滚动一维数组" class="headerlink" title="滚动一维数组"></a>滚动一维数组</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_1_wei_bag_problem</span><span class="params">()</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; weight = {<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>};</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; value = {<span class="number">15</span>, <span class="number">20</span>, <span class="number">30</span>};</span><br><span class="line">    <span class="keyword">int</span> bagWeight = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(bagWeight + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; weight.<span class="built_in">size</span>(); i++) { <span class="comment">// 遍历物品</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = bagWeight; j &gt;= weight[i]; j--) { <span class="comment">// 遍历背包容量</span></span><br><span class="line">            dp[j] = <span class="built_in">max</span>(dp[j], dp[j - weight[i]] + value[i]);  <span class="comment">//dp复用</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">test_1_wei_bag_problem</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="分割等和子集"><a href="#分割等和子集" class="headerlink" title="分割等和子集"></a><a href="https://leetcode-cn.com/problems/partition-equal-subset-sum/">分割等和子集</a></h3><p>给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。</p><blockquote><p>示例 1：</p><p>输入：nums = [1,5,11,5]<br>输出：true<br>解释：数组可以分割成 [1, 5, 5] 和 [11] 。</p><p>示例 2：</p><p>输入：nums = [1,2,3,5]<br>输出：false<br>解释：数组不能分割成两个元素和相等的子集。</p></blockquote><p>这也是一道经典的背包题</p><p>理解：</p><blockquote><p>背包的最大重量为sum/2</p><p>物品的重量为nums[i]</p><p>物品的价值为nums[i]</p><p><code>每个物品只有一个 求背包装最大的价值</code></p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canPartition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> allSum = <span class="built_in">accumulate</span>(<span class="built_in">begin</span>(nums), <span class="built_in">end</span>(nums), <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span>(allSum%<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> target = allSum/<span class="number">2</span>;</span><br><span class="line">      vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(nums.<span class="built_in">size</span>(), vector&lt;<span class="keyword">int</span>&gt;(target+<span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = nums[<span class="number">0</span>]; j&lt;=target; j++){</span><br><span class="line">        dp[<span class="number">0</span>][j] = nums[<span class="number">0</span>];</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;=target; j++){</span><br><span class="line">          <span class="keyword">if</span>(j &lt; nums[i]) dp[i][j] = dp[i<span class="number">-1</span>][j];</span><br><span class="line">          <span class="keyword">else</span>{</span><br><span class="line">            dp[i][j] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][j], dp[i<span class="number">-1</span>][j-nums[i]] + nums[i]);            </span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> dp[nums.<span class="built_in">size</span>()<span class="number">-1</span>][target] == target;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canPartition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> allSum = <span class="built_in">accumulate</span>(<span class="built_in">begin</span>(nums), <span class="built_in">end</span>(nums), <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span>(allSum%<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> target = allSum/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// dp[i]中的i表示背包内总和</span></span><br><span class="line">      <span class="comment">// 题目中说：每个数组中的元素不会超过 100，数组的大小不会超过 200</span></span><br><span class="line">      <span class="comment">// 总和不会大于20000，背包最大只需要其中一半，所以10001大小就可以</span></span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(<span class="number">10001</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="comment">//begin 0/1</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = target; j&gt;=nums[i]; j--){</span><br><span class="line">          dp[j] = <span class="built_in">max</span>(dp[j], dp[j-nums[i]] + nums[i]);</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> dp[target] == target;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="一些dp的题目"><a href="#一些dp的题目" class="headerlink" title="一些dp的题目"></a>一些dp的题目</h2><h3 id="118-杨辉三角"><a href="#118-杨辉三角" class="headerlink" title="118. 杨辉三角"></a><a href="https://leetcode-cn.com/problems/pascals-triangle/">118. 杨辉三角</a></h3><p>给定一个非负整数 <em><code>numRows</code>，</em>生成「杨辉三角」的前 <em><code>numRows</code></em> 行。</p><p>在「杨辉三角」中，每个数是它左上方和右上方的数的和。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203132135089.gif" alt="img"></p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: numRows = 5</span><br><span class="line">输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>dp迭代 生成二维ans数组</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">generate</span>(<span class="keyword">int</span> numRows) {</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numRows; i++){</span><br><span class="line">            <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(i+<span class="number">1</span>)</span></span>;</span><br><span class="line">            temp[<span class="number">0</span>] = temp[i] = <span class="number">1</span>;  <span class="comment">//首位数据是确定的 base case</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;i; j++){</span><br><span class="line">                <span class="comment">//状态转移方程</span></span><br><span class="line">                temp[j] = ans[i<span class="number">-1</span>][j<span class="number">-1</span>] + ans[i<span class="number">-1</span>][j];</span><br><span class="line">            }</span><br><span class="line">            ans.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="119-杨辉三角-II"><a href="#119-杨辉三角-II" class="headerlink" title="119. 杨辉三角 II "></a><a href="https://leetcode-cn.com/problems/pascals-triangle-ii/">119. 杨辉三角 II </a></h3><p>给定一个非负索引 rowIndex，返回「杨辉三角」的第 rowIndex 行。</p><p>在「杨辉三角」中，每个数是它左上方和右上方的数的和。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203132138328.gif" alt="img"></p><p>示例 1:</p><p>输入: rowIndex = 3<br>输出: [1,3,3,1]</p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>注意 此处的rowIndex 从0开始</li></ol><h4 id="朴素的dp解法"><a href="#朴素的dp解法" class="headerlink" title="朴素的dp解法"></a>朴素的dp解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp解法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">C</span>(rowIndex + <span class="number">1</span>); <span class="comment">//这道题rowindex从0开始</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            C[i].<span class="built_in">resize</span>(i + <span class="number">1</span>);</span><br><span class="line">            C[i][<span class="number">0</span>] = C[i][i] = <span class="number">1</span>; <span class="comment">//base case 首尾必定是1</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) {</span><br><span class="line">                C[i][j] = C[i - <span class="number">1</span>][j - <span class="number">1</span>] + C[i - <span class="number">1</span>][j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> C[rowIndex];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="滚动数组优化"><a href="#滚动数组优化" class="headerlink" title="滚动数组优化"></a>滚动数组优化</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; pre, cur;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            cur.<span class="built_in">resize</span>(i + <span class="number">1</span>);</span><br><span class="line">            cur[<span class="number">0</span>] = cur[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) {</span><br><span class="line">                cur[j] = pre[j - <span class="number">1</span>] + pre[j];</span><br><span class="line">            }</span><br><span class="line">            pre = cur;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="继续优化-从后到前"><a href="#继续优化-从后到前" class="headerlink" title="继续优化 从后到前"></a>继续优化 从后到前</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">row</span><span class="params">(rowIndex + <span class="number">1</span>)</span></span>;</span><br><span class="line">        row[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span>; --j) {</span><br><span class="line">                row[j] += row[j - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> row;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="线性递推"><a href="#线性递推" class="headerlink" title="线性递推"></a>线性递推</h4><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203132145601.jpeg" alt="img" style="zoom: 67%;"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203132150495.png" alt="image-20220313215002446" style="zoom:50%;"><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>{</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">row</span><span class="params">(rowIndex + <span class="number">1</span>)</span></span>;</span><br><span class="line">        row[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= rowIndex; ++i) {</span><br><span class="line">          <span class="comment">//杨辉三角 组合数规律</span></span><br><span class="line">            row[i] = <span class="number">1LL</span> * row[i - <span class="number">1</span>] * (rowIndex - i + <span class="number">1</span>) / i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> row;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="正则通配符算法"><a href="#正则通配符算法" class="headerlink" title="正则通配符算法"></a>正则通配符算法</h3><h3 id="10-正则表达式匹配"><a href="#10-正则表达式匹配" class="headerlink" title="10. 正则表达式匹配"></a><a href="https://leetcode-cn.com/problems/regular-expression-matching/">10. 正则表达式匹配</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=10&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/regular-expression-matching/#">思路</a></p><p>难度困难2842英文版讨论区</p><p>给你一个字符串 <code>s</code> 和一个字符规律 <code>p</code>，请你来实现一个支持 <code>'.'</code> 和 <code>'*'</code> 的正则表达式匹配。</p><ul><li><code>'.'</code> 匹配任意单个字符</li><li><code>'*'</code> 匹配零个或多个前面的那一个元素</li></ul><p>所谓匹配，是要涵盖 <strong>整个</strong> 字符串 <code>s</code>的，而不是部分字符串。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//背这个</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (p.<span class="built_in">empty</span>()) <span class="keyword">return</span> s.<span class="built_in">empty</span>();</span><br><span class="line">        <span class="comment">//当前位置匹配</span></span><br><span class="line">        <span class="keyword">auto</span> first_match = !s.<span class="built_in">empty</span>() &amp;&amp; (s[<span class="number">0</span>] == p[<span class="number">0</span>] || p[<span class="number">0</span>] == <span class="string">'.'</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (p.<span class="built_in">length</span>() &gt;= <span class="number">2</span> &amp;&amp; p[<span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">            <span class="comment">//通配符匹配0次 || 通配符匹配多次</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">isMatch</span>(s, p.<span class="built_in">substr</span>(<span class="number">2</span>)) || (first_match &amp;&amp; <span class="built_in">isMatch</span>(s.<span class="built_in">substr</span>(<span class="number">1</span>), p));</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="comment">//无通配符，向前匹配</span></span><br><span class="line">            <span class="keyword">return</span> first_match &amp;&amp; <span class="built_in">isMatch</span>(s.<span class="built_in">substr</span>(<span class="number">1</span>), p.<span class="built_in">substr</span>(<span class="number">1</span>));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    unordered_map&lt;string, <span class="keyword">int</span>&gt; memo;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dp</span>(s, <span class="number">0</span>, p, <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line"><span class="comment">/* 计算 p[j..] 是否匹配 s[i..] */</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">dp</span><span class="params">(string&amp; s, <span class="keyword">int</span> i, string&amp; p, <span class="keyword">int</span> j)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = s.<span class="built_in">size</span>(), n = p.<span class="built_in">size</span>();</span><br><span class="line">        <span class="comment">// base case</span></span><br><span class="line">        <span class="keyword">if</span> (j == n) {</span><br><span class="line">            <span class="keyword">return</span> i == m;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (i == m) {</span><br><span class="line">            <span class="comment">// 如果能匹配空串，一定是字符和 * 成对儿出现</span></span><br><span class="line">            <span class="keyword">if</span> ((n - j) % <span class="number">2</span> == <span class="number">1</span>) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 检查是否为 x*y*z* 这种形式</span></span><br><span class="line">            <span class="keyword">for</span> (; j + <span class="number">1</span> &lt; n; j += <span class="number">2</span>) {</span><br><span class="line">                <span class="keyword">if</span> (p[j + <span class="number">1</span>] != <span class="string">'*'</span>) {</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 记录状态 (i, j)，消除重叠子问题</span></span><br><span class="line">        string key = <span class="built_in">to_string</span>(i) + <span class="string">","</span> + <span class="built_in">to_string</span>(j);</span><br><span class="line">        <span class="keyword">if</span> (memo.<span class="built_in">count</span>(key)) <span class="keyword">return</span> memo[key];</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">bool</span> res = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> (s[i] == p[j] || p[j] == <span class="string">'.'</span>) {</span><br><span class="line">            <span class="comment">// 匹配</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; n - <span class="number">1</span> &amp;&amp; p[j + <span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">   <span class="comment">// 1.1 通配符匹配 0 次或多次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i, p, j + <span class="number">2</span>) || <span class="built_in">dp</span>(s, i + <span class="number">1</span>, p, j);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">// 1.2 常规匹配 1 次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i + <span class="number">1</span>, p, j + <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">             <span class="comment">// 不匹配</span></span><br><span class="line">            <span class="keyword">if</span> (j &lt; n - <span class="number">1</span> &amp;&amp; p[j + <span class="number">1</span>] == <span class="string">'*'</span>) {</span><br><span class="line">                <span class="comment">// 2.1 通配符匹配 0 次</span></span><br><span class="line">                res = <span class="built_in">dp</span>(s, i, p, j + <span class="number">2</span>);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">// 2.2 无法继续匹配</span></span><br><span class="line">                res = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 将当前结果记入备忘录</span></span><br><span class="line">        memo[key] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="炒股专题"><a href="#炒股专题" class="headerlink" title="炒股专题"></a>炒股专题</h2><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/1.png" alt="img" style="zoom:67%;"><h3 id="121-买卖股票的最佳时机-一次买卖"><a href="#121-买卖股票的最佳时机-一次买卖" class="headerlink" title="121. 买卖股票的最佳时机 一次买卖"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/">121. 买卖股票的最佳时机 一次买卖</a></h3><p>给定一个数组 <code>prices</code> ，它的第 <code>i</code> 个元素 <code>prices[i]</code> 表示一支给定股票第 <code>i</code> 天的价格。</p><p>你只能选择 <strong>某一天</strong> 买入这只股票，并选择在 <strong>未来的某一个不同的日子</strong> 卖出该股票。设计一个算法来计算你所能获取的最大利润。</p><p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 <code>0</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：[7,1,5,3,6,4]</span><br><span class="line">输出：5</span><br><span class="line">解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。</span><br><span class="line">     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [7,6,4,3,1]</span><br><span class="line">输出：0</span><br><span class="line">解释：在这种情况下, 没有交易完成, 所以最大利润为 0。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li><p>贪心 一次遍历 得到 当前值和当前之前的最小值做差 取max</p></li><li><p>动态规划</p><blockquote><p>dp数组的含义</p><ol><li><p>dp{i}{0}表述第i天手中==没有==股票 时 的最大利润    = max(昨天手中就没有股票， 昨天手中有股票但是今天(i)给==卖==了)</p></li><li><p>dp{i}{1}表述第i天手中==有==股票 时 的最大利润       = max(昨天手中就有股票， 昨天手中没有股票但是今天(i)==买==了)</p></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp[i][<span class="number">0</span>]= <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br></pre></td></tr></tbody></table></figure></blockquote></li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                <span class="comment">//base case</span></span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = INT_MIN;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>]= <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            <span class="comment">//注意这里不能时dp[i-1][0],因为只有一次操作</span></span><br><span class="line">            <span class="comment">//前面没有股票买卖 没有利润</span></span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="comment">// dp[i][0] = max(dp[i-1][0], dp[i-1][1] + prices[i])</span></span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            <span class="comment">// dp[i][1] = max(dp[i-1][1], -prices[i])</span></span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, -prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//贪心</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n =prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>; <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n){</span><br><span class="line">            <span class="keyword">if</span>(prices[left]&lt;prices[right])</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, prices[right] - prices[left]);</span><br><span class="line">            <span class="keyword">else</span> left = right;</span><br><span class="line">            right++;            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{    </span><br><span class="line">        <span class="keyword">int</span> mmin = INT_MAX;<span class="comment">//遇到最小的数</span></span><br><span class="line">        <span class="keyword">int</span> mmax = <span class="number">0</span>;<span class="comment">//差值最大数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i : prices) {</span><br><span class="line">            mmin = <span class="built_in">min</span>(i, mmin); </span><br><span class="line">            mmax = <span class="built_in">max</span>(i - mmin, mmax);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> mmax ;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="122-买卖股票的最佳时机-无限次买卖"><a href="#122-买卖股票的最佳时机-无限次买卖" class="headerlink" title="122. 买卖股票的最佳时机 无限次买卖"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/">122. 买卖股票的最佳时机 无限次买卖</a></h3><p>给定一个数组 <code>prices</code> ，其中 <code>prices[i]</code> 表示股票第 <code>i</code> 天的价格。</p><p>在每一天，你可能会决定购买和/或出售股票。你在任何时候 <strong>最多</strong> 只能持有 <strong>一股</strong> 股票。你也可以购买它，然后在 <strong>同一天</strong> 出售。<br>返回 <em>你能获得的 <strong>最大</strong> 利润</em> 。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [7,1,5,3,6,4]</span><br><span class="line">输出: 7</span><br><span class="line">解释: 在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。</span><br><span class="line">随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6-3 = 3 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [1,2,3,4,5]</span><br><span class="line">输出: 4</span><br><span class="line">解释: 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。</span><br><span class="line">注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li><p>贪心 每次相邻两天涨价都卖股票</p></li><li><p>dp 同上 但是更为贴近经典模板 允许多次买卖 注意状态方程</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br></pre></td></tr></tbody></table></figure></li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//没有购买次数的限制</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//滚动优化</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_i_0; <span class="comment">//临时存储上个dp_i_0     dp_i_1写在dp_i_0之前则无需temp </span></span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, temp - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//贪心 每次相邻两天涨价都卖股票</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; prices.<span class="built_in">size</span>()<span class="number">-1</span>; i++){</span><br><span class="line">            <span class="keyword">if</span>(prices[i]&lt;prices[i+<span class="number">1</span>]){</span><br><span class="line">                max+=prices[i+<span class="number">1</span>]-prices[i];</span><br><span class="line">            }  </span><br><span class="line">        }   </span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="714-买卖股票的最佳时机-含手续费"><a href="#714-买卖股票的最佳时机-含手续费" class="headerlink" title="714. 买卖股票的最佳时机 含手续费"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/">714. 买卖股票的最佳时机 含手续费</a></h3><p>给定一个整数数组 <code>prices</code>，其中 <code>prices[i]</code>表示第 <code>i</code> 天的股票价格 ；整数 <code>fee</code> 代表了交易股票的手续费用。</p><p>你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。</p><p>返回获得利润的最大值。</p><p><strong>注意：</strong>这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1, 3, 2, 8, 4, 9], fee = 2</span><br><span class="line">输出：8</span><br><span class="line">解释：能够达到的最大利润:  </span><br><span class="line">在此处买入 prices[0] = 1</span><br><span class="line">在此处卖出 prices[3] = 8</span><br><span class="line">在此处买入 prices[4] = 4</span><br><span class="line">在此处卖出 prices[5] = 9</span><br><span class="line">总利润: ((8 - 1) - 2) + ((9 - 4) - 2) = 8</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1,3,7,5,10,3], fee = 3</span><br><span class="line">输出：6</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><p>一样的套路 只是注意 -fee -fee…….在dp0上可能引发的越界问题 除非给定特别合适的初始值（-1？错）</p><blockquote><p>[9,8,7,1,2] 3</p><p>例如上面那个 会导致dp1错误  老老实实放在dp1上吧   -1000000是可以通过的</p></blockquote><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_0;</span><br><span class="line">            <span class="comment">//注意 这里-fee最好不要写在dp0上 不然INT_MIN可能越界，不好控制初始值</span></span><br><span class="line">            dp_0 = <span class="built_in">max</span>(dp_0, dp_1 + prices[i]);</span><br><span class="line">            dp_1 = <span class="built_in">max</span>(dp_1, temp - prices[i] - fee);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="309-最佳买卖股票时机-含冷冻期"><a href="#309-最佳买卖股票时机-含冷冻期" class="headerlink" title="309. 最佳买卖股票时机 含冷冻期"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">309. 最佳买卖股票时机 含冷冻期</a></h3><p>给定一个整数数组<code>prices</code>，其中第 <code>prices[i]</code> 表示第 <code>*i*</code> 天的股票价格 。</p><p>设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:</p><ul><li>卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。</li></ul><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: prices = [1,2,3,0,2]</span><br><span class="line">输出: 3 </span><br><span class="line">解释: 对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>0 1单独判断  注意代码中的状态方程</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;prices.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">1</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i<span class="number">-2</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">int</span> dp_pre_0 = <span class="number">0</span>; <span class="comment">//代表dp[i-2][0];</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">int</span> temp = dp_i_0;</span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, dp_pre_0 - prices[i]);       </span><br><span class="line">            dp_pre_0 = temp;    </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="123-买卖股票的最佳时机-限制两笔交易"><a href="#123-买卖股票的最佳时机-限制两笔交易" class="headerlink" title="123. 买卖股票的最佳时机 限制两笔交易"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">123. 买卖股票的最佳时机 限制两笔交易</a></h3><p>给定一个数组，它的第 <code>i</code> 个元素是一支给定的股票在第 <code>i</code> 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>两笔</strong> 交易。</p><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [3,3,5,0,0,3,1,4]</span><br><span class="line">输出：6</span><br><span class="line">解释：在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。</span><br><span class="line">     随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：prices = [1,2,3,4,5]</span><br><span class="line">输出：4</span><br><span class="line">解释：在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。   </span><br><span class="line">     注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。   </span><br><span class="line">     因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><ol><li>有次数限制k for循环加一层k</li></ol><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> maxk = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                    dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                    dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//滚动优化</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> dp_i10 = <span class="number">0</span>, dp_i20 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i11 = INT_MIN, dp_i21 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> price: prices){</span><br><span class="line">            dp_i20 = <span class="built_in">max</span>(dp_i20, dp_i21 + price);</span><br><span class="line">            dp_i21 = <span class="built_in">max</span>(dp_i21, dp_i10 - price);</span><br><span class="line">            dp_i10 = <span class="built_in">max</span>(dp_i10, dp_i11 + price);</span><br><span class="line">            dp_i11 = <span class="built_in">max</span>(dp_i11, -price);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i20;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="188-买卖股票的最佳时机-限制k笔交易"><a href="#188-买卖股票的最佳时机-限制k笔交易" class="headerlink" title="188. 买卖股票的最佳时机 限制k笔交易"></a><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/">188. 买卖股票的最佳时机 限制k笔交易</a></h3><p>给定一个整数数组 <code>prices</code> ，它的第 <code>i</code> 个元素 <code>prices[i]</code> 是一支给定的股票在第 <code>i</code> 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 <strong>k</strong> 笔交易。</p><p><strong>注意：</strong>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：k = 2, prices = [2,4,1]</span><br><span class="line">输出：2</span><br><span class="line">解释：在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：k = 2, prices = [3,2,6,5,0,3]</span><br><span class="line">输出：7</span><br><span class="line">解释：在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出, 这笔交易所能获得利润 = 6-2 = 4 。</span><br><span class="line">     随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出, 这笔交易所能获得利润 = 3-0 = 3 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span> maxk, vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(maxk&gt;n/<span class="number">2</span>){<span class="comment">//一次交易完成需要两天</span></span><br><span class="line">            <span class="comment">//复用之前交易次数k没有限制的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">maxProfit_k_inf</span>(prices);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>){</span><br><span class="line">                    dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                    dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不限制次数k的买卖</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_k_inf</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> dp_i_0 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp_i_1 = INT_MIN;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            dp_i_1 = <span class="built_in">max</span>(dp_i_1, dp_i_0 - prices[i]);</span><br><span class="line">            dp_i_0 = <span class="built_in">max</span>(dp_i_0, dp_i_1 + prices[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp_i_0;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="万法归一"><a href="#万法归一" class="headerlink" title="万法归一"></a><code>万法归一</code></h3><p>输入股票价格数组 <code>prices</code>，你最多进行 <code>max_k</code> 次交易，每次交易需要额外消耗 <code>fee</code> 的手续费，而且每次交易之后需要经过 <code>cooldown</code> 天的冷冻期才能进行下一次交易，请你计算并返回可以获得的最大利润。</p><p>怎么样，有没有被吓到？如果你直接给别人出一道这样的题目，估计对方要当场吐血，不过我们这样一步步做过来，你应该很容易发现这道题目就是之前我们探讨的几种情况的组合体嘛。</p><p>所以，我们只要把之前实现的几种代码掺和到一块，<strong>在 base case 和状态转移方程中同时加上 <code>cooldown</code> 和 <code>fee</code> 的约束就行了</strong>：</p><p>==怕难以理解 此处全用完整dp数组==</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_all_in_one</span><span class="params">(<span class="keyword">int</span> maxk, vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> cooldown, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(maxk&gt;n/<span class="number">2</span>){<span class="comment">//一次交易完成需要两天</span></span><br><span class="line">            <span class="comment">//复用之前交易次数k没有限制的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">maxProfit_k_inf_cool</span>(prices, cooldown, fee);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;(maxk+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>)));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k&lt;=maxk; k++){</span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> == <span class="number">-1</span>){</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 包含 cooldown 的 base case</span></span><br><span class="line">            <span class="keyword">if</span>(i-cooldown <span class="number">-1</span>&lt; <span class="number">0</span>){</span><br><span class="line">            dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                <span class="comment">// 别忘了减 fee</span></span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], -prices[i]- fee);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">                dp[i][k][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">0</span>], dp[i<span class="number">-1</span>][k][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                dp[i][k][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][k][<span class="number">1</span>], dp[i-cooldown<span class="number">-1</span>][k<span class="number">-1</span>][<span class="number">0</span>] - prices[i] -fee);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][maxk][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// k 无限制，包含手续费和冷冻期</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit_k_inf_cool</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; prices, <span class="keyword">int</span> cooldown, <span class="keyword">int</span> fee)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">dp</span>(n, vector&lt;<span class="keyword">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;prices.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">1</span> == <span class="number">-1</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                dp[i][<span class="number">1</span>] = -prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 包含 cooldown 的 base case</span></span><br><span class="line">            <span class="keyword">if</span>(i-cooldown <span class="number">-1</span>&lt; <span class="number">0</span>){</span><br><span class="line">                dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">                <span class="comment">// 别忘了减 fee</span></span><br><span class="line">                dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], -prices[i]- fee);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>], dp[i<span class="number">-1</span>][<span class="number">1</span>] + prices[i]);</span><br><span class="line">            <span class="comment">// 同时考虑 cooldown 和 fee</span></span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>], dp[i-cooldown<span class="number">-1</span>][<span class="number">0</span>] - prices[i]- fee);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针数组赋值越界引发的bug</title>
      <link href="/2022/03/16/zhi-zhen-shu-zu-fu-zhi-yue-jie-yin-fa-de-bug/"/>
      <url>/2022/03/16/zhi-zhen-shu-zu-fu-zhi-yue-jie-yin-fa-de-bug/</url>
      
        <content type="html"><![CDATA[<h2 id="指针数组赋值越界引发的bug"><a href="#指针数组赋值越界引发的bug" class="headerlink" title="指针数组赋值越界引发的bug"></a>指针数组赋值越界引发的bug</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><ul><li>项目中写了这么一段代码，整段代码在while循环中循环读取数据</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">if</span> (!<span class="built_in">GetAveData</span>(strFilePath, m_ppHVFreq[i], m_ppHV[i], m_pnHVSize[i]))  <span class="comment">//读取hv数据</span></span><br><span class="line">     <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">   nSize = m_pnHVSize[i];  <span class="comment">//nSize为300</span></span><br><span class="line">   m_ppdHVFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize];</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nSize; m++) {</span><br><span class="line">     m_ppdHVFreqLog[i][m] = <span class="built_in">log</span>(m_ppHVFreq[i][m]);</span><br><span class="line">     allHvFreMax =</span><br><span class="line">         allHvFreMax &gt; m_ppHVFreq[i][m] ? allHvFreMax : m_ppHVFreq[i][m];</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">//读取spec数据</span></span><br><span class="line">   <span class="keyword">if</span> (!<span class="built_in">ReadSpecFile</span>(m_arrDataFiles[i], m_ppdSpecFreq[i], m_ppdSpecV[i],</span><br><span class="line">                     m_pnSpecSize[i]))</span><br><span class="line">     <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//保存spec 的 log frequency</span></span><br><span class="line">   <span class="keyword">int</span> nnSize = m_pnSpecSize[i];</span><br><span class="line"><span class="comment">//命名不规范，调试两行泪</span></span><br><span class="line">   m_ppdSpecFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize]; <span class="comment">// 100 hv 300 spec</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nnSize; m++) {</span><br><span class="line">     m_ppdSpecFreqLog[i][m] = <span class="built_in">log</span>(m_ppdSpecFreq[i][m]);</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><ul><li>在代码的第21行<code>m_ppdSpecFreqLog[i] = new double[nSize]; // 100 hv 300 spec</code>，这段代码中想着用nnSize(300)开辟，结果开辟成了nSize(100)大小，导致在后续的处理中，对数组进行了越界的赋值</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">m_ppdSpecFreqLog[i] = <span class="keyword">new</span> <span class="keyword">double</span>[nSize]; <span class="comment">// 100 hv 300 spec</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; nnSize; m++) {</span><br><span class="line">  m_ppdSpecFreqLog[i][m] = <span class="built_in">log</span>(m_ppdSpecFreq[i][m]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>开辟了一百的大小却赋了300的值，这样的直接后果就是后面用new开辟指针数组 ==疯狂中断== 报访问异常，难以定位，难以排查</p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/image-20220316192700569.png" alt="image-20220316192700569" style="zoom: 67%;"></li></ul><h3 id="教训"><a href="#教训" class="headerlink" title="教训"></a>教训</h3><ol><li>命名不规范，调试两行泪</li><li>认真认真认真</li><li>new出错，优先查找这个bug</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 开发随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络面试</title>
      <link href="/2022/03/16/ji-suan-ji-wang-luo-ba-gu/"/>
      <url>/2022/03/16/ji-suan-ji-wang-luo-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="064aad0b869af3616ae39b25879fb8e3192db683cabf50a8171b79002bae8b77"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++面试</title>
      <link href="/2022/03/16/c-ba-gu/"/>
      <url>/2022/03/16/c-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e4c673e5d144cc75ff7bd18d032f37cf7f9700c476a233fb96e5532ab6659c15"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统面试</title>
      <link href="/2022/03/16/cao-zuo-xi-tong-ba-gu/"/>
      <url>/2022/03/16/cao-zuo-xi-tong-ba-gu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6de4e75f02674a5e7002d06eaa8a93fed6546c63308f737e134e53d0df5c423a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>难理解的高频题</title>
      <link href="/2022/03/16/mian-jing-suan-fa-ti-mu/"/>
      <url>/2022/03/16/mian-jing-suan-fa-ti-mu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c70830e6953d199602eecf72d348caf1e26cd09784b48f07a84aeb735b2af3e8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找</title>
      <link href="/2022/03/15/er-fen-cha-zhao-suan-fa/"/>
      <url>/2022/03/15/er-fen-cha-zhao-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="二分查找算法"><a href="#二分查找算法" class="headerlink" title="二分查找算法"></a><a href="https://www.cnblogs.com/kyoner/p/11080078.html">二分查找算法</a></h1><h2 id="一、二分查找的框架"><a href="#一、二分查找的框架" class="headerlink" title="一、二分查找的框架"></a><strong>一、二分查找的框架</strong></h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>, right = ...;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(...) {</span><br><span class="line">     <span class="keyword">int</span> mid = (right + left) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       ...</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = ...</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = ...</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> ...;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><p><strong>分析二分查找的一个技巧是：不要出现 else，而是把所有情况用 else if 写清楚，这样可以清楚地展现所有细节</strong>。本文都会使用 else if，旨在讲清楚，读者理解后可自行简化。</p><p>其中…标记的部分，就是可能出现细节问题的地方，当你见到一个二分查找的代码时，首先注意这几个地方。后文用实例分析这些地方能有什么样的变化。</p><p>另外声明一下，计算 mid 时需要技巧防止溢出，建议写成: **<code>mid = left + (right - left) / 2</code>**，本文暂时忽略这个问题。</p><h2 id="二、寻找一个数（基本的二分搜索）"><a href="#二、寻找一个数（基本的二分搜索）" class="headerlink" title="二、寻找一个数（基本的二分搜索）"></a><strong>二、寻找一个数（基本的二分搜索）</strong></h2><p>这个场景是最简单的，可能也是大家最熟悉的，即搜索一个数，如果存在，返回其索引，否则返回 -1。</p><p><code>左闭右闭的模板</code></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>; </span><br><span class="line">   <span class="keyword">int</span> right = nums.length - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(left &lt;= right) { <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">int</span> mid = (right + left) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">       <span class="keyword">return</span> mid; </span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target)</span><br><span class="line">       left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target)</span><br><span class="line">       right = mid - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     }</span><br><span class="line">   <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么 while 循环的条件中是 &lt;=，而不是 &lt; ？</p><ul><li>答：因为初始化 right 的赋值是 nums.length - 1，即最后一个元素的索引，而不是 nums.length。</li><li>这二者可能出现在不同功能的二分查找中，区别是：前者相当于两端都闭区间 <code>[left, right]</code>，后者相当于左闭右开区间 <code>[left, right)</code>，因为索引大小为 nums.length 是越界的。</li><li>我们这个算法中使用的是 [left, right] 两端都闭的区间。**这个区间就是<code>每次进行搜索</code>的区间，我们不妨称为「搜索区间」(search space)**。</li><li>什么时候应该停止搜索呢？当然，找到了目标值的时候可以终止</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">  <span class="keyword">return</span> mid; </span><br></pre></td></tr></tbody></table></figure><ul><li>但如果没找到，就需要 while 循环终止，然后返回 -1。那 while 循环什么时候应该终止？<strong>搜索区间为空的时候应该终止</strong>，意味着你没得找了，就等于没找到嘛。</li><li><code>while(left &lt;= right)的终止条件是 left == right + 1</code>，写成区间的形式就是 <code>[right + 1, right]</code>，或者带个具体的数字进去 [3, 2]，可见<strong>这时候搜索区间为空</strong>，因为没有数字既大于等于 3 又小于等于 2 的吧。所以这时候 while 循环终止是正确的，直接返回 -1 即可。</li><li>while(left &lt; right)的终止条件是 left == right，写成区间的形式就是 [right, right]，或者带个具体的数字进去 [2, 2]，<strong>这时候搜索区间非空</strong>，还有一个数 2，但此时 while 循环终止了。也就是说这区间 [2, 2] 被漏掉了，索引 2 没有被搜索，如果这时候直接返回 -1 就可能出现错误。</li><li>当然，如果你非要用 while(left &lt; right) 也可以，我们已经知道了出错的原因，就打个补丁好了：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"> <span class="keyword">while</span>(left &lt; right) {</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line"> }</span><br><span class="line"> <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>; <span class="comment">//注意 如果是插入位置 需要先判段left是否越界</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>为什么 left = mid + 1，right = mid - 1？我看有的代码是 right = mid 或者 left = mid，没有这些加加减减，到底怎么回事，怎么判断？</p><ul><li>答：这也是二分查找的一个难点，不过只要你能理解前面的内容，就能够很容易判断。</li><li>刚才明确了「搜索区间」这个概念，而且本算法的搜索区间是两端都闭的，即 [left, right]。那么当我们发现索引 mid 不是要找的 target 时，如何<code>确定下一步的搜索区间</code>呢？</li><li>当然是去搜索 [left, mid - 1] 或者 [mid + 1, right] 对不对？因为 mid 已经搜索过，应该从搜索区间中去除。</li></ul></li><li><p>此算法有什么缺陷？</p><ul><li>答：至此，你应该已经掌握了该算法的所有细节，以及这样处理的原因。但是，这个算法存在局限性。</li><li>比如说给你有序数组 nums = [1,2,2,2,3]，target = 2，此算法返回的索引是 2，没错。但是如果我想得到 target 的左侧边界，即索引 1，或者我想得到 target 的右侧边界，即索引 3，这样的话此算法是无法处理的。</li><li>这样的需求很常见。你也许会说，找到一个 target 索引，然后向左或向右线性搜索不行吗？可以，但是不好，因为这样难以保证二分查找对数级的时间复杂度了。</li><li>我们后续的算法就来讨论这两种二分查找的算法。（==左闭右开==的 ==插入位置==的 ==刚好大于==的 二分方法）</li></ul></li></ol><h2 id="三、寻找左侧边界的二分搜索"><a href="#三、寻找左侧边界的二分搜索" class="headerlink" title="三、寻找左侧边界的二分搜索"></a>三、寻找左侧边界的二分搜索</h2><p> ==//搜索&gt;=target的第一个位置==</p><p>直接看代码，其中的标记是需要注意的细节： //正常二分法左闭右开的模板</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">if</span> (nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> right = nums.length; <span class="comment">// 注意</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt; right) { <span class="comment">// 注意</span></span><br><span class="line">     <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       right = mid;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = mid + <span class="number">1</span>;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = mid; <span class="comment">// 注意</span></span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> left;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么 while(left &lt; right) 而不是 &lt;= ?    //==注意 仅仅是因为right的初始化 两种模板没有差别 都可以使用==</p><ul><li>答：用相同的方法分析，因为初始化 right = nums.length 而不是 nums.length - 1 。因此每次循环的「搜索区间」是 [left, right) 左闭右开。</li><li>while(left &lt; right) 终止的条件是 <code>left == right</code>，此时搜索区间 <code>[left, left) 恰巧为空</code>，所以可以正确终止。</li></ul></li><li><p>为什么没有返回 -1 的操作？如果 nums 中不存在 target 这个值，怎么办？</p><ul><li><p>答：因为要一步一步来，先理解一下这个「左侧边界」有什么特殊含义：</p><blockquote><p>​     target = 2</p><p>pos:            left                        mid      mid+1     right</p><p>nums:          1             2             2            4</p><p>index:          0             1             2            3             4</p></blockquote></li><li><p>对于这个数组，算法会返回 1。这个 1 的含义可以这样解读：nums 中<code>小于</code> 2 的<code>元素有 1 个</code>。</p></li><li><p>比如对于有序数组 nums = [2,3,5,7], target = 1，算法会返回 0，含义是：nums 中小于 1 的元素有 0 个。如果 target = 8，算法会返回 4，含义是：nums 中小于 8 的元素有 4 个。</p></li><li><p>综上可以看出，函数的返回值（即 left 变量的值）取值区间是闭区间 [0, nums.length]，所以我们简单添加两行代码就能在正确的时候 return -1：</p></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line"> }</span><br><span class="line"> <span class="comment">// target 比所有数都大</span></span><br><span class="line"> <span class="keyword">if</span> (left == nums.length) <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line"> <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line"> <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br></pre></td></tr></tbody></table></figure></li><li><p>为什么 left = mid + 1，right = mid ？和之前的算法不一样？</p></li></ol><ul><li>答：这个很好解释，因为我们的「搜索区间」是 [left, right) 左闭右开，所以当 nums[mid] 被检测之后，下一步的搜索区间应该去掉 mid 分割成两个区间，即 <code>[left, mid) 或 [mid + 1, right)</code>。(mid已被被搜索判断)</li></ul><ol start="4"><li><p>为什么该算法能够搜索左侧边界？</p><ul><li>答：关键在于对于 nums[mid] == target 这种情况的处理：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">     right = mid;</span><br></pre></td></tr></tbody></table></figure><ul><li>可见，<u>找到 target 时<code>不要立即返回</code>，而是<code>缩小「搜索区间」的上界 right</code>，在区间 [left, mid) 中<code>继续搜索</code>，即<code>不断向左收缩</code>，达到<code>锁定左侧边界</code>的目的</u>。</li></ul></li><li><p>为什么返回 left 而不是 right？</p><ul><li>答：返回left和right都是一样的，因为 while 终止的条件是 left == right。</li></ul></li><li><p>经测试， 两种写法返回值完全一致</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二分法细节 &lt;写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> right = nums.<span class="built_in">size</span>(); <span class="comment">// 注意</span></span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt; right) { <span class="comment">// 注意</span></span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      right = mid;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid; <span class="comment">// 注意</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left;    //返回&gt;=target的左边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回第一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == nums.<span class="built_in">size</span>())</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line">                 <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line">    <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line"><span class="comment">//&lt;= 写法 完全一致</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">left_bound2</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> right = nums.<span class="built_in">size</span>() - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt;= right) { <span class="comment">// 注意</span></span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      right = mid - <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left; //返回&gt;=target的左边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回第一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == nums.<span class="built_in">size</span>())</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//[1,2,2,4]搜索8返回left 4，越界</span></span><br><span class="line">                 <span class="comment">// 类似之前算法的处理方式</span></span><br><span class="line">    <span class="keyword">return</span> nums[left] == target ? left : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="四、寻找右侧边界的二分查找"><a href="#四、寻找右侧边界的二分查找" class="headerlink" title="**四、寻找右侧边界的二分查找 **"></a>**四、寻找右侧边界的二分查找 **</h2><p>==//&gt; target的第一个位置==</p><p>寻找右侧边界和寻找左侧边界的代码差不多，只有两处不同，已标注：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">   <span class="keyword">if</span> (nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">     <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">       left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">       left = mid + <span class="number">1</span>;</span><br><span class="line">     } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">       right = mid;</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> left - <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li><p>为什么这个算法能够找到右侧边界？</p><ul><li>答：类似地，关键点还是这里：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">    left = mid + <span class="number">1</span>;     <span class="comment">//与模板对应一致</span></span><br></pre></td></tr></tbody></table></figure><ul><li>当 nums[mid] == target 时，不要立即返回，而是增大「搜索区间」的下界 left，使得区间不断向右收缩，达到锁定右侧边界的目的。</li></ul></li><li><p>为什么最后返回 ==left - 1== 而不像左侧边界的函数，返回 left？而且我觉得这里既然是搜索右侧边界，应该返回 right 才对。</p><ul><li><p>答：首先，while 循环的终止条件是 left == right，所以 left 和 right 是一样的，你非要体现右侧的特点，返回 right - 1 好了。  </p><blockquote><p>  target = 2</p><p>pos:            left                        mid      mid+1     right</p><p>nums:          1             2             2            4</p><p>index:          0             1             2            3             4</p></blockquote></li><li><p>==至于为什么要减一，这是搜索右侧边界的一个特殊点，关键在这个条件判断==：</p></li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">     left = mid + <span class="number">1</span>;</span><br><span class="line">     <span class="comment">// 这样想: mid = left - 1</span></span><br></pre></td></tr></tbody></table></figure><ul><li>因为我们对 left 的更新必须是 left = mid + 1，就是说 while 循环结束时，nums[left] <strong>==一定不等于==</strong> target 了，而 nums[left - 1]<strong>可能是</strong>target。</li><li>至于为什么 left 的更新必须是 left = mid + 1，同左侧边界搜索，就不再赘述。</li></ul></li><li><p>为什么没有返回 -1 的操作？如果 nums 中不存在 target 这个值，怎么办？</p><ul><li>答：类似之前的左侧边界搜索，因为 while 的终止条件是 left == right，就是说 left 的取值范围是 [0, nums.length]，所以可以添加两行代码，正确地返回 -1：</li></ul><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (left == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line"><span class="keyword">return</span> nums[left<span class="number">-1</span>] == target ? (left<span class="number">-1</span>) : <span class="number">-1</span>;</span><br></pre></td></tr></tbody></table></figure></li><li><p>经测试，左闭右闭的写法也可以 这点<a href="https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/">剑指 Offer 53 - I. 在排序数组中查找数字 I</a>可以佐证</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二分法细节 查找右边界</span></span><br><span class="line"><span class="comment">//&lt;写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt; right) {</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left - 1; //返回&gt;=target的右边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回最后一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line">    <span class="keyword">return</span> nums[left - <span class="number">1</span>] == target ? (left - <span class="number">1</span>) : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">   </span><br><span class="line"><span class="comment">//&lt;=写法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">right_bound2</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] == target) {</span><br><span class="line">      left = mid + <span class="number">1</span>; <span class="comment">// 注意</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target) {</span><br><span class="line">      left = mid + <span class="number">1</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) {</span><br><span class="line">      right = mid - <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// return left - 1; //返回&gt;=target的右边界位置 [0,nums.size()]</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 返回最后一个target的位置 没有则返回-1；</span></span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">if</span> (left == <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//这个例子搜索0 就是返回left 0</span></span><br><span class="line">    <span class="keyword">return</span> nums[left - <span class="number">1</span>] == target ? (left - <span class="number">1</span>) : <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="五、最后总结"><a href="#五、最后总结" class="headerlink" title="五、最后总结"></a><strong>五、最后总结</strong></h2><p>先来梳理一下这些细节差异的因果逻辑：</p><ol><li><p>第一个，最基本的二分查找算法：</p><blockquote><p>因为我们初始化 right = nums.length - 1<br>所以决定了我们的「搜索区间」是 [left, right]<br>所以决定了 while (left &lt;= right)<br>同时也决定了 left = mid+1 和 right = mid-1</p><p>因为我们只需找到一个 target 的索引即可<br>所以当 nums[mid] == target 时可以立即返回</p></blockquote></li><li><p>第二个，寻找左侧边界的二分查找：</p><blockquote><p>因为我们初始化 right = nums.length<br>所以决定了我们的「搜索区间」是 [left, right)<br>所以决定了 while (left &lt; right)<br>同时也决定了 left = mid+1 和 right = mid</p><p>因为我们需找到 target 的最左侧索引<br>所以当 nums[mid] == target 时不要立即返回<br>而要收紧右侧边界以锁定左侧边界</p></blockquote></li><li><p>第三个，寻找右侧边界的二分查找：</p><blockquote><p>因为我们初始化 right = nums.length<br>所以决定了我们的「搜索区间」是 [left, right)<br>所以决定了 while (left &lt; right)<br>同时也决定了 left = mid+1 和 right = mid</p><p>因为我们需找到 target 的最右侧索引<br>所以当 nums[mid] == target 时不要立即返回<br>而要收紧左侧边界以锁定右侧边界</p><p>又因为收紧左侧边界时必须 left = mid + 1<br>所以最后无论返回 left 还是 right，必须减一</p></blockquote></li></ol><ul><li>分析二分查找代码时，不要出现 else，全部展开成 else if 方便理解。</li></ul><ul><li>注意「搜索区间」和 while 的终止条件，如果存在漏掉的元素，记得在最后检查。</li><li>如需要搜索左右边界，只要在 nums[mid] == target 时做修改即可。搜索右侧时需要减一。</li></ul><h1 id="二分题目"><a href="#二分题目" class="headerlink" title="二分题目"></a>二分题目</h1><h3 id="剑指-Offer-II-068-查找插入位置"><a href="#剑指-Offer-II-068-查找插入位置" class="headerlink" title="剑指 Offer II 068. 查找插入位置"></a><a href="https://leetcode-cn.com/problems/N6YdxV/">剑指 Offer II 068. 查找插入位置</a></h3><p>难度简单13英文版讨论区</p><p>给定一个排序的整数数组 <code>nums</code> 和一个整数目标值<code> target</code> ，请在数组中找到 <code>target </code>，并返回其下标。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>请必须使用时间复杂度为 <code>O(log n)</code> 的算法。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 5</span><br><span class="line">输出: 2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 2</span><br><span class="line">输出: 1</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>这是一道典型的找左边界的题目</p><p>两种二分法都可以 左边界在于 缩小右边界</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><ol><li>两端闭区间写法<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target){</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            }<span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    }</span><br><span class="line">}; </span><br></pre></td></tr></tbody></table></figure></li><li>左闭右开<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = n;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - lefqt) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target){</span><br><span class="line">                right = mid;</span><br><span class="line">            }<span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    }</span><br><span class="line">}; </span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="剑指-Offer-53-I-在排序数组中查找数字-I"><a href="#剑指-Offer-53-I-在排序数组中查找数字-I" class="headerlink" title="剑指 Offer 53 - I. 在排序数组中查找数字 I"></a><a href="https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/">剑指 Offer 53 - I. 在排序数组中查找数字 I</a></h3><p>难度简单288收藏分享切换为英文接收动态反馈</p><p>统计一个数字在排序数组中出现的次数。</p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol><li>查找左边界 向右数 (两种写法均可)</li><li>查找右边界 向左数 （<u>注意 只有左闭右开写法可以 另一种不行</u>）</li></ol><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [5,7,7,8,8,10], target = 8</span><br><span class="line">输出: 2</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><ol><li>左边界 左闭右闭写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target)</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        <span class="keyword">while</span>(left &lt;= nums.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left++;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>左边界 左闭右开写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt;= target)</span><br><span class="line">                right = mid;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        <span class="keyword">while</span>(left &lt;= nums.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left++;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>右边界 左开右闭写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">                right = mid;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        left--;  <span class="comment">//注意 右边界搜索的特性 必须-1</span></span><br><span class="line">        <span class="keyword">while</span>(left &gt;=<span class="number">0</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left--;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>右边界 左闭右开写法</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right){</span><br><span class="line">            <span class="keyword">int</span> mid = (right - left) / <span class="number">2</span> + left;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        } </span><br><span class="line">        left--;   <span class="comment">//注意 右边界搜索的特性 必须-1</span></span><br><span class="line">        <span class="keyword">while</span>(left &gt;=<span class="number">0</span> &amp;&amp; nums[left] == target){</span><br><span class="line">            left--;</span><br><span class="line">            ans++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法</title>
      <link href="/2022/03/15/pai-xu-suan-fa/"/>
      <url>/2022/03/15/pai-xu-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h1><h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><p><a href="https://wiki.jikexueyuan.com/project/easy-learn-algorithm/bucket-sort.html">桶排序</a>是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。为了使桶排序更加高效，我们需要做到这两点：</p><ol><li>在额外空间充足的情况下，尽量增大桶的数量</li><li>使用的映射函数能够将输入的 N 个数据均匀的分配到 K 个桶中</li></ol><p>同时，对于桶中元素的排序，选择何种比较排序算法对于性能的影响至关重要。</p><h3 id="1-什么时候最快"><a href="#1-什么时候最快" class="headerlink" title="1. 什么时候最快"></a>1. 什么时候最快</h3><p>当输入的数据可以均匀的分配到每一个桶中。</p><h3 id="2-什么时候最慢"><a href="#2-什么时候最慢" class="headerlink" title="2. 什么时候最慢"></a>2. 什么时候最慢</h3><p>当输入的数据被分配到了同一个桶中。</p><h3 id="3-示意图"><a href="#3-示意图" class="headerlink" title="3. 示意图"></a>3. 示意图</h3><p>元素分布在桶中：</p><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/Bucket_sort_1.svg_.png" alt="img"></p><p>然后，元素在每个桶中排序：</p><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/Bucket_sort_2.svg_.png" alt="img"></p><p>代码：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iterator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUCKET_NUM = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>{</span></span><br><span class="line">        <span class="function"><span class="keyword">explicit</span> <span class="title">ListNode</span><span class="params">(<span class="keyword">int</span> i=<span class="number">0</span>)</span>:mData(i),mNext(NULL){</span>}</span><br><span class="line">        ListNode* mNext;</span><br><span class="line">        <span class="keyword">int</span> mData;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//有序链表插入val</span></span><br><span class="line"><span class="function">ListNode* <span class="title">insert</span><span class="params">(ListNode* head,<span class="keyword">int</span> val)</span></span>{</span><br><span class="line">        ListNode dummyNode;</span><br><span class="line">        ListNode *newNode = <span class="keyword">new</span> <span class="built_in">ListNode</span>(val);</span><br><span class="line">        ListNode *pre,*curr;</span><br><span class="line">        dummyNode.mNext = head;</span><br><span class="line">        pre = &amp;dummyNode;</span><br><span class="line">        curr = head;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">NULL</span>!=curr &amp;&amp; curr-&gt;mData&lt;=val){</span><br><span class="line">                pre = curr;</span><br><span class="line">                curr = curr-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">        newNode-&gt;mNext = curr;  <span class="comment">//插入val</span></span><br><span class="line">        pre-&gt;mNext = newNode;  <span class="comment">//拼接</span></span><br><span class="line">        <span class="keyword">return</span> dummyNode.mNext;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//合并两个有序链表</span></span><br><span class="line"><span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode *head1,ListNode *head2)</span></span>{</span><br><span class="line">        ListNode dummyNode;</span><br><span class="line">        ListNode *dummy = &amp;dummyNode;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">NULL</span>!=head1 &amp;&amp; <span class="literal">NULL</span>!=head2){</span><br><span class="line">                <span class="keyword">if</span>(head1-&gt;mData &lt;= head2-&gt;mData){</span><br><span class="line">                        dummy-&gt;mNext = head1;</span><br><span class="line">                        head1 = head1-&gt;mNext;</span><br><span class="line">                }<span class="keyword">else</span>{</span><br><span class="line">                        dummy-&gt;mNext = head2;</span><br><span class="line">                        head2 = head2-&gt;mNext;</span><br><span class="line">                }</span><br><span class="line">                dummy = dummy-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>!=head1) dummy-&gt;mNext = head1;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>!=head2) dummy-&gt;mNext = head2;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">return</span> dummyNode.mNext;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BucketSort</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> arr[])</span></span>{</span><br><span class="line">        <span class="function">vector&lt;ListNode*&gt; <span class="title">buckets</span><span class="params">(BUCKET_NUM,(ListNode*)(<span class="number">0</span>))</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i){</span><br><span class="line">                <span class="keyword">int</span> index = arr[i]/BUCKET_NUM;</span><br><span class="line">                ListNode *head = buckets.<span class="built_in">at</span>(index);</span><br><span class="line">                buckets.<span class="built_in">at</span>(index) = <span class="built_in">insert</span>(head,arr[i]);</span><br><span class="line">        }</span><br><span class="line">        ListNode *head = buckets.<span class="built_in">at</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;BUCKET_NUM;++i){</span><br><span class="line">                head = <span class="built_in">Merge</span>(head,buckets.<span class="built_in">at</span>(i));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i){</span><br><span class="line">                arr[i] = head-&gt;mData;</span><br><span class="line">                head = head-&gt;mNext;</span><br><span class="line">        }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p>冒泡排序（Bubble Sort）也是一种简单直观的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢”浮”到数列的顶端。</p><p>作为最简单的排序算法之一，冒泡排序给我的感觉就像 Abandon 在单词书里出现的感觉一样，每次都在第一页第一位，所以最熟悉。冒泡排序还有一种优化算法，就是立一个 flag，当在一趟序列遍历中元素没有发生交换，则证明该序列已经有序。但这种改进对于提升性能来</p><p>说并没有什么太大作用。</p><h3 id="1-算法步骤"><a href="#1-算法步骤" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</p><p>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。</p><p>针对所有的元素重复以上的步骤，除了最后一个。</p><p>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p><h3 id="2-动图演示"><a href="#2-动图演示" class="headerlink" title="2. 动图演示"></a>2. 动图演示</h3><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/bubbleSort.gif" alt="img"></p><p>每次遍历都会把极大值固定在最右侧，所以不需要完整的两个for</p><h3 id="3-什么时候最快"><a href="#3-什么时候最快" class="headerlink" title="3. 什么时候最快"></a>3. 什么时候最快</h3><p>当输入的数据已经是正序时（都已经是正序了，我还要你冒泡排序有何用啊）。</p><h3 id="4-什么时候最慢"><a href="#4-什么时候最慢" class="headerlink" title="4. 什么时候最慢"></a>4. 什么时候最慢</h3><p>当输入的数据是反序时（写一个 for 循环反序输出数据不就行了，干嘛要用你冒泡排序呢，我是闲的吗）。</p><h3 id="5-代码"><a href="#5-代码" class="headerlink" title="5. 代码"></a>5. 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">//整数或浮点数皆可使用,若要使用类(class)或结构体(struct)时必须重载大于(&gt;)运算符</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubble_sort</span><span class="params">(T arr[], <span class="keyword">int</span> len)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">                        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">                                <span class="built_in">swap</span>(arr[j], arr[j + <span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> arr[] = { <span class="number">61</span>, <span class="number">17</span>, <span class="number">29</span>, <span class="number">22</span>, <span class="number">34</span>, <span class="number">60</span>, <span class="number">72</span>, <span class="number">21</span>, <span class="number">50</span>, <span class="number">1</span>, <span class="number">62</span> };</span><br><span class="line">        <span class="keyword">int</span> len = (<span class="keyword">int</span>) <span class="built_in"><span class="keyword">sizeof</span></span>(arr) / <span class="built_in"><span class="keyword">sizeof</span></span>(*arr);</span><br><span class="line">        <span class="built_in">bubble_sort</span>(arr, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                cout &lt;&lt; arr[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">float</span> arrf[] = { <span class="number">17.5</span>, <span class="number">19.1</span>, <span class="number">0.6</span>, <span class="number">1.9</span>, <span class="number">10.5</span>, <span class="number">12.4</span>, <span class="number">3.8</span>, <span class="number">19.7</span>, <span class="number">1.5</span>, <span class="number">25.4</span>, <span class="number">28.6</span>, <span class="number">4.4</span>, <span class="number">23.8</span>, <span class="number">5.4</span> };</span><br><span class="line">        len = (<span class="keyword">float</span>) <span class="built_in"><span class="keyword">sizeof</span></span>(arrf) / <span class="built_in"><span class="keyword">sizeof</span></span>(*arrf);</span><br><span class="line">        <span class="built_in">bubble_sort</span>(arrf, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                cout &lt;&lt; arrf[i] &lt;&lt; <span class="string">' '</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><h3 id="1-算法步骤-1"><a href="#1-算法步骤-1" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><ol><li>从数列中挑出一个元素，称为 “基准”（pivot）;</li><li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</li><li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序；</li></ol><h3 id="2-动图演示-1"><a href="#2-动图演示-1" class="headerlink" title="2. 动图演示"></a>2. <a href="https://www.bilibili.com/video/BV1at411T75o">动图演示</a></h3><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/quickSort.gif" alt="img"></p><h3 id="3-代码-（二叉树的前序遍历）"><a href="#3-代码-（二叉树的前序遍历）" class="headerlink" title="3. 代码 （二叉树的前序遍历）"></a>3. 代码 （二叉树的前序遍历）</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分割函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Paritition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">    <span class="keyword">int</span> pivot = A[low];</span><br><span class="line">    <span class="keyword">while</span>(low&lt;high){</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high &amp;&amp; A[high] &gt;= pivot)</span><br><span class="line">            --high;  <span class="comment">//从右向左查找到第一个小于pivot的坐标</span></span><br><span class="line">        A[low] = A[high];</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high &amp;&amp; A[low] &lt;= pivot)</span><br><span class="line">            ++low;   <span class="comment">//从左向右查找到第一个大于pivot的坐标</span></span><br><span class="line">        A[high] = A[low];</span><br><span class="line">    }</span><br><span class="line">    A[low] = pivot; <span class="comment">//拿走的值返还 放到排序的位置</span></span><br><span class="line">    <span class="keyword">return</span> low;   <span class="comment">//返回的是一个位置</span></span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 洗牌算法，将输入的数组随机打乱 避免极端情况</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span></span>{</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> r = i + <span class="built_in">rand</span>()%(nums.<span class="built_in">size</span>() - i)</span><br><span class="line">            </span><br><span class="line">        <span class="built_in">swap</span>(nums[i], nums[r]);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//快排母函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(low&lt;high){</span><br><span class="line">        <span class="keyword">int</span> pivot = <span class="built_in">Paritition</span>(A, low, high);</span><br><span class="line">        <span class="built_in">quickSort</span>(A, low, pivot<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">quickSort</span>(A, pivot+<span class="number">1</span>, high);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="215-数组中的第K个最大元素"><a href="#215-数组中的第K个最大元素" class="headerlink" title="215. 数组中的第K个最大元素"></a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第K个最大元素</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=215&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/#">思路</a></p><p>难度中等1553</p><p>给定整数数组 <code>nums</code> 和整数 <code>k</code>，请返回数组中第 <code>**k**</code> 个最大的元素。</p><p>请注意，你需要找的是数组排序后的第 <code>k</code> 个最大的元素，而不是第 <code>k</code> 个不同的元素。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,2,1,5,6,4] 和 k = 2</span><br><span class="line">输出: 5</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [3,2,3,1,2,4,5,5,6] 和 k = 4</span><br><span class="line">输出: 4</span><br></pre></td></tr></tbody></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= k &lt;= nums.length &lt;= 104</code></li><li><code>-104 &lt;= nums[i] &lt;= 104</code></li></ul><p>思路： </p><ol><li>快速排序  洗牌算法打乱原数组</li><li>明确排序区间 分治 以及 及时返回</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//快速排序</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//分割函数</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Paritition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> pivot = A[low];</span><br><span class="line">        <span class="keyword">while</span>(low&lt;high){</span><br><span class="line">            <span class="keyword">while</span>(low&lt;high &amp;&amp; A[high] &gt;= pivot)</span><br><span class="line">                --high;</span><br><span class="line">            A[low] = A[high];</span><br><span class="line">            <span class="keyword">while</span>(low&lt;high &amp;&amp; A[low] &lt;= pivot)</span><br><span class="line">                ++low;</span><br><span class="line">            A[high] = A[low];</span><br><span class="line">        }</span><br><span class="line">        A[low] = pivot;  <span class="comment">//拿走的值返还 放到排序的位置</span></span><br><span class="line">        <span class="keyword">return</span> low;  <span class="comment">//返回的是一个位置</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(low&lt;high){</span><br><span class="line">            <span class="keyword">int</span> pivot = <span class="built_in">Paritition</span>(A, low, high);</span><br><span class="line">            <span class="comment">//注意 每一次快排都会确定一个位置，位置满足时，直接返回</span></span><br><span class="line">            <span class="keyword">if</span>(pivot == A.<span class="built_in">size</span>()-k) </span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//优化排序区间 有点类似于二分查找了</span></span><br><span class="line">            <span class="keyword">if</span>(pivot&gt;= A.<span class="built_in">size</span>() - k)</span><br><span class="line">                <span class="built_in">quickSort</span>(A, low, pivot<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">quickSort</span>(A, pivot+<span class="number">1</span>, high);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k;</span><br><span class="line">        <span class="built_in">shuffle</span>(nums);</span><br><span class="line">        <span class="built_in">quickSort</span>(nums, <span class="number">0</span>, nums.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span> nums[nums.<span class="built_in">size</span>()-k];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 洗牌算法，将输入的数组随机打乱 避免极端情况</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span></span>{</span><br><span class="line">        <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">int</span> r = i + <span class="built_in">rand</span>()%(nums.<span class="built_in">size</span>() - i);</span><br><span class="line">            <span class="built_in">swap</span>(nums[i], nums[r]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p>归并排序（Merge sort）是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。</p><p>作为一种典型的分而治之思想的算法应用，归并排序的实现由两种方法：</p><ul><li>自上而下的递归（所有递归的方法都可以用迭代重写，所以就有了第 2 种方法）；</li><li>自下而上的迭代；</li></ul><p>在《数据结构与算法 JavaScript 描述》中，作者给出了自下而上的迭代方法。但是对于递归法，作者却认为：</p><blockquote><p>However, it is not possible to do so in JavaScript, as the recursion goes too deep for the language to handle.</p><p>然而，在 JavaScript 中这种方式不太可行，因为这个算法的递归深度对它来讲太深了。</p></blockquote><p>说实话，我不太理解这句话。意思是 JavaScript 编译器内存太小，递归太深容易造成内存溢出吗？还望有大神能够指教。</p><p>和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是 O(nlogn) 的时间复杂度。代价是需要额外的内存空间。</p><h3 id="1-算法步骤-2"><a href="#1-算法步骤-2" class="headerlink" title="1. 算法步骤"></a>1. 算法步骤</h3><ol><li>申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列；</li><li>设定两个指针，最初位置分别为两个已经排序序列的起始位置；</li><li>比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置；</li><li>重复步骤 3 直到某一指针达到序列尾；</li><li>将另一序列剩下的所有元素直接复制到合并序列尾。</li></ol><h3 id="2-动图演示-2"><a href="#2-动图演示-2" class="headerlink" title="2. 动图演示"></a>2. 动图演示</h3><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/mergeSort.gif" alt="img"></p><h3 id="3-代码-（二叉树的后序遍历）"><a href="#3-代码-（二叉树的后序遍历）" class="headerlink" title="3. 代码 （二叉树的后序遍历）"></a>3. 代码 （二叉树的后序遍历）</h3><p>迭代：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">// 整數或浮點數皆可使用,若要使用物件(class)時必須設定"小於"(&lt;)的運算子功能</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(T arr[], <span class="keyword">int</span> len)</span> </span>{</span><br><span class="line">    T *a = arr;</span><br><span class="line">    T *b = <span class="keyword">new</span> T[len];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> seg = <span class="number">1</span>; seg &lt; len; seg += seg) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>; start &lt; len; start += seg + seg) {</span><br><span class="line">            <span class="keyword">int</span> low = start, mid = <span class="built_in">min</span>(start + seg, len), high = <span class="built_in">min</span>(start + seg + seg, len);</span><br><span class="line">            <span class="keyword">int</span> k = low;</span><br><span class="line">            <span class="keyword">int</span> start1 = low, end1 = mid;</span><br><span class="line">            <span class="keyword">int</span> start2 = mid, end2 = high;</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1 &amp;&amp; start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start1] &lt; a[start2] ? a[start1++] : a[start2++];</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1)</span><br><span class="line">                b[k++] = a[start1++];</span><br><span class="line">            <span class="keyword">while</span> (start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start2++];</span><br><span class="line">        }</span><br><span class="line">        T *temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (a != arr) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            b[i] = a[i];</span><br><span class="line">        b = a;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">delete</span>[] b;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>递归：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, l, mid);</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, mid + <span class="number">1</span>, r);</span><br><span class="line">        <span class="keyword">int</span> i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r) {</span><br><span class="line">            <span class="keyword">if</span> (nums[i] &lt;= nums[j]) {</span><br><span class="line">                tmp[cnt++] = nums[i++];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line">                tmp[cnt++] = nums[j++];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) {</span><br><span class="line">            tmp[cnt++] = nums[i++];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= r) {</span><br><span class="line">            tmp[cnt++] = nums[j++];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; r - l + <span class="number">1</span>; ++i) {</span><br><span class="line">            nums[i + l] = tmp[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">sortArray</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        tmp.<span class="built_in">resize</span>((<span class="keyword">int</span>)nums.<span class="built_in">size</span>(), <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">mergeSort</span>(nums, <span class="number">0</span>, (<span class="keyword">int</span>)nums.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> nums;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前缀和/差分/字典树</title>
      <link href="/2022/03/15/xiao-suan-fa/"/>
      <url>/2022/03/15/xiao-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="前缀和数组"><a href="#前缀和数组" class="headerlink" title="前缀和数组"></a>前缀和数组</h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrefixSum</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// 前缀和数组</span></span><br><span class="line">  vector&lt;<span class="keyword">int</span>&gt; prefix;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/* 输入一个数组，构造前缀和 */</span></span><br><span class="line">  <span class="built_in">PrefixSum</span>(vector&lt;<span class="keyword">int</span>&gt; nums) {</span><br><span class="line">    <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    prefix.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 计算 nums 的累加和</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">      prefix[i] = prefix[i - <span class="number">1</span>] + nums[i - <span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 查询闭区间 [i, j] 的累加和 */</span></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> prefix[j + <span class="number">1</span>] - prefix[i];</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="一维数组中的前缀和"><a href="#一维数组中的前缀和" class="headerlink" title="一维数组中的前缀和"></a>一维数组中的前缀和</h2><h3 id="303-区域和检索-数组不可变"><a href="#303-区域和检索-数组不可变" class="headerlink" title="303. 区域和检索 - 数组不可变"></a><a href="https://leetcode-cn.com/problems/range-sum-query-immutable/">303. 区域和检索 - 数组不可变</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=303&amp;target=gitee&amp;_=1646830143357">labuladong 题解</a><a href="https://leetcode-cn.com/problems/range-sum-query-immutable/#">思路</a></p><p>给定一个整数数组  <code>nums</code>，处理以下类型的多个查询:</p><ol><li>计算索引 <code>left</code> 和 <code>right</code> （包含 <code>left</code> 和 <code>right</code>）之间的 <code>nums</code> 元素的 <strong>和</strong> ，其中 <code>left &lt;= right</code></li></ol><p>实现 <code>NumArray</code> 类：</p><ul><li><code>NumArray(int[] nums)</code> 使用数组 <code>nums</code> 初始化对象</li><li><code>int sumRange(int i, int j)</code> 返回数组 <code>nums</code> 中索引 <code>left</code> 和 <code>right</code> 之间的元素的 <strong>总和</strong> ，包含 <code>left</code> 和 <code>right</code> 两点（也就是 <code>nums[left] + nums[left + 1] + ... + nums[right]</code> )</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">["NumArray", "sumRange", "sumRange", "sumRange"]</span><br><span class="line">[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]</span><br><span class="line">输出：</span><br><span class="line">[null, 1, -1, -3]</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">NumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);</span><br><span class="line">numArray.sumRange(0, 2); // return 1 ((-2) + 0 + 3)</span><br><span class="line">numArray.sumRange(2, 5); // return -1 (3 + (-5) + 2 + (-1)) </span><br><span class="line">numArray.sumRange(0, 5); // return -3 ((-2) + 0 + 3 + (-5) + 2 + (-1))</span><br></pre></td></tr></tbody></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; preSum;</span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      preSum.<span class="built_in">resize</span>(nums.<span class="built_in">size</span>());</span><br><span class="line">      <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        sum+=nums[i];</span><br><span class="line">        preSum[i] = sum;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> left == <span class="number">0</span>?preSum[right]:(preSum[right] - preSum[left<span class="number">-1</span>]);</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单写法, 避免边界判断</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; preSum;</span><br><span class="line">    <span class="built_in">NumArray</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">      preSum.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n+<span class="number">1</span>; i++){</span><br><span class="line">        preSum[i] = preSum[i<span class="number">-1</span>] + nums[i<span class="number">-1</span>];</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> preSum[right+<span class="number">1</span>] - preSum[left];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="二维数组中的前缀和"><a href="#二维数组中的前缀和" class="headerlink" title="二维数组中的前缀和"></a>二维数组中的前缀和</h2><h3 id="304-二维区域和检索-矩阵不可变"><a href="#304-二维区域和检索-矩阵不可变" class="headerlink" title="304. 二维区域和检索 - 矩阵不可变"></a><a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/">304. 二维区域和检索 - 矩阵不可变</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=304&amp;target=gitee&amp;_=1646830216742">labuladong 题解</a><a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/#">思路</a></p><p>给定一个二维矩阵 <code>matrix</code>，以下类型的多个请求：</p><ul><li>计算其子矩形范围内元素的总和，该子矩阵的 <strong>左上角</strong> 为 <code>(row1, col1)</code> ，<strong>右下角</strong> 为 <code>(row2, col2)</code> 。</li></ul><p>实现 <code>NumMatrix</code> 类：</p><ul><li><code>NumMatrix(int[][] matrix)</code> 给定整数矩阵 <code>matrix</code> 进行初始化</li><li><code>int sumRegion(int row1, int col1, int row2, int col2)</code> 返回 <strong>左上角</strong> <code>(row1, col1)</code> 、<strong>右下角</strong> <code>(row2, col2)</code> 所描述的子矩阵的元素 <strong>总和</strong> 。</li></ul><p><strong>示例 1：</strong></p><p><img src="https://pic.leetcode-cn.com/1626332422-wUpUHT-image.png" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输入: </span><br><span class="line">["NumMatrix","sumRegion","sumRegion","sumRegion"]</span><br><span class="line">[[[[3,0,1,4,2],[5,6,3,2,1],[1,2,0,1,5],[4,1,0,1,7],[1,0,3,0,5]]],[2,1,4,3],[1,1,2,2],[1,2,2,4]]</span><br><span class="line">输出: </span><br><span class="line">[null, 8, 11, 12]</span><br><span class="line"></span><br><span class="line">解释:</span><br><span class="line">NumMatrix numMatrix = new NumMatrix([[3,0,1,4,2],[5,6,3,2,1],[1,2,0,1,5],[4,1,0,1,7],[1,0,3,0,5]]);</span><br><span class="line">numMatrix.sumRegion(2, 1, 4, 3); // return 8 (红色矩形框的元素总和)</span><br><span class="line">numMatrix.sumRegion(1, 1, 2, 2); // return 11 (绿色矩形框的元素总和)</span><br><span class="line">numMatrix.sumRegion(1, 2, 2, 4); // return 12 (蓝色矩形框的元素总和)</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//笨比前缀和</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumMatrix</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; preSum;</span><br><span class="line">    <span class="built_in">NumMatrix</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix) {</span><br><span class="line">      <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">int</span> n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;n+<span class="number">1</span>; j++){</span><br><span class="line">          temp[j] = temp[j<span class="number">-1</span>] + matrix[i][j<span class="number">-1</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        preSum.<span class="built_in">push_back</span>(temp);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRegion</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> col1, <span class="keyword">int</span> row2, <span class="keyword">int</span> col2)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> minRow = <span class="built_in">min</span>(row1, row2);</span><br><span class="line">      <span class="keyword">int</span> maxRow = <span class="built_in">max</span>(row1, row2);</span><br><span class="line">      <span class="keyword">int</span> minCol = <span class="built_in">min</span>(col1, col2);</span><br><span class="line">      <span class="keyword">int</span> maxCol = <span class="built_in">max</span>(col1, col2);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = minRow; i&lt;= maxRow; i++){</span><br><span class="line">        ans += preSum[i][maxCol+<span class="number">1</span>] - preSum[i][minCol];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//真正的二维前缀和数组</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumMatrix</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; preSum;</span><br><span class="line">    <span class="built_in">NumMatrix</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix) {</span><br><span class="line">      <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">      <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">int</span> n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">      preSum.<span class="built_in">resize</span>(m+<span class="number">1</span>, vector&lt;<span class="keyword">int</span>&gt;(n+<span class="number">1</span>));</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=m; i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;=n; j++){</span><br><span class="line">          preSum[i][j] = preSum[i<span class="number">-1</span>][j] + preSum[i][j<span class="number">-1</span>] - preSum[i<span class="number">-1</span>][j<span class="number">-1</span>] + matrix[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//速记 前缀和做减法的时候 永远是大的那边需要+1</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRegion</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> col1, <span class="keyword">int</span> row2, <span class="keyword">int</span> col2)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> preSum[row2 + <span class="number">1</span>][col2 + <span class="number">1</span>] - preSum[row1][col2+<span class="number">1</span>] -preSum[row2+<span class="number">1</span>][col1]  + preSum[row1][col1];</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="和为-k-的子数组"><a href="#和为-k-的子数组" class="headerlink" title="和为 k 的子数组"></a>和为 k 的子数组</h3><h3 id="560-和为-K-的子数组"><a href="#560-和为-K-的子数组" class="headerlink" title="560. 和为 K 的子数组"></a><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/">560. 和为 K 的子数组</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=560&amp;target=gitee&amp;_=1646835188259">labuladong 题解</a><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/#">思路</a></p><p>给你一个整数数组 <code>nums</code> 和一个整数 <code>k</code> ，请你统计并返回该数组中和为 <code>k</code> 的连续子数组的个数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,1], k = 2</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3], k = 3</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//笨比的前缀和用法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">preSum</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">        preSum[i] = preSum[i<span class="number">-1</span>] + nums[i<span class="number">-1</span>];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;=n; i++){</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j&lt;=n; j++){</span><br><span class="line">          <span class="keyword">if</span>(preSum[j] - preSum[i] == k){</span><br><span class="line">            ans++;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>; start &lt; nums.<span class="built_in">size</span>(); ++start) {</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> end = start; end &gt;= <span class="number">0</span>; --end) {</span><br><span class="line">                sum += nums[end];</span><br><span class="line">                <span class="keyword">if</span> (sum == k) {</span><br><span class="line">                    count++;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//前缀和的最优解</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">subarraySum</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapp;</span><br><span class="line">        mapp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); ++i) {</span><br><span class="line">          sum+=nums[i];</span><br><span class="line">          <span class="keyword">int</span> cc = mapp[sum-k];</span><br><span class="line">          count+=cc;</span><br><span class="line">          mapp[sum]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h1 id="差分数组"><a href="#差分数组" class="headerlink" title="差分数组"></a>差分数组</h1><p><strong>差分数组的主要适用场景是频繁对原始数组的某个区间的元素进行增减</strong>。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 差分数组工具类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Difference</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="comment">// 差分数组</span></span><br><span class="line">  vector&lt;<span class="keyword">int</span>&gt; diff;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/* 输入一个初始数组，区间操作将在这个数组上进行 */</span></span><br><span class="line">  <span class="built_in">Difference</span>(vector&lt;<span class="keyword">int</span>&gt; nums) {</span><br><span class="line">   <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">    diff.<span class="built_in">resize</span>(n);;</span><br><span class="line">    <span class="comment">// 根据初始数组构造差分数组</span></span><br><span class="line">    diff[<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) {</span><br><span class="line">      diff[i] = nums[i] - nums[i - <span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 给闭区间 [i,j] 增加 val（可以是负数）*/</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">increment</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">    diff[i] += val;</span><br><span class="line">    <span class="keyword">if</span> (j + <span class="number">1</span> &lt; diff.length) {</span><br><span class="line">      diff[j + <span class="number">1</span>] -= val;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 返回结果数组 */</span></span><br><span class="line">  <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">result</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(diff.size())</span></span>;</span><br><span class="line">    <span class="comment">// 根据差分数组构造结果数组</span></span><br><span class="line">    res[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; diff.length; i++) </span><br><span class="line">      res[i] = res[i - <span class="number">1</span>] + diff[i]</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="370-区间加法"><a href="#370-区间加法" class="headerlink" title="370. 区间加法"></a>370. 区间加法</h3><img src="https://labuladong.gitee.io/algo/images/%e5%b7%ae%e5%88%86%e6%95%b0%e7%bb%84/title1.png" alt="img" style="zoom:50%;"><p>可以直接用刚才的套路解决</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">getModifiedArray</span><span class="params">(<span class="keyword">int</span> length, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; updates)</span> </span>{</span><br><span class="line">    <span class="comment">// nums 初始化为全 0</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">nums</span><span class="params">(length)</span></span>;</span><br><span class="line">    <span class="comment">// 构造差分解法</span></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(length)</span></span>;</span><br><span class="line">  <span class="comment">//因为初始全为0 所以不需要如下初始化</span></span><br><span class="line">  <span class="comment">//diff[0] = nums[0];</span></span><br><span class="line">  <span class="comment">//for(int i = 1; i&lt;length; i++){</span></span><br><span class="line">    <span class="comment">//  diff[i] = nums[i] - nums[i-1];</span></span><br><span class="line">    <span class="comment">//}</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> update : updates) {</span><br><span class="line">        <span class="keyword">int</span> i = update[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> j = update[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> val = update[<span class="number">2</span>];</span><br><span class="line">        diff[i]+=val;</span><br><span class="line">      <span class="keyword">if</span>(j+<span class="number">1</span>&lt;length)</span><br><span class="line">          diff[j+<span class="number">1</span>]-=val;</span><br><span class="line">    }</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;length; i++){</span><br><span class="line">ans[i] = ans[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> df.<span class="built_in">result</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="1109-航班预订统计"><a href="#1109-航班预订统计" class="headerlink" title="1109. 航班预订统计"></a><a href="https://leetcode-cn.com/problems/corporate-flight-bookings/">1109. 航班预订统计</a></h3><p><a href="https://labuladong.gitee.io/plugin-v3/?qno=1109&amp;target=gitee&amp;_=1646842649748">labuladong 题解</a><a href="https://leetcode-cn.com/problems/corporate-flight-bookings/#">思路</a></p><p>这里有 <code>n</code> 个航班，它们分别从 <code>1</code> 到 <code>n</code> 进行编号。</p><p>有一份航班预订表 <code>bookings</code> ，表中第 <code>i</code> 条预订记录 <code>bookings[i] = [firsti, lasti, seatsi]</code> 意味着在从 <code>firsti</code> 到 <code>lasti</code> （<strong>包含</strong> <code>firsti</code> 和 <code>lasti</code> ）的 <strong>每个航班</strong> 上预订了 <code>seatsi</code> 个座位。</p><p>请你返回一个长度为 <code>n</code> 的数组 <code>answer</code>，里面的元素是每个航班预定的座位总数。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入：bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5</span><br><span class="line">输出：[10,55,45,25,25]</span><br><span class="line">解释：</span><br><span class="line">航班编号        1   2   3   4   5</span><br><span class="line">预订记录 1 ：   10  10</span><br><span class="line">预订记录 2 ：       20  20</span><br><span class="line">预订记录 3 ：       25  25  25  25</span><br><span class="line">总座位数：      10  55  45  25  25</span><br><span class="line">因此，answer = [10,55,45,25,25]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">corpFlightBookings</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; bookings, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">origin</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(n)</span></span>;</span><br><span class="line">      <span class="comment">//diff不需要初始化了；</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;bookings.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> left = bookings[i][<span class="number">0</span>]<span class="number">-1</span>; <span class="comment">//nmd坑老子</span></span><br><span class="line">        <span class="keyword">int</span> right = bookings[i][<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> val = bookings[i][<span class="number">2</span>];</span><br><span class="line">        <span class="comment">//操作</span></span><br><span class="line">        diff[left] += val;</span><br><span class="line">        <span class="keyword">if</span>(right + <span class="number">1</span> &lt;n){</span><br><span class="line">          diff[right+<span class="number">1</span>]-=val;</span><br><span class="line">        } </span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// for(int i = 0; i&lt;n; i++)</span></span><br><span class="line">      <span class="comment">//   cout&lt;&lt;diff[i]&lt;&lt;endl;</span></span><br><span class="line">      ans[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;n; i++){</span><br><span class="line">        ans[i] = ans[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="1094-拼车"><a href="#1094-拼车" class="headerlink" title="1094. 拼车"></a><a href="https://leetcode-cn.com/problems/car-pooling/">1094. 拼车</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=1094&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/car-pooling/#">思路</a></p><p>假设你是一位顺风车司机，车上最初有 <code>capacity</code> 个空座位可以用来载客。由于道路的限制，车 <strong>只能</strong> 向一个方向行驶（也就是说，<strong>不允许掉头或改变方向</strong>，你可以将其想象为一个向量）。</p><p>这儿有一份乘客行程计划表 <code>trips[][]</code>，其中 <code>trips[i] = [num_passengers, start_location, end_location]</code> 包含了第 <code>i</code> 组乘客的行程信息：</p><ul><li>必须接送的乘客数量；</li><li>乘客的上车地点；</li><li>以及乘客的下车地点。</li></ul><p>这些给出的地点位置是从你的 <strong>初始</strong> 出发位置向前行驶到这些地点所需的距离（它们一定在你的行驶方向上）。</p><p>请你根据给出的行程计划表和车子的座位数，来判断你的车是否可以顺利完成接送所有乘客的任务（当且仅当你可以在所有给定的行程中接送所有乘客时，返回 <code>true</code>，否则请返回 <code>false</code>）。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：trips = [[2,1,5],[3,3,7]], capacity = 4</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：trips = [[2,1,5],[3,3,7]], capacity = 5</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">carPooling</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; trips, <span class="keyword">int</span> capacity)</span> </span>{</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">diff</span><span class="params">(<span class="number">1001</span>)</span></span>;</span><br><span class="line">      <span class="comment">//diff不用初始化</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;trips.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">int</span> left = trips[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> right = trips[i][<span class="number">2</span>] - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> val = trips[i][<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//jiajiajia</span></span><br><span class="line">        diff[left]+=val;</span><br><span class="line">        <span class="keyword">if</span>(right + <span class="number">1</span>&lt;<span class="number">1001</span>)</span><br><span class="line">          diff[right+<span class="number">1</span>] -= val;</span><br><span class="line">      }</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">1001</span>)</span></span>;</span><br><span class="line">      res[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">if</span>(res[<span class="number">0</span>]&gt;capacity) <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//不要忘记</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;<span class="number">1001</span>; i++){</span><br><span class="line">        res[i] = res[i<span class="number">-1</span>] + diff[i];</span><br><span class="line">        <span class="keyword">if</span>(res[i]&gt;capacity)</span><br><span class="line">          <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h1 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h1><h3 id="440-字典序的第K小数字"><a href="#440-字典序的第K小数字" class="headerlink" title="440. 字典序的第K小数字"></a><a href="https://leetcode-cn.com/problems/k-th-smallest-in-lexicographical-order/">440. 字典序的第K小数字</a></h3><p>难度困难450</p><p>给定整数 <code>n</code> 和 <code>k</code>，返回 <code>[1, n]</code> 中字典序第 <code>k</code> 小的数字。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 13, k = 2</span><br><span class="line">输出: 10</span><br><span class="line">解释: 字典序的排列是 [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9]，所以第二小的数字是 10。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: n = 1, k = 1</span><br><span class="line">输出: 1</span><br></pre></td></tr></tbody></table></figure><p><strong>提示:</strong></p><ul><li><code>1 &lt;= k &lt;= n &lt;= 10e9</code></li></ul><p>思路：</p><ol><li><p>主要到此题数据量较大 不然可以直接使用sort   (对string)</p></li><li><p>字典树 统计节点个数 判断向下还是向右</p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/v2-4af05d4805b7384eee3e7ab496940f75_r.jpg" alt="img" style="zoom:50%;"><ul><li>首先我们初始化 cur = 1</li><li>然后我们让 left = cur，right = cur + 1，此时 right-left 就是第一棵树第一层的节点个数</li><li>接下来 left *= 10, right *= 10，这样就进入到了第二层，此时 right-left 就是第二层的节点个数，以此类推直到 left &gt; n</li><li>但如果我们是统计 109 以内的字典序，进入第三层时，right 不能指向 200 而只能指向 109 (此时<code>right</code>也就是题目给定的范围个<code>n</code>)，<strong>此时 right-left+1 才是当前层的节点个数</strong></li></ul><p>假设我们统计完第一棵树的节点数为 node_num</p><ul><li>如果 K &gt;= node_num，我们需要继续向后查找，在后面的树中查找第 K-node_num 小的数字，也即更新 cur += 1</li><li>如果 K &lt; node_num，说明第 K 小的数字在子树中，我们需要进入子树继续向下查找，也即更新 cur *= 10</li></ul></li></ol><p>代码</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findKthNumber</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> curr = <span class="number">1</span>;</span><br><span class="line">        k--;</span><br><span class="line">        <span class="keyword">while</span>(k&gt;<span class="number">0</span>){</span><br><span class="line">            <span class="comment">//这里的left和right很巧妙的统计了下层节点的个数</span></span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> left = curr;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> right = curr + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> node_num = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 统计树中每一层的节点个数</span></span><br><span class="line">            <span class="keyword">while</span>(left&lt;=n){</span><br><span class="line">                node_num += <span class="built_in">min</span>(right, (<span class="keyword">long</span> <span class="keyword">long</span>)(n+<span class="number">1</span>)) - left;</span><br><span class="line">                left*=<span class="number">10</span>;</span><br><span class="line">                right*=<span class="number">10</span>; </span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(node_num&lt;=k){<span class="comment">// 向右查找</span></span><br><span class="line">                curr++;</span><br><span class="line">                k-=node_num;</span><br><span class="line">            }<span class="keyword">else</span>{ <span class="comment">// 进入子树查找</span></span><br><span class="line">                curr*=<span class="number">10</span>;</span><br><span class="line">                k--;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> curr;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图论</title>
      <link href="/2022/03/15/tu-lun/"/>
      <url>/2022/03/15/tu-lun/</url>
      
        <content type="html"><![CDATA[<h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><h3 id="797-所有可能的路径"><a href="#797-所有可能的路径" class="headerlink" title="797. 所有可能的路径"></a><a href="https://leetcode-cn.com/problems/all-paths-from-source-to-target/">797. 所有可能的路径</a></h3><p>难度中等262收藏分享切换为英文接收动态反馈</p><p>给你一个有 <code>n</code> 个节点的 <strong>有向无环图（DAG）</strong>，请你找出所有从节点 <code>0</code> 到节点 <code>n-1</code> 的路径并输出（<strong>不要求按特定顺序</strong>）</p><p> <code>graph[i]</code> 是一个从节点 <code>i</code> 可以访问的所有节点的列表（即从节点 <code>i</code> 到节点 <code>graph[i][j]</code>存在一条有向边）。</p><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/all_1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,2],[3],[3],[]]</span><br><span class="line">输出：[[0,1,3],[0,2,3]]</span><br><span class="line">解释：有两条路径 0 -&gt; 1 -&gt; 3 和 0 -&gt; 2 -&gt; 3</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/all_2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[4,3,1],[3,2,4],[3],[4],[]]</span><br><span class="line">输出：[[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>类似多叉树的遍历</li><li>for内for外两种写法</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="两种写法"><a href="#两种写法" class="headerlink" title="两种写法"></a>两种写法</h5><ol><li>==push pop在for外 但是最后需要pop==</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">allPathsSourceTarget</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph) {</span><br><span class="line">        <span class="built_in">traverse</span>(graph, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        path.<span class="built_in">push_back</span>(s);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(s == graph.<span class="built_in">size</span>()<span class="number">-1</span>){</span><br><span class="line">            res.<span class="built_in">push_back</span>(path);</span><br><span class="line">            path.<span class="built_in">pop_back</span>(); <span class="comment">//！</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v : graph[s]){</span><br><span class="line">            <span class="built_in">traverse</span>(graph, v);</span><br><span class="line">        }</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><u>==push pop在for内 但是第一个元素需要先压入==</u></li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">allPathsSourceTarget</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph) {</span><br><span class="line">        path.<span class="built_in">push_back</span>(<span class="number">0</span>);  <span class="comment">//!</span></span><br><span class="line">        <span class="built_in">traverse</span>(graph, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(s == graph.<span class="built_in">size</span>()<span class="number">-1</span>){</span><br><span class="line">            res.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v : graph[s]){</span><br><span class="line">            path.<span class="built_in">push_back</span>(v);</span><br><span class="line">            <span class="built_in">traverse</span>(graph, v);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a><a href="https://labuladong.gitee.io/algo/2/20/38/">拓扑排序</a></h2><h3 id="207-课程表"><a href="#207-课程表" class="headerlink" title="207. 课程表"></a><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=207&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/course-schedule/#">思路</a></p><p>你这个学期必须选修 <code>numCourses</code> 门课程，记为 <code>0</code> 到 <code>numCourses - 1</code> 。</p><p>在选修某些课程之前需要一些先修课程。 先修课程按数组 <code>prerequisites</code> 给出，其中 <code>prerequisites[i] = [ai, bi]</code> ，表示如果要学习课程 <code>ai</code> 则 <strong>必须</strong> 先学习课程 <code>bi</code> 。</p><ul><li>例如，先修课程对 <code>[0, 1]</code> 表示：想要学习课程 <code>0</code> ，你需要先完成课程 <code>1</code> 。</li></ul><p>请你判断是否可能完成所有课程的学习？如果可以，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0]]</span><br><span class="line">输出：true</span><br><span class="line">解释：总共有 2 门课程。学习课程 1 之前，你需要完成课程 0 。这是可能的。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0],[0,1]]</span><br><span class="line">输出：false</span><br><span class="line">解释：总共有 2 门课程。学习课程 1 之前，你需要先完成课程 0 ；并且学习课程 0 之前，你还应先完成课程 1 。这是不可能的。</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;  <span class="comment">//记录的是遍历过的 用于终止遍历 提高效率 不加会超时 用 visited 数组防止走回头路</span></span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; onPath;   <span class="comment">//记录每次遍历过的节点，用于查环</span></span><br><span class="line">    <span class="keyword">bool</span> hasCycle;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canFinish</span><span class="params">(<span class="keyword">int</span> numCourses, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; prerequisites)</span> </span>{</span><br><span class="line">        <span class="comment">//建图</span></span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">graph</span>(numCourses);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> edge: prerequisites){</span><br><span class="line">            <span class="keyword">int</span> from = edge[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> to = edge[<span class="number">0</span>];</span><br><span class="line">            graph[from].<span class="built_in">push_back</span>(to);</span><br><span class="line">        }</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        onPath = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        hasCycle = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numCourses; i++){</span><br><span class="line">            <span class="comment">//遍历所有节点</span></span><br><span class="line">            <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> !hasCycle;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(onPath[s]) <span class="comment">//出现环</span></span><br><span class="line">            hasCycle = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(visited[s] || hasCycle)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//前序代码位置</span></span><br><span class="line">        visited[s] = <span class="number">1</span>;</span><br><span class="line">        onPath[s] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t : graph[s])</span><br><span class="line">            <span class="built_in">traverse</span>(graph, t);</span><br><span class="line">        <span class="comment">//后序遍历位置</span></span><br><span class="line">        onPath[s] = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="210-课程表-II"><a href="#210-课程表-II" class="headerlink" title="210. 课程表 II"></a><a href="https://leetcode-cn.com/problems/course-schedule-ii/">210. 课程表 II</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=210&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/course-schedule-ii/#">思路</a></p><p>难度中等582收藏分享切换为英文接收动态反馈</p><p>现在你总共有 <code>numCourses</code> 门课需要选，记为 <code>0</code> 到 <code>numCourses - 1</code>。给你一个数组 <code>prerequisites</code> ，其中 <code>prerequisites[i] = [ai, bi]</code> ，表示在选修课程 <code>ai</code> 前 <strong>必须</strong> 先选修 <code>bi</code> 。</p><ul><li>例如，想要学习课程 <code>0</code> ，你需要先完成课程 <code>1</code> ，我们用一个匹配来表示：<code>[0,1]</code> 。</li></ul><p>返回你为了学完所有课程所安排的学习顺序。可能会有多个正确的顺序，你只要返回 <strong>任意一种</strong> 就可以了。如果不可能完成所有课程，返回 <strong>一个空数组</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 2, prerequisites = [[1,0]]</span><br><span class="line">输出：[0,1]</span><br><span class="line">解释：总共有 2 门课程。要学习课程 1，你需要先完成课程 0。因此，正确的课程顺序为 [0,1] 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]</span><br><span class="line">输出：[0,2,1,3]</span><br><span class="line">解释：总共有 4 门课程。要学习课程 3，你应该先完成课程 1 和课程 2。并且课程 1 和课程 2 都应该排在课程 0 之后。</span><br><span class="line">因此，一个正确的课程顺序是 [0,1,2,3] 。另一个正确的排序是 [0,2,1,3] 。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：numCourses = 1, prerequisites = []</span><br><span class="line">输出：[0]</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; onPath;</span><br><span class="line">    <span class="keyword">bool</span> hasCycle;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; postOrder;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">findOrder</span><span class="params">(<span class="keyword">int</span> numCourses, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; prerequisites)</span> </span>{</span><br><span class="line">        <span class="comment">//建图</span></span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">graph</span>(numCourses);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> edge: prerequisites){</span><br><span class="line">            <span class="keyword">int</span> from = edge[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> to = edge[<span class="number">0</span>];</span><br><span class="line">            graph[from].<span class="built_in">push_back</span>(to);</span><br><span class="line">        }</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        onPath = vector&lt;<span class="keyword">bool</span>&gt;(numCourses, <span class="number">0</span>);</span><br><span class="line">        hasCycle = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;numCourses; i++){</span><br><span class="line">            <span class="comment">//遍历所有节点</span></span><br><span class="line">            <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(hasCycle)  <span class="keyword">return</span> vector&lt;<span class="keyword">int</span>&gt;{};</span><br><span class="line">        <span class="built_in">reverse</span>(postOrder.<span class="built_in">begin</span>(), postOrder.<span class="built_in">end</span>());  <span class="comment">//拓扑排序是后序遍历的反转 注意 后序的常规理解图的后序遍历</span></span><br><span class="line">        <span class="keyword">return</span> postOrder;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> s)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(onPath[s]) <span class="comment">//出现环</span></span><br><span class="line">            hasCycle = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(visited[s] || hasCycle)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//前序代码位置</span></span><br><span class="line">        visited[s] = <span class="number">1</span>;</span><br><span class="line">        onPath[s] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t : graph[s])</span><br><span class="line">            <span class="built_in">traverse</span>(graph, t);</span><br><span class="line">        <span class="comment">//后序遍历位置</span></span><br><span class="line">        onPath[s] = <span class="number">0</span>;</span><br><span class="line">        postOrder.<span class="built_in">push_back</span>(s); <span class="comment">//记录后序遍历</span></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="二分图判定"><a href="#二分图判定" class="headerlink" title="二分图判定"></a><a href="https://labuladong.gitee.io/algo/2/20/40/">二分图判定</a></h2><h3 id="785-判断二分图"><a href="#785-判断二分图" class="headerlink" title="785. 判断二分图"></a><a href="https://leetcode-cn.com/problems/is-graph-bipartite/">785. 判断二分图</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=785&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/is-graph-bipartite/#">思路</a></p><p>难度中等347收藏分享切换为英文接收动态反馈</p><p>存在一个 <strong>无向图</strong> ，图中有 <code>n</code> 个节点。其中每个节点都有一个介于 <code>0</code> 到 <code>n - 1</code> 之间的唯一编号。给你一个二维数组 <code>graph</code> ，其中 <code>graph[u]</code> 是一个节点数组，由节点 <code>u</code> 的邻接节点组成。形式上，对于 <code>graph[u]</code> 中的每个 <code>v</code> ，都存在一条位于节点 <code>u</code> 和节点 <code>v</code> 之间的无向边。该无向图同时具有以下属性：</p><ul><li>不存在自环（<code>graph[u]</code> 不包含 <code>u</code>）。</li><li>不存在平行边（<code>graph[u]</code> 不包含重复值）。</li><li>如果 <code>v</code> 在 <code>graph[u]</code> 内，那么 <code>u</code> 也应该在 <code>graph[v]</code> 内（该图是无向图）</li><li>这个图可能不是连通图，也就是说两个节点 <code>u</code> 和 <code>v</code> 之间可能不存在一条连通彼此的路径。</li></ul><p><strong>二分图</strong> 定义：如果能将一个图的节点集合分割成两个独立的子集 <code>A</code> 和 <code>B</code> ，并使图中的每一条边的两个节点一个来自 <code>A</code> 集合，一个来自 <code>B</code> 集合，就将这个图称为 <strong>二分图</strong> 。</p><p>如果图是二分图，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/bi2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,2,3],[0,2],[0,1,3],[0,2]]</span><br><span class="line">输出：false</span><br><span class="line">解释：不能将节点分割成两个独立的子集，以使每条边都连通一个子集中的一个节点与另一个子集中的一个节点。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/bi1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：graph = [[1,3],[0,2],[1,3],[0,2]]</span><br><span class="line">输出：true</span><br><span class="line">解释：可以将节点分成两组: {0, 2} 和 {1, 3} 。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>对整个图进行交替染色 若可以完全染色 则为二分图</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 给图上色 如果可以完全上色 则表示为二分图</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isBipartite</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph)</span> </span>{</span><br><span class="line">        <span class="keyword">bool</span> ok = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = graph.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">color</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">0</span>; v&lt;n; v++){</span><br><span class="line">            <span class="keyword">if</span>(!used[v])</span><br><span class="line">                <span class="built_in">traverse</span>(graph, v, used, color, ok);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ok;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> v, vector&lt;<span class="keyword">bool</span>&gt;&amp; used, vector&lt;<span class="keyword">bool</span>&gt;&amp; color, <span class="keyword">bool</span>&amp; ok)</span></span>{</span><br><span class="line">        <span class="comment">//如果确定不是二分图了 就不用再浪费时间遍历了</span></span><br><span class="line">        <span class="keyword">if</span>(!ok) <span class="keyword">return</span>;</span><br><span class="line">        used[v] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> w : graph[v]){</span><br><span class="line">            <span class="keyword">if</span>(!used[w]){</span><br><span class="line">                color[w] = !color[v];</span><br><span class="line">                <span class="built_in">traverse</span>(graph, w, used, color, ok);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">if</span>(color[w] == color[v]){</span><br><span class="line">                    ok = <span class="literal">false</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="886-可能的二分法"><a href="#886-可能的二分法" class="headerlink" title="886. 可能的二分法"></a><a href="https://leetcode-cn.com/problems/possible-bipartition/">886. 可能的二分法</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=886&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/possible-bipartition/#">思路</a></p><p>难度中等161</p><p>给定一组 <code>n</code> 人（编号为 <code>1, 2, ..., n</code>）， 我们想把每个人分进<strong>任意</strong>大小的两组。每个人都可能不喜欢其他人，那么他们不应该属于同一组。</p><p>给定整数 <code>n</code> 和数组 <code>dislikes</code> ，其中 <code>dislikes[i] = [ai, bi]</code> ，表示不允许将编号为 <code>ai</code> 和 <code>bi</code>的人归入同一组。当可以用这种方法将所有人分进两组时，返回 <code>true</code>；否则返回 <code>false</code>。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, dislikes = [[1,2],[1,3],[2,4]]</span><br><span class="line">输出：true</span><br><span class="line">解释：group1 [1,4], group2 [2,3]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, dislikes = [[1,2],[1,3],[2,3]]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>首先构造邻接表（细节， 编号为1-n）</li><li>上色</li></ol><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">bool</span> ans;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; color;</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="comment">//注意编号 1-n</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">possibleBipartition</span><span class="params">(<span class="keyword">int</span> n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes)</span> </span>{</span><br><span class="line">        ans = <span class="number">1</span>;</span><br><span class="line">        color.<span class="built_in">resize</span>(n+<span class="number">1</span>);</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(n+<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; dislikess = <span class="built_in">buildGraph</span>(dislikes,n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i])</span><br><span class="line">                <span class="built_in">traverse</span>(dislikess, i);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这是一个双向图 你恨我 我恨你</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">buildGraph</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes, <span class="keyword">int</span> n){</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">res</span>(n+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span>; i&lt;dislikes.<span class="built_in">size</span>(); i++){</span><br><span class="line">            res[dislikes[i][<span class="number">0</span>]].<span class="built_in">push_back</span>(dislikes[i][<span class="number">1</span>]);</span><br><span class="line">            res[dislikes[i][<span class="number">1</span>]].<span class="built_in">push_back</span>(dislikes[i][<span class="number">0</span>]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//上色函数 经典 完全一致</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; dislikes, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(ans == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        visited[index] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> newIndex : dislikes[index]){</span><br><span class="line">            <span class="keyword">if</span>(!visited[newIndex]){</span><br><span class="line">                color[newIndex] = !color[index];</span><br><span class="line">                <span class="built_in">traverse</span>(dislikes, newIndex);</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                <span class="keyword">if</span>(color[index] == color[newIndex])</span><br><span class="line">                    ans = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="并查集（UNION-FIND）算法"><a href="#并查集（UNION-FIND）算法" class="headerlink" title="并查集（UNION-FIND）算法"></a>并查集（UNION-FIND）算法</h2><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//连同分量的个数</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="comment">// 存储每个节点的父节点</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// n 为图中节点的个数</span></span><br><span class="line"><span class="built_in">UF</span>(<span class="keyword">int</span> n) {</span><br><span class="line">cnt = n;</span><br><span class="line">parent.<span class="built_in">resize</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">parent[i] = i;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//联通节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">if</span> (rootP == rootQ)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">parent[rootQ] = rootP;</span><br><span class="line">cnt--;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断节点 p 和节点 q 是否连通</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">return</span> rootP == rootQ;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回节点 x 的连通分量根节点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (parent[x] != x) {</span><br><span class="line"><span class="comment">// 进行路径压缩</span></span><br><span class="line">parent[x] = parent[parent[x]];</span><br><span class="line">x = parent[x];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回图中的连通分量个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span> </span>{ <span class="keyword">return</span> cnt; }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="547-省份数量"><a href="#547-省份数量" class="headerlink" title="547. 省份数量"></a><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></h3><p>难度中等747</p><p>有 <code>n</code> 个城市，其中一些彼此相连，另一些没有相连。如果城市 <code>a</code> 与城市 <code>b</code> 直接相连，且城市 <code>b</code> 与城市 <code>c</code> 直接相连，那么城市 <code>a</code> 与城市 <code>c</code> 间接相连。</p><p><strong>省份</strong> 是一组直接或间接相连的城市，组内不含其他没有相连的城市。</p><p>给你一个 <code>n x n</code> 的矩阵 <code>isConnected</code> ，其中 <code>isConnected[i][j] = 1</code> 表示第 <code>i</code> 个城市和第 <code>j</code> 个城市直接相连，而 <code>isConnected[i][j] = 0</code> 表示二者不直接相连。</p><p>返回矩阵中 <strong>省份</strong> 的数量。</p><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/graph1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：isConnected = [[1,1,0],[1,1,0],[0,0,1]]</span><br><span class="line">输出：2</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/graph2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：isConnected = [[1,0,0],[0,1,0],[0,0,1]]</span><br><span class="line">输出：3</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li>标准的并查集题目 模板直接使用</li><li>转换成邻接表dfs</li><li>邻接图 dfs 按相连的逻辑去进行dfs 最优</li></ol><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><ol><li>标准的并查集题目 模板直接使用</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//连同分量的个数</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="comment">// 存储每个节点的父节点</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// n 为图中节点的个数</span></span><br><span class="line"><span class="built_in">UF</span>(<span class="keyword">int</span> n) {</span><br><span class="line">cnt = n;</span><br><span class="line">parent.<span class="built_in">resize</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">parent[i] = i;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//联通节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">if</span> (rootP == rootQ)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">parent[rootQ] = rootP;</span><br><span class="line">cnt--;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断节点 p 和节点 q 是否连通</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>{</span><br><span class="line"><span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line"><span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line"><span class="keyword">return</span> rootP == rootQ;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回节点 x 的连通分量根节点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line"><span class="keyword">while</span> (parent[x] != x) {</span><br><span class="line"><span class="comment">// 进行路径压缩</span></span><br><span class="line">parent[x] = parent[parent[x]];</span><br><span class="line">x = parent[x];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回图中的连通分量个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">()</span> </span>{ <span class="keyword">return</span> cnt; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="function">UF <span class="title">uf</span><span class="params">(isConnected.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;isConnected[i].<span class="built_in">size</span>(); j++){</span><br><span class="line">                <span class="keyword">if</span>(isConnected[i][j])</span><br><span class="line">                    uf.<span class="built_in">unionn</span>(i, j);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> uf.<span class="built_in">count</span>();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>转换成邻接表dfs</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = isConnected.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; graph = <span class="built_in">buildGraph</span>(isConnected);</span><br><span class="line">        visited = vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i]){</span><br><span class="line">                <span class="built_in">traverse</span>(graph, i);</span><br><span class="line">                ans++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; graph, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">        visited[index] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> newIndex : graph[index]){</span><br><span class="line">            <span class="keyword">if</span>(!visited[newIndex]){</span><br><span class="line">                <span class="comment">//如果使用全局ans 在此处--是不对的</span></span><br><span class="line">                <span class="built_in">traverse</span>(graph, newIndex); </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">buildGraph</span>(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected){</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">res</span>(isConnected.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;isConnected[i].<span class="built_in">size</span>(); j++){</span><br><span class="line">                <span class="keyword">if</span>(isConnected[i][j] == <span class="number">1</span>){</span><br><span class="line">                    res[i].<span class="built_in">push_back</span>(j);</span><br><span class="line">                    res[j].<span class="built_in">push_back</span>(i);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>邻接图 dfs</li></ol><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="keyword">bool</span>&gt; visited;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = isConnected.<span class="built_in">size</span>();</span><br><span class="line">        visited =vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; n; i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i]){</span><br><span class="line">                ans++;</span><br><span class="line">                <span class="built_in">dfs</span>(isConnected, i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; isConnected, <span class="keyword">int</span> nowPro)</span></span>{</span><br><span class="line">        visited[nowPro] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;isConnected[nowPro].<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="keyword">if</span>(!visited[i] &amp;&amp; isConnected[nowPro][i] == <span class="number">1</span>){</span><br><span class="line">                <span class="built_in">dfs</span>(isConnected, i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }   </span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="130-被围绕的区域"><a href="#130-被围绕的区域" class="headerlink" title="130. 被围绕的区域"></a><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=130&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/surrounded-regions/#">思路</a></p><p>难度中等750收藏分享切换为英文接收动态反馈</p><p>给你一个 <code>m x n</code> 的矩阵 <code>board</code> ，由若干字符 <code>'X'</code> 和 <code>'O'</code> ，找到所有被 <code>'X'</code> 围绕的区域，并将这些区域里所有的 <code>'O'</code> 用 <code>'X'</code> 填充。</p><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/xogrid.jpg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：board = [["X","X","X","X"],["X","O","O","X"],["X","X","O","X"],["X","O","X","X"]]</span><br><span class="line">输出：[["X","X","X","X"],["X","X","X","X"],["X","X","X","X"],["X","O","X","X"]]</span><br><span class="line">解释：被围绕的区间不会存在于边界上，换句话说，任何边界上的 'O' 都不会被填充为 'X'。 任何不在边界上，或不与边界上的 'O' 相连的 'O' 最终都会被填充为 'X'。如果两个元素在水平或垂直方向相邻，则称它们是“相连”的。</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li>dfs这也是比较常规的 四周开始</li><li>并查集 重点理解如何使用这种数据结构</li></ol><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><h5 id="dfs"><a href="#dfs" class="headerlink" title="dfs"></a>dfs</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> m = board.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> n = board[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="keyword">bool</span>&gt;&gt; <span class="built_in">isIsland</span>(m, vector&lt;<span class="keyword">bool</span>&gt;(n, <span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">if</span>(board[i][<span class="number">0</span>] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, i, <span class="number">0</span>, isIsland);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(board[i][n<span class="number">-1</span>] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, i, n<span class="number">-1</span>, isIsland);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            <span class="keyword">if</span>(board[<span class="number">0</span>][i] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, <span class="number">0</span>, i, isIsland);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(board[m<span class="number">-1</span>][i] == <span class="string">'O'</span>){</span><br><span class="line">                <span class="built_in">effect</span>(board, m<span class="number">-1</span>, i, isIsland);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(board[i][j] == <span class="string">'O'</span> &amp;&amp; !isIsland[i][j])</span><br><span class="line">                    board[i][j] = <span class="string">'X'</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">effect</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board, <span class="keyword">int</span> x, <span class="keyword">int</span> y, vector&lt;vector&lt;<span class="keyword">bool</span>&gt;&gt;&amp; isIsland)</span></span>{</span><br><span class="line">        <span class="comment">//如果不加入island判断就会陷入死循环</span></span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span> || y&lt;<span class="number">0</span> || x&gt;= board.<span class="built_in">size</span>() || y&gt;=board[<span class="number">0</span>].<span class="built_in">size</span>() || board[x][y]!=<span class="string">'O'</span> || isIsland[x][y]){</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        isIsland[x][y] = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">effect</span>(board, x+<span class="number">1</span>, y, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x<span class="number">-1</span>, y, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x, y+<span class="number">1</span>, isIsland);</span><br><span class="line">        <span class="built_in">effect</span>(board, x, y<span class="number">-1</span>, isIsland);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h5><p><code>使用node为节点进行连接 将网格上的节点映射到数值上</code></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UF</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">   vector&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">UF</span>(<span class="keyword">int</span> n){</span><br><span class="line">        parent.<span class="built_in">resize</span>(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++){</span><br><span class="line">            parent[i] = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unionn</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line">        <span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line">        <span class="keyword">if</span>(rootP == rootQ) <span class="keyword">return</span>;</span><br><span class="line">        parent[rootP] = rootQ;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>{</span><br><span class="line">        <span class="keyword">int</span> rootP = <span class="built_in">find</span>(p);</span><br><span class="line">        <span class="keyword">int</span> rootQ = <span class="built_in">find</span>(q);</span><br><span class="line">        <span class="keyword">return</span> rootQ == rootP;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>{</span><br><span class="line">        <span class="keyword">while</span>(parent[x]!= x){</span><br><span class="line">            parent[x] = parent[parent[x]];</span><br><span class="line">            x = parent[x];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(vector&lt;vector&lt;<span class="keyword">char</span>&gt;&gt;&amp; board)</span> </span>{</span><br><span class="line">        m = board.<span class="built_in">size</span>();</span><br><span class="line">        n = board[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">UF <span class="title">uf</span><span class="params">(m*n+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">int</span> dumpyNode = m*n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(board[i][j] == <span class="string">'O'</span>){</span><br><span class="line">                    <span class="keyword">if</span>(i == <span class="number">0</span> || j == <span class="number">0</span> || i == m<span class="number">-1</span> || j == n<span class="number">-1</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(dumpyNode, <span class="built_in">node</span>(i, j));</span><br><span class="line">                    <span class="keyword">else</span>{</span><br><span class="line">                    <span class="comment">//里面的和上下左右联通</span></span><br><span class="line">                    <span class="keyword">if</span>(i&gt;<span class="number">0</span> &amp;&amp; board[i<span class="number">-1</span>][j] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i<span class="number">-1</span>, j));</span><br><span class="line">                    <span class="keyword">if</span>(j&gt;<span class="number">0</span> &amp;&amp; board[i][j<span class="number">-1</span>] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i, j<span class="number">-1</span>));</span><br><span class="line">                    <span class="keyword">if</span>(i&lt;m<span class="number">-1</span> &amp;&amp; board[i+<span class="number">1</span>][j] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i+<span class="number">1</span>, j));</span><br><span class="line">                    <span class="keyword">if</span>(j&lt;n<span class="number">-1</span> &amp;&amp; board[i][j+<span class="number">1</span>] == <span class="string">'O'</span>)</span><br><span class="line">                        uf.<span class="built_in">unionn</span>(<span class="built_in">node</span>(i, j), <span class="built_in">node</span>(i, j+<span class="number">1</span>));</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;m; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;n; j++){</span><br><span class="line">                <span class="keyword">if</span>(uf.<span class="built_in">connected</span>(<span class="built_in">node</span>(i, j), dumpyNode))</span><br><span class="line">                    board[i][j] = <span class="string">'O'</span>;</span><br><span class="line">                <span class="keyword">else</span> board[i][j] = <span class="string">'X'</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>{</span><br><span class="line">        <span class="keyword">return</span>  x*n + y;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉树</title>
      <link href="/2022/03/15/cong-bian-li-shu-ju-chong-jian-er-cha-shu/"/>
      <url>/2022/03/15/cong-bian-li-shu-ju-chong-jian-er-cha-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h1><h2 id="1-从遍历数据重建二叉树"><a href="#1-从遍历数据重建二叉树" class="headerlink" title="1. 从遍历数据重建二叉树"></a>1. 从遍历数据重建二叉树</h2><ul><li><p>重建方式 递归</p></li><li><p>三种遍历的数组分布</p><img src="https://labuladong.gitee.io/algo/images/%e4%ba%8c%e5%8f%89%e6%a0%91%e7%b3%bb%e5%88%972/2.jpeg" alt="img" style="zoom:67%;"><img src="https://labuladong.gitee.io/algo/images/%e4%ba%8c%e5%8f%89%e6%a0%91%e7%b3%bb%e5%88%972/6.jpeg" alt="img" style="zoom:67%;"></li></ul><h3 id="105-从前序与中序遍历序列构造二叉树"><a href="#105-从前序与中序遍历序列构造二叉树" class="headerlink" title="105. 从前序与中序遍历序列构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/">105. 从前序与中序遍历序列构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// 又臭又长的就 不看了</span></span><br><span class="line">    <span class="comment">// TreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {</span></span><br><span class="line">    <span class="comment">//   if(preorder.size() == 0) return nullptr;</span></span><br><span class="line">    <span class="comment">//   int rootVal = preorder[0];</span></span><br><span class="line">    <span class="comment">//   int inorder_rootPos = find(inorder.begin(), inorder.end(), rootVal) - inorder.begin();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//   //前序左右子树</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; preorderL = vector&lt;int&gt;(preorder.begin()+1, preorder.begin()+1+inorder_rootPos);</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; preorderR =vector&lt;int&gt;(preorder.begin()+1+inorder_rootPos, preorder.end());</span></span><br><span class="line">    <span class="comment">//   //中序左右子树</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; inorderL = vector&lt;int&gt;(inorder.begin(), inorder.begin()+inorder_rootPos);</span></span><br><span class="line">    <span class="comment">//   vector&lt;int&gt; inorderR = vector&lt;int&gt;(inorder.begin() + inorder_rootPos + 1, inorder.end());</span></span><br><span class="line">    <span class="comment">//   //cout&lt;&lt;inorder_rootPos;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//   TreeNode* root = new TreeNode(rootVal);</span></span><br><span class="line">    <span class="comment">//   root-&gt;left = buildTree(preorderL, inorderL);</span></span><br><span class="line">    <span class="comment">//   root-&gt;right = buildTree(preorderR, inorderR);</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">//   return root;</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">buildTree</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, vector&lt;<span class="keyword">int</span>&gt;&amp; inorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(preorder, <span class="number">0</span> ,preorder.<span class="built_in">size</span>()<span class="number">-1</span>, inorder, <span class="number">0</span>, inorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, <span class="keyword">int</span> preS, <span class="keyword">int</span> preE, vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, <span class="keyword">int</span> inS, <span class="keyword">int</span> inE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(preS&gt;preE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">int</span> rootVal = preorder[preS];</span><br><span class="line">      <span class="keyword">int</span> index;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = inS; i&lt;=inE; i++){   <span class="comment">//注意这里是小于等于</span></span><br><span class="line">        <span class="keyword">if</span>(inorder[i] == rootVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index - inS;</span><br><span class="line">      TreeNode* root = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      root-&gt;left = <span class="built_in">build</span>(preorder,preS + <span class="number">1</span>, preS + leftSize, inorder, inS, index<span class="number">-1</span>);</span><br><span class="line">      root-&gt;right = <span class="built_in">build</span>(preorder, preS + <span class="number">1</span> + leftSize, preE, inorder, index+ <span class="number">1</span>, inE);</span><br><span class="line">      <span class="keyword">return</span> root;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="106-从中序与后序遍历序列构造二叉树"><a href="#106-从中序与后序遍历序列构造二叉树" class="headerlink" title="106. 从中序与后序遍历序列构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/">106. 从中序与后序遍历序列构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">buildTree</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(inorder, <span class="number">0</span>, inorder.<span class="built_in">size</span>()<span class="number">-1</span>, postorder, <span class="number">0</span>, postorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; inorder, <span class="keyword">int</span> inS, <span class="keyword">int</span> inE, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder, <span class="keyword">int</span> posS, <span class="keyword">int</span> posE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(inS&gt;inE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">int</span> rootVal = postorder[posE];</span><br><span class="line">      <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = inS; i&lt;=inE; i++){  <span class="comment">//注意这里是&lt;= 需要全部遍历</span></span><br><span class="line">        <span class="keyword">if</span>(inorder[i] == rootVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index - inS;</span><br><span class="line">      TreeNode* root = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      root-&gt;left = <span class="built_in">build</span>(inorder, inS, index<span class="number">-1</span>, postorder, posS, posS + leftSize<span class="number">-1</span>);</span><br><span class="line">      root-&gt;right = <span class="built_in">build</span>(inorder, index+<span class="number">1</span>, inE, postorder, posS + leftSize, posE<span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> root;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="889-根据前序和后序遍历构造二叉树"><a href="#889-根据前序和后序遍历构造二叉树" class="headerlink" title="889. 根据前序和后序遍历构造二叉树"></a><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/">889. 根据前序和后序遍历构造二叉树</a></h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode {</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() : val(0), left(nullptr), right(nullptr) {}</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}</span></span><br><span class="line"><span class="comment"> * };</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">constructFromPrePost</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">build</span>(preorder, <span class="number">0</span>, preorder.<span class="built_in">size</span>()<span class="number">-1</span>, postorder, <span class="number">0</span>, postorder.<span class="built_in">size</span>()<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">build</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; preorder, <span class="keyword">int</span> preS, <span class="keyword">int</span> preE, vector&lt;<span class="keyword">int</span>&gt;&amp; postorder, <span class="keyword">int</span> posS, <span class="keyword">int</span> posE)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(preS&gt;preE) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">if</span>(preS == preE) <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">TreeNode</span>(preorder[preS]);</span><br><span class="line">      <span class="keyword">int</span> rootVal = preorder[preS];</span><br><span class="line">      <span class="keyword">int</span> secVal = preorder[preS + <span class="number">1</span>];</span><br><span class="line">      <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = posS; i&lt;posE; i++){</span><br><span class="line">        <span class="keyword">if</span>(postorder[i] == secVal){</span><br><span class="line">          index = i;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">int</span> leftSize = index-posS;</span><br><span class="line">      TreeNode* node = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(rootVal);</span><br><span class="line">      node-&gt;left = <span class="built_in">build</span>(preorder, preS+<span class="number">1</span>, preS+<span class="number">1</span>+leftSize, postorder, posS, posS + leftSize);</span><br><span class="line">      node-&gt;right = <span class="built_in">build</span>(preorder, preS+<span class="number">1</span>+leftSize+ <span class="number">1</span>, preE, postorder, posS + leftSize+<span class="number">1</span>, posE <span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> node;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="2-递归改迭代"><a href="#2-递归改迭代" class="headerlink" title="2. 递归改迭代"></a>2. <a href="https://labuladong.gitee.io/algo/2/19/34/">递归改迭代</a></h2><p>简单说就是这样一个流程：</p><p><strong>1、拿到一个节点，就一路向左遍历（因为 <code>traverse(root.left)</code> 排在前面），把路上的节点都压到栈里</strong>。</p><p><strong>2、往左走到头之后就开始退栈，看看栈顶节点的右指针，非空的话就重复第 1 步</strong>。</p><p>写成迭代代码就是这样：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Stack&lt;TreeNode*&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">traverse</span><span class="params">(TreeNode* root)</span> </span>{</span><br><span class="line">    <span class="built_in">pushLeftBranch</span>(root);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!stk.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        TreeNode p = stk.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="built_in">pushLeftBranch</span>(p.right);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左侧树枝一撸到底，都放入栈中</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushLeftBranch</span><span class="params">(TreeNode* p)</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (p != null) {</span><br><span class="line">        stk.<span class="built_in">push</span>(p);</span><br><span class="line">        p = p.left;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="迭代代码框架"><a href="#迭代代码框架" class="headerlink" title="迭代代码框架"></a>迭代代码框架</h4><p>想在迭代代码中体现前中后序遍历，关键点在哪里？</p><p><strong>当我从栈中拿出一个节点 <code>p</code>，我应该想办法搞清楚这个节点 <code>p</code> 左右子树的遍历情况</strong>。</p><p>如果 <code>p</code> 的左右子树都没有被遍历，那么现在对 <code>p</code> 进行操作就属于前序遍历代码。</p><p>如果 <code>p</code> 的左子树被遍历过了，而右子树没有被遍历过，那么现在对 <code>p</code> 进行操作就属于中序遍历代码。</p><p>如果 <code>p</code> 的左右子树都被遍历过了，那么现在对 <code>p</code> 进行操作就属于后序遍历代码。</p><p>上述逻辑写成伪码如下：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模拟函数调用栈</span></span><br><span class="line"><span class="keyword">private</span> :</span><br><span class="line">stack&lt;TreeNode*&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左侧树枝一撸到底</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushLeftBranch</span><span class="params">(TreeNode* p)</span> </span>{</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">nullptr</span>) {</span><br><span class="line">        <span class="comment">/*******************/</span></span><br><span class="line">        <span class="comment">/** 前序遍历代码位置 **/</span></span><br><span class="line">        <span class="comment">/*******************/</span></span><br><span class="line">        stk.<span class="built_in">push</span>(p);</span><br><span class="line">        p = p-&gt;left;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">traverse</span><span class="params">(TreeNode* root)</span> </span>{</span><br><span class="line">    <span class="comment">// 指向上一次遍历完的子树根节点</span></span><br><span class="line">    TreeNode* visited = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(<span class="number">-1</span>);</span><br><span class="line">    <span class="comment">// 开始遍历整棵树</span></span><br><span class="line">    <span class="built_in">pushLeftBranch</span>(root);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!stk.<span class="built_in">isEmpty</span>()) {</span><br><span class="line">        TreeNode* p = stk.<span class="built_in">top</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// p 的左子树被遍历完了，且右子树没有被遍历过</span></span><br><span class="line">        <span class="keyword">if</span> ((p-&gt;left == <span class="literal">nullptr</span> || p.left == visited) </span><br><span class="line">          &amp;&amp; p-&gt;right != visited) {</span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">/** 中序遍历代码位置 **/</span></span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">// 去遍历 p 的右子树</span></span><br><span class="line">            <span class="built_in">pushLeftBranch</span>(p-&gt;right);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// p 的右子树被遍历完了</span></span><br><span class="line">        <span class="keyword">if</span> (p-&gt;right == <span class="literal">nullptr</span> || p-&gt;right == visited) {</span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">/** 后序遍历代码位置 **/</span></span><br><span class="line">            <span class="comment">/*******************/</span></span><br><span class="line">            <span class="comment">// 以 p 为根的子树被遍历完了，出栈</span></span><br><span class="line">            <span class="comment">// visited 指针指向 p</span></span><br><span class="line">            visited = stk.<span class="built_in">pop</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/15/lian-biao/"/>
      <url>/2022/03/15/lian-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="单链表解题套路"><a href="#单链表解题套路" class="headerlink" title="单链表解题套路"></a>单链表解题套路</h2><h3 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21. 合并两个有序链表"></a><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=21&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/#">思路</a></p><p>难度简单2259</p><p>将两个升序链表合并为一个新的 <strong>升序</strong> 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 </p><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203121556763.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [1,2,4], l2 = [1,3,4]</span><br><span class="line">输出：[1,1,2,3,4,4]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [], l2 = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></tbody></table></figure><p><strong>提示：</strong></p><ul><li>两个链表的节点数目范围是 <code>[0, 50]</code></li><li><code>-100 &lt;= Node.val &lt;= 100</code></li><li><code>l1</code> 和 <code>l2</code> 均按 <strong>非递减顺序</strong> 排列</li></ul><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>虚拟头节点占位</li><li>while循环&amp;&amp; 交替前进 </li><li>[1 2 3] [4 5 6] 这种情况 会先遍历完第一个 然后在后面的if判断中 拼接第二个list</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode* list1, ListNode* list2)</span> </span>{</span><br><span class="line">      ListNode* pre = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">      ListNode* curr = pre;</span><br><span class="line">      <span class="keyword">while</span>(list1 &amp;&amp; list2){</span><br><span class="line">        <span class="keyword">if</span>(list1-&gt;val &lt; list2-&gt;val){</span><br><span class="line">          curr-&gt;next = list1;</span><br><span class="line">          list1 = list1-&gt;next;</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">          curr-&gt;next = list2;</span><br><span class="line">          list2 = list2-&gt;next;         </span><br><span class="line">        }</span><br><span class="line">        curr = curr-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(list1) curr-&gt;next = list1;</span><br><span class="line">      <span class="keyword">if</span>(list2) curr-&gt;next = list2;</span><br><span class="line">      <span class="keyword">return</span> pre-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="23-合并K个升序链表"><a href="#23-合并K个升序链表" class="headerlink" title="23. 合并K个升序链表"></a><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/">23. 合并K个升序链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=23&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/#">思路</a></p><p>难度困难1803收藏分享切换为英文接收动态反馈</p><p>给你一个链表数组，每个链表都已经按升序排列。</p><p>请你将所有链表合并到一个升序链表中，返回合并后的链表。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：lists = [[1,4,5],[1,3,4],[2,6]]</span><br><span class="line">输出：[1,1,2,3,4,4,5,6]</span><br><span class="line">解释：链表数组如下：</span><br><span class="line">[</span><br><span class="line">  1-&gt;4-&gt;5,</span><br><span class="line">  1-&gt;3-&gt;4,</span><br><span class="line">  2-&gt;6</span><br><span class="line">]</span><br><span class="line">将它们合并到一个有序链表中得到。</span><br><span class="line">1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</span><br></pre></td></tr></tbody></table></figure><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><ol><li>顶堆解法 （笨一点的解法 vector sort）</li><li>循环merger two list</li></ol><h4 id="顶堆解法"><a href="#顶堆解法" class="headerlink" title="顶堆解法"></a>顶堆解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Status</span> {</span></span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        ListNode *ptr;</span><br><span class="line">        <span class="comment">//return 1 表示左边形参优先级低 靠后放</span></span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Status &amp;rhs) <span class="keyword">const</span> {</span><br><span class="line">            <span class="keyword">return</span> val &gt; rhs.val;</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    priority_queue &lt;Status&gt; q;</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(vector&lt;ListNode*&gt;&amp; lists)</span> </span>{</span><br><span class="line">        <span class="comment">//所有非空链表 压入queue</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> node: lists) {</span><br><span class="line">            <span class="keyword">if</span> (node) q.<span class="built_in">push</span>({node-&gt;val, node});</span><br><span class="line">        }</span><br><span class="line">        ListNode head, *tail = &amp;head;</span><br><span class="line">        <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) {</span><br><span class="line">            <span class="comment">//顶堆用的时候都是先top 再pop</span></span><br><span class="line">            <span class="keyword">auto</span> f = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>(); </span><br><span class="line">            tail-&gt;next = f.ptr; </span><br><span class="line">            tail = tail-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (f.ptr-&gt;next) q.<span class="built_in">push</span>({f.ptr-&gt;next-&gt;val, f.ptr-&gt;next});</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>涉及到的知识点</p><ol><li><p>顶堆的一般用法，即先top存储临时变量，再pop</p></li><li><p><a href="https://www.cnblogs.com/shona/p/12163381.html">顶堆的自定义数据结构和比较方式</a></p><blockquote><p>这里用到的就是封装到一个struct ，重载他的&lt;，</p><p>顶堆的排序方式是按照&lt;进行比较排序，返回为1时，左边形参的优先级低于右边形参 表现为升序 小顶堆</p></blockquote></li></ol><h4 id="双链表merge解法"><a href="#双链表merge解法" class="headerlink" title="双链表merge解法"></a>双链表merge解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeTwoLists</span><span class="params">(ListNode *a, ListNode *b)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> ((!a) || (!b)) <span class="keyword">return</span> a ? a : b;</span><br><span class="line">        ListNode head, *tail = &amp;head, *aPtr = a, *bPtr = b;</span><br><span class="line">        <span class="keyword">while</span> (aPtr &amp;&amp; bPtr) {</span><br><span class="line">            <span class="keyword">if</span> (aPtr-&gt;val &lt; bPtr-&gt;val) {</span><br><span class="line">                tail-&gt;next = aPtr; aPtr = aPtr-&gt;next;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tail-&gt;next = bPtr; bPtr = bPtr-&gt;next;</span><br><span class="line">            }</span><br><span class="line">            tail = tail-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        tail-&gt;next = (aPtr ? aPtr : bPtr);</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(vector&lt;ListNode*&gt;&amp; lists)</span> </span>{</span><br><span class="line">        ListNode *ans = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; lists.<span class="built_in">size</span>(); ++i) {</span><br><span class="line">            ans = <span class="built_in">mergeTwoLists</span>(ans, lists[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="剑指-Offer-22-链表中倒数第k个节点"><a href="#剑指-Offer-22-链表中倒数第k个节点" class="headerlink" title="剑指 Offer 22. 链表中倒数第k个节点"></a><a href="https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/">剑指 Offer 22. 链表中倒数第k个节点</a></h3><p>输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。</p><p>例如，一个链表有 <code>6</code> 个节点，从头节点开始，它们的值依次是 <code>1、2、3、4、5、6</code>。这个链表的倒数第 <code>3</code> 个节点是值为 <code>4</code> 的节点。</p><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">给定一个链表: 1-&gt;2-&gt;3-&gt;4-&gt;5, 和 k = 2.</span><br><span class="line"></span><br><span class="line">返回链表 4-&gt;5.</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol><li>笨解法 一次遍历记录长度，一次遍历计算结果</li><li>一次遍历 fast先走k，然后slow fast 同时前进 直到fast为空</li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//两次遍历</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">getKthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">      ListNode* cpy = head;</span><br><span class="line">      <span class="keyword">while</span>(cpy){</span><br><span class="line">        length++;</span><br><span class="line">        cpy = cpy-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* node = head;</span><br><span class="line">      <span class="keyword">while</span>(node){</span><br><span class="line">        <span class="keyword">if</span>(length == k)</span><br><span class="line">          <span class="keyword">return</span> node;</span><br><span class="line">        node = node-&gt;next;</span><br><span class="line">        length--;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">  <span class="comment">//一次遍历</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">getKthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      <span class="keyword">int</span> step = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        step++;</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(step == k){</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }        </span><br><span class="line">      }</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="19-删除链表的倒数第-N-个结点"><a href="#19-删除链表的倒数第-N-个结点" class="headerlink" title="19. 删除链表的倒数第 N 个结点"></a><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=19&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/#">思路</a></p><p>给你一个链表，删除链表的倒数第 <code>n</code> 个结点，并且返回链表的头结点。</p><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203121922903.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], n = 2</span><br><span class="line">输出：[1,2,3,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1], n = 1</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比遍历</li><li>一次遍历 但是要注意 ==可能会删除头节点 所以遍历应该使用虚拟头==</li></ol><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//笨比遍历法</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(cur-&gt;next != <span class="literal">NULL</span>){</span><br><span class="line">            i++;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        ListNode* curr = head;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;=i-n<span class="number">-1</span>){</span><br><span class="line">            <span class="keyword">if</span> (j == i-n<span class="number">-2</span>) curr-&gt;next = curr-&gt;next-&gt;next;</span><br><span class="line">            j++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//一次遍历法</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">      ListNode* pre = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">      pre-&gt;next = head;</span><br><span class="line">      ListNode* fast = pre;</span><br><span class="line">      <span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n+<span class="number">1</span>; i++)</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">      ListNode* slow = pre;</span><br><span class="line">      <span class="keyword">while</span>(fast){</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      slow-&gt;next = slow-&gt;next-&gt;next;</span><br><span class="line">      <span class="keyword">return</span> pre-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="876-链表的中间结点"><a href="#876-链表的中间结点" class="headerlink" title="876. 链表的中间结点"></a><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">876. 链表的中间结点</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=876&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/#">思路</a></p><p>难度简单505</p><p>给定一个头结点为 <code>head</code> 的非空单链表，返回链表的中间结点。</p><p>如果有两个中间结点，则返回第二个中间结点。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：[1,2,3,4,5]</span><br><span class="line">输出：此列表中的结点 3 (序列化形式：[3,4,5])</span><br><span class="line">返回的结点值为 3 。 (测评系统对该结点序列化表述是 [3,4,5])。</span><br><span class="line">注意，我们返回了一个 ListNode 类型的对象 ans，这样：</span><br><span class="line">ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, 以及 ans.next.next.next = NULL.</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：[1,2,3,4,5,6]</span><br><span class="line">输出：此列表中的结点 4 (序列化形式：[4,5,6])</span><br><span class="line">由于该列表有两个中间结点，值分别为 3 和 4，我们返回第二个结点</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比</li><li>快慢指针 注意判断条件  ==while(fast &amp;&amp; fast-&gt;next)==</li></ol><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">nullptr</span>) {</span><br><span class="line">            ++n;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        cur = head;</span><br><span class="line">        <span class="keyword">while</span> (k &lt; n / <span class="number">2</span>) {</span><br><span class="line">            ++k;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){  <span class="comment">//刚开始准备重新用！就尼玛用混了 老老实实==nullptr吧</span></span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="链表环问题"><a href="#链表环问题" class="headerlink" title="链表环问题"></a>链表环问题</h3><h4 id="1-判断是否有环"><a href="#1-判断是否有环" class="headerlink" title="1. 判断是否有环"></a>1. 判断是否有环</h4><ul><li>哈希</li><li>「Floyd 判圈算法」（又称龟兔赛跑算法）</li><li>奇葩方法：修改节点的值</li></ul><p><strong>代码</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hash</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        unordered_set&lt;ListNode*&gt; sett;</span><br><span class="line">        ListNode* cur = head;</span><br><span class="line">        <span class="keyword">while</span>(cur){</span><br><span class="line">            <span class="keyword">if</span>(sett.<span class="built_in">count</span>(cur)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            sett.<span class="built_in">insert</span>(cur);</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//龟兔赛跑</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        ListNode* slow = head;</span><br><span class="line">        ListNode* fast = head;</span><br><span class="line">        <span class="keyword">while</span>(fast != <span class="literal">NULL</span> &amp;&amp; fast-&gt;next!= <span class="literal">NULL</span>)</span><br><span class="line">        {</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">            fast = fast-&gt;next-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(fast == slow) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//修改节点值的判圈方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      <span class="keyword">while</span>(head){</span><br><span class="line">        <span class="keyword">if</span>(head-&gt;val == <span class="string">'12458256442311234856461'</span>)</span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> head-&gt;val = <span class="string">'12458256442311234856461'</span>;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="2-环的位置"><a href="#2-环的位置" class="headerlink" title="2. 环的位置"></a>2. <a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/">环的位置</a></h4><p>我们假设快慢指针相遇时，慢指针 <code>slow</code> 走了 <code>k</code> 步，那么快指针 <code>fast</code> 一定走了 <code>2k</code> 步：</p><p><a href="https://labuladong.gitee.io/algo/images/%E5%8F%8C%E6%8C%87%E9%92%88/3.jpeg"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122004655.jpeg" alt="img"></a></p><p><code>fast</code> 一定比 <code>slow</code> 多走了 <code>k</code> 步，这多走的 <code>k</code> 步其实就是 <code>fast</code> 指针在环里转圈圈，所以 <code>k</code> 的值就是环长度的「整数倍」。</p><p>假设相遇点距环的起点的距离为 <code>m</code>，那么结合上图的 <code>slow</code> 指针，环的起点距头结点 <code>head</code> 的距离为 <code>k - m</code>，也就是说如果从 <code>head</code> 前进 <code>k - m</code> 步就能到达环起点。</p><p>巧的是，如果从相遇点继续前进 <code>k - m</code> 步，也恰好到达环起点。因为结合上图的 <code>fast</code> 指针，从相遇点开始走k步可以转回到相遇点，那走 <code>k - m</code> 步肯定就走到环起点了：</p><p><a href="https://labuladong.gitee.io/algo/images/%E5%8F%8C%E6%8C%87%E9%92%88/2.jpeg"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122004506.jpeg" alt="img"></a></p><p>所以，只要我们把快慢指针中的任一个重新指向 <code>head</code>，然后两个指针同速前进，<code>k - m</code> 步后一定会相遇，相遇之处就是环的起点了。</p><p><strong>代码</strong></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hash</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      unordered_set &lt;ListNode*&gt; set;</span><br><span class="line">      <span class="keyword">while</span>(head != <span class="literal">NULL</span>){</span><br><span class="line">        <span class="keyword">if</span> (set.<span class="built_in">count</span>(head)) <span class="keyword">return</span> head;</span><br><span class="line">          set.<span class="built_in">insert</span>(head);</span><br><span class="line">          head = head-&gt;next;</span><br><span class="line">        }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="comment">//数学</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">      ListNode* fast = head;</span><br><span class="line">      ListNode* slow = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){</span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(fast == slow) <span class="keyword">break</span>;</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="comment">//判断是否有环</span></span><br><span class="line">      <span class="keyword">if</span>(fast == <span class="literal">nullptr</span> || fast-&gt;next == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">      fast = head; <span class="comment">//重新指向头节点</span></span><br><span class="line">      <span class="keyword">while</span>(slow != fast){</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="160-相交链表"><a href="#160-相交链表" class="headerlink" title="160. 相交链表"></a><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/">160. 相交链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=160&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/#">思路</a></p><p>给你两个单链表的头节点 <code>headA</code> 和 <code>headB</code> ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 <code>null</code> 。</p><p>图示两个链表在节点 <code>c1</code> 开始相交<strong>：</strong></p><p><a href="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122026344.png" alt="img"></a></p><p>题目数据 <strong>保证</strong> 整个链式结构中不存在环。</p><p><strong>注意</strong>，函数返回结果后，链表必须 <strong>保持其原始结构</strong> 。</p><p><strong>自定义评测：</strong></p><p><strong>评测系统</strong> 的输入如下（你设计的程序 <strong>不适用</strong> 此输入）：</p><ul><li><code>intersectVal</code> - 相交的起始节点的值。如果不存在相交节点，这一值为 <code>0</code></li><li><code>listA</code> - 第一个链表</li><li><code>listB</code> - 第二个链表</li><li><code>skipA</code> - 在 <code>listA</code> 中（从头节点开始）跳到交叉节点的节点数</li><li><code>skipB</code> - 在 <code>listB</code> 中（从头节点开始）跳到交叉节点的节点数</li></ul><p>评测系统将根据这些输入创建链式数据结构，并将两个头节点 <code>headA</code> 和 <code>headB</code> 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被 <strong>视作正确答案</strong> 。</p><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><ol><li>笨比hash</li><li>挺神奇的首尾相连</li></ol><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122027928.jpeg" alt="img" style="zoom:50%;"><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">//笨比hash</span></span><br><span class="line">    <span class="function">ListNode *<span class="title">getIntersectionNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>{</span><br><span class="line">      unordered_set&lt;ListNode*&gt; sett;</span><br><span class="line">      <span class="keyword">while</span>(headA){</span><br><span class="line">        sett.<span class="built_in">insert</span>(headA);</span><br><span class="line">        headA = headA-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">while</span>(headB){</span><br><span class="line">        <span class="keyword">if</span>(sett.<span class="built_in">count</span>(headB))</span><br><span class="line">          <span class="keyword">return</span> headB;</span><br><span class="line">        headB = headB-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//首尾相接</span></span><br><span class="line">    <span class="function">ListNode *<span class="title">getIntersectionNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span> (headA == <span class="literal">nullptr</span> || headB == <span class="literal">nullptr</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      }</span><br><span class="line">      ListNode *pA = headA, *pB = headB;</span><br><span class="line">      <span class="keyword">while</span> (pA != pB) {</span><br><span class="line">        pA = pA == <span class="literal">nullptr</span> ? headB : pA-&gt;next;</span><br><span class="line">        pB = pB == <span class="literal">nullptr</span> ? headA : pB-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> pA;    </span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="递归反转链表"><a href="#递归反转链表" class="headerlink" title="递归反转链表"></a>递归反转链表</h2><h3 id="206-反转整个链表"><a href="#206-反转整个链表" class="headerlink" title="206. 反转整个链表"></a><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转整个链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=206&amp;target=gitee">labuladong 题解</a></p><p>给你单链表的头节点 <code>head</code> ，请你反转链表，并返回反转后的链表。</p><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122035241.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5]</span><br><span class="line">输出：[5,4,3,2,1]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122035302.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：[2,1]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></tbody></table></figure><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><ol><li>while循环迭代</li><li>递归反转整个链表</li></ol><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122221482.jpeg" alt="img" style="zoom: 50%;"><img src="https://labuladong.gitee.io/algo/images/%e5%8f%8d%e8%bd%ac%e9%93%be%e8%a1%a8/2.jpg" alt="img" style="zoom: 50%;"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122221914.jpeg" alt="img" style="zoom: 50%;"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122222312.jpeg" alt="img" style="zoom: 50%;"><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//while迭代</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* cur = head;</span><br><span class="line">      ListNode* pre = <span class="literal">nullptr</span>;</span><br><span class="line">      ListNode* temp;</span><br><span class="line">      <span class="keyword">while</span>(cur){</span><br><span class="line">        temp = cur-&gt;next;</span><br><span class="line">        cur-&gt;next = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = temp;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      <span class="comment">//注意head == nullptr是判断传进来的链表为空</span></span><br><span class="line">      <span class="comment">//注意head-&gt;next == nullptr是真正的base case</span></span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span> || head-&gt;next == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">      ListNode* last = <span class="built_in">reverseList</span>(head-&gt;next);</span><br><span class="line">      <span class="comment">//nmb 秀到头晕</span></span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      head-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="反转链表前-N-个节点"><a href="#反转链表前-N-个节点" class="headerlink" title="反转链表前 N 个节点"></a>反转链表前 N 个节点</h3><p><em>// 将链表的前 n 个节点反转（n &lt;= 链表长度）</em></p><p>比如说对于下图链表，执行 <code>reverseN(head, 3)</code>：</p><img src="https://labuladong.gitee.io/algo/images/%e5%8f%8d%e8%bd%ac%e9%93%be%e8%a1%a8/6.jpg" alt="img" style="zoom: 50%;"><p>解决思路和反转整个链表差不多，只要稍加修改即可：</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ListNode* successor = <span class="literal">nullptr</span>; <span class="comment">// 后驱节点</span></span><br><span class="line"><span class="comment">// 反转以 head 为起点的 n 个节点，返回新的头结点</span></span><br><span class="line"><span class="function">ListNode* <span class="title">reverseN</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) {</span><br><span class="line">        <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">        successor = head.next;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 以 head.next 为起点，需要反转前 n - 1 个节点</span></span><br><span class="line">    ListNode* last = <span class="built_in">reverseN</span>(head-&gt;next, n - <span class="number">1</span>);</span><br><span class="line">    head-&gt;next-&gt;next = head;</span><br><span class="line">    <span class="comment">// 让反转之后的 head 节点和后面的节点连起来</span></span><br><span class="line">    head-&gt;next = successor;</span><br><span class="line">    <span class="keyword">return</span> last;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="具体的区别："><a href="#具体的区别：" class="headerlink" title="具体的区别："></a>具体的区别：</h4><p>1、base case 变为 <code>n == 1</code>，反转一个元素，就是它本身，同时<strong>要记录后驱节点</strong>。</p><p>2、刚才我们直接把 <code>head.next</code> 设置为 null，因为整个链表反转后原来的 <code>head</code> 变成了整个链表的最后一个节点。但现在 <code>head</code> 节点在递归反转之后不一定是最后一个节点了，所以要记录后驱 <code>successor</code>（第 n + 1 个节点），反转之后将 <code>head</code> 连接上。</p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122323670.jpeg" alt="img" style="zoom: 50%;"><p>OK，如果这个函数你也能看懂，就离实现「反转一部分链表」不远了。</p><h3 id="92-反转链表的一部分"><a href="#92-反转链表的一部分" class="headerlink" title="92. 反转链表的一部分"></a><a href="https://leetcode-cn.com/problems/reverse-linked-list-ii/">92. 反转链表的一部分</a></h3><p>给你单链表的头指针 head 和两个整数 left 和 right ，其中 left &lt;= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。</p><p>示例 1：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203122331490.jpeg" alt="img"></p><p>输入：head = [1,2,3,4,5], left = 2, right = 4<br>输出：[1,4,3,2,5]</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseBetween</span><span class="params">(ListNode* head, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(left == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">reverseN</span>(head, right);</span><br><span class="line">      <span class="comment">//前进到反转的起点触发basecase</span></span><br><span class="line">      <span class="comment">//left和right一起向前移动，right要跟随着left-- </span></span><br><span class="line">      <span class="comment">//因为right表示的是位置，N的长度应该是移动left为头的 right跟着减的长度</span></span><br><span class="line">      head-&gt;next = <span class="built_in">reverseBetween</span>(head-&gt;next, left<span class="number">-1</span>, right<span class="number">-1</span>);</span><br><span class="line">      <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    ListNode* successor; <span class="comment">// 后驱节点</span></span><br><span class="line">    <span class="comment">// 反转以 head 为起点的 n 个节点，返回新的头结点</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseN</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(n == <span class="number">1</span>){</span><br><span class="line">        <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">        successor = head-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">      ListNode* last = <span class="built_in">reverseN</span>(head-&gt;next, n<span class="number">-1</span>);</span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      <span class="comment">// 记录第 n + 1 个节点</span></span><br><span class="line">      head-&gt;next = successor;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>详细的迭代写法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reverseLinkedList</span><span class="params">(ListNode *head)</span> </span>{</span><br><span class="line">        <span class="comment">// 也可以使用递归反转一个链表</span></span><br><span class="line">        ListNode *pre = <span class="literal">nullptr</span>;</span><br><span class="line">        ListNode *cur = head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">nullptr</span>) {</span><br><span class="line">            ListNode *next = cur-&gt;next;</span><br><span class="line">            cur-&gt;next = pre;</span><br><span class="line">            pre = cur;</span><br><span class="line">            cur = next;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">reverseBetween</span><span class="params">(ListNode *head, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>{</span><br><span class="line">        <span class="comment">// 因为头节点有可能发生变化，使用虚拟头节点可以避免复杂的分类讨论</span></span><br><span class="line">        ListNode *dummyNode = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">        dummyNode-&gt;next = head;</span><br><span class="line"></span><br><span class="line">        ListNode *pre = dummyNode;</span><br><span class="line">        <span class="comment">// 第 1 步：从虚拟头节点走 left - 1 步，来到 left 节点的前一个节点</span></span><br><span class="line">        <span class="comment">// 建议写在 for 循环里，语义清晰</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; left - <span class="number">1</span>; i++) {</span><br><span class="line">            pre = pre-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 2 步：从 pre 再走 right - left + 1 步，来到 right 节点</span></span><br><span class="line">        ListNode *rightNode = pre;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; right - left + <span class="number">1</span>; i++) {</span><br><span class="line">            rightNode = rightNode-&gt;next;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 3 步：切断出一个子链表（截取链表）</span></span><br><span class="line">        ListNode *leftNode = pre-&gt;next;</span><br><span class="line">        ListNode *curr = rightNode-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注意：切断链接</span></span><br><span class="line">        pre-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">        rightNode-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 4 步：同第 206 题，反转链表的子区间</span></span><br><span class="line">        <span class="built_in">reverseLinkedList</span>(leftNode);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第 5 步：接回到原来的链表中</span></span><br><span class="line">        pre-&gt;next = rightNode;</span><br><span class="line">        leftNode-&gt;next = curr;</span><br><span class="line">        <span class="keyword">return</span> dummyNode-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="如何-K-个一组反转链表"><a href="#如何-K-个一组反转链表" class="headerlink" title="如何 K 个一组反转链表"></a>如何 K 个一组反转链表</h2><h3 id="25-K-个一组翻转链表"><a href="#25-K-个一组翻转链表" class="headerlink" title="25. K 个一组翻转链表"></a><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">25. K 个一组翻转链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=25&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/#">思路</a></p><p>难度困难1520</p><p>给你一个链表，每 <em>k</em> 个节点一组进行翻转，请你返回翻转后的链表。</p><p><em>k</em> 是一个正整数，它的值小于或等于链表的长度。</p><p>如果节点总数不是 <em>k</em> 的整数倍，那么请将最后剩余的节点保持原有顺序。</p><p><strong>进阶：</strong></p><ul><li>你可以设计一个只使用常数额外空间的算法来解决此问题吗？</li><li><strong>你不能只是单纯的改变节点内部的值</strong>，而是需要实际进行节点交换。</li></ul><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203130004385.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 2</span><br><span class="line">输出：[2,1,4,3,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203130004388.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 3</span><br><span class="line">输出：[3,2,1,4,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5], k = 1</span><br><span class="line">输出：[1,2,3,4,5]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 4：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1], k = 1</span><br><span class="line">输出：[1]</span><br></pre></td></tr></tbody></table></figure><p>难理解但是写起来相对简单的解法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** 反转区间 [a, b) 的元素，注意是左闭右开 */</span></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverse</span><span class="params">(ListNode* a, ListNode* b)</span> </span>{</span><br><span class="line">      ListNode* pre;</span><br><span class="line">      ListNode* cur;</span><br><span class="line">      ListNode* nxt;</span><br><span class="line">      pre = <span class="literal">nullptr</span>; cur = a; nxt = a;</span><br><span class="line">      <span class="comment">// while 终止的条件改一下就行了</span></span><br><span class="line">      <span class="keyword">while</span> (cur != b) {</span><br><span class="line">        nxt = cur-&gt;next;</span><br><span class="line">        cur-&gt;next = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = nxt;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// 返回反转后的头结点</span></span><br><span class="line">      <span class="keyword">return</span> pre;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseKGroup</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">      ListNode* a;</span><br><span class="line">      ListNode* b;</span><br><span class="line">      a = b = head;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;k; i++){</span><br><span class="line">        <span class="keyword">if</span>(b == <span class="literal">nullptr</span>) <span class="keyword">return</span> head;</span><br><span class="line">        b = b-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* newHead = <span class="built_in">reverse</span>(a, b);</span><br><span class="line">      a-&gt;next = <span class="built_in">reverseKGroup</span>(b, k);</span><br><span class="line">      <span class="keyword">return</span> newHead;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>解释一下 <code>for</code> 循环之后的几句代码，注意 <code>reverse</code> 函数是反转区间 <code>[a, b)</code>，所以情形是这样的：</p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203130047155.jpeg" alt="img" style="zoom:50%;"><p>递归部分就不展开了，整个函数递归完成之后就是这个结果，完全符合题意：</p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203130047037.jpeg" alt="img" style="zoom:50%;"><h4 id="好理解但是写起来困难的解法"><a href="#好理解但是写起来困难的解法" class="headerlink" title="好理解但是写起来困难的解法"></a>好理解但是写起来困难的解法</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 翻转一个子链表，并且返回新的头与尾</span></span><br><span class="line">    <span class="function">pair&lt;ListNode*, ListNode*&gt; <span class="title">myReverse</span><span class="params">(ListNode* head, ListNode* tail)</span> </span>{</span><br><span class="line">        <span class="comment">//ListNode* prev = tail-&gt;next; //这个指向没有任何作用,函数外面添加了指向</span></span><br><span class="line">        ListNode* prev;</span><br><span class="line">        ListNode* p = head;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不能使用p!=tail-&gt;next,这是因为tail-&gt;next指向发生了更改</span></span><br><span class="line">        <span class="comment">//不能while(p) 因为p只有有链接</span></span><br><span class="line">        <span class="keyword">while</span> (prev != tail) { <span class="comment">//pre &lt;- p 这样循环向前移动的</span></span><br><span class="line">            ListNode* nex = p-&gt;next;</span><br><span class="line">            p-&gt;next = prev;</span><br><span class="line">            prev = p;</span><br><span class="line">            p = nex;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> {tail, head};</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseKGroup</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        ListNode* hair = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        hair-&gt;next = head;</span><br><span class="line">        ListNode* pre = hair;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (head) {</span><br><span class="line">            ListNode* tail = pre;</span><br><span class="line">            <span class="comment">// 查看剩余部分长度是否大于等于 k</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; ++i) {</span><br><span class="line">                tail = tail-&gt;next;</span><br><span class="line">                <span class="keyword">if</span> (!tail) {</span><br><span class="line">                    <span class="keyword">return</span> hair-&gt;next;  <span class="comment">//不足k，此区域不反转 直接返回</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            ListNode* nexHead = tail-&gt;next;  <span class="comment">//区域外的下一区域的头</span></span><br><span class="line">            <span class="comment">// 这里是 C++17 的写法，也可以写成</span></span><br><span class="line">            <span class="comment">// pair&lt;ListNode*, ListNode*&gt; result = myReverse(head, tail);</span></span><br><span class="line">            <span class="comment">// head = result.first;</span></span><br><span class="line">            <span class="comment">// tail = result.second;</span></span><br><span class="line">            <span class="built_in">tie</span>(head, tail) = <span class="built_in">myReverse</span>(head, tail);</span><br><span class="line">            <span class="comment">// 把子链表重新接回原链表</span></span><br><span class="line">            pre-&gt;next = head;</span><br><span class="line">            tail-&gt;next = nexHead;</span><br><span class="line">            pre = tail;</span><br><span class="line">            head = nexHead;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> hair-&gt;next;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h2 id="如何判断回文链表"><a href="#如何判断回文链表" class="headerlink" title="如何判断回文链表"></a>如何判断回文链表</h2><h3 id="234-回文链表"><a href="#234-回文链表" class="headerlink" title="234. 回文链表"></a><a href="https://leetcode-cn.com/problems/palindrome-linked-list/">234. 回文链表</a></h3><p><a href="https://labuladong.gitee.io/plugin-v4/?qno=234&amp;target=gitee">labuladong 题解</a><a href="https://leetcode-cn.com/problems/palindrome-linked-list/#">思路</a></p><p>难度简单1293</p><p>给你一个单链表的头节点 <code>head</code> ，请你判断该链表是否为回文链表。如果是，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203130110029.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,2,1]</span><br><span class="line">输出：true</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/202203130110233.jpeg" alt="img"></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：false</span><br></pre></td></tr></tbody></table></figure><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//辅助容器</span></span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; vals;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">nullptr</span>) {</span><br><span class="line">      vals.<span class="built_in">emplace_back</span>(head-&gt;val);</span><br><span class="line">      head = head-&gt;next;</span><br><span class="line">    }</span><br><span class="line">      <span class="comment">//回文判断的双指针写法 记一下</span></span><br><span class="line">    <span class="comment">// for (int i = 0, j = (int)vals.size() - 1; i &lt; j; ++i, --j) {</span></span><br><span class="line">    <span class="comment">//   if (vals[i] != vals[j]) {</span></span><br><span class="line">    <span class="comment">//       return false;</span></span><br><span class="line">    <span class="comment">//   }</span></span><br><span class="line">    <span class="comment">// }</span></span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = vals.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">while</span>(left&lt;right){</span><br><span class="line">        <span class="keyword">if</span>(vals[left]!= vals[right])</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        left++;</span><br><span class="line">        right--;</span><br><span class="line">      }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//递归模拟双指针</span></span><br><span class="line">    ListNode* left;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      left = head;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">traverse</span>(head);</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">traverse</span><span class="params">(ListNode* right)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(right == <span class="literal">nullptr</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">bool</span> res = <span class="built_in">traverse</span>(right-&gt;next);</span><br><span class="line">      <span class="comment">//后序遍历代码</span></span><br><span class="line">      res = res &amp;&amp; (right-&gt;val == left-&gt;val);</span><br><span class="line">      left = left-&gt;next;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//双指针 优化 为了秀而秀 秀nm呢</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>{</span><br><span class="line">      ListNode* slow;</span><br><span class="line">      ListNode* fast;</span><br><span class="line">      slow = fast = head;</span><br><span class="line">      <span class="keyword">while</span>(fast &amp;&amp; fast-&gt;next){</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(fast){ <span class="comment">//奇数个元素</span></span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      ListNode* left = head;</span><br><span class="line">      ListNode* right = <span class="built_in">reverse</span>(slow);</span><br><span class="line">      <span class="keyword">while</span>(right){</span><br><span class="line">        <span class="keyword">if</span>(left-&gt;val!=right-&gt;val)</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        left = left-&gt;next;</span><br><span class="line">        right = right-&gt;next;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    <span class="function">ListNode* <span class="title">reverse</span><span class="params">(ListNode* head)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(head == <span class="literal">nullptr</span> || head-&gt;next == <span class="literal">nullptr</span>) <span class="keyword">return</span> head;</span><br><span class="line">      ListNode* last = <span class="built_in">reverse</span>(head-&gt;next);</span><br><span class="line">      head-&gt;next-&gt;next = head;</span><br><span class="line">      head-&gt;next = <span class="literal">nullptr</span>;</span><br><span class="line">      <span class="keyword">return</span> last;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>滑动窗口</title>
      <link href="/2022/03/15/hua-dong-chuang-kou/"/>
      <url>/2022/03/15/hua-dong-chuang-kou/</url>
      
        <content type="html"><![CDATA[<h1 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h1><p>框架</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滑动窗口算法框架 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slidingWindow</span><span class="params">(string s, string t)</span> </span>{</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c : t) need[c]++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> valid = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">        <span class="comment">// c 是将移入窗口的字符</span></span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        <span class="comment">// 右移窗口</span></span><br><span class="line">        right++;</span><br><span class="line">        <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*** debug 输出的位置 ***/</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"window: [%d, %d)\n"</span>, left, right);</span><br><span class="line">        <span class="comment">/********************/</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 判断左侧窗口是否要收缩</span></span><br><span class="line">        <span class="keyword">while</span> (window needs shrink) {</span><br><span class="line">            <span class="comment">// d 是将移出窗口的字符</span></span><br><span class="line">            <span class="keyword">char</span> d = s[left];</span><br><span class="line">            <span class="comment">// 左移窗口</span></span><br><span class="line">            left++;</span><br><span class="line">            <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">            ...</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="76-最小覆盖子串-困难-滑滑滑"><a href="#76-最小覆盖子串-困难-滑滑滑" class="headerlink" title="76. 最小覆盖子串 困难 滑滑滑"></a><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. 最小覆盖子串</a> 困难 滑滑滑</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function">string <span class="title">minWindow</span><span class="params">(string s, string t)</span> </span>{</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c : t)</span><br><span class="line">      need[c]++;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> valid = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//记录最小覆盖字串的其实索引和长度</span></span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">0</span>, len = INT_MAX;</span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">      <span class="comment">// c是移入窗口的字符</span></span><br><span class="line">      <span class="keyword">char</span> c = s[right];</span><br><span class="line">      right++;</span><br><span class="line">      <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">      <span class="keyword">if</span> (need.<span class="built_in">count</span>(c)) {</span><br><span class="line">        window[c]++;</span><br><span class="line">        <span class="keyword">if</span> (window[c] == need[c])</span><br><span class="line">          valid++;</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">//判断左窗口是否需要收缩</span></span><br><span class="line">      <span class="keyword">while</span> (valid == need.<span class="built_in">size</span>()) { <span class="comment">//窗口满足条件</span></span><br><span class="line">                                     <span class="comment">// 在这里更新最小覆盖子串</span></span><br><span class="line">        <span class="keyword">if</span> (right - left &lt; len) {</span><br><span class="line">          start = left;</span><br><span class="line">          len = right - left;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// d 是将移出窗口的字符</span></span><br><span class="line">        <span class="keyword">char</span> d = s[left];</span><br><span class="line">        <span class="comment">// 左移窗口</span></span><br><span class="line">        left++;</span><br><span class="line">        <span class="comment">// 进行窗口内数据的一系列更新</span></span><br><span class="line">        <span class="keyword">if</span> (need.<span class="built_in">count</span>(d)) {</span><br><span class="line">          <span class="keyword">if</span> (window[d] == need[d]) {</span><br><span class="line">            valid--;</span><br><span class="line">          }</span><br><span class="line">          window[d]--;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> len == INT_MAX ? <span class="string">""</span> : s.<span class="built_in">substr</span>(start, len);</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="567-字符串的排列-中等-滑滑滑"><a href="#567-字符串的排列-中等-滑滑滑" class="headerlink" title="567. 字符串的排列 中等 滑滑滑"></a><a href="https://leetcode-cn.com/problems/permutation-in-string/">567. 字符串的排列</a> 中等 滑滑滑</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkInclusion</span><span class="params">(string t, string s)</span> </span>{</span><br><span class="line">      unordered_map&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; window, need;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">char</span> c : t) need[c]++;</span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> valid = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(right &lt; s.<span class="built_in">size</span>()){</span><br><span class="line">        <span class="comment">//扩大 知道满足 window = need</span></span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        right++;</span><br><span class="line">        <span class="keyword">if</span>(need.<span class="built_in">count</span>(c)){</span><br><span class="line">          window[c]++;</span><br><span class="line">          <span class="keyword">if</span>(window[c] == need[c])</span><br><span class="line">            valid++;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//个数满足</span></span><br><span class="line">        <span class="keyword">while</span>(right-left&gt;=t.<span class="built_in">size</span>()){  <span class="comment">//缩减窗口到t的长度</span></span><br><span class="line">          <span class="keyword">if</span>(valid == need.<span class="built_in">size</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">          <span class="keyword">char</span> d = s[left];</span><br><span class="line">          left++;</span><br><span class="line">          <span class="keyword">if</span>(need.<span class="built_in">count</span>(d)){</span><br><span class="line">            <span class="keyword">if</span>(window[d] == need[d])</span><br><span class="line">              valid--;</span><br><span class="line">            window[d]--;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="438-找到字符串中所有字母异位词-中等-滑滑滑-接着滑"><a href="#438-找到字符串中所有字母异位词-中等-滑滑滑-接着滑" class="headerlink" title="438. 找到字符串中所有字母异位词 中等 滑滑滑 接着滑"></a><a href="https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/">438. 找到字符串中所有字母异位词</a> 中等 滑滑滑 接着滑</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//     map&lt;char, int&gt; checkAna;</span></span><br><span class="line"><span class="comment">//     map&lt;char, int&gt; checkAnb;</span></span><br><span class="line"><span class="comment">//     vector&lt;int&gt; findAnagrams(string s, string p) {</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; res;</span></span><br><span class="line"><span class="comment">//         int n = s.size(); </span></span><br><span class="line"><span class="comment">//         int nn = p.size();</span></span><br><span class="line"><span class="comment">//         if(isAnagrams("abc", "bca")){</span></span><br><span class="line"><span class="comment">//             cout&lt;&lt;"check"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;n-nn+1; i++){</span></span><br><span class="line"><span class="comment">//             cout&lt;&lt;s.substr(i, nn) &lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//             if(isAnagrams(s.substr(i, nn), p))</span></span><br><span class="line"><span class="comment">//                 res.push_back(i);</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return res;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">//     bool isAnagrams(string a, string b){</span></span><br><span class="line"><span class="comment">//         checkAna.clear();</span></span><br><span class="line"><span class="comment">//         checkAnb.clear();</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;a.size(); i++){</span></span><br><span class="line"><span class="comment">//             checkAna[a[i]]++;</span></span><br><span class="line"><span class="comment">//             checkAnb[b[i]]++;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         for(auto it = checkAna.begin(); it !=checkAna.end(); it++){</span></span><br><span class="line"><span class="comment">//             if(it-&gt;second != checkAnb[it-&gt;first])</span></span><br><span class="line"><span class="comment">//                 return 0;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return 1;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//     vector&lt;int&gt; findAnagrams(string s, string p) {</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; res;</span></span><br><span class="line"><span class="comment">//         int n = s.size(); </span></span><br><span class="line"><span class="comment">//         int nn = p.size();</span></span><br><span class="line"><span class="comment">//         if(n&lt;nn) return vector&lt;int&gt;();</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; ss(26);</span></span><br><span class="line"><span class="comment">//         vector&lt;int&gt; pp(26);</span></span><br><span class="line"><span class="comment">//         //初始化保证窗口初始移动</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;nn; i++){</span></span><br><span class="line"><span class="comment">//             ss[s[i]-'a']++;</span></span><br><span class="line"><span class="comment">//             pp[p[i]-'a']++;</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         if(ss == pp) res.push_back(0);</span></span><br><span class="line"><span class="comment">//         for(int i = 0; i&lt;n-nn; i++){</span></span><br><span class="line"><span class="comment">//             ss[s[i]-'a']--;</span></span><br><span class="line"><span class="comment">//             ss[s[i+nn]-'a']++;</span></span><br><span class="line"><span class="comment">//             if(ss == pp) res.push_back(i+1);</span></span><br><span class="line"><span class="comment">//         }</span></span><br><span class="line"><span class="comment">//         return res;</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">findAnagrams</span><span class="params">(string s, string p)</span> </span>{</span><br><span class="line">      vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">      unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; need, window;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">char</span> c : p) need[c]++;</span><br><span class="line">      <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>, valid = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(right&lt;s.<span class="built_in">size</span>()){</span><br><span class="line">        <span class="keyword">char</span> c = s[right];</span><br><span class="line">        right++;</span><br><span class="line">        <span class="keyword">if</span>(need.<span class="built_in">count</span>(c)){</span><br><span class="line">          window[c]++;</span><br><span class="line">          <span class="keyword">if</span>(window[c] == need[c])</span><br><span class="line">            valid++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span>(right-left &gt;= p.<span class="built_in">size</span>()){</span><br><span class="line">          <span class="keyword">if</span>(valid == need.<span class="built_in">size</span>()) ans.<span class="built_in">push_back</span>(left);</span><br><span class="line">          <span class="keyword">char</span> d = s[left];</span><br><span class="line">          left++;</span><br><span class="line">          <span class="keyword">if</span>(need.<span class="built_in">count</span>(d)){</span><br><span class="line">            <span class="keyword">if</span>(need[d] == window[d])</span><br><span class="line">              valid--;</span><br><span class="line">            window[d]--;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="3-无重复字符的最长子串"><a href="#3-无重复字符的最长子串" class="headerlink" title="3. 无重复字符的最长子串"></a><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(string s)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    unordered_map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; window;</span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="built_in">size</span>()) {</span><br><span class="line">      <span class="keyword">char</span> c = s[right];</span><br><span class="line">      right++;</span><br><span class="line">      window[c]++;</span><br><span class="line">      <span class="keyword">while</span> (window[c] &gt; <span class="number">1</span>) { <span class="comment">//有重复就要从left++ 直到消除当前重复</span></span><br><span class="line">        <span class="keyword">char</span> d = s[left];</span><br><span class="line">        left++;</span><br><span class="line">        window[d]--;</span><br><span class="line">      }</span><br><span class="line">      ans = <span class="built_in">max</span>(ans, right - left);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"><span class="comment">// class Solution {</span></span><br><span class="line"><span class="comment">// public:</span></span><br><span class="line"><span class="comment">//   int lengthOfLongestSubstring(string s) {</span></span><br><span class="line"><span class="comment">//     if (s.size() == 0)</span></span><br><span class="line"><span class="comment">//       return 0;</span></span><br><span class="line"><span class="comment">//     unordered_set&lt;char&gt; lookup;</span></span><br><span class="line"><span class="comment">//     int maxStr = 0;</span></span><br><span class="line"><span class="comment">//     int left = 0;</span></span><br><span class="line"><span class="comment">//     for (int i = 0; i &lt; s.size(); i++) {</span></span><br><span class="line"><span class="comment">//       while (lookup.find(s[i]) != lookup.end()) {</span></span><br><span class="line"><span class="comment">//         lookup.erase(s[left]);</span></span><br><span class="line"><span class="comment">//         left++;</span></span><br><span class="line"><span class="comment">//       }</span></span><br><span class="line"><span class="comment">//       maxStr = max(maxStr, i - left + 1);</span></span><br><span class="line"><span class="comment">//       lookup.insert(s[i]);</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line"><span class="comment">//     return maxStr;</span></span><br><span class="line"><span class="comment">//   }</span></span><br><span class="line"><span class="comment">// };</span></span><br><span class="line">  <span class="comment">//int lengthOfLongestSubstring(string s) {</span></span><br><span class="line">  <span class="comment">//  if (s.size() == 0) {</span></span><br><span class="line">  <span class="comment">//    return 0;</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  vector&lt;string&gt; ss;</span></span><br><span class="line">  <span class="comment">//  for (int i = 0; i &lt; s.size(); i++) {</span></span><br><span class="line">  <span class="comment">//    unordered_map&lt;char, int&gt; temp_map;</span></span><br><span class="line">  <span class="comment">//    for (int j = i; j &lt; s.size(); j++) {</span></span><br><span class="line">  <span class="comment">//      ++temp_map[s[j]];</span></span><br><span class="line">  <span class="comment">//      if (temp_map[s[j]] &gt; 1) {</span></span><br><span class="line">  <span class="comment">//        string sss = s.substr(i, j - i);</span></span><br><span class="line">  <span class="comment">//        ss.push_back(sss);</span></span><br><span class="line">  <span class="comment">//        break;</span></span><br><span class="line">  <span class="comment">//      }</span></span><br><span class="line">  <span class="comment">//      if (j == s.size() - 1) {</span></span><br><span class="line">  <span class="comment">//        string sss = s.substr(i, s.size() - i);</span></span><br><span class="line">  <span class="comment">//        ss.push_back(sss);</span></span><br><span class="line">  <span class="comment">//      }</span></span><br><span class="line">  <span class="comment">//    }</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  if (ss.size() == 0) {</span></span><br><span class="line">  <span class="comment">//    return s.size();</span></span><br><span class="line">  <span class="comment">//  }</span></span><br><span class="line">  <span class="comment">//  sort(ss.begin(), ss.end(),</span></span><br><span class="line">  <span class="comment">//       [](string &amp;a, string &amp;b) { return a.size() &gt; b.size(); });</span></span><br><span class="line">  <span class="comment">//  return ss[0].size();</span></span><br><span class="line">  <span class="comment">//}</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回溯</title>
      <link href="/2022/03/15/hui-su/"/>
      <url>/2022/03/15/hui-su/</url>
      
        <content type="html"><![CDATA[<h1 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h1><h3 id="回溯模板"><a href="#回溯模板" class="headerlink" title="回溯模板"></a>回溯模板</h3><h3 id="1-组合问题"><a href="#1-组合问题" class="headerlink" title="1. 组合问题"></a>1. 组合问题</h3><ol><li>组合问题 ==每次for都是从startIndex开始==</li><li>每个元素 用一次和用多次体现在 ==backtrack(i+1)==用一次还是==backtrack(i)用多次==上</li><li>组合问题==不需要used数组==，去重也不需要used数组那个判断</li></ol><h4 id="77-n元素下的k元素组合"><a href="#77-n元素下的k元素组合" class="headerlink" title="77. n元素下的k元素组合"></a><a href="https://leetcode-cn.com/problems/combinations/">77. n元素下的k元素组合</a></h4><p>给定两个整数 <code>n</code> 和 <code>k</code>，返回范围 <code>[1, n]</code> 中所有可能的 <code>k</code> 个数的组合。</p><p>你可以按 <strong>任何顺序</strong> 返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, k = 2</span><br><span class="line">输出：</span><br><span class="line">[</span><br><span class="line">  [2,4],</span><br><span class="line">  [3,4],</span><br><span class="line">  [2,3],</span><br><span class="line">  [1,2],</span><br><span class="line">  [1,3],</span><br><span class="line">  [1,4],</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 1, k = 1</span><br><span class="line">输出：[[1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><ol><li>按回溯模板 直接写 </li><li>注意剪枝操作， 超过k个元素不再进入递归 24ms-&gt;8ms</li></ol><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combine</span>(<span class="keyword">int</span> n, <span class="keyword">int</span> k) {</span><br><span class="line">        <span class="keyword">this</span>-&gt;n = n;</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k;</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        all.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtrack</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(<span class="keyword">int</span> num)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(path.<span class="built_in">size</span>() == k){</span><br><span class="line">            all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"><span class="comment">//进行剪枝， 超过k个元素不再进入递归 24ms-&gt;8ms</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = num; i&lt;=n - (k-path.<span class="built_in">size</span>()) + <span class="number">1</span>; i++){</span><br><span class="line">            path.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="built_in">backtrack</span>(i+<span class="number">1</span>);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="39-组合总和"><a href="#39-组合总和" class="headerlink" title="39. 组合总和"></a><a href="https://leetcode-cn.com/problems/combination-sum/">39. 组合总和</a></h4><p>给你一个 <strong>无重复元素</strong> 的整数数组 <code>candidates</code> 和一个目标整数 <code>target</code> ，找出 <code>candidates</code> 中可以使数字和为目标数 <code>target</code> 的 <em>所有</em> <strong>不同组合</strong> ，并以列表形式返回。你可以按 <strong>任意顺序</strong> 返回这些组合。</p><p><code>candidates</code> 中的 <strong>同一个</strong> 数字可以 <strong>无限制重复被选取</strong> 。如果至少一个数字的被选数量不同，则两种组合是不同的。 </p><p>对于给定的输入，保证和为 <code>target</code> 的不同组合数少于 <code>150</code> 个。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：candidates = [2,3,6,7], target = 7</span><br><span class="line">输出：[[2,2,3],[7]]</span><br><span class="line">解释：</span><br><span class="line">2 和 3 可以形成一组候选，2 + 2 + 3 = 7 。注意 2 可以使用多次。</span><br><span class="line">7 也是一个候选， 7 = 7 。</span><br><span class="line">仅有这两种组合。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [2,3,5], target = 8</span><br><span class="line">输出: [[2,2,2,2],[2,3,3],[3,5]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h5><ol><li>注意这个题 单个元素是可以重复使用的 表现在代码上 for循环内 backtrack是i 而不是i+1</li><li>sum 和 target 的判断逻辑注意下</li></ol><h5 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> index, <span class="keyword">int</span> target, <span class="keyword">int</span> sum)</span></span>{</span><br><span class="line">      <span class="comment">//这里sum和target的判断逻辑注意下</span></span><br><span class="line">      <span class="keyword">if</span>(sum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">if</span>(sum == target) {</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path); </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = index; i&lt;candidates.<span class="built_in">size</span>(); i++){</span><br><span class="line">        path.<span class="built_in">push_back</span>(candidates[i]);</span><br><span class="line">        <span class="built_in">backtracking</span>(candidates, i, target, sum + candidates[i]); <span class="comment">//注意 这里的i不加1 不然没有数重复的</span></span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target) {</span><br><span class="line">      <span class="built_in">backtracking</span>(candidates,<span class="number">0</span>, target, <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="216-组合总和-III"><a href="#216-组合总和-III" class="headerlink" title="216. 组合总和 III"></a><a href="https://leetcode-cn.com/problems/combination-sum-iii/">216. 组合总和 III</a></h4><p>找出所有相加之和为 <code>n</code> 的 <code>k</code> 个数的组合，且满足下列条件：</p><ul><li>只使用数字1到9</li><li>每个数字 <strong>最多使用一次</strong></li></ul><p>返回 <em>所有可能的有效组合的列表</em> 。该列表不能包含相同的组合两次，组合可以以任何顺序返回。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入: k = 3, n = 7</span><br><span class="line">输出: [[1,2,4]]</span><br><span class="line">解释:</span><br><span class="line">1 + 2 + 4 = 7</span><br><span class="line">没有其他符合的组合了。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入: k = 3, n = 9</span><br><span class="line">输出: [[1,2,6], [1,3,5], [2,3,4]]</span><br><span class="line">解释:</span><br><span class="line">1 + 2 + 6 = 9</span><br><span class="line">1 + 3 + 5 = 9</span><br><span class="line">2 + 3 + 4 = 9</span><br><span class="line">没有其他符合的组合了。</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h5><ol><li>结束终止满足两个条件之一 <code>nowSum &gt;= n || path.size() == k</code>即可  </li><li>满足条件的结果  <code>nowSum == n &amp;&amp; path.size() == k</code></li></ol><h5 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    <span class="keyword">int</span> k,n ;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum3</span>(<span class="keyword">int</span> k, <span class="keyword">int</span> n) {</span><br><span class="line">        <span class="keyword">this</span>-&gt;k = k; </span><br><span class="line">        <span class="keyword">this</span>-&gt;n = n;</span><br><span class="line">        <span class="built_in">backtrack</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> nowSum)</span></span>{</span><br><span class="line">        <span class="comment">//if(cur&gt;9) return;  //注意这句不能要 不然会 9 45判错 最后cur 10 直接返回掉</span></span><br><span class="line">        <span class="keyword">if</span>(nowSum &gt;= n || path.<span class="built_in">size</span>() == k){</span><br><span class="line">            <span class="keyword">if</span>(nowSum == n &amp;&amp; path.<span class="built_in">size</span>() == k)</span><br><span class="line">                all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = cur; i&lt;=<span class="number">9</span>; i++){</span><br><span class="line">            path.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="built_in">backtrack</span>(i+<span class="number">1</span>, nowSum + i);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="40-组合总和-II"><a href="#40-组合总和-II" class="headerlink" title="40. 组合总和 II"></a><a href="https://leetcode-cn.com/problems/combination-sum-ii/">40. 组合总和 II</a></h4><p>给定一个候选人编号的集合 <code>candidates</code> 和一个目标数 <code>target</code> ，找出 <code>candidates</code> 中所有可以使数字和为 <code>target</code> 的组合。</p><p><code>candidates</code> 中的每个数字在每个组合中只能使用 <strong>一次</strong> 。</p><p><strong>注意：</strong>解集不能包含重复的组合。 </p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [10,1,2,7,6,1,5], target = 8,</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">[1,1,6],</span><br><span class="line">[1,2,5],</span><br><span class="line">[1,7],</span><br><span class="line">[2,6]</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: candidates = [2,5,2,1,2], target = 5,</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">[1,2,2],</span><br><span class="line">[5]</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h5><ol><li>结束终止满足两个条件之一 <code>nowSum &gt;= n || path.size() == k</code>即可  </li><li>满足条件的结果  <code>nowSum == n &amp;&amp; path.size() == k</code></li></ol><h5 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//去重操作 数组中包含重复元素 所以要去重</span></span><br><span class="line">    <span class="comment">//注意 并不需要used数组 used数组只在排列中用到?即(for(int i = 0)的时候用到)</span></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; all;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">combinationSum2</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target) {</span><br><span class="line">        <span class="comment">//排序让相同的元素挨着</span></span><br><span class="line">        <span class="built_in">sort</span>(candidates.<span class="built_in">begin</span>(), candidates.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">backtrack</span>(candidates, target, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> all;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; candidates, <span class="keyword">int</span> target, <span class="keyword">int</span> curIndex, <span class="keyword">int</span> nowSum)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(nowSum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(nowSum == target){</span><br><span class="line">            all.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = curIndex; i&lt;candidates.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="comment">// 经典的去重操作 全排列中也用到了</span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;curIndex &amp;&amp; candidates[i] == candidates[i<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            path.<span class="built_in">push_back</span>(candidates[i]);</span><br><span class="line">            <span class="comment">//这里是i+1，每个数字在每个组合中只能使用一次</span></span><br><span class="line">            <span class="built_in">backtrack</span>(candidates, target, i+<span class="number">1</span>,  nowSum+candidates[i]);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="377-组合总和-Ⅳ"><a href="#377-组合总和-Ⅳ" class="headerlink" title="377. 组合总和 Ⅳ"></a><a href="https://leetcode-cn.com/problems/combination-sum-iv/">377. 组合总和 Ⅳ</a></h4><p>给你一个由 <strong>不同</strong> 整数组成的数组 <code>nums</code> ，和一个目标整数 <code>target</code> 。请你从 <code>nums</code> 中找出并返回总和为 <code>target</code> 的元素组合的个数。</p><p>题目数据保证答案符合 32 位整数范围。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3], target = 4</span><br><span class="line">输出：7</span><br><span class="line">解释：</span><br><span class="line">所有可能的组合为：</span><br><span class="line">(1, 1, 1, 1)</span><br><span class="line">(1, 1, 2)</span><br><span class="line">(1, 2, 1)</span><br><span class="line">(1, 3)</span><br><span class="line">(2, 1, 1)</span><br><span class="line">(2, 2)</span><br><span class="line">(3, 1)</span><br><span class="line">请注意，顺序不同的序列被视作不同的组合。</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [9], target = 3</span><br><span class="line">输出：0</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h5><ol><li>名为组合 实为排列 解法dp</li><li>回溯超时 dp解答</li><li>记忆化dfs 其实就是dp了吧</li></ol><h5 id="暴力回溯代码"><a href="#暴力回溯代码" class="headerlink" title="暴力回溯代码"></a>暴力回溯代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, <span class="number">0</span>, target);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> nowSum, <span class="keyword">int</span> target)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(nowSum&gt;target) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(nowSum == target){</span><br><span class="line">            ans++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">      <span class="comment">//可以反向 就是排列了</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            <span class="built_in">backtrack</span>(nums, nowSum+nums[i], target);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="记忆化dfs"><a href="#记忆化dfs" class="headerlink" title="记忆化dfs"></a>记忆化dfs</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(nums, target);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//备忘录，保存每层递归的计算结果，用于实现记忆化。</span></span><br><span class="line">    unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; memo;</span><br><span class="line">    <span class="comment">//dfs(target)的定义： 用nums中的元素凑成总和为target（每个元素可以使用多次），用多少中凑法。</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span></span>{</span><br><span class="line">        <span class="keyword">if</span>(target == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(target &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(memo.<span class="built_in">count</span>(target) == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> memo[target];</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">            res += <span class="built_in">dfs</span>(nums, target - nums[i]);</span><br><span class="line">        }</span><br><span class="line">        memo[target] = res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="dp代码"><a href="#dp代码" class="headerlink" title="dp代码"></a>dp代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">        <span class="comment">//使用dp数组，dp[i]代表组合数为i时使用nums中的数能组成的组合数的个数</span></span><br><span class="line">        <span class="comment">//dp[i]=dp[i-nums[0]]+dp[i-nums[1]]+dp[i=nums[2]]+...</span></span><br><span class="line">        <span class="comment">//举个例子比如nums=[1,3,4],target=7;</span></span><br><span class="line">        <span class="comment">//dp[7]=dp[6]+dp[4]+dp[3]</span></span><br><span class="line">        <span class="comment">//其实就是说7的组合数可以由三部分组成，1和dp[6]，3和dp[4],4和dp[3];</span></span><br><span class="line">        <span class="function">vector&lt;<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>&gt; <span class="title">dp</span><span class="params">(target+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="comment">//是为了算上自己的情况，比如dp[1]可以由dp【0】和1这个数的这种情况组成。</span></span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=target; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> num : nums){</span><br><span class="line">                <span class="comment">//dp用int的话 有一个很傻逼的越界，需要 &amp;&amp; dp[i - num] &lt; INT_MAX - dp[i]</span></span><br><span class="line">                <span class="keyword">if</span>(i&gt;=num)  </span><br><span class="line">                    dp[i] += dp[i-num];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[target];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h3 id="2-排列问题"><a href="#2-排列问题" class="headerlink" title="2. 排列问题"></a>2. 排列问题</h3><ol><li>排列问题 ==每次for都是从0开始==</li><li>因为是排列 不能限制顺序 所以不传入index</li><li>==需要used数组==，去重判断重中之重</li></ol><h4 id="46-全排列"><a href="#46-全排列" class="headerlink" title="46. 全排列"></a><a href="https://leetcode-cn.com/problems/permutations/">46. 全排列</a></h4><p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <em>所有可能的全排列</em> 。你可以 <strong>按任意顺序</strong> 返回答案。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1]</span><br><span class="line">输出：[[0,1],[1,0]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1]</span><br><span class="line">输出：[[1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h5><ol><li>数组不重复 最简简单单的全排列，基本回溯解法</li><li>不讲五的解法 next_permutation （略）</li></ol><h5 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:    </span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, vector&lt;<span class="keyword">bool</span>&gt;&amp; used)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(path.<span class="built_in">size</span>() == nums.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="keyword">if</span>(used[i]) <span class="keyword">continue</span>;  <span class="comment">//数字不重复使用 需要used数组</span></span><br><span class="line">        used[i] = <span class="number">1</span>;</span><br><span class="line">        path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">        used[i] = <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">permute</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      ans.<span class="built_in">clear</span>();</span><br><span class="line">      path.<span class="built_in">clear</span>();</span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(), <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="31-下一个排列"><a href="#31-下一个排列" class="headerlink" title="31. 下一个排列"></a><a href="https://leetcode-cn.com/problems/next-permutation/">31. 下一个排列</a></h4><p>整数数组的一个 <strong>排列</strong> 就是将其所有成员以序列或线性顺序排列。</p><ul><li>例如，<code>arr = [1,2,3]</code> ，以下这些都可以视作 <code>arr</code> 的排列：<code>[1,2,3]</code>、<code>[1,3,2]</code>、<code>[3,1,2]</code>、<code>[2,3,1]</code> 。</li></ul><p>整数数组的 <strong>下一个排列</strong> 是指其整数的下一个字典序更大的排列。更正式地，如果数组的所有排列根据其字典顺序从小到大排列在一个容器中，那么数组的 <strong>下一个排列</strong> 就是在这个有序容器中排在它后面的那个排列。如果不存在下一个更大的排列，那么这个数组必须重排为字典序最小的排列（即，其元素按升序排列）。</p><ul><li>例如，<code>arr = [1,2,3]</code> 的下一个排列是 <code>[1,3,2]</code> 。</li><li>类似地，<code>arr = [2,3,1]</code> 的下一个排列是 <code>[3,1,2]</code> 。</li><li>而 <code>arr = [3,2,1]</code> 的下一个排列是 <code>[1,2,3]</code> ，因为 <code>[3,2,1]</code> 不存在一个字典序更大的排列。</li></ul><p>给你一个整数数组 <code>nums</code> ，找出 <code>nums</code> 的下一个排列。</p><p>必须**<a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95"> 原地 </a>**修改，只允许使用额外常数空间。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[1,3,2]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,2,1]</span><br><span class="line">输出：[1,2,3]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,5]</span><br><span class="line">输出：[1,5,1]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h5><p>题目要求实现 next_permutation</p><blockquote><p>我们需要将一个左边的「较小数」与一个右边的「较大数」交换，以能够让当前排列变大，从而得到下一个排列。</p><p>同时我们要让这个「较小数」尽量靠右，而「较大数」尽可能小。当交换完成后，「较大数」右边的数需要按照升序重新排列。这样可以在保证新排列大于原来排列的情况下，使变大的幅度尽可能小。</p><p>以排列 [4,5,2,6,3,1][4,5,2,6,3,1] 为例：</p><p>我们能找到的符合条件的一对「较小数」与「较大数」的组合为 2与 3，满足「较小数」尽量靠右，而「较大数」尽可能小。</p><p>当我们完成交换后排列变为 [4,5,3,6,2,1][4,5,3,6,2,1]，此时我们可以重排「较小数」右边的序列，序列变为 [4,5,3,1,2,6][4,5,3,1,2,6]。</p></blockquote><p>不明白就调试调试</p><h5 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">nextPermutation</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> i = nums.<span class="built_in">size</span>() - <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; nums[i] &gt;= nums[i + <span class="number">1</span>]) {</span><br><span class="line">            i--; <span class="comment">//从后往前找到第一个增长的点 例子中i指向2</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">int</span> j = nums.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; nums[i] &gt;= nums[j]) { <span class="comment">//从后往前找到第一个大于nums[i]的点 例子中j指向3</span></span><br><span class="line">                j--;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//453621 //此时满足 较小的&gt;2的3替换了2，满足了大排列，而i之后单减</span></span><br><span class="line">            <span class="built_in">swap</span>(nums[i], nums[j]); </span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//453126</span></span><br><span class="line">        <span class="built_in">reverse</span>(nums.<span class="built_in">begin</span>() + i + <span class="number">1</span>, nums.<span class="built_in">end</span>());</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="47-全排列-II"><a href="#47-全排列-II" class="headerlink" title="47. 全排列 II"></a><a href="https://leetcode-cn.com/problems/permutations-ii/">47. 全排列 II</a></h4><p>给定一个可包含重复数字的序列 <code>nums</code> ，<em><strong>按任意顺序</strong></em> 返回所有不重复的全排列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,2]</span><br><span class="line">输出：</span><br><span class="line">[[1,1,2],</span><br><span class="line"> [1,2,1],</span><br><span class="line"> [2,1,1]]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,2,3]</span><br><span class="line">输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h5><ol><li><p>重点！重复元素全排列主要是去重问题</p><blockquote><p><code>(i&gt;0 &amp;&amp; !used[i-1] &amp;&amp; nums[i] == nums[i-1])</code></p></blockquote></li><li></li></ol><h5 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; ans;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line">    vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">permuteUnique</span>(vector&lt;<span class="keyword">int</span>&gt;&amp; nums) {</span><br><span class="line">      <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());  <span class="comment">//去重需要排序 使得相同的元素挨在一起</span></span><br><span class="line">      <span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(), <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; nums, vector&lt;<span class="keyword">bool</span>&gt;&amp; used)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(path.<span class="built_in">size</span>() == nums.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++){</span><br><span class="line">        <span class="comment">//注意这里的去重判断是重中之重</span></span><br><span class="line">        <span class="keyword">if</span>(used[i] || (i&gt;<span class="number">0</span> &amp;&amp; !used[i<span class="number">-1</span>] &amp;&amp; nums[i] == nums[i<span class="number">-1</span>]))  </span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        used[i] = <span class="number">1</span>;</span><br><span class="line">        path.<span class="built_in">push_back</span>(nums[i]);</span><br><span class="line">        <span class="built_in">backtrack</span>(nums, used);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">        used[i] = <span class="number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="784-字母大小写全排列"><a href="#784-字母大小写全排列" class="headerlink" title="784. 字母大小写全排列"></a><a href="https://leetcode-cn.com/problems/letter-case-permutation/">784. 字母大小写全排列</a></h4><p>难度中等368</p><p>给定一个字符串 <code>s</code> ，通过将字符串 <code>s</code> 中的每个字母转变大小写，我们可以获得一个新的字符串。</p><p>返回 <em>所有可能得到的字符串集合</em> 。以 <strong>任意顺序</strong> 返回输出。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s = "a1b2"</span><br><span class="line">输出：["a1b2", "a1B2", "A1b2", "A1B2"]</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = "3z4"</span><br><span class="line">输出: ["3z4","3Z4"]</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h5><h5 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    string path;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">letterCasePermutation</span><span class="params">(string s)</span> </span>{</span><br><span class="line">      <span class="built_in">backtrack</span>(s, <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">backtrack</span><span class="params">(string &amp;s, <span class="keyword">int</span> index)</span></span>{</span><br><span class="line">      <span class="keyword">if</span>(index == s.<span class="built_in">size</span>()){</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(!<span class="built_in">isalpha</span>(s[index])){</span><br><span class="line">        path+=s[index];</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }<span class="keyword">else</span>{</span><br><span class="line">        path+=(<span class="built_in">tolower</span>(s[index]));</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">  </span><br><span class="line">        path+=(<span class="built_in">toupper</span>(s[index]));</span><br><span class="line">        <span class="built_in">backtrack</span>(s, index+<span class="number">1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h4 id="60-排列序列"><a href="#60-排列序列" class="headerlink" title="60. 排列序列"></a><a href="https://leetcode-cn.com/problems/permutation-sequence/">60. 排列序列</a></h4><p>难度困难641</p><p>给出集合 <code>[1,2,3,...,n]</code>，其所有元素共有 <code>n!</code> 种排列。</p><p>按大小顺序列出所有排列情况，并一一标记，当 <code>n = 3</code> 时, 所有排列如下：</p><ol><li><code>"123"</code></li><li><code>"132"</code></li><li><code>"213"</code></li><li><code>"231"</code></li><li><code>"312"</code></li><li><code>"321"</code></li></ol><p>给定 <code>n</code> 和 <code>k</code>，返回第 <code>k</code> 个排列。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, k = 3</span><br><span class="line">输出："213"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 4, k = 9</span><br><span class="line">输出："2314"</span><br></pre></td></tr></tbody></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3, k = 1</span><br><span class="line">输出："123"</span><br></pre></td></tr></tbody></table></figure><h5 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h5><p>完全回溯无法通过 要实现==精准剪枝==</p><h5 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h5><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// 普通回溯过不了，需要精准剪枝到第k个叶节点</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">dsssfs</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k, unordered_set&lt;<span class="keyword">int</span>&gt; &amp;used, string &amp;tmp,</span></span></span><br><span class="line"><span class="params"><span class="function">              vector&lt;<span class="keyword">int</span>&gt; &amp;factorial)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (tmp.<span class="built_in">size</span>() == n) {</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> ind =</span><br><span class="line">        <span class="number">0</span>; <span class="comment">// 用来标记当前是第几次循环,直接用i的话有问题，比如说i是3，但是只是第一次循环，那就错了</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) {</span><br><span class="line">      <span class="keyword">if</span> (used.<span class="built_in">find</span>(i) != used.<span class="built_in">end</span>())</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      ++ind;</span><br><span class="line">      <span class="comment">// 需要看当前层切分后每个子节点包含的叶节点个数，所以要减一</span></span><br><span class="line">      <span class="keyword">int</span> size = factorial[n - used.<span class="built_in">size</span>() - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (k &gt; (ind - <span class="number">1</span>) * size &amp;&amp; k &lt;= ind * size) {</span><br><span class="line">        tmp.<span class="built_in">push_back</span>(i + <span class="string">'0'</span>);</span><br><span class="line">        used.<span class="built_in">insert</span>(i);</span><br><span class="line">        <span class="built_in">dsssfs</span>(n, k - size * (ind - <span class="number">1</span>), used, tmp, factorial);</span><br><span class="line">        <span class="comment">// 无需回溯，因为从dfs出来后就已经是结果了</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function">string <span class="title">getPermutation</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">    unordered_set&lt;<span class="keyword">int</span>&gt; used;</span><br><span class="line">    string tmp;</span><br><span class="line">    <span class="comment">// 提前吧阶乘算出来</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; factorial = {<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">24</span>, <span class="number">120</span>, <span class="number">720</span>, <span class="number">5040</span>, <span class="number">40320</span>, <span class="number">362880</span>};</span><br><span class="line">    <span class="built_in">dsssfs</span>(n, k, used, tmp, factorial);</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 算法总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode高频</title>
      <link href="/2022/03/14/leetcode-gao-pin/"/>
      <url>/2022/03/14/leetcode-gao-pin/</url>
      
        <content type="html"><![CDATA[<h1 id="Leetcode-retag"><a href="#Leetcode-retag" class="headerlink" title="Leetcode-retag"></a>Leetcode-retag</h1><p>重新分类 Leetcode 高频题 2021 版</p><ul><li>题目按照面试频率降序排列</li><li>增加难度分类，适合从简单开始学习</li><li>增加细分类别，例如单调栈，前缀树等，一道题目可能会有多个类别</li></ul><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%F0%90%80%B4-%E9%93%BE%E8%A1%A8">𐀴 链表</a><ul><li>单链表</li><li>双链表</li></ul></li><li><a href="#%F0%90%80%B4-%E6%A0%91">𐀴 树</a><ul><li>遍历</li><li>构造</li><li>路径 | 深度 | 翻转</li><li>二叉搜索树</li><li>前缀树</li><li><ul><li>线段树</li></ul></li></ul></li><li><a href="#%F0%90%80%B4-%E6%A0%88">𐀴 栈</a><ul><li>基础</li><li>单调栈</li></ul></li><li><a href="#%F0%90%80%B4-%E5%A0%86">𐀴 堆</a><ul><li>基础</li></ul></li><li><a href="#%F0%90%80%B4-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE">𐀴 二分查找</a></li><li><a href="#%F0%90%80%B4-%E4%BD%8D%E8%BF%90%E7%AE%97">𐀴 位运算</a></li><li><a href="#%F0%90%80%B4-%E5%8F%8C%E6%8C%87%E9%92%88%E4%B8%8E%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3">𐀴 双指针与滑动窗口</a></li><li><a href="#%F0%90%80%B4-%E7%9F%A9%E9%98%B5">𐀴 矩阵</a></li><li><a href="#%F0%90%80%B4-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">𐀴 动态规划</a><ul><li>一维</li><li>二维</li></ul></li><li><a href="#%F0%90%80%B4-%E5%9B%BE%E8%AE%BA">𐀴 图论</a><ul><li>DFS</li><li>BFS</li><li><ul><li>Dijkstra</li></ul></li><li>拓扑排序</li></ul></li><li><a href="#%F0%90%80%B4-%E5%B9%B6%E6%9F%A5%E9%9B%86">𐀴 并查集</a></li><li><a href="#%F0%90%80%B4-%E8%AE%BE%E8%AE%A1">𐀴 设计</a></li><li><a href="#%F0%90%80%B4-%E8%B4%AA%E5%BF%83">𐀴 贪心</a></li><li><a href="#%F0%90%80%B4-%E5%9B%9E%E6%BA%AF">𐀴 回溯</a></li><li><a href="#%F0%90%80%B4-%E5%85%8B%E9%9A%86">𐀴 克隆</a></li><li><a href="#%F0%90%80%B4-%E6%95%B0%E5%AD%A6">𐀴 数学</a></li><li><a href="#%F0%90%80%B4-%E6%9E%81%E5%A4%A7%E6%9E%81%E5%B0%8F%E5%8C%96">𐀴 * 极大极小化</a></li><li><a href="#%F0%90%80%B4-%E5%87%A0%E4%BD%95">𐀴 * 几何</a></li></ul><h2 id="𐀴-链表"><a href="#𐀴-链表" class="headerlink" title="𐀴 链表"></a>𐀴 链表</h2><h4 id="单链表："><a href="#单链表：" class="headerlink" title="单链表："></a>单链表：</h4><h6 id="简单："><a href="#简单：" class="headerlink" title="简单："></a>简单：</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转链表</a></li><li><a href="https://leetcode-cn.com/problems/linked-list-cycle/">141. 环形链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/">83. 删除排序链表中的重复元素</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-linked-list/">234. 回文链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-linked-list-elements/">203. 移除链表元素</a></li><li><a href="https://leetcode-cn.com/problems/delete-node-in-a-linked-list/">237. 删除链表中的节点</a></li><li><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">876. 链表的中间结点</a></li></ul><h6 id="中等"><a href="#中等" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-linked-list-ii/">92. 反转链表 II</a></li><li><a href="https://leetcode-cn.com/problems/reorder-list/">143. 重排链表</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/">82. 删除排序链表中的重复元素 II</a></li><li><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></li><li><a href="https://leetcode-cn.com/problems/sort-list/">148. 排序链表</a></li><li><a href="https://leetcode-cn.com/problems/partition-list/">86. 分隔链表</a></li><li><a href="https://leetcode-cn.com/problems/rotate-list/">61. 旋转链表</a></li><li><a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/">142. 环形链表 II</a></li><li><a href="https://leetcode-cn.com/problems/insertion-sort-list/">147. 对链表进行插入排序</a></li><li><a href="https://leetcode-cn.com/problems/copy-list-with-random-pointer/">138. 复制带随机指针的链表</a></li><li><a href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/">24. 两两交换链表中的节点</a></li><li><a href="https://leetcode-cn.com/problems/odd-even-linked-list/">328. 奇偶链表</a></li><li><a href="https://leetcode-cn.com/problems/design-linked-list/">707. 设计链表</a></li><li><a href="https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/">109. 有序链表转换二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/flatten-a-multilevel-doubly-linked-list/">430. 扁平化多级双向链表</a></li><li><a href="https://leetcode-cn.com/problems/split-linked-list-in-parts/">725. 分隔链表</a></li></ul><h6 id="困难"><a href="#困难" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">25. K 个一组翻转链表</a></li></ul><h4 id="双链表："><a href="#双链表：" class="headerlink" title="双链表："></a>双链表：</h4><h6 id="简单：-1"><a href="#简单：-1" class="headerlink" title="简单："></a>简单：</h6><ul><li><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/">160. 相交链表</a></li></ul><h6 id="中级"><a href="#中级" class="headerlink" title="中级"></a>中级</h6><ul><li><a href="https://leetcode-cn.com/problems/add-two-numbers/">2. 两数相加</a></li><li><a href="https://leetcode-cn.com/problems/add-two-numbers-ii/">445. 两数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/merge-in-between-linked-lists/">1669. 合并两个链表</a></li></ul><h6 id="困难-1"><a href="#困难-1" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/">23. 合并 K 个升序链表</a></li></ul><h2 id="𐀴-树"><a href="#𐀴-树" class="headerlink" title="𐀴 树"></a>𐀴 树</h2><h4 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h4><h6 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal/">145. 二叉树的后序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal/">94. 二叉树的中序遍历</a></li><li><a href="https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/">589. N 叉树的前序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal/">144. 二叉树的前序遍历</a></li><li><a href="https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/">590. N 叉树的后序遍历</a></li></ul><h6 id="中等-1"><a href="#中等-1" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/">102. 二叉树的层序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/">103. 二叉树的锯齿形层序遍历</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/">107. 二叉树的层序遍历 II</a></li></ul><h4 id="构造"><a href="#构造" class="headerlink" title="构造"></a>构造</h4><h6 id="简单-1"><a href="#简单-1" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/">108. 将有序数组转换为二叉搜索树</a></li></ul><h6 id="中等-2"><a href="#中等-2" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/">105. 从前序与中序遍历序列构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/">106. 从中序与后序遍历序列构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/">114. 二叉树展开为链表</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/">889. 根据前序和后序遍历构造二叉树</a></li><li><a href="https://leetcode-cn.com/problems/construct-binary-search-tree-from-preorder-traversal/">1008. 前序遍历构造二叉搜索树</a></li></ul><h6 id="困难-2"><a href="#困难-2" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/">297. 二叉树的序列化与反序列化</a></li></ul><h4 id="路径-深度-翻转"><a href="#路径-深度-翻转" class="headerlink" title="路径 | 深度 | 翻转"></a>路径 | 深度 | 翻转</h4><h6 id="简单-2"><a href="#简单-2" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/">104. 二叉树的最大深度</a></li><li><a href="https://leetcode-cn.com/problems/symmetric-tree/">101. 对称二叉树</a></li><li><a href="https://leetcode-cn.com/problems/invert-binary-tree/">226. 翻转二叉树</a></li><li><a href="https://leetcode-cn.com/problems/diameter-of-binary-tree/">543. 二叉树的直径</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-paths/">257. 二叉树的所有路径</a></li><li><a href="https://leetcode-cn.com/problems/balanced-binary-tree/">110. 平衡二叉树</a></li><li><a href="https://leetcode-cn.com/problems/merge-two-binary-trees/">617. 合并二叉树</a></li><li><a href="https://leetcode-cn.com/problems/same-tree/">100. 相同的树</a></li><li><a href="https://leetcode-cn.com/problems/path-sum/">112. 路径总和</a></li><li><a href="https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/">111. 二叉树的最小深度</a></li></ul><h6 id="中等-3"><a href="#中等-3" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/">236. 二叉树的最近公共祖先</a></li><li><a href="https://leetcode-cn.com/problems/count-complete-tree-nodes/">222. 完全二叉树的节点个数</a></li><li><a href="https://leetcode-cn.com/problems/path-sum-ii/">113. 路径总和 II</a></li><li><a href="https://leetcode-cn.com/problems/path-sum-iii/">437. 路径总和 III</a></li><li><a href="https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/">129. 求根节点到叶节点数字之和</a></li><li><a href="https://leetcode-cn.com/problems/maximum-width-of-binary-tree/">662. 二叉树最大宽度</a></li><li><a href="https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/">114. 二叉树展开为链表</a></li><li><a href="https://leetcode-cn.com/problems/binary-tree-right-side-view/">199. 二叉树的右视图</a></li><li><a href="https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/">116. 填充每个节点的下一个右侧节点指针</a></li><li><a href="https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/">515. 在每个树行中找最大值</a></li></ul><h6 id="困难-3"><a href="#困难-3" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/">124. 二叉树中的最大路径和</a></li><li><a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/">297. 二叉树的序列化与反序列化</a></li></ul><h4 id="二叉搜索树"><a href="#二叉搜索树" class="headerlink" title="二叉搜索树"></a>二叉搜索树</h4><h6 id="简单-3"><a href="#简单-3" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/">108. 将有序数组转换为二叉搜索树</a></li></ul><h6 id="中等-4"><a href="#中等-4" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/validate-binary-search-tree/">98. 验证二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/unique-binary-search-trees/">96. 不同的二叉搜索树</a></li><li><a href="https://leetcode-cn.com/problems/unique-binary-search-trees-ii/">95. 不同的二叉搜索树 II</a></li><li><a href="https://leetcode-cn.com/problems/binary-search-tree-iterator/">173. 二叉搜索树迭代器</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/">230. 二叉搜索树中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/recover-binary-search-tree/">99. 恢复二叉搜索树</a></li></ul><h4 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h4><h6 id="简单-4"><a href="#简单-4" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-word-in-dictionary/">720. 词典中最长的单词</a></li></ul><h6 id="中等-5"><a href="#中等-5" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-words/">692. 前 K 个高频单词</a></li><li><a href="https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/">421. 数组中两个数的最大异或值</a></li></ul><h6 id="困难-4"><a href="#困难-4" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/word-search-ii/">212. 单词搜索 II</a></li></ul><h4 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h4><h6 id="中等-6"><a href="#中等-6" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/maximum-number-of-events-that-can-be-attended/">1353. 最多可以参加的会议数目</a></li><li><a href="https://leetcode-cn.com/problems/range-sum-query-mutable/">307. 区域和检索 - 数组可修改</a></li></ul><h6 id="困难-5"><a href="#困难-5" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/count-of-smaller-numbers-after-self/">315. 计算右侧小于当前元素的个数</a></li><li><a href="https://leetcode-cn.com/problems/reverse-pairs/">493. 翻转对</a></li><li><a href="https://leetcode-cn.com/problems/the-skyline-problem/">218. 天际线问题</a></li><li><a href="https://leetcode-cn.com/problems/range-module/">715. Range 模块</a></li><li><a href="https://leetcode-cn.com/problems/rectangle-area-ii/">850. 矩形面积 II</a></li><li><a href="https://leetcode-cn.com/problems/online-majority-element-in-subarray/">1157. 子数组中占绝大多数的元素</a></li><li><a href="https://leetcode-cn.com/problems/falling-squares/">699. 掉落的方块</a></li><li><a href="https://leetcode-cn.com/problems/count-of-range-sum/">327. 区间和的个数</a></li></ul><h2 id="𐀴-栈"><a href="#𐀴-栈" class="headerlink" title="𐀴 栈"></a>𐀴 栈</h2><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><h6 id="简单-5"><a href="#简单-5" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/valid-parentheses/">20. 有效的括号</a></li><li><a href="https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string/">1047. 删除字符串中的所有相邻重复项</a></li><li><a href="https://leetcode-cn.com/problems/implement-queue-using-stacks/">232. 用栈实现队列</a></li><li><a href="https://leetcode-cn.com/problems/min-stack/">155. 最小栈</a></li><li><a href="https://leetcode-cn.com/problems/implement-stack-using-queues/">225. 用队列实现栈</a></li><li><a href="https://leetcode-cn.com/problems/remove-outermost-parentheses/">1021. 删除最外层的括号</a></li><li><a href="https://leetcode-cn.com/problems/baseball-game/">682. 棒球比赛</a></li><li><a href="https://leetcode-cn.com/problems/backspace-string-compare/">844. 比较含退格的字符串</a></li></ul><h6 id="中等-7"><a href="#中等-7" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/reverse-substrings-between-each-pair-of-parentheses/">1190. 反转每对括号间的子串</a></li><li><a href="https://leetcode-cn.com/problems/decode-string/">394. 字符串解码</a></li><li><a href="https://leetcode-cn.com/problems/132-pattern/">456. 132 模式</a></li><li><a href="https://leetcode-cn.com/problems/basic-calculator-ii/">227. 基本计算器 II</a></li><li><a href="https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/">150. 逆波兰表达式求值</a></li><li><a href="https://leetcode-cn.com/problems/next-greater-element-ii/">503. 下一个更大元素 II</a></li><li><a href="https://leetcode-cn.com/problems/simplify-path/">71. 简化路径</a></li><li><a href="https://leetcode-cn.com/problems/score-of-parentheses/">856. 括号的分数</a></li><li><a href="https://leetcode-cn.com/problems/sum-of-subarray-minimums/">907. 子数组的最小值之和</a></li><li><a href="https://leetcode-cn.com/problems/mini-parser/">385. 迷你语法分析器</a></li><li><a href="https://leetcode-cn.com/problems/minimum-remove-to-make-valid-parentheses/">1249. 移除无效的括号</a></li><li><a href="https://leetcode-cn.com/problems/exclusive-time-of-functions/">636. 函数的独占时间</a></li><li><a href="https://leetcode-cn.com/problems/flatten-nested-list-iterator/">341. 扁平化嵌套列表迭代器</a></li></ul><h6 id="困难-6"><a href="#困难-6" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/basic-calculator/">224. 基本计算器</a></li><li><a href="https://leetcode-cn.com/problems/number-of-atoms/">726. 原子的数量</a></li></ul><h4 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a>单调栈</h4><h6 id="简单-6"><a href="#简单-6" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/next-greater-element-i/">496. 下一个更大元素 I</a></li></ul><h6 id="中等-8"><a href="#中等-8" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/daily-temperatures/">739. 每日温度</a></li><li><a href="https://leetcode-cn.com/problems/remove-k-digits/">402. 移掉 K 位数字</a></li><li><a href="https://leetcode-cn.com/problems/remove-duplicate-letters/">316. 去除重复字母</a></li><li><a href="https://leetcode-cn.com/problems/longest-well-performing-interval/">1124. 表现良好的最长时间段</a></li></ul><h6 id="困难-7"><a href="#困难-7" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/trapping-rain-water/">42. 接雨水</a></li><li><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram/">84. 柱状图中最大的矩形</a></li><li><a href="https://leetcode-cn.com/problems/maximal-rectangle/">85. 最大矩形</a></li><li><a href="https://leetcode-cn.com/problems/create-maximum-number/">321. 拼接最大数</a></li></ul><h2 id="𐀴-堆"><a href="#𐀴-堆" class="headerlink" title="𐀴 堆"></a>𐀴 堆</h2><h4 id="基础-1"><a href="#基础-1" class="headerlink" title="基础"></a>基础</h4><h6 id="简单-7"><a href="#简单-7" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/last-stone-weight/">1046. 最后一块石头的重量</a></li><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/">703. 数据流中的第 K 大元素</a></li></ul><h6 id="中等-9"><a href="#中等-9" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第 K 个最大元素</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-elements/">347. 前 K 个高频元素</a></li><li><a href="https://leetcode-cn.com/problems/top-k-frequent-words/">692. 前K个高频单词</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/">378. 有序矩阵中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/sort-characters-by-frequency/">451. 根据字符出现频率排序</a></li><li><a href="https://leetcode-cn.com/problems/network-delay-time/">743. 网络延迟时间</a></li><li><a href="https://leetcode-cn.com/problems/cheapest-flights-within-k-stops/">787. K 站中转内最便宜的航班</a></li><li><a href="https://leetcode-cn.com/problems/k-closest-points-to-origin/">973. 最接近原点的 K 个点</a></li></ul><h6 id="困难-8"><a href="#困难-8" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/sliding-window-maximum/">239. 滑动窗口最大值</a></li><li><a href="https://leetcode-cn.com/problems/find-median-from-data-stream/">295. 数据流的中位数</a></li><li><a href="https://leetcode-cn.com/problems/the-skyline-problem/">218. 天际线问题</a></li></ul><h2 id="𐀴-二分查找"><a href="#𐀴-二分查找" class="headerlink" title="𐀴 二分查找"></a>𐀴 二分查找</h2><h6 id="简单-8"><a href="#简单-8" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/sqrtx/">69. x 的平方根</a></li><li><a href="https://leetcode-cn.com/problems/binary-search/">704. 二分查找</a></li><li><a href="https://leetcode-cn.com/problems/search-insert-position/">35. 搜索插入位置</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">349. 两个数组的交集</a></li><li><a href="https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/">167. 两数之和 II - 输入有序数组</a></li><li><a href="https://leetcode-cn.com/problems/first-bad-version/">278. 第一个错误的版本</a></li></ul><h6 id="中等-10"><a href="#中等-10" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">300. 最长递增子序列</a></li><li><a href="https://leetcode-cn.com/problems/search-a-2d-matrix/">74. 搜索二维矩阵</a></li><li><a href="https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/">34. 在排序数组中查找元素的第一个和最后一个位置</a></li><li><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">81. 搜索旋转排序数组 II</a></li><li><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">33. 搜索旋转排序数组</a></li><li><a href="https://leetcode-cn.com/problems/4sum-ii/">454. 四数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/search-a-2d-matrix-ii/">240. 搜索二维矩阵 II</a></li><li><a href="https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/">718. 最长重复子数组</a></li><li><a href="https://leetcode-cn.com/problems/powx-n/">50. Pow(x, n)</a></li><li><a href="https://leetcode-cn.com/problems/divide-two-integers/">29. 两数相除</a></li><li><a href="https://leetcode-cn.com/problems/find-the-duplicate-number/">287. 寻找重复数</a></li><li><a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">209. 长度最小的子数组</a></li><li><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">153. 寻找旋转排序数组中的最小值</a></li><li><a href="https://leetcode-cn.com/problems/find-peak-element/">162. 寻找峰值</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/">378. 有序矩阵中第 K 小的元素</a></li><li><a href="https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/">230. 二叉搜索树中第K小的元素</a></li></ul><h6 id="困难-9"><a href="#困难-9" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">4. 寻找两个正序数组的中位数</a></li><li><a href="https://leetcode-cn.com/problems/super-egg-drop/">887. 鸡蛋掉落</a></li><li><a href="https://leetcode-cn.com/problems/split-array-largest-sum/">410. 分割数组的最大值</a></li><li><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/">154. 寻找旋转排序数组中的最小值 II</a></li></ul><h2 id="𐀴-位运算"><a href="#𐀴-位运算" class="headerlink" title="𐀴 位运算"></a>𐀴 位运算</h2><h6 id="简单-9"><a href="#简单-9" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/single-number/">136. 只出现一次的数字</a></li><li><a href="https://leetcode-cn.com/problems/number-of-1-bits/">191. 位1的个数</a></li><li><a href="https://leetcode-cn.com/problems/majority-element/">169. 多数元素</a></li><li><a href="https://leetcode-cn.com/problems/reverse-bits/">190. 颠倒二进制位</a></li><li><a href="https://leetcode-cn.com/problems/power-of-two/">231. 2的幂</a></li><li><a href="https://leetcode-cn.com/problems/find-the-difference/">389. 找不同</a></li><li><a href="https://leetcode-cn.com/problems/hamming-distance/">461. 汉明距离</a></li><li><a href="https://leetcode-cn.com/problems/convert-a-number-to-hexadecimal/">405. 数字转换为十六进制数</a></li><li><a href="https://leetcode-cn.com/problems/missing-number/">268. 丢失的数字</a></li></ul><h6 id="中等-11"><a href="#中等-11" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/subsets/">78. 子集</a></li><li><a href="https://leetcode-cn.com/problems/counting-bits/">338. 比特位计数</a></li><li><a href="https://leetcode-cn.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/">1318. 或运算的最小翻转次数</a></li><li><a href="https://leetcode-cn.com/problems/gray-code/">89. 格雷编码</a></li><li><a href="https://leetcode-cn.com/problems/single-number-iii/">260. 只出现一次的数字 III</a></li><li><a href="https://leetcode-cn.com/problems/sum-of-two-integers/">371. 两整数之和</a></li><li><a href="https://leetcode-cn.com/problems/single-number-ii/">137. 只出现一次的数字 II</a></li><li><a href="https://leetcode-cn.com/problems/maximum-xor-of-two-numbers-in-an-array/">421. 数组中两个数的最大异或值</a></li></ul><h2 id="𐀴-双指针与滑动窗口"><a href="#𐀴-双指针与滑动窗口" class="headerlink" title="𐀴 双指针与滑动窗口"></a>𐀴 双指针与滑动窗口</h2><h6 id="简单-10"><a href="#简单-10" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/first-unique-character-in-a-string/">387. 字符串中的第一个唯一字符</a></li><li><a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">349. 两个数组的交集</a></li><li><a href="https://leetcode-cn.com/problems/longest-palindrome/">409. 最长回文串</a></li><li><a href="https://leetcode-cn.com/problems/contains-duplicate/">217. 存在重复元素</a></li><li><a href="https://leetcode-cn.com/problems/count-primes/">204. 计数质数</a></li><li><a href="https://leetcode-cn.com/problems/merge-sorted-array/">88. 合并两个有序数组</a></li><li><a href="https://leetcode-cn.com/problems/move-zeroes/">283. 移动零</a></li><li><a href="https://leetcode-cn.com/problems/valid-palindrome/">125. 验证回文串</a></li><li><a href="https://leetcode-cn.com/problems/reverse-string/">344. 反转字符串</a></li><li><a href="https://leetcode-cn.com/problems/remove-element/">27. 移除元素</a></li><li><a href="https://leetcode-cn.com/problems/squares-of-a-sorted-array/">977. 有序数组的平方</a></li></ul><h6 id="中等-12"><a href="#中等-12" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></li><li><a href="https://leetcode-cn.com/problems/rabbits-in-forest/">781. 森林中的兔子</a></li><li><a href="https://leetcode-cn.com/problems/group-anagrams/">49. 字母异位词分组</a></li><li><a href="https://leetcode-cn.com/problems/4sum/">18. 四数之和</a></li><li><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/">560. 和为 K 的子数组</a></li><li><a href="https://leetcode-cn.com/problems/4sum-ii/">454. 四数相加 II</a></li><li><a href="https://leetcode-cn.com/problems/container-with-most-water/">11. 盛最多水的容器</a></li><li><a href="https://leetcode-cn.com/problems/3sum-closest/">16. 最接近的三数之和</a></li><li><a href="https://leetcode-cn.com/problems/4sum/">18. 四数之和</a></li><li><a href="https://leetcode-cn.com/problems/longest-repeating-character-replacement/">424. 替换后的最长重复字符</a></li><li><a href="https://leetcode-cn.com/problems/subarray-product-less-than-k/">713. 乘积小于K的子数组</a></li></ul><h6 id="困难-10"><a href="#困难-10" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. 最小覆盖子串</a></li><li><a href="https://leetcode-cn.com/problems/subarrays-with-k-different-integers/">992. K 个不同整数的子数组</a></li></ul><h2 id="𐀴-矩阵"><a href="#𐀴-矩阵" class="headerlink" title="𐀴 矩阵"></a>𐀴 矩阵</h2><h6 id="简单-11"><a href="#简单-11" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/transpose-matrix/">867. 转置矩阵</a></li><li><a href="https://leetcode-cn.com/problems/flipping-an-image/">832. 翻转图像</a></li></ul><h6 id="中等-13"><a href="#中等-13" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/spiral-matrix/">54. 螺旋矩阵</a></li><li><a href="https://leetcode-cn.com/problems/spiral-matrix-ii/">59. 螺旋矩阵 II</a></li><li><a href="https://leetcode-cn.com/problems/set-matrix-zeroes/">73. 矩阵置零</a></li><li><a href="https://leetcode-cn.com/problems/rotate-image/">48. 旋转图像</a></li></ul><h2 id="𐀴-动态规划"><a href="#𐀴-动态规划" class="headerlink" title="𐀴 动态规划"></a>𐀴 动态规划</h2><h3 id="一维"><a href="#一维" class="headerlink" title="一维"></a>一维</h3><h6 id="简单-12"><a href="#简单-12" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/climbing-stairs/">70. 爬楼梯</a></li><li><a href="https://leetcode-cn.com/problems/maximum-subarray/">53. 最大子序和</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/">121. 买卖股票的最佳时机</a></li><li><a href="https://leetcode-cn.com/problems/min-cost-climbing-stairs/">746. 使用最小花费爬楼梯</a></li></ul><h6 id="中等-14"><a href="#中等-14" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/house-robber-iii/">337. 打家劫舍 III</a></li><li><a href="https://leetcode-cn.com/problems/coin-change/">322. 零钱兑换</a></li><li><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">300. 最长递增子序列</a></li><li><a href="https://leetcode-cn.com/problems/word-break/">139. 单词拆分</a></li><li><a href="https://leetcode-cn.com/problems/maximum-product-subarray/">152. 乘积最大子数组</a></li><li><a href="https://leetcode-cn.com/problems/counting-bits/">338. 比特位计数</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">309. 最佳买卖股票时机含冷冻期</a></li><li><a href="https://leetcode-cn.com/problems/ugly-number-ii/">264. 丑数 II</a></li><li><a href="https://leetcode-cn.com/problems/perfect-squares/">279. 完全平方数</a></li></ul><h6 id="困难-11"><a href="#困难-11" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-valid-parentheses/">32. 最长有效括号</a></li><li><a href="https://leetcode-cn.com/problems/russian-doll-envelopes/">354. 俄罗斯套娃信封问题</a></li><li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/">123. 买卖股票的最佳时机 III</a></li></ul><h3 id="二维"><a href="#二维" class="headerlink" title="二维"></a>二维</h3><h6 id="中等-15"><a href="#中等-15" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-palindromic-substring/">5. 最长回文子串</a></li><li><a href="https://leetcode-cn.com/problems/longest-common-subsequence/">1143. 最长公共子序列</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-partitioning/">131. 分割回文串</a></li><li><a href="https://leetcode-cn.com/problems/unique-paths/">62. 不同路径</a></li><li><a href="https://leetcode-cn.com/problems/minimum-path-sum/">64. 最小路径和</a></li><li><a href="https://leetcode-cn.com/problems/maximal-square/">221. 最大正方形</a></li><li><a href="https://leetcode-cn.com/problems/partition-equal-subset-sum/">416. 分割等和子集</a></li><li><a href="https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/">718. 最长重复子数组</a></li><li><a href="https://leetcode-cn.com/problems/target-sum/">494. 目标和</a></li></ul><h6 id="困难-12"><a href="#困难-12" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/regular-expression-matching/">10. 正则表达式匹配</a></li><li><a href="https://leetcode-cn.com/problems/edit-distance/">72. 编辑距离</a></li><li><a href="https://leetcode-cn.com/problems/super-egg-drop/">887. 鸡蛋掉落</a></li><li><a href="https://leetcode-cn.com/problems/palindrome-partitioning-ii/">132. 分割回文串 II</a></li><li><a href="https://leetcode-cn.com/problems/wildcard-matching/">44. 通配符匹配</a></li><li><a href="https://leetcode-cn.com/problems/split-array-largest-sum/">410. 分割数组的最大值</a></li></ul><h2 id="𐀴-图论"><a href="#𐀴-图论" class="headerlink" title="𐀴 图论"></a>𐀴 图论</h2><h3 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h3><h6 id="中等-16"><a href="#中等-16" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/decode-string/">394. 字符串解码</a></li><li><a href="https://leetcode-cn.com/problems/accounts-merge/">721. 账户合并</a></li><li><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></li><li><a href="https://leetcode-cn.com/problems/target-sum/">494. 目标和</a></li><li><a href="https://leetcode-cn.com/problems/max-area-of-island/">695. 岛屿的最大面积</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/path-with-minimum-effort/">1631. 最小体力消耗路径</a> </li><li><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></li><li><a href="https://leetcode-cn.com/problems/pacific-atlantic-water-flow/">417. 太平洋大西洋水流问题</a></li></ul><h6 id="困难-13"><a href="#困难-13" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/24-game/">679. 24 点游戏</a></li></ul><h3 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h3><h6 id="简单-13"><a href="#简单-13" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/employee-importance/">690. 员工的重要性</a></li></ul><h6 id="中等-17"><a href="#中等-17" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/perfect-squares/">279. 完全平方数</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/number-of-operations-to-make-network-connected/">1319. 连通网络的操作次数</a></li><li><a href="https://leetcode-cn.com/problems/shortest-bridge/">934. 最短的桥</a></li><li><a href="https://leetcode-cn.com/problems/is-graph-bipartite/">785. 判断二分图</a></li><li><a href="https://leetcode-cn.com/problems/rotting-oranges/">994. 腐烂的橘子</a></li><li><a href="https://leetcode-cn.com/problems/open-the-lock/">752. 打开转盘锁</a></li><li><a href="https://leetcode-cn.com/problems/as-far-from-land-as-possible/">1162. 地图分析</a></li><li><a href="https://leetcode-cn.com/problems/minesweeper/">529. 扫雷游戏</a></li></ul><h6 id="困难-14"><a href="#困难-14" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/bus-routes/">815. 公交路线</a></li><li><a href="https://leetcode-cn.com/problems/word-ladder/">127. 单词接龙</a></li><li><a href="https://leetcode-cn.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/">1293. 网格中的最短路径</a></li><li><a href="https://leetcode-cn.com/problems/sliding-puzzle/">773. 滑动谜题</a></li><li><a href="https://leetcode-cn.com/problems/making-a-large-island/">827. 最大人工岛</a></li></ul><h3 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h3><ul><li><a href="https://leetcode-cn.com/problems/cheapest-flights-within-k-stops/">787. K 站中转内最便宜的航班</a></li></ul><h3 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h3><h6 id="中等-18"><a href="#中等-18" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/course-schedule/">207. 课程表</a></li><li><a href="https://leetcode-cn.com/problems/course-schedule-ii/">210. 课程表 II</a></li></ul><h6 id="困难-15"><a href="#困难-15" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-increasing-path-in-a-matrix/">329. 矩阵中的最长递增路径</a></li><li><a href="https://leetcode-cn.com/problems/sort-items-by-groups-respecting-dependencies/">1203. 项目管理</a></li></ul><h2 id="𐀴-并查集"><a href="#𐀴-并查集" class="headerlink" title="𐀴 并查集"></a>𐀴 并查集</h2><h6 id="中等-19"><a href="#中等-19" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/number-of-islands/">200. 岛屿数量</a></li><li><a href="https://leetcode-cn.com/problems/accounts-merge/">721. 账户合并</a></li><li><a href="https://leetcode-cn.com/problems/number-of-provinces/">547. 省份数量</a></li><li><a href="https://leetcode-cn.com/problems/surrounded-regions/">130. 被围绕的区域</a></li><li><a href="https://leetcode-cn.com/problems/path-with-minimum-effort/">1631. 最小体力消耗路径</a></li><li><a href="https://leetcode-cn.com/problems/evaluate-division/">399. 除法求值</a></li><li><a href="https://leetcode-cn.com/problems/number-of-operations-to-make-network-connected/">1319. 连通网络的操作次数</a></li><li><a href="https://leetcode-cn.com/problems/redundant-connection/">684. 冗余连接</a></li></ul><h6 id="困难-16"><a href="#困难-16" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/longest-consecutive-sequence/">128. 最长连续序列</a></li><li><a href="https://leetcode-cn.com/problems/couples-holding-hands/">765. 情侣牵手</a></li></ul><h2 id="𐀴-设计"><a href="#𐀴-设计" class="headerlink" title="𐀴 设计"></a>𐀴 设计</h2><h6 id="简单-14"><a href="#简单-14" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/design-parking-system/">1603. 设计停车系统</a></li><li><a href="https://leetcode-cn.com/problems/design-hashset/">705. 设计哈希集合</a></li><li><a href="https://leetcode-cn.com/problems/design-hashmap/">706. 设计哈希映射</a></li><li><a href="https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/">703. 数据流中的第 K 大元素</a></li></ul><h6 id="中等-20"><a href="#中等-20" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/lru-cache/">146. LRU 缓存机制</a></li><li><a href="https://leetcode-cn.com/problems/flatten-nested-list-iterator/">341. 扁平化嵌套列表迭代器</a></li><li><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/">208. 实现 Trie (前缀树)</a></li><li><a href="https://leetcode-cn.com/problems/binary-search-tree-iterator/">173. 二叉搜索树迭代器</a></li><li><a href="https://leetcode-cn.com/problems/design-circular-queue/">622. 设计循环队列</a></li><li><a href="https://leetcode-cn.com/problems/insert-delete-getrandom-o1/">380. O(1) 时间插入、删除和获取随机元素</a></li></ul><h6 id="困难-17"><a href="#困难-17" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/find-median-from-data-stream/">295. 数据流的中位数</a></li><li><a href="https://leetcode-cn.com/problems/lfu-cache/">460. LFU 缓存</a></li></ul><h2 id="𐀴-贪心"><a href="#𐀴-贪心" class="headerlink" title="𐀴 贪心"></a>𐀴 贪心</h2><h6 id="中等-21"><a href="#中等-21" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/ugly-number-ii/">264. 丑数 II</a></li><li><a href="https://leetcode-cn.com/problems/validate-stack-sequences/">946. 验证栈序列</a></li><li><a href="https://leetcode-cn.com/problems/reorganize-string/">767. 重构字符串</a></li><li><a href="https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums/">373. 查找和最小的 K 对数字</a></li><li><a href="https://leetcode-cn.com/problems/super-ugly-number/">313. 超级丑数</a></li></ul><h2 id="𐀴-回溯"><a href="#𐀴-回溯" class="headerlink" title="𐀴 回溯"></a>𐀴 回溯</h2><h6 id="中等-22"><a href="#中等-22" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/permutations/">46. 全排列</a></li><li><a href="https://leetcode-cn.com/problems/generate-parentheses/">22. 括号生成</a></li><li><a href="https://leetcode-cn.com/problems/restore-ip-addresses/">93. 复原 IP 地址</a></li><li><a href="https://leetcode-cn.com/problems/subsets/">78. 子集</a></li><li><a href="https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/">17. 电话号码的字母组合</a></li><li><a href="https://leetcode-cn.com/problems/word-search/">79. 单词搜索</a></li><li><a href="https://leetcode-cn.com/problems/subsets-ii/">90. 子集 II</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum/">39. 组合总和</a></li><li><a href="https://leetcode-cn.com/problems/combinations/">77. 组合</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum-ii/">40. 组合总和 II</a></li><li><a href="https://leetcode-cn.com/problems/permutations-ii/">47. 全排列 II</a></li><li><a href="https://leetcode-cn.com/problems/split-array-into-fibonacci-sequence/">842. 将数组拆分成斐波那契序列</a></li><li><a href="https://leetcode-cn.com/problems/combination-sum-iii/">216. 组合总和 III</a></li><li><a href="https://leetcode-cn.com/problems/gray-code/">89. 格雷编码</a></li></ul><h6 id="困难-18"><a href="#困难-18" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/n-queens/">51. N 皇后</a></li><li><a href="https://leetcode-cn.com/problems/sudoku-solver/">37. 解数独</a></li><li><a href="https://leetcode-cn.com/problems/word-ladder-ii/">126. 单词接龙 II</a></li><li><a href="https://leetcode-cn.com/problems/maximize-grid-happiness/">1659. 最大化网格幸福感</a></li></ul><h2 id="𐀴-克隆"><a href="#𐀴-克隆" class="headerlink" title="𐀴 克隆"></a>𐀴 克隆</h2><h6 id="中等-23"><a href="#中等-23" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/clone-graph/">133. 克隆图</a></li><li><a href="https://leetcode-cn.com/problems/copy-list-with-random-pointer/">138. 复制带随机指针的链表</a></li></ul><h2 id="𐀴-数学"><a href="#𐀴-数学" class="headerlink" title="𐀴 数学"></a>𐀴 数学</h2><h5 id="简单-15"><a href="#简单-15" class="headerlink" title="简单"></a>简单</h5><ul><li><a href="https://leetcode-cn.com/problems/count-primes/">204. 计数质数</a></li><li><a href="https://leetcode-cn.com/problems/maximum-product-of-three-numbers/">628. 三个数的最大乘积</a></li><li><a href="https://leetcode-cn.com/problems/largest-perimeter-triangle/">976. 三角形的最大周长</a></li><li><a href="https://leetcode-cn.com/problems/happy-number/">202. 快乐数</a></li><li><a href="https://leetcode-cn.com/problems/check-if-it-is-a-straight-line/">1232. 缀点成线</a></li></ul><h6 id="中等-24"><a href="#中等-24" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/divide-two-integers/">29. 两数相除</a></li><li><a href="https://leetcode-cn.com/problems/integer-break/">343. 整数拆分</a></li><li><a href="https://leetcode-cn.com/problems/fraction-to-recurring-decimal/">166. 分数到小数</a></li></ul><h6 id="困难-19"><a href="#困难-19" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/max-points-on-a-line/">149. 直线上最多的点数</a></li></ul><h2 id="𐀴-极大极小化"><a href="#𐀴-极大极小化" class="headerlink" title="𐀴 极大极小化"></a>𐀴 极大极小化</h2><h6 id="简单-16"><a href="#简单-16" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/nim-game/">292. Nim 游戏</a></li></ul><h6 id="中等-25"><a href="#中等-25" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/">375. 猜数字大小 II</a></li><li><a href="https://leetcode-cn.com/problems/predict-the-winner/">486. 预测赢家</a></li><li><a href="https://leetcode-cn.com/problems/can-i-win/">464. 我能赢吗</a></li><li><a href="https://leetcode-cn.com/problems/stone-game/">877. 石子游戏</a></li></ul><h2 id="𐀴-几何"><a href="#𐀴-几何" class="headerlink" title="𐀴 几何"></a>𐀴 几何</h2><h6 id="简单-17"><a href="#简单-17" class="headerlink" title="简单"></a>简单</h6><ul><li><a href="https://leetcode-cn.com/problems/check-if-it-is-a-straight-line/">1232. 缀点成线</a></li><li><a href="https://leetcode-cn.com/problems/minimum-time-visiting-all-points/">1266. 访问所有点的最小时间</a></li><li><a href="https://leetcode-cn.com/problems/surface-area-of-3d-shapes/">892. 三维形体的表面积</a></li></ul><h6 id="中等-26"><a href="#中等-26" class="headerlink" title="中等"></a>中等</h6><ul><li><a href="https://leetcode-cn.com/problems/circle-and-rectangle-overlapping/">1401. 圆和矩形是否有重叠</a></li><li><a href="https://leetcode-cn.com/problems/minimum-area-rectangle-ii/">963. 最小面积矩形 II</a></li></ul><h6 id="困难-20"><a href="#困难-20" class="headerlink" title="困难"></a>困难</h6><ul><li><a href="https://leetcode-cn.com/problems/erect-the-fence/">587. 安装栅栏</a></li><li><a href="https://leetcode-cn.com/problems/best-position-for-a-service-centre/">1515. 服务中心的最佳位置</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware打开ubantu黑屏无反应</title>
      <link href="/2021/12/03/vmware-da-kai-ubantu-hei-ping-wu-fan-ying/"/>
      <url>/2021/12/03/vmware-da-kai-ubantu-hei-ping-wu-fan-ying/</url>
      
        <content type="html"><![CDATA[<p>设置VMware编辑–&gt;首选项–&gt;设备–&gt;启用虚拟打印机 即可</p><p><img src="/./VMware%E6%89%93%E5%BC%80ubantu%E9%BB%91%E5%B1%8F%E6%97%A0%E5%8F%8D%E5%BA%94/1.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QT编写串口助手</title>
      <link href="/2021/12/02/qt-bian-xie-chuan-kou-zhu-shou/"/>
      <url>/2021/12/02/qt-bian-xie-chuan-kou-zhu-shou/</url>
      
        <content type="html"><![CDATA[<p><em><strong>.pro文件中</strong></em></p><p>QT += serialport</p><p><em><strong>serial.h:</strong></em></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">ifndef</span> SERIAL_H</span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">define</span> SERIAL_H</span></span><br><span class="line"> <span class="number">3</span> </span><br><span class="line"> <span class="number">4</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"> <span class="number">5</span> </span><br><span class="line"> <span class="number">6</span> <span class="comment">/*-------user--------------------*/</span></span><br><span class="line"> <span class="number">7</span> <span class="comment">//port</span></span><br><span class="line"> <span class="number">8</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QSerialPort&gt;</span></span></span><br><span class="line"> <span class="number">9</span> <span class="comment">//debug</span></span><br><span class="line"><span class="number">10</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="number">11</span> <span class="comment">/*-------------------------------*/</span></span><br><span class="line"><span class="number">12</span> </span><br><span class="line"><span class="number">13</span> <span class="keyword">namespace</span> Ui {</span><br><span class="line"><span class="number">14</span> <span class="class"><span class="keyword">class</span> <span class="title">Serial</span>;</span></span><br><span class="line"><span class="number">15</span> }</span><br><span class="line"><span class="number">16</span> </span><br><span class="line"><span class="number">17</span> <span class="class"><span class="keyword">class</span> <span class="title">Serial</span> :</span> <span class="keyword">public</span> QMainWindow</span><br><span class="line"><span class="number">18</span> {</span><br><span class="line"><span class="number">19</span>     Q_OBJECT</span><br><span class="line"><span class="number">20</span> </span><br><span class="line"><span class="number">21</span> <span class="keyword">public</span>:</span><br><span class="line"><span class="number">22</span>     <span class="function"><span class="keyword">explicit</span> <span class="title">Serial</span><span class="params">(QWidget *parent = <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="number">23</span>     ~<span class="built_in">Serial</span>();</span><br><span class="line"><span class="number">24</span> </span><br><span class="line"><span class="number">25</span> <span class="keyword">private</span> slots:</span><br><span class="line"><span class="number">26</span>     <span class="comment">//button</span></span><br><span class="line"><span class="number">27</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_open_port</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">28</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_close_port</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">29</span>     <span class="function"><span class="keyword">void</span> <span class="title">btn_send_data</span><span class="params">(<span class="keyword">bool</span>)</span></span>;</span><br><span class="line"><span class="number">30</span> </span><br><span class="line"><span class="number">31</span>     <span class="comment">//receive data</span></span><br><span class="line"><span class="number">32</span>     <span class="function"><span class="keyword">void</span> <span class="title">receive_data</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">33</span> </span><br><span class="line"><span class="number">34</span> <span class="keyword">private</span>:</span><br><span class="line"><span class="number">35</span>     Ui::Serial *ui;</span><br><span class="line"><span class="number">36</span>     <span class="comment">/*----------funtion-------------------*/</span></span><br><span class="line"><span class="number">37</span>     <span class="function"><span class="keyword">void</span> <span class="title">system_init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="number">38</span>     <span class="comment">/*----------variable-------------------*/</span></span><br><span class="line"><span class="number">39</span>     QSerialPort global_port;</span><br><span class="line"><span class="number">40</span> };</span><br><span class="line"><span class="number">41</span> </span><br><span class="line"><span class="number">42</span> <span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// SERIAL_H</span></span></span><br></pre></td></tr></tbody></table></figure><p>main.cpp:</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"> <span class="number">3</span> </span><br><span class="line"> <span class="number">4</span> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"> 5 </span>{</span><br><span class="line"> <span class="number">6</span>     <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"> <span class="number">7</span>     Serial w;</span><br><span class="line"> <span class="number">8</span>     w.<span class="built_in">show</span>();</span><br><span class="line"> <span class="number">9</span> </span><br><span class="line"><span class="number">10</span>     <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line"><span class="number">11</span> }</span><br></pre></td></tr></tbody></table></figure><p><em><strong>serial.cpp:</strong></em></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">  <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"serial.h"</span></span></span><br><span class="line">  <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_serial.h"</span></span></span><br><span class="line">  <span class="number">3</span> </span><br><span class="line">  <span class="number">4</span> Serial::<span class="built_in">Serial</span>(QWidget *parent) :</span><br><span class="line">  <span class="number">5</span>     <span class="built_in">QMainWindow</span>(parent),</span><br><span class="line">  <span class="number">6</span>     <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Serial)</span><br><span class="line">  <span class="number">7</span> {</span><br><span class="line">  <span class="number">8</span>     ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">  <span class="number">9</span>     <span class="comment">//user</span></span><br><span class="line"> <span class="number">10</span>     <span class="built_in">system_init</span>();</span><br><span class="line"> <span class="number">11</span> }</span><br><span class="line"> <span class="number">12</span> </span><br><span class="line"> <span class="number">13</span> Serial::~<span class="built_in">Serial</span>()</span><br><span class="line"> <span class="number">14</span> {</span><br><span class="line"> <span class="number">15</span>     <span class="keyword">delete</span> ui;</span><br><span class="line"> <span class="number">16</span> }</span><br><span class="line"> <span class="number">17</span> </span><br><span class="line"> <span class="number">18</span> <span class="comment">/*--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> 19  *          funtions</span></span><br><span class="line"><span class="comment"> 20  * -------------------------------------------------------------------------*/</span></span><br><span class="line"> <span class="number">21</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::system_init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 22 </span>{</span><br><span class="line"> <span class="number">23</span>     <span class="comment">//port config</span></span><br><span class="line"> <span class="number">24</span>     global_port.<span class="built_in">setParity</span>(QSerialPort::NoParity);</span><br><span class="line"> <span class="number">25</span>     global_port.<span class="built_in">setDataBits</span>(QSerialPort::Data8);</span><br><span class="line"> <span class="number">26</span>     global_port.<span class="built_in">setStopBits</span>(QSerialPort::OneStop);</span><br><span class="line"> <span class="number">27</span> </span><br><span class="line"> <span class="number">28</span>     <span class="comment">//connect</span></span><br><span class="line"> <span class="number">29</span>     <span class="built_in">connect</span>(ui-&gt;btn_open,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_open_port);</span><br><span class="line"> <span class="number">30</span>     <span class="built_in">connect</span>(ui-&gt;btn_close,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_close_port);</span><br><span class="line"> <span class="number">31</span>     <span class="built_in">connect</span>(ui-&gt;btn_send,&amp;QPushButton::clicked,<span class="keyword">this</span>,&amp;Serial::btn_send_data);</span><br><span class="line"> <span class="number">32</span>     <span class="built_in">connect</span>(&amp;global_port,&amp;QSerialPort::readyRead,<span class="keyword">this</span>,&amp;Serial::receive_data);</span><br><span class="line"> <span class="number">33</span> }</span><br><span class="line"> <span class="number">34</span> <span class="comment">/*--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> 35  *          slots</span></span><br><span class="line"><span class="comment"> 36  * -------------------------------------------------------------------------*/</span></span><br><span class="line"> <span class="number">37</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_open_port</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function"> 38 </span>{</span><br><span class="line"> <span class="number">39</span>     <span class="comment">/*--------port name------------------------*/</span></span><br><span class="line"> <span class="number">40</span>     <span class="built_in">qDebug</span>()&lt;&lt;ui-&gt;cmb_port_name-&gt;<span class="built_in">currentIndex</span>();<span class="comment">//printf 0</span></span><br><span class="line"> <span class="number">41</span> <span class="comment">//    int i = 10;</span></span><br><span class="line"> <span class="number">42</span> <span class="comment">//    qDebug("%d",i);</span></span><br><span class="line"> <span class="number">43</span>     <span class="built_in"><span class="keyword">switch</span></span> (ui-&gt;cmb_port_name-&gt;<span class="built_in">currentIndex</span>()) {</span><br><span class="line"> <span class="number">44</span>     <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"> <span class="number">45</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM1"</span>);</span><br><span class="line"> <span class="number">46</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">47</span>     <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> <span class="number">48</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM2"</span>);</span><br><span class="line"> <span class="number">49</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">50</span>     <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> <span class="number">51</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM3"</span>);</span><br><span class="line"> <span class="number">52</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">53</span>     <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"> <span class="number">54</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM4"</span>);</span><br><span class="line"> <span class="number">55</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">56</span>     <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"> <span class="number">57</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM5"</span>);</span><br><span class="line"> <span class="number">58</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">59</span>     <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"> <span class="number">60</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM6"</span>);</span><br><span class="line"> <span class="number">61</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">62</span>     <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"> <span class="number">63</span>         global_port.<span class="built_in">setPortName</span>(<span class="string">"COM7"</span>);</span><br><span class="line"> <span class="number">64</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">65</span>     <span class="keyword">default</span>:</span><br><span class="line"> <span class="number">66</span>          global_port.<span class="built_in">setPortName</span>(<span class="string">"COM8"</span>);</span><br><span class="line"> <span class="number">67</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">68</span>     }</span><br><span class="line"> <span class="number">69</span>     <span class="comment">/*--------baud rate-----------------------------*/</span></span><br><span class="line"> <span class="number">70</span>     <span class="built_in"><span class="keyword">switch</span></span> (ui-&gt;cmb_baud_rate-&gt;<span class="built_in">currentIndex</span>()) {</span><br><span class="line"> <span class="number">71</span>     <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"> <span class="number">72</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud115200);</span><br><span class="line"> <span class="number">73</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">74</span>     <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> <span class="number">75</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud57600);</span><br><span class="line"> <span class="number">76</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">77</span>     <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> <span class="number">78</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud38400);</span><br><span class="line"> <span class="number">79</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">80</span>     <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"> <span class="number">81</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud19200);</span><br><span class="line"> <span class="number">82</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">83</span>     <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"> <span class="number">84</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud9600);</span><br><span class="line"> <span class="number">85</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">86</span>     <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"> <span class="number">87</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud4800);</span><br><span class="line"> <span class="number">88</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">89</span>     <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"> <span class="number">90</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud2400);</span><br><span class="line"> <span class="number">91</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">92</span>     <span class="keyword">default</span>:</span><br><span class="line"> <span class="number">93</span>         global_port.<span class="built_in">setBaudRate</span>(QSerialPort::Baud1200);</span><br><span class="line"> <span class="number">94</span>         <span class="keyword">break</span>;</span><br><span class="line"> <span class="number">95</span>     }</span><br><span class="line"> <span class="number">96</span>     <span class="comment">//open</span></span><br><span class="line"> <span class="number">97</span>     global_port.<span class="built_in">open</span>(QIODevice::ReadWrite);</span><br><span class="line"> <span class="number">98</span>     ui-&gt;lab_status-&gt;<span class="built_in">setText</span>(<span class="string">"Connected"</span>);</span><br><span class="line"> <span class="number">99</span>     <span class="comment">//test</span></span><br><span class="line"><span class="number">100</span> <span class="comment">//    global_port.write("1");</span></span><br><span class="line"><span class="number">101</span> }</span><br><span class="line"><span class="number">102</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_close_port</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function">103 </span>{</span><br><span class="line"><span class="number">104</span>     ui-&gt;lab_status-&gt;<span class="built_in">setText</span>(<span class="string">"Disconnected"</span>);</span><br><span class="line"><span class="number">105</span>     global_port.<span class="built_in">close</span>();</span><br><span class="line"><span class="number">106</span> }</span><br><span class="line"><span class="number">107</span> <span class="comment">/*------------sending data---------------------*/</span></span><br><span class="line"><span class="number">108</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::btn_send_data</span><span class="params">(<span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function">109 </span>{</span><br><span class="line"><span class="number">110</span>    QString data = ui-&gt;lint_send_data-&gt;<span class="built_in">text</span>();</span><br><span class="line"><span class="number">111</span>    QByteArray array = data.<span class="built_in">toLatin1</span>();<span class="comment">//QString---&gt;QByteArray</span></span><br><span class="line"><span class="number">112</span>    global_port.<span class="built_in">write</span>(array);</span><br><span class="line"><span class="number">113</span> }</span><br><span class="line"><span class="number">114</span> <span class="comment">/*-----------receive data-----------------*/</span></span><br><span class="line"><span class="number">115</span> <span class="function"><span class="keyword">void</span> <span class="title">Serial::receive_data</span><span class="params">()</span></span></span><br><span class="line"><span class="function">116 </span>{</span><br><span class="line"><span class="number">117</span>    QByteArray array = global_port.<span class="built_in">readAll</span>();</span><br><span class="line"><span class="number">118</span>    <span class="built_in">qDebug</span>()&lt;&lt;array;</span><br><span class="line"><span class="number">119</span>    <span class="keyword">if</span>(ui-&gt;checkBox-&gt;<span class="built_in">checkState</span>() == Qt::Checked){</span><br><span class="line"><span class="number">120</span>       ui-&gt;plainTextEdit-&gt;<span class="built_in">insertPlainText</span>(<span class="built_in">QString</span>(array.<span class="built_in">toHex</span>(<span class="string">' '</span>).<span class="built_in">toUpper</span>().<span class="built_in">append</span>(<span class="string">' '</span>)));</span><br><span class="line"><span class="number">121</span>    }<span class="keyword">else</span> {</span><br><span class="line"><span class="number">122</span>        ui-&gt;plainTextEdit-&gt;<span class="built_in">insertPlainText</span>(<span class="built_in">QString</span>(array));</span><br><span class="line"><span class="number">123</span>    }</span><br><span class="line"><span class="number">124</span> }</span><br></pre></td></tr></tbody></table></figure><p><em><strong>ui:</strong></em></p><p><img src="https://img2020.cnblogs.com/blog/2092994/202009/2092994-20200913005814247-966532200.png" alt="img"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>串口发送问题</title>
      <link href="/2021/12/02/chuan-kou-fa-song-wen-ti/"/>
      <url>/2021/12/02/chuan-kou-fa-song-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>　串口发送hex命令为char型的十六进制命令，并用到了CRC16校验，分别取校验结果数据的高低位</p><p>　　10进制int型数据转16进制，并取高低位：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">  <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">  <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">  <span class="number">3</span> <span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">  <span class="number">4</span> </span><br><span class="line">  <span class="number">5</span> <span class="meta">#<span class="meta-keyword">define</span> TABLE_METHOD    1</span></span><br><span class="line">  <span class="number">6</span> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> CRCHi[] = {</span><br><span class="line">  <span class="number">7</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line">  <span class="number">8</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line">  <span class="number">9</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">10</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">11</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">12</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">13</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">14</span>     <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">15</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">16</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">17</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">18</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">19</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">20</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">21</span>     <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">22</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">23</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">24</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>,</span><br><span class="line"> <span class="number">25</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">26</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">27</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x41</span>,</span><br><span class="line"> <span class="number">28</span>     <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x81</span>, <span class="number">0x40</span></span><br><span class="line"> <span class="number">29</span> };</span><br><span class="line"> <span class="number">30</span> </span><br><span class="line"> <span class="number">31</span> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> CRCLo[] = {</span><br><span class="line"> <span class="number">32</span>     <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0xC1</span>, <span class="number">0x01</span>, <span class="number">0xC3</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0xC2</span>, <span class="number">0xC6</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0xC7</span>,</span><br><span class="line"> <span class="number">33</span>     <span class="number">0x05</span>, <span class="number">0xC5</span>, <span class="number">0xC4</span>, <span class="number">0x04</span>, <span class="number">0xCC</span>, <span class="number">0x0C</span>, <span class="number">0x0D</span>, <span class="number">0xCD</span>, <span class="number">0x0F</span>, <span class="number">0xCF</span>, <span class="number">0xCE</span>, <span class="number">0x0E</span>,</span><br><span class="line"> <span class="number">34</span>     <span class="number">0x0A</span>, <span class="number">0xCA</span>, <span class="number">0xCB</span>, <span class="number">0x0B</span>, <span class="number">0xC9</span>, <span class="number">0x09</span>, <span class="number">0x08</span>, <span class="number">0xC8</span>, <span class="number">0xD8</span>, <span class="number">0x18</span>, <span class="number">0x19</span>, <span class="number">0xD9</span>,</span><br><span class="line"> <span class="number">35</span>     <span class="number">0x1B</span>, <span class="number">0xDB</span>, <span class="number">0xDA</span>, <span class="number">0x1A</span>, <span class="number">0x1E</span>, <span class="number">0xDE</span>, <span class="number">0xDF</span>, <span class="number">0x1F</span>, <span class="number">0xDD</span>, <span class="number">0x1D</span>, <span class="number">0x1C</span>, <span class="number">0xDC</span>,</span><br><span class="line"> <span class="number">36</span>     <span class="number">0x14</span>, <span class="number">0xD4</span>, <span class="number">0xD5</span>, <span class="number">0x15</span>, <span class="number">0xD7</span>, <span class="number">0x17</span>, <span class="number">0x16</span>, <span class="number">0xD6</span>, <span class="number">0xD2</span>, <span class="number">0x12</span>, <span class="number">0x13</span>, <span class="number">0xD3</span>,</span><br><span class="line"> <span class="number">37</span>     <span class="number">0x11</span>, <span class="number">0xD1</span>, <span class="number">0xD0</span>, <span class="number">0x10</span>, <span class="number">0xF0</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0xF1</span>, <span class="number">0x33</span>, <span class="number">0xF3</span>, <span class="number">0xF2</span>, <span class="number">0x32</span>,</span><br><span class="line"> <span class="number">38</span>     <span class="number">0x36</span>, <span class="number">0xF6</span>, <span class="number">0xF7</span>, <span class="number">0x37</span>, <span class="number">0xF5</span>, <span class="number">0x35</span>, <span class="number">0x34</span>, <span class="number">0xF4</span>, <span class="number">0x3C</span>, <span class="number">0xFC</span>, <span class="number">0xFD</span>, <span class="number">0x3D</span>,</span><br><span class="line"> <span class="number">39</span>     <span class="number">0xFF</span>, <span class="number">0x3F</span>, <span class="number">0x3E</span>, <span class="number">0xFE</span>, <span class="number">0xFA</span>, <span class="number">0x3A</span>, <span class="number">0x3B</span>, <span class="number">0xFB</span>, <span class="number">0x39</span>, <span class="number">0xF9</span>, <span class="number">0xF8</span>, <span class="number">0x38</span>,</span><br><span class="line"> <span class="number">40</span>     <span class="number">0x28</span>, <span class="number">0xE8</span>, <span class="number">0xE9</span>, <span class="number">0x29</span>, <span class="number">0xEB</span>, <span class="number">0x2B</span>, <span class="number">0x2A</span>, <span class="number">0xEA</span>, <span class="number">0xEE</span>, <span class="number">0x2E</span>, <span class="number">0x2F</span>, <span class="number">0xEF</span>,</span><br><span class="line"> <span class="number">41</span>     <span class="number">0x2D</span>, <span class="number">0xED</span>, <span class="number">0xEC</span>, <span class="number">0x2C</span>, <span class="number">0xE4</span>, <span class="number">0x24</span>, <span class="number">0x25</span>, <span class="number">0xE5</span>, <span class="number">0x27</span>, <span class="number">0xE7</span>, <span class="number">0xE6</span>, <span class="number">0x26</span>,</span><br><span class="line"> <span class="number">42</span>     <span class="number">0x22</span>, <span class="number">0xE2</span>, <span class="number">0xE3</span>, <span class="number">0x23</span>, <span class="number">0xE1</span>, <span class="number">0x21</span>, <span class="number">0x20</span>, <span class="number">0xE0</span>, <span class="number">0xA0</span>, <span class="number">0x60</span>, <span class="number">0x61</span>, <span class="number">0xA1</span>,</span><br><span class="line"> <span class="number">43</span>     <span class="number">0x63</span>, <span class="number">0xA3</span>, <span class="number">0xA2</span>, <span class="number">0x62</span>, <span class="number">0x66</span>, <span class="number">0xA6</span>, <span class="number">0xA7</span>, <span class="number">0x67</span>, <span class="number">0xA5</span>, <span class="number">0x65</span>, <span class="number">0x64</span>, <span class="number">0xA4</span>,</span><br><span class="line"> <span class="number">44</span>     <span class="number">0x6C</span>, <span class="number">0xAC</span>, <span class="number">0xAD</span>, <span class="number">0x6D</span>, <span class="number">0xAF</span>, <span class="number">0x6F</span>, <span class="number">0x6E</span>, <span class="number">0xAE</span>, <span class="number">0xAA</span>, <span class="number">0x6A</span>, <span class="number">0x6B</span>, <span class="number">0xAB</span>,</span><br><span class="line"> <span class="number">45</span>     <span class="number">0x69</span>, <span class="number">0xA9</span>, <span class="number">0xA8</span>, <span class="number">0x68</span>, <span class="number">0x78</span>, <span class="number">0xB8</span>, <span class="number">0xB9</span>, <span class="number">0x79</span>, <span class="number">0xBB</span>, <span class="number">0x7B</span>, <span class="number">0x7A</span>, <span class="number">0xBA</span>,</span><br><span class="line"> <span class="number">46</span>     <span class="number">0xBE</span>, <span class="number">0x7E</span>, <span class="number">0x7F</span>, <span class="number">0xBF</span>, <span class="number">0x7D</span>, <span class="number">0xBD</span>, <span class="number">0xBC</span>, <span class="number">0x7C</span>, <span class="number">0xB4</span>, <span class="number">0x74</span>, <span class="number">0x75</span>, <span class="number">0xB5</span>,</span><br><span class="line"> <span class="number">47</span>     <span class="number">0x77</span>, <span class="number">0xB7</span>, <span class="number">0xB6</span>, <span class="number">0x76</span>, <span class="number">0x72</span>, <span class="number">0xB2</span>, <span class="number">0xB3</span>, <span class="number">0x73</span>, <span class="number">0xB1</span>, <span class="number">0x71</span>, <span class="number">0x70</span>, <span class="number">0xB0</span>,</span><br><span class="line"> <span class="number">48</span>     <span class="number">0x50</span>, <span class="number">0x90</span>, <span class="number">0x91</span>, <span class="number">0x51</span>, <span class="number">0x93</span>, <span class="number">0x53</span>, <span class="number">0x52</span>, <span class="number">0x92</span>, <span class="number">0x96</span>, <span class="number">0x56</span>, <span class="number">0x57</span>, <span class="number">0x97</span>,</span><br><span class="line"> <span class="number">49</span>     <span class="number">0x55</span>, <span class="number">0x95</span>, <span class="number">0x94</span>, <span class="number">0x54</span>, <span class="number">0x9C</span>, <span class="number">0x5C</span>, <span class="number">0x5D</span>, <span class="number">0x9D</span>, <span class="number">0x5F</span>, <span class="number">0x9F</span>, <span class="number">0x9E</span>, <span class="number">0x5E</span>,</span><br><span class="line"> <span class="number">50</span>     <span class="number">0x5A</span>, <span class="number">0x9A</span>, <span class="number">0x9B</span>, <span class="number">0x5B</span>, <span class="number">0x99</span>, <span class="number">0x59</span>, <span class="number">0x58</span>, <span class="number">0x98</span>, <span class="number">0x88</span>, <span class="number">0x48</span>, <span class="number">0x49</span>, <span class="number">0x89</span>,</span><br><span class="line"> <span class="number">51</span>     <span class="number">0x4B</span>, <span class="number">0x8B</span>, <span class="number">0x8A</span>, <span class="number">0x4A</span>, <span class="number">0x4E</span>, <span class="number">0x8E</span>, <span class="number">0x8F</span>, <span class="number">0x4F</span>, <span class="number">0x8D</span>, <span class="number">0x4D</span>, <span class="number">0x4C</span>, <span class="number">0x8C</span>,</span><br><span class="line"> <span class="number">52</span>     <span class="number">0x44</span>, <span class="number">0x84</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0x87</span>, <span class="number">0x47</span>, <span class="number">0x46</span>, <span class="number">0x86</span>, <span class="number">0x82</span>, <span class="number">0x42</span>, <span class="number">0x43</span>, <span class="number">0x83</span>,</span><br><span class="line"> <span class="number">53</span>     <span class="number">0x41</span>, <span class="number">0x81</span>, <span class="number">0x80</span>, <span class="number">0x40</span></span><br><span class="line"> <span class="number">54</span> };</span><br><span class="line"> <span class="number">55</span> </span><br><span class="line"> <span class="number">56</span> <span class="function"><span class="keyword">uint16_t</span> <span class="title">CRC16</span><span class="params">( <span class="keyword">uint8_t</span> *Frame, <span class="keyword">uint16_t</span> Len )</span></span></span><br><span class="line"><span class="function"> 57 </span>{</span><br><span class="line"> <span class="number">58</span>     <span class="keyword">uint8_t</span>        ucCRCHi = <span class="number">0xFF</span>;</span><br><span class="line"> <span class="number">59</span>     <span class="keyword">uint8_t</span>        ucCRCLo = <span class="number">0xFF</span>;</span><br><span class="line"> <span class="number">60</span>     <span class="keyword">int</span>                iIndex;</span><br><span class="line"> <span class="number">61</span> </span><br><span class="line"> <span class="number">62</span>     <span class="keyword">while</span>( Len-- )</span><br><span class="line"> <span class="number">63</span>     {</span><br><span class="line"> <span class="number">64</span>         iIndex = ucCRCLo ^ *( Frame++ );</span><br><span class="line"> <span class="number">65</span>         ucCRCLo = ( <span class="keyword">uint8_t</span> )( ucCRCHi ^ CRCHi[iIndex] );</span><br><span class="line"> <span class="number">66</span>         ucCRCHi = CRCLo[iIndex];</span><br><span class="line"> <span class="number">67</span>     }</span><br><span class="line"> <span class="number">68</span>     <span class="keyword">return</span> ( <span class="keyword">uint16_t</span> )( ucCRCHi &lt;&lt; <span class="number">8</span> | ucCRCLo );</span><br><span class="line"> <span class="number">69</span> }</span><br><span class="line"> <span class="number">70</span> </span><br><span class="line"> <span class="number">93</span> </span><br><span class="line"> <span class="number">94</span> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span> </span>{</span><br><span class="line"> <span class="number">95</span>   <span class="keyword">char</span> a[] = {<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>, <span class="number">0x0d</span>};</span><br><span class="line"> <span class="number">96</span>   <span class="keyword">char</span>* temp = a;</span><br><span class="line"> <span class="number">97</span>   <span class="keyword">uint16_t</span> c = <span class="built_in">CRC16</span>((<span class="keyword">uint8_t</span> *)temp, <span class="number">4</span>);</span><br><span class="line"> <span class="number">98</span>   cout&lt;&lt; c &lt;&lt;endl;</span><br><span class="line"> <span class="number">99</span>   <span class="keyword">int</span> cL= c%<span class="number">256</span> &amp; <span class="number">0xff</span>;   <span class="comment">//校验结果的低位</span></span><br><span class="line"><span class="number">100</span>   <span class="keyword">int</span> cH = c/ <span class="number">256</span> &amp; <span class="number">0xff</span>; <span class="comment">//校验结果的高位</span></span><br><span class="line"><span class="number">101</span> }</span><br></pre></td></tr></tbody></table></figure><p>　　后续只需对得到的高低位数据进行强制类型转换就可以插入到命令字符串中发送了~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>The difference between join and detach</title>
      <link href="/2021/12/02/the-difference-between-join-and-detach/"/>
      <url>/2021/12/02/the-difference-between-join-and-detach/</url>
      
        <content type="html"><![CDATA[<p>A C++ <code>thread</code> object generally (but not always) represents a thread of execution, which is an OS or platform concept.</p><p>When <code>thread::join()</code> is called, the calling thread will block until the thread of execution has completed. Basically, this is one mechanism that can be used to know when a thread has finished. When <code>thread::join()</code> returns, the OS thread of execution has completed and the C++ <code>thread</code> object can be destroyed.</p><p>The <code>thread::detach()</code> is called, the thread of execution is “detached” from the <code>thread</code> object and is no longer represented by a <code>thread</code> object - they are two independent things. The C++ <code>thread</code> object can be destroyed and the OS thread of execution can continue on. If the program needs to know when that thread of execution has completed, some other mechanism needs to be used. <code>join()</code> cannot be called on that <code>thread</code> object any more, since it is no longer associated with a thread of execution.</p><p>It is considered an error to destroy a C++ <code>thread</code> object while it is still “joinable”. That is, in order to destroy a C++ <code>thread</code> object either <code>join()</code> needs to be called (and completed) or <code>detach()</code> must be called. If a C++ <code>thread</code> object is still joinable when it’s destroyed, an exception will be thrown.</p><p>Some other ways that a C++ <code>thread</code> object will not represent a thread of execution (ie., can be unjoinable):</p><ul><li>A default constructed <code>thread</code> object does not represent a thread of execution, so is not joinable.</li><li>A thread that has been moved from will no longer represent a thread of execution, so is not joinable.</li></ul><p><code>join()</code> doesn’t kill the thread. Actually it waits until thread main function returns. So if your thread main function looks like this:</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>join()</code> is going to wait forever.</p><p><code>detatch()</code> doesn’t kill thread either. Actually it tells <code>std::thread</code> that this thread should continue to run even when <code>std::thread</code> object is destroyed. C++ checks in std::thread destructor that thread is either joined or detached and terminates program if this check fails.</p><p>So if you uncomment first line in <code>main</code> function of the following code it will crash. If you uncomment second or third line it will work ok.</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> </span>{</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fail1</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    <span class="comment">// will fail when we try to destroy t since it is not joined or detached</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">works1</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    t.<span class="built_in">join</span>();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">works2</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="function">std::thread <span class="title">t</span><span class="params">(func)</span></span>;</span><br><span class="line">    t.<span class="built_in">detach</span>();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="comment">// fail1();</span></span><br><span class="line">    <span class="comment">// works1();</span></span><br><span class="line">    <span class="comment">// works2();</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QT文件操作-遍历</title>
      <link href="/2021/12/02/qt-wen-jian-cao-zuo-bian-li/"/>
      <url>/2021/12/02/qt-wen-jian-cao-zuo-bian-li/</url>
      
        <content type="html"><![CDATA[<p>QT的路径格式使用 / 或 \</p><p>读写文本</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span>     <span class="comment">//写文本</span></span><br><span class="line"> <span class="number">2</span>     <span class="function">QFile <span class="title">f</span><span class="params">(<span class="string">"F:/src/1.txt"</span>)</span></span>;</span><br><span class="line"> <span class="number">3</span>     <span class="keyword">if</span>(!f.<span class="built_in">open</span>(QIODevice::WriteOnly | QIODevice::Text))</span><br><span class="line"> <span class="number">4</span>     {</span><br><span class="line"> <span class="number">5</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"Open failed."</span> &lt;&lt; endl;</span><br><span class="line"> <span class="number">6</span>     }</span><br><span class="line"> <span class="number">7</span> </span><br><span class="line"> <span class="number">8</span>     <span class="function">QTextStream <span class="title">txtOutput</span><span class="params">(&amp;f)</span></span>;</span><br><span class="line"> <span class="number">9</span>     <span class="function">QString <span class="title">s1</span><span class="params">(<span class="string">"123"</span>)</span></span>;</span><br><span class="line"><span class="number">10</span>     <span class="function">quint32 <span class="title">n1</span><span class="params">(<span class="number">123</span>)</span></span>;</span><br><span class="line"><span class="number">11</span> </span><br><span class="line"><span class="number">12</span>     txtOutput &lt;&lt; s1 &lt;&lt; endl;</span><br><span class="line"><span class="number">13</span>     txtOutput &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line"><span class="number">14</span> </span><br><span class="line"><span class="number">15</span>     f.<span class="built_in">close</span>();</span><br><span class="line"><span class="number">16</span> </span><br><span class="line"><span class="number">17</span> </span><br><span class="line"><span class="number">18</span>    <span class="comment">//读文本</span></span><br><span class="line"><span class="number">19</span>     <span class="function">QFile <span class="title">f</span><span class="params">(<span class="string">"F:/src/1.txt"</span>)</span></span>;</span><br><span class="line"><span class="number">20</span>     <span class="keyword">if</span>(!f.<span class="built_in">open</span>(QIODevice::ReadOnly | QIODevice::Text))</span><br><span class="line"><span class="number">21</span>     {</span><br><span class="line"><span class="number">22</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"Open failed."</span> &lt;&lt; endl;</span><br><span class="line"><span class="number">23</span>     }</span><br><span class="line"><span class="number">24</span> </span><br><span class="line"><span class="number">25</span>     <span class="function">QTextStream <span class="title">txtInput</span><span class="params">(&amp;f)</span></span>;</span><br><span class="line"><span class="number">26</span>     QString lineStr;</span><br><span class="line"><span class="number">27</span>     <span class="keyword">while</span>(!txtInput.<span class="built_in">atEnd</span>())</span><br><span class="line"><span class="number">28</span>     {</span><br><span class="line"><span class="number">29</span>         lineStr = txtInput.<span class="built_in">readLine</span>();</span><br><span class="line"><span class="number">30</span>         <span class="built_in">qDebug</span>() &lt;&lt; lineStr &lt;&lt; endl;</span><br><span class="line"><span class="number">31</span>     }</span><br><span class="line"><span class="number">32</span> </span><br><span class="line"><span class="number">33</span>     f.<span class="built_in">close</span>();</span><br></pre></td></tr></tbody></table></figure><p>查找路径下所有特定文件（和文件夹）</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="function"><span class="keyword">void</span> <span class="title">fllemanage::on_pushButton_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 2 </span>{</span><br><span class="line"> <span class="number">3</span>     <span class="comment">//    int count = 0;</span></span><br><span class="line"> <span class="number">4</span>     <span class="comment">//    QString dirpath = "C:/Users/00/Desktop/git clone/OpenCV-Python-Tutorial/.idea";</span></span><br><span class="line"> <span class="number">5</span>     <span class="comment">//    //设置要遍历的目录</span></span><br><span class="line"> <span class="number">6</span>     <span class="comment">//    QDir dir(dirpath);</span></span><br><span class="line"> <span class="number">7</span>     <span class="comment">//    qDebug()&lt;&lt;dirpath&lt;&lt;endl;</span></span><br><span class="line"> <span class="number">8</span>     <span class="comment">//    //设置文件过滤器</span></span><br><span class="line"> <span class="number">9</span>     <span class="comment">//    QStringList nameFilters;</span></span><br><span class="line"><span class="number">10</span>     <span class="comment">//    //设置文件过滤格式</span></span><br><span class="line"><span class="number">11</span>     <span class="comment">//    nameFilters &lt;&lt; "*.xml";</span></span><br><span class="line"><span class="number">12</span>     <span class="comment">//    dir.setNameFilters(nameFilters);</span></span><br><span class="line"><span class="number">13</span>     <span class="comment">//    qDebug()&lt;&lt;dir.entryList()&lt;&lt;endl;</span></span><br><span class="line"><span class="number">14</span>     <span class="comment">//    qDebug()&lt;&lt;dir.entryInfoList()&lt;&lt;endl;</span></span><br><span class="line"><span class="number">15</span>     <span class="comment">//    //将过滤后的文件名称存入到files列表中</span></span><br><span class="line"><span class="number">16</span>     <span class="comment">//    QStringList files = dir.entryList(nameFilters, QDir::Files|QDir::Readable, QDir::Name);</span></span><br><span class="line"><span class="number">17</span>     <span class="comment">//    for(int i = 0; i&lt;files.size(); i++)</span></span><br><span class="line"><span class="number">18</span>     <span class="comment">//    {</span></span><br><span class="line"><span class="number">19</span>     <span class="comment">//        qDebug()&lt;&lt;"now, it's output from QStringlist"&lt;&lt;endl;</span></span><br><span class="line"><span class="number">20</span>     <span class="comment">//        qDebug()&lt;&lt;files[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="number">21</span>     <span class="comment">//    }</span></span><br><span class="line"><span class="number">22</span> </span><br><span class="line"><span class="number">23</span>     QStringList list = <span class="built_in">findALLfiles</span>(<span class="string">"C:/Users/00/Desktop/vsrun/123"</span>);</span><br><span class="line"><span class="number">24</span>     <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="number">25</span>     <span class="comment">//for(int i = 0 ; i &lt;list.size(); i++)</span></span><br><span class="line"><span class="number">26</span>       <span class="comment">//qDebug() &lt;&lt;list[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="number">27</span>     QStringList purposelist;</span><br><span class="line"><span class="number">28</span>     purposelist = list.<span class="built_in">filter</span>(<span class="string">".txt"</span>);</span><br><span class="line"><span class="number">29</span>     <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="number">30</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="number">31</span>     {</span><br><span class="line"><span class="number">32</span>         <span class="built_in">qDebug</span>() &lt;&lt; purposelist[i] &lt;&lt; endl;</span><br><span class="line"><span class="number">33</span>         count++;</span><br><span class="line"><span class="number">34</span>     }</span><br><span class="line"><span class="number">35</span>     <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the max file has "</span> &lt;&lt; list.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="number">36</span>     <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the purpose file has "</span> &lt;&lt; count &lt;&lt; endl;</span><br><span class="line"><span class="number">37</span> </span><br><span class="line"><span class="number">38</span>     <span class="comment">//新建文件夹（目标文件保存的位置）</span></span><br><span class="line"><span class="number">39</span> <span class="comment">//     QDir dir("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="number">40</span> <span class="comment">//     if(!dir.exists("copy to here")){</span></span><br><span class="line"><span class="number">41</span> <span class="comment">//         dir.mkdir("copy to here");</span></span><br><span class="line"><span class="number">42</span> <span class="comment">//     }</span></span><br><span class="line"><span class="number">43</span>     QString toDir = <span class="string">"C:/Users/00/Desktop/123"</span>;</span><br><span class="line"><span class="number">44</span>     <span class="comment">//toDir.replace("\\","/");</span></span><br><span class="line"><span class="number">45</span> </span><br><span class="line"><span class="number">46</span>     <span class="function">QDir <span class="title">dir</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="number">47</span>     <span class="keyword">if</span> (!dir.<span class="built_in">exists</span>(toDir)) {</span><br><span class="line"><span class="number">48</span>         dir.<span class="built_in">mkdir</span>(toDir);</span><br><span class="line"><span class="number">49</span>     }</span><br><span class="line"><span class="number">50</span> </span><br><span class="line"><span class="number">51</span>     <span class="function">QFile <span class="title">destFile</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="number">52</span>     <span class="keyword">bool</span> success = <span class="literal">true</span>;</span><br><span class="line"><span class="number">53</span>     success &amp;= destFile.<span class="built_in">open</span>(QFile::WriteOnly | QFile::Truncate);</span><br><span class="line"><span class="number">54</span> </span><br><span class="line"><span class="number">55</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="number">56</span>     {</span><br><span class="line"><span class="number">57</span>         <span class="keyword">if</span> (QFile::<span class="built_in">copy</span>(purposelist[i], toDir)) {  <span class="comment">//将文件复制到新的文件路径下</span></span><br><span class="line"><span class="number">58</span>             {<span class="comment">//QFile::copy(purposelist[i],toDir);</span></span><br><span class="line"><span class="number">59</span>                 <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">QStringLiteral</span>(<span class="string">"复制成功"</span>);</span><br><span class="line"><span class="number">60</span>             }</span><br><span class="line"><span class="number">61</span>         }</span><br><span class="line"><span class="number">62</span>     }</span><br><span class="line"><span class="number">63</span> }</span><br><span class="line"><span class="number">64</span> </span><br><span class="line"><span class="number">65</span> <span class="comment">//迭代器遍历所有文件并返回</span></span><br><span class="line"><span class="number">66</span> <span class="function">QStringList <span class="title">fllemanage::findALLfiles</span><span class="params">(<span class="keyword">const</span> QString &amp;dir_path)</span> </span>{</span><br><span class="line"><span class="number">67</span>     QStringList get_files;</span><br><span class="line"><span class="number">68</span>     <span class="function">QDir <span class="title">dir</span><span class="params">(dir_path)</span></span>;</span><br><span class="line"><span class="number">69</span>     <span class="keyword">if</span> (!dir.<span class="built_in">exists</span>())</span><br><span class="line"><span class="number">70</span>     {</span><br><span class="line"><span class="number">71</span>         <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"it is not true dir_path"</span>;</span><br><span class="line"><span class="number">72</span>     }</span><br><span class="line"><span class="number">73</span> </span><br><span class="line"><span class="number">74</span>     <span class="comment">/*设置过滤参数，QDir::NoDotAndDotDot表示不会去遍历上层目录*/</span></span><br><span class="line"><span class="number">75</span>     <span class="function">QDirIterator <span class="title">dir_iterator</span><span class="params">(dir_path, QDir::Files | QDir::Dirs | QDir::NoDotAndDotDot, QDirIterator::Subdirectories)</span></span>;</span><br><span class="line"><span class="number">76</span> </span><br><span class="line"><span class="number">77</span>     <span class="keyword">while</span> (dir_iterator.<span class="built_in">hasNext</span>())</span><br><span class="line"><span class="number">78</span>     {</span><br><span class="line"><span class="number">79</span>         dir_iterator.<span class="built_in">next</span>();</span><br><span class="line"><span class="number">80</span>         QFileInfo file_info = dir_iterator.<span class="built_in">fileInfo</span>();</span><br><span class="line"><span class="number">81</span>         QString files = file_info.<span class="built_in">absoluteFilePath</span>();</span><br><span class="line"><span class="number">82</span>         get_files.<span class="built_in">append</span>(files);</span><br><span class="line"><span class="number">83</span>     }</span><br><span class="line"><span class="number">84</span> </span><br><span class="line"><span class="number">85</span>     <span class="keyword">return</span> get_files;</span><br><span class="line"><span class="number">86</span> }</span><br></pre></td></tr></tbody></table></figure><p>QFile copy（报错未实现 QIodevce not opened） </p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    copy测试！！！！！！</span></span><br><span class="line"><span class="comment">//    QFile src("F:/src");</span></span><br><span class="line"><span class="comment">//    QFile dst("F:/dst");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    bool success = true;</span></span><br><span class="line"><span class="comment">//    success &amp;= src.open( QFile::ReadOnly );</span></span><br><span class="line"><span class="comment">//    success &amp;= dst.open( QFile::WriteOnly | QFile::Truncate );</span></span><br><span class="line"><span class="comment">//    success &amp;= dst.write( src.readAll() ) &gt;= 0;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   QFile::copy("F:/src/1.txt" , "F:/dst");</span></span><br><span class="line"><span class="comment">//    src.close();</span></span><br><span class="line"><span class="comment">//    dst.close();</span></span><br></pre></td></tr></tbody></table></figure><p>更新：QFile copy 函数写法：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QFile::<span class="built_in">copy</span>(<span class="string">"F:/src/1.txt"</span> , <span class="string">"F:/dst/2.txt"</span>)；  <span class="comment">//（具体文件名 to 具体文件名）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">copy函数不能对string类型的路径进行操作，可从QString转string操作再转QString：</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> std::string pur = purposelist[i].<span class="built_in">toStdString</span>();<span class="comment">//都转换为string</span></span><br><span class="line"><span class="comment">// qDebug()&lt;&lt;pur&lt;&lt;endl;</span></span><br><span class="line"> std::string sdir = toDir.<span class="built_in">toStdString</span>();</span><br><span class="line"> <span class="keyword">int</span> pos = pur.<span class="built_in">find_last_of</span>(<span class="string">'/'</span>); <span class="comment">//找到最后/</span></span><br><span class="line"> <span class="function">std::string <span class="title">s</span><span class="params">(pur.substr(pos+<span class="number">1</span>))</span></span>;</span><br><span class="line"> sdir.<span class="built_in">append</span>(<span class="string">"/"</span>);</span><br><span class="line"> sdir.<span class="built_in">append</span>(s);</span><br><span class="line"> QString qsdir = <span class="built_in">QString</span>(QString::<span class="built_in">fromLocal8Bit</span>(sdir.<span class="built_in">c_str</span>()));</span><br><span class="line"> <span class="built_in">qDebug</span>()&lt;&lt;qsdir&lt;&lt;endl;</span><br><span class="line"> </span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>备份程序-遍历</title>
      <link href="/2021/12/02/bei-fen-cheng-xu-bian-li/"/>
      <url>/2021/12/02/bei-fen-cheng-xu-bian-li/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"fllemanage.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_fllemanage.h"</span></span></span><br><span class="line"></span><br><span class="line">fllemanage::<span class="built_in">fllemanage</span>(QWidget *parent)</span><br><span class="line">: <span class="built_in">QWidget</span>(parent)</span><br><span class="line">, <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::fllemanage)</span><br><span class="line">{</span><br><span class="line">ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//copy测试！！！！！！</span></span><br><span class="line"><span class="comment">//        QFile src("F:/src");</span></span><br><span class="line"><span class="comment">//        QFile dst("F:/dst");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        bool success = true;</span></span><br><span class="line"><span class="comment">//        success &amp;= src.open( QFile::ReadOnly );</span></span><br><span class="line"><span class="comment">//        success &amp;= dst.open( QFile::WriteOnly | QFile::Truncate );</span></span><br><span class="line"><span class="comment">//        success &amp;= dst.write( src.readAll() ) &gt;= 0;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//       QFile::copy("F:/src/1.txt" , "F:/dst/2.txt");</span></span><br><span class="line"><span class="comment">//        src.close();</span></span><br><span class="line"><span class="comment">//        dst.close();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    //写文本</span></span><br><span class="line"><span class="comment">//    QFile f("F:/src/1.txt");</span></span><br><span class="line"><span class="comment">//    if(!f.open(QIODevice::WriteOnly | QIODevice::Text))</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; "Open failed." &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    QTextStream txtOutput(&amp;f);</span></span><br><span class="line"><span class="comment">//    QString s1("123");</span></span><br><span class="line"><span class="comment">//    quint32 n1(123);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    txtOutput &lt;&lt; s1 &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    txtOutput &lt;&lt; n1 &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    f.close();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   //读文本</span></span><br><span class="line"><span class="comment">//    QFile f("F:/src/1.txt");</span></span><br><span class="line"><span class="comment">//    if(!f.open(QIODevice::ReadOnly | QIODevice::Text))</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; "Open failed." &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    QTextStream txtInput(&amp;f);</span></span><br><span class="line"><span class="comment">//    QString lineStr;</span></span><br><span class="line"><span class="comment">//    while(!txtInput.atEnd())</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        lineStr = txtInput.readLine();</span></span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; lineStr &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    f.close();</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">fllemanage::~<span class="built_in">fllemanage</span>()</span><br><span class="line">{</span><br><span class="line"><span class="keyword">delete</span> ui;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fllemanage::on_pushButton_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//    int count = 0;</span></span><br><span class="line"><span class="comment">//    QString dirpath = "C:/Users/00/Desktop/git clone/OpenCV-Python-Tutorial/.idea";</span></span><br><span class="line"><span class="comment">//    //设置要遍历的目录</span></span><br><span class="line"><span class="comment">//    QDir dir(dirpath);</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dirpath&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    //设置文件过滤器</span></span><br><span class="line"><span class="comment">//    QStringList nameFilters;</span></span><br><span class="line"><span class="comment">//    //设置文件过滤格式</span></span><br><span class="line"><span class="comment">//    nameFilters &lt;&lt; "*.xml";</span></span><br><span class="line"><span class="comment">//    dir.setNameFilters(nameFilters);</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dir.entryList()&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    qDebug()&lt;&lt;dir.entryInfoList()&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    //将过滤后的文件名称存入到files列表中</span></span><br><span class="line"><span class="comment">//    QStringList files = dir.entryList(nameFilters, QDir::Files|QDir::Readable, QDir::Name);</span></span><br><span class="line"><span class="comment">//    for(int i = 0; i&lt;files.size(); i++)</span></span><br><span class="line"><span class="comment">//    {</span></span><br><span class="line"><span class="comment">//        qDebug()&lt;&lt;"now, it's output from QStringlist"&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//        qDebug()&lt;&lt;files[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    }</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun/123");</span></span><br><span class="line">    <span class="comment">//QStringList list = findALLfiles("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line">    QStringList list = <span class="built_in">findALLfiles</span>(<span class="string">"C:/Users/00/Desktop/git clone"</span>);</span><br><span class="line">                                                                        <span class="comment">//for(int i = 0 ; i &lt;list.size(); i++)</span></span><br><span class="line">  <span class="comment">//qDebug() &lt;&lt;list[i]&lt;&lt;endl;</span></span><br><span class="line">QStringList purposelist;</span><br><span class="line">    purposelist = list.<span class="built_in">filter</span>(<span class="string">".jpg"</span>);</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; purposelist[i] &lt;&lt; endl;</span><br><span class="line">count++;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the max file has "</span> &lt;&lt; list.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"the purpose file has "</span> &lt;&lt; count &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//新建文件夹（目标文件保存的位置）</span></span><br><span class="line"><span class="comment">//     QDir dir("C:/Users/00/Desktop/vsrun");</span></span><br><span class="line"><span class="comment">//     if(!dir.exists("copy to here")){</span></span><br><span class="line"><span class="comment">//         dir.mkdir("copy to here");</span></span><br><span class="line"><span class="comment">//     }</span></span><br><span class="line">    QString toDir = <span class="string">"C:/Users/00/Desktop/123"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//toDir.replace("\\","/");</span></span><br><span class="line"></span><br><span class="line"><span class="function">QDir <span class="title">dir</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!dir.<span class="built_in">exists</span>(toDir)) {</span><br><span class="line">dir.<span class="built_in">mkdir</span>(toDir);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">QFile <span class="title">destFile</span><span class="params">(toDir)</span></span>;</span><br><span class="line"><span class="keyword">bool</span> success = <span class="literal">true</span>;</span><br><span class="line">success &amp;= destFile.<span class="built_in">open</span>(QFile::WriteOnly | QFile::Truncate);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; purposelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">    {</span><br><span class="line">        std::string pur = purposelist[i].<span class="built_in">toStdString</span>();<span class="comment">//都转换为string</span></span><br><span class="line">       <span class="comment">// qDebug()&lt;&lt;pur&lt;&lt;endl;</span></span><br><span class="line">        std::string sdir = toDir.<span class="built_in">toStdString</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> pos = pur.<span class="built_in">find_last_of</span>(<span class="string">'/'</span>); <span class="comment">//找到最后/</span></span><br><span class="line">        <span class="function">std::string <span class="title">s</span><span class="params">(pur.substr(pos+<span class="number">1</span>))</span></span>;</span><br><span class="line">        sdir.<span class="built_in">append</span>(<span class="string">"/"</span>);</span><br><span class="line"></span><br><span class="line">        sdir.<span class="built_in">append</span>(s);</span><br><span class="line">        QString qsdir = <span class="built_in">QString</span>(QString::<span class="built_in">fromLocal8Bit</span>(sdir.<span class="built_in">c_str</span>()));</span><br><span class="line">        <span class="built_in">qDebug</span>()&lt;&lt;qsdir&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">if</span> (QFile::<span class="built_in">copy</span>(purposelist[i], qsdir)) {  <span class="comment">//将文件复制到新的文件路径下</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(QFile::<span class="built_in">copy</span>(purposelist[i],toDir))</span><br><span class="line">                 <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">QStringLiteral</span>(<span class="string">"复制成功"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//迭代器遍历所有文件并返回</span></span><br><span class="line"><span class="function">QStringList <span class="title">fllemanage::findALLfiles</span><span class="params">(<span class="keyword">const</span> QString &amp;dir_path)</span> </span>{</span><br><span class="line">QStringList get_files;</span><br><span class="line"><span class="function">QDir <span class="title">dir</span><span class="params">(dir_path)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!dir.<span class="built_in">exists</span>())</span><br><span class="line">{</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">"it is not true dir_path"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设置过滤参数，QDir::NoDotAndDotDot表示不会去遍历上层目录*/</span></span><br><span class="line"><span class="function">QDirIterator <span class="title">dir_iterator</span><span class="params">(dir_path, QDir::Files | QDir::Dirs | QDir::NoDotAndDotDot, QDirIterator::Subdirectories)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (dir_iterator.<span class="built_in">hasNext</span>())</span><br><span class="line">{</span><br><span class="line">dir_iterator.<span class="built_in">next</span>();</span><br><span class="line">QFileInfo file_info = dir_iterator.<span class="built_in">fileInfo</span>();</span><br><span class="line">QString files = file_info.<span class="built_in">absoluteFilePath</span>();</span><br><span class="line">get_files.<span class="built_in">append</span>(files);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> get_files;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>垃圾文件助手</title>
      <link href="/2021/12/02/la-ji-wen-jian-zhu-shou/"/>
      <url>/2021/12/02/la-ji-wen-jian-zhu-shou/</url>
      
        <content type="html"><![CDATA[<p>没看程序，白天搞的雕刻机（呕~~）</p><p>强行凑每日一篇，上传一个自己写的拉吉文件助手</p><p>可以实现目标文件下的文件名搜寻，并进行删除和复制整理到新文件夹（拉吉如我）</p><p>博客园竟然还有文件上传限制。。。github链接：<a href="https://github.com/qianxunslimg/QFileManage">https://github.com/qianxunslimg/QFileManage</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ui文件和Qt代码的关系(转载自大神Mike江)</title>
      <link href="/2021/12/02/ui-wen-jian-he-qt-dai-ma-de-guan-xi-zhuan-zai-zi-da-shen-mike-jiang/"/>
      <url>/2021/12/02/ui-wen-jian-he-qt-dai-ma-de-guan-xi-zhuan-zai-zi-da-shen-mike-jiang/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/tennysonsky/article/details/48030333">https://blog.csdn.net/tennysonsky/article/details/48030333</a></p><p>如果现有类与新建ui文件的话。除了修改上述地方外，还要修改UI编译产生的头文件，</p><p>修改方法参照Widget自动生成的ui_***.h</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vs程序 copy 到Qt的若干错误</title>
      <link href="/2021/12/02/vs-cheng-xu-copy-dao-qt-de-ruo-gan-cuo-wu/"/>
      <url>/2021/12/02/vs-cheng-xu-copy-dao-qt-de-ruo-gan-cuo-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="vs程序-copy-到Qt的若干错误"><a href="#vs程序-copy-到Qt的若干错误" class="headerlink" title="vs程序 copy 到Qt的若干错误"></a><a href="https://www.cnblogs.com/qianxunslimg/p/14347565.html">vs程序 copy 到Qt的若干错误</a></h1><p>就nm菜的离谱，，菜归菜，还是学到一些东西</p><p>\1. 首先是windows.h在qt下的使用  LIBS +=User32.LIB</p><p>\2. 离谱的 dependent error .h does not exist  </p><p>　　看网上说的是.pro文件存在缓存？解决方案：瞎jb乱摁</p><p>　　通过一下步骤乱搞： （1）ctrl A ctrlX .pro文件，编译，ctrl v编译</p><p>　　　　　　　　　　　（2）删除相关头文件及代码的使用，重新添加并编译（傻逼操作）</p><p>\3. 无法解析的外部符号 __imp_DeleteObject 等等， 解决方法</p><p>　　#pragma comment(lib, “Gdi32.lib”)</p><p>\4. Cmd命令无法进行直接调用  system(“start C:\Users\00\Desktop\发票\1.24-\思巴克72.ofd”);</p><p>   解决方法：使用QProcess运行cmd命令  <a href="https://blog.csdn.net/vample/article/details/78872587">https://blog.csdn.net/vample/article/details/78872587</a></p><p>　　啊呸，直接打开文件搞什么逼逼赖赖</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QString fileName = <span class="string">"C:\\Users\\00\\Desktop\\发票\\1.24-\\思巴克72.ofd"</span>;</span><br><span class="line"><span class="function">QFile <span class="title">file</span><span class="params">(fileName)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(file.<span class="built_in">exists</span>()){</span><br><span class="line">    QDesktopServices::<span class="built_in">openUrl</span>(QUrl::<span class="built_in">fromLocalFile</span>(fileName));</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>　　</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Qt Windows.h 后台按键监测</title>
      <link href="/2021/12/02/qt-windows-h-hou-tai-an-jian-jian-ce/"/>
      <url>/2021/12/02/qt-windows-h-hou-tai-an-jian-jian-ce/</url>
      
        <content type="html"><![CDATA[<p>首先 pro：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">LIBS +=User32.LIB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main.cpp：</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"hooktest.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ui_hooktest.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">LRESULT CALLBACK <span class="built_in">keyProc</span>(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam);</span><br><span class="line"></span><br><span class="line">HHOOK keyHook=<span class="literal">NULL</span>;</span><br><span class="line">WPARAM lastkey=<span class="number">0</span>;</span><br><span class="line">QString lastStr;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">starthook</span><span class="params">()</span></span>;</span><br><span class="line">HookTest::<span class="built_in">HookTest</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::HookTest)</span><br><span class="line">{</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">        keyHook = <span class="built_in">SetWindowsHookEx</span>(WH_KEYBOARD_LL, keyProc, <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        MSG msg = { <span class="number">0</span> };</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>)) {  <span class="comment">//WM_QUIT消息 退出</span></span><br><span class="line">        <span class="comment">//将虚拟键消息转换为字符消息,虚拟键值                `</span></span><br><span class="line">        <span class="comment">//VK_UP,VK_DOWN</span></span><br><span class="line">        <span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line">        <span class="comment">//将消息分发给窗口处理函数</span></span><br><span class="line">        <span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">        }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">HookTest::~<span class="built_in">HookTest</span>()</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">keyProc</span><span class="params">(<span class="keyword">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span>{</span><br><span class="line">    PKBDLLHOOKSTRUCT key = (PKBDLLHOOKSTRUCT)lParam;</span><br><span class="line">    <span class="built_in">qDebug</span>()&lt;&lt;key-&gt;vkCode&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CallNextHookEx</span>(keyHook, nCode, wParam, lParam);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows API关闭exe</title>
      <link href="/2021/12/02/windows-api-guan-bi-exe/"/>
      <url>/2021/12/02/windows-api-guan-bi-exe/</url>
      
        <content type="html"><![CDATA[<h1 id="windows-API关闭exe"><a href="#windows-API关闭exe" class="headerlink" title="windows API关闭exe"></a><a href="https://www.cnblogs.com/qianxunslimg/p/14351941.html">windows API关闭exe</a></h1><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Tlhelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winnt.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">terminateSuwellReader</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* str)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    HANDLE hSnapShot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS,<span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//现在我们获得了所有进程的信息。</span></span><br><span class="line">    <span class="comment">//将从hSnapShot中抽取数据到一个PROCESSENTRY32结构中</span></span><br><span class="line">    <span class="comment">//这个结构代表了一个进程，是ToolHelp32 API的一部分。</span></span><br><span class="line">    <span class="comment">//抽取数据靠Process32First()和Process32Next()这两个函数。</span></span><br><span class="line">    <span class="comment">//这里我们仅用Process32Next()，他的原形是：</span></span><br><span class="line">    <span class="comment">//BOOL WINAPI Process32Next(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);</span></span><br><span class="line">    <span class="comment">//我们程序的代码中加入：</span></span><br><span class="line">    PROCESSENTRY32* processInfo=<span class="keyword">new</span> PROCESSENTRY32;</span><br><span class="line">    <span class="comment">// 必须设置PROCESSENTRY32的dwSize成员的值 ;</span></span><br><span class="line">    processInfo-&gt;dwSize=<span class="built_in"><span class="keyword">sizeof</span></span>(PROCESSENTRY32);</span><br><span class="line">    <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//这里我们将快照句柄和PROCESSENTRY32结构传给Process32Next()。</span></span><br><span class="line">    <span class="comment">//执行之后，PROCESSENTRY32 结构将获得进程的信息。我们循环遍历，直到函数返回FALSE。</span></span><br><span class="line">    <span class="keyword">int</span> ID = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">Process32Next</span>(hSnapShot,processInfo)!=FALSE)</span><br><span class="line">    {</span><br><span class="line">        index++;</span><br><span class="line">        <span class="keyword">int</span> size=<span class="built_in">WideCharToMultiByte</span>(CP_ACP,<span class="number">0</span>,processInfo-&gt;szExeFile,<span class="number">-1</span>,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">char</span> *ch=<span class="keyword">new</span> <span class="keyword">char</span>[size+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">WideCharToMultiByte</span>(CP_ACP,<span class="number">0</span>,processInfo-&gt;szExeFile,<span class="number">-1</span>,ch,size,<span class="literal">NULL</span>,<span class="literal">NULL</span>))</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">//使用这段代码的时候只需要改变"cmd.exe".将其改成你要结束的进程名就可以了。</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strstr</span>(ch,str))</span><br><span class="line">            {</span><br><span class="line">                ID = processInfo-&gt;th32ProcessID;</span><br><span class="line">                HANDLE hProcess;</span><br><span class="line">                <span class="comment">// 现在我们用函数 TerminateProcess()终止进程，这里我们用PROCESS_ALL_ACCESS</span></span><br><span class="line">                hProcess=<span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS,TRUE,ID);</span><br><span class="line">                <span class="built_in">TerminateProcess</span>(hProcess,<span class="number">0</span>);</span><br><span class="line">                <span class="built_in">CloseHandle</span>(hProcess);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">CloseHandle</span>(hSnapShot);</span><br><span class="line">    <span class="keyword">delete</span> processInfo;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="built_in">terminateSuwellReader</span>(<span class="string">"SuwellReader.exe"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>　　</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vector clear() 方法 内存释放问题</title>
      <link href="/2021/12/02/vector-clear-fang-fa-nei-cun-shi-fang-wen-ti/"/>
      <url>/2021/12/02/vector-clear-fang-fa-nei-cun-shi-fang-wen-ti/</url>
      
        <content type="html"><![CDATA[<div class="com-markdown-collpase-main"><div class="rno-markdown J-articleContent"><pre class="prism-token token  language-javascript">自己查到的三处说法的对比：</pre><pre class="prism-token token  language-javascript">一、转自知道的答案：https<span class="token operator">:<span class="token operator">/<span class="token operator">/zhidao<span class="token punctuation">.baidu<span class="token punctuation">.com<span class="token operator">/question<span class="token operator">/<span class="token number">323662520.html<span class="token operator">?qq<span class="token operator">-pf<span class="token operator">-to<span class="token operator">=pcqq<span class="token punctuation">.c2c#</span></span></span></span></span></span></span></span></span></span></span></span></span></pre><pre class="prism-token token  language-javascript"><span class="token function">vector，clear<span class="token punctuation">(<span class="token punctuation">)<span class="token function">并不真正释放内存<span class="token punctuation">(这是为优化效率所做的事<span class="token punctuation">)<span class="token function">，clear实际所做的是为vector中所保存的所有对象调用析构函数<span class="token punctuation">(如果有的话<span class="token punctuation">)<span class="token punctuation">,然后初始化size这些东西，让觉得把所有的对象清除了。　　真正释放内存是在vector的析构函数里进行的，所以一旦超出vector的作用域（如函数返回<span class="token punctuation">)，首先它所保存的所有对象会被析构，然后会调用allocator中的deallocate函数回收对象本身的内存。　　所以，某些编译器clear后还能访问到对象数据（因为它根本没清除），在一些比较新的<span class="token constant">C<span class="token operator">++<span class="token function">编译器上<span class="token punctuation">(例如<span class="token constant">VS2008<span class="token punctuation">)<span class="token function">，当进行数组引用时<span class="token punctuation">(例如a<span class="token punctuation">[<span class="token number">2<span class="token punctuation">]这种用法<span class="token punctuation">)<span class="token punctuation">,<span class="token constant">STL库中会有一些check函数根据当前容器的size值来判断下标引用是否超出范围，如果超出，则会执行这样一句：　　<span class="token function">_THROW<span class="token punctuation">(out_of_range<span class="token punctuation">, <span class="token string">"invalid vector&lt;T&gt; subscript"<span class="token punctuation">)<span class="token punctuation">;　　即抛出一个越界异常，clear后没有捕获异常，程序在新编译器编译后就会崩溃掉。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><pre class="prism-token token  language-javascript"><span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">-分割线<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--<span class="token operator">--</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>二、转自博客：<a href="https://www.cnblogs.com/summerRQ/articles/2407974.html">https://www.cnblogs.com/summerRQ/articles/2407974.html</a></p><p>vector ： C++ STL中的顺序容器，封装数组</p><ol><li>vector容器的内存自增长&amp;nbsp;</li></ol><p>与其他容器不同，其内存空间只会增长，不会减小。先来看看”C++ Primer”中怎么说：为了支持快速的随机访问，vector容器的元素以连续方式存放，每一个元素都紧挨着前一个元素存储。设想一下，当vector添加一个元素时，为了满足连续存放这个特性，都需要重新分配空间、拷贝元素、撤销旧空间，这样性能难以接受。因此STL实现者在对vector进行内存分配时，其实际分配的容量要比当前所需的空间多一些。就是说，vector容器预留了一些额外的存储区，用于存放新添加的元素，这样就不必为每个新元素重新分配整个容器的内存空间。</p><p>关于vector的内存空间，有两个函数需要注意：size()成员指当前拥有的元素个数；capacity()成员指当前(容器必须分配新存储空间之前)可以存储的元素个数。reserve()成员可以用来控制容器的预留空间。vector另外一个特性在于它的内存空间会自增长，每当vector容器不得不分配新的存储空间时，会以加倍当前容量的分配策略实现重新分配。例如，当前capacity为50，当添加第51个元素时，预留空间不够用了，vector容器会重新分配大小为100的内存空间，作为新连续存储的位置。</p><p>2.&amp;nbsp;vector内存释放</p><p>由于vector的内存占用空间只增不减，比如你首先分配了10,000个字节，然后erase掉后面9,999个，留下一个有效元素，但是内存占用仍为10,000个。所有内存空间是在vector析构时候才能被系统回收。empty()用来检测容器是否为空的，clear()可以清空所有元素。但是即使clear()，vector所占用的内存空间依然如故，无法保证内存的回收。</p><p>如果需要空间动态缩小，可以考虑使用deque。如果非vector不可，可以用swap()来帮助你释放内存。具体方法如下：</p><pre class="prism-token token  language-javascript">vector<span class="token operator">&lt;int<span class="token operator">&gt; nums<span class="token punctuation">; nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">1<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">1<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">2<span class="token punctuation">)<span class="token punctuation">;nums<span class="token punctuation">.<span class="token function">push_back<span class="token punctuation">(<span class="token number">2<span class="token punctuation">)<span class="token punctuation">; vector<span class="token operator">&lt;int<span class="token operator">&gt;<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">(nums<span class="token punctuation">)<span class="token punctuation">; <span class="token comment">//或者nums.swap(vector&lt;int&gt; ())</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>或者如下所示，使用一对大括号，意思一样的：</p><pre class="prism-token token  language-javascript"><span class="token comment">//加一对大括号是可以让tmp退出{}的时候自动析构<span class="token punctuation">{     std<span class="token operator">:<span class="token operator">:vector<span class="token operator">&lt;int<span class="token operator">&gt; tmp <span class="token operator">=   nums<span class="token punctuation">;      nums<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">(tmp<span class="token punctuation">)<span class="token punctuation">; <span class="token punctuation">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>&amp;nbsp;swap()是交换函数，使vector离开其自身的作用域，从而强制释放vector所占的内存空间，总而言之，释放vector内存最简单的方法是vector&lt;int&gt;.swap(nums)。当时如果nums是一个类的成员，不能把vector&lt;int&gt;.swap(nums)写进类的析构函数中，否则会导致double free or corruption (fasttop)的错误，原因可能是重复释放内存。标准解决方法如下：</p><pre class="prism-token token  language-javascript">template <span class="token operator">&lt; <span class="token keyword">class <span class="token class-name">T <span class="token operator">&gt;<span class="token keyword">void <span class="token function">ClearVector<span class="token punctuation">( <span class="token parameter">vector<span class="token operator">&lt; <span class="token constant">T <span class="token operator">&gt;<span class="token operator">&amp; vt <span class="token punctuation">) <span class="token punctuation">{    vector<span class="token operator">&lt; <span class="token constant">T <span class="token operator">&gt; vtTemp<span class="token punctuation">;     veTemp<span class="token punctuation">.<span class="token function">swap<span class="token punctuation">( vt <span class="token punctuation">)<span class="token punctuation">;<span class="token punctuation">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><ol start="3"><li>利用vector释放指针</li></ol><p>如果vector中存放的是指针，那么当vector销毁时，这些指针指向的对象不会被销毁，那么内存就不会被释放。如下面这种情况，vector中的元素时由new操作动态申请出来的对象指针：</p><pre class="prism-token token  language-javascript">#include <span class="token operator">&lt;vector<span class="token operator">&gt; using namespace std<span class="token punctuation">; vector<span class="token operator">&lt;<span class="token keyword">void <span class="token operator">*<span class="token operator">&gt; v<span class="token punctuation">;</span></span></span></span></span></span></span></span></pre><p>每次new之后调用v.push_back()该指针，在程序退出或者根据需要，用以下代码进行内存的释放：&amp;nbsp;</p><pre class="prism-token token  language-javascript"><span class="token keyword">for <span class="token punctuation">(vector<span class="token operator">&lt;<span class="token keyword">void <span class="token operator">*<span class="token operator">&gt;<span class="token operator">:<span class="token operator">:iterator it <span class="token operator">= v<span class="token punctuation">.<span class="token function">begin<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">; it <span class="token operator">!= v<span class="token punctuation">.<span class="token function">end<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">; it <span class="token operator">++<span class="token punctuation">)     <span class="token keyword">if <span class="token punctuation">(<span class="token constant">NULL <span class="token operator">!= <span class="token operator">*it<span class="token punctuation">)     <span class="token punctuation">{        <span class="token keyword">delete <span class="token operator">*it<span class="token punctuation">;         <span class="token operator">*it <span class="token operator">= <span class="token constant">NULL<span class="token punctuation">;    <span class="token punctuation">}v<span class="token punctuation">.<span class="token function">clear<span class="token punctuation">(<span class="token punctuation">)<span class="token punctuation">;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><p>三、转自博客：<a href="https://blog.csdn.net/hk_john/article/details/72463318">https://blog.csdn.net/hk_john/article/details/72463318</a></p><p>最近经常用到vector容器，发现它的clear（）函数有点意思，经过验证之后进行一下总结。</p><p>clear（）函数的调用方式是，vector&lt;datatype&gt; temp（50）;//定义了50个datatype大小的空间。temp.clear();</p><p>作用：将会清空temp中的所有元素，包括temp开辟的空间（size），但是capacity会保留，即不可以以temp[1]这种形式赋初值，只能通过temp.push_back(value)的形式赋初值。</p><p>同样对于vector&lt;vector&lt;datatype&gt; &gt; temp1（50）这种类型的变量，使用temp1.clear()之后将会不能用temp1[1].push_back(value)进行赋初值，只能使用temp1.push_back(temp)；的形式。</p><p>下面的代码是可以运行的。</p><pre class="prism-token token  language-javascript"></pre><ol><li>#include &lt;iostream&gt;</li><li>#include&lt;vector&gt;<br>3.4.  using namespace std;<br>5.6.  int main(){<br>7.8.  vector&lt;vector&lt;int&gt;&gt; test(50);</li><li>vector&lt;int&gt; temp;</li><li>test[10].push_back(1);</li><li>cout&lt;&lt;test[10][0]&lt;&lt;endl;</li><li>test.clear();<br>13.14.15.  for(int i=0;i&lt;51;i++)</li><li>test.push_back(temp);<br>17.18.  system(“pause”);</li><li>return 0;</li><li>}</li></ol><p>但是这样是会越界错误的。</p><pre class="prism-token token  language-javascript"></pre><ol><li>#include &lt;iostream&gt;</li><li>#include&lt;vector&gt;<br>3.4.  using namespace std;<br>5.6.  int main(){<br>7.8.  vector&lt;vector&lt;int&gt;&gt; test(50);</li><li>vector&lt;int&gt; temp;</li><li>test[10].push_back(1);</li><li>cout&lt;&lt;test[10][0]&lt;&lt;endl;</li><li>test.clear();<br>13.14.  for(int i=0;i&lt;50;i++)</li><li>test[i].push_back(1);<br>16.17.  system(“pause”);</li><li>return 0;</li><li>}</li></ol><p>并且即使我们使用</p><pre class="prism-token token  language-javascript"></pre><ol><li>for(int i=0;i&lt;100;i++)</li><li>test[i].push_back(1);</li></ol><p>都是可以的，因为size已经被清除了。</p></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c++ 自然排序-window文件排序</title>
      <link href="/2021/12/02/c-zi-ran-pai-xu-window-wen-jian-pai-xu/"/>
      <url>/2021/12/02/c-zi-ran-pai-xu-window-wen-jian-pai-xu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自然排序</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compareNat</span><span class="params">(<span class="keyword">const</span> std::string &amp;a, <span class="keyword">const</span> std::string &amp;b)</span> </span>{</span><br><span class="line">  <span class="keyword">if</span> (a.<span class="built_in">empty</span>())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (b.<span class="built_in">empty</span>())</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; !std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (!std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (!std::<span class="built_in">isdigit</span>(a[<span class="number">0</span>]) &amp;&amp; !std::<span class="built_in">isdigit</span>(b[<span class="number">0</span>])) {</span><br><span class="line">    <span class="keyword">if</span> (std::<span class="built_in">toupper</span>(a[<span class="number">0</span>]) == std::<span class="built_in">toupper</span>(b[<span class="number">0</span>]))</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">compareNat</span>(a.<span class="built_in">substr</span>(<span class="number">1</span>), b.<span class="built_in">substr</span>(<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> (std::<span class="built_in">toupper</span>(a[<span class="number">0</span>]) &lt; std::<span class="built_in">toupper</span>(b[<span class="number">0</span>]));</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Both strings begin with digit --&gt; parse both numbers</span></span><br><span class="line">  <span class="function">std::istringstream <span class="title">issa</span><span class="params">(a)</span></span>;</span><br><span class="line">  <span class="function">std::istringstream <span class="title">issb</span><span class="params">(b)</span></span>;</span><br><span class="line">  <span class="keyword">int</span> ia, ib;</span><br><span class="line">  issa &gt;&gt; ia;</span><br><span class="line">  issb &gt;&gt; ib;</span><br><span class="line">  <span class="keyword">if</span> (ia != ib)</span><br><span class="line">    <span class="keyword">return</span> ia &lt; ib;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Numbers are the same --&gt; remove numbers and recurse</span></span><br><span class="line">  std::string anew, bnew;</span><br><span class="line">  std::<span class="built_in">getline</span>(issa, anew);</span><br><span class="line">  std::<span class="built_in">getline</span>(issb, bnew);</span><br><span class="line">  <span class="keyword">return</span> (<span class="built_in">compareNat</span>(anew, bnew));</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">const</span> pair&lt;string, string&gt; a, <span class="keyword">const</span> pair&lt;string, string&gt; b)</span> </span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">compareNat</span>(a.first, b.first);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最小堆make_heap(), pop_heap()和push_heap()</title>
      <link href="/2021/12/02/zui-xiao-dui-make-heap-pop-heap-he-push-heap/"/>
      <url>/2021/12/02/zui-xiao-dui-make-heap-pop-heap-he-push-heap/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20211114224004410-1010288954.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>make_heap<br>在容器范围内，就地建堆，保证最大值在所给范围的最前面，其他值的位置不确定</p><p>pop_heap<br>将堆顶(所给范围的最前面)元素移动到所给范围的最后，并且将新的最大值置于所给范围的最前面</p><p>push_heap<br>当已建堆的容器范围内有新的元素插入末尾后，应当调用push_heap将该元素插入堆中。</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> #include&lt;iostream&gt;<span style="color: #008080;"> 2</span> #include&lt;vector&gt;<span style="color: #008080;"> 3</span> #include&lt;ctime&gt;<span style="color: #008080;"> 4</span> #include&lt;deque&gt;<span style="color: #008080;"> 5</span> #include&lt;list&gt;<span style="color: #008080;"> 6</span> #include&lt;algorithm&gt;<span style="color: #008080;"> 7</span> #include&lt;queue&gt;<span style="color: #008080;"> 8</span> #include&lt;functional&gt;<span style="color: #008000;">//</span><span style="color: #008000;">greater使用</span><span style="color: #008080;"> 9</span>  <span style="color: #008080;">10</span> <span style="color: #0000ff;">using</span> <span style="color: #0000ff;">namespace</span><span style="color: #000000;"> std;</span><span style="color: #008080;">11</span>  <span style="color: #008080;">12</span> <span style="color: #0000ff;">void</span> print(vector&lt;<span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;"> a) {</span><span style="color: #008080;">13</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; a.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">14</span>         cout &lt;&lt; a[i] &lt;&lt; <span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">15</span> <span style="color: #000000;">    }</span><span style="color: #008080;">16</span>     cout &lt;&lt;<span style="color: #000000;"> endl;</span><span style="color: #008080;">17</span> <span style="color: #000000;">}</span><span style="color: #008080;">18</span>  <span style="color: #008080;">19</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> main() {</span><span style="color: #008080;">20</span>  <span style="color: #008080;">21</span>     <span style="color: #008000;">//</span><span style="color: #008000;">堆排序算法（heapsort）</span><span style="color: #008080;">22</span>     <span style="color: #008000;">//</span><span style="color: #008000;">make_heap();</span><span style="color: #008080;">23</span>     <span style="color: #008000;">//</span><span style="color: #008000;">push_heap()</span><span style="color: #008080;">24</span>     <span style="color: #008000;">//</span><span style="color: #008000;">sort_heap()</span><span style="color: #008080;">25</span>     <span style="color: #008000;">//</span><span style="color: #008000;">pop_heap()</span><span style="color: #008080;">26</span>     <span style="color: #008000;">//</span><span style="color: #008000;">堆就是一种特殊的二叉树，最关心的就是根</span><span style="color: #008080;">27</span>     <span style="color: #008000;">//</span><span style="color: #008000;">大根堆，小根堆</span><span style="color: #008080;">28</span>  <span style="color: #008080;">29</span>     vector&lt;<span style="color: #0000ff;">int</span>&gt; ivec{<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">8</span>,<span style="color: #800080;">9</span>,<span style="color: #800080;">1</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span><span style="color: #000000;">};</span><span style="color: #008080;">30</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">31</span>     <span style="color: #008000;">//</span><span style="color: #008000;">向量里所有的数据变成一个堆</span><span style="color: #008080;">32</span>  <span style="color: #008080;">33</span> <span style="color: #000000;">    make_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">34</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">35</span>  <span style="color: #008080;">36</span>     pop_heap(ivec.begin(), ivec.end());<span style="color: #008000;">//</span><span style="color: #008000;">最大的数据取走，但是并没s有删除</span><span style="color: #008080;">37</span>     <span style="color: #008000;">//</span><span style="color: #008000;">把最大的数据放在结尾，剩下的元素排成一个堆</span><span style="color: #008080;">38</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">39</span> <span style="color: #000000;">    ivec.pop_back();</span><span style="color: #008080;">40</span>     <span style="color: #008000;">//</span><span style="color: #008000;">push_heap 使用首先要先把数据加在向量里</span><span style="color: #008080;">41</span>  <span style="color: #008080;">42</span>     ivec.push_back(<span style="color: #800080;">17</span><span style="color: #000000;">);</span><span style="color: #008080;">43</span> <span style="color: #000000;">    make_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">44</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">45</span>  <span style="color: #008080;">46</span>     <span style="color: #008000;">//</span><span style="color: #008000;">sort_heap 把堆变成不是堆,普通的排序</span><span style="color: #008080;">47</span> <span style="color: #000000;">    sort_heap(ivec.begin(), ivec.end());</span><span style="color: #008080;">48</span> <span style="color: #000000;">    print(ivec);</span><span style="color: #008080;">49</span>  <span style="color: #008080;">50</span>     system(<span style="color: #800000;">"</span><span style="color: #800000;">pause</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">51</span> }</pre></div><p><img src="https://img2020.cnblogs.com/blog/2092994/202111/2092994-20211114224224870-302527741.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合数 防溢出</title>
      <link href="/2021/12/02/zu-he-shu-fang-yi-chu/"/>
      <url>/2021/12/02/zu-he-shu-fang-yi-chu/</url>
      
        <content type="html"><![CDATA[<pre><span style="color: #008080;">1</span>  <span style="color: #008080;">2</span> <span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> C(<span style="color: #0000ff;">int</span> N, <span style="color: #0000ff;">int</span><span style="color: #000000;"> M) {</span><span style="color: #008080;">3</span>     <span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> sum = <span style="color: #800080;">1</span><span style="color: #000000;">;</span><span style="color: #008080;">4</span>     <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i=<span style="color: #800080;">1</span>;i&lt;=M; i++<span style="color: #000000;">) {</span><span style="color: #008080;">5</span>         sum=sum*(N-M+i)/<span style="color: #000000;">i;</span><span style="color: #008080;">6</span> <span style="color: #000000;">    }</span><span style="color: #008080;">7</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;"> sum;</span><span style="color: #008080;">8</span> }</pre>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vector&lt;pair&gt;或者有序map</title>
      <link href="/2021/12/02/vector-pair-huo-zhe-you-xu-map/"/>
      <url>/2021/12/02/vector-pair-huo-zhe-you-xu-map/</url>
      
        <content type="html"><![CDATA[<p>功能相同</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>   <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">bool</span> sortPair(pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt; a, pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;"> b) {</span><span style="color: #008080;"> 2</span>     <span style="color: #0000ff;">return</span> a.second &gt;<span style="color: #000000;"> b.second;</span><span style="color: #008080;"> 3</span> <span style="color: #000000;">  }</span><span style="color: #008080;"> 4</span>   vector&lt;<span style="color: #0000ff;">string</span>&gt; findRelativeRanks(vector&lt;<span style="color: #0000ff;">int</span>&gt; &amp;<span style="color: #000000;">score) {</span><span style="color: #008080;"> 5</span>     vector&lt;<span style="color: #0000ff;">string</span>&gt;<span style="color: #000000;"> res(score.size());</span><span style="color: #008080;"> 6</span> <span style="color: #008080;"> 7</span>     vector&lt;pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;&gt;<span style="color: #000000;"> pairr;</span><span style="color: #008080;"> 8</span> <span style="color: #008080;"> 9</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; score.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">10</span>       pairr.push_back(pair&lt;<span style="color: #0000ff;">int</span>, <span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;">(i, score[i]));</span><span style="color: #008080;">11</span> <span style="color: #000000;">    }</span><span style="color: #008080;">12</span> <span style="color: #008080;">13</span> <span style="color: #000000;">    sort(pairr.begin(), pairr.end(), sortPair);</span><span style="color: #008080;">14</span>     <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; pairr.size(); i++<span style="color: #000000;">) {</span><span style="color: #008080;">15</span>       <span style="color: #0000ff;">switch</span><span style="color: #000000;"> (i) {</span><span style="color: #008080;">16</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">0</span><span style="color: #000000;">:</span><span style="color: #008080;">17</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Gold Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">18</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">19</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">1</span><span style="color: #000000;">:</span><span style="color: #008080;">20</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Silver Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">21</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">22</span>       <span style="color: #0000ff;">case</span> <span style="color: #800080;">2</span><span style="color: #000000;">:</span><span style="color: #008080;">23</span>         res[pairr[i].first] = <span style="color: #800000;">"</span><span style="color: #800000;">Bronze Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">24</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">25</span>       <span style="color: #0000ff;">default</span><span style="color: #000000;">:</span><span style="color: #008080;">26</span>         res[pairr[i].first] = to_string(i + <span style="color: #800080;">1</span><span style="color: #000000;">);</span><span style="color: #008080;">27</span>         <span style="color: #0000ff;">break</span><span style="color: #000000;">;</span><span style="color: #008080;">28</span> <span style="color: #000000;">      }</span><span style="color: #008080;">29</span> <span style="color: #000000;">    }</span><span style="color: #008080;">30</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;"> res;</span><span style="color: #008080;">31</span>   }</pre></div><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>     vector&lt;<span style="color: #0000ff;">string</span>&gt; findRelativeRanks(vector&lt;<span style="color: #0000ff;">int</span>&gt;&amp;<span style="color: #000000;"> score) {</span><span style="color: #008080;"> 2</span>         <span style="color: #0000ff;">int</span> n=<span style="color: #000000;">score.size();</span><span style="color: #008080;"> 3</span>         map&lt;<span style="color: #0000ff;">int</span>,<span style="color: #0000ff;">int</span>,greater&lt;<span style="color: #0000ff;">int</span>&gt;&gt;<span style="color: #000000;">num2index;</span><span style="color: #008080;"> 4</span>         <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i=<span style="color: #800080;">0</span>;i&lt;n;i++)num2index[score[i]]=<span style="color: #000000;">i;</span><span style="color: #008080;"> 5</span>         vector&lt;<span style="color: #0000ff;">string</span>&gt;<span style="color: #000000;">ans(n);</span><span style="color: #008080;"> 6</span>         <span style="color: #0000ff;">int</span> i=<span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;"> 7</span>         <span style="color: #0000ff;">for</span><span style="color: #000000;">(auto mPair:num2index){</span><span style="color: #008080;"> 8</span>             <span style="color: #0000ff;">int</span> index=<span style="color: #000000;">mPair.second;</span><span style="color: #008080;"> 9</span>             <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">0</span><span style="color: #000000;">){</span><span style="color: #008080;">10</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Gold Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">11</span>             }<span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">1</span><span style="color: #000000;">){</span><span style="color: #008080;">12</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Silver Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">13</span>             }<span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span>(i==<span style="color: #800080;">2</span><span style="color: #000000;">){</span><span style="color: #008080;">14</span>                 ans[index]=<span style="color: #800000;">"</span><span style="color: #800000;">Bronze Medal</span><span style="color: #800000;">"</span><span style="color: #000000;">;</span><span style="color: #008080;">15</span>             }<span style="color: #0000ff;">else</span> ans[index]+=to_string(i+<span style="color: #800080;">1</span><span style="color: #000000;">);</span><span style="color: #008080;">16</span>             i++<span style="color: #000000;">;</span><span style="color: #008080;">17</span> <span style="color: #000000;">        }</span><span style="color: #008080;">18</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> ans;</span><span style="color: #008080;">19</span>     }</pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1920. 基于排列构建数组</title>
      <link href="/2021/12/02/1920-ji-yu-pai-lie-gou-jian-shu-zu/"/>
      <url>/2021/12/02/1920-ji-yu-pai-lie-gou-jian-shu-zu/</url>
      
        <content type="html"><![CDATA[<p>原地修改</p><p>class Solution {<br>public:<br>    vector&lt;int&gt; buildArray(vector&lt;int&gt;&amp; nums) {<br>        int n = nums.size();<br>        // 第一次遍历编码最终值<br>        for (int i = 0; i &lt; n; ++i){<br>            nums[i] += 1000 * (nums[nums[i]] % 1000);<br>        }<br>        // 第二次遍历修改为最终值<br>        for (int i = 0; i &lt; n; ++i){<br>            nums[i] /= 1000;<br>        }<br>        return nums;<br>    }<br>};</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>priority_queue和tuple</title>
      <link href="/2021/12/02/priority-queue-tuple-he-lamda/"/>
      <url>/2021/12/02/priority-queue-tuple-he-lamda/</url>
      
        <content type="html"><![CDATA[<p>&amp;nbsp;</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20211115202419249-1916870940.png"></p><p>&amp;nbsp;</p><h1 id="1-顶堆"><a href="#1-顶堆" class="headerlink" title="1.顶堆"></a>1.顶堆</h1><p>&amp;nbsp;&amp;nbsp;C++11中，针对顺序容器(如vector、deque、list)，新标准引入了三个新成员：emplace_front、emplace和emplace_back，这些操作构造而不是拷贝元素。这些操作分别对应push_front、insert和push_back，允许我们将元素放置在容器头部、一个指定位置之前或容器尾部</p><p>priority_queue 默认从大到小排序， 从小到大：priority_queue&lt;<span class="hljs-type">int, vector&lt;<span class="hljs-type">int&gt;, greater&lt;<span class="hljs-type">int&gt; &gt; p;</span></span></span></p><p>pair举例<br>//默认是使用大根堆<br>priority_queue&lt;pair&lt;int,int&gt;&gt; pq0;<br>//小根堆，按照pair的first排，再按照second排序<br>priority_queue&lt;pair&lt;int,int&gt;,vector&lt;pair&lt;int,int&gt;&gt;,greater&lt;pair&lt;int,int&gt;&gt;&gt; pq1;<br>//大根堆<br>priority_queue&lt;pair&lt;int,int&gt;,vector&lt;pair&lt;int,int&gt;&gt;,less&lt;pair&lt;int,int&gt;&gt;&gt; pq2;</p><p>tuple举例<br>//默认是使用大根堆<br>priority_queue&lt;tuple&lt;int,int,int&gt;&gt; tp0;<br>//小根堆，按照tuple的0元素排，再按照1元素排，最后按2元素排<br>priority_queue&lt;tuple&lt;int,int,int&gt;,vector&lt;tuple&lt;int,int,int&gt;&gt;,greater&lt;tuple&lt;int,int,int&gt;&gt;&gt; tp1;<br>//大根堆<br>priority_queue&lt;tuple&lt;int,int,int&gt;,vector&lt;tuple&lt;int,int,int&gt;&gt;,less&lt;tuple&lt;int,int,int&gt;&gt;&gt; tp2;</p><h1 id="2-元组tuple"><a href="#2-元组tuple" class="headerlink" title="2.元组tuple"></a><span class="hljs-type"><span class="hljs-type"><span class="hljs-type">2.元组tuple</span></span></span></h1><p>tuple是一个固定大小的不同类型值的集合，是泛化的std::pair。我们也可以把他当做一个通用的结构体来用，不需要创建结构体又获取结构体的特征，在某些情况下可以取代结构体使程序更简洁，直观。std::tuple理论上可以有无数个任意类型的成员变量，而std::pair只能是2个成员，因此在需要保存3个及以上的数据时就需要使用tuple元组了。&amp;nbsp;</p><p>tuple获取指定位置的值:</p><p> auto d = get&lt;0&gt;(tmp);<br>      auto x = get&lt;1&gt;(tmp);<br>      auto y = get&lt;2&gt;(tmp);</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT打包程序</title>
      <link href="/2021/12/02/qt-da-bao-cheng-xu/"/>
      <url>/2021/12/02/qt-da-bao-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h2 id="1-发布release版本的QT程序"><a href="#1-发布release版本的QT程序" class="headerlink" title="1.发布release版本的QT程序"></a>1.发布release版本的QT程序</h2><p>　　在build release文件夹内找到exe文件，将其单独放在一个自建的空文件夹内</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165117303-604984762.png"></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165455009-910788885.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><h2 id="amp-nbsp-2-cd到含exe的空文件夹"><a href="#amp-nbsp-2-cd到含exe的空文件夹" class="headerlink" title="&amp;nbsp;2.cd到含exe的空文件夹"></a>&amp;nbsp;2.cd到含exe的空文件夹</h2><p>　　在QT命令行cd到含exe的空文件夹，cd /d E:\QDIR</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927165604874-1233279110.png"><img src="https://img2020.cnblogs.com/blog/2092994/202009/2092994-20200927165951305-446477392.png"></p><h2 id="3-使用windeployqt-exe进行打包"><a href="#3-使用windeployqt-exe进行打包" class="headerlink" title="3.使用windeployqt.exe进行打包"></a>3.使用windeployqt.exe进行打包</h2><p>首先找到windeployqt.exe的路径&amp;nbsp;</p><p>&amp;nbsp;<img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170127591-1210427907.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>输入命令D:\QT\5.14.2\msvc2017_64\bin\windeployqt&amp;nbsp;QDIR.exe即完成了打包</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170421891-1644738339.png"><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927170550570-2063963822.png"></p><p>&amp;nbsp;</p><h2 id="amp-nbsp-附：打包前修改exe图标"><a href="#amp-nbsp-附：打包前修改exe图标" class="headerlink" title="&amp;nbsp;附：打包前修改exe图标"></a>&amp;nbsp;附：打包前修改exe图标</h2><h2 id="改变exe的图标"><a href="#改变exe的图标" class="headerlink" title="改变exe的图标"></a>改变exe的图标</h2><p>1、下载一个.ico格式的图标（如：bucket and shovel.ico），将bucket and shovel.ico复制到工程目录下。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927172502714-1388114573.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;</p><p>2、工程目录下新建一个空白txt文档，文档内添加如下内容<br><code>IDI_ICON1 ICON DISCARDABLE "bucket and shovel.ico"</code><br>3、将文档后缀修改为.rc（如：bucke.rc, !!注意!!rc文件名不要含空格）&amp;nbsp;<br>4、在工程的pro文件添加如下内容<br><code>RC_FILE = bucket.rc</code><br>5、重新编译程序，即可发现生成的程序图标变成了bucket.ico</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200927172701527-227417489.png"></p><p>&amp;nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QString截断（string截断）</title>
      <link href="/2021/12/02/qstring-jie-duan-string-jie-duan/"/>
      <url>/2021/12/02/qstring-jie-duan-string-jie-duan/</url>
      
        <content type="html"><![CDATA[<h2 id="最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法："><a href="#最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法：" class="headerlink" title="最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法："></a>最近写一个Qt小程序用到了QString的截断，在绝对路径中取文件的名字，再拼接到新路径中，用到了两个方法：</h2><h3 id="方法一：由于对QString没有深入了解，所以采用的QString–-gt-string–-gt-QString，代码如下："><a href="#方法一：由于对QString没有深入了解，所以采用的QString–-gt-string–-gt-QString，代码如下：" class="headerlink" title="方法一：由于对QString没有深入了解，所以采用的QString–>string–>QString，代码如下："></a>方法一：由于对QString没有深入了解，所以采用的QString–&gt;string–&gt;QString，代码如下：</h3><div class="cnblogs_code"><pre><span style="font-size: 18px;"><span style="color: #008080;"> 1</span>         std::<span style="color: #0000ff;">string</span> pur = purposelist[i].toStdString();<span style="color: #008000;">//</span><span style="color: #008000;">都转换为string</span><span style="color: #008080;"> 2</span>        <span style="color: #008000;">//</span><span style="color: #008000;"> qDebug()&lt;&lt;pur&lt;&lt;endl;</span><span style="color: #008080;"> 3</span>         std::<span style="color: #0000ff;">string</span> sdir =<span style="color: #000000;"> dstpath.toStdString();</span><span style="color: #008080;"> 4</span> <span style="color: #008080;"> 5</span>         <span style="color: #0000ff;">int</span> pos = pur.find_last_of(<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>); <span style="color: #008000;">//</span><span style="color: #008000;">找到最后/</span><span style="color: #008080;"> 6</span>         std::<span style="color: #0000ff;">string</span> s(pur.substr(pos + <span style="color: #800080;">1</span><span style="color: #000000;">));</span><span style="color: #008080;"> 7</span>         sdir.append(<span style="color: #800000;">"</span><span style="color: #800000;">/</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;"> 8</span> <span style="color: #008080;"> 9</span> <span style="color: #000000;">        sdir.append(s);</span><span style="color: #008080;">10</span>         QString qsdir =<span style="color: #000000;"> QString(QString::fromLocal8Bit(sdir.c_str()));</span><span style="color: #008080;">11</span>         qDebug() &lt;&lt; qsdir &lt;&lt; endl;</span></pre></div><h3 id="用这种方法出现的问题是，string中的中文字符转到QString会乱码…"><a href="#用这种方法出现的问题是，string中的中文字符转到QString会乱码…" class="headerlink" title="用这种方法出现的问题是，string中的中文字符转到QString会乱码…"></a>用这种方法出现的问题是，string中的中文字符转到QString会乱码…</h3><p>&amp;nbsp;</p><h3 id="方法二：QString直接进行截断拼接（吐了，我好蠢）"><a href="#方法二：QString直接进行截断拼接（吐了，我好蠢）" class="headerlink" title="方法二：QString直接进行截断拼接（吐了，我好蠢）"></a>方法二：QString直接进行截断拼接（吐了，我好蠢）</h3><div class="cnblogs_code"><pre><span style="font-size: 18px;"><span style="color: #008080;">1</span>     <span style="color: #008000;">//</span><span style="color: #008000;">QString截断学习</span><span style="color: #008080;">2</span>     QString src(<span style="color: #800000;">"</span><span style="color: #800000;">E:/qq接收文件/MobileFile/thumb/碎裂收据.jpg</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">3</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">original path: </span><span style="color: #800000;">"</span>&lt;&lt;src&lt;&lt;<span style="color: #000000;">endl;</span><span style="color: #008080;">4</span>     QString dir(<span style="color: #800000;">"</span><span style="color: #800000;">E:/目标文件夹</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">5</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">the last string '/' pos is </span><span style="color: #800000;">"</span>&lt;&lt;src.lastIndexOf(<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>)&lt;&lt;<span style="color: #000000;">endl;</span><span style="color: #008080;">6</span>     QString filename = src.right(src.size() - (src.lastIndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">/</span><span style="color: #800000;">"</span>)+<span style="color: #800080;">1</span><span style="color: #000000;">));</span><span style="color: #008080;">7</span>     qDebug()&lt;&lt;<span style="color: #800000;">"</span><span style="color: #800000;">the true filename is </span><span style="color: #800000;">"</span>&lt;&lt;filename&lt;&lt;endl;</span></pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简单的滑动窗口 643. 子数组最大平均数 I</title>
      <link href="/2021/12/02/jian-dan-de-hua-dong-chuang-kou-643-zi-shu-zu-zui-da-ping-jun-shu-i/"/>
      <url>/2021/12/02/jian-dan-de-hua-dong-chuang-kou-643-zi-shu-zu-zui-da-ping-jun-shu-i/</url>
      
        <content type="html"><![CDATA[<p>给你一个由 n 个元素组成的整数数组 nums 和一个整数 k 。</p><p>请你找出平均数最大且 长度为 k 的连续子数组，并输出该最大平均数。</p><p>任何误差小于 10-5 的答案都将被视为正确答案。</p><p>&amp;nbsp;</p><p>示例 1：</p><p>输入：nums = [1,12,-5,-6,50,3], k = 4<br>输出：12.75<br>解释：最大平均数 (12-5-6+50)/4 = 51/4 = 12.75<br>示例 2：</p><p>输入：nums = [5], k = 1<br>输出：5.00000</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Solution {</span><span style="color: #008080;"> 2</span> <span style="color: #0000ff;">public</span><span style="color: #000000;">:</span><span style="color: #008080;"> 3</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> double findMaxAverage(vector&lt;int&gt;&amp; nums, int k) {</span><span style="color: #008080;"> 4</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double res = -10000.0;</span><span style="color: #008080;"> 5</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double sum = 0;</span><span style="color: #008080;"> 6</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     double ave;</span><span style="color: #008080;"> 7</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     for(int i = 0; i&lt;=nums.size()-k; i++){</span><span style="color: #008080;"> 8</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         if( i == 0){</span><span style="color: #008080;"> 9</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             for(int j = 0; j&lt;k; j++){</span><span style="color: #008080;">10</span>     <span style="color: #008000;">//</span><span style="color: #008000;">                 sum+=nums[i+j];</span><span style="color: #008080;">11</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             }</span><span style="color: #008080;">12</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         }else{</span><span style="color: #008080;">13</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             sum-=nums[i-1];</span><span style="color: #008080;">14</span>     <span style="color: #008000;">//</span><span style="color: #008000;">             sum+=nums[i+k-1];</span><span style="color: #008080;">15</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         }</span><span style="color: #008080;">16</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         ave = sum/k;</span><span style="color: #008080;">17</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         cout &lt;&lt;ave&lt;&lt;endl;</span><span style="color: #008080;">18</span>     <span style="color: #008000;">//</span><span style="color: #008000;">         res = res&gt;ave?res:ave;</span><span style="color: #008080;">19</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     }</span><span style="color: #008080;">20</span>     <span style="color: #008000;">//</span><span style="color: #008000;">     return res;</span><span style="color: #008080;">21</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> }</span><span style="color: #008080;">22</span>     <span style="color: #0000ff;">double</span> findMaxAverage(vector&lt;<span style="color: #0000ff;">int</span>&gt;&amp; nums, <span style="color: #0000ff;">int</span><span style="color: #000000;"> k) {</span><span style="color: #008080;">23</span>         <span style="color: #0000ff;">int</span> sum = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;">24</span>         <span style="color: #0000ff;">int</span> n =<span style="color: #000000;"> nums.size();</span><span style="color: #008080;">25</span>         <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; k; i++<span style="color: #000000;">) {</span><span style="color: #008080;">26</span>             sum +=<span style="color: #000000;"> nums[i];</span><span style="color: #008080;">27</span> <span style="color: #000000;">        }</span><span style="color: #008080;">28</span>         <span style="color: #0000ff;">int</span> maxSum =<span style="color: #000000;"> sum;</span><span style="color: #008080;">29</span>         <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = k; i &lt; n; i++<span style="color: #000000;">) {</span><span style="color: #008080;">30</span>             sum = sum - nums[i - k] +<span style="color: #000000;"> nums[i];</span><span style="color: #008080;">31</span>             maxSum =<span style="color: #000000;"> max(maxSum, sum);</span><span style="color: #008080;">32</span> <span style="color: #000000;">        }</span><span style="color: #008080;">33</span>         <span style="color: #0000ff;">return</span> static_cast&lt;<span style="color: #0000ff;">double</span>&gt;(maxSum) /<span style="color: #000000;"> k;</span><span style="color: #008080;">34</span> <span style="color: #000000;">    }</span><span style="color: #008080;">35</span> <span style="color: #008080;">36</span> };</pre></div><p>&amp;nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片平滑器</title>
      <link href="/2021/12/02/tu-pian-ping-hua-qi/"/>
      <url>/2021/12/02/tu-pian-ping-hua-qi/</url>
      
        <content type="html"><![CDATA[<p>包含整数的二维矩阵 M 表示一个图片的灰度。你需要设计一个平滑器来让每一个单元的灰度成为平均灰度&amp;nbsp;(向下舍入) ，平均灰度的计算是周围的8个单元和它本身的值求平均，如果周围的单元格不足八个，则尽可能多的利用它们。</p><p>示例 1:</p><p>输入:<br>[[1,1,1],<br> [1,0,1],<br> [1,1,1]]<br>输出:<br>[[0, 0, 0],<br> [0, 0, 0],<br> [0, 0, 0]]<br>解释:<br>对于点 (0,0), (0,2), (2,0), (2,2): 平均(3/4) = 平均(0.75) = 0<br>对于点 (0,1), (1,0), (1,2), (2,1): 平均(5/6) = 平均(0.83333333) = 0<br>对于点 (1,1): 平均(8/9) = 平均(0.88888889) = 0</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>     vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt; imageSmoother(vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt;&amp;<span style="color: #000000;"> img) {</span><span style="color: #008080;"> 2</span>         <span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> n =<span style="color: #000000;"> img.size();</span><span style="color: #008080;"> 3</span>         <span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> m = img[<span style="color: #800080;">0</span><span style="color: #000000;">].size();</span><span style="color: #008080;"> 4</span>         vector&lt;vector&lt;<span style="color: #0000ff;">int</span>&gt;&gt; ans(n, vector&lt;<span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;">(m));</span><span style="color: #008080;"> 5</span>         <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; n; ++i){  <span style="color: #008000;">//</span><span style="color: #008000;">遍历每一个点</span><span style="color: #008080;"> 6</span>             <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> j = <span style="color: #800080;">0</span>; j &lt; m; ++<span style="color: #000000;">j){</span><span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">int</span> sum = <span style="color: #800080;">0</span>, num = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> k = -<span style="color: #800080;">1</span>; k &lt;= <span style="color: #800080;">1</span>; ++k){  <span style="color: #008000;">//</span><span style="color: #008000;">遍历周围的格子</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">for</span>(<span style="color: #0000ff;">int</span> l = -<span style="color: #800080;">1</span>; l &lt;= <span style="color: #800080;">1</span>; ++l){   <span style="color: #008000;">//</span><span style="color: #008000;">判断是否出界</span><span style="color: #008080;">10</span>                         <span style="color: #0000ff;">if</span>(i + k &gt;= <span style="color: #800080;">0</span> &amp;&amp; i + k &lt; n &amp;&amp; j + l &gt;= <span style="color: #800080;">0</span> &amp;&amp; j + l &lt;<span style="color: #000000;"> m){</span><span style="color: #008080;">11</span>                             ++num; <span style="color: #008000;">//</span><span style="color: #008000;">没有出界，格子个数+1</span><span style="color: #008080;">12</span>                             sum += img[i + k][j + l]; <span style="color: #008000;">//</span><span style="color: #008000;">计算总和</span><span style="color: #008080;">13</span> <span style="color: #000000;">                        }</span><span style="color: #008080;">14</span> <span style="color: #000000;">                    }</span><span style="color: #008080;">15</span> <span style="color: #000000;">                }</span><span style="color: #008080;">16</span>                 ans[i][j] = sum / num; <span style="color: #008000;">//</span><span style="color: #008000;">计算平均值</span><span style="color: #008080;">17</span> <span style="color: #000000;">            }</span><span style="color: #008080;">18</span> <span style="color: #000000;">        }</span><span style="color: #008080;">19</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> ans;</span><span style="color: #008080;">20</span>     }</pre></div>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP/IP讲解</title>
      <link href="/2021/12/02/tcp-ip-jiang-jie/"/>
      <url>/2021/12/02/tcp-ip-jiang-jie/</url>
      
        <content type="html"><![CDATA[<p>从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/242fbebe730ea864c312370614791f45.jpeg-wh_651x-s_431133179.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>一图看完本文</p><h2 id="一、-计算机网络体系结构分层"><a href="#一、-计算机网络体系结构分层" class="headerlink" title="一、 计算机网络体系结构分层"></a>一、 计算机网络体系结构分层</h2><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/aaf923228df01d11a7b805d4db5d1d33.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>计算机网络体系结构分层</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f58f6ad856c6802b636d20d8f5ba2c3e.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>计算机网络体系结构分层</p><p><strong>不难看出，TCP/IP 与 OSI 在分层模块上稍有区别。OSI 参考模型注重&amp;ldquo;通信协议必要的功能是什么&amp;rdquo;，而 TCP/IP 则更强调&amp;ldquo;在计算机上实现协议应该开发哪种程序&amp;rdquo;。</strong></p><h2 id="二、-TCP-x2F-IP-基础"><a href="#二、-TCP-x2F-IP-基础" class="headerlink" title="二、 TCP/IP 基础"></a>二、 TCP/IP 基础</h2><p><strong>1. TCP/IP 的具体含义</strong></p><p>从字面意义上讲，有人可能会认为 TCP/IP 是指 TCP 和 IP 两种协议。实际生活当中有时也确实就是指这两种协议。然而在很多情况下，它只是利用 IP 进行通信时所必须用到的协议群的统称。具体来说，IP 或 ICMP、TCP 或 UDP、TELNET 或 FTP、以及 HTTP 等都属于 TCP/IP 协议。他们与 TCP 或 IP 的关系紧密，是互联网必不可少的组成部分。TCP/IP 一词泛指这些协议，因此，有时也称 TCP/IP 为网际协议群。</p><p>互联网进行通信时，需要相应的网络协议，TCP/IP 原本就是为使用互联网而开发制定的协议族。因此，互联网的协议就是 TCP/IP，TCP/IP 就是互联网的协议。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/06645dfb1e9914c032358fbc8ee2641c.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>网际协议群</p><p><strong>2. 数据包</strong></p><p><strong>包、帧、数据包、段、消息</strong></p><p>以上五个术语都用来表述数据的单位，大致区分如下：</p><ul><li>包可以说是全能性术语；</li><li>帧用于表示数据链路层中包的单位；</li><li>数据包是 IP 和 UDP 等网络层以上的分层中包的单位；</li><li>段则表示 TCP 数据流中的信息；</li><li>消息是指应用协议中数据的单位。</li></ul><p>每个分层中，都会对所发送的数据附加一个首部，在这个首部中包含了该层必要的信息，如发送的目标地址以及协议相关信息。通常，为协议提供的信息为包首部，所要发送的内容为数据。在下一层的角度看，从上一层收到的包全部都被认为是本层的数据。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/23180acf2b82efe5b1821de16e9d55e5.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>数据包首部</p><p>网络中传输的数据包由两部分组成：一部分是协议所要用到的首部，另一部分是上一层传过来的数据。首部的结构由协议的具体规范详细定义。在数据包的首部，明确标明了协议应该如何读取数据。反过来说，看到首部，也就能够了解该协议必要的信息以及所要处理的数据。<strong>包首部就像协议的脸。</strong></p><p><strong>3. 数据处理流程</strong></p><p>下图以用户 a 向用户 b 发送邮件为例子：</p><p>数据处理流程</p><p>① 应用程序处理</p><p>首先应用程序会进行编码处理，这些编码相当于 OSI 的表示层功能；</p><p>编码转化后，邮件不一定马上被发送出去，这种何时建立通信连接何时发送数据的管理功能，相当于 OSI 的会话层功能。</p><p>② TCP 模块的处理</p><p>TCP 根据应用的指示，负责建立连接、发送数据以及断开连接。TCP 提供将应用层发来的数据顺利发送至对端的可靠传输。为了实现这一功能，需要在应用层数据的前端附加一个 TCP 首部。</p><p>③ IP 模块的处理</p><p>IP 将 TCP 传过来的 TCP 首部和 TCP 数据合起来当做自己的数据，并在 TCP 首部的前端加上自己的 IP 首部。IP 包生成后，参考路由控制表决定接受此 IP 包的路由或主机。</p><p>④ 网络接口（以太网驱动）的处理</p><p>从 IP 传过来的 IP 包对于以太网来说就是数据。给这些数据附加上以太网首部并进行发送处理，生成的以太网数据包将通过物理层传输给接收端。</p><p>⑤ 网络接口（以太网驱动）的处理</p><p>主机收到以太网包后，首先从以太网包首部找到 MAC 地址判断是否为发送给自己的包，若不是则丢弃数据。</p><p>如果是发送给自己的包，则从以太网包首部中的类型确定数据类型，再传给相应的模块，如 IP、ARP 等。这里的例子则是 IP 。</p><p>⑥ IP 模块的处理</p><p>IP 模块接收到 数据后也做类似的处理。从包首部中判断此 IP 地址是否与自己的 IP 地址匹配，如果匹配则根据首部的协议类型将数据发送给对应的模块，如 TCP、UDP。这里的例子则是 TCP。</p><p>另外吗，对于有路由器的情况，接收端地址往往不是自己的地址，此时，需要借助路由控制表，在调查应该送往的主机或路由器之后再进行转发数据。</p><p>⑦ TCP 模块的处理</p><p>在 TCP 模块中，首先会计算一下校验和，判断数据是否被破坏。然后检查是否在按照序号接收数据。***检查端口号，确定具体的应用程序。数据被完整地接收以后，会传给由端口号识别的应用程序。</p><p>⑧ 应用程序的处理</p><p>接收端应用程序会直接接收发送端发送的数据。通过解析数据，展示相应的内容。</p><h2 id="三、传输层中的-TCP-和-UDP"><a href="#三、传输层中的-TCP-和-UDP" class="headerlink" title="三、传输层中的 TCP 和 UDP"></a>三、传输层中的 TCP 和 UDP</h2><p>TCP/IP 中有两个具有代表性的传输层协议，分别是 TCP 和 UDP。</p><ul><li>TCP 是面向连接的、可靠的流协议。流就是指不间断的数据结构，当应用程序采用 TCP 发送消息时，虽然可以保证发送的顺序，但还是犹如没有任何间隔的数据流发送给接收端。TCP 为提供可靠性传输，实行&amp;ldquo;顺序控制&amp;rdquo;或&amp;ldquo;重发控制&amp;rdquo;机制。此外还具备&amp;ldquo;流控制（流量控制）&amp;rdquo;、&amp;ldquo;拥塞控制&amp;rdquo;、提高网络利用率等众多功能。</li><li>UDP 是不具有可靠性的数据报协议。细微的处理它会交给上层的应用去完成。在 UDP 的情况下，虽然可以确保发送消息的大小，却不能保证消息一定会到达。因此，应用有时会根据自己的需要进行重发处理。</li><li>TCP 和 UDP 的优缺点无法简单地、绝对地去做比较：TCP 用于在传输层有必要实现可靠传输的情况；而在一方面，UDP 主要用于那些对高速传输和实时性有较高要求的通信或广播通信。TCP 和 UDP 应该根据应用的目的按需使用。</li></ul><p><strong>1. 端口号</strong></p><p>数据链路和 IP 中的地址，分别指的是 MAC 地址和 IP 地址。前者用来识别同一链路中不同的计算机，后者用来识别 TCP/IP 网络中互连的主机和路由器。在传输层也有这种类似于地址的概念，那就是端口号。端口号用来识别同一台计算机中进行通信的不同应用程序。因此，它也被称为程序地址。</p><p><strong>1.1 根据端口号识别应用</strong></p><p>一台计算机上同时可以运行多个程序。传输层协议正是利用这些端口号识别本机中正在进行通信的应用程序，并准确地将数据传输。</p><p>通过端口号识别应用</p><p><strong>1.2 通过 IP 地址、端口号、协议号进行通信识别</strong></p><ul><li>仅凭目标端口号识别某一个通信是远远不够的。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/b5365660969c04412663a89676037c2a.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/4abc87010b97139a5f8860c5b4d74592.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>通过端口号、IP地址、协议号进行通信识别</p><p>① 和② 的通信是在两台计算机上进行的。它们的目标端口号相同，都是80。这里可以根据源端口号加以区分。</p><p>③ 和 ① 的目标端口号和源端口号完全相同，但它们各自的源 IP 地址不同。</p><p>此外，当 IP 地址和端口号全都一样时，我们还可以通过协议号来区分（TCP 和 UDP）。</p><p><strong>1.3 端口号的确定</strong></p><ul><li>标准既定的端口号：这种方法也叫静态方法。它是指每个应用程序都有其指定的端口号。但并不是说可以随意使用任何一个端口号。例如 HTTP、FTP、TELNET 等广为使用的应用协议中所使用的端口号就是固定的。这些端口号被称为知名端口号，分布在 0<del>1023 之间；除知名端口号之外，还有一些端口号被正式注册，它们分布在 1024</del>49151 之间，不过这些端口号可用于任何通信用途。</li><li>时序分配法：服务器有必要确定监听端口号，但是接受服务的客户端没必要确定端口号。在这种方法下，客户端应用程序完全可以不用自己设置端口号，而全权交给操作系统进行分配。动态分配的端口号范围在 49152~65535 之间。</li></ul><p><strong>1.4 端口号与协议</strong></p><ul><li>端口号由其使用的传输层协议决定。因此，不同的传输层协议可以使用相同的端口号。</li><li>此外，那些知名端口号与传输层协议并无关系。只要端口一致都将分配同一种应用程序进行处理。</li></ul><ol start="2"><li>UDP</li></ol><ul><li>UDP 不提供复杂的控制机制，利用 IP 提供面向无连接的通信服务。</li><li>并且它是将应用程序发来的数据在收到的那一刻，立即按照原样发送到网络上的一种机制。即使是出现网络拥堵的情况，UDP 也无法进行流量控制等避免网络拥塞行为。</li><li>此外，传输途中出现丢包，UDP 也不负责重发。</li><li>甚至当包的到达顺序出现乱序时也没有纠正的功能。</li><li>如果需要以上的细节控制，不得不交由采用 UDP 的应用程序去处理。</li><li>UDP 常用于一下几个方面：1.包总量较少的通信（DNS、SNMP等）；2.视频、音频等多媒体通信（即时通信）；3.限定于 LAN 等特定网络中的应用通信；4.广播通信（广播、多播）。</li></ul><ol start="3"><li>TCP</li></ol><ul><li>TCP 与 UDP 的区别相当大。它充分地实现了数据传输时各种控制功能，可以进行丢包时的重发控制，还可以对次序乱掉的分包进行顺序控制。而这些在 UDP 中都没有。</li><li>此外，TCP 作为一种面向有连接的协议，只有在确认通信对端存在时才会发送数据，从而可以控制通信流量的浪费。</li><li>根据 TCP 的这些机制，在 IP 这种无连接的网络上也能够实现高可靠性的通信（ 主要通过检验和、序列号、确认应答、重发控制、连接管理以及窗口控制等机制实现）。</li></ul><p><strong>3.1 三次握手（重点）</strong></p><ul><li>TCP 提供面向有连接的通信传输。面向有连接是指在数据通信开始之前先做好两端之间的准备工作。</li><li>所谓三次握手是指建立一个 TCP 连接时需要客户端和服务器端总共发送三个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发。</li></ul><p>下面来看看三次握手的流程图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/7b09f56589ba71b99fad5aeae19f363d.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>三次握手</p><ul><li>***次握手：客户端将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给服务器端，客户端进入SYN_SENT状态，等待服务器端确认。</li><li>第二次握手：服务器端收到数据包后由标志位SYN=1知道客户端请求建立连接，服务器端将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给客户端以确认连接请求，服务器端进入SYN_RCVD状态。</li><li>第三次握手：客户端收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给服务器端，服务器端检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，客户端和服务器端进入ESTABLISHED状态，完成三次握手，随后客户端与服务器端之间可以开始传输数据了。</li></ul><p><strong>3.2 四次挥手（重点）</strong></p><ul><li>四次挥手即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发。</li><li>由于TCP连接是全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭。</li></ul><p>下面来看看四次挥手的流程图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f0adfc32f118133170ad1a48b5a2eb58.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>四次挥手</p><ul><li>中断连接端可以是客户端，也可以是服务器端。</li><li>***次挥手：客户端发送一个FIN=M，用来关闭客户端到服务器端的数据传送，客户端进入FIN_WAIT_1状态。意思是说”我客户端没有数据要发给你了”，但是如果你服务器端还有数据没有发送完成，则不必急着关闭连接，可以继续发送数据。</li><li>第二次挥手：服务器端收到FIN后，先发送ack=M+1，告诉客户端，你的请求我收到了，但是我还没准备好，请继续你等我的消息。这个时候客户端就进入FIN_WAIT_2 状态，继续等待服务器端的FIN报文。</li><li>第三次挥手：当服务器端确定数据已发送完成，则向客户端发送FIN=N报文，告诉客户端，好了，我这边数据发完了，准备好关闭连接了。服务器端进入LAST_ACK状态。</li><li>第四次挥手：客户端收到FIN=N报文后，就知道可以关闭连接了，但是他还是不相信网络，怕服务器端不知道要关闭，所以发送ack=N+1后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。服务器端收到ACK后，就知道可以断开连接了。客户端等待了2MSL后依然没有收到回复，则证明服务器端已正常关闭，那好，我客户端也可以关闭连接了。最终完成了四次握手。</li></ul><p><strong>上面是一方主动关闭，另一方被动关闭的情况，实际中还会出现同时发起主动关闭的情况。</strong></p><p>具体流程如下图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/d4d0fa887aa88281b11090c771159662.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>同时挥手</p><p><strong>3.3 通过序列号与确认应答提高可靠性</strong></p><ul><li>在 TCP 中，当发送端的数据到达接收主机时，接收端主机会返回一个已收到消息的通知。这个消息叫做确认应答（ACK）。当发送端将数据发出之后会等待对端的确认应答。如果有确认应答，说明数据已经成功到达对端。<strong>反之，则数据丢失的可能性很大</strong>。</li><li>在一定时间内没有等待到确认应答，发送端就可以认为数据已经丢失，并进行重发。由此，即使产生了丢包，仍然能够保证数据能够到达对端，实现可靠传输。</li><li>未收到确认应答并不意味着数据一定丢失。也有可能是数据对方已经收到，只是返回的确认应答在途中丢失。这种情况也会导致发送端误以为数据没有到达目的地而重发数据。</li><li>此外，也有可能因为一些其他原因导致确认应答延迟到达，在源主机重发数据以后才到达的情况也屡见不鲜。此时，源主机只要按照机制重发数据即可。</li><li>对于目标主机来说，反复收到相同的数据是不可取的。为了对上层应用提供可靠的传输，目标主机必须放弃重复的数据包。为此我们引入了序列号。</li><li><strong>序列号是按照顺序给发送数据的每一个字节（8位字节）都标上号码的编号。接收端查询接收数据 TCP 首部中的序列号和数据的长度，将自己下一步应该接收的序列号作为确认应答返送回去。通过序列号和确认应答号，TCP 能够识别是否已经接收数据，又能够判断是否需要接收，从而实现可靠传输。</strong></li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/88e571b0cec17ee0f212dfb5a9558702.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>序列号和确认应答</p><p><strong>3.4 重发超时的确定</strong></p><ul><li><strong>重发超时是指在重发数据之前，等待确认应答到来的那个特定时间间隔。</strong>如果超过这个时间仍未收到确认应答，发送端将进行数据重发。最理想的是，找到一个最小时间，它能保证&amp;ldquo;确认应答一定能在这个时间内返回&amp;rdquo;。</li><li>TCP 要求不论处在何种网络环境下都要提供高性能通信，并且无论网络拥堵情况发生何种变化，都必须保持这一特性。为此，它在每次发包时都会计算往返时间及其偏差。将这个往返时间和偏差时间相加，重发超时的时间就是比这个总和要稍大一点的值。</li><li>在 BSD 的 Unix 以及 Windows 系统中，超时都以0.5秒为单位进行控制，因此重发超时都是0.5秒的整数倍。不过，最初其重发超时的默认值一般设置为6秒左右。</li><li>数据被重发之后若还是收不到确认应答，则进行再次发送。此时，等待确认应答的时间将会以2倍、4倍的指数函数延长。</li><li>此外，<strong>数据也不会被</strong><em>、反复地重发。达到一定重发次数之后，如果仍没有任何确认应答返回，就会判断为网络或对端主机发生了异常，强制关闭连接。并且通知应用通信异常强行终止。</em>*</li></ul><p><strong>3.5 以段为单位发送数据</strong></p><ul><li>在建立 TCP 连接的同时，也可以确定发送数据包的单位，我们也可以称其为&amp;ldquo;<em><strong>消息长度&amp;rdquo;（MSS）。最理想的情况是，</strong></em>消息长度正好是 IP 中不会被分片处理的***数据长度。</li><li>TCP 在传送大量数据时，是以 MSS 的大小将数据进行分割发送。进行重发时也是以 MSS 为单位。</li><li>MSS 在三次握手的时候，在两端主机之间被计算得出。两端的主机在发出建立连接的请求时，会在 TCP 首部中写入 MSS 选项，告诉对方自己的接口能够适应的 MSS 的大小。然后会在两者之间选择一个较小的值投入使用。</li></ul><p><strong>3.6 利用窗口控制提高速度</strong></p><ul><li><p>TCP 以1个段为单位，每发送一个段进行一次确认应答的处理。这样的传输方式有一个缺点，就是包的往返时间越长通信性能就越低。</p></li><li><p>为解决这个问题，TCP 引入了窗口这个概念。确认应答不再是以每个分段，而是以更大的单位进行确认，转发时间将会被大幅地缩短。也就是说，发送端主机，在发送了一个段以后不必要一直等待确认应答，而是继续发送。如下图所示：</p></li><li><p>窗口控制</p></li><li><p>窗口大小就是指无需等待确认应答而可以继续发送数据的***值。上图中窗口大小为4个段。这个机制实现了使用大量的缓冲区，通过对多个段同时进行确认应答的功能。</p></li></ul><p><strong>3.7 滑动窗口控制</strong></p><p>滑动窗口</p><ul><li>上图中的窗口内的数据即便没有收到确认应答也可以被发送出去。不过，在整个窗口的确认应答没有到达之前，如果其中部分数据出现丢包，那么发送端仍然要负责重传。为此，发送端主机需要设置缓存保留这些待被重传的数据，直到收到他们的确认应答。</li><li>在滑动窗口以外的部分包括未发送的数据以及已经确认对端已收到的数据。当数据发出后若如期收到确认应答就可以不用再进行重发，此时数据就可以从缓存区清除。</li><li>收到确认应答的情况下，将窗口滑动到确认应答中的序列号的位置。这样可以顺序地将多个段同时发送提高通信性能。这种机制也别称为滑动窗口控制。</li></ul><p><strong>3.8 窗口控制中的重发控制</strong></p><p>在使用窗口控制中， 出现丢包一般分为两种情况：</p><p>① 确认应答未能返回的情况。在这种情况下，数据已经到达对端，是不需要再进行重发的，如下图：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/8e7aff97ff49a06c5ba30dc80fc08930.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>部分确认应答丢失</p><p>② 某个报文段丢失的情况。接收主机如果收到一个自己应该接收的序列号以外的数据时，会针对当前为止收到数据返回确认应答。如下图所示，当某一报文段丢失后，发送端会一直收到序号为1001的确认应答，因此，在窗口比较大，又出现报文段丢失的情况下，同一个序列号的确认应答将会被重复不断地返回。而发送端主机如果连续3次收到同一个确认应答，就会将其对应的数据进行重发。这种机制比之前提到的超时管理更加高效，因此也被称为高速重发控制。</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/c254cf5d196a1c00e915807edb5437fb.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><h2 id="四、网络层中的-IP-协议"><a href="#四、网络层中的-IP-协议" class="headerlink" title="四、网络层中的 IP 协议"></a>四、网络层中的 IP 协议</h2><ul><li>IP（IPv4、IPv6）相当于 OSI 参考模型中的第3层&amp;mdash;&amp;mdash;网络层。网络层的主要作用是&amp;ldquo;实现终端节点之间的通信&amp;rdquo;。这种终端节点之间的通信也叫&amp;ldquo;点对点通信&amp;rdquo;。</li><li>网络的下一层&amp;mdash;&amp;mdash;数据链路层的主要作用是在互连同一种数据链路的节点之间进行包传递。而一旦跨越多种数据链路，就需要借助网络层。网络层可以跨越不同的数据链路，即使是在不同的数据链路上也能实现两端节点之间的数据包传输。</li><li><strong>IP 大致分为三大作用模块，它们是 IP 寻址、路由（最终节点为止的转发）以及 IP 分包与组包。</strong></li></ul><p><strong>1. IP 地址</strong></p><p><strong>1.1 IP 地址概述</strong></p><ul><li>在计算机通信中，为了识别通信对端，必须要有一个类似于地址的识别码进行标识。在数据链路中的 MAC 地址正是用来标识同一个链路中不同计算机的一种识别码。</li><li>作为网络层的 IP ,也有这种地址信息，一般叫做 IP 地址。IP 地址用于在&amp;ldquo;连接到网络中的所有主机中识别出进行通信的目标地址&amp;rdquo;。因此，在 TCP/IP 通信中所有主机或路由器必须设定自己的 IP 地址。</li><li>不论一台主机与哪种数据链路连接，其 IP 地址的形式都保持不变。</li><li>IP 地址（IPv4 地址）由32位正整数来表示。IP 地址在计算机内部以二进制方式被处理。然而，由于我们并不习惯于采用二进制方式，我们将32位的 IP 地址以每8位为一组，分成4组，每组以 &amp;ldquo;.&amp;rdquo; 隔开，再将每组数转换成十进制数。如下：</li></ul><p><strong>1.2 IP 地址由网络和主机两部分标识组成</strong></p><ul><li>如下图，网络标识在数据链路的每个段配置不同的值。网络标识必须保证相互连接的每个段的地址不相重复。而相同段内相连的主机必须有相同的网络地址。IP 地址的&amp;ldquo;主机标识&amp;rdquo;则不允许在同一个网段内重复出现。由此，可以通过设置网络地址和主机地址，在相互连接的整个网络中保证每台主机的 IP 地址都不会相互重叠。即 IP 地址具有了唯一性。</li></ul><p>IP地址的主机标识</p><ul><li>如下图，IP 包被转发到途中某个路由器时，正是利用目标 IP 地址的网络标识进行路由。因为即使不看主机标识，只要一见到网络标识就能判断出是否为该网段内的主机。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/6bd79d8b235618f4a63c102a89387e2d.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>IP地址的网络标识</p><p><strong>1.3 IP 地址的分类</strong></p><ul><li><strong>IP 地址分为四个级别，分别为A类、B类、C类、D类。它根据 IP 地址中从第 1 位到第 4 位的比特列对其网络标识和主机标识进行区分。</strong></li><li><strong>A 类 IP 地址是首位以 &amp;ldquo;0&amp;rdquo; 开头的地址。</strong>从第 1 位到第 8 位是它的网络标识。用十进制表示的话，0.0.0.0~127.0.0.0 是 A 类的网络地址。A 类地址的后 24 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为16,777,214个。</li><li><strong>B 类 IP 地址是前两位 &amp;ldquo;10&amp;rdquo; 的地址。</strong>从第 1 位到第 16 位是它的网络标识。用十进制表示的话，128.0.0.0~191.255.0.0 是 B 类的网络地址。B 类地址的后 16 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为65,534个。</li><li><strong>C 类 IP 地址是前三位为 &amp;ldquo;110&amp;rdquo; 的地址。</strong>从第 1 位到第 24 位是它的网络标识。用十进制表示的话，192.0.0.0~223.255.255.0 是 C 类的网络地址。C 类地址的后 8 位相当于主机标识。因此，一个网段内可容纳的主机地址上限为254个。</li><li><strong>D 类 IP 地址是前四位为 &amp;ldquo;1110&amp;rdquo; 的地址。</strong>从第 1 位到第 32 位是它的网络标识。用十进制表示的话，224.0.0.0~239.255.255.255 是 D 类的网络地址。D 类地址没有主机标识，常用于多播。</li><li>在分配 IP 地址时关于主机标识有一点需要注意。即要用比特位表示主机地址时，不可以全部为 0 或全部为 1。因为全部为 0 只有在表示对应的网络地址或 IP 地址不可以获知的情况下才使用。而全部为 1 的主机通常作为广播地址。因此，在分配过程中，应该去掉这两种情况。这也是为什么 C 类地址每个网段最多只能有 254（ 2<sup>8</sup>&amp;nbsp;- 2 = 254）个主机地址的原因。</li></ul><p><strong>1.4 广播地址</strong></p><ul><li>广播地址用于在同一个链路中相互连接的主机之间发送数据包。将 IP 地址中的主机地址部分全部设置为 1，就成了广播地址。</li><li>广播分为本地广播和直接广播两种。在本网络内的广播叫做本地广播；在不同网络之间的广播叫做直接广播。</li></ul><p><strong>1.5 IP 多播</strong></p><ul><li><p>多播用于将包发送给特定组内的所有主机。由于其直接使用 IP 地址，因此也不存在可靠传输。</p></li><li><p>相比于广播，多播既可以穿透路由器，又可以实现只给那些必要的组发送数据包。请看下图：</p></li><li><p>IP 多播</p></li><li><p>多播使用 D 类地址。因此，如果从首位开始到第 4 位是 &amp;ldquo;1110&amp;rdquo;，就可以认为是多播地址。而剩下的 28 位可以成为多播的组编号。</p></li><li><p>此外， 对于多播，所有的主机（路由器以外的主机和终端主机）必须属于 224.0.0.1 的组，所有的路由器必须属于 224.0.0.2 的组。</p></li></ul><p><strong>1.6 子网掩码</strong></p><ul><li>现在一个 IP 地址的网络标识和主机标识已不再受限于该地址的类别，而是由一个叫做&amp;ldquo;子网掩码&amp;rdquo;的识别码通过子网网络地址细分出比 A 类、B 类、C 类更小粒度的网络。这种方式实际上就是将原来 A 类、B 类、C 类等分类中的主机地址部分用作子网地址，可以将原网络分为多个物理网络的一种机制。</li><li>子网掩码用二进制方式表示的话，也是一个 32 位的数字。它对应 IP 地址网络标识部分的位全部为 &amp;ldquo;1&amp;rdquo;，对应 IP 地址主机标识的部分则全部为 &amp;ldquo;0&amp;rdquo;。由此，一个 IP 地址可以不再受限于自己的类别，而是可以用这样的子网掩码自由地定位自己的网络标识长度。当然，子网掩码必须是 IP 地址的首位开始连续的 &amp;ldquo;1&amp;rdquo;。</li><li>对于子网掩码，目前有两种表示方式。***种是，将 IP 地址与子网掩码的地址分别用两行来表示。以 172.20.100.52 的前 26 位是网络地址的情况为例，如下：</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2cd6e3fd8f2c24e33f6ab2f8dce6efd4.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><ul><li>第二种表示方式是，在每个 IP 地址后面追加网络地址的位数用 &amp;ldquo;/ &amp;rdquo; 隔开</li></ul><p><strong>2. 路由</strong></p><ul><li>发送数据包时所使用的地址是网络层的地址，即 IP 地址。然而仅仅有 IP 地址还不足以实现将数据包发送到对端目标地址，在数据发送过程中还需要类似于&amp;ldquo;指明路由器或主机&amp;rdquo;的信息，以便真正发往目标地址。保存这种信息的就是路由控制表。</li><li>该路由控制表的形成方式有两种：一种是管理员手动设置，另一种是路由器与其他路由器相互交换信息时自动刷新。前者也叫做静态路由控制，而后者叫做动态路由控制。</li><li>IP 协议始终认为路由表是正确的。然后，IP 本身并没有定义制作路由控制表的协议。即 IP 没有制作路由控制表的机制。该表示由一个叫做&amp;ldquo;路由协议&amp;rdquo;的协议制作而成。</li></ul><p><strong>2.1 IP 地址与路由控制</strong></p><ul><li>IP 地址的网络地址部分用于进行路由控制。</li><li>路由控制表中记录着网络地址与下一步应该发送至路由器的地址。</li><li>在发送 IP 包时，首先要确定 IP 包首部中的目标地址，再从路由控制表中找到与该地址具有相同网络地址的记录，根据该记录将 IP 包转发给相应的下一个路由器。如果路由控制表中存在多条相同网络地址的记录，就选择一个最为吻合的网络地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f7196335235016e1f7486a8f34050f65.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>路由控制表与 IP 包发送</p><p><strong>3. IP 分包与组包</strong></p><ul><li>每种数据链路的***传输单元（MTU）都不尽相同，因为每个不同类型的数据链路的使用目的不同。使用目的不同，可承载的 MTU 也就不同。</li><li>任何一台主机都有必要对 IP 分片进行相应的处理。分片往往在网络上遇到比较大的报文无法一下子发送出去时才会进行处理。</li><li>经过分片之后的 IP 数据报在被重组的时候，只能由目标主机进行。路由器虽然做分片但不会进行重组。</li></ul><p><strong>3.1 路径 MTU 发现</strong></p><ul><li>分片机制也有它的不足。如路由器的处理负荷加重之类。因此，只要允许，是不希望由路由器进行 IP 数据包的分片处理的。</li><li>为了应对分片机制的不足，&amp;ldquo;路径 MTU 发现&amp;rdquo; 技术应运而生。路径 MTU 指的是，从发送端主机到接收端主机之间不需要分片是*** MTU 的大小。即路径中存在的所有数据链路中最小的 MTU 。</li><li>进行路径 MTU 发现，就可以避免在中途的路由器上进行分片处理，也可以在 TCP 中发送更大的包。</li></ul><p><strong>4. IPv6</strong></p><ul><li>IPv6（IP version 6）是为了根本解决 IPv4 地址耗尽的问题而被标准化的网际协议。IPv4 的地址长度为 4 个 8 位字节，即 32 比特。而 IPv6 的地址长度则是原来的 4 倍，即 128 比特，一般写成 8 个 16 位字节。</li></ul><p><strong>4.1 IPv6 的特点</strong></p><ul><li>IP 得知的扩大与路由控制表的聚合。</li><li>性能提升。包首部长度采用固定的值（40字节），不再采用首部检验码。简化首部结构，减轻路由器负担。路由器不再做分片处理。</li><li>支持即插即用功能。即使没有DHCP服务器也可以实现自动分配 IP 地址。</li><li>采用认证与加密功能。应对伪造 IP 地址的网络安全功能以及防止线路窃听的功能。</li><li>多播、Mobile IP 成为扩展功能。</li></ul><p><strong>4.2 IPv6 中 IP 地址的标记方法</strong></p><ul><li>一般人们将 128 比特 IP 地址以每 16 比特为一组，每组用冒号（&amp;ldquo;：&amp;rdquo;）隔开进行标记。</li><li>而且如果出现连续的 0 时还可以将这些 0 省略，并用两个冒号（&amp;ldquo;：：&amp;rdquo;）隔开。但是，一个 IP 地址中只允许出现一次两个连续的冒号。</li></ul><p><strong>4.3 IPv6 地址的结构</strong></p><ul><li>IPv6 类似 IPv4，也是通过 IP 地址的前几位标识 IP 地址的种类。</li><li>在互联网通信中，使用一种全局的单播地址。它是互联网中唯一的一个地址，不需要正式分配 IP 地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/ab4237bc8a7b577a112ad378b5559038.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p><strong>4.4 全局单播地址</strong></p><ul><li>全局单播地址是指世界上唯一的一个地址。它是互联网通信以及各个域内部通信中最为常用的一个 IPv6 地址。</li><li>格式如下图所示，现在 IPv6 的网络中所使用的格式为，n = 48，m = 16 以及 128 - n - m = 64。即前 64 比特为网络标识，后 64 比特为主机标识。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/f9bfdef073be77e2ddadd80549d19a83.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>全局单播地址</p><p><strong>4.5 链路本地单播地址</strong></p><ul><li>链路本地单播地址是指在同一个数据链路内唯一的地址。它用于不经过路由器，在同一个链路中的通信。通常接口 ID 保存 64 比特版的 MAC 地址。</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/5978f86afcbd2a720c6bd9229a196810.jpeg-wh_600x-s_2695201089.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>链路本地单播地址</p><p><strong>4.6 唯一本地地址</strong></p><ul><li>唯一本地地址是不进行互联网通信时所用的地址。</li><li>唯一本地地址虽然不会与互联网连接，但是也会尽可能地随机生成一个唯一的全局 ID。</li><li>L 通常被置为 1</li><li>全局 ID 的值随机决定</li><li>子网 ID 是指该域子网地址</li><li>接口 ID 即为接口的 ID</li></ul><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/446f67e636c944343808de6754155f62.jpeg-wh_600x-s_36418080.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>唯一本地地址</p><p><strong>4.7 IPv6 分段处理</strong></p><ul><li>IPv6 的分片处理只在作为起点的发送端主机上进行，路由器不参与分片。</li><li>IPv6 中最小 MTU 为 1280 字节，因此，在嵌入式系统中对于那些有一定系统资源限制的设备来说，不需要进行&amp;ldquo;路径 MTU 发现&amp;rdquo;，而是在发送 IP 包时直接以 1280 字节为单位分片送出。</li></ul><p><strong>4.8 IP 首部（暂略）</strong></p><p><strong>5. IP 协议相关技术</strong></p><ul><li>IP 旨在让最终目标主机收到数据包，但是在这一过程中仅仅有 IP 是无法实现通信的。必须还有能够解析主机名称和 MAC 地址的功能，以及数据包在发送过程中异常情况处理的功能。</li></ul><p><strong>5.1 DNS</strong></p><ul><li>我们平常在访问某个网站时不适用 IP 地址，而是用一串由罗马字和点号组成的字符串。而一般用户在使用 TCP/IP 进行通信时也不使用 IP 地址。能够这样做是因为有了 DNS （Domain Name System）功能的支持。DNS 可以将那串字符串自动转换为具体的 IP 地址。</li><li>这种 DNS 不仅适用于 IPv4，还适用于 IPv6。</li></ul><p><strong>5.2 ARP</strong></p><ul><li>只要确定了 IP 地址，就可以向这个目标地址发送 IP 数据报。然而，在底层数据链路层，进行实际通信时却有必要了解每个 IP 地址所对应的 MAC 地址。</li><li>ARP 是一种解决地址问题的协议。以目标 IP 地址为线索，用来定位下一个应该接收数据分包的网络设备对应的 MAC 地址。不过 ARP 只适用于 IPv4，不能用于 IPv6。IPv6 中可以用 ICMPv6 替代 ARP 发送邻居探索消息。</li><li>RARP 是将 ARP 反过来，从 MAC 地址定位 IP 地址的一种协议。</li></ul><p><strong>5.3 ICMP</strong></p><ul><li>ICMP 的主要功能包括，确认 IP 包是否成功送达目标地址，通知在发送过程当中 IP 包被废弃的具体原因，改善网络设置等。</li><li>IPv4 中 ICMP 仅作为一个辅助作用支持 IPv4。也就是说，在 IPv4 时期，即使没有 ICMP，仍然可以实现 IP 通信。然而，在 IPv6 中，ICMP 的作用被扩大，如果没有 ICMPv6，IPv6 就无法进行正常通信。</li></ul><p><strong>5.4 DHCP</strong></p><ul><li>如果逐一为每一台主机设置 IP 地址会是非常繁琐的事情。特别是在移动使用笔记本电脑、只能终端以及平板电脑等设备时，每移动到一个新的地方，都要重新设置 IP 地址。</li><li>于是，为了实现自动设置 IP 地址、统一管理 IP 地址分配，就产生了 DHCP（Dynamic Host Configuration Protocol）协议。有了 DHCP，计算机只要连接到网络，就可以进行 TCP/IP 通信。也就是说，DHCP 让即插即用变得可能。</li><li>DHCP 不仅在 IPv4 中，在 IPv6 中也可以使用。</li></ul><p><strong>5.5 NAT</strong></p><ul><li>NAT（Network Address Translator）是用于在本地网络中使用私有地址，在连接互联网时转而使用全局 IP 地址的技术。</li><li>除转换 IP 地址外，还出现了可以转换 TCP、UDP 端口号的 NAPT（Network Address Ports Translator）技术，由此可以实现用一个全局 IP 地址与多个主机的通信。</li><li>NAT（NAPT）实际上是为正在面临地址枯竭的 IPv4 而开发的技术。不过，在 IPv6 中为了提高网络安全也在使用 NAT，在 IPv4 和 IPv6 之间的相互通信当中常常使用 NAT-PT。</li></ul><p><strong>5.6 IP 隧道</strong></p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/65a040c9fc1b39941515e063e048d99e.jpeg" alt="太厉害了，终于有人能把TCP/IP 协议讲的明明白白了"></p><p>夹着 IPv4 网络的两个 IPv6 网络</p><ul><li>如上图的网络环境中，网络 A 与网络 B 之间无法直接进行通信，为了让它们之间正常通信，这时必须得采用 IP 隧道的功能。</li><li>IP 隧道可以将那些从网络 A 发过来的 IPv6 的包统合为一个数据，再为之追加一个 IPv4 的首部以后转发给网络 C。</li><li>一般情况下，紧接着 IP 首部的是 TCP 或 UDP 的首部。然而，现在的应用当中&amp;ldquo; IP 首部的后面还是 IP 首部&amp;rdquo;或者&amp;ldquo; IP 首部的后面是 IPv6 的首部&amp;rdquo;等情况与日俱增。这种在网络层的首部后面追加网络层首部的通信方法就叫做&amp;ldquo; IP 隧道&amp;rdq</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubantu搜狗输入法候选汉字乱码</title>
      <link href="/2021/12/02/ubantu-sou-gou-shu-ru-fa-hou-xuan-han-zi-luan-ma/"/>
      <url>/2021/12/02/ubantu-sou-gou-shu-ru-fa-hou-xuan-han-zi-luan-ma/</url>
      
        <content type="html"><![CDATA[<p>Ubantu搜狗输入法候选汉字乱码</p><p>可能原因，自己手贱删除了/etc/apt/sources.list.d中的fcitx的一个列表</p><p>&amp;nbsp;</p><p>解决方法：</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200813170919380-560000114.png"></p><p>&amp;nbsp;</p><p>&amp;nbsp;配置当前输入发，将搜狗输入法下移放在第二个位置（MDZZ）</p><p><img src="https://gitee.com/qianxunslimg/my-pic-go-img/raw/master/img/2092994-20200813171020437-1675339877.png"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
